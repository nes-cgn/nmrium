{"version":3,"file":"Exam.0ec32315.js","sources":["../../src/demo/views/Exam.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Molecule } from 'openchemlib/full';\nimport { useState, useEffect, useCallback } from 'react';\nimport { FaRegCopy, FaCheck } from 'react-icons/fa';\nimport { MF } from 'react-mf';\nimport { StructureEditor } from 'react-ocl/full';\n\nimport NMRium from '../../component/NMRium';\nimport { copyTextToClipboard } from '../../component/utility/Export';\n\nlet answers = JSON.parse(localStorage.getItem('nmrium-exams') || '{}');\n\nasync function loadData(file) {\n  const response = await fetch(file);\n  checkStatus(response);\n  const data = await response.json();\n  return data;\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nconst mainContainer = css`\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n  overflow: hidden;\n`;\n\nconst nmrContainer = css`\n  height: 50%;\n`;\n\nconst bottomContainer = css`\n  display: flex;\n  height: 50%;\n`;\n\nconst bottomRightContainer = css`\n  width: 50%;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`;\n\nconst mfCss = css`\n  height: 20%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  border: 1px dashed gray;\n`;\n\nconst resultContainer = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 80%;\n  position: relative;\n`;\n\nconst copyButton = css`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  width: 50px;\n  height: 40px;\n  outline: none;\n  border: none;\n  background-color: white;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: green;\n    color: white;\n  }\n`;\n\nconst structureEditor = css`\n  background-color: white;\n  flex: 1;\n  overflow: auto;\n`;\n\nconst showButton = css`\n  outline: none;\n  border: none;\n  border-top: 0.55px solid #c1c1c1;\n  border-bottom: 0.55px solid #c1c1c1;\n  color: #00b707;\n  font-weight: bold;\n  font-size: 12px;\n  padding: 5px;\n\n  &:hover {\n    color: white !important;\n    background-color: #00b707;\n  }\n`;\n\nconst titleCss = css`\n  text-transform: none;\n  margin: 0;\n  padding: 5px;\n  background-color: white;\n  font-size: 14px;\n  color: #3e3e3e;\n\n  p {\n    font-size: 10px;\n    margin: 0px;\n  }\n`;\n\nconst resultCss = css`\n  width: 50%;\n  height: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst styles = css`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  margin-left: 30px;\n  }\n`;\n\nconst CopyButton = ({ result }) => {\n  const [isCopied, setCopyFlag] = useState(false);\n\n  const saveToClipboardHandler = useCallback(() => {\n    void (async () => {\n      const success = await copyTextToClipboard(result);\n      setCopyFlag(success);\n      setTimeout(() => {\n        setCopyFlag(false);\n      }, 1000);\n    })();\n  }, [result]);\n\n  return (\n    <button type=\"button\" css={copyButton} onClick={saveToClipboardHandler}>\n      {isCopied ? <FaCheck /> : <FaRegCopy />}\n    </button>\n  );\n};\n\nexport default function Exam(props) {\n  const [data, setData] = useState<any>();\n  const [result, setResult] = useState<string | null>(null);\n  const [answerAreaVisible, showAnswerArea] = useState(false);\n\n  const { file, title, baseURL } = props;\n\n  const checkAnswer = useCallback(\n    (response) => {\n      if (data.answer) {\n        const MolResponse = Molecule.fromMolfile(response);\n        const idCodeResponse = MolResponse.getIDCode();\n        answers[data.answer.idCode] = idCodeResponse;\n        localStorage.setItem('nmrium-exams', JSON.stringify(answers));\n        setResult(MolResponse.toSmiles());\n      }\n    },\n    [data],\n  );\n\n  useEffect(() => {\n    if (file) {\n      void loadData(file).then((d) => {\n        const _d = JSON.parse(JSON.stringify(d).replace(/\\.\\/+?/g, baseURL));\n\n        if (_d?.molecules?.[0]?.molfile) {\n          const molecule = Molecule.fromMolfile(_d.molecules[0].molfile);\n          const idCode = molecule.getIDCode();\n          let currentAnswer = answers[idCode];\n\n          if (currentAnswer) {\n            currentAnswer = Molecule.fromIDCode(currentAnswer).toMolfile();\n          }\n          _d.answer = {\n            idCode,\n            currentAnswer,\n            mf: molecule.getMolecularFormula().formula,\n          };\n          setData(_d);\n        }\n      });\n    } else {\n      setData({});\n    }\n  }, [baseURL, file, props]);\n\n  const showAnswerAreaHander = useCallback(() => {\n    showAnswerArea((prev) => !prev);\n  }, []);\n\n  return (\n    <div css={styles}>\n      <p css={titleCss}>\n        <strong>Exercises: </strong>Determine the unknown structure for the\n        compound having the following NMR spectrum\n        <p>{title}</p>\n      </p>\n      <div css={mainContainer}>\n        <div\n          css={nmrContainer}\n          style={{ height: answerAreaVisible ? '50%' : 'calc(100% - 25px)' }}\n        >\n          <NMRium data={data} workspace=\"exercise\" />\n        </div>\n        <button css={showButton} type=\"button\" onClick={showAnswerAreaHander}>\n          {!answerAreaVisible ? 'Show answer area' : 'Hide answer area '}\n        </button>\n        <div\n          css={bottomContainer}\n          style={\n            answerAreaVisible\n              ? { height: '50%' }\n              : { height: '0%', visibility: 'hidden' }\n          }\n        >\n          <div css={structureEditor}>\n            <StructureEditor\n              svgMenu\n              fragment={false}\n              onChange={checkAnswer}\n              initialMolfile={data?.answer?.currentAnswer}\n            />\n          </div>\n          <div css={bottomRightContainer}>\n            <div css={mfCss}>\n              <MF\n                style={{ color: 'navy', fontSize: 30 }}\n                mf={data?.answer?.mf}\n              />\n            </div>\n            <div css={resultContainer}>\n              <CopyButton result={result} />\n              <div css={resultCss}>{result}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["answers","JSON","parse","localStorage","getItem","file","response","fetch","checkStatus","data","json","ok","Error","status","statusText","mainContainer","css","nmrContainer","bottomContainer","bottomRightContainer","mfCss","resultContainer","copyButton","structureEditor","showButton","titleCss","resultCss","styles","CopyButton","result","isCopied","setCopyFlag","useState","saveToClipboardHandler","useCallback","success","copyTextToClipboard","setTimeout","_jsx","props","setData","setResult","answerAreaVisible","showAnswerArea","title","baseURL","checkAnswer","answer","MolResponse","Molecule","fromMolfile","idCodeResponse","getIDCode","idCode","setItem","stringify","toSmiles","useEffect","loadData","then","d","_d","replace","molecules","molfile","molecule","currentAnswer","fromIDCode","toMolfile","mf","getMolecularFormula","formula","showAnswerAreaHander","prev","_jsxs","height","visibility","color","fontSize"],"mappings":"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"}