{"version":3,"file":"index.35209db7.js","sources":["../../vite/modulepreload-polyfill","../../src/demo/utility/menu.ts","../../src/demo/Sidebar.tsx","../../vite/preload-helper","../../src/demo/views/index.ts","../../src/demo/layouts/Admin.tsx","../../src/demo/layouts/SingleDisplayerLayout.tsx","../../src/demo/layouts/Main.tsx","../../src/demo/test/TestRoutes.tsx","../../src/index.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import { SubMenu, MenuItem } from 'rc-menu';\nimport { createElement, cloneElement } from 'react';\n\nfunction buildMenu(array: Array<any> = []) {\n  let menu: Array<any> = [];\n  for (const item of array) {\n    if (item.children && Array.isArray(item.children)) {\n      menu.push(getMenu(item.groupName, [item], []));\n    } else {\n      menu.push(\n        createElement(MenuItem, { key: item.title, ...item }, item.title),\n      );\n    }\n  }\n  return menu;\n}\n\nfunction getMenu(\n  key,\n  array: Array<any> = [],\n  nodes: Array<any> = [],\n  parentIndex = 0,\n) {\n  let _nodes = nodes;\n  let children: Array<any> = [];\n\n  if (parentIndex !== -1 && _nodes[parentIndex]) {\n    _nodes[parentIndex] = cloneElement(_nodes[parentIndex], {}, children);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-for-in-array\n  for (const index in array) {\n    if (array[index].children && Array.isArray(array[index].children)) {\n      const node = createElement(SubMenu, {\n        key: index + key,\n        title: array[index].groupName,\n      });\n      _nodes.push(node);\n      return getMenu(index + key, array[index].children, _nodes, 0);\n    } else {\n      children.push(\n        createElement(\n          MenuItem,\n          { key: index + key, ...array[index] },\n          array[index].title,\n        ),\n      );\n    }\n  }\n  return _nodes;\n}\n\nfunction mapTreeToFlatArray(array: Array<any> = []) {\n  let routes: Array<any> = [];\n  for (const item of array) {\n    if (item.children && Array.isArray(item.children)) {\n      routes = routes.concat(getFlatArray([item], []));\n    } else {\n      routes.push(item);\n    }\n  }\n  return routes;\n}\n\nfunction getFlatArray(inputArray: Array<any> = [], children: Array<any> = []) {\n  let _children = children;\n\n  for (const item of inputArray) {\n    if (item.children && Array.isArray(item.children)) {\n      return getFlatArray(item.children, _children);\n    } else {\n      children.push(item);\n    }\n  }\n  return _children;\n}\n\nfunction getKey(filePath = '') {\n  const match = new RegExp(/^(?<path>.*)\\/(?<file>[^/]*)$/g).exec(filePath);\n  let parentFolderName = '';\n  if (match) {\n    const parentPath = match[1].split('/');\n    parentFolderName =\n      parentPath.length > 2\n        ? parentPath[parentPath.length - 2] + parentPath[parentPath.length - 1]\n        : parentPath[parentPath.length - 1];\n  }\n  return parentFolderName + filePath.replace(/\\.|\\s|\\//g, '');\n}\n\nexport { buildMenu, getKey, mapTreeToFlatArray };\n","/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport Menu from 'rc-menu';\nimport { memo, useMemo } from 'react';\nimport 'rc-menu/assets/index.css';\nimport { FaBars } from 'react-icons/fa';\nimport { withRouter } from 'react-router-dom';\n\nimport { buildMenu, getKey } from './utility/menu';\n\nconst sidebarCss = css`\n  background: #2ca8ff;\n  position: fixed;\n  top: 0;\n  height: 100%;\n  bottom: 0;\n  left: 0;\n  z-index: 1031;\n`;\n\nconst sidebarOpenCss = css`\n  width: 260px;\n`;\n\nconst sidebarClosedCss = css`\n  width: 3%;\n`;\n\nconst menuBtCss = css`\n  margin-left: 4px;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  margin-right: 4px;\n  z-index: 7;\n  font-size: 18px;\n  background-color: transparent;\n  border: none !important;\n  height: 30px;\n  width: 30px;\n  padding: 1px 6px;\n\n  & svg {\n    fill: white;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:active {\n    background-color: rgba(0, 0, 0, 0.5);\n    border-radius: 50%;\n  }\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.2);\n    border-radius: 50%;\n  }\n`;\n\nconst logoCss = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 4;\n  border-bottom: 1px solid #eee;\n`;\n\nconst simpleTextCss = css`\n  text-transform: uppercase;\n  padding: 0.5rem 0;\n  display: block;\n  white-space: nowrap;\n  font-size: 1em;\n  color: #fff;\n  text-decoration: none;\n  font-weight: 400;\n  line-height: 30px;\n  overflow: hidden;\n`;\n\nconst logoNormalCss = css`\n  display: block;\n  opacity: 1;\n  transform: translateZ(0);\n`;\n\nconst sidebarWrapperCss = css`\n  position: relative;\n  height: calc(100vh - 75px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  width: 260px;\n  z-index: 4;\n  padding-bottom: 100px;\n`;\n\nfunction Sidebar(props) {\n  const routes = useMemo(() => {\n    return buildMenu(props.routes);\n  }, [props.routes]);\n\n  const subDisplay = props.menuIsClosed ? 'none' : 'block';\n\n  return (\n    <div\n      css={css(\n        sidebarCss,\n        props.menuIsClosed ? sidebarClosedCss : sidebarOpenCss,\n      )}\n    >\n      <div css={logoCss}>\n        <div style={{ display: subDisplay, padding: '0.5rem 0.7rem' }}>\n          <a css={css(simpleTextCss, logoNormalCss)}>NMRium</a>\n        </div>\n        <button type=\"button\" css={menuBtCss} onClick={props.onMenuToggle}>\n          <FaBars />\n        </button>\n      </div>\n      <div css={sidebarWrapperCss} style={{ display: subDisplay }}>\n        <Menu\n          onClick={(e) => {\n            props.history.push(\n              `/SamplesDashboard/${Math.random()\n                .toString(36)\n                .replace('0.', '')}/${\n                // @ts-expect-error This will be fixed by updating use of rc-menu\n                e.item.props.view + getKey(e.item.props.file)\n              }`,\n            );\n          }}\n          mode=\"inline\"\n        >\n          {routes}\n        </Menu>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(memo(Sidebar));\n","const scriptRel = 'modulepreload';const seen = {};const base = './';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import { lazy, memo } from 'react';\n\nexport const possibleViews = {\n  Exam: memo(lazy(() => import('./Exam'))),\n  Exercise: memo(lazy(() => import('./Exercise'))),\n  SingleView: memo(lazy(() => import('./SingleView'))),\n  Test: memo(lazy(() => import('./Test'))),\n  View: memo(lazy(() => import('./View'))),\n  TwoInstances: memo(lazy(() => import('./TwoInstances'))),\n  Teaching: memo(lazy(() => import('./Teaching'))),\n};\n","/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport { Suspense, StrictMode, useMemo, useState, useCallback } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Sidebar from '../Sidebar';\nimport { mapTreeToFlatArray, getKey } from '../utility/menu';\nimport { possibleViews } from '../views';\n\nconst mainPanelCss = css`\n  position: relative;\n  float: right;\n  height: 100%;\n  background-color: #ebecf1;\n`;\n\nconst mainPanelOpenCss = css`\n  width: calc(100% - 260px);\n`;\n\nconst mainPanelClosedCss = css`\n  width: 98%;\n  margin-left: 20px !important;\n`;\n\ninterface DashboardProps {\n  routes: any[];\n  baseURL: string;\n}\n\nexport function Dashboard(props: DashboardProps) {\n  const { routes = [], baseURL } = props;\n  const routesList = useMemo(() => mapTreeToFlatArray(routes), [routes]);\n  const [menuIsClosed, setMenuIsClosed] = useState(false);\n  const toggleMenu = useCallback(\n    () => setMenuIsClosed(!menuIsClosed),\n    [menuIsClosed],\n  );\n\n  return (\n    <div\n      style={{\n        position: 'relative',\n        top: 0,\n        height: '100vh',\n      }}\n    >\n      <Sidebar\n        {...props}\n        routes={routes}\n        menuIsClosed={menuIsClosed}\n        onMenuToggle={toggleMenu}\n      />\n      <div\n        css={css(\n          mainPanelCss,\n          menuIsClosed ? mainPanelClosedCss : mainPanelOpenCss,\n        )}\n      >\n        <StrictMode>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              {routesList.map((prop) => {\n                return (\n                  <Route\n                    path={`/SamplesDashboard/:id/${\n                      prop.view + getKey(prop.file)\n                    }`}\n                    render={(props) => (\n                      <RenderView {...props} prop={prop} baseURL={baseURL} />\n                    )}\n                    key={getKey(prop.file)}\n                  />\n                );\n              })}\n\n              {routesList.length > 0 && (\n                <Route\n                  path=\"/\"\n                  render={() => {\n                    const routeProp = routesList[0];\n                    const viewName = routeProp.view ? routeProp.view : 'View';\n                    const RenderedView = possibleViews[viewName];\n                    return <RenderedView {...routeProp[0]} />;\n                  }}\n                  key={getKey(routesList[0].file)}\n                />\n              )}\n            </Switch>\n          </Suspense>\n        </StrictMode>\n      </div>\n    </div>\n  );\n}\n\nfunction RenderView(props) {\n  const {\n    match: {\n      params: { id },\n    },\n    prop,\n    baseURL,\n  } = props;\n  const viewName = prop.view ? prop.view : 'View';\n  const RenderedView = possibleViews[viewName];\n  return (\n    <RenderedView key={id} {...prop} id={getKey(prop.file)} baseURL={baseURL} />\n  );\n}\n\nexport default Dashboard;\n","import { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { getKey } from '../utility/menu';\nimport { possibleViews } from '../views';\n\ninterface SingleDisplayerLayoutProps {\n  view: any;\n  patrh: any;\n  path: any;\n}\n\nexport default function SingleDisplayerLayout(\n  props: SingleDisplayerLayoutProps,\n) {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        top: 0,\n        height: '100vh',\n      }}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          display: 'block',\n          width: '99%',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          height: '100%',\n          backgroundColor: 'ebecf1',\n        }}\n      >\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route\n              path=\"/\"\n              render={(routeProps: any) => {\n                const {\n                  match: {\n                    params: { id },\n                  },\n                } = routeProps;\n                const viewName = props.view ? props.view : 'SingleView';\n\n                const RenderedView = possibleViews[viewName];\n\n                return (\n                  <RenderedView key={id} {...props} id={getKey(props.patrh)} />\n                );\n              }}\n              key={getKey(props.path)}\n            />\n          </Switch>\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState, useCallback, CSSProperties } from 'react';\nimport { MemoryRouter } from 'react-router-dom';\n\nimport routes from '../samples.json';\n\nimport AdminLayout from './Admin';\nimport SingleDisplayerLayout from './SingleDisplayerLayout';\n\nconst styles: Record<\n  | 'bodyContainer'\n  | 'container'\n  | 'normal'\n  | 'error'\n  | 'errorHeader'\n  | 'normalHeader'\n  | 'loadButton',\n  CSSProperties\n> = {\n  bodyContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: '#e3e3e3',\n  },\n  container: {\n    width: '30%',\n    height: '40%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '10px',\n    fontSize: '20px',\n    textAlign: 'center',\n  },\n  normal: {\n    backgroundColor: 'white',\n    color: 'black',\n  },\n  error: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  errorHeader: {\n    fontSize: '100px',\n  },\n  normalHeader: {\n    fontSize: '24px',\n  },\n  loadButton: {\n    fontSize: '12px',\n    padding: '12px 40px',\n    borderRadius: '10px',\n    border: '1px solid #c70000',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n  },\n};\n\nasync function loadData(url) {\n  const response = await fetch(url);\n  try {\n    checkStatus(response);\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    return null;\n  }\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nconst Main = (props) => {\n  const [data, setRoutes] = useState<{\n    isLoaded: boolean;\n    status: number;\n    routes?: Array<any>;\n    baseURL?: string;\n    path?: string;\n  }>({\n    isLoaded: false,\n    status: 200,\n    routes: [],\n  });\n\n  const [dashBoardType, setDashBoardType] = useState('');\n\n  const loadHandler = useCallback(() => {\n    setRoutes({ isLoaded: true, status: 200, routes: routes });\n  }, []);\n\n  const getFileExtension = (url = '') => {\n    return url.substring(url.lastIndexOf('.') + 1);\n  };\n\n  const href = window.location.href;\n  useEffect(() => {\n    const qs = new URL(href).searchParams;\n    if (qs.has('sampleURL')) {\n      const sampleURL = qs.get('sampleURL');\n      if (!sampleURL) return;\n\n      const extention = getFileExtension(sampleURL).toLowerCase();\n      switch (extention) {\n        case 'json': {\n          setDashBoardType('multi');\n          void loadData(sampleURL).then((remoteRoutes) => {\n            if (remoteRoutes) {\n              const baseURL = sampleURL.replace(\n                /^(?<url>.*[\\\\/])?(?<filename>.*?\\.[^.]*?|)$/g,\n                '$1',\n              );\n\n              const _remoteRoutes = JSON.parse(\n                JSON.stringify(remoteRoutes).replace(/\\.\\/+?/g, baseURL),\n              );\n              setRoutes({\n                isLoaded: true,\n                status: 200,\n                routes: _remoteRoutes,\n                baseURL,\n              });\n            } else {\n              setRoutes({ isLoaded: false, status: 404, routes: [] });\n            }\n          });\n          break;\n        }\n        case 'dx':\n        case 'jdx': {\n          setDashBoardType('single');\n          setRoutes({\n            isLoaded: true,\n            status: 200,\n            path: sampleURL,\n          });\n\n          break;\n        }\n\n        default:\n          break;\n      }\n    } else {\n      setDashBoardType('multi');\n      setRoutes({ isLoaded: true, status: 200, routes: routes, baseURL: './' });\n    }\n  }, [href]);\n\n  return !data.isLoaded ? (\n    <div style={styles.bodyContainer}>\n      <div\n        style={{\n          ...styles.container,\n          ...(data.status === 200 ? styles.normal : styles.error),\n        }}\n      >\n        {data.status === 200 ? (\n          <div>\n            <p style={styles.normalHeader}>Please wait</p>\n            <p>We will redirect you in a minute</p>\n          </div>\n        ) : (\n          <div>\n            <p style={styles.errorHeader}>404</p>\n            <p>Resource not found.</p>\n            <button\n              style={styles.loadButton}\n              type=\"button\"\n              onClick={loadHandler}\n            >\n              Load local samples\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  ) : dashBoardType && dashBoardType === 'single' ? (\n    <SingleDisplayerLayout {...props} path={data.path} />\n  ) : (\n    <MemoryRouter>\n      <AdminLayout {...props} routes={data.routes} baseURL={data.baseURL} />\n    </MemoryRouter>\n  );\n};\n\nexport default Main;\n","import { lazy, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nconst TestHighlight = lazy(() => import('./TestHighlight'));\n\nexport default function TestRoutes() {\n  return (\n    <Suspense fallback={null}>\n      <Switch>\n        <Route path=\"/test/highlight\" component={TestHighlight} />\n        <Route render={() => <div>Page not found</div>} />\n      </Switch>\n    </Suspense>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Main from './demo/layouts/Main';\nimport TestRoutes from './demo/test/TestRoutes';\n\n// Reset styles so they do not affect development of the React component.\nimport 'modern-normalize/modern-normalize.css';\nimport './demo/preflight.css';\n\nimport './demo/index.css';\n\nReactDOM.render(\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" render={(props) => <Main {...props} />} />\n      <Route path=\"/test\" component={TestRoutes} />\n    </Switch>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"names":["createElement","cloneElement","sidebarCss","css","sidebarOpenCss","sidebarClosedCss","menuBtCss","logoCss","simpleTextCss","logoNormalCss","sidebarWrapperCss","props","routes","useMemo","buildMenu","subDisplay","menuIsClosed","_jsxs","_jsx","display","padding","onMenuToggle","Menu","e","history","push","Math","random","toString","replace","item","view","getKey","file","withRouter","memo","Sidebar","lazy","mainPanelCss","mainPanelOpenCss","mainPanelClosedCss","baseURL","routesList","mapTreeToFlatArray","setMenuIsClosed","useState","toggleMenu","useCallback","position","top","height","StrictMode","Suspense","map","prop","length","routeProp","viewName","RenderedView","possibleViews","match","params","id","width","marginLeft","marginRight","backgroundColor","routeProps","patrh","path","styles","bodyContainer","justifyContent","alignItems","container","borderRadius","fontSize","textAlign","normal","color","error","errorHeader","normalHeader","loadButton","border","fontWeight","cursor","url","response","fetch","json","ok","Error","status","statusText","Main","data","setRoutes","isLoaded","dashBoardType","setDashBoardType","loadHandler","getFileExtension","substring","lastIndexOf","href","window","location","qs","URL","searchParams","has","sampleURL","get","toLowerCase","loadData","then","remoteRoutes","_remoteRoutes","JSON","parse","stringify","AdminLayout","TestHighlight","ReactDOM","render","TestRoutes","document","getElementById"],"mappings":"+jBAAA,KAAM,GAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,mnFCvCtB,WAAmB,EAAoB,GAAI,IACrC,GAAmB,YACZ,KAAQ,GACb,EAAK,UAAY,MAAM,QAAQ,EAAK,YACjC,KAAK,EAAQ,EAAK,UAAW,CAAC,GAAO,OAErC,KACHA,wBAAc,EAAU,GAAE,IAAK,EAAK,OAAU,GAAQ,EAAK,cAI1D,GAGT,WACE,EACA,EAAoB,GACpB,EAAoB,GACpB,EAAc,EACd,IACI,GAAS,EACT,EAAuB,GAEvB,IAAgB,IAAM,EAAO,OACxB,GAAeC,uBAAa,EAAO,GAAc,GAAI,aAInD,KAAS,MACd,EAAM,GAAO,UAAY,MAAM,QAAQ,EAAM,GAAO,UAAW,MAC3D,GAAOD,wBAAc,EAAS,CAClC,IAAK,EAAQ,EACb,MAAO,EAAM,GAAO,qBAEf,KAAK,GACL,EAAQ,EAAQ,EAAK,EAAM,GAAO,SAAU,EAAQ,UAElD,KACPA,wBACE,EACA,GAAE,IAAK,EAAQ,GAAQ,EAAM,IAC7B,EAAM,GAAO,cAKd,GAGT,WAA4B,EAAoB,GAAI,IAC9C,GAAqB,YACd,KAAQ,GACb,EAAK,UAAY,MAAM,QAAQ,EAAK,YAC7B,EAAO,OAAO,EAAa,CAAC,GAAO,OAErC,KAAK,SAGT,GAGT,WAAsB,EAAyB,GAAI,EAAuB,GAAI,IACxE,GAAY,WAEL,KAAQ,GAAY,IACzB,EAAK,UAAY,MAAM,QAAQ,EAAK,gBAC/B,GAAa,EAAK,SAAU,KAE1B,KAAK,SAGX,GAGT,WAAgB,EAAW,GAAI,MACvB,GAAQ,GAAI,QAAO,kCAAkC,KAAK,MAC5D,GAAmB,MACnB,EAAO,MACH,GAAa,EAAM,GAAG,MAAM,OAEhC,EAAW,OAAS,EAChB,EAAW,EAAW,OAAS,GAAK,EAAW,EAAW,OAAS,GACnE,EAAW,EAAW,OAAS,SAEhC,GAAmB,EAAS,QAAQ,YAAa,IC5E1D,KAAME,GAAaC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAUbC,EAAiBD;AAAAA;AAAAA,EAIjBE,EAAmBF;AAAAA;AAAAA,EAInBG,EAAYH;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA+BZI,EAAUJ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQVK,GAAgBL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAahBM,GAAgBN;AAAAA;AAAAA;AAAAA;AAAAA,EAMhBO,GAAoBP;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAU1B,YAAiBQ,EAAO,MAChBC,GAASC,kBAAQ,IACdC,EAAUH,EAAMC,QACtB,CAACD,EAAMC,SAEJG,EAAaJ,EAAMK,aAAe,OAAS,cAG/CC,UACE,IAAKd,EACHD,EACAS,EAAMK,aAAeX,EAAmBD,aAG1Ca,SAAK,IAAKV,YACRW,SAAK,MAAO,CAAEC,QAASJ,EAAYK,QAAS,0BAC1CF,OAAG,IAAKf,EAAIK,GAAeC,0BAE7BS,YAAQ,KAAK,SAAS,IAAKZ,EAAW,QAASK,EAAMU,sBACnDH,EAAC,WAGLA,SAAK,IAAKR,GAAmB,MAAO,CAAES,QAASJ,YAC7CG,EAACI,GACC,QAAUC,GAAM,GACRC,QAAQC,KACX,qBAAoBC,KAAKC,SACvBC,SAAS,IACTC,QAAQ,KAAM,OAEfN,EAAEO,KAAKnB,MAAMoB,KAAOC,EAAOT,EAAEO,KAAKnB,MAAMsB,UAI9C,KAAK,kBAEJrB,SAOX,OAAesB,EAAWC,eAAKC,KC5I/B,KAAM,IAAY,gBAAsB,EAAO,GAAS,GAAO,KAAkB,EAAgB,SAAiB,EAAY,EAAM,CAEhI,MAAI,AAAuB,CAAC,GAAQ,EAAK,SAAW,EACzC,IAEJ,QAAQ,IAAI,EAAK,IAAI,AAAC,GAAQ,CAIjC,GAFA,EAAM,GAAG,KAAO,IAEZ,IAAO,GACP,OAEJ,EAAK,GAAO,GACZ,KAAM,GAAQ,EAAI,SAAS,QACrB,EAAc,EAAQ,qBAAuB,GAEnD,GAAI,SAAS,cAAc,cAAc,MAAQ,KAC7C,OAGJ,KAAM,GAAO,SAAS,cAAc,QAUpC,GARA,EAAK,IAAM,EAAQ,aAAe,GAC7B,GACD,GAAK,GAAK,SACV,EAAK,YAAc,IAEvB,EAAK,KAAO,EAEZ,SAAS,KAAK,YAAY,GACtB,EACA,MAAO,IAAI,SAAQ,CAAC,EAAK,IAAQ,CAC7B,EAAK,iBAAiB,OAAQ,GAC9B,EAAK,iBAAiB,QAAS,QAGvC,KAAK,IAAM,MClCN,EAAgB,CAC3B,KAAMD,eAAKE,eAAK,IAAM,yDACtB,SAAUF,eAAKE,eAAK,IAAM,6DAC1B,WAAYF,eAAKE,eAAK,IAAM,+DAC5B,KAAMF,eAAKE,eAAK,IAAM,yDACtB,KAAMF,eAAKE,eAAK,IAAM,yDACtB,aAAcF,eAAKE,eAAK,IAAM,iEAC9B,SAAUF,eAAKE,eAAK,IAAM,8DCCtBC,GAAenC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAOfoC,GAAmBpC;AAAAA;AAAAA,EAInBqC,GAAqBrC;AAAAA;AAAAA;AAAAA,cAUDQ,EAAuB,MACzC,CAAEC,SAAS,GAAI6B,WAAY9B,EAC3B+B,EAAa7B,kBAAQ,IAAM8B,EAAmB/B,GAAS,CAACA,IACxD,CAACI,EAAc4B,GAAmBC,mBAAS,IAC3CC,EAAaC,sBACjB,IAAMH,EAAgB,CAAC5B,GACvB,CAACA,UAIDC,UACE,MAAO,CACL+B,SAAU,WACVC,IAAK,EACLC,OAAQ,mBAGVhC,EAACkB,UACKzB,IACJ,SACA,eACA,aAAcmC,KAEhB5B,SACE,IAAKf,EACHmC,GACAtB,EAAewB,GAAqBD,aAGtCrB,EAACiC,+BACCjC,EAACkC,oBAAS,SAAUlC,0CAClBD,EAAC,aACEyB,EAAWW,IAAKC,GAEbpC,EAAC,GACC,KAAO,yBACLoC,EAAKvB,KAAOC,EAAOsB,EAAKrB,QAE1B,OAAStB,GACPO,EAAC,UAAeP,IAAO,OAAY,cAEhCqB,EAAOsB,EAAKrB,QAKtBS,EAAWa,OAAS,GACnBrC,EAAC,GACC,KAAK,IACL,OAAQ,IAAM,MACNsC,GAAYd,EAAW,GACvBe,EAAWD,EAAUzB,KAAOyB,EAAUzB,KAAO,OAC7C2B,EAAeC,EAAcF,SAC5BvC,GAAC,OAAiBsC,EAAU,OAEhCxB,EAAOU,EAAW,GAAGT,mBAW5C,YAAoBtB,EAAO,MACnB,CACJiD,MAAO,CACLC,OAAQ,CAAEC,OAEZR,OACAb,WACE9B,EACE8C,EAAWH,EAAKvB,KAAOuB,EAAKvB,KAAO,OACnC2B,EAAeC,EAAcF,SAEjCvC,GAAC,SAA0BoC,IAAM,GAAItB,EAAOsB,EAAKrB,MAAO,YAArC6B,eC/FrBnD,EACA,iBAGI,MAAO,CACLqC,SAAU,WACVC,IAAK,EACLC,OAAQ,2BAIR,MAAO,CACLF,SAAU,WACV7B,QAAS,QACT4C,MAAO,MACPC,WAAY,OACZC,YAAa,OACbf,OAAQ,OACRgB,gBAAiB,qBAGlBd,oBAAS,qDACP,cACE,GACC,KAAK,IACL,OAAQ,AAACe,GAAoB,MACrB,CACJP,MAAO,CACLC,OAAQ,CAAEC,QAEVK,EACEV,EAAW9C,EAAMoB,KAAOpB,EAAMoB,KAAO,aAErC2B,EAAeC,EAAcF,YAGhC,SAA0B9C,IAAO,GAAIqB,EAAOrB,EAAMyD,SAAhCN,KAGlB9B,EAAOrB,EAAM0D,eC5ChC,KAAMC,GASF,CACFC,cAAe,CACbpD,QAAS,OACTqD,eAAgB,SAChBC,WAAY,SACZvB,OAAQ,QACRa,MAAO,QACPG,gBAAiB,WAEnBQ,UAAW,CACTX,MAAO,MACPb,OAAQ,MACR/B,QAAS,OACTsD,WAAY,SACZD,eAAgB,SAChBG,aAAc,OACdC,SAAU,OACVC,UAAW,UAEbC,OAAQ,CACNZ,gBAAiB,QACjBa,MAAO,SAETC,MAAO,CACLd,gBAAiB,MACjBa,MAAO,SAETE,YAAa,CACXL,SAAU,SAEZM,aAAc,CACZN,SAAU,QAEZO,WAAY,CACVP,SAAU,OACVxD,QAAS,YACTuD,aAAc,OACdS,OAAQ,oBACRC,WAAY,OACZC,OAAQ,YAIZ,kBAAwBC,EAAK,MACrBC,GAAW,KAAMC,OAAMF,MACzB,WACUC,GACC,KAAMA,GAASE,aAErBnE,kBAECyD,MAAMzD,GACP,MAIX,YAAqBiE,EAAU,IACzB,CAACA,EAASG,QACN,IAAIC,OAAO,QAAOJ,EAASK,YAAYL,EAASM,oBAEjDN,GAGT,KAAMO,IAAQpF,GAAU,MAChB,CAACqF,EAAMC,GAAapD,mBAMvB,CACDqD,SAAU,GACVL,OAAQ,IACRjF,OAAQ,KAGJ,CAACuF,EAAeC,GAAoBvD,mBAAS,IAE7CwD,EAActD,sBAAY,IAAM,GAC1B,CAAEmD,SAAU,GAAML,OAAQ,IAAKjF,YACxC,IAEG0F,EAAmB,CAACf,EAAM,KACvBA,EAAIgB,UAAUhB,EAAIiB,YAAY,KAAO,GAGxCC,EAAOC,OAAOC,SAASF,gCACnB,IAAM,MACRG,GAAK,GAAIC,KAAIJ,GAAMK,gBACrBF,EAAGG,IAAI,aAAc,MACjBC,GAAYJ,EAAGK,IAAI,gBACrB,CAACD,gBAEaV,EAAiBU,GAAWE,mBAEvC,UACc,SACZC,GAASH,GAAWI,KAAMC,GAAiB,IAC1CA,EAAc,MACV5E,GAAUuE,EAAUnF,QACxB,+CACA,MAGIyF,EAAgBC,KAAKC,MACzBD,KAAKE,UAAUJ,GAAcxF,QAAQ,UAAWY,MAExC,CACRyD,SAAU,GACVL,OAAQ,IACRjF,OAAQ0G,EACR7E,mBAGQ,CAAEyD,SAAU,GAAOL,OAAQ,IAAKjF,OAAQ,iBAKnD,SACA,SACc,YACP,CACRsF,SAAU,GACVL,OAAQ,IACRxB,KAAM2C,mBAUK,WACP,CAAEd,SAAU,GAAML,OAAQ,IAAKjF,SAAgB6B,QAAS,QAEnE,CAACgE,IAEG,AAACT,EAAKE,SA4BTC,GAAiBA,IAAkB,WACpC,UAA0BxF,IAAO,KAAMqF,EAAK3B,UAE5C,cACEqD,UAAgB/G,IAAO,OAAQqF,EAAKpF,OAAQ,QAASoF,EAAKvD,sBA/BxD,MAAO6B,EAAOC,gCAEf,MAAO,OACFD,EAAOI,WACNsB,EAAKH,SAAW,IAAMvB,EAAOQ,OAASR,EAAOU,gBAGlDgB,EAAKH,SAAW,8BAEV,MAAOvB,EAAOY,wHAKd,MAAOZ,EAAOW,iFAGf,MAAOX,EAAOa,WACd,KAAK,SACL,QAASkB,0CC9KjBsB,GAAgBtF,eAAK,IAAM,8EAEI,UAEhCe,oBAAS,SAAU,gBACjB,eACE,GAAM,KAAK,kBAAkB,UAAWuE,OACxC,GAAM,OAAQ,gDCEvBC,EAASC,SACN,cACE,eACE,GAAM,KAAK,IAAI,OAASlH,KAAW,QAASA,QAC5C,GAAM,KAAK,QAAQ,UAAWmH,UAGnCC,SAASC,eAAe"}