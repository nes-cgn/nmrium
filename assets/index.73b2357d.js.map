{"version":3,"file":"index.73b2357d.js","sources":["../../src/component/highlight/index.tsx"],"sourcesContent":["import {\n  createContext,\n  useReducer,\n  useMemo,\n  useContext,\n  useCallback,\n  useEffect,\n} from 'react';\n\nexport const TYPES = {\n  PEAK: 'PEAK',\n  INTEGRAL: 'INTEGRAL',\n  SIGNAL: 'SIGNAL',\n  RANGE: 'RANGE',\n  ZONE: 'ZONE',\n  EXCLUSION_ZONE: 'EXCLUSION_ZONE',\n};\n\nconst emptyState = {\n  highlights: {},\n  highlighted: [],\n  highlightedPermanently: [],\n  type: null,\n};\n\nconst highlightContext = createContext<any>(emptyState);\n\nfunction highlightReducer(state, action) {\n  switch (action.type) {\n    case 'SHOW': {\n      const { convertedHighlights, type } = action.payload;\n      const newState = {\n        ...state,\n        highlights: { ...state.highlights },\n        type,\n      };\n      for (const value of convertedHighlights) {\n        if (!(value in newState.highlights)) {\n          newState.highlights[value] = 1;\n        }\n      }\n      newState.highlighted = Object.keys(newState.highlights);\n\n      return newState;\n    }\n    case 'HIDE': {\n      const { convertedHighlights } = action.payload;\n\n      const newState = {\n        ...state,\n        highlights: { ...state.highlights },\n        type: null,\n      };\n      for (const value of convertedHighlights) {\n        if (value in newState.highlights) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete newState.highlights[value];\n        }\n      }\n      newState.highlighted = Object.keys(newState.highlights);\n      return newState;\n    }\n    case 'SET_PERMANENT': {\n      const newState = {\n        ...state,\n        // allow just one permanent highlights group at same time\n        highlightedPermanently: action.payload,\n      };\n\n      return newState;\n    }\n    case 'UNSET_PERMANENT': {\n      const newState = {\n        ...state,\n        highlightedPermanently: [],\n      };\n\n      return newState;\n    }\n    default: {\n      throw new Error(`unknown action type: ${action.type}`);\n    }\n  }\n}\n\nexport function HighlightProvider(props) {\n  const [highlight, dispatch] = useReducer(highlightReducer, emptyState);\n  const contextValue = useMemo(() => ({ highlight, dispatch }), [highlight]);\n  return (\n    <highlightContext.Provider value={contextValue}>\n      {props.children}\n    </highlightContext.Provider>\n  );\n}\n\nexport function useHighlightData() {\n  return useContext(highlightContext);\n}\n\nexport function useHighlight(highlights, type: string | null = null) {\n  if (!Array.isArray(highlights)) {\n    throw new Error('highlights must be an array');\n  }\n  const { dispatch, highlight } = useHighlightData();\n\n  const convertedHighlights = useMemo(() => {\n    const newHighlights: Array<any> = [];\n    for (const highlight of highlights) {\n      if (typeof highlight !== 'string' && typeof highlight !== 'number') {\n        throw new Error(`highlight key must be a string or number`);\n      }\n      if (highlight !== '') {\n        newHighlights.push(String(highlight));\n      }\n    }\n    return newHighlights;\n  }, [highlights]);\n\n  useEffect(() => {\n    // if deletion of component then also delete its highlight information -> componentWillUnmount\n    return () => {\n      dispatch({\n        type: 'HIDE',\n        payload: { convertedHighlights: [] },\n      });\n      dispatch({\n        type: 'UNSET_PERMANENT',\n      });\n    };\n  }, [dispatch]);\n\n  const isActive = useMemo(() => {\n    return highlight.highlighted.some((key) =>\n      convertedHighlights.includes(key),\n    );\n  }, [convertedHighlights, highlight.highlighted]);\n\n  const isActivePermanently = useMemo(() => {\n    return highlight.highlightedPermanently.some((key) =>\n      convertedHighlights.includes(key),\n    );\n  }, [convertedHighlights, highlight.highlightedPermanently]);\n\n  const show = useCallback(() => {\n    dispatch({\n      type: 'SHOW',\n      payload: {\n        convertedHighlights,\n        type,\n      },\n    });\n  }, [convertedHighlights, dispatch, type]);\n\n  const hide = useCallback(() => {\n    dispatch({\n      type: 'HIDE',\n      payload: {\n        convertedHighlights,\n      },\n    });\n  }, [convertedHighlights, dispatch]);\n\n  const add = useCallback(\n    (id) => {\n      dispatch({\n        type: 'SHOW',\n        payload: { convertedHighlights: [], id },\n      });\n    },\n    [dispatch],\n  );\n\n  const remove = useCallback(\n    (id) => {\n      dispatch({\n        type: 'HIDE',\n        payload: { convertedHighlights: [], id },\n      });\n    },\n    [dispatch],\n  );\n\n  const click = useCallback(\n    (e) => {\n      if (e) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      if (!isActivePermanently) {\n        dispatch({\n          type: 'SET_PERMANENT',\n          payload: convertedHighlights,\n        });\n      } else {\n        dispatch({\n          type: 'UNSET_PERMANENT',\n        });\n      }\n    },\n    [convertedHighlights, dispatch, isActivePermanently],\n  );\n\n  return useMemo(() => {\n    return {\n      isActive,\n      onHover: {\n        onMouseEnter: show,\n        onMouseLeave: hide,\n      },\n      onClick: click,\n      show,\n      hide,\n      isActivePermanently,\n      click,\n      add,\n      remove,\n    };\n  }, [add, click, hide, isActive, isActivePermanently, remove, show]);\n}\n"],"names":["TYPES","PEAK","INTEGRAL","SIGNAL","RANGE","ZONE","EXCLUSION_ZONE","emptyState","highlights","highlighted","highlightedPermanently","type","highlightContext","createContext","state","action","convertedHighlights","payload","newState","value","Object","keys","Error","props","highlight","dispatch","useReducer","highlightReducer","contextValue","useMemo","children","useContext","Array","isArray","useHighlightData","newHighlights","push","String","isActive","some","key","includes","isActivePermanently","show","useCallback","hide","add","id","remove","click","e","preventDefault","stopPropagation","onHover","onMouseEnter","onMouseLeave","onClick"],"mappings":"keASaA,GAAQ,CACnBC,KAAM,OACNC,SAAU,WACVC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,eAAgB,kBAGZC,EAAa,CACjBC,WAAY,GACZC,YAAa,GACbC,uBAAwB,GACxBC,KAAM,MAGFC,EAAmBC,wBAAmBN,GAE5C,WAA0BO,EAAOC,EAAQ,QAC/BA,EAAOJ,UACR,aACG,CAAEK,sBAAqBL,QAASI,EAAOE,QACvCC,EAAW,OACZJ,GADY,CAEfN,WAAY,KAAKM,EAAMN,YACvBG,kBAESQ,KAASH,OACHE,GAASV,eACbA,WAAWW,GAAS,YAGxBV,YAAcW,OAAOC,KAAKH,EAASV,YAErCU,MAEJ,aACG,CAAEF,uBAAwBD,EAAOE,QAEjCC,EAAW,OACZJ,GADY,CAEfN,WAAY,KAAKM,EAAMN,YACvBG,KAAM,gBAEGQ,KAASH,GACdG,IAASD,GAASV,kBAEbU,GAASV,WAAWW,YAGtBV,YAAcW,OAAOC,KAAKH,EAASV,YACrCU,MAEJ,sBACc,QACZJ,GADY,CAGfJ,uBAAwBK,EAAOE,cAK9B,wBACc,QACZH,GADY,CAEfJ,uBAAwB,kBAMpB,IAAIY,OAAO,wBAAuBP,EAAOJ,oBAKnBY,EAAO,MACjC,CAACC,EAAWC,GAAYC,qBAAWC,EAAkBpB,GACrDqB,EAAeC,kBAAQ,MAASL,YAAWC,aAAa,CAACD,aAE5D,EAAiB,UAAS,MAAOI,WAC/BL,EAAMO,uBAKsB,OAC1BC,sBAAWnB,cAGSJ,EAAYG,EAAsB,KAAM,IAC/D,CAACqB,MAAMC,QAAQzB,QACX,IAAIc,OAAM,oCAEZ,CAAEG,WAAUD,aAAcU,IAE1BlB,EAAsBa,kBAAQ,IAAM,MAClCM,GAA4B,YACvBX,KAAahB,GAAY,IAC9B,MAAOgB,IAAc,UAAY,MAAOA,IAAc,cAClD,IAAIF,OAAO,4CAEfE,IAAc,MACFY,KAAKC,OAAOb,UAGvBW,IACN,CAAC3B,wBAEM,IAED,IAAM,GACF,CACPG,KAAM,OACNM,QAAS,CAAED,oBAAqB,QAEzB,CACPL,KAAM,qBAGT,CAACc,SAEEa,GAAWT,kBAAQ,IAChBL,EAAUf,YAAY8B,KAAMC,GACjCxB,EAAoByB,SAASD,IAE9B,CAACxB,EAAqBQ,EAAUf,cAE7BiC,EAAsBb,kBAAQ,IAC3BL,EAAUd,uBAAuB6B,KAAMC,GAC5CxB,EAAoByB,SAASD,IAE9B,CAACxB,EAAqBQ,EAAUd,yBAE7BiC,EAAOC,sBAAY,IAAM,GACpB,CACPjC,KAAM,OACNM,QAAS,CACPD,sBACAL,WAGH,CAACK,EAAqBS,EAAUd,IAE7BkC,EAAOD,sBAAY,IAAM,GACpB,CACPjC,KAAM,OACNM,QAAS,CACPD,0BAGH,CAACA,EAAqBS,IAEnBqB,EAAMF,sBACTG,GAAO,GACG,CACPpC,KAAM,OACNM,QAAS,CAAED,oBAAqB,GAAI+B,SAGxC,CAACtB,IAGGuB,EAASJ,sBACZG,GAAO,GACG,CACPpC,KAAM,OACNM,QAAS,CAAED,oBAAqB,GAAI+B,SAGxC,CAACtB,IAGGwB,EAAQL,sBACXM,GAAM,CACDA,MACAC,mBACAC,qBAGCV,EAMM,CACP/B,KAAM,mBANC,CACPA,KAAM,gBACNM,QAASD,KAQf,CAACA,EAAqBS,EAAUiB,UAG3Bb,mBAAQ,IACN,EACLS,WACAe,QAAS,CACPC,aAAcX,EACdY,aAAcV,GAEhBW,QAASP,EACTN,OACAE,OACAH,sBACAO,QACAH,MACAE,WAED,CAACF,EAAKG,EAAOJ,EAAMP,EAAUI,EAAqBM,EAAQL"}