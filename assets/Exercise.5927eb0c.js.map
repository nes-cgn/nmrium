{"version":3,"file":"Exercise.5927eb0c.js","sources":["../../src/demo/views/Exercise.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Molecule } from 'openchemlib/full';\nimport { useState, useEffect, useCallback } from 'react';\nimport { MF } from 'react-mf';\nimport { StructureEditor } from 'react-ocl/full';\n\nimport NMRium from '../../component/NMRium';\n\nlet answers = JSON.parse(localStorage.getItem('nmrium-exercises') || '{}');\n\nasync function loadData(file) {\n  const response = await fetch(file);\n  checkStatus(response);\n  const data = await response.json();\n  return data;\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nconst titleCss = css`\n  text-transform: none;\n  margin: 0;\n  padding: 5px;\n  background-color: white;\n  font-size: 14px;\n  color: #3e3e3e;\n\n  p {\n    font-size: 10px;\n    margin: 0px;\n  }\n`;\n\nconst mainContainer = css`\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n  overflow: hidden;\n`;\n\nconst bottomContainer = css`\n  display: flex;\n  height: 50%;\n`;\n\nconst bottomRightContainer = css`\n  width: 50%;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`;\n\nconst mfCss = css`\n  height: 20%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  border: 1px dashed gray;\n`;\n\nconst resultContainer = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 80%;\n  position: relative;\n`;\n\nconst structureEditorCss = css`\n  background-color: white;\n  flex: 1;\n  overflow: auto;\n`;\n\nconst showButtonCss = css`\n  outline: none;\n  border: none;\n  border-top: 0.55px solid #c1c1c1;\n  border-bottom: 0.55px solid #c1c1c1;\n  color: #00b707;\n  font-weight: bold;\n  font-size: 12px;\n  padding: 5px;\n\n  &:hover {\n    color: white !important;\n    background-color: #00b707;\n  }\n`;\n\nconst styles = css`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  margin-left: 30px;\n`;\n\nexport default function Exercise(props) {\n  const [data, setData] = useState<any>();\n  const [resultFlag, setResultFlag] = useState<boolean | null>(null);\n  const [answerAreaVisible, showAnswerArea] = useState(false);\n  const { file, title, baseURL } = props;\n\n  const checkAnswer = useCallback(\n    (response) => {\n      if (data.answer) {\n        const MolResponse = Molecule.fromMolfile(response);\n        const idCodeResponse = MolResponse.getIDCode();\n        answers[data.answer.idCode] = idCodeResponse;\n        localStorage.setItem('nmrium-exercises', JSON.stringify(answers));\n        if (data.answer.idCode === idCodeResponse) {\n          // correct answer\n          setResultFlag(true);\n        } else {\n          setResultFlag(false);\n          // wrong answer\n        }\n      }\n    },\n    [data],\n  );\n\n  useEffect(() => {\n    if (file) {\n      void loadData(file).then((d) => {\n        const _d = JSON.parse(JSON.stringify(d).replace(/\\.\\/+?/g, baseURL));\n\n        if (_d?.molecules?.[0]?.molfile) {\n          const molecule = Molecule.fromMolfile(_d.molecules[0].molfile);\n          const idCode = molecule.getIDCode();\n          let currentAnswer = answers[idCode];\n\n          if (currentAnswer) {\n            currentAnswer = Molecule.fromIDCode(currentAnswer).toMolfile();\n          }\n          _d.answer = {\n            idCode,\n            currentAnswer,\n            mf: molecule.getMolecularFormula().formula,\n          };\n          setData(_d);\n        }\n      });\n    } else {\n      setData({});\n    }\n  }, [baseURL, file, props]);\n\n  const showAnswerAreaHander = useCallback(() => {\n    showAnswerArea((prev) => !prev);\n  }, []);\n\n  return (\n    <div css={styles}>\n      <p css={titleCss}>\n        <strong>Exercises: </strong>Determine the unknown structure for the\n        compound having the following NMR spectrum\n        <p>{title}</p>\n      </p>\n      <div css={mainContainer}>\n        <div\n          style={{ height: answerAreaVisible ? '50%' : 'calc(100% - 25px)' }}\n        >\n          <NMRium data={data} workspace=\"exercise\" />\n        </div>\n        <button\n          css={showButtonCss}\n          type=\"button\"\n          onClick={showAnswerAreaHander}\n        >\n          {!answerAreaVisible ? 'Show answer area' : 'Hide answer area '}\n        </button>\n\n        <div\n          css={bottomContainer}\n          style={\n            answerAreaVisible\n              ? { height: '50%' }\n              : { height: '0%', visibility: 'hidden' }\n          }\n        >\n          <div css={structureEditorCss}>\n            <StructureEditor\n              svgMenu\n              fragment={false}\n              onChange={checkAnswer}\n              initialMolfile={data?.answer?.currentAnswer}\n            />\n          </div>\n          <div css={bottomRightContainer}>\n            <div css={mfCss}>\n              <MF\n                style={{ color: 'navy', fontSize: 30 }}\n                mf={data?.answer?.mf}\n              />\n            </div>\n            <div css={resultContainer}>\n              <div\n                style={{\n                  ...styles,\n                  backgroundColor:\n                    resultFlag == null ? 'white' : resultFlag ? 'green' : 'red',\n                  color: resultFlag == null ? 'black' : 'white',\n                  width: '80%',\n                  height: '80%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                {resultFlag == null ? (\n                  <p>Result</p>\n                ) : resultFlag === true ? (\n                  <p>Right Molecule</p>\n                ) : (\n                  <p>Wrong Molecule !!</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["answers","JSON","parse","localStorage","getItem","file","response","fetch","checkStatus","data","json","ok","Error","status","statusText","titleCss","css","mainContainer","bottomContainer","bottomRightContainer","mfCss","resultContainer","structureEditorCss","showButtonCss","styles","props","setData","useState","resultFlag","setResultFlag","answerAreaVisible","showAnswerArea","title","baseURL","checkAnswer","useCallback","answer","MolResponse","Molecule","fromMolfile","idCodeResponse","getIDCode","idCode","setItem","stringify","useEffect","loadData","then","d","_d","replace","molecules","molfile","molecule","currentAnswer","fromIDCode","toMolfile","mf","getMolecularFormula","formula","showAnswerAreaHander","prev","_jsxs","_jsx","height","visibility","color","fontSize","backgroundColor","width","display","justifyContent","alignItems"],"mappings":"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"}