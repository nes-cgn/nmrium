{"version":3,"file":"View.008e212e.js","sources":["../../src/demo/views/View.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { ObjectInspector } from 'react-inspector';\n\nimport NMRium from '../../component/NMRium';\n\nasync function loadData(file) {\n  const response = await fetch(file);\n  checkStatus(response);\n  const data = await response.json();\n  return data;\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nexport default function View(props) {\n  const [data, setData] = useState();\n  const { file, title, baseURL } = props;\n  const [callbackData, setCallbackData] = useState<Array<any>>([]);\n  const [isCallbackVisible, showCallback] = useState(false);\n\n  useEffect(() => {\n    if (file) {\n      void loadData(file).then((d) => {\n        const _d = JSON.parse(JSON.stringify(d).replace(/\\.\\/+?/g, baseURL));\n        setData(_d);\n      });\n    } else {\n      setData(undefined);\n    }\n  }, [baseURL, file, props]);\n\n  const changeHandler = useCallback((logData) => {\n    setCallbackData((prevLogs) => {\n      return prevLogs.concat({\n        datetime: new Date().toLocaleTimeString(),\n        data: logData,\n      });\n    });\n  }, []);\n\n  const showCallbackHandler = useCallback(() => {\n    showCallback((prevflag) => !prevflag);\n  }, []);\n\n  const clearHandler = useCallback(() => {\n    setCallbackData([]);\n  }, []);\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        marginLeft: 30,\n      }}\n    >\n      <div\n        style={{\n          height: '60px',\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'relative',\n        }}\n      >\n        <h5\n          style={{\n            fontWeight: 700,\n            fontSize: '1.5em',\n            lineHeight: '1.4em',\n            marginBottom: '15px',\n          }}\n        >\n          Display and process 1D NMR spectra from a JCAMP-DX file\n        </h5>\n        {title && (\n          <p\n            style={{\n              marginTop: '-10px',\n              marginBottom: '1rem',\n              fontWeight: 400,\n              color: '#9a9a9a',\n              fontSize: '0.7142em',\n            }}\n          >\n            {title}\n          </p>\n        )}\n        {process.env.NODE_ENV !== 'production' && (\n          <button\n            type=\"button\"\n            onClick={showCallbackHandler}\n            style={{\n              position: 'absolute',\n              right: '20px',\n              top: '20px',\n              backgroundColor: 'white',\n              width: '100px',\n              fontSize: '12px',\n            }}\n          >\n            {isCallbackVisible ? 'Hide callback ' : 'Show callback '}\n          </button>\n        )}\n      </div>\n      <div\n        style={{\n          height: 'calc(100% - 75px)',\n          display: 'flex',\n          width: '100%',\n        }}\n      >\n        <div style={{ display: 'flex', flexDirection: 'row', width: '100%' }}>\n          <div style={{ width: isCallbackVisible ? '75%' : '100%' }}>\n            <NMRium\n              data={data}\n              onDataChange={changeHandler}\n              workspace={props.workspace || null}\n            />\n          </div>\n          {process.env.NODE_ENV !== 'production' && (\n            <div\n              style={\n                isCallbackVisible\n                  ? {\n                      backgroundColor: 'white',\n                      width: '25%',\n                      marginLeft: '5px',\n                    }\n                  : { width: 0, display: 'none' }\n              }\n            >\n              <div\n                style={{\n                  backgroundColor: 'lightgray',\n                  padding: '5px',\n                  height: '30px',\n                  position: 'relative',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <span>Callback</span>\n                <button\n                  type=\"button\"\n                  onClick={clearHandler}\n                  style={{\n                    backgroundColor: 'white',\n                    width: '50px',\n                    fontSize: '12px',\n                  }}\n                >\n                  Clear\n                </button>\n              </div>\n              <div\n                style={{\n                  padding: '5px',\n                  overflowY: 'scroll',\n                  height: 'calc(100% - 30px)',\n                }}\n              >\n                {callbackData.map((log, index) => (\n                  <div\n                    key={`${index + log.datetime}`}\n                    style={{ margin: '5px 0' }}\n                  >\n                    <span style={{ fontSize: '12px' }}>{log.datetime}</span>\n                    <ObjectInspector data={log.data} />\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["file","response","fetch","checkStatus","data","json","ok","Error","status","statusText","props","setData","useState","title","baseURL","callbackData","setCallbackData","isCallbackVisible","showCallback","useEffect","loadData","then","d","_d","JSON","parse","stringify","replace","undefined","changeHandler","useCallback","logData","prevLogs","concat","datetime","Date","toLocaleTimeString","prevflag","height","marginLeft","_jsxs","display","flexDirection","position","_jsx","fontWeight","fontSize","lineHeight","marginBottom","marginTop","color","process","width","workspace"],"mappings":"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"}