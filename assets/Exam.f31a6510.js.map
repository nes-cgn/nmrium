{"version":3,"file":"Exam.f31a6510.js","sources":["../../src/demo/views/Exam.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Molecule } from 'openchemlib/full';\nimport { useState, useEffect, useCallback } from 'react';\nimport { FaRegCopy, FaCheck } from 'react-icons/fa';\nimport { MF } from 'react-mf';\nimport { StructureEditor } from 'react-ocl/full';\n\nimport NMRium from '../../component/NMRium';\nimport { copyTextToClipboard } from '../../component/utility/Export';\n\nlet answers = JSON.parse(localStorage.getItem('nmrium-exams') || '{}');\n\nasync function loadData(file) {\n  const response = await fetch(file);\n  checkStatus(response);\n  const data = await response.json();\n  return data;\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nconst mainContainer = css`\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n  overflow: hidden;\n`;\n\nconst nmrContainer = css`\n  height: 50%;\n`;\n\nconst bottomContainer = css`\n  display: flex;\n  height: 50%;\n`;\n\nconst bottomRightContainer = css`\n  width: 50%;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`;\n\nconst mfCss = css`\n  height: 20%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  border: 1px dashed gray;\n`;\n\nconst resultContainer = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 80%;\n  position: relative;\n`;\n\nconst copyButton = css`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  width: 50px;\n  height: 40px;\n  outline: none;\n  border: none;\n  background-color: white;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: green;\n    color: white;\n  }\n`;\n\nconst structureEditor = css`\n  background-color: white;\n  flex: 1;\n  overflow: auto;\n`;\n\nconst showButton = css`\n  outline: none;\n  border: none;\n  border-top: 0.55px solid #c1c1c1;\n  border-bottom: 0.55px solid #c1c1c1;\n  color: #00b707;\n  font-weight: bold;\n  font-size: 12px;\n  padding: 5px;\n\n  &:hover {\n    color: white !important;\n    background-color: #00b707;\n  }\n`;\n\nconst titleCss = css`\n  text-transform: none;\n  margin: 0;\n  padding: 5px;\n  background-color: white;\n  font-size: 14px;\n  color: #3e3e3e;\n\n  p {\n    font-size: 10px;\n    margin: 0px;\n  }\n`;\n\nconst resultCss = css`\n  width: 50%;\n  height: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst styles = css`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  margin-left: 30px;\n  }\n`;\n\nconst CopyButton = ({ result }) => {\n  const [isCopied, setCopyFlag] = useState(false);\n\n  const saveToClipboardHandler = useCallback(async () => {\n    const success = await copyTextToClipboard(result);\n    setCopyFlag(success);\n    setTimeout(() => {\n      setCopyFlag(false);\n    }, 1000);\n  }, [result]);\n\n  return (\n    <button type=\"button\" css={copyButton} onClick={saveToClipboardHandler}>\n      {isCopied ? <FaCheck /> : <FaRegCopy />}\n    </button>\n  );\n};\n\nexport default function Exam(props) {\n  const [data, setData] = useState<any>();\n  const [result, setResult] = useState<string | null>(null);\n  const [answerAreaVisible, showAnswerArea] = useState(false);\n\n  const { file, title, baseURL } = props;\n\n  const checkAnswer = useCallback(\n    (response) => {\n      if (data.answer) {\n        const MolResponse = Molecule.fromMolfile(response);\n        const idCodeResponse = MolResponse.getIDCode();\n        answers[data.answer.idCode] = idCodeResponse;\n        localStorage.setItem('nmrium-exams', JSON.stringify(answers));\n        setResult(MolResponse.toSmiles());\n      }\n    },\n    [data],\n  );\n\n  useEffect(() => {\n    if (file) {\n      void loadData(file).then((d) => {\n        const _d = JSON.parse(JSON.stringify(d).replace(/\\.\\/+?/g, baseURL));\n\n        if (_d?.molecules?.[0]?.molfile) {\n          const molecule = Molecule.fromMolfile(_d.molecules[0].molfile);\n          const idCode = molecule.getIDCode();\n          let currentAnswer = answers[idCode];\n\n          if (currentAnswer) {\n            currentAnswer = Molecule.fromIDCode(currentAnswer).toMolfile();\n          }\n          _d.answer = {\n            idCode,\n            currentAnswer,\n            mf: molecule.getMolecularFormula().formula,\n          };\n          setData(_d);\n        }\n      });\n    } else {\n      setData({});\n    }\n  }, [baseURL, file, props]);\n\n  const showAnswerAreaHander = useCallback(() => {\n    showAnswerArea((prev) => !prev);\n  }, []);\n\n  return (\n    <div css={styles}>\n      <p css={titleCss}>\n        <strong>Exercises: </strong>Determine the unknown structure for the\n        compound having the following NMR spectrum\n        <p>{title}</p>\n      </p>\n      <div css={mainContainer}>\n        <div\n          css={nmrContainer}\n          style={{ height: answerAreaVisible ? '50%' : 'calc(100% - 25px)' }}\n        >\n          <NMRium\n            data={data}\n            preferences={{\n              general: {\n                disableMultipletAnalysis: true,\n                hideSetSumFromMolecule: true,\n              },\n              panels: {\n                hidePeaksPanel: true,\n                hideInformationPanel: true,\n                hideRangesPanel: true,\n                hideStructuresPanel: true,\n                hideFiltersPanel: true,\n                hideZonesPanel: true,\n                hideSummaryPanel: true,\n                hideMultipleSpectraAnalysisPanel: true,\n              },\n            }}\n          />\n        </div>\n        <button css={showButton} type=\"button\" onClick={showAnswerAreaHander}>\n          {!answerAreaVisible ? 'Show answer area' : 'Hide answer area '}\n        </button>\n        <div\n          css={bottomContainer}\n          style={\n            answerAreaVisible\n              ? { height: '50%' }\n              : { height: '0%', visibility: 'hidden' }\n          }\n        >\n          <div css={structureEditor}>\n            <StructureEditor\n              svgMenu\n              fragment={false}\n              onChange={checkAnswer}\n              initialMolfile={data?.answer?.currentAnswer}\n            />\n          </div>\n          <div css={bottomRightContainer}>\n            <div css={mfCss}>\n              <MF\n                style={{ color: 'navy', fontSize: 30 }}\n                mf={data?.answer?.mf}\n              />\n            </div>\n            <div css={resultContainer}>\n              <CopyButton result={result} />\n              <div css={resultCss}>{result}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["answers","JSON","parse","localStorage","getItem","file","response","fetch","json","ok","Error","status","statusText","mainContainer","css","nmrContainer","bottomContainer","bottomRightContainer","mfCss","resultContainer","copyButton","structureEditor","showButton","titleCss","resultCss","styles","CopyButton","result","isCopied","setCopyFlag","useState","saveToClipboardHandler","useCallback","success","copyTextToClipboard","_jsx","props","data","setData","setResult","answerAreaVisible","showAnswerArea","title","baseURL","checkAnswer","answer","MolResponse","Molecule","fromMolfile","idCodeResponse","getIDCode","idCode","setItem","stringify","toSmiles","loadData","then","d","_d","replace","molecules","molfile","molecule","currentAnswer","fromIDCode","toMolfile","mf","getMolecularFormula","formula","showAnswerAreaHander","prev","_jsxs","height","general","disableMultipletAnalysis","hideSetSumFromMolecule","panels","hidePeaksPanel","hideInformationPanel","hideRangesPanel","hideStructuresPanel","hideFiltersPanel","hideZonesPanel","hideSummaryPanel","hideMultipleSpectraAnalysisPanel","visibility","StructureEditor","MF","color","fontSize"],"mappings":"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"}