{"version":3,"file":"index.de012ef7.js","sources":["../../vite/modulepreload-polyfill","../../src/demo/utility/menu.ts","../../src/demo/Sidebar.tsx","../../vite/preload-helper","../../src/demo/views/index.ts","../../src/demo/layouts/Admin.tsx","../../src/demo/layouts/SingleDisplayerLayout.tsx","../../src/demo/layouts/Main.tsx","../../src/data/utilities/checkModifierKeyActivated.ts","../../src/data/data1d/Spectrum1D/ranges/detectSignal.ts","../../src/component/EventsTrackers/BrushTracker.tsx","../../src/component/EventsTrackers/MouseTracker.tsx","../../src/data/constants/SignalsKinds.ts","../../src/data/data1d/filter1d/absolute.ts","../../src/data/data1d/filter1d/autoPhaseCorrection.ts","../../src/data/data1d/filter1d/baselineCorrection.ts","../../src/data/data1d/filter1d/centerMean.ts","../../src/data/data1d/filter1d/digitalFilter.ts","../../src/data/data1d/filter1d/equallySpaced.ts","../../src/data/data1d/filter1d/exclusionZones.ts","../../src/data/data1d/filter1d/fft.ts","../../src/data/data1d/filter1d/fromTo.ts","../../src/data/data1d/filter1d/lineBroadening.ts","../../src/data/data1d/filter1d/pareto.ts","../../src/data/data1d/filter1d/phaseCorrection.ts","../../src/data/data1d/filter1d/shiftX.ts","../../src/data/data1d/filter1d/standardDeviation.ts","../../src/data/data1d/filter1d/zeroFilling.ts","../../src/data/data2d/filter2d/shiftX.ts","../../src/data/data2d/filter2d/shiftY.ts","../../src/data/utilities/generateID.ts","../../src/data/FiltersManager.ts","../../src/data/utilities/getColor.ts","../../src/data/data1d/Spectrum1D/integrals/initiateIntegrals.ts","../../src/data/data1d/Spectrum1D/getSpectrumErrorValue.ts","../../src/data/data1d/Spectrum1D/shift/getShiftX.ts","../../src/data/data1d/Spectrum1D/peaks/mapPeaks.ts","../../src/data/data1d/Spectrum1D/peaks/initiatePeaks.ts","../../src/data/data1d/Spectrum1D/ranges/mapRanges.ts","../../src/data/data1d/Spectrum1D/ranges/initiateRanges.ts","../../src/data/data1d/Spectrum1D/initiateDatum1D.ts","../../src/data/data1d/Spectrum1D/ranges/generateSpectrumFromRanges.ts","../../src/data/data1d/Spectrum1D/generateSpectrumFromPublicationString.ts","../../src/data/data1d/Spectrum1D/get1DDataXY.ts","../../src/data/constants/References.ts","../../src/data/data1d/Spectrum1D/getReferenceShift.ts","../../src/data/data1d/Spectrum1D/integrals/changeIntegralsRelative.ts","../../src/data/data1d/Spectrum1D/integrals/checkIntegralKind.ts","../../src/data/utilities/getSum.ts","../../src/data/data1d/Spectrum1D/integrals/updateRelatives.ts","../../src/data/data1d/Spectrum1D/integrals/updateIntegralsRelativeValues.ts","../../src/data/data1d/Spectrum1D/isSpectrum1D.ts","../../src/data/data1d/Spectrum1D/peaks/autoPeakPicking.ts","../../src/data/data1d/Spectrum1D/peaks/lookupPeak.ts","../../src/data/utilities/getAtom.ts","../../src/data/data1d/Spectrum1D/SumManager.ts","../../src/data/utilities/RangeUtilities.ts","../../src/data/data1d/Spectrum1D/ranges/checkRangeKind.ts","../../src/data/data1d/Spectrum1D/ranges/updateRangesRelativeValues.ts","../../src/data/data1d/Spectrum1D/ranges/addRange.ts","../../src/data/data1d/Spectrum1D/ranges/changeRange.ts","../../src/data/data1d/Spectrum1D/ranges/changeRangeRelativeValue.ts","../../src/data/data1d/Spectrum1D/ranges/changeRangeSignal.ts","../../src/data/data1d/Spectrum1D/ranges/detectRange.ts","../../src/data/data1d/Spectrum1D/ranges/autoRangesDetection.ts","../../src/data/data1d/Spectrum1D/ranges/detectRanges.ts","../../src/data/data1d/Spectrum1D/shift/internal/updateIntegralXShift.ts","../../src/data/data1d/Spectrum1D/shift/internal/updatePeaksXShift.ts","../../src/data/data1d/Spectrum1D/shift/internal/updateRangesXShift.ts","../../src/data/data1d/Spectrum1D/shift/updateXShift.ts","../../src/component/reducer/core/Constants.ts","../../src/data/data1d/Data1DManager.ts","../../src/data/data2d/Spectrum2D/getMissingProjection.ts","../../src/data/data2d/Spectrum2D/getSlice.ts","../../src/data/data2d/Processing2D.ts","../../src/data/data2d/Spectrum2D/initiateDatum2D.ts","../../src/data/data2d/Spectrum2D/isSpectrum2D.ts","../../src/data/data2d/Spectrum2D/shift/getShift.ts","../../src/data/data2d/Spectrum2D/shift/updateShift.ts","../../src/data/data2d/Spectrum2D/toJSON.ts","../../src/data/data2d/Spectrum2D/zones/changeZoneSignal.ts","../../src/data/data2d/Spectrum2D/zones/getDetectionZones.ts","../../src/data/data2d/Spectrum2D/zones/detectZones.ts","../../src/data/data2d/Spectrum2D/zones/detectZonesManual.ts","../../src/data/data2d/Data2DManager.ts","../../src/data/migration/changeKeys.ts","../../src/data/migration/migrateToVersion1.ts","../../src/data/migration/migrateToVersion2.ts","../../src/data/migration/MigrationManager.ts","../../src/data/utilities/getAtomsFromMF.ts","../../src/data/molecules/Molecule.ts","../../src/data/SpectraManager.ts","../../src/data/data1d/Spectrum1D/toJSON.ts","../../src/data/PredictionManager.ts","../../src/component/panels/SummaryPanel/CorrelationTable/Constants.ts","../../src/component/toolbar/ToolTypes.ts","../../src/component/utility/util/nmredata/addRanges.ts","../../src/component/utility/util/nmredata/addZones.ts","../../src/component/utility/nmredataToNmrium.ts","../../src/data/utilities/FindUtilities.ts","../../src/component/1d/utilities/scale.ts","../../src/component/reducer/helper/getRange.ts","../../src/component/utility/nucleusToString.ts","../../src/component/reducer/actions/DomainActions.ts","../../src/component/reducer/actions/RangesActions.ts","../../src/data/utilities/ZoneUtilities.ts","../../src/component/2d/utilities/DimensionLayout.ts","../../src/component/2d/utilities/scale.ts","../../src/component/reducer/helper/get2DRange.ts","../../src/component/reducer/actions/ZonesActions.ts","../../src/component/reducer/actions/CorrelationsActions.ts","../../src/component/reducer/helper/Zoom1DManager.ts","../../src/component/reducer/actions/DatabaseActions.ts","../../src/component/reducer/actions/DimensionsActions.ts","../../src/component/utility/getSpectraByNucleus.ts","../../src/component/reducer/helper/ZoomHistoryManager.ts","../../src/component/utility/GroupByInfoKey.ts","../../src/component/reducer/actions/PreferencesActions.ts","../../src/component/reducer/actions/ToolsActions.ts","../../src/component/reducer/actions/FiltersActions.ts","../../src/component/reducer/actions/GlobalActions.ts","../../src/component/reducer/actions/HistoryActions.ts","../../src/component/reducer/actions/IntegralsActions.ts","../../src/data/molecules/MoleculeManager.ts","../../src/component/reducer/types/Types.ts","../../src/component/reducer/actions/LoadActions.ts","../../src/component/reducer/actions/MoleculeActions.ts","../../src/component/reducer/actions/PeaksActions.ts","../../src/data/utilities/generateChar.ts","../../src/data/data1d/MultipleAnalysis.ts","../../src/component/reducer/actions/SpectraAnalysisAction.ts","../../src/component/reducer/actions/SpectrumsActions.ts","../../src/component/reducer/types/HistoryTypes.ts","../../src/component/reducer/Reducer.ts","../../src/component/context/ChartContext.tsx","../../src/component/context/DispatchContext.tsx","../../src/component/hooks/useSpectrum.ts","../../src/component/context/LoaderContext.tsx","../../src/component/loader/NoData.tsx","../../src/component/loader/DefaultSpinnerComponent.tsx","../../src/component/loader/SpinnerContext.tsx","../../src/component/loader/Spinner.tsx","../../src/component/tool/BrushXY.tsx","../../src/component/tool/CrossLinePointer.tsx","../../src/component/utility/LocalStorage.ts","../../src/component/workspaces/basic.ts","../../src/component/workspaces/exercise.ts","../../src/component/workspaces/prediction.ts","../../src/component/workspaces/process1D.ts","../../src/component/workspaces/index.ts","../../src/component/reducer/preferencesReducer.ts","../../src/component/context/PreferencesContext.tsx","../../src/component/utility/PathBuilder.ts","../../src/component/2d/Contours.tsx","../../src/component/hooks/useXYReduce.ts","../../src/component/2d/Left1DChart.tsx","../../src/component/2d/Top1DChart.tsx","../../src/component/2d/XAxis.tsx","../../src/component/2d/YAxis.tsx","../../src/component/2d/zones/IndicationLines.tsx","../../src/component/utility/Events.ts","../../src/component/assignment/index.tsx","../../src/component/highlight/index.tsx","../../src/data/utilities/Concatenation.ts","../../src/component/2d/SignalDeltaLine.tsx","../../src/component/2d/zones/SignalCrosshair.tsx","../../src/component/2d/zones/Signal.tsx","../../src/component/2d/zones/Zone.tsx","../../src/component/2d/zones/Zones.tsx","../../src/component/2d/Chart2D.tsx","../../src/component/utility/FormatNumber.ts","../../src/component/2d/FooterBanner.tsx","../../src/component/2d/tools/XYLabelPointer.tsx","../../src/component/2d/tools/slicing/SliceScale.ts","../../src/component/2d/tools/slicing/HorizontalSliceChart.tsx","../../src/component/2d/tools/slicing/VerticalSliceChart.tsx","../../src/component/2d/tools/slicing/SlicingView.tsx","../../src/component/2d/Viewer2D.tsx","../../src/component/reducer/scaleReducer.ts","../../src/component/context/ScaleContext.tsx","../../src/component/elements/popup/options.ts","../../src/component/elements/popup/Alert/Context.ts","../../src/component/elements/popup/Transition.tsx","../../src/component/elements/popup/Wrapper.tsx","../../src/component/elements/popup/helpers.ts","../../src/component/elements/popup/Alert/ProgressIndicator.tsx","../../src/component/elements/popup/Alert/Provider.tsx","../../src/component/elements/popup/Modal/Context.ts","../../src/component/elements/popup/Modal/ConfirmDialog.tsx","../../src/component/elements/popup/Modal/ModalContent.tsx","../../src/component/elements/popup/Modal/Provider.tsx","../../src/component/context/GlobalContext.tsx","../../src/component/elements/ToolTip/ToolTip.tsx","../../src/component/elements/CloseButton.tsx","../../src/component/modal/MultipletAnalysisModal.tsx","../../src/component/hooks/useSpectraPerNucleus.ts","../../src/component/hooks/useActiveSpectrumStyleOptions.ts","../../src/component/1d/ExclusionZoneAnnotation.tsx","../../src/component/1d/utilities/getVerticalShift.ts","../../src/component/1d/ExclusionZonesAnnotations.tsx","../../src/component/hooks/useXScale.ts","../../src/component/hooks/useIntegralPath.ts","../../src/component/panels/extra/preferences/defaultValues.ts","../../src/component/1d/Resizable.tsx","../../src/component/1d/IntegralResizable.tsx","../../src/component/1d/Integral.tsx","../../src/component/1d/IntegralsSeries.tsx","../../src/component/1d/Line.tsx","../../src/component/1d/LinesSeries.tsx","../../src/component/1d/PeakAnnotation.tsx","../../src/component/1d/PeakAnnotations.tsx","../../src/component/1d/ResurrectedDatabaseRanges.tsx","../../src/component/1d/XAxis.tsx","../../src/data/data1d/Spectrum1D/generateJGraphData.ts","../../src/component/1d/jCouplingGraph/JGraphContext.tsx","../../src/component/elements/linearAxis/LinearVerticalAxis.tsx","../../src/component/1d/jCouplingGraph/JGraphVerticalAxis.tsx","../../src/component/1d/jCouplingGraph/JsCouplingLinks.tsx","../../src/component/1d/jCouplingGraph/JsCoupling.tsx","../../src/component/1d/jCouplingGraph/JsCouplings.tsx","../../src/component/1d/jCouplingGraph/JGraph.tsx","../../src/component/elements/DeleteButton.tsx","../../src/component/1d/multiAnalysis/AnalysisRange.tsx","../../src/component/1d/multiAnalysis/MultiAnalysisRanges.tsx","../../src/data/constants/Multiplets.ts","../../src/component/panels/extra/utilities/MultiplicityUtilities.ts","../../src/component/1d/multiplicityTree/TreeColors.ts","../../src/component/1d/multiplicityTree/LevelNode.tsx","../../src/component/1d/multiplicityTree/StringNode.tsx","../../src/component/1d/multiplicityTree/TreeNodes.tsx","../../src/component/1d/multiplicityTree/buildTreeNode.ts","../../src/component/1d/multiplicityTree/MultiplicityTree.tsx","../../src/component/1d/multiplicityTree/TempMultiplicityTree.tsx","../../src/component/1d/ranges/Range.tsx","../../src/component/1d/ranges/RangeIntegral.tsx","../../src/component/1d/ranges/Ranges.tsx","../../src/component/1d/tool/BaseLineZones.tsx","../../src/component/1d/Chart1D.tsx","../../src/component/1d/FooterBanner.tsx","../../src/component/1d/SpectraTracker.tsx","../../src/component/1d/tool/PeakPointer.tsx","../../src/component/1d/tool/VerticalIndicator.tsx","../../src/component/1d/tool/XLabelPointer.tsx","../../src/component/1d/Viewer1D.tsx","../../src/component/ErrorOverlay.tsx","../../src/component/elements/CheckBox.tsx","../../src/component/elements/formik/FormikCheckBox.tsx","../../src/component/elements/formik/FormikForm.tsx","../../src/component/hooks/useCombinedRefs.ts","../../src/component/elements/Input.tsx","../../src/component/elements/formik/FormikInput.tsx","../../src/component/modal/ModalStyle.ts","../../src/component/modal/SaveAsModal.tsx","../../src/component/utility/Export.ts","../../src/component/utility/util/nmredata/addSource.ts","../../src/component/utility/util/nmredata/getToFix.ts","../../src/component/utility/util/nmredata/get1DSignals.ts","../../src/component/utility/util/nmredata/getCouplingObserved.ts","../../src/component/utility/util/nmredata/get2DSignals.ts","../../src/component/utility/util/nmredata/flat2DSignals.ts","../../src/component/utility/util/nmredata/getLabels.ts","../../src/component/utility/nmriumToNmredata.ts","../../src/component/hooks/useExport.tsx","../../src/component/hooks/useCheckExperimentalFeature.ts","../../src/component/elements/ButtonToolTip.tsx","../../src/component/panels/extra/BasicPanelStyle.ts","../../src/component/elements/ToggleButton.tsx","../../src/component/panels/header/DefaultPanelHeader.tsx","../../src/component/panels/AutomaticAssignment/AutomaticAssignment.tsx","../../src/component/elements/ReactTable/Style.ts","../../src/component/elements/ReactTable/ReactTableFlexLayout.tsx","../../src/component/panels/InformationPanel.tsx","../../src/component/elements/Tab/DeleteButton.tsx","../../src/component/elements/Tab/Tab.tsx","../../src/component/elements/Tab/Tabs.tsx","../../src/component/elements/NextPrev.tsx","../../src/component/elements/MoleculeSelection.tsx","../../src/component/modal/changeSum/SelectMolecule.tsx","../../src/component/modal/changeSum/ChangeSumModal.tsx","../../src/component/elements/SaveButton.tsx","../../src/component/panels/header/PreferencesHeader.tsx","../../src/component/elements/EditableColumn.tsx","../../src/component/elements/ContextMenu.tsx","../../src/component/elements/ReactTable/Elements/ReactTableHeader.tsx","../../src/component/elements/ReactTable/Elements/ReactTableRow.tsx","../../src/component/elements/ReactTable/utility/ReactTableContext.ts","../../src/component/elements/ReactTable/utility/useRowSpan.ts","../../src/component/elements/ReactTable/ReactTable.tsx","../../src/component/elements/ReactTable/utility/addCustomColumn.ts","../../src/component/elements/Select.tsx","../../src/component/panels/extra/placeholder/NoTableData.tsx","../../src/component/panels/IntegralsPanel/IntegralTable.tsx","../../src/component/elements/ColorInput.tsx","../../src/component/elements/formik/FormikColorInput.tsx","../../src/component/elements/formik/FormikColumnFormatField.tsx","../../src/component/elements/NumberInput.tsx","../../src/component/elements/formik/FormikNumberInput.tsx","../../src/component/hooks/useNucleus.ts","../../src/component/panels/IntegralsPanel/IntegralsPreferences.tsx","../../src/component/panels/IntegralsPanel/IntegralPanel.tsx","../../src/component/elements/Label.tsx","../../src/component/modal/ExportAsMatrixModal.tsx","../../src/component/modal/MultipleSpectraFiltersModal/EquallySpacedFilter.tsx","../../src/component/modal/MultipleSpectraFiltersModal/FromToFilter.tsx","../../src/component/modal/MultipleSpectraFiltersModal/index.tsx","../../src/component/panels/MatrixGenerationPanel/MatrixGenerationPanel.tsx","../../src/component/modal/MoleculeStructureEditorModal.tsx","../../src/component/elements/MenuButton.tsx","../../src/data/utilities/generateNumbersPowerOfX.ts","../../src/component/elements/IsotopesViewer.tsx","../../src/component/elements/formik/FormikErrorsSummary.tsx","../../src/component/elements/formik/FormikSelect.tsx","../../src/component/modal/PredictSpectraModal.tsx","../../src/component/panels/MoleculesPanel/MoleculePanelHeader.tsx","../../src/component/panels/MoleculesPanel/Utilities.ts","../../src/component/panels/MoleculesPanel/useAtomAssignment.tsx","../../src/component/panels/MoleculesPanel/MoleculePanel.tsx","../../src/component/modal/AlignSpectraModal.tsx","../../src/component/utility/Evaluate.ts","../../src/component/panels/MultipleSpectraAnalysisPanel/MultipleAnalysisCodeEditor.tsx","../../src/component/panels/MultipleSpectraAnalysisPanel/MultipleSpectraAnalysisPreferences.tsx","../../src/component/elements/dropDownButton/DropDownList.tsx","../../src/component/elements/dropDownButton/DropDownButton.tsx","../../src/component/panels/MultipleSpectraAnalysisPanel/ColumnHeader.tsx","../../src/component/panels/MultipleSpectraAnalysisPanel/MultipleSpectraAnalysisTable.tsx","../../src/component/panels/MultipleSpectraAnalysisPanel/MultipleSpectraAnalysisPanel.tsx","../../src/component/panels/PeaksPanel/PeaksPreferences.tsx","../../src/component/panels/PeaksPanel/PeaksTable.tsx","../../src/component/panels/PeaksPanel/PeaksPanel.tsx","../../src/component/modal/CopyClipboardModal.tsx","../../src/component/panels/RangesPanel/RangesHeader.tsx","../../src/component/panels/RangesPanel/RangesPreferences.tsx","../../src/component/hooks/useTableSortBy.tsx","../../src/component/panels/extra/preferences/ColumnsHelper.ts","../../src/component/panels/RangesPanel/TableColumns/AbsoluteColumn.tsx","../../src/component/elements/Button.tsx","../../src/component/elements/formik/FormikOnChange.tsx","../../src/component/modal/editRange/forms/components/AddSignalFormTab.tsx","../../src/component/modal/editRange/forms/components/DeltaInput.tsx","../../src/component/modal/editRange/forms/components/CouplingsTable.tsx","../../src/component/modal/editRange/forms/components/SignalFormTab.tsx","../../src/component/modal/editRange/forms/components/SignalsForm.tsx","../../src/component/modal/editRange/forms/validation/EditRangeValidation.ts","../../src/component/modal/editRange/EditRangeModal.tsx","../../src/component/panels/RangesPanel/hooks/useEditRangeModal.tsx","../../src/component/panels/RangesPanel/TableColumns/ActionsColumn.tsx","../../src/component/panels/RangesPanel/TableColumns/CouplingColumn.tsx","../../src/component/panels/RangesPanel/TableColumns/RangeAssignmentsColumn.tsx","../../src/component/panels/RangesPanel/TableColumns/RangeColumn.tsx","../../src/component/panels/RangesPanel/TableColumns/RelativeColumn.tsx","../../src/component/panels/RangesPanel/TableColumns/SignalAssignmentsColumn.tsx","../../src/component/panels/RangesPanel/TableColumns/format.ts","../../src/component/panels/RangesPanel/TableColumns/SignalDeltaColumn.tsx","../../src/component/panels/RangesPanel/RangesTableRow.tsx","../../src/component/panels/RangesPanel/hooks/useMapRanges.ts","../../src/component/panels/RangesPanel/RangesTable.tsx","../../src/component/panels/RangesPanel/RangesPanel.tsx","../../src/component/hooks/useCheckToolsVisibility.ts","../../src/component/panels/SpectrumsPanel/SpectraPanelHeader.tsx","../../src/component/panels/SpectrumsPanel/base/ColorIndicator.tsx","../../src/component/panels/SpectrumsPanel/base/ShowHideMarkersButton.tsx","../../src/component/panels/SpectrumsPanel/base/ShowHideSpectrumButton.tsx","../../src/component/panels/SpectrumsPanel/SpectrumListItem.tsx","../../src/component/elements/formik/FormikColorPicker.tsx","../../src/component/panels/SpectrumsPanel/base/setting/Spectrum1DHistogram.tsx","../../src/component/panels/SpectrumsPanel/base/setting/Spectrum1DSetting.tsx","../../src/component/elements/formik/FormikSlider.tsx","../../src/component/panels/SpectrumsPanel/base/setting/Spectrum2DHistogram.tsx","../../src/component/panels/SpectrumsPanel/base/setting/Spectrum2DSetting.tsx","../../src/component/panels/SpectrumsPanel/base/setting/SpectrumSetting.tsx","../../src/component/panels/SpectrumsPanel/SpectrumsTabs.tsx","../../src/component/panels/SpectrumsPanel/SpectrumListPanel.tsx","../../src/data/constants/DefaultPathLengths.ts","../../src/component/modal/editZone/validation/isDefaultPathLength.ts","../../src/component/panels/SummaryPanel/utilities/Utilities.ts","../../src/component/panels/SummaryPanel/utilities/IsInView.ts","../../src/component/panels/SummaryPanel/CorrelationTable/editLink/Confirmation.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/editLink/EditPathLength.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/editLink/MoveLink.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/editLink/EditLinkModal.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/AdditionalColumnHeader.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/AdditionalColumnField.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/CorrelationTableRow.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/CorrelationTable.tsx","../../src/component/panels/SummaryPanel/Overview.tsx","../../src/component/elements/MolecularFormulaInput.tsx","../../src/component/panels/SummaryPanel/SetMolecularFormulaModal.tsx","../../src/component/panels/SummaryPanel/SetShiftTolerancesModal.tsx","../../src/component/panels/SummaryPanel/SummaryPanel.tsx","../../src/component/panels/ZonesPanel/ZonesPreferences.tsx","../../src/component/modal/editZone/EditPathLengthFormik.tsx","../../src/component/modal/editZone/SignalFormTab.tsx","../../src/component/modal/editZone/SignalsForm.tsx","../../src/component/modal/editZone/validation/EditZoneValidation.ts","../../src/component/modal/editZone/EditZoneModal.tsx","../../src/component/panels/ZonesPanel/TableColumns/ActionsColumn.tsx","../../src/component/panels/ZonesPanel/TableColumns/SignalAssignmentsColumn.tsx","../../src/component/panels/ZonesPanel/TableColumns/SignalAssignmentsColumns.tsx","../../src/component/panels/ZonesPanel/TableColumns/SignalDeltaColumn.tsx","../../src/component/panels/ZonesPanel/TableColumns/ZoneAssignmentsColumn.tsx","../../src/component/panels/ZonesPanel/TableColumns/ZoneAssignmentsColumns.tsx","../../src/component/panels/ZonesPanel/ZonesTableRow.tsx","../../src/component/panels/ZonesPanel/ZonesTable.tsx","../../src/component/panels/ZonesPanel/ZonesPanel.tsx","../../src/data/data1d/database.ts","../../src/component/panels/databasePanel/DatabasePreferences.tsx","../../src/component/panels/databasePanel/DatabaseTable.tsx","../../src/component/panels/databasePanel/DatabasePanel.tsx","../../src/component/elements/Table/Table.tsx","../../src/component/elements/Table/TableBody.tsx","../../src/component/elements/Table/TableCell.tsx","../../src/component/elements/Table/TableHead.tsx","../../src/component/elements/Table/TableRow.tsx","../../src/component/panels/filtersPanel/FiltersTable.tsx","../../src/component/panels/filtersPanel/FilterPanel.tsx","../../src/component/panels/predictionPanel/PredictionOptions.tsx","../../src/component/panels/predictionPanel/PredictionPanel.tsx","../../src/component/panels/Panels.tsx","../../src/component/hooks/useToolsFunctions.ts","../../src/component/EventsTrackers/KeysListenerTracker.tsx","../../src/constants.ts","../../src/versionInfo.ts","../../src/component/elements/Logo.tsx","../../src/component/modal/AboutUsModal.tsx","../../src/component/modal/setting/ControllersTabContent.tsx","../../src/component/modal/setting/DisplayTabContent.tsx","../../src/component/modal/setting/FormattingTabContent.tsx","../../src/component/modal/setting/WorkspaceItem.tsx","../../src/component/modal/setting/GeneralSettings.tsx","../../src/component/header/AutoPeakPickingOptionPanel.tsx","../../src/component/header/BaseLineCorrectionPanel.tsx","../../src/component/elements/InputRange.tsx","../../src/component/header/ManualPhaseCorrectionPanel.tsx","../../src/component/header/RangesPickingOptionPanel.tsx","../../src/component/header/ZeroFillingOptionsPanel.tsx","../../src/component/header/Zones2DOptionPanel.tsx","../../src/component/header/Header.tsx","../../src/component/utility/FileUtility.ts","../../src/component/loader/DropZone.tsx","../../src/component/reducer/IgnoreActions.ts","../../src/component/elements/ToolbarMenu.tsx","../../src/component/hooks/useDatumWithSpectraStatistics.ts","../../src/component/elements/formik/FormikTextarea.tsx","../../src/component/modal/ImportPublicationStringModal.tsx","../../src/component/modal/LoadJCAMPModal.tsx","../../src/component/toolbar/BasicToolBar.tsx","../../src/component/elements/toggle/ToggleButton.tsx","../../src/component/elements/toggle/ToggleButtonGroup.tsx","../../src/component/toolbar/FunctionToolBar.tsx","../../src/component/toolbar/ToolBar.tsx","../../src/component/NMRium.tsx","../../src/demo/views/Test.tsx","../../src/demo/test/TestRoutes.tsx","../../src/index.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import { SubMenu, MenuItem } from 'rc-menu';\nimport { createElement, cloneElement } from 'react';\n\nfunction buildMenu(array: Array<any> = []) {\n  let menu: Array<any> = [];\n  for (const item of array) {\n    if (item.children && Array.isArray(item.children)) {\n      menu.push(getMenu(item.groupName, [item], []));\n    } else {\n      menu.push(\n        createElement(MenuItem, { key: item.title, ...item }, item.title),\n      );\n    }\n  }\n  return menu;\n}\n\nfunction getMenu(\n  key,\n  array: Array<any> = [],\n  nodes: Array<any> = [],\n  parentIndex = 0,\n) {\n  let _nodes = nodes;\n  let children: Array<any> = [];\n\n  if (parentIndex !== -1 && _nodes[parentIndex]) {\n    _nodes[parentIndex] = cloneElement(_nodes[parentIndex], {}, children);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-for-in-array\n  for (const index in array) {\n    if (array[index].children && Array.isArray(array[index].children)) {\n      const node = createElement(SubMenu, {\n        key: index + key,\n        title: array[index].groupName,\n      });\n      _nodes.push(node);\n      return getMenu(index + key, array[index].children, _nodes, 0);\n    } else {\n      children.push(\n        createElement(\n          MenuItem,\n          { key: index + key, ...array[index] },\n          array[index].title,\n        ),\n      );\n    }\n  }\n  return _nodes;\n}\n\nfunction mapTreeToFlatArray(array: Array<any> = []) {\n  let routes: Array<any> = [];\n  for (const item of array) {\n    if (item.children && Array.isArray(item.children)) {\n      routes = routes.concat(getFlatArray([item], []));\n    } else {\n      routes.push(item);\n    }\n  }\n  return routes;\n}\n\nfunction getFlatArray(inputArray: Array<any> = [], children: Array<any> = []) {\n  let _children = children;\n\n  for (const item of inputArray) {\n    if (item.children && Array.isArray(item.children)) {\n      return getFlatArray(item.children, _children);\n    } else {\n      children.push(item);\n    }\n  }\n  return _children;\n}\n\nfunction getKey(filePath = '') {\n  const match = new RegExp(/^(?<path>.*)\\/(?<file>[^/]*)$/g).exec(filePath);\n  let parentFolderName = '';\n  if (match) {\n    const parentPath = match[1].split('/');\n    parentFolderName =\n      parentPath.length > 2\n        ? parentPath[parentPath.length - 2] + parentPath[parentPath.length - 1]\n        : parentPath[parentPath.length - 1];\n  }\n  return parentFolderName + filePath.replace(/\\.|\\s|\\//g, '');\n}\n\nexport { buildMenu, getKey, mapTreeToFlatArray };\n","/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport Menu from 'rc-menu';\nimport { memo, useMemo } from 'react';\nimport 'rc-menu/assets/index.css';\nimport { FaBars } from 'react-icons/fa';\nimport { withRouter } from 'react-router-dom';\n\nimport { buildMenu, getKey } from './utility/menu';\n\nconst sidebarCss = css`\n  background: #2ca8ff;\n  position: fixed;\n  top: 0;\n  height: 100%;\n  bottom: 0;\n  left: 0;\n  z-index: 1031;\n`;\n\nconst sidebarOpenCss = css`\n  width: 260px;\n`;\n\nconst sidebarClosedCss = css`\n  width: 3%;\n`;\n\nconst menuBtCss = css`\n  margin-left: 4px;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  margin-right: 4px;\n  z-index: 7;\n  font-size: 18px;\n  background-color: transparent;\n  border: none !important;\n  height: 30px;\n  width: 30px;\n  padding: 1px 6px;\n\n  & svg {\n    fill: white;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:active {\n    background-color: rgba(0, 0, 0, 0.5);\n    border-radius: 50%;\n  }\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.2);\n    border-radius: 50%;\n  }\n`;\n\nconst logoCss = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 4;\n  border-bottom: 1px solid #eee;\n`;\n\nconst simpleTextCss = css`\n  text-transform: uppercase;\n  padding: 0.5rem 0;\n  display: block;\n  white-space: nowrap;\n  font-size: 1em;\n  color: #fff;\n  text-decoration: none;\n  font-weight: 400;\n  line-height: 30px;\n  overflow: hidden;\n`;\n\nconst logoNormalCss = css`\n  display: block;\n  opacity: 1;\n  transform: translateZ(0);\n`;\n\nconst sidebarWrapperCss = css`\n  position: relative;\n  height: calc(100vh - 75px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  width: 260px;\n  z-index: 4;\n  padding-bottom: 100px;\n`;\n\nfunction Sidebar(props) {\n  const routes = useMemo(() => {\n    return buildMenu(props.routes);\n  }, [props.routes]);\n\n  const subDisplay = props.menuIsClosed ? 'none' : 'block';\n\n  return (\n    <div\n      css={css(\n        sidebarCss,\n        props.menuIsClosed ? sidebarClosedCss : sidebarOpenCss,\n      )}\n    >\n      <div css={logoCss}>\n        <div style={{ display: subDisplay, padding: '0.5rem 0.7rem' }}>\n          <a css={css(simpleTextCss, logoNormalCss)}>NMRium</a>\n        </div>\n        <button type=\"button\" css={menuBtCss} onClick={props.onMenuToggle}>\n          <FaBars />\n        </button>\n      </div>\n      <div css={sidebarWrapperCss} style={{ display: subDisplay }}>\n        <Menu\n          onClick={(e) => {\n            // console.log((e.item.props.view || '') + getKey(e.item.props.file));\n            props.history.push(\n              `/SamplesDashboard/${Math.random()\n                .toString(36)\n                .replace('0.', '')}/${\n                // @ts-expect-error This will be fixed by updating use of rc-menu\n                (e.item.props.view || 'View') + getKey(e.item.props.file)\n              }`,\n            );\n          }}\n          mode=\"inline\"\n        >\n          {routes}\n        </Menu>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(memo(Sidebar));\n","const scriptRel = 'modulepreload';const seen = {};const base = './';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', () => rej(new Error(`Unable to preload CSS for ${dep}`)));\n            });\n        }\n    })).then(() => baseModule());\n}","import { lazy, memo } from 'react';\n\nexport const possibleViews = {\n  Exam: memo(lazy(() => import('./Exam'))),\n  Exercise: memo(lazy(() => import('./Exercise'))),\n  SingleView: memo(lazy(() => import('./SingleView'))),\n  Test: memo(lazy(() => import('./Test'))),\n  View: memo(lazy(() => import('./View'))),\n  TwoInstances: memo(lazy(() => import('./TwoInstances'))),\n  Teaching: memo(lazy(() => import('./Teaching'))),\n  Prediction: memo(lazy(() => import('./Prediction'))),\n};\n","/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport { Suspense, StrictMode, useMemo, useState, useCallback } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Sidebar from '../Sidebar';\nimport { mapTreeToFlatArray, getKey } from '../utility/menu';\nimport { possibleViews } from '../views';\n\nconst mainPanelCss = css`\n  position: relative;\n  float: right;\n  height: 100%;\n  background-color: #ebecf1;\n`;\n\nconst mainPanelOpenCss = css`\n  width: calc(100% - 260px);\n`;\n\nconst mainPanelClosedCss = css`\n  width: 98%;\n  margin-left: 20px !important;\n`;\n\ninterface DashboardProps {\n  routes: any[];\n  baseURL: string;\n}\n\nexport function Dashboard(props: DashboardProps) {\n  const { routes = [], baseURL } = props;\n  const routesList = useMemo(() => mapTreeToFlatArray(routes), [routes]);\n  const [menuIsClosed, setMenuIsClosed] = useState(false);\n  const toggleMenu = useCallback(\n    () => setMenuIsClosed(!menuIsClosed),\n    [menuIsClosed],\n  );\n\n  return (\n    <div\n      style={{\n        position: 'relative',\n        top: 0,\n        height: '100vh',\n      }}\n    >\n      <Sidebar\n        {...props}\n        routes={routes}\n        menuIsClosed={menuIsClosed}\n        onMenuToggle={toggleMenu}\n      />\n      <div\n        css={css(\n          mainPanelCss,\n          menuIsClosed ? mainPanelClosedCss : mainPanelOpenCss,\n        )}\n      >\n        <StrictMode>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              {routesList.map((prop) => {\n                return (\n                  <Route\n                    path={`/SamplesDashboard/:id/${\n                      (prop.view || 'View') + getKey(prop.file)\n                    }`}\n                    render={(props) => (\n                      <RenderView {...props} prop={prop} baseURL={baseURL} />\n                    )}\n                    key={getKey(prop.file)}\n                  />\n                );\n              })}\n\n              {routesList.length > 0 && (\n                <Route\n                  path=\"/\"\n                  render={() => {\n                    const routeProp = routesList[0];\n                    const viewName = routeProp.view ? routeProp.view : 'View';\n                    const RenderedView = possibleViews[viewName];\n                    return <RenderedView {...routeProp[0]} />;\n                  }}\n                  key={getKey(routesList[0].file)}\n                />\n              )}\n            </Switch>\n          </Suspense>\n        </StrictMode>\n      </div>\n    </div>\n  );\n}\n\nfunction RenderView(props) {\n  const {\n    match: {\n      params: { id },\n    },\n    prop,\n    baseURL,\n  } = props;\n  const viewName = prop.view ? prop.view : 'View';\n  const RenderedView = possibleViews[viewName];\n  return (\n    <RenderedView key={id} {...prop} id={getKey(prop.file)} baseURL={baseURL} />\n  );\n}\n\nexport default Dashboard;\n","import { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { getKey } from '../utility/menu';\nimport { possibleViews } from '../views';\n\ninterface SingleDisplayerLayoutProps {\n  view: any;\n  patrh: any;\n  path: any;\n}\n\nexport default function SingleDisplayerLayout(\n  props: SingleDisplayerLayoutProps,\n) {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        top: 0,\n        height: '100vh',\n      }}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          display: 'block',\n          width: '99%',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          height: '100%',\n          backgroundColor: 'ebecf1',\n        }}\n      >\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route\n              path=\"/\"\n              render={(routeProps: any) => {\n                const {\n                  match: {\n                    params: { id },\n                  },\n                } = routeProps;\n                const viewName = props.view ? props.view : 'SingleView';\n\n                const RenderedView = possibleViews[viewName];\n\n                return (\n                  <RenderedView key={id} {...props} id={getKey(props.patrh)} />\n                );\n              }}\n              key={getKey(props.path)}\n            />\n          </Switch>\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState, useCallback, CSSProperties } from 'react';\n\nimport routes from '../samples.json';\n\nimport AdminLayout from './Admin';\nimport SingleDisplayerLayout from './SingleDisplayerLayout';\n\nconst styles: Record<\n  | 'bodyContainer'\n  | 'container'\n  | 'normal'\n  | 'error'\n  | 'errorHeader'\n  | 'normalHeader'\n  | 'loadButton',\n  CSSProperties\n> = {\n  bodyContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: '#e3e3e3',\n  },\n  container: {\n    width: '30%',\n    height: '40%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '10px',\n    fontSize: '20px',\n    textAlign: 'center',\n  },\n  normal: {\n    backgroundColor: 'white',\n    color: 'black',\n  },\n  error: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  errorHeader: {\n    fontSize: '100px',\n  },\n  normalHeader: {\n    fontSize: '24px',\n  },\n  loadButton: {\n    fontSize: '12px',\n    padding: '12px 40px',\n    borderRadius: '10px',\n    border: '1px solid #c70000',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n  },\n};\n\nasync function loadData(url) {\n  const response = await fetch(url);\n  try {\n    checkStatus(response);\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    return null;\n  }\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nconst Main = (props) => {\n  const [data, setRoutes] = useState<{\n    isLoaded: boolean;\n    status: number;\n    routes?: Array<any>;\n    baseURL?: string;\n    path?: string;\n  }>({\n    isLoaded: false,\n    status: 200,\n    routes: [],\n  });\n\n  const [dashBoardType, setDashBoardType] = useState('');\n\n  const loadHandler = useCallback(() => {\n    setRoutes({ isLoaded: true, status: 200, routes: routes });\n  }, []);\n\n  const getFileExtension = (url = '') => {\n    return url.substring(url.lastIndexOf('.') + 1);\n  };\n\n  const href = window.location.href;\n  useEffect(() => {\n    const qs = new URL(href).searchParams;\n    if (qs.has('sampleURL')) {\n      const sampleURL = qs.get('sampleURL');\n      if (!sampleURL) return;\n\n      const extention = getFileExtension(sampleURL).toLowerCase();\n      switch (extention) {\n        case 'json': {\n          setDashBoardType('multi');\n          void loadData(sampleURL).then((remoteRoutes) => {\n            if (remoteRoutes) {\n              const baseURL = sampleURL.replace(\n                /^(?<url>.*[\\\\/])?(?<filename>.*?\\.[^.]*?|)$/g,\n                '$1',\n              );\n\n              const _remoteRoutes = JSON.parse(\n                JSON.stringify(remoteRoutes).replace(/\\.\\/+?/g, baseURL),\n              );\n              setRoutes({\n                isLoaded: true,\n                status: 200,\n                routes: _remoteRoutes,\n                baseURL,\n              });\n            } else {\n              setRoutes({ isLoaded: false, status: 404, routes: [] });\n            }\n          });\n          break;\n        }\n        case 'dx':\n        case 'jdx': {\n          setDashBoardType('single');\n          setRoutes({\n            isLoaded: true,\n            status: 200,\n            path: sampleURL,\n          });\n\n          break;\n        }\n\n        default:\n          break;\n      }\n    } else {\n      setDashBoardType('multi');\n      setRoutes({ isLoaded: true, status: 200, routes: routes, baseURL: './' });\n    }\n  }, [href]);\n\n  return !data.isLoaded ? (\n    <div style={styles.bodyContainer}>\n      <div\n        style={{\n          ...styles.container,\n          ...(data.status === 200 ? styles.normal : styles.error),\n        }}\n      >\n        {data.status === 200 ? (\n          <div>\n            <p style={styles.normalHeader}>Please wait</p>\n            <p>We will redirect you in a minute</p>\n          </div>\n        ) : (\n          <div>\n            <p style={styles.errorHeader}>404</p>\n            <p>Resource not found.</p>\n            <button\n              style={styles.loadButton}\n              type=\"button\"\n              onClick={loadHandler}\n            >\n              Load local samples\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  ) : dashBoardType && dashBoardType === 'single' ? (\n    <SingleDisplayerLayout {...props} path={data.path} />\n  ) : (\n    <AdminLayout {...props} routes={data.routes} baseURL={data.baseURL} />\n  );\n};\n\nexport default Main;\n","import { KeyboardEvent, MouseEvent } from 'react';\n\nexport default function checkModifierKeyActivated(\n  event: KeyboardEvent | MouseEvent,\n): boolean {\n  const modifiersKeys = [\n    'Alt',\n    'AltGraph',\n    'CapsLock',\n    'Control',\n    'Meta',\n    'NumLocK',\n    'ScrollLock',\n    'Shift',\n    'OS',\n  ];\n  for (const key of modifiersKeys) {\n    if (event.getModifierState(key)) {\n      return true;\n    }\n  }\n  return false;\n}\n","import { xGetFromToIndex } from 'ml-spectra-processing';\nimport { analyseMultiplet } from 'multiplet-analysis';\n\nexport const MAX_LENGTH = 2048;\n\nexport default function detectSignal(\n  x: Float64Array,\n  re: Float64Array,\n  from,\n  to,\n  frequency,\n) {\n  const { fromIndex, toIndex } = xGetFromToIndex(x, {\n    from: from,\n    to: to,\n  });\n\n  if (toIndex - fromIndex <= MAX_LENGTH) {\n    const data = {\n      x: x.subarray(fromIndex, toIndex),\n      y: re.subarray(fromIndex, toIndex),\n    };\n\n    const result = analyseMultiplet(data, {\n      frequency: frequency,\n      takeBestPartMultiplet: true,\n      symmetrizeEachStep: true,\n    });\n    if (result && result.chemShift === undefined) return;\n    return {\n      multiplicity: result.js.map((j) => j.multiplicity).join(''),\n      kind: 'signal',\n      delta: result.chemShift,\n      js: result.js,\n    };\n  } else {\n    throw new Error(`length of signal should not exceed ${MAX_LENGTH} points`);\n  }\n}\n","import lodashDebounce from 'lodash/debounce';\nimport lodashMap from 'lodash/map';\nimport {\n  createContext,\n  CSSProperties,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nconst initialState = {\n  step: 'initial',\n  brush: {\n    start: null,\n    end: null,\n  },\n  startX: 0,\n  endX: 0,\n  startY: 0,\n  endY: 0,\n};\n\nexport const BrushContext = createContext(initialState);\n\ninterface BrushTrackerProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  onBrush?: (element: any) => void;\n  onZoom?: (element: any) => void;\n  onDoubleClick?: (element: any) => void;\n  onClick?: (element: any) => void;\n  noPropagation?: boolean;\n}\n\nexport function BrushTracker({\n  children,\n  className,\n  style,\n  onBrush = () => null,\n  onZoom = () => null,\n  onDoubleClick = () => null,\n  onClick = () => null,\n  noPropagation,\n}: BrushTrackerProps) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [mouseDownTime, setMouseDownTime] = useState<number>(0);\n  const debounceClickEventsRef = useRef<Array<any>>([]);\n\n  const mouseDownHandler = useCallback(\n    (event) => {\n      if (event.button === 0) {\n        if (noPropagation) {\n          event.stopPropagation();\n        }\n        dispatch({\n          type: 'DOWN',\n          shiftKey: event.shiftKey,\n          altKey: event.altKey,\n          screenX: event.screenX,\n          screenY: event.screenY,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          boundingRect: event.currentTarget.getBoundingClientRect(),\n        });\n\n        setMouseDownTime(event.timeStamp);\n      }\n      return false;\n    },\n    [noPropagation],\n  );\n\n  const clickHandler = useCallback(\n    (e) => {\n      e.persist();\n      const timeStamp = e.timeStamp;\n      const boundingRect = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - boundingRect.x;\n      const y = e.clientY - boundingRect.y;\n\n      const callback = lodashDebounce(() => {\n        if (\n          timeStamp - mouseDownTime <= 150 &&\n          debounceClickEventsRef.current.length === 1\n        ) {\n          onClick({ ...e, x, y });\n        }\n        debounceClickEventsRef.current = [];\n      }, 200);\n\n      debounceClickEventsRef.current.push(callback);\n\n      callback();\n\n      if (debounceClickEventsRef.current.length > 1) {\n        lodashMap(debounceClickEventsRef.current, (debounce) =>\n          debounce.cancel(),\n        );\n        debounceClickEventsRef.current = [];\n        onDoubleClick({ ...e, x, y });\n      }\n    },\n    [mouseDownTime, onClick, onDoubleClick],\n  );\n\n  const handleMouseWheel = useCallback(\n    (event) => {\n      const boundingRect = event.currentTarget.getBoundingClientRect();\n      const x = event.clientX - boundingRect.x;\n      const y = event.clientY - boundingRect.y;\n\n      const { deltaY, deltaX, shiftKey, deltaMode } = event;\n      onZoom({ deltaY: deltaY || deltaX, shiftKey, deltaMode, x, y });\n    },\n    [onZoom],\n  );\n\n  useEffect(() => {\n    const { step, startX, endX, startY, endY } = state;\n\n    if (step === 'end' && Math.hypot(endX - startX, endY - startY) > 5) {\n      onBrush(state);\n      dispatch({\n        type: 'DONE',\n      });\n    }\n  }, [onBrush, state]);\n\n  const moveCallback = useCallback((event) => {\n    dispatch({\n      type: 'MOVE',\n      screenX: event.screenX,\n      screenY: event.screenY,\n      clientX: event.clientX,\n      clientY: event.clientY,\n    });\n  }, []);\n\n  const upCallback = useCallback((event) => {\n    dispatch({\n      type: 'UP',\n      clientX: event.clientX,\n      clientY: event.clientY,\n    });\n    return false;\n  }, []);\n\n  return (\n    <BrushContext.Provider value={state}>\n      <div\n        className={className}\n        style={style}\n        onMouseDown={mouseDownHandler}\n        onMouseUp={upCallback}\n        onMouseMove={moveCallback}\n        onClick={clickHandler}\n        onWheel={handleMouseWheel}\n      >\n        {children}\n      </div>\n    </BrushContext.Provider>\n  );\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'UP':\n      if (state.step === 'brushing' || state.step === 'start') {\n        const { clientX, clientY } = action;\n\n        return {\n          ...state,\n          endX: clientX - state.boundingRect.x,\n          endY: clientY - state.boundingRect.y,\n\n          step: state.step === 'start' ? 'initial' : 'end',\n        };\n      }\n      return state;\n    case 'DOWN':\n      if (state.step === 'initial' || state.step === 'end') {\n        const {\n          screenX,\n          screenY,\n          clientX,\n          clientY,\n          boundingRect,\n          shiftKey,\n          altKey,\n        } = action;\n        const x = clientX - boundingRect.x;\n        const y = clientY - boundingRect.y;\n\n        return {\n          ...state,\n          shiftKey,\n          altKey,\n          startX: x,\n          startY: y,\n          startScreenX: screenX,\n          startScreenY: screenY,\n          startClientX: clientX,\n          startClientY: clientY,\n          boundingRect,\n          step: 'start',\n        };\n      }\n      return state;\n    case 'MOVE':\n      if (state.step === 'start' || state.step === 'brushing') {\n        const { clientX, clientY } = action;\n\n        return {\n          ...state,\n          step: 'brushing',\n          endX: clientX - state.boundingRect.x,\n          endY: clientY - state.boundingRect.y,\n        };\n      }\n      return state;\n    case 'DONE':\n      if (state.step === 'end') {\n        return {\n          ...state,\n          step: 'initial',\n        };\n      }\n      break;\n    default:\n      return state;\n  }\n}\n","import {\n  CSSProperties,\n  createContext,\n  useCallback,\n  useState,\n  useContext,\n  ReactNode,\n} from 'react';\n\nexport const MouseContext = createContext<any>({});\nconst MouseaProvider = MouseContext.Provider;\n\nexport function useMouseTracker() {\n  return useContext(MouseContext);\n}\n\ninterface MouseTrackerProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  noPropagation?: boolean;\n}\n\nexport function MouseTracker({\n  children,\n  className,\n  style,\n  noPropagation,\n}: MouseTrackerProps) {\n  const [mouseTrackerState, setMouseTrackerState] = useState<{\n    x: number;\n    y: number;\n  } | null>(null);\n  const mouseMoveHandler = useCallback(\n    (e) => {\n      const boundingRect = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - boundingRect.x;\n      const y = e.clientY - boundingRect.y;\n      setMouseTrackerState({ x, y });\n      if (noPropagation) {\n        e.stopPropagation();\n      }\n    },\n    [noPropagation],\n  );\n\n  const mouseLeaveHandler = useCallback(\n    (e) => {\n      setMouseTrackerState(null);\n      if (noPropagation) {\n        e.stopPropagation();\n      }\n    },\n    [noPropagation],\n  );\n\n  return (\n    <MouseaProvider value={mouseTrackerState}>\n      <div\n        className={className}\n        style={style}\n        onMouseMove={mouseMoveHandler}\n        onMouseLeave={mouseLeaveHandler}\n      >\n        {children}\n      </div>\n    </MouseaProvider>\n  );\n}\n","export const SignalKinds: { key: string; label: string; value: string }[] = [\n  {\n    key: 'signal',\n    label: 'Signal',\n    value: 'signal',\n  },\n  {\n    key: 'reference',\n    label: 'Reference',\n    value: 'reference',\n  },\n  {\n    key: 'solvent',\n    label: 'Solvent',\n    value: 'solvent',\n  },\n  {\n    key: 'impurity',\n    label: 'Impurity',\n    value: 'impurity',\n  },\n  {\n    key: 'standard',\n    label: 'Standard',\n    value: 'standard',\n  },\n  {\n    key: 'p1',\n    label: 'P1',\n    value: 'p1',\n  },\n  {\n    key: 'p2',\n    label: 'P2',\n    value: 'p2',\n  },\n  {\n    key: 'p3',\n    label: 'P3',\n    value: 'p3',\n  },\n];\n\nexport const SignalKindsToInclude = ['signal'];\nexport const DatumKind = { signal: 'signal', mixed: 'mixed' };\n","import { reimAbsolute } from 'ml-spectra-processing';\n\nexport const id = 'absolute';\nexport const name = 'Absolute';\n\n/**\n *\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('absolute not applicable on this data');\n  }\n\n  datum1D.data.re = reimAbsolute(datum1D.data);\n  datum1D.data.im = new Float64Array(0);\n  datum1D.info = { ...datum1D.info, isComplex: false };\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: false,\n    reduce: null,\n  };\n}\n","import { reimAutoPhaseCorrection } from 'ml-spectra-processing';\n\nexport const id = 'autoPhaseCorrection';\nexport const name = 'Automatic phase correction';\n\n/**\n *\n * @param {Datum1d} datum1d\n * @param {Object} [options={}]\n * @param {number} [options.ph0=0]\n * @param {number} [options.ph1=0]\n */\n\nconst defaultOptions = {\n  minRegSize: 5,\n  maxDistanceToJoin: 128,\n  magnitudeMode: true,\n  factorNoise: 5,\n};\n\nexport function apply(datum1D, options = {}) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('phaseCorrection not applicable on this data');\n  }\n  return reimAutoPhaseCorrection(datum1D.data, {\n    ...defaultOptions,\n    ...options,\n  });\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce(previousValue, newValue) {\n  let reduced = Object.assign({}, previousValue);\n  for (const k in reduced) {\n    reduced[k] += newValue[k];\n  }\n  return {\n    once: true,\n    reduce: reduced,\n  };\n}\n","import airPLS from 'ml-airpls';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport baselineRegression from 'ml-baseline-correction-regression';\n\nexport const id = 'baselineCorrection';\nexport const name = 'Baseline correction';\n\n/**\n *\n * @param {Datum1d} datum1d\n */\n\nexport const baselineAlgorithms = {\n  airpls: 'airPLS',\n  polynomial: 'Polynomial',\n};\n\nexport function apply(datum1D, options: any = {}) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('baselineCorrection not applicable on this data');\n  }\n  const { algorithm, zones = [] } = options;\n  let { x, re } = datum1D.data;\n\n  let corrected;\n  switch (algorithm) {\n    case 'airpls':\n      corrected = airPLS(x, re, options).corrected;\n      break;\n    case 'polynomial':\n      {\n        const baselineOptions = {\n          regressionOptions: options.degree,\n        };\n        let reduced = equallySpaced(\n          { x, y: re },\n          { numberOfPoints: 4096, zones },\n        );\n        let result = baselineRegression(reduced.x, reduced.y, baselineOptions);\n        let { regression } = result;\n        corrected = new Float64Array(x.length);\n        for (let i = 0; i < re.length; i++) {\n          corrected[i] = re[i] - regression.predict(x[i]);\n        }\n      }\n\n      break;\n    default:\n      throw new Error(`baselineCorrection: algorithm unknown: ${algorithm}`);\n  }\n\n  Object.assign(datum1D.data, { re: corrected });\n}\n\nexport function isApplicable(datum1D) {\n  if (!datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: false,\n    reduce: null,\n  };\n}\n","import { mean } from 'ml-stat/array';\n\nexport const id = 'centerMean';\nexport const name = 'Center Mean';\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('Center Mean is not applicable on this data');\n  }\n\n  const re = datum1D.data.re.slice(0);\n  const im = datum1D.data.im?.slice(0);\n\n  const reMean = mean(re);\n  const imMean = mean(im || []);\n\n  for (let i = 0; i < re.length; i++) {\n    re[i] -= reMean;\n    if (im) {\n      im[i] -= imMean;\n    }\n  }\n\n  datum1D.data.re = re;\n\n  if (im) {\n    datum1D.data.im = im;\n  }\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: false,\n    reduce: null,\n  };\n}\n","export const id = 'digitalFilter';\nexport const name = 'Digital Filter';\n\n/**\n * Move points from the beginning to the end of FID and performs a first order phase correction\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D, options: any = {}) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('Digital Filter is not applicable on this data');\n  }\n\n  let { digitalFilterValue = 0 } = options;\n  let re = new Float64Array(datum1D.data.re);\n  let im = new Float64Array(datum1D.data.im);\n\n  let pointsToShift = Math.floor(digitalFilterValue);\n\n  const skip = 0;\n  pointsToShift += 0;\n\n  const newRe = new Float64Array(re.length);\n  const newIm = new Float64Array(im.length);\n  newRe.set(re.slice(pointsToShift));\n  newRe.set(re.slice(skip, pointsToShift), re.length - pointsToShift);\n  newIm.set(im.slice(pointsToShift));\n  newIm.set(im.slice(skip, pointsToShift), im.length - pointsToShift);\n\n  datum1D.data.re = newRe;\n  datum1D.data.im = newIm;\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: true,\n    reduce: undefined,\n  };\n}\n","import equallySpaced from 'ml-array-xy-equally-spaced';\n\nexport const id = 'equallySpaced';\nexport const name = 'Equally Spaced';\n\n/**\n * Equally Spaced\n * **\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param {Datum1d} datum1d\n * @param {Object} options.from\n * @param {number} options.to\n * @param {number} options.numberOfPoints\n * @param {Array<{from:number;to:number}>} options.exclusions\n */\n\nexport function apply(datum1D, options: any = {}) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('Equally Spaced is not applicable on this data');\n  }\n  const { from, to, numberOfPoints, exclusions } = options;\n  const { x, re, im } = datum1D.data;\n  const XREdata = equallySpaced(\n    { x, y: re },\n    { from, to, numberOfPoints, exclusions },\n  );\n\n  datum1D.data.x = XREdata.x;\n  datum1D.data.re = XREdata.y;\n  if (im) {\n    const XIMdata = equallySpaced(\n      { x, y: re },\n      { from, to, numberOfPoints, exclusions },\n    );\n    datum1D.data.im = XIMdata.y;\n  }\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: false,\n    reduce: null,\n  };\n}\n","import { xySetYValue, zonesNormalize } from 'ml-spectra-processing';\n\nimport { Datum1D } from '../../types/data1d/Datum1D';\n\nexport const id = 'exclusionZones';\nexport const name = 'Exclusion Zones';\n\n/**\n *\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D: Datum1D, zones = []) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('Exclusion Zones filter not applicable on this data');\n  }\n  const { x, re, im } = datum1D.data;\n  datum1D.data.re = xySetYValue({ x, y: re }, { zones }).y as number[];\n  datum1D.data.im = (im\n    ? xySetYValue({ x, y: re }, { zones })\n    : im) as unknown as number[];\n}\n\nexport function isApplicable(datum1D: Datum1D) {\n  if (datum1D.info.isComplex && datum1D.info.isFt) return true;\n  return false;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: zonesNormalize(previousValue.concat(newValue)),\n  };\n}\n","import { reimFFT, reimPhaseCorrection } from 'ml-spectra-processing';\n\nexport const id = 'fft';\nexport const name = 'FFT';\n\n/**\n *\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('fft not applicable on this data');\n  }\n\n  let digitalFilterApplied = datum1D.filters.some(\n    (e) => e.name === 'digitalFilter' && e.flag,\n  );\n\n  Object.assign(datum1D.data, reimFFT(datum1D.data, { applyZeroShift: true }));\n\n  if (digitalFilterApplied) {\n    let { digitalFilter } = datum1D.info;\n    let ph1 = (digitalFilter - Math.floor(digitalFilter)) * Math.PI * 2;\n    Object.assign(datum1D.data, reimPhaseCorrection(datum1D.data, 0, ph1));\n  }\n\n  datum1D.data.x = generateXAxis(datum1D);\n  datum1D.info = { ...datum1D.info, isFid: false, isFt: true };\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: true,\n    reduce: undefined,\n  };\n}\n\nfunction generateXAxis(datum1D) {\n  const info = datum1D.info;\n  const baseFrequency = parseFloat(info.baseFrequency);\n  const frequencyOffset = parseFloat(info.frequencyOffset);\n  const spectralWidth = parseFloat(info.spectralWidth);\n  const offset = frequencyOffset / baseFrequency;\n  let spectralHalfWidth = 0.5 * spectralWidth;\n  let nbPoints = datum1D.data.x.length;\n  let firstPoint = offset - spectralHalfWidth;\n  let dx = spectralWidth / (nbPoints - 1);\n  const xAxis = new Array(nbPoints);\n  for (let i = 0; i < nbPoints; i++) {\n    xAxis[i] = firstPoint;\n    firstPoint += dx;\n  }\n  return xAxis;\n}\n","import { xGetFromToIndex } from 'ml-spectra-processing';\n\nexport const id = 'fromTo';\nexport const name = 'From/To';\n\n/**\n *\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D, options: any = {}) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('From/To filter not applicable on this data');\n  }\n  const { x, re, im } = datum1D.data;\n  const { from, to } = options;\n  const { fromIndex, toIndex } = xGetFromToIndex(x, { from, to });\n\n  datum1D.data.x = x.slice(fromIndex, toIndex);\n  datum1D.data.re = re.slice(fromIndex, toIndex);\n  if (im) {\n    datum1D.data.im = im.slice(fromIndex, toIndex);\n  }\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: newValue,\n  };\n}\n","export const id = 'lineBroadening';\nexport const name = 'Line broadening';\n\n/**\n *\n * @param {Datum1d} datum1d\n * @param {Object} [value]\n */\n\nexport function apply(datum1D, value) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('lineBroadening not applicable on this data');\n  }\n\n  let grpdly = datum1D.info.digitalFilter;\n  let pointsToShift;\n  if (grpdly > 0) {\n    pointsToShift = Math.floor(grpdly);\n  } else {\n    pointsToShift = 0;\n  }\n\n  const re = datum1D.data.re;\n  const im = datum1D.data.im;\n  const t = datum1D.data.x;\n\n  const length = re.length;\n\n  const newRE = new Float64Array(length); // I don't think we need a new array... here\n  const newIM = new Float64Array(length);\n  //if (value !== 0) {// is it OK to skip this line if \"value\" is zero?\n  //please check this test of zero is correct !== or != ...\n  const dw = (t[length - 1] - t[0]) / (length - 1); //REPLACE CONSTANT with calculated value... : for this we need AQ or DW to set it right...\n  // convert line broadening in Hz into exponential coefficient:\n  const em = -value * Math.exp(1);\n\n  const coefExp = Math.exp(em * dw);\n  let curFactor = Math.exp(em * t[0]); // in case does not start at zero\n  for (let i = 0; i < length - pointsToShift; i++) {\n    newRE[i] = re[i] * curFactor;\n    newIM[i] = im[i] * curFactor;\n    curFactor = curFactor * coefExp;\n  }\n  curFactor = Math.exp(em * t[0]);\n  for (let i = length; i > length - pointsToShift; i--) {\n    newRE[i] = re[i] * curFactor;\n    newIM[i] = im[i] * curFactor;\n    curFactor = curFactor * coefExp;\n  }\n  datum1D.data = { ...datum1D.data, ...{ re: newRE, im: newIM } };\n  //}\n}\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: previousValue + newValue,\n  };\n}\n","import { xParetoNormalization } from 'ml-spectra-processing';\n\nexport const id = 'pareto';\nexport const name = 'Pareto';\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('Pareto is not applicable on this data');\n  }\n\n  const re = datum1D.data.re.slice(0);\n  const im = datum1D.data.im?.slice(0);\n\n  datum1D.data.re = xParetoNormalization(re);\n  if (im) {\n    datum1D.data.im = xParetoNormalization(im);\n  }\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: false,\n    reduce: null,\n  };\n}\n","import { reimPhaseCorrection } from 'ml-spectra-processing';\n\nexport const id = 'phaseCorrection';\nexport const name = 'Phase correction';\n\n/**\n *\n * @param {Datum1d} datum1d\n * @param {Object} [options={}]\n * @param {number} [options.ph0=0]\n * @param {number} [options.ph1=0]\n */\n\nexport function apply(datum1D, options: any = {}) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('phaseCorrection not applicable on this data');\n  }\n  let { ph0, ph1 } = options;\n  ph0 *= Math.PI / 180.0;\n  ph1 *= Math.PI / 180.0;\n  Object.assign(datum1D.data, reimPhaseCorrection(datum1D.data, ph0, ph1));\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: newValue,\n  };\n}\n","/**\n *\n * @param {Object} datum1d\n * @param {number} [shiftValue=0]\n */\n\nexport const id = 'shiftX';\nexport const name = 'Shift X';\n\nexport function apply(datum1D, shiftValue = 0) {\n  datum1D.data.x = datum1D.data.x.map((val) => val + shiftValue);\n}\n\nexport function isApplicable() {\n  return true;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: previousValue + newValue,\n  };\n}\n","import { standardDeviation } from 'ml-stat/array';\n\nexport const id = 'standardDeviation';\nexport const name = 'Standard Deviation';\n\n/**\n * Computes the standard deviation of the given values\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('Standard Deviation is not applicable on this data');\n  }\n\n  const re = datum1D.data.re.slice(0);\n  const im = datum1D.data.im?.slice(0);\n\n  const reStd = standardDeviation(re);\n  const imStd = standardDeviation(im || []);\n\n  for (let i = 0; i < re.length; i++) {\n    re[i] /= reStd;\n    if (im) {\n      im[i] /= imStd;\n    }\n  }\n\n  datum1D.data.re = re;\n\n  if (im) {\n    datum1D.data.im = im;\n  }\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: false,\n    reduce: null,\n  };\n}\n","export const id = 'zeroFilling';\nexport const name = 'Zero Filling';\n/**\n *\n * @param {Datum1d} datum1d\n * @param {Object} [size]\n */\nexport function apply(datum1D, size) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('zeroFilling not applicable on this data');\n  }\n\n  let digitalFilterApplied = datum1D.filters.some(\n    (e) => e.name === 'digitalFilter' && e.flag,\n  );\n\n  let grpdly = datum1D.info.digitalFilter;\n  let pointsToShift;\n  if (grpdly > 0 && digitalFilterApplied) {\n    pointsToShift = Math.floor(grpdly);\n  } else {\n    pointsToShift = 0;\n  }\n\n  const { re, im, x } = datum1D.data;\n\n  let newRE = new Float64Array(size);\n  let newIM = new Float64Array(size);\n  let newX = new Float64Array(size);\n\n  const length = Math.min(size, re.length);\n\n  newRE.set(re.slice(0, length - pointsToShift));\n  newIM.set(im.slice(0, length - pointsToShift));\n  newX.set(x.slice(0, length - pointsToShift));\n\n  let diff = x[1] - x[0];\n  let currentX = x[length - pointsToShift - 1];\n  for (let i = length - pointsToShift; i < size; i++) {\n    currentX += diff;\n    newX[i] = currentX;\n  }\n\n  if (pointsToShift > 0 && pointsToShift < size) {\n    newRE.set(re.slice(re.length - pointsToShift), size - pointsToShift);\n    newIM.set(im.slice(re.length - pointsToShift), size - pointsToShift);\n  }\n\n  datum1D.data = { ...datum1D.data, ...{ re: newRE, im: newIM, x: newX } };\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce(_previousValue, newValue) {\n  return {\n    once: true,\n    reduce: newValue,\n  };\n}\n","/**\n *\n * @param {Object} datum2d\n * @param {number} [shiftValue=0]\n */\n\nexport const id = 'shift2DX';\nexport const name = 'Shift 2D X';\n\nexport function apply(datum2D, shiftValue = 0) {\n  datum2D.data.minX += shiftValue;\n  datum2D.data.maxX += shiftValue;\n}\n\nexport function isApplicable() {\n  return true;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: previousValue + newValue,\n  };\n}\n","/**\n *\n * @param {Object} datum2d\n * @param {number} [shiftValue=0]\n */\n\nexport const id = 'shift2DY';\nexport const name = 'Shift 2D Y';\n\nexport function apply(datum2D, shiftValue = 0) {\n  datum2D.data.minY += shiftValue;\n  datum2D.data.maxY += shiftValue;\n}\n\nexport function isApplicable() {\n  return true;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: previousValue + newValue,\n  };\n}\n","const BASE62 = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nconst LENGTH = 8;\n\nexport default function generateID(): string {\n  let id = '';\n  for (let i = 0; i < LENGTH; i++) {\n    id += BASE62.charAt(Math.floor(Math.random() * 62));\n  }\n  return id;\n}\n","/* eslint-disable import/namespace */\nimport * as Filters from './Filters';\nimport generateID from './utilities/generateID';\n\nexport interface Filter {\n  id: string;\n  name: string;\n  label: string;\n  isDeleteAllow: boolean;\n  flag: boolean;\n  value: any;\n}\n\n/***\n * @param {object} Filters [{name:'',options:{}},{...}]\n */\nfunction applyFilter(datum, filters: any[] = []) {\n  let isReduced = false;\n  for (let filter of filters) {\n    const filterOption = {\n      name: filter.name,\n      label: Filters[filter.name].name,\n      value: filter.options,\n    };\n    const previousFilter = lookupForFilter(datum, filter.name);\n    if (previousFilter) {\n      const reduceResult = Filters[filter.name].reduce(\n        previousFilter.value,\n        filterOption.value,\n      );\n      if (reduceResult.once) {\n        if (!isReduced) {\n          isReduced = true;\n        }\n        if (reduceResult.reduce != null && reduceResult.reduce !== undefined) {\n          replaceFilter(datum, previousFilter.id, reduceResult.reduce);\n        }\n      } else {\n        addFilter(\n          datum,\n          filterOption,\n          Object.prototype.hasOwnProperty.call(filter, 'isDeleteAllow')\n            ? filter.isDeleteAllow\n            : true,\n        );\n      }\n    } else {\n      addFilter(\n        datum,\n        filterOption,\n        Object.prototype.hasOwnProperty.call(filter, 'isDeleteAllow')\n          ? filter.isDeleteAllow\n          : true,\n      );\n    }\n  }\n  if (isReduced) {\n    if (filters.length === 1 && isLastFilter(datum, filters[0].name)) {\n      Filters[filters[0].name].apply(datum, filters[0].options);\n    } else {\n      reapplyFilters(datum);\n    }\n  } else {\n    for (let filter of filters) {\n      Filters[filter.name].apply(datum, filter.options);\n    }\n  }\n}\n\nfunction isLastFilter(datum, id) {\n  const index = datum.filters.findIndex((f) => f.name === id);\n  if (datum.filters.length === index + 1) {\n    return true;\n  }\n  return false;\n}\n\nfunction lookupForFilter(datum, filterName) {\n  return datum.filters.find((f) => f.name === filterName);\n}\n\nfunction reapplyFilters(datum, filters: any = null) {\n  const _filters = filters ? filters : datum.filters;\n  enableFilter(datum, null, null, _filters);\n}\n\n// id filter id\nfunction enableFilter(datum, id, checked, filters = null) {\n  datum.filters = datum.filters.slice(0);\n  if (id) {\n    datum.filters = datum.filters.map((filter) => {\n      return { ...filter, flag: filter.id === id ? checked : filter.flag };\n    }, []);\n  }\n  datum.data = { ...datum.data, ...datum.originalData };\n  datum.info = { ...datum.info, ...datum.originalInfo };\n  const _filters = filters ? filters : datum.filters;\n  for (let filterIndex in _filters) {\n    const filter = datum.filters[filterIndex];\n    datum.filters[filterIndex] = {\n      ...datum.filters[filterIndex],\n      error: null,\n    };\n\n    if (filter.flag) {\n      try {\n        Filters[filter.name].apply(datum, filter.value);\n      } catch (error: any) {\n        datum.filters[filterIndex] = {\n          ...datum.filters[filterIndex],\n          error: error.message,\n        };\n      }\n    }\n  }\n}\nfunction deleteFilter(datum, id) {\n  datum.filters = datum.filters.slice(0);\n  datum.filters = datum.filters.filter((filter) => filter.id !== id);\n  datum.data = { ...datum.data, ...datum.originalData };\n  datum.info = { ...datum.info, ...datum.originalInfo };\n\n  for (let filterIndex in datum.filters) {\n    const filter = datum.filters[filterIndex];\n    datum.filters[filterIndex] = {\n      ...datum.filters[filterIndex],\n      error: null,\n    };\n\n    if (filter.flag) {\n      try {\n        Filters[filter.name].apply(datum, filter.value);\n      } catch (error: any) {\n        datum.filters[filterIndex] = {\n          ...datum.filters[filterIndex],\n          error: error.message,\n        };\n      }\n    }\n  }\n}\n\nfunction addFilter(datum, filter, isDeleteAllow = true) {\n  const id = generateID();\n  datum.filters = datum.filters.slice(0);\n  delete filter.isSnapshot;\n  datum.filters.push({\n    ...filter,\n    id: id,\n    flag: true,\n    isDeleteAllow,\n  });\n}\n\nfunction replaceFilter(datum, filterID, value) {\n  datum.filters = datum.filters.slice(0);\n  const index = datum.filters.findIndex((f) => f.id === filterID);\n  delete datum.filters[index].isSnapshot;\n  datum.filters[index] = {\n    ...datum.filters[index],\n    value,\n  };\n}\n\nexport { applyFilter, reapplyFilters, enableFilter, addFilter, deleteFilter };\n","export const COLORS: string[] = [\n  '#C10020',\n  '#007D34',\n  '#803E75',\n  '#FF6800',\n  '#B32851',\n  '#7F180D',\n  '#232C16',\n  '#A6BDD7',\n  '#CEA262',\n  '#817066',\n  '#FF8E00',\n  '#F6768E',\n  '#00538A',\n  '#FF7A5C',\n  '#53377A',\n  '#FFB300',\n  '#F4C800',\n  '#93AA00',\n  '#593315',\n  '#F13A13',\n];\n\ninterface TwoDColors {\n  positiveColor: string;\n  negativeColor: string;\n}\n\nconst color2D: Record<string, TwoDColors> = {\n  cosy: { positiveColor: 'darkblue', negativeColor: 'blue' },\n  roesy: { positiveColor: '#e75480', negativeColor: 'yellow' },\n  noesy: { positiveColor: '#e75480', negativeColor: 'yellow' },\n  tocsy: { positiveColor: 'green', negativeColor: 'yellow' },\n  hsqc: { positiveColor: 'black', negativeColor: 'yellow' },\n  hmbc: { positiveColor: 'darkviolet', negativeColor: 'yellow' },\n};\n\nexport function get2DColor(experiment: string, colors = []): TwoDColors {\n  if (!color2D[experiment]) {\n    const positiveColor = getColor(false, colors);\n    const negativeColor = adjustAlpha(positiveColor, 50);\n    return { positiveColor, negativeColor };\n  }\n  return color2D[experiment];\n}\n\nfunction percentToHex(p: number): string {\n  const percent = Math.max(0, Math.min(100, p));\n  const intValue = Math.round((percent / 100) * 255);\n  const hexValue = intValue.toString(16);\n  return percent === 100 ? '' : hexValue.padStart(2, '0');\n}\n\nexport function adjustAlpha(color: string, factor: number): string {\n  return color + percentToHex(factor);\n}\n\nexport default function getColor(\n  isRandom = false,\n  usedColors: string[] = [],\n  opacity = 100,\n) {\n  const resetColors = COLORS.filter((c) => !usedColors.includes(c));\n  if (resetColors.length > 0 && !isRandom) {\n    return resetColors[0] + percentToHex(opacity);\n  } else {\n    const lum = -0.25;\n    let hex = String(\n      `#${Math.random().toString(16).slice(2, 8).toUpperCase()}`,\n    ).replace(/[^0-9a-f]/gi, '');\n    if (hex.length < 6) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    let rgb = '#';\n    let c: number | string;\n    for (let i = 0; i < 3; i++) {\n      c = parseInt(hex.substr(i * 2, 2), 16);\n      c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n      rgb += `00${c}`.substr(c.length);\n    }\n\n    return rgb + percentToHex(opacity);\n  }\n}\n","import merge from 'lodash/merge';\n\nimport { Integrals } from '../../../types/data1d';\n\nexport function initiateIntegrals(options: Partial<{ integrals: Integrals }>) {\n  return merge(\n    {\n      values: [],\n      options: {\n        sum: undefined,\n        isSumConstant: true,\n        sumAuto: true,\n      },\n    },\n    options.integrals,\n  );\n}\n","import { Datum1D } from '../../types/data1d/Datum1D';\n\nexport function getSpectrumErrorValue(datum: Datum1D) {\n  const { x } = datum.data;\n  return (x[x.length - 1] - x[0]) / 10000;\n}\n","import * as FiltersTypes from '../../../Filters';\nimport { Datum1D } from '../../../types/data1d/Datum1D';\n\nexport function getShiftX(datum: Datum1D): number {\n  const filter =\n    datum?.filters &&\n    datum?.filters.find((filter) => filter.name === FiltersTypes.shiftX.id);\n\n  return filter?.flag ? filter.value : 0;\n}\n","import { Peak, Datum1D } from '../../../types/data1d';\nimport generateID from '../../../utilities/generateID';\nimport { getSpectrumErrorValue } from '../getSpectrumErrorValue';\nimport { getShiftX } from '../shift/getShiftX';\n\nfunction checkPeak(peak: Peak, datum: Datum1D, error) {\n  // check if the Peak is already exists\n  for (const { x } of datum.peaks?.values || []) {\n    if (Math.abs(peak.x - x) < error) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function mapPeaks(peaks: Peak[], datum: Datum1D) {\n  const shiftX = getShiftX(datum);\n\n  const error = getSpectrumErrorValue(datum);\n\n  return peaks.reduce<Peak[]>((acc, newPeak) => {\n    // check if the peak is already exists\n    if (checkPeak(newPeak, datum, error)) return acc;\n\n    acc.push({\n      id: newPeak?.id || generateID(),\n      originalX: newPeak.x - shiftX,\n      x: newPeak.x,\n      y: newPeak.y,\n      width: newPeak.width,\n    });\n\n    return acc;\n  }, []);\n}\n","import merge from 'lodash/merge';\n\nimport { Datum1D, Peaks } from '../../../types/data1d';\n\nimport { mapPeaks } from './mapPeaks';\n\nexport function initiatePeaks(\n  options: Partial<{ peaks: Peaks }>,\n  datum: Datum1D,\n) {\n  return merge({ values: [], options: {} }, options.peaks, {\n    values: mapPeaks(options?.peaks?.values || [], datum),\n  });\n}\n","import { xyIntegration } from 'ml-spectra-processing';\n\nimport { DatumKind } from '../../../constants/SignalsKinds';\nimport { Datum1D, Range } from '../../../types/data1d';\nimport generateID from '../../../utilities/generateID';\nimport { getSpectrumErrorValue } from '../getSpectrumErrorValue';\nimport { getShiftX } from '../shift/getShiftX';\n\nfunction checkRange(range: Range, datum: Datum1D, error) {\n  // check if the range is already exists\n  for (const { from, to } of datum.ranges?.values || []) {\n    if (\n      Math.abs(range.from - from) < error &&\n      Math.abs(range.to - to) < error\n    ) {\n      return true;\n    }\n  }\n}\n\nexport function mapRanges(ranges: Range[], datum: Datum1D) {\n  const { x, re } = datum.data;\n  const shiftX = getShiftX(datum);\n  const error = getSpectrumErrorValue(datum);\n  return ranges.reduce<Array<Range>>((acc, newRange) => {\n    if (checkRange(newRange, datum, error)) return acc;\n\n    const absolute = xyIntegration(\n      { x, y: re },\n      { from: newRange.from, to: newRange.to, reverse: true },\n    );\n    const signals = newRange.signals.map((signal) => {\n      const { kind = null, id, ...resSignal } = signal;\n      return {\n        kind: kind || 'signal',\n        id: id || generateID(),\n        originDelta: signal.delta - shiftX,\n        ...resSignal,\n      };\n    });\n\n    acc.push({\n      ...newRange,\n      kind: signals?.[0].kind || DatumKind.signal,\n      originFrom: newRange.from - shiftX,\n      originTo: newRange.to - shiftX,\n      id: newRange.id || generateID(),\n      absolute,\n      signals,\n    });\n\n    return acc;\n  }, []);\n}\n","import merge from 'lodash/merge';\n\nimport { Datum1D, Ranges } from '../../../types/data1d';\n\nimport { mapRanges } from './mapRanges';\n\nexport function initiateRanges(\n  options: Partial<{ ranges: Ranges }>,\n  datum: Datum1D,\n) {\n  return merge(\n    {\n      values: [],\n      options: {\n        sum: undefined,\n        isSumConstant: true,\n        sumAuto: true,\n      },\n    },\n    options.ranges,\n    {\n      values: mapRanges(options?.ranges?.values || [], datum),\n    },\n  );\n}\n","import * as FiltersTypes from '../../Filters';\nimport * as FiltersManager from '../../FiltersManager';\nimport { Datum1D } from '../../types/data1d/Datum1D';\nimport generateID from '../../utilities/generateID';\nimport get1dColor from '../../utilities/getColor';\n\nimport { initiateIntegrals } from './integrals/initiateIntegrals';\nimport { initiatePeaks } from './peaks/initiatePeaks';\nimport { initiateRanges } from './ranges/initiateRanges';\n\nexport function initiateDatum1D(options: any, usedColors = {}): Datum1D {\n  const datum: Partial<Datum1D> = {};\n  datum.id = options.id || generateID();\n  datum.source = Object.assign(\n    {\n      jcampURL: null,\n      file: {\n        binary: null,\n        name: '',\n        extension: '',\n      },\n    },\n    options.source,\n  );\n\n  datum.display = Object.assign(\n    {\n      name: options.display?.name ? options.display.name : generateID(),\n      ...getColor(options, usedColors),\n      isVisible: true,\n      isPeaksMarkersVisible: true,\n      isRealSpectrumVisible: true,\n    },\n    options.display,\n  );\n\n  datum.info = Object.assign(\n    {\n      nucleus: '1H', // 1H, 13C, 19F, ...\n      isFid: false,\n      isComplex: false, // if isComplex is true that mean it contains real/ imaginary  x set, if not hid re/im button .\n      dimension: 1,\n    },\n    options.info,\n  );\n\n  datum.originalInfo = datum.info;\n\n  datum.meta = Object.assign({}, options.meta);\n  datum.data = Object.assign(\n    {\n      x: [],\n      re: [],\n      im: [],\n    },\n    options.data,\n  );\n  datum.originalData = datum.data;\n\n  datum.filters = Object.assign([], options.filters); //array of object {name: \"FilterName\", options: FilterOptions = {value | object} }\n\n  datum.peaks = initiatePeaks(options, datum as Datum1D);\n\n  // array of object {index: xIndex, xShift}\n  // in case the peak does not exactly correspond to the point value\n  // we can think about a second attributed `xShift`\n  datum.integrals = initiateIntegrals(options); // array of object (from: xIndex, to: xIndex)\n  datum.ranges = initiateRanges(options, datum as Datum1D);\n\n  //reapply filters after load the original data\n  FiltersManager.reapplyFilters(datum);\n\n  preprocessing(datum);\n  return datum as Datum1D;\n}\n\nfunction getColor(options, usedColors) {\n  let color = 'black';\n  if (options?.display?.color === undefined) {\n    color = get1dColor(false, usedColors['1d'] || []);\n  } else {\n    color = options.display.color;\n  }\n\n  if (usedColors['1d']) {\n    usedColors['1d'].push(color);\n  }\n\n  return { color };\n}\n\nfunction preprocessing(datum) {\n  if (\n    datum.info.isFid &&\n    datum.filters.findIndex((f) => f.name === FiltersTypes.digitalFilter.id) ===\n      -1 &&\n    datum.info.digitalFilter\n  ) {\n    FiltersManager.applyFilter(datum, [\n      {\n        name: FiltersTypes.digitalFilter.id,\n        options: {\n          digitalFilterValue: datum.info.digitalFilter,\n        },\n        isDeleteAllow: false,\n      },\n    ]);\n  }\n}\n","import { rangesToXY } from 'nmr-processing';\n\nimport { UsedColors } from '../../../../types/UsedColors';\nimport { Datum1D, Range } from '../../../types/data1d';\nimport { initiateDatum1D } from '../initiateDatum1D';\n\nimport { mapRanges } from './mapRanges';\n\nexport function generateSpectrumFromRanges(\n  ranges: Range[],\n  info: {\n    nucleus: string;\n    solvent: string;\n    name?: string;\n    frequency?: number;\n    color?: string;\n  },\n  usedColors: UsedColors,\n): Datum1D {\n  const { nucleus, solvent, name = null, frequency = 400 } = info;\n  const { x, y } = rangesToXY(ranges, {\n    frequency,\n    nbPoints: 524288,\n  });\n\n  const datum = initiateDatum1D(\n    {\n      data: { x, im: null, re: y },\n      display: { name },\n      info: {\n        nucleus,\n        originFrequency: frequency,\n        baseFrequency: frequency,\n        pulseSequence: '',\n        solvent,\n        isFt: true,\n      },\n    },\n    usedColors,\n  );\n  datum.ranges.values = mapRanges(ranges, datum);\n\n  return datum;\n}\n","import { resurrect } from 'nmr-processing';\n\nimport { UsedColors } from '../../../types/UsedColors';\nimport { Datum1D } from '../../types/data1d';\n\nimport { generateSpectrumFromRanges } from './ranges/generateSpectrumFromRanges';\n\nexport function generateSpectrumFromPublicationString(\n  publicationString: string,\n  usedColors: UsedColors,\n): Datum1D {\n  const {\n    ranges,\n    experiment: { nucleus, solvent },\n    parts,\n  } = resurrect(publicationString);\n  return generateSpectrumFromRanges(\n    ranges,\n    { nucleus, solvent, name: parts[0] },\n    usedColors,\n  );\n}\n","import { Datum1D } from '../../types/data1d';\n\n/**\n * @typedef {Object} datum\n * @property {number[]} x - The X points series\n * @property {number[]} y - The Y points series\n */\n\n/**\n *\n * @param spectrum 1d spectrum\n * @returns {datum} datum object includes x and y series\n */\n\nexport function get1DDataXY(spectrum: Datum1D): {\n  x: number[];\n  y: number[];\n} {\n  const {\n    display: { isRealSpectrumVisible },\n    data: { x, re, im },\n  } = spectrum;\n\n  return { x, y: isRealSpectrumVisible ? re : im };\n}\n","interface ReferenceInfo {\n  from: number;\n  to: number;\n  nbPeaks: number;\n  delta: number;\n}\n\nexport const REFERENCES: Record<string, Record<string, ReferenceInfo>> = {\n  '1H': {\n    tms: {\n      from: -0.1,\n      to: 0.1,\n      nbPeaks: 1,\n      delta: 0,\n    },\n    tsp: {\n      from: -0.1,\n      to: 0.1,\n      nbPeaks: 1,\n      delta: 0,\n    },\n    glucose: {\n      from: 5.18,\n      to: 5.28,\n      nbPeaks: 2,\n      delta: 5.23,\n    },\n  },\n  '13C': {},\n};\n\nexport function getRange(\n  options: { nucleus?: string; reference?: string } = {},\n): ReferenceInfo {\n  const { nucleus = '1H', reference = 'tms' } = options;\n\n  if (!REFERENCES[nucleus]) {\n    throw new Error(`Nucleus not found: ${nucleus}`);\n  }\n\n  const info = REFERENCES[nucleus][reference.toLowerCase()];\n\n  if (!info) {\n    throw new Error(`Reference not found: ${reference}`);\n  }\n\n  return {\n    from: info.delta - 0.05,\n    to: info.delta + 0.05,\n    delta: info.delta,\n    nbPeaks: info.nbPeaks,\n  };\n}\n","import type { DataXY } from 'cheminfo-types';\nimport mean from 'ml-array-mean';\nimport { gsd } from 'ml-gsd';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\n\nimport { getRange } from '../../constants/References';\n\n/**\n *\n * @param {*} datum1D\n * @param {object} [options={}]\n * @param {number} [options.from]\n * @param {number} [options.to] Define the from zone where the reference is expected to be found\n * @param {number} [options.from]\n * @param {number} [options.nbPeaks]\n * @param {number} [options.targetX]\n * @param {string} [options.reference]\n */\nexport function getReferenceShift(datum1D, options) {\n  let { from, to, nbPeaks, targetX, reference } = options;\n  if (reference) {\n    let data = getRange({ reference: reference, nucleus: datum1D.nucleus });\n    from = data.from;\n    to = data.to;\n    nbPeaks = data.nbPeaks;\n    targetX = data.delta;\n  }\n\n  const { re, x } = datum1D.data;\n  return xyCalibrate({ x, y: re }, { from, to }, { nbPeaks, targetX });\n}\n\n// This is a copy of the function defined in https://github.com/cheminfo/spectra-processor/blob/b87f6f6c4d45a64dc16f3f9692d5f5dc7e398e5e/src/spectrum/xyCalibrate.js\nfunction xyCalibrate(\n  data: DataXY,\n  range: { to?: number; from?: number } = {},\n  options: {\n    targetX?: number;\n    nbPeaks?: number;\n    gsd?: {\n      minMaxRatio: number;\n      realTopDetection: boolean;\n      smoothY: boolean;\n      sgOptions: {\n        windowSize: number;\n        polynomial: number;\n      };\n    };\n  } = {},\n): number {\n  const {\n    targetX = 0,\n    nbPeaks = 1,\n    gsd: gsdOptions = {\n      minMaxRatio: 0.1,\n      realTopDetection: true,\n      smoothY: true,\n      sgOptions: {\n        windowSize: 7,\n        polynomial: 3,\n      },\n    },\n  } = options;\n  let { from, to } = range;\n  if (from === undefined || to === undefined) return 0;\n\n  const fromIndex = xFindClosestIndex(data.x, from);\n  const toIndex = xFindClosestIndex(data.x, to);\n  const sliceddata = {\n    x: data.x.slice(fromIndex, toIndex) as number[],\n    y: data.y.slice(fromIndex, toIndex) as number[],\n  };\n\n  let peaks = gsd(sliceddata, gsdOptions)\n    .sort((a, b) => b.y - a.y)\n    .slice(0, nbPeaks);\n\n  if (peaks.length === 0) return 0;\n\n  const middle = mean(peaks.map((peak) => peak.x));\n\n  return targetX - middle;\n}\n","import { Datum1D, Integral } from '../../../types/data1d';\n\nexport function changeIntegralsRelative(\n  datum: Datum1D,\n  newIntegral: { id: string; value: number },\n) {\n  const index = datum.integrals.values.findIndex(\n    (integral) => integral.id === newIntegral.id,\n  );\n  if (index !== -1) {\n    const ratio = datum.integrals.values[index].absolute / newIntegral.value;\n    const { values, sum } = datum.integrals.values.reduce<{\n      sum: number;\n      values: Integral[];\n    }>(\n      (acc, integral, index) => {\n        const newIntegralValue = integral.absolute / ratio;\n        acc.sum += newIntegralValue;\n        acc.values[index] = {\n          ...integral,\n          integral: newIntegralValue,\n        };\n\n        return acc;\n      },\n      { values: [], sum: 0 },\n    );\n\n    datum.integrals.values = values;\n    datum.integrals.options = {\n      ...datum.integrals.options,\n      mf: undefined,\n      moleculeKey: undefined,\n      sumAuto: false,\n      sum,\n    };\n  }\n}\n","import { SignalKindsToInclude } from '../../../constants/SignalsKinds';\nimport { Integral } from '../../../types/data1d';\n\n/**\n * check whether integral based on its kind can be included in another operation or not\n * @param integral  integral\n * @returns {boolean}\n */\nexport function checkIntegralKind(integral: Integral): boolean {\n  return SignalKindsToInclude.includes(integral.kind);\n}\n","/**\n * Sum values for specific key in the object\n * @param values array of object\n * @param key key\n * @param check custom check function to to indicate if certain object included or not in the summation\n * @returns number\n */\n\nexport function getSum<Type>(\n  values: Type[],\n  key: keyof Extract<Type, string>,\n  check: ((value: Type) => boolean) | null = null,\n) {\n  return values.reduce((sum, current) => {\n    return check && check(current) === true\n      ? (sum += Math.abs(current[key as string]))\n      : sum;\n  }, 0);\n}\n","import { Integral, Range, Integrals, Ranges } from '../../../types/data1d';\nimport { getSum } from '../../../utilities/getSum';\n\nexport function updateRelatives<Type extends Integral | Range>(\n  data: Type extends Integral ? Integrals : Ranges,\n  key: keyof Type,\n  check: (value: Type) => boolean,\n  forceCalculateIntegral = false,\n): void {\n  const { values, options } = data;\n\n  const currentSum = getSum<Type>(values as Type[], 'absolute', check);\n\n  let factor = 0;\n  if (options.sum) {\n    if (data.options.isSumConstant || forceCalculateIntegral) {\n      factor = currentSum > 0 ? options.sum / currentSum : 0.0;\n    } else {\n      if (data.values?.[0]) {\n        const item = data.values[0];\n        factor =\n          (item[key as string] ? item[key as string] : options.sum) /\n          item.absolute;\n      }\n    }\n  }\n  data.values = data.values.map((value) => {\n    return {\n      ...value,\n      ...(check(value) && {\n        [key as string]: value.absolute * factor,\n      }),\n    };\n  });\n\n  if (!data.options.isSumConstant && !forceCalculateIntegral) {\n    data.options.sum = getSum<Type>(data.values as Type[], key, check);\n  }\n}\n","import { Datum1D, Integral } from '../../../types/data1d';\n\nimport { checkIntegralKind } from './checkIntegralKind';\nimport { updateRelatives } from './updateRelatives';\n\nexport function updateIntegralsRelativeValues(\n  datum: Datum1D,\n  forceCalculateIntegral = false,\n) {\n  updateRelatives<Integral>(\n    datum.integrals,\n    'integral',\n    checkIntegralKind,\n    forceCalculateIntegral,\n  );\n}\n","import { Datum1D } from '../../types/data1d';\nimport { Datum2D } from '../../types/data2d';\n\nexport function isSpectrum1D(spectrum: Datum1D | Datum2D): spectrum is Datum1D {\n  return spectrum.info.dimension === 1;\n}\n","import median from 'ml-array-median';\nimport { xyAutoPeaksPicking } from 'nmr-processing';\n\nimport { Datum1D, Peak } from '../../../types/data1d';\n\nimport { mapPeaks } from './mapPeaks';\n\nexport function autoPeakPicking(datum1D: Datum1D, options) {\n  const {\n    minMaxRatio,\n    maxNumberOfPeaks,\n    noiseFactor,\n    lookNegative,\n    windowFromIndex,\n    windowToIndex,\n  } = options;\n  // we calculate the noise but this could be improved\n  const noise = median(datum1D.data.re.map((y) => Math.abs(y)));\n\n  let { re, x } = datum1D.data;\n\n  if (windowFromIndex !== undefined && windowToIndex !== undefined) {\n    x = x.slice(windowFromIndex, windowToIndex);\n    re = re.slice(windowFromIndex, windowToIndex);\n  }\n\n  let peaks = xyAutoPeaksPicking(\n    { x, y: re },\n    {\n      lookNegative,\n      noiseLevel: noise * noiseFactor,\n      minMaxRatio: minMaxRatio, // Threshold to determine if a given peak should be considered as a noise\n      realTopDetection: true,\n      smoothY: false,\n      sgOptions: { windowSize: 15, polynomial: 3 },\n    },\n  );\n  peaks.sort((a, b) => b.y - a.y);\n  if (maxNumberOfPeaks < peaks.length) peaks = peaks.slice(0, maxNumberOfPeaks);\n\n  return mapPeaks(peaks as Peak[], datum1D);\n}\n","import max from 'ml-array-max';\n\nimport { Data1D } from '../../../types/data1d/Data1D';\n\n// Lookup for apeak while the mouse move\n/**\n *\n * @param {object<{x:Array<number>,re:Array<number>}>} data\n * @param  {object<{from:number,to:number}>} options\n */\n\ninterface LookupPeakOptions {\n  from: number;\n  to: number;\n}\ninterface LookupPeakResult {\n  x: number;\n  y: number;\n  xIndex: number;\n}\n\nexport function lookupPeak(\n  data: Data1D,\n  options: LookupPeakOptions,\n): LookupPeakResult | null {\n  const { from, to } = options;\n  let minIndex = data.x.findIndex((number) => number >= from);\n  let maxIndex = data.x.findIndex((number) => number >= to) - 1;\n\n  if (minIndex > maxIndex) {\n    minIndex = maxIndex;\n    maxIndex = minIndex;\n  }\n  const dataRange = data.re.slice(minIndex, maxIndex);\n  if (dataRange && dataRange.length > 0) {\n    const yValue = max(dataRange);\n    const xIndex = dataRange.findIndex((value) => value === yValue);\n    const xValue = data.x[minIndex + xIndex];\n\n    return { x: xValue, y: yValue, xIndex: minIndex + xIndex };\n  }\n  return null;\n}\n","export default function getAtom(nucleus: string): string {\n  return nucleus?.replace(/[0-9]/g, '') || '';\n}\n","import { Draft } from 'immer';\n\nimport { State } from '../../../component/reducer/Reducer';\nimport { Molecule } from '../../molecules/Molecule';\nimport { Datum1D, Integrals, Ranges } from '../../types/data1d';\nimport { SumOptions } from '../../types/data1d/SumOptions';\nimport getAtom from '../../utilities/getAtom';\n\nimport {\n  isSpectrum1D,\n  updateRangesRelativeValues,\n  updateIntegralsRelativeValues,\n} from '.';\n\nexport interface SumParams {\n  nucleus: string;\n  molecules: Molecule[];\n}\n\nexport type SetSumOptions = Omit<SumOptions, 'isSumConstant'>;\n\nexport function initSumOptions(options: SumOptions, params: SumParams) {\n  let newOptions = { ...options };\n  const { molecules, nucleus } = params;\n\n  if (options.sumAuto && Array.isArray(molecules) && molecules.length > 0) {\n    const { mf, key } = molecules[0];\n    newOptions = { ...newOptions, sumAuto: true, mf, moleculeKey: key };\n  } else {\n    const { mf, moleculeKey, ...resOptions } = newOptions;\n    newOptions = { ...resOptions, sumAuto: false };\n  }\n  if (!newOptions.sum) {\n    newOptions.sum = getSum(newOptions.mf || null, nucleus);\n  }\n\n  return newOptions;\n}\n\nexport function getSum(mf: string | null | undefined, nucleus: string) {\n  const defaultSum = 100;\n\n  if (!mf || !nucleus) return defaultSum;\n\n  const atom = getAtom(nucleus);\n  const atoms = getAtoms(mf);\n\n  return atoms[atom] ? atoms[atom] : defaultSum;\n}\n\nexport function setSumOptions(\n  data: Ranges | Integrals,\n  params: { options: SetSumOptions; nucleus: string },\n) {\n  const { nucleus, options } = params;\n  if (options.sumAuto) {\n    const { mf, moleculeKey } = options;\n    const sum = getSum(mf, nucleus);\n    data.options = { ...data.options, sumAuto: true, moleculeKey, mf, sum };\n  } else {\n    const { mf, moleculeKey, ...resOptions } = data.options;\n    data.options = { ...resOptions, sumAuto: false, sum: options.sum };\n  }\n}\n\nexport function getAtoms(mf: string): Record<string, number> {\n  const result = {};\n  // eslint-disable-next-line prefer-named-capture-group\n  const data = mf.split(/(\\d+)/);\n  for (let i = 0; i < data.length - 1; i = i + 2) {\n    result[data[i]] = Number(data[i + 1]);\n  }\n  return result;\n}\n\n/**\n * change the sum for ranges and integrals in all spectra based on molecule\n * it handle three cases\n * 1 - edit and existing molecule\n * 2- delete molecule / edit molecule and as a result of that it generate more than one molecule\n * 3- add a molecule for the first time\n * @param draft     State draft\n * @param molKey    Molecule key\n * @param molecule  Molecules list\n */\nexport function changeSpectraRelativeSum(\n  draft: Draft<State>,\n  molKey: string,\n  molecule: Molecule,\n) {\n  const keys: (keyof Datum1D)[] = ['ranges', 'integrals'];\n\n  for (const spectrum of draft.data) {\n    if (isSpectrum1D(spectrum)) {\n      for (const key of keys) {\n        const { moleculeKey, mf, sumAuto } = spectrum[key].options;\n\n        if ((molKey === moleculeKey || (!moleculeKey && !mf)) && sumAuto) {\n          const options: Partial<SetSumOptions> = molecule\n            ? {\n                mf: molecule.mf,\n                moleculeKey: molecule.key,\n              }\n            : {\n                mf: undefined,\n                moleculeKey: undefined,\n              };\n\n          setSumOptions(spectrum[key], {\n            nucleus: spectrum.info.nucleus,\n            options: { ...options, sumAuto: true, sum: undefined },\n          });\n          updateRangesRelativeValues(spectrum, true);\n          updateIntegralsRelativeValues(spectrum, true);\n        }\n      }\n    }\n  }\n}\n","import { DatumKind } from '../constants/SignalsKinds';\nimport { Range } from '../types/data1d';\n\nexport function getDiaIDs(range: Range): string[] {\n  return ([] as string[]).concat(\n    range.diaIDs || [],\n    range.signals\n      ? range.signals.map((_signal) => _signal.diaIDs || []).flat()\n      : [],\n  );\n}\n\nexport function getNbAtoms(range: Range, signalIndex?: number): number {\n  if (signalIndex === undefined) {\n    return range.signals\n      ? range.signals.reduce(\n          (sum, signal) => (signal.nbAtoms ? signal.nbAtoms + sum : sum),\n          0,\n        )\n      : 0;\n  }\n\n  return range.signals[signalIndex].nbAtoms || 0;\n}\n\nexport function setNbAtoms(range: Range, signalIndex?: number): void {\n  range.nbAtoms = getNbAtoms(range, signalIndex);\n  if (range.nbAtoms === 0) {\n    delete range.nbAtoms;\n  }\n}\n\nexport function resetDiaIDs(range: Range): void {\n  delete range.diaIDs;\n  delete range.nbAtoms;\n  range.signals.forEach((_signal) => {\n    delete _signal.diaIDs;\n    delete _signal.nbAtoms;\n  });\n  delete range.nbAtoms;\n}\n\n/**\n *\n * @param {object} range\n * @param {String('both' | 'range' | 'signal')} unlinkType\n * @param {object} options\n * @param {number} [options.signalIndex]\n * @returns {object}\n */\nexport function unlink(\n  range: Range,\n  unlinkType = 'both',\n  options: any = {},\n): Range {\n  switch (unlinkType) {\n    case 'both':\n      resetDiaIDs(range);\n      break;\n    case 'range':\n      delete range.diaIDs;\n      delete range.nbAtoms;\n      break;\n    case 'signal':\n      delete range.signals[options.signalIndex].diaIDs;\n      delete range.signals[options.signalIndex].nbAtoms;\n      break;\n    default:\n      break;\n  }\n\n  setNbAtoms(range);\n\n  return range;\n}\n\nexport function addDefaultSignal(range) {\n  range.signals.push({\n    multiplicity: 'm',\n    kind: 'signal',\n    delta: (range.to + range.from) / 2,\n  });\n}\n\nexport function checkRangeKind(range) {\n  return range.kind === DatumKind.signal;\n}\n\nexport function checkSignalKinds(range, kinds) {\n  return !range.signals.some(\n    (_signal) => _signal.kind === undefined || !kinds.includes(_signal.kind),\n  );\n}\n\nexport function unlinkInAssignmentData(\n  assignmentData,\n  ranges: Partial<Range>[],\n) {\n  const ids = ranges.reduce((acc: string[], range) => {\n    if (range.id) {\n      acc.push(range.id);\n    }\n    if (range.signals) {\n      acc = acc.concat(range.signals.map((signal) => signal.id, []));\n    }\n    return acc;\n  }, []);\n  assignmentData.dispatch({\n    type: 'REMOVE_ALL',\n    payload: { id: ids, axis: 'x' },\n  });\n}\n","import { SignalKindsToInclude } from '../../../constants/SignalsKinds';\nimport { Range } from '../../../types/data1d';\nimport { checkSignalKinds } from '../../../utilities/RangeUtilities';\n\nexport function checkRangeKind(range: Range): boolean {\n  return range.signals && checkSignalKinds(range, SignalKindsToInclude);\n}\n","import { Datum1D } from '../../../types/data1d/Datum1D';\nimport { updateRelatives } from '../integrals/updateRelatives';\n\nimport { checkRangeKind } from './checkRangeKind';\n\nexport function updateRangesRelativeValues(\n  datum: Datum1D,\n  forceCalculateIntegral = false,\n) {\n  updateRelatives(\n    datum.ranges,\n    'integration',\n    checkRangeKind,\n    forceCalculateIntegral,\n  );\n}\n","import { xyIntegration } from 'ml-spectra-processing';\n\nimport { DatumKind } from '../../../constants/SignalsKinds';\nimport { Datum1D } from '../../../types/data1d/Datum1D';\nimport generateID from '../../../utilities/generateID';\nimport { initSumOptions, SumParams } from '../SumManager';\n\nimport detectSignal from './detectSignal';\nimport { mapRanges } from './mapRanges';\nimport { updateRangesRelativeValues } from './updateRangesRelativeValues';\n\ninterface AddRangeOptions {\n  from: number;\n  to: number;\n}\n\nexport function addRange(datum: Datum1D, options: AddRangeOptions & SumParams) {\n  const { from, to, molecules, nucleus } = options;\n  const { x, re } = datum.data;\n  const absolute = xyIntegration({ x, y: re }, { from, to, reverse: true });\n\n  // detectSignal use the advance multiplet-analysis that can crash if too many points\n  const signal = detectSignal(\n    x as unknown as Float64Array,\n    re as unknown as Float64Array,\n    from,\n    to,\n    datum.info.originFrequency,\n  );\n  if (!signal) return;\n  try {\n    const range = {\n      id: generateID(),\n      from,\n      to,\n      absolute, // the real value,\n      signals: [{ id: generateID(), ...signal }],\n      kind: DatumKind.signal,\n      integration: 0,\n    };\n\n    datum.ranges.options = initSumOptions(datum.ranges.options, {\n      molecules,\n      nucleus,\n    });\n\n    datum.ranges.values = datum.ranges.values.concat(mapRanges([range], datum));\n    updateRangesRelativeValues(datum);\n  } catch (e) {\n    throw new Error('Could not calculate the multiplicity');\n  }\n}\n","import { xyIntegration } from 'ml-spectra-processing';\n\nimport { Datum1D, Range } from '../../../types/data1d';\n\nimport { updateRangesRelativeValues } from './updateRangesRelativeValues';\n\nexport function changeRange(datum: Datum1D, range: Range) {\n  const { from, to } = range;\n  const { x, re } = datum.data;\n\n  const index = datum.ranges.values.findIndex((i) => i.id === range.id);\n  const absolute = xyIntegration({ x, y: re }, { from, to, reverse: true });\n\n  if (index !== -1) {\n    datum.ranges.values[index] = {\n      ...datum.ranges.values[index],\n      originFrom: from,\n      originTo: to,\n      ...range,\n      absolute,\n    };\n    updateRangesRelativeValues(datum);\n  }\n}\n","import { Datum1D } from '../../../types/data1d';\n\ninterface RangeProps {\n  id: string; // id of the selected range\n  value: number; // New relative value\n}\n\n/**\n * Change Range relative value and re-calculate the relative values for the other ranges\n * @param {Datum1D} datum  spectrum 1d\n * @param {RangeProps} newRange\n */\nexport function changeRangeRelativeValue(datum: Datum1D, newRange: RangeProps) {\n  const index = datum.ranges.values.findIndex(\n    (range) => range.id === newRange.id,\n  );\n  if (index !== -1 && datum.ranges.options.sum) {\n    const { absolute, integration } = datum.ranges.values[index];\n    const ratio = absolute / newRange.value;\n    const sum = (newRange.value / integration) * datum.ranges.options.sum;\n    datum.ranges.options = {\n      ...datum.ranges.options,\n      mf: undefined,\n      moleculeKey: undefined,\n      sumAuto: false,\n      sum,\n    };\n\n    datum.ranges.values = datum.ranges.values.map((range) => {\n      return {\n        ...range,\n        integration: range.absolute / ratio,\n      };\n    });\n  }\n}\n","import { Datum1D } from '../../../types/data1d/Datum1D';\n\ninterface RangeSignalOption {\n  rangeID: string;\n  signalID: string;\n  newSignalValue: number;\n}\n\nexport function changeRangeSignal(datum: Datum1D, options: RangeSignalOption) {\n  const { rangeID, signalID, newSignalValue } = options;\n\n  let shiftValue = 0;\n  const rangeIndex = datum.ranges.values.findIndex(\n    (range) => range.id === rangeID,\n  );\n  if (rangeIndex !== -1) {\n    const signalIndex = datum.ranges.values[rangeIndex].signals.findIndex(\n      (signal) => signal.id === signalID,\n    );\n    shiftValue =\n      newSignalValue -\n      datum.ranges.values[rangeIndex].signals[signalIndex].delta;\n    datum.ranges.values[rangeIndex].signals[signalIndex].delta = newSignalValue;\n  }\n  return shiftValue;\n}\n","import { xyIntegration, xyMaxYPoint, xyMinYPoint } from 'ml-spectra-processing';\n\nimport { RangeDetectionResult, Datum1D } from '../../../types/data1d';\nimport generateID from '../../../utilities/generateID';\nimport { getShiftX } from '../shift/getShiftX';\n\ninterface DetectRangeOptions {\n  from: number;\n  to: number;\n}\n\nexport function detectRange(\n  datum: Datum1D,\n  options: DetectRangeOptions,\n): RangeDetectionResult {\n  const { from, to } = options;\n  const { x, re: y } = datum.data;\n\n  const absolute = xyIntegration({ x, y }, { from, to, reverse: true });\n  const min = xyMinYPoint({ x, y }, { from, to }).y;\n  const max = xyMaxYPoint({ x, y }, { from, to }).y;\n\n  const shiftX = getShiftX(datum);\n\n  return {\n    id: generateID(),\n    originFrom: from - shiftX,\n    originTo: to - shiftX,\n    from,\n    to,\n    absolute, // the real value,\n    min,\n    max,\n  };\n}\n","import { xyAutoRangesPicking } from 'nmr-processing';\n\nimport { Datum1D, Range } from '../../../types/data1d';\n\nconst defaultPeakPickingOptions = {\n  minMaxRatio: 1,\n  realTopDetection: true,\n  maxCriteria: true,\n  smoothY: false,\n  integrationSum: 100,\n  factorStd: 5,\n  clean: true,\n  sgOptions: { windowSize: 7, polynomial: 3 },\n};\n\nexport default function autoRangesDetection(\n  datum1D: Datum1D,\n  options: any = {},\n): Range[] {\n  // we calculate the noise but this could be improved\n\n  let { re, x } = datum1D.data;\n\n  const { originFrequency, nucleus } = datum1D.info;\n\n  const { windowFromIndex, windowToIndex, peakPicking } = options;\n\n  const peakPickingOptions = {\n    ...defaultPeakPickingOptions,\n    ...peakPicking,\n  };\n\n  const rangesOptions = {\n    frequency: originFrequency,\n    nucleus,\n    compile: true,\n    frequencyCluster: 13,\n    keepPeaks: true,\n  };\n\n  if (windowFromIndex !== undefined && windowToIndex !== undefined) {\n    x = x.slice(windowFromIndex, windowToIndex);\n    re = re.slice(windowFromIndex, windowToIndex);\n  }\n\n  if (originFrequency) {\n    // we calculate the number of points per Hz\n    let pointsPerHz = 1 / originFrequency / (x[1] - x[0]);\n    // we can consider a peak with of 0.5 Hz for the windowSize\n    let ws = Math.max(Math.round(pointsPerHz / 2), 5);\n    peakPickingOptions.sgOptions = {\n      windowSize: ws - (ws % 2) + 1,\n      polynomial: 3,\n    };\n  }\n  peakPickingOptions.smoothY = undefined;\n  peakPickingOptions.sgOptions = undefined;\n\n  const ranges = xyAutoRangesPicking(\n    { x, y: re },\n    {\n      peakPicking: peakPickingOptions,\n      ranges: rangesOptions,\n    },\n  );\n  return ranges as Range[];\n}\n","import { Datum1D } from '../../../types/data1d/Datum1D';\nimport { initSumOptions, SumParams } from '../SumManager';\n\nimport autoRangesDetection from './autoRangesDetection';\nimport { mapRanges } from './mapRanges';\nimport { updateRangesRelativeValues } from './updateRangesRelativeValues';\n\ninterface DetectRangesOptions {\n  windowFromIndex?: number;\n  windowToIndex?: number;\n  peakPicking: {\n    factorStd: number; // default 8\n    minMaxRatio: number; // default 0.1\n    integrationSum: number; // default 100\n    compile: boolean; //default true\n    frequencyCluster: number; // default 16\n    clean: boolean; // default true\n    keepPeaks: boolean; //default true\n  };\n  impurities?: {\n    solvent: string;\n  };\n}\n\nexport function detectRanges(\n  datum: Datum1D,\n  options: DetectRangesOptions & SumParams,\n) {\n  const { molecules, nucleus, ...detectOptions } = options;\n  detectOptions.impurities = { solvent: datum.info.solvent || '' };\n  const ranges = autoRangesDetection(datum, detectOptions);\n  datum.ranges.options = initSumOptions(datum.ranges.options, {\n    molecules,\n    nucleus,\n  });\n  datum.ranges.values = datum.ranges.values.concat(mapRanges(ranges, datum));\n  updateRangesRelativeValues(datum);\n}\n","import { Datum1D } from '../../../../types/data1d';\n\nexport function updateIntegralXShift(datum: Datum1D, shiftValue: number) {\n  datum.integrals.values = datum.integrals.values.map((integral) => ({\n    ...integral,\n    from: integral.originFrom + shiftValue,\n    to: integral.originTo + shiftValue,\n  }));\n}\n","import { xFindClosestIndex } from 'ml-spectra-processing';\n\nimport { Datum1D, Peak } from '../../../../types/data1d';\n\nexport function updatePeaksXShift(datum: Datum1D, shiftValue: number) {\n  datum.peaks.values = datum.peaks.values.map<Peak>((peak) => {\n    const delta = peak.originalX + shiftValue;\n    const xIndex = xFindClosestIndex(datum.data.x, delta);\n    return {\n      ...peak,\n      y: datum.data.re[xIndex],\n      x: peak.originalX + shiftValue,\n    };\n  });\n}\n","import { Datum1D } from '../../../../types/data1d';\n\nexport function updateRangesXShift(datum: Datum1D, shiftValue: number) {\n  datum.ranges.values = datum.ranges.values.map((range) => ({\n    ...range,\n    from: (range.originFrom || 0) + shiftValue,\n    to: (range.originTo || 0) + shiftValue,\n    signals:\n      range?.signals &&\n      range.signals.map((s) => ({\n        ...s,\n        delta: (s.originDelta || 0) + shiftValue,\n      })),\n  }));\n}\n","import { Datum1D } from '../../../types/data1d';\n\nimport { getShiftX } from './getShiftX';\nimport { updateIntegralXShift } from './internal/updateIntegralXShift';\nimport { updatePeaksXShift } from './internal/updatePeaksXShift';\nimport { updateRangesXShift } from './internal/updateRangesXShift';\n\nexport function updateXShift(datum: Datum1D) {\n  const shiftX = getShiftX(datum);\n  updatePeaksXShift(datum, shiftX);\n  updateRangesXShift(datum, shiftX);\n  updateIntegralXShift(datum, shiftX);\n}\n","export const DEFAULT_YAXIS_SHIFT_VALUE = 20;\n\nexport enum DISPLAYER_MODE {\n  DM_1D = '1D',\n  DM_2D = '2D',\n}\n\nexport const MARGIN = {\n  '2D': { top: 100, right: 50, bottom: 70, left: 100 },\n  '1D': {\n    top: 10,\n    right: 10,\n    bottom: 70,\n    left: 10,\n  },\n};\n","import { initiateDatum1D } from './Spectrum1D';\n\nexport function fromBruker(result, options = {}, usedColors = {}) {\n  const { dependentVariables, info, meta, source } = result;\n  let data = getData(dependentVariables[0].components);\n  if (data.im) info.isComplex = true;\n\n  if (Array.isArray(info.nucleus)) info.nucleus = info.nucleus[0];\n\n  const datum1D = initiateDatum1D(\n    {\n      ...options,\n      source,\n      info,\n      meta,\n      data,\n    },\n    usedColors,\n  );\n\n  return datum1D;\n}\n\nexport function fromCSD(result, options = {}, usedColors = {}) {\n  let dimension = result.dimensions[0];\n  let dependentVariables = result.dependentVariables;\n\n  let quantityName = dimension.quantityName;\n  let n = dimension.count;\n  let incr = dimension.increment.magnitude;\n  let origin = dimension.originOffset.magnitude;\n  let offset = dimension.coordinatesOffset.magnitude;\n\n  let buffer = dependentVariables[0].components[0];\n  let re: number[] = [];\n  let im: number[] = [];\n  for (let i = buffer.length - 1; i > 0; i -= 2) {\n    re.push(buffer[i - 1]);\n    im.push(buffer[i]);\n  }\n\n  let data: any = {};\n  let i, x0;\n  switch (quantityName) {\n    case 'frequency':\n      x0 = 0 + (offset / origin) * 1000000;\n      i = (incr / origin) * 1000000;\n      data.re = re;\n      data.im = im;\n      break;\n    case 'time':\n      x0 = origin;\n      i = incr;\n      data.re = re.reverse();\n      data.im = im.reverse().map((z) => -z);\n      break;\n    default:\n      break;\n  }\n\n  let scale: number[] = [];\n  for (let x = 0; x < n; x++) {\n    scale.push(x0 + x * i);\n  }\n\n  data.x = scale;\n\n  const datum1D = initiateDatum1D(\n    {\n      ...options,\n      data,\n    },\n    usedColors,\n  );\n  return datum1D;\n}\n\nexport function fromParsedJcamp(parsedJcamp, options, usedColors) {\n  const { dependentVariables, info, meta } = parsedJcamp;\n  let data = getData(dependentVariables[0].components);\n  if (Array.isArray(info.nucleus)) info.nucleus = info.nucleus[0];\n\n  const datum1D = initiateDatum1D(\n    {\n      ...options,\n      info,\n      meta,\n      data,\n    },\n    usedColors,\n  );\n\n  return datum1D;\n}\n\nfunction getData(spectra) {\n  let x = spectra[0]?.data?.x ? spectra[0].data.x : [];\n  let re = spectra[0]?.data?.y ? spectra[0].data.y : [];\n  let im = spectra[1]?.data?.y ? spectra[1].data.y : null;\n\n  if (x[0] > x[1]) {\n    x.reverse();\n    re.reverse();\n    if (im) im.reverse();\n  }\n  return { x, re, im };\n}\n","import { zoneToX } from 'ml-spectra-processing';\n\nimport { UsedColors } from '../../../types/UsedColors';\nimport { initiateDatum1D } from '../../data1d/Spectrum1D';\nimport { Datum2D } from '../../types/data2d/Datum2D';\n\n/**\n * calculate the missing projection\n */\n\nexport function getMissingProjection(\n  datum: Datum2D,\n  nucleus: string,\n  usedColors: UsedColors,\n) {\n  let index = datum.info.nucleus.indexOf(nucleus);\n  // temporary because nucleus was undefined;\n  if (index === -1) index = 0;\n\n  let info = {\n    nucleus: datum.info.nucleus[index], // 1H, 13C, 19F, ...\n    isFid: false,\n    isComplex: false, // if isComplex is true that mean it contains real/ imaginary  x set, if not hid re/im button .\n    dimension: 1,\n  };\n\n  let from = index === 0 ? datum.data.minX : datum.data.minY;\n  let to = index === 0 ? datum.data.maxX : datum.data.maxY;\n  let nbPoints = index === 0 ? datum.data.z[0].length : datum.data.z.length;\n  let projection = new Float64Array(nbPoints);\n  if (index === 1) {\n    for (let i = 0; i < datum.data.z.length; i++) {\n      for (let j = 0; j < datum.data.z[0].length; j++) {\n        projection[i] += datum.data.z[i][j];\n      }\n    }\n  } else {\n    for (let i = 0; i < datum.data.z[0].length; i++) {\n      for (const z of datum.data.z) {\n        projection[i] += z[i];\n      }\n    }\n  }\n\n  let data = {\n    x: zoneToX({ from, to }, nbPoints),\n    re: projection,\n  };\n  return initiateDatum1D({ info, data }, usedColors);\n}\n","import { zoneToX } from 'ml-spectra-processing';\n\nimport { initiateDatum1D } from '../../data1d/Spectrum1D';\nimport { Datum2D } from '../../types/data2d';\n\n/** get 2d projection\n * @param {number} x in ppm\n * @param {number} y in ppm\n */\n\ninterface SlicePosition {\n  x: number;\n  y: number;\n}\n\nexport function getSlice(spectrum: Datum2D, position: SlicePosition) {\n  const data = spectrum.data;\n  const xStep = (data.maxX - data.minX) / (data.z[0].length - 1);\n  const yStep = (data.maxY - data.minY) / (data.z.length - 1);\n  const xIndex = Math.floor((position.x - data.minX) / xStep);\n  const yIndex = Math.floor((position.y - data.minY) / yStep);\n\n  if (xIndex < 0 || xIndex >= data.z[0].length) return;\n  if (yIndex < 0 || yIndex >= data.z.length) return;\n\n  let infoX = {\n    nucleus: spectrum.info.nucleus[0], // 1H, 13C, 19F, ...\n    isFid: false,\n    isComplex: false, // if isComplex is true that mean it contains real/ imaginary  x set, if not hid re/im button .\n    dimension: 1,\n  };\n\n  let dataX = {\n    x: zoneToX(\n      { from: spectrum.data.minX, to: spectrum.data.maxX },\n      spectrum.data.z[0].length,\n    ),\n    re: new Float64Array(spectrum.data.z[0].length),\n  };\n\n  for (let i = 0; i < spectrum.data.z[0].length; i++) {\n    dataX.re[i] += spectrum.data.z[yIndex][i];\n  }\n\n  let infoY = {\n    nucleus: spectrum.info.nucleus[1], // 1H, 13C, 19F, ...\n    isFid: false,\n    isComplex: false, // if isComplex is true that mean it contains real/ imaginary  x set, if not hid re/im button .\n    dimension: 1,\n  };\n\n  let dataY = {\n    x: zoneToX(\n      { from: spectrum.data.minY, to: spectrum.data.maxY },\n      spectrum.data.z.length,\n    ),\n    re: new Float64Array(spectrum.data.z.length),\n  };\n\n  let index = spectrum.data.z.length - 1;\n  for (let i = 0; i < spectrum.data.z.length; i++) {\n    dataY.re[i] += spectrum.data.z[index--][xIndex];\n  }\n\n  const horizontal = initiateDatum1D({ info: infoX, data: dataX }, {});\n  const vertical = initiateDatum1D({ info: infoY, data: dataY }, {});\n  return { horizontal, vertical };\n}\n","import { Conrec } from 'ml-conrec';\n\nexport const defaultContourOptions = {\n  positive: {\n    contourLevels: [0, 21],\n    numberOfLayers: 10,\n  },\n  negative: {\n    contourLevels: [0, 21],\n    numberOfLayers: 10,\n  },\n};\n\nexport default class Processing2D {\n  private options: any;\n  private currentLevelPositive: number;\n  private currentLevelNegative: number;\n  private conrec: Conrec;\n  private median: number;\n  private minMax: any;\n\n  public constructor(\n    minMax: any,\n    options: any = defaultContourOptions,\n    defaultLevel: any = {\n      positive: 10,\n      negative: 10,\n    },\n  ) {\n    this.options = options;\n    const { positive, negative } = defaultLevel;\n\n    this.currentLevelPositive = positive;\n    this.currentLevelNegative = negative;\n\n    const xs = getRange(minMax.minX, minMax.maxX, minMax.z[0].length);\n\n    const ys = getRange(minMax.minY, minMax.maxY, minMax.z.length);\n\n    this.conrec = new Conrec(minMax.z, { xs, ys, swapAxes: false });\n\n    this.median = minMax.noise;\n\n    this.minMax = minMax;\n  }\n\n  public getLevel() {\n    return {\n      levelPositive: this.currentLevelPositive,\n      levelNegative: this.currentLevelNegative,\n    };\n  }\n\n  public setLevel(levelPositive, levelNegative) {\n    this.currentLevelPositive = levelPositive;\n    this.currentLevelNegative = levelNegative;\n  }\n\n  public setOptions(options) {\n    const positiveBoundary = options.positive.contourLevels;\n    const negativeBoundary = options.negative.contourLevels;\n\n    if (this.currentLevelPositive >= positiveBoundary[1]) {\n      this.currentLevelPositive = positiveBoundary[1];\n    } else if (this.currentLevelPositive <= positiveBoundary[0]) {\n      this.currentLevelPositive = positiveBoundary[0];\n    }\n\n    if (this.currentLevelNegative >= negativeBoundary[1]) {\n      this.currentLevelNegative = negativeBoundary[1];\n    } else if (this.currentLevelNegative <= negativeBoundary[0]) {\n      this.currentLevelNegative = negativeBoundary[0];\n    }\n\n    this.options = options;\n  }\n\n  public wheel(value) {\n    const sign = Math.sign(value);\n    const positiveBoundary = this.options.positive.contourLevels;\n    const negativeBoundary = this.options.negative.contourLevels;\n\n    if (\n      (this.currentLevelPositive > positiveBoundary[0] && sign === -1) ||\n      (this.currentLevelPositive < positiveBoundary[1] && sign === 1)\n    ) {\n      this.currentLevelPositive += sign;\n    }\n\n    if (\n      (this.currentLevelNegative > negativeBoundary[0] && sign === -1) ||\n      (this.currentLevelNegative < negativeBoundary[1] && sign === 1)\n    ) {\n      this.currentLevelNegative += sign;\n    }\n  }\n\n  public shiftWheel(value) {\n    const sign = Math.sign(value);\n    const [min, max] = this.options.positive.contourLevels;\n    if (\n      (this.currentLevelPositive === min && sign === -1) ||\n      (this.currentLevelPositive >= max && sign === 1)\n    ) {\n      return;\n    }\n\n    this.currentLevelPositive += sign;\n    return [];\n  }\n\n  public drawContours() {\n    const zoomPositive = this.currentLevelPositive / 2 + 1;\n    const zoomNegative = this.currentLevelNegative / 2 + 1;\n    const {\n      positive: { numberOfLayers: numberOfPositiveLayer },\n      negative: { numberOfLayers: numberOfNegativeLayer },\n    } = this.options;\n    return {\n      positive: this.getContours(zoomPositive, {\n        nbLevels: numberOfPositiveLayer,\n      }),\n      negative: this.getContours(zoomNegative, {\n        negative: true,\n        nbLevels: numberOfNegativeLayer,\n      }),\n    };\n  }\n\n  public getContours(zoomLevel, options: any = {}) {\n    const { negative = false, timeout = 2000, nbLevels = 10 } = options;\n\n    const max = Math.max(\n      Math.abs(this.minMax.maxZ),\n      Math.abs(this.minMax.minZ),\n    );\n\n    let _range = getRange(\n      this.median * 1 * Math.pow(2, zoomLevel),\n      max,\n      nbLevels,\n      2,\n    );\n\n    if (negative) {\n      _range = _range.map((value) => -value);\n    }\n    let contours = [];\n    try {\n      contours = this.conrec.drawContour({\n        contourDrawer: 'basic', // shape or basic\n        levels: _range,\n        timeout: timeout,\n      });\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log(e);\n      throw e;\n    }\n\n    return contours;\n  }\n}\n\nfunction getRange(min: number, max: number, length: number, exp?: number) {\n  if (exp !== undefined) {\n    const factors: number[] = [];\n\n    factors[0] = 0;\n\n    for (let i = 1; i <= length; i++) {\n      factors[i] = factors[i - 1] + (exp - 1) / Math.pow(exp, i);\n    }\n\n    const lastFactor = factors[length];\n\n    const result = new Array(length);\n\n    for (let i = 0; i < length; i++) {\n      result[i] = (max - min) * (1 - factors[i + 1] / lastFactor) + min;\n    }\n\n    return result;\n  } else {\n    const step = (max - min) / (length - 1);\n\n    return range(min, max + step / 2, step);\n  }\n}\n\nfunction range(from: number, to: number, step: number) {\n  const result: number[] = [];\n\n  for (let i = from; i < to; i += step) {\n    result.push(i);\n  }\n\n  return result;\n}\n","import * as FiltersManager from '../../FiltersManager';\nimport { Datum2D } from '../../types/data2d';\nimport generateID from '../../utilities/generateID';\nimport { get2DColor } from '../../utilities/getColor';\nimport Processing2D, { defaultContourOptions } from '../Processing2D';\n\nexport function initiateDatum2D(options: any, usedColors = {}): Datum2D {\n  const datum: any = {};\n\n  datum.id = options.id || generateID();\n  datum.source = Object.assign(\n    {\n      jcampURL: null,\n    },\n    options.source,\n  );\n  datum.display = Object.assign(\n    {\n      name: options.display?.name ? options.display.name : generateID(),\n      ...getColor(options, usedColors),\n      isPositiveVisible: true,\n      isNegativeVisible: true,\n      isVisible: true,\n      contourOptions: defaultContourOptions,\n      dimension: 2,\n    },\n    options.display,\n  );\n\n  datum.info = Object.assign(\n    {\n      nucleus: ['1H', '1H'],\n      isFt: true,\n      isFid: false,\n      isComplex: false, // if isComplex is true that mean it contains real/ imaginary  x set, if not hid re/im button .\n      dimension: 2,\n    },\n    options.info,\n  );\n\n  datum.originalInfo = datum.info;\n  datum.meta = Object.assign({}, options.meta);\n  datum.data = Object.assign(\n    {\n      z: [],\n      minX: 0,\n      minY: 0,\n      maxX: 0,\n      maxY: 0,\n    },\n    options.data,\n  );\n  datum.originalData = datum.data;\n  datum.filters = Object.assign([], options.filters);\n\n  datum.zones = Object.assign({ values: [], options: {} }, options.zones);\n\n  datum.processingController = new Processing2D(\n    datum.data,\n    datum.display.contourOptions,\n  );\n\n  //reapply filters after load the original data\n  FiltersManager.reapplyFilters(datum);\n\n  return datum;\n}\n\nfunction getColor(options, usedColors) {\n  let color = { positiveColor: 'red', negativeColor: 'blue' };\n  if (\n    options?.display.negativeColor === undefined ||\n    options?.display?.positiveColor === undefined\n  ) {\n    color = get2DColor(options.info.experiment, usedColors['2d'] || []);\n  }\n\n  if (usedColors['2d']) {\n    usedColors['2d'].push(color.positiveColor);\n  }\n  return color;\n}\n","import { Datum1D } from '../../types/data1d';\nimport { Datum2D } from '../../types/data2d';\n\nexport function isSpectrum2D(spectrum: Datum1D | Datum2D): spectrum is Datum2D {\n  return spectrum.info.dimension === 2;\n}\n","import * as Filters from '../../../Filters';\nimport { Datum2D } from '../../../types/data2d';\n\nexport function getShift(datum: Datum2D): { xShift: number; yShift: number } {\n  let shift: any = { xShift: 0, yShift: 0 };\n  if (datum?.filters) {\n    shift = datum.filters.reduce(\n      (acc, filter) => {\n        if (filter.name === Filters.shift2DX.id) {\n          acc.xShift = filter?.flag ? filter.value : 0;\n        }\n        if (filter.name === Filters.shift2DY.id) {\n          acc.yShift = filter?.flag ? filter.value : 0;\n        }\n        return acc;\n      },\n      { xShift: 0, yShift: 0 },\n    );\n  }\n\n  return shift;\n}\n","import { Datum2D } from '../../../types/data2d';\n\nimport { getShift } from './getShift';\n\nexport function updateShift(datum: Datum2D) {\n  const { xShift, yShift } = getShift(datum);\n  updateZonesShift(datum, {\n    xShift,\n    yShift,\n  });\n}\n\nfunction updateZonesShift(datum: Datum2D, { xShift, yShift }) {\n  datum.zones.values = datum.zones.values.map((zone) => ({\n    ...zone,\n    signals: zone.signals?.map((signal) => ({\n      ...signal,\n      x: { ...signal.x, delta: signal.x.originDelta + xShift },\n      y: { ...signal.y, delta: signal.y.originDelta + yShift },\n    })),\n  }));\n}\n","import { DataExportOptions, DataExportOptionsType } from '../../SpectraManager';\nimport { Datum2D } from '../../types/data2d';\n\nexport function toJSON(\n  datum: Datum2D,\n  dataExportOption: DataExportOptionsType,\n) {\n  return {\n    id: datum.id,\n\n    ...(dataExportOption === DataExportOptions.ROW_DATA ||\n    (dataExportOption === DataExportOptions.DATA_SOURCE &&\n      !datum.source.jcampURL)\n      ? {\n          data: datum.originalData,\n          info: datum.originalInfo,\n          meta: datum.meta,\n          source: {\n            jcampURL: null,\n          },\n        }\n      : {\n          source: {\n            jcampURL: datum.source.jcampURL,\n          },\n        }),\n    zones: datum.zones,\n    filters: datum.filters,\n    display: datum.display,\n  };\n}\n","import { Datum2D } from '../../../types/data2d';\n\n/**\n *\n * @param {number} zoneID\n * @param {object} signal\n * @param {number} signal.x\n * @param {number} signal.y\n * @param {string} signal.id\n */\nexport function changeZoneSignal(\n  datum: Datum2D,\n  zoneID,\n  newSignal,\n): { xShift: number; yShift: number } {\n  const zoneIndex = datum.zones.values.findIndex((zone) => zone.id === zoneID);\n  if (zoneIndex !== -1) {\n    const signalIndex = datum.zones.values[zoneIndex].signals.findIndex(\n      (s) => s.id === newSignal.id,\n    );\n\n    const zone = datum.zones.values[zoneIndex];\n    if (signalIndex !== -1) {\n      const originalSignal: any = zone.signals[signalIndex];\n      const xShift =\n        newSignal?.x || newSignal?.x === 0\n          ? newSignal.x - originalSignal.x.delta\n          : 0;\n      const yShift =\n        newSignal?.y || newSignal?.y === 0\n          ? newSignal.y - originalSignal.y?.delta\n          : 0;\n\n      return { xShift, yShift };\n    }\n  }\n  return { xShift: 0, yShift: 0 };\n}\n","import { xyzAutoZonesPicking } from 'nmr-processing';\n\nimport { Datum2D } from '../../../types/data2d';\n\nexport interface DetectionZonesOptions {\n  selectedZone: {\n    fromX: number;\n    fromY: number;\n    toX: number;\n    toY: number;\n  };\n  thresholdFactor: number;\n  convolutionByFFT?: boolean;\n  enhanceSymmetry?: boolean;\n}\n\n/**\n *\n * @param {object} options\n * @param {object} options.selectedZone\n * @param {number} options.selectedZone.fromX\n * @param {number} options.selectedZone.fromY\n * @param {number} options.selectedZone.toX\n * @param {number} options.selectedZone.toY\n * @param {number} options.thresholdFactor\n * @param {boolean} options.convolutionByFFT\n */\nexport function getDetectionZones(\n  datum: Datum2D,\n  options: DetectionZonesOptions,\n) {\n  let dataMatrix = {};\n  if (options.selectedZone) {\n    options.enhanceSymmetry = false;\n    dataMatrix = getSubMatrix(datum, options.selectedZone);\n  } else {\n    dataMatrix = datum.data;\n  }\n  return autoZonesDetection(dataMatrix, { ...options, info: datum.info });\n}\n\nfunction autoZonesDetection(data, options) {\n  const { thresholdFactor, clean, maxPercentCutOff, convolutionByFFT } =\n    options;\n\n  const { nucleus: nuclei, originFrequency } = options.info;\n  const { enhanceSymmetry = nuclei[0] === nuclei[1] } = options;\n\n  let zones = xyzAutoZonesPicking(data, {\n    nuclei,\n    observedFrequencies: originFrequency,\n    thresholdFactor,\n    clean,\n    maxPercentCutOff,\n    enhanceSymmetry,\n    convolutionByFFT,\n  });\n\n  return zones;\n}\n\nfunction getSubMatrix(datum, selectedZone) {\n  const { fromX, toX, fromY, toY } = selectedZone;\n  const data = datum.data;\n  const xStep = (data.maxX - data.minX) / (data.z[0].length - 1);\n  const yStep = (data.maxY - data.minY) / (data.z.length - 1);\n  let xIndexFrom = Math.max(Math.floor((fromX - data.minX) / xStep), 0);\n  let yIndexFrom = Math.max(Math.floor((fromY - data.minY) / yStep), 0);\n  let xIndexTo = Math.min(\n    Math.floor((toX - data.minX) / xStep),\n    data.z[0].length - 1,\n  );\n  let yIndexTo = Math.min(\n    Math.floor((toY - data.minY) / yStep),\n    data.z.length - 1,\n  );\n\n  if (xIndexFrom > xIndexTo) [xIndexFrom, xIndexTo] = [xIndexTo, xIndexFrom];\n  if (yIndexFrom > yIndexTo) [yIndexFrom, yIndexTo] = [yIndexTo, yIndexFrom];\n\n  let dataMatrix: any = {\n    z: [],\n    maxX: data.minX + xIndexTo * xStep,\n    minX: data.minX + xIndexFrom * xStep,\n    maxY: data.minY + yIndexTo * yStep,\n    minY: data.minY + yIndexFrom * yStep,\n  };\n  let maxZ = Number.MIN_SAFE_INTEGER;\n  let minZ = Number.MAX_SAFE_INTEGER;\n\n  let nbXPoints = xIndexTo - xIndexFrom + 1;\n\n  for (let j = yIndexFrom; j < yIndexTo; j++) {\n    let row = new Float32Array(nbXPoints);\n    let xIndex = xIndexFrom;\n    for (let i = 0; i < nbXPoints; i++) {\n      row[i] = data.z[j][xIndex++];\n    }\n    for (let rowValue of row) {\n      if (maxZ < rowValue) maxZ = rowValue;\n      if (minZ > rowValue) minZ = rowValue;\n    }\n    dataMatrix.z.push(Array.from(row));\n  }\n  dataMatrix.minZ = minZ;\n  dataMatrix.maxZ = maxZ;\n  return dataMatrix;\n}\n","import { NMRZone } from 'nmr-processing';\n\nimport { DatumKind } from '../../../constants/SignalsKinds';\nimport { Zone } from '../../../types/data2d';\nimport generateID from '../../../utilities/generateID';\nimport { getShift } from '../shift/getShift';\n\nimport { DetectionZonesOptions, getDetectionZones } from './getDetectionZones';\n\nexport function detectZones(datum, options: DetectionZonesOptions): Zone[] {\n  const zones = getDetectionZones(datum, options);\n  const { xShift, yShift } = getShift(datum);\n\n  const { minX, maxX, minY, maxY } = datum.data;\n  const xError = Math.abs(maxX - minX) / 10000;\n  const yError = Math.abs(maxY - minY) / 10000;\n\n  const formattedZones = zones.reduce((acc: Zone[], zone: NMRZone) => {\n    const newXRange = zone.x || { from: 0, to: 0 };\n    const newYRange = zone.y || { from: 0, to: 0 };\n\n    // check if the zone is already exists\n    for (const { x, y } of datum.zones.values) {\n      if (\n        Math.abs(newXRange.from - x.from) < xError &&\n        Math.abs(newXRange.to - x.to) < xError &&\n        Math.abs(newYRange.from - y.from) < yError &&\n        Math.abs(newYRange.to - y.to) < yError\n      ) {\n        return acc;\n      }\n    }\n\n    const signals = zone.signals.map((signal) => {\n      return {\n        id: generateID(),\n        peaks: signal.peaks,\n        x: {\n          originDelta: signal.x.delta - xShift,\n          ...signal.x,\n        },\n        y: {\n          originDelta: signal.y.delta - yShift,\n          ...signal.y,\n        },\n        kind: 'signal',\n      };\n    });\n\n    acc.push({\n      id: generateID(),\n      x: { from: newXRange.from, to: newXRange.to },\n      y: { from: newYRange.from, to: newYRange.to },\n      signals,\n      kind: DatumKind.signal,\n    });\n\n    return acc;\n  }, []);\n  return formattedZones;\n}\n","import { DatumKind } from '../../../constants/SignalsKinds';\nimport { Zone } from '../../../types/data2d';\nimport generateID from '../../../utilities/generateID';\nimport { getShift } from '../shift/getShift';\n\nimport { DetectionZonesOptions, getDetectionZones } from './getDetectionZones';\n\n/**\n *\n * @param {object} options\n * @param {object} options.selectedZone\n * @param {number} options.selectedZone.fromX\n * @param {number} options.selectedZone.fromY\n * @param {number} options.selectedZone.toX\n * @param {number} options.selectedZone.toY\n * @param {number} options.thresholdFactor\n * @param {boolean} options.convolutionByFFT\n */\nexport function detectZonesManual(datum, options: DetectionZonesOptions) {\n  const zones = getDetectionZones(datum, options);\n  const { xShift, yShift } = getShift(datum);\n  const formattedZones: Zone[] = zones.map((zone) => {\n    const signals = zone.signals.map((signal) => {\n      return {\n        id: generateID(),\n        peaks: signal.peaks,\n        x: {\n          originDelta: signal.x.delta - xShift,\n          ...signal.x,\n        },\n        y: {\n          originDelta: signal.y.delta - yShift,\n          ...signal.y,\n        },\n        kind: signal.kind || 'signal',\n      };\n    });\n    return {\n      id: generateID(),\n      x: zone.x,\n      y: zone.y,\n      signals,\n      kind: DatumKind.signal,\n    };\n  }, []);\n\n  return formattedZones;\n}\n","import { initiateDatum2D } from './Spectrum2D';\n\nexport function fromParsedJcamp(parsedJcamp, options, usedColors) {\n  const { dependentVariables, info, meta } = parsedJcamp;\n  let data = dependentVariables[0].components;\n  const ob = initiateDatum2D(\n    {\n      ...options,\n      info,\n      meta,\n      data,\n    },\n    usedColors,\n  );\n  return ob;\n}\n\nexport function fromBruker(result, options = {}, usedColors = {}) {\n  const { dependentVariables, meta, source } = result;\n  let data = dependentVariables[0].components;\n  const datum2D = initiateDatum2D(\n    {\n      ...options,\n      source,\n      meta,\n      data,\n    },\n    usedColors,\n  );\n\n  return datum2D;\n}\n\n// TODO: implement this.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function fromCSD(result, options = {}, usedColors = {}) {\n  const datum2D = initiateDatum2D({}, usedColors);\n  return datum2D;\n}\n","export function changeKeys(data, changedKeys) {\n  return JSON.parse(JSON.stringify(data), function reviver(key, value) {\n    if (key in changedKeys) {\n      this[changedKeys[key]] = value;\n      return;\n    }\n    return value;\n  });\n}\n","import { changeKeys } from './changeKeys';\n\n/**\n * changes from version 0 to version 1:\n * all change done on objects keys naming\n *  j         =>   js\n *  signal    =>   signals\n *  integral  =>   integration\n *  peak      =>   peaks\n *  diaID     =>   diaIDs\n *\n */\n\nexport default function migrateToVersion1(data: any): any {\n  if (data?.version === 1) return data;\n\n  const newData = { ...data, version: 1 };\n  const changedKeys = {\n    j: 'js',\n    signal: 'signals',\n    integral: 'integration',\n    peak: 'peaks',\n    diaID: 'diaIDs',\n  };\n\n  for (const spectrum of newData.spectra) {\n    if (spectrum.ranges) {\n      spectrum.ranges = changeKeys(spectrum.ranges, changedKeys);\n    } else if (spectrum.zones) {\n      spectrum.zones = changeKeys(spectrum.zones, changedKeys);\n    }\n  }\n\n  return newData;\n}\n","import { changeKeys } from './changeKeys';\n\n/*\n    * changes from version 1 to version 2:\n           1- peaks :\n                delta => x , originDelta => originalX, intensity => y,\n               paths:\n               - peak\n\n           2- range/signals :\n                atomIDs => atoms , intensity => y,\n\n              paths:\n               - range > signals\n               - range > signals > js\n               - range > signals > peaks\n\n           3- zone/signals :\n              we have two cases the\n              a)\n                get out the inner object fromTo:{from,to} => {from,to}\n              paths:\n               - zone > signals > x\n               - zone > signals > y\n              b)\n                { fromTo,deltaX,resolutionX,nucleusX,deltaY,resolutionY,nucleusY,shiftX,shiftY} =>\n                {\n                  x: {\n                    from: fromTo[0].from,\n                    to: fromTo[0].to,\n                    delta: deltaX,\n                    resolution: resolutionX,\n                    nucleus: nucleusX,\n                  },\n                  y: {\n                    from: fromTo[1].from,\n                    to: fromTo[1].to,\n                    delta: deltaY,\n                    resolution: resolutionY,\n                    nucleus: nucleusY,\n                  },\n                  }\n\n                paths:\n                -zone>signals\n    */\n\nexport default function migrateToVersion2(data: any): any {\n  if (data?.version === 2) return data;\n\n  const newData = { ...data, version: 2 };\n\n  const changedKeys = {\n    peaks: {\n      delta: 'x',\n      originDelta: 'originalX',\n      intensity: 'y',\n    },\n    ranges: {\n      atomIDs: 'atoms', // signal\n      intensity: 'y', // signal > peaks\n    },\n  };\n\n  for (const spectrum of newData.spectra) {\n    if (spectrum.peaks) {\n      spectrum.peaks = changeKeys(spectrum.peaks, changedKeys.peaks);\n    } else if (spectrum.ranges) {\n      spectrum.ranges = changeKeys(spectrum.ranges, changedKeys.ranges);\n    } else if (spectrum.zones) {\n      spectrum.zones.values = mapZones(spectrum.zones.values);\n    }\n  }\n\n  return newData;\n}\n\nfunction mapZones(zones) {\n  return zones.map((zone) => {\n    if (zone.signals) {\n      zone.signals = zone.signals.map((signal) => {\n        if (signal.x && signal.y) {\n          const {\n            x: { fromTo: fromToX, ...resX },\n            y: { fromTo: fromToY, ...resY },\n          } = signal;\n          signal = {\n            ...signal,\n            x: { ...resX, ...fromToX },\n            y: { ...resY, ...fromToY },\n          };\n        } else {\n          const {\n            fromTo,\n            deltaX,\n            resolutionX,\n            nucleusX,\n            deltaY,\n            resolutionY,\n            nucleusY,\n\n            shiftX,\n            shiftY,\n            ...resSignal\n          } = signal;\n          signal = {\n            ...resSignal,\n            x: {\n              from: fromTo[0].from,\n              to: fromTo[0].to,\n              delta: deltaX,\n              resolution: resolutionX,\n              nucleus: nucleusX,\n            },\n            y: {\n              from: fromTo[1].from,\n              to: fromTo[1].to,\n              delta: deltaY,\n              resolution: resolutionY,\n              nucleus: nucleusY,\n            },\n          };\n        }\n        return signal;\n      }, []);\n    }\n    return zone;\n  }, []);\n}\n","import migrateToVersion1 from './migrateToVersion1';\nimport migrateToVersion2 from './migrateToVersion2';\n\nexport const CURRENT_EXPORT_VERSION = 2;\n\nfunction migrationPipe(functions: ((data: any) => any)[]) {\n  return (input: any) => functions.reduce((input, func) => func(input), input);\n}\n\nexport function migrate(data: any): any {\n  let migrationsFuncs: ((data: any) => any)[] = [\n    migrateToVersion1,\n    migrateToVersion2,\n  ];\n  let index = data?.version || 0;\n\n  if (index > CURRENT_EXPORT_VERSION) {\n    throw new Error(\n      'This file can not be imported using the current NMRium version, Please move to the new one !!! ',\n    );\n  }\n\n  return migrationPipe(migrationsFuncs.slice(index))(data);\n}\n","const mfCheck = /^(?:[A-Z][a-z]?\\d* *)+$/;\n\nexport default function getAtomsFromMF(mf: string): Record<string, number> {\n  if (!mfCheck.test(mf)) {\n    throw Error(`MF can not be parsed: ${mf}`);\n  }\n  const atoms = {};\n  const parts = mf.matchAll(/(?<atom>[A-Z][a-z]?)(?<number>[0-9]*)/g);\n  for (const part of parts) {\n    const { atom, number } = part.groups as { atom: string; number: string };\n    if (!atoms[atom]) {\n      atoms[atom] = 0;\n    }\n    atoms[atom] += number === '' ? 1 : Number(number);\n  }\n\n  return atoms;\n}\n","import { Molecule as OCLMolecule } from 'openchemlib/full';\n\nimport generateID from '../utilities/generateID';\nimport getAtomsFromMF from '../utilities/getAtomsFromMF';\n\ninterface MoleculeInnerProps {\n  key: string;\n  molfile: string;\n}\nexport interface Molecule extends MoleculeInnerProps {\n  mf: string;\n  em: number;\n  mw: number;\n  svg: string;\n  atoms: Record<string, number>;\n}\n\nexport function initMolecule(\n  options: Partial<MoleculeInnerProps> = {},\n): Molecule {\n  const key = options.key || generateID();\n  const molfile = options.molfile || '';\n\n  const mol = OCLMolecule.fromMolfile(molfile);\n  const mfInfo = mol.getMolecularFormula();\n\n  return {\n    key,\n    molfile,\n    mf: mfInfo.formula,\n    em: mfInfo.absoluteWeight,\n    mw: mfInfo.relativeWeight,\n    svg: mol.toSVG(50, 50),\n    atoms: getAtomsFromMF(mfInfo.formula),\n  };\n}\n\nexport function toJSON(molecule: Molecule): { molfile: string } {\n  return {\n    molfile: molecule.molfile,\n  };\n}\n","import { fromJEOL, fromJCAMP, fromBruker } from 'nmr-parser';\n\nimport { DISPLAYER_MODE } from '../component/reducer/core/Constants';\n\nimport * as Data1DManager from './data1d/Data1DManager';\nimport * as Datum1D from './data1d/Spectrum1D';\nimport * as Data2DManager from './data2d/Data2DManager';\nimport * as Datum2D from './data2d/Spectrum2D';\nimport { CURRENT_EXPORT_VERSION } from './migration/MigrationManager';\nimport * as Molecule from './molecules/Molecule';\n\nexport enum DataExportOptions {\n  ROW_DATA = 'ROW_DATA',\n  DATA_SOURCE = 'DATA_SOURCE',\n}\n\nexport type DataExportOptionsType = keyof typeof DataExportOptions;\n\nexport function addJcampFromURL(spectra, jcampURL, options, usedColors) {\n  return fetch(jcampURL)\n    .then((response) => response.arrayBuffer())\n    .then((jcamp) => {\n      addJcamp(spectra, jcamp, options, usedColors);\n    });\n}\n\nexport function addJcamp(spectra, jcamp, options, usedColors) {\n  options = options || {};\n  const entries = fromJCAMP(jcamp, {\n    noContour: true,\n    xy: true,\n    keepRecordsRegExp: /.*/,\n    profiling: true,\n  });\n  if (entries.length === 0) return;\n  // Should be improved when we have a more complex case\n  for (let entry of entries) {\n    let { dependentVariables } = entry;\n    if (\n      dependentVariables[0].components &&\n      (dependentVariables[0].components.length > 0 ||\n        dependentVariables[0].components.z.length)\n    ) {\n      addJcampSS(spectra, entry, options, usedColors);\n    }\n  }\n}\n\nfunction addJcampSS(spectra, entry, options, usedColors) {\n  const dimension = entry.info.dimension;\n  if (dimension === 1) {\n    spectra.push(Data1DManager.fromParsedJcamp(entry, options, usedColors));\n  }\n  if (dimension === 2) {\n    spectra.push(Data2DManager.fromParsedJcamp(entry, options, usedColors));\n  }\n}\n\nfunction addData(spectra, datum, usedColors) {\n  const dimension = datum.info.dimension;\n  if (dimension === 1) {\n    spectra.push(Datum1D.initiateDatum1D(datum, usedColors));\n  }\n  if (dimension === 2) {\n    spectra.push(Datum2D.initiateDatum2D(datum, usedColors));\n  }\n}\n\nexport function addJDF(spectra, jdf, options: any = {}, usedColors: any = {}) {\n  // need to parse the jcamp\n  let converted = fromJEOL(jdf, {});\n  converted = converted[0];\n  let info = converted.description;\n  let metadata = info.metadata;\n  delete info.metadata;\n  info.acquisitionMode = 0;\n  info.experiment = info.dimension === 1 ? '1d' : '2d';\n  info.type = 'NMR SPECTRUM';\n  info.nucleus = info.nucleus[0];\n  info.numberOfPoints = info.numberOfPoints[0];\n  info.acquisitionTime = info.acquisitionTime[0];\n\n  info.baseFrequency = info.baseFrequency[0];\n  info.frequencyOffset = info.frequencyOffset[0];\n\n  info.spectralWidthClipped = converted.application.spectralWidthClipped;\n\n  if (info.dimension === 1) {\n    if (converted.dependentVariables) {\n      spectra.push(\n        Data1DManager.fromCSD(\n          converted,\n          {\n            ...options,\n            display: { ...options.display },\n            info: info,\n            meta: metadata,\n          },\n          usedColors,\n        ),\n      );\n    }\n  }\n  if (info.dimension === 2 && info.isFt) {\n    spectra.push(\n      Data2DManager.fromCSD(\n        converted,\n        {\n          ...options,\n          display: { ...options.display },\n          info,\n        },\n        usedColors,\n      ),\n    );\n  }\n}\n\nexport async function fromJSON(data: any[] = [], usedColors: any = {}) {\n  const spectra: any[] = [];\n  let promises: any[] = [];\n\n  for (let datum of data) {\n    if (datum?.source?.jcampURL != null) {\n      promises.push(\n        addJcampFromURL(spectra, datum.source.jcampURL, datum, usedColors),\n      );\n    } else {\n      addData(spectra, datum, usedColors);\n    }\n  }\n  await Promise.all(promises);\n  return spectra;\n}\n\nexport async function addBruker(options, data, usedColors) {\n  const spectra: any[] = [];\n  let result = await fromBruker(data, {\n    xy: true,\n    noContours: true,\n    keepOriginal: true,\n  });\n  let entries = result;\n  for (let entry of entries) {\n    let { info, dependentVariables } = entry;\n    if (info.dimension === 1) {\n      if (dependentVariables[0].components) {\n        spectra.push(\n          Data1DManager.fromBruker(\n            entry,\n            {\n              ...options,\n              display: { ...options.display },\n            },\n            usedColors,\n          ),\n        );\n      }\n    } else if (info.dimension === 2) {\n      if (info.isFt) {\n        spectra.push(\n          Data2DManager.fromBruker(\n            entry,\n            {\n              ...options,\n              info,\n              display: { ...options.display },\n            },\n            usedColors,\n          ),\n        );\n      } else {\n        // in case of 2D FID spectrum\n      }\n    }\n  }\n  return spectra;\n}\n\n// handle zip files\nexport async function fromZip(zipFiles) {\n  const spectra = [];\n  for (let zipFile of zipFiles) {\n    await addBruker(\n      spectra,\n      { display: { name: zipFile.name } },\n      zipFile.binary,\n    );\n  }\n  return spectra;\n}\n\nexport function addJDFs(files, usedColors) {\n  const spectra = [];\n  for (const file of files) {\n    addJDF(\n      spectra,\n      file.binary,\n      {\n        display: {\n          name: file.name,\n        },\n        source: {\n          jcampURL: file.jcampURL ? file.jcampURL : null,\n          file,\n        },\n      },\n      usedColors,\n    );\n  }\n  return spectra;\n}\n\nexport function addJcamps(files, usedColors) {\n  const spectra = [];\n  for (const file of files) {\n    addJcamp(\n      spectra,\n      file.binary,\n      {\n        display: {\n          name: file.name,\n        },\n        source: {\n          jcampURL: file.jcampURL ? file.jcampURL : null,\n          file,\n        },\n      },\n      usedColors,\n    );\n  }\n  return spectra;\n}\n\nfunction getPreferences(state) {\n  const {\n    activeTab,\n    verticalAlign: { align },\n  } = state;\n  return {\n    activeTab,\n    ...(state.displayerMode === DISPLAYER_MODE.DM_1D\n      ? { verticalAlign: align }\n      : {}),\n  };\n}\n\n/**\n *\n * @param {object} state\n */\nexport function toJSON(\n  state,\n  dataExportOption: DataExportOptionsType = DataExportOptions.DATA_SOURCE,\n) {\n  const {\n    data,\n    molecules: mols,\n    correlations,\n    multipleAnalysis,\n    toolOptions: {\n      data: { exclusionZones },\n    },\n  } = state || {\n    data: [],\n    molecules: [],\n    correlations: {},\n    multipleAnalysis: {},\n    exclusionZones: {},\n  };\n  const spectra = data.map((ob) => {\n    return ob.info.dimension === 1\n      ? Datum1D.toJSON(ob, dataExportOption)\n      : Datum2D.toJSON(ob, dataExportOption);\n  });\n\n  const preferences = getPreferences(state);\n  const molecules = mols.map((mol) => Molecule.toJSON(mol));\n\n  return {\n    spectra,\n    molecules,\n    correlations,\n    multipleAnalysis,\n    exclusionZones,\n    version: CURRENT_EXPORT_VERSION,\n    preferences,\n  };\n}\n","import { DataExportOptions, DataExportOptionsType } from '../../SpectraManager';\nimport { Datum1D } from '../../types/data1d/Datum1D';\n\nexport function toJSON(\n  datum1D: Datum1D,\n  dataExportOption: DataExportOptionsType,\n) {\n  return {\n    id: datum1D.id,\n    display: datum1D.display,\n    ...(dataExportOption === DataExportOptions.ROW_DATA ||\n    (dataExportOption === DataExportOptions.DATA_SOURCE &&\n      !datum1D.source.jcampURL)\n      ? {\n          data: datum1D.originalData,\n          info: datum1D.originalInfo,\n          meta: datum1D.meta,\n          source: {\n            jcampURL: null,\n          },\n        }\n      : {\n          source: {\n            jcampURL: datum1D.source.jcampURL,\n          },\n        }),\n    peaks: datum1D.peaks,\n    integrals: datum1D.integrals,\n    ranges: datum1D.ranges,\n    filters: datum1D.filters,\n  };\n}\n","import {\n  predictAll,\n  signalsToXY,\n  signals2DToZ,\n  getFrequency,\n} from 'nmr-processing';\nimport OCL from 'openchemlib/full';\n\nimport { DatumKind } from './constants/SignalsKinds';\nimport {\n  initiateDatum1D,\n  mapRanges,\n  updateIntegralsRelativeValues,\n} from './data1d/Spectrum1D';\nimport { initiateDatum2D } from './data2d/Spectrum2D';\nimport { Datum1D } from './types/data1d';\nimport { Datum2D, Signal2D, Zone } from './types/data2d';\nimport generateID from './utilities/generateID';\nimport { adjustAlpha } from './utilities/getColor';\n\nexport interface PredictionOptions {\n  name: string;\n  frequency: number;\n  '1d': {\n    '1H': { from: number; to: number };\n    '13C': { from: number; to: number };\n    nbPoints: number;\n    lineWidth: number;\n  };\n  '2d': {\n    nbPoints: { x: number; y: number };\n  };\n  spectra: {\n    proton: boolean;\n    carbon: boolean;\n    cosy: boolean;\n    hsqc: boolean;\n    hmbc: boolean;\n  };\n}\n\nexport const defaultPredictionOptions: PredictionOptions = {\n  name: '',\n  frequency: 400,\n  '1d': {\n    '1H': { from: -1, to: 12 },\n    '13C': { from: -5, to: 220 },\n    nbPoints: 2 ** 17,\n    lineWidth: 1,\n  },\n  '2d': {\n    nbPoints: { x: 1024, y: 1024 },\n  },\n  spectra: {\n    proton: true,\n    carbon: true,\n    cosy: true,\n    hsqc: true,\n    hmbc: true,\n  },\n};\n\nexport const FREQUENCIES: Array<{ key: number; value: number; label: string }> =\n  [\n    { key: 1, value: 60, label: '60 MHz' },\n    { key: 2, value: 100, label: '100 MHz' },\n    { key: 3, value: 200, label: '200 MHz' },\n    { key: 4, value: 300, label: '300 MHz' },\n    { key: 5, value: 400, label: '400 MHz' },\n    { key: 6, value: 500, label: '500 MHz' },\n    { key: 7, value: 600, label: '600 MHz' },\n    { key: 8, value: 800, label: '800 MHz' },\n    { key: 9, value: 1000, label: '1000 MHz' },\n    { key: 10, value: 1200, label: '1200 MHz' },\n  ];\n\nconst baseURL = 'https://nmr-prediction.service.zakodium.com';\n\nexport async function predictSpectra(molfile: string): Promise<any> {\n  const molecule = OCL.Molecule.fromMolfile(molfile);\n\n  return predictAll(molecule, {\n    predictOptions: {\n      C: {\n        webserviceURL: `${baseURL}/v1/predict/carbon`,\n      },\n    },\n  });\n}\n\nexport function generateSpectra(\n  data: Record<string, any>,\n  inputOptions: PredictionOptions,\n  color: string,\n): Array<Datum1D | Datum2D> {\n  const spectra: Array<Datum1D | Datum2D> = [];\n  for (const experiment in data) {\n    if (inputOptions.spectra[experiment]) {\n      const spectrum = data[experiment];\n      switch (experiment) {\n        case 'proton':\n        case 'carbon': {\n          const datum = generated1DSpectrum({\n            spectrum,\n            inputOptions,\n            experiment,\n            color,\n          });\n          spectra.push(datum);\n\n          break;\n        }\n        case 'cosy':\n        case 'hsqc':\n        case 'hmbc': {\n          const datum = generated2DSpectrum({\n            spectrum,\n            inputOptions,\n            experiment,\n            color,\n          });\n          spectra.push(datum);\n\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n  return spectra;\n}\n\nfunction generated1DSpectrum(params: {\n  inputOptions: PredictionOptions;\n  spectrum: any;\n  experiment: string;\n  color: string;\n}) {\n  const { spectrum, inputOptions, experiment, color } = params;\n\n  const { signals, ranges, nucleus } = spectrum;\n\n  const {\n    name,\n    '1d': { nbPoints },\n    frequency: freq,\n  } = inputOptions;\n  const frequency = calculateFrequency(nucleus, freq);\n  const { x, y } = signalsToXY(signals, {\n    ...inputOptions['1d'][nucleus],\n    frequency,\n    nbPoints,\n  });\n  const datum = initiateDatum1D(\n    {\n      data: { x, im: null, re: y },\n      display: {\n        name,\n        color,\n      },\n      info: {\n        nucleus,\n        originFrequency: frequency,\n        baseFrequency: frequency,\n        pulseSequence: 'prediction',\n        solvent: '',\n        experiment,\n        isFt: true,\n      },\n    },\n    [],\n  );\n  datum.ranges.values = mapRanges(ranges, datum);\n  updateIntegralsRelativeValues(datum);\n  return datum;\n}\n\nfunction mapZones(zones: Array<Partial<Zone>>) {\n  return zones.reduce<Array<Zone>>((zonesAcc, zone: any) => {\n    const { signals, ...resZone } = zone;\n    const newSignals = signals.reduce(\n      (signalsAcc: Signal2D[], signal: Signal2D) => {\n        const { x, y, id, ...resSignal } = signal;\n        signalsAcc.push({\n          id: id || generateID(),\n          kind: 'signal',\n          x: { ...x, originDelta: x.delta || 0 },\n          y: { ...y, originDelta: y.delta || 0 },\n          ...resSignal,\n        });\n        return signalsAcc;\n      },\n      [],\n    );\n\n    zonesAcc.push({\n      id: generateID(),\n      ...resZone,\n      signals: newSignals,\n      kind: DatumKind.signal,\n    });\n    return zonesAcc;\n  }, []);\n}\n\nfunction generated2DSpectrum(params: {\n  inputOptions: PredictionOptions;\n  spectrum: any;\n  experiment: string;\n  color: string;\n}) {\n  const { spectrum, inputOptions, experiment, color } = params;\n  const { signals, zones, nuclei } = spectrum;\n\n  const xOption = inputOptions['1d'][nuclei[0]];\n  const yOption = inputOptions['1d'][nuclei[1]];\n\n  const width = get2DWidth(nuclei);\n  const frequency = calculateFrequency(nuclei, inputOptions.frequency);\n\n  const spectrumData = signals2DToZ(signals, {\n    from: { x: xOption.from, y: yOption.from },\n    to: { x: xOption.to, y: yOption.to },\n    nbPoints: {\n      x: inputOptions['2d'].nbPoints.x,\n      y: inputOptions['2d'].nbPoints.y,\n    },\n    width,\n    factor: 3,\n  });\n\n  const datum = initiateDatum2D(\n    {\n      data: { ...spectrumData, noise: 0.01 },\n      display: {\n        name: inputOptions.name,\n        positiveColor: color,\n        negativeColor: adjustAlpha(color, 40),\n      },\n      info: {\n        nucleus: nuclei,\n        originFrequency: frequency,\n        baseFrequency: frequency,\n        pulseSequence: experiment,\n        experiment: '2d',\n      },\n    },\n    [],\n  );\n  datum.zones.values = mapZones(zones);\n  return datum;\n}\n\nfunction get2DWidth(nucleus: string[]) {\n  return nucleus[0] === nucleus[1] ? 0.02 : { x: 0.02, y: 0.2133 };\n}\n\nfunction calculateFrequency(\n  nucleus: string | string[],\n  frequency: number,\n): number | string {\n  if (typeof nucleus === 'string') {\n    return getFrequency(nucleus, { nucleus: '1H', frequency });\n  } else {\n    if (nucleus[0] === nucleus[1]) {\n      return `${frequency},${frequency}`;\n    } else {\n      return `${frequency},${getFrequency(nucleus[1], {\n        nucleus: nucleus[0],\n        frequency,\n      })}`;\n    }\n  }\n}\n","// error colors in priority order\nconst ErrorColors: Array<{ key: string; color: string }> = [\n  { key: 'outOfLimit', color: 'red' },\n  { key: 'ambiguousAttachment', color: 'orange' },\n  { key: 'notAttached', color: 'blue' },\n  { key: 'incomplete', color: 'red' },\n];\n\nconst Errors = ErrorColors.map((errorColor) => errorColor.key);\n\nconst Hybridizations: Array<{ key: string; label: string; value: string }> = [\n  {\n    key: '-',\n    label: '',\n    value: '',\n  },\n  {\n    key: 'sp',\n    label: 'sp',\n    value: 'SP',\n  },\n  {\n    key: 'sp2',\n    label: 'sp2',\n    value: 'SP2',\n  },\n  {\n    key: 'sp3',\n    label: 'sp3',\n    value: 'SP3',\n  },\n];\n\nconst DefaultTolerance = {\n  C: 0.25,\n  H: 0.02,\n  N: 0.25,\n  F: 0.25,\n  Si: 0.25,\n  P: 0.25,\n};\n\nexport { DefaultTolerance, Errors, ErrorColors, Hybridizations };\n","import * as Filters from '../../data/Filters';\n\ninterface OptionItem {\n  id: string;\n  label: string;\n  hasOptionPanel: boolean;\n  isFilter: boolean;\n}\n\ntype RecordOptions = Record<\n  | 'zoom'\n  | 'peakPicking'\n  | 'integral'\n  | 'zone2D'\n  | 'slicingTool'\n  | 'HMove'\n  | 'equalizerTool'\n  | 'rangesPicking'\n  | 'zeroFilling'\n  | 'phaseCorrection'\n  | 'baseLineCorrection'\n  | 'generalSelector'\n  | 'editRange'\n  | 'multipleSpectraAnalysis'\n  | 'exclusionZones'\n  | 'databaseRangesSelection',\n  OptionItem\n>;\n\nexport const options: RecordOptions = {\n  zoom: {\n    id: 'zoom',\n    label: 'Zoom',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  peakPicking: {\n    id: 'peakPicking',\n    label: 'Peaks Picking',\n    hasOptionPanel: true,\n    isFilter: false,\n  },\n  integral: {\n    id: 'integral',\n    label: 'integral Tool',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  zone2D: {\n    id: 'zone2D',\n    label: 'Zone Tool',\n    hasOptionPanel: true,\n    isFilter: false,\n  },\n  slicingTool: {\n    id: 'slicingTool',\n    label: 'Slicing Tool',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  HMove: {\n    id: 'HMove',\n    label: 'Move spectrum horizontally',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  equalizerTool: {\n    id: 'equalizerTool',\n    label: 'Equalizer Tool',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  rangesPicking: {\n    id: 'rangesPicking',\n    label: 'Ranges Picking',\n    hasOptionPanel: true,\n    isFilter: false,\n  },\n  zeroFilling: {\n    id: Filters.zeroFilling.id,\n    label: Filters.zeroFilling.name,\n    hasOptionPanel: true,\n    isFilter: true,\n  },\n  phaseCorrection: {\n    id: Filters.phaseCorrection.id,\n    label: Filters.phaseCorrection.name,\n    hasOptionPanel: true,\n    isFilter: true,\n  },\n  baseLineCorrection: {\n    id: 'baseLineCorrection',\n    label: 'baseline correction',\n    hasOptionPanel: true,\n    isFilter: true,\n  },\n  generalSelector: {\n    id: 'generalSelector',\n    label: 'range general selector',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n\n  editRange: {\n    id: 'editRange',\n    label: 'edit range',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n\n  multipleSpectraAnalysis: {\n    id: 'multipleSpectraAnalysis',\n    label: 'Multiple Spectra Analysis',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  exclusionZones: {\n    id: 'exclusionZones',\n    label: 'Exclusion Zones',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  databaseRangesSelection: {\n    id: 'databaseRangesSelection',\n    label: 'Filter Database',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n};\n","import { mapRanges } from '../../../../data/data1d/Spectrum1D';\n\nexport function addRanges(signals, datum) {\n  let ranges: Array<any> = [];\n  const { baseFrequency: frequency = 500 } = datum;\n  for (const signal of signals) {\n    const {\n      jCoupling: js,\n      delta,\n      diaIDs = [],\n      multiplicity,\n      integration,\n    } = signal;\n    const fromTo = computeFromTo({ delta, js, frequency });\n    if (js && multiplicity) {\n      if (js.length === multiplicity.length) {\n        js.sort((a, b) => b - a);\n        for (let i = 0; i < js.length; i++) {\n          js[i].multiplicity = multiplicity[i];\n        }\n      }\n    }\n\n    ranges.push({\n      ...fromTo,\n      integration,\n      signals: [\n        {\n          js,\n          delta,\n          diaIDs,\n          multiplicity,\n        },\n      ],\n    });\n  }\n  datum.ranges.values = mapRanges(joinRanges(ranges), datum);\n}\n\ninterface ComputeFromToOptions {\n  delta?: any;\n  js?: any;\n  couplings?: Array<any>;\n  frequency?: any;\n}\n\nfunction computeFromTo(options: ComputeFromToOptions = {}) {\n  const { delta, js: couplings = [], frequency } = options;\n  let width = 0.5;\n  for (let j of couplings) {\n    width += j.coupling;\n  }\n  width /= frequency;\n  return { from: delta - width, to: delta + width };\n}\n\nfunction joinRanges(ranges) {\n  ranges.sort((a, b) => a.from - b.from);\n  for (let i = 0; i < ranges.length - 1; i++) {\n    if (ranges[i].to > ranges[i + 1].from) {\n      ranges[i].to = Math.max(ranges[i + 1].to, ranges[i].to);\n      ranges[i].signals = ranges[i].signals.concat(ranges[i + 1].signals);\n      ranges[i].integration += ranges[i + 1].integration;\n      ranges.splice(i + 1, 1);\n      i--;\n    }\n  }\n  return ranges;\n}\n","import { getShift } from '../../../../data/data2d/Spectrum2D';\nimport generateID from '../../../../data/utilities/generateID';\n\nconst axisLabels = ['y', 'x'];\n\nexport function addZones(signals, datum) {\n  let zones: Array<any> = [];\n  const shift = getShift(datum);\n  const { baseFrequency } = datum.info;\n  const frequency = { x: baseFrequency[0], y: baseFrequency[1] };\n\n  for (const signal of signals) {\n    let zone = { x: {}, y: {}, id: generateID(), kind: 'signal' };\n    let signalFormated = { id: generateID(), kind: 'signal', peaks: [] };\n    let width = { x: 10, y: 10 };\n    for (let axis of axisLabels) {\n      let { coupling = [], delta, diaIDs = [] } = signal[axis];\n      for (let j of coupling) {\n        width[axis] += j.coupling;\n      }\n      if (signal.activeCoupling) {\n        const { activeCoupling = [] } = signal;\n        for (let j of activeCoupling) {\n          width[axis] += j.coupling;\n        }\n      }\n      width[axis] /= frequency[axis];\n\n      zone[axis] = {\n        from: delta - width[axis],\n        to: delta + width[axis],\n      };\n\n      signalFormated[axis] = {\n        delta,\n        diaIDs,\n        originDelta: delta - shift[`${axis}Shift`],\n      };\n    }\n    zones.push({\n      ...zone,\n      signals: [signalFormated],\n    });\n  }\n  datum.zones.values = zones;\n}\n","import Jszip from 'jszip';\nimport { NmrRecord, parseSDF } from 'nmredata';\n\nimport { addBruker, addJcamps } from '../../data/SpectraManager';\n\nimport { addRanges } from './util/nmredata/addRanges';\nimport { addZones } from './util/nmredata/addZones';\n\nexport async function nmredataToNmrium(file, usedColors) {\n  const jszip = new Jszip();\n  const zip = await jszip.loadAsync(file.binary);\n  const sdfFiles = await getSDF(zip.files);\n  const jsonData = await NmrRecord.toJSON({\n    sdf: sdfFiles[0],\n    zipFiles: zip.files,\n  });\n\n  let { spectra, molecules = [] } = jsonData;\n\n  let nmrium: { spectra: any[]; molecules: any[] } = {\n    spectra: [],\n    molecules,\n  };\n\n  for (const data of spectra) {\n    const { file, jcampURL } = data.source;\n\n    let spectrum = (await getSpectra(file, { jcampURL }, usedColors)) || [];\n\n    for (const spectrumData of spectrum) {\n      const { info } = spectrumData;\n\n      if (info.isFid) continue;\n\n      if (info.dimension > 1) {\n        addZones(data.signals, spectrumData);\n      } else {\n        addRanges(data.signals, spectrumData);\n      }\n    }\n\n    nmrium.spectra.push(...spectrum);\n  }\n\n  return nmrium;\n}\n\ninterface GetSpectraOptions {\n  xy?: boolean;\n  noContours?: boolean;\n  keepOriginal?: boolean;\n  jcampURL?: string;\n}\n\nasync function getSpectra(\n  file,\n  options: GetSpectraOptions = {},\n  usedColors = {},\n) {\n  const {\n    xy = true,\n    noContours = true,\n    keepOriginal = true,\n    jcampURL,\n  } = options;\n  switch (file.extension) {\n    case 'jdx':\n    case 'dx':\n      return addJcamps([file], usedColors);\n    case 'zip':\n      return addBruker(\n        { xy, noContours, keepOriginal },\n        file.binary,\n        usedColors,\n      );\n    default:\n      if (!jcampURL) {\n        new Error('file extension is not supported');\n        return;\n      }\n  }\n}\n\nasync function getSDF(zipFiles) {\n  let result: any[] = [];\n  for (const file in zipFiles) {\n    const pathFile = file.split('/');\n    if (/^[^.].+sdf$/.exec(pathFile[pathFile.length - 1])) {\n      const filename = pathFile[pathFile.length - 1].replace(/\\.sdf/, '');\n      const root = pathFile.slice(0, pathFile.length - 1).join('/');\n      const sdf = await zipFiles[file].async('string');\n      let parserResult = parseSDF(`${sdf}`, { mixedEOL: true });\n      parserResult.filename = filename;\n      parserResult.root = root !== '' ? `${root}/` : '';\n      result.push(parserResult);\n    }\n  }\n  return result;\n}\n","import { Spectra } from '../../component/NMRium';\nimport { Datum1D, Range, Signal1D } from '../types/data1d';\nimport { Datum2D, Signal2D, Zone } from '../types/data2d';\n\nfunction findSpectrum(\n  spectraData: Spectra,\n  spectrumID: string,\n  checkIsVisible: boolean,\n): Datum1D | Datum2D | undefined {\n  const spectrum = spectraData.find((_spectrum) => _spectrum.id === spectrumID);\n  if (\n    spectrum &&\n    checkIsVisible === true &&\n    spectrum.display.isVisible === false\n  ) {\n    return undefined;\n  }\n\n  return spectrum;\n}\n\nfunction findSignal1D(\n  spectrum: Datum1D,\n  signalID: string,\n): Signal1D | undefined {\n  for (let range of spectrum.ranges.values) {\n    const signalIndex = range.signals.findIndex(\n      (_signal) => _signal.id === signalID,\n    );\n    if (signalIndex >= 0) {\n      return range.signals[signalIndex];\n    }\n  }\n}\n\nfunction findSignal2D(\n  spectrum: Datum2D,\n  signalID: string,\n): Signal2D | undefined {\n  for (let zone of spectrum.zones.values) {\n    const signalIndex = zone.signals.findIndex(\n      (_signal) => _signal.id === signalID,\n    );\n    if (signalIndex >= 0) {\n      return zone.signals[signalIndex];\n    }\n  }\n}\n\nfunction findRange(spectrum: Datum1D, signalID: string): Range | undefined {\n  for (let range of spectrum.ranges.values) {\n    const signalIndex = range.signals.findIndex(\n      (_signal) => _signal.id === signalID,\n    );\n    if (signalIndex >= 0) {\n      return range;\n    }\n  }\n}\n\nfunction findZone(spectrum: Datum2D, signalID: string): Zone | undefined {\n  for (let zone of spectrum.zones.values) {\n    const signalIndex = zone.signals.findIndex(\n      (_signal) => _signal.id === signalID,\n    );\n    if (signalIndex >= 0) {\n      return zone;\n    }\n  }\n}\n\nfunction findRangeOrZoneID(\n  spectraData: Spectra,\n  experimentID: string,\n  signalID: string,\n  checkIsVisible: boolean,\n) {\n  const spectrum = findSpectrum(spectraData, experimentID, checkIsVisible);\n  if (spectrum) {\n    if (spectrum.info.dimension === 1) {\n      const range = findRange(spectrum as Datum1D, signalID);\n      if (range) return range.id;\n    } else if (spectrum.info.dimension === 2) {\n      const zone = findZone(spectrum as Datum2D, signalID);\n      if (zone) return zone.id;\n    }\n  }\n}\n\nexport {\n  findRange,\n  findRangeOrZoneID,\n  findSignal1D,\n  findSignal2D,\n  findSpectrum,\n  findZone,\n};\n","import { scaleLinear, zoomIdentity } from 'd3';\n\nfunction getXScale(state, spectrumId: number | null | string = null) {\n  const { width, margin, xDomains, xDomain, mode } = state;\n  const range =\n    mode === 'RTL'\n      ? [width - margin.right, margin.left]\n      : [margin.left, width - margin.right];\n  return scaleLinear(spectrumId ? xDomains[spectrumId] : xDomain, range);\n}\n\nfunction getYScale(state, spectrumId: number | null | string = null) {\n  const { height, margin, verticalAlign, yDomain, yDomains } = state;\n  const _height =\n    verticalAlign.align === 'center'\n      ? (height - 30) / 2\n      : height - margin.bottom - 30;\n  let domainY: [number, number] | [] = [];\n  if (spectrumId === null || yDomains[spectrumId] === undefined) {\n    domainY = [0, yDomain[1]];\n  } else {\n    domainY = [0, yDomains[spectrumId][1]];\n  }\n  return scaleLinear(domainY, [_height, margin.top]);\n}\n\nfunction getIntegralYScale(state) {\n  const { height, margin, verticalAlign, integralsYDomains, activeSpectrum } =\n    state;\n  const _height = verticalAlign.align === 'center' ? height / 2 : height;\n  return scaleLinear(\n    activeSpectrum?.id &&\n      integralsYDomains &&\n      integralsYDomains[activeSpectrum?.id]\n      ? integralsYDomains[activeSpectrum?.id]\n      : [0, 0],\n    [_height * 0.3, margin.top + _height * 0.1],\n  );\n}\n\nfunction reScaleY(scale: number, { domain, height, margin }) {\n  const _scale = scaleLinear(domain, [height - margin.bottom, margin.top]);\n\n  const t = zoomIdentity\n    .translate(0, _scale(0))\n    .scale(scale)\n    .translate(0, -_scale(0));\n\n  return t.rescaleY(_scale).domain();\n}\n\nexport { getXScale, getYScale, getIntegralYScale, reScaleY };\n","import { getXScale } from '../../1d/utilities/scale';\n\ninterface RangeOptions {\n  startX: number;\n  endX: number;\n}\n\nexport default function getRange(\n  draft,\n  options: RangeOptions,\n): [number, number] {\n  const { startX, endX } = options;\n  const scaleX = getXScale(draft);\n\n  const start = scaleX.invert(startX);\n  const end = scaleX.invert(endX);\n  const range: [number, number] = [0, 0];\n  if (start > end) {\n    range[0] = end;\n    range[1] = start;\n  } else {\n    range[0] = start;\n    range[1] = end;\n  }\n  return range;\n}\n","export default function nucleusToString(nucleus) {\n  return typeof nucleus === 'string' ? nucleus : nucleus.join(',');\n}\n","import { extent } from 'd3';\nimport { Draft } from 'immer';\n\nimport { get1DDataXY } from '../../../data/data1d/Spectrum1D/get1DDataXY';\nimport { isSpectrum2D } from '../../../data/data2d/Spectrum2D';\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport nucleusToString from '../../utility/nucleusToString';\nimport { State } from '../Reducer';\nimport { DISPLAYER_MODE } from '../core/Constants';\n\nfunction getActiveData(draft: Draft<State>): Array<Datum1D> {\n  let data = draft.data.filter(\n    (datum) =>\n      nucleusToString(datum.info.nucleus) === draft.activeTab &&\n      datum.info.dimension === 1,\n  );\n\n  if (draft.activeSpectrum) {\n    const activeSpectrumIndex = data.findIndex(\n      (datum) => datum.id === draft.activeSpectrum?.id,\n    );\n    if (activeSpectrumIndex !== -1) {\n      const isFid = data[activeSpectrumIndex].info.isFid || false;\n      data = data.filter((datum) => datum.info.isFid === isFid);\n    }\n  } else {\n    data = data.filter((datum) => datum.info.isFid === false);\n  }\n\n  return data as Array<Datum1D>;\n}\n\nfunction getDomain(drfat: Draft<State>) {\n  let xArray: Array<number> = [];\n  let yArray: Array<number> = [];\n  let yDomains = {};\n  let xDomains = {};\n\n  const data = getActiveData(drfat);\n  try {\n    xArray = data.reduce<Array<number>>((acc, d: Datum1D) => {\n      const { display, data } = d;\n      const domain = [data.x[0], data.x[data.x.length - 1]];\n      xDomains[d.id] = domain;\n      if (display.isVisible) {\n        acc = acc.concat(domain);\n      }\n      return acc;\n    }, []);\n\n    yArray = data.reduce<Array<number>>((acc, d: Datum1D) => {\n      const { display } = d;\n      const data = get1DDataXY(d);\n\n      const _extent = extent(data.y) as Array<number>;\n      yDomains[d.id] = _extent;\n\n      if (display.isVisible) {\n        acc = acc.concat(_extent);\n      }\n      return acc;\n    }, []);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n\n  return {\n    xDomain: extent(xArray),\n    yDomain: extent(yArray),\n    yDomains,\n    xDomains,\n  };\n}\nfunction get2DDomain(state) {\n  let xArray = [];\n  let yArray = [];\n  let yDomains = {};\n  let xDomains = {};\n\n  const { activeTab, tabActiveSpectrum, data } = state;\n\n  const nucleus = activeTab.split(',');\n\n  try {\n    xArray = data.reduce((acc, datum: Datum1D | Datum2D) => {\n      if (\n        isSpectrum2D(datum) &&\n        datum.info.nucleus?.join(',') === activeTab &&\n        datum.info.isFt\n      ) {\n        acc = acc.concat([datum.data.minX, datum.data.maxX]);\n      }\n      return acc;\n    }, []);\n\n    yArray = data.reduce((acc, datum: Datum1D | Datum2D) => {\n      if (\n        isSpectrum2D(datum) &&\n        datum.info.nucleus?.join(',') === activeTab &&\n        datum.info.isFt\n      ) {\n        acc = acc.concat([datum.data.minY, datum.data.maxY]);\n      }\n      return acc;\n    }, []);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n\n  const spectrumsIDs = nucleus.map((n) => tabActiveSpectrum[n]?.id);\n\n  const filteredData = data.reduce((acc, datum: Datum1D | Datum2D) => {\n    return spectrumsIDs.includes(datum.id) && datum.info.dimension === 1\n      ? acc.concat(datum)\n      : acc.concat([]);\n  }, []);\n  try {\n    xDomains = filteredData.reduce((acc, d: Datum1D) => {\n      const { x } = d.data;\n      const domain = [x[0], x[x.length - 1]];\n      acc[d.id] = domain;\n      return acc;\n    }, {});\n\n    yDomains = filteredData.reduce((acc, d: Datum1D) => {\n      const _extent = extent(d.data.re);\n      acc[d.id] = _extent;\n      return acc;\n    }, {});\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n\n  return {\n    xDomain: extent(xArray),\n    yDomain: extent(yArray),\n    yDomains,\n    xDomains,\n  };\n}\n\nexport interface SetDomainOptions {\n  yDomain?: {\n    isChanged?: boolean;\n    isShared?: boolean;\n  };\n}\n\nfunction setDomain(draft: Draft<State>, options?: SetDomainOptions) {\n  const { yDomain = { isChanged: true, isShared: true } } = options || {};\n  let domain;\n\n  if (draft.activeTab) {\n    if (draft.displayerMode === DISPLAYER_MODE.DM_1D) {\n      domain = getDomain(draft);\n    } else {\n      domain = get2DDomain(draft);\n    }\n    draft.xDomain = domain.xDomain;\n    draft.xDomains = domain.xDomains;\n    draft.originDomain = domain;\n\n    if (yDomain.isChanged) {\n      draft.yDomain = domain.yDomain;\n      if (draft.displayerMode === DISPLAYER_MODE.DM_1D && yDomain.isShared) {\n        draft.yDomains = Object.keys(domain.yDomains).reduce((acc, key) => {\n          acc[key] = domain.yDomain;\n          return acc;\n        }, {});\n      } else {\n        draft.yDomains = domain.yDomains;\n      }\n    } else {\n      draft.originDomain = {\n        ...draft.originDomain,\n        xDomain: domain.xDomain,\n        xDomains: domain.xDomains,\n      };\n    }\n  }\n}\n\nfunction getSpectrumIntegralsDomain(datum: Datum1D) {\n  const { integrals, ranges } = datum;\n  let max = Number.NEGATIVE_INFINITY;\n  for (const integral of integrals.values) {\n    max = Math.max(max, integral.absolute);\n  }\n  for (const range of ranges.values) {\n    max = Math.max(max, range.absolute);\n  }\n  return [0, max];\n}\nfunction setIntegralsYDomain(draft: Draft<State>, data: Datum1D[] | Datum1D) {\n  for (const spectrum of Array.isArray(data) ? data : [data]) {\n    if (spectrum?.info?.dimension === 1) {\n      draft.integralsYDomains[spectrum.id] =\n        getSpectrumIntegralsDomain(spectrum);\n    }\n  }\n}\n\nfunction setOriginalDomain(draft: Draft<State>, originDomain) {\n  draft.originDomain = originDomain;\n}\n\nfunction setXDomain(draft: Draft<State>, xDomain) {\n  draft.xDomain = xDomain;\n}\n\nfunction setYDomain(draft: Draft<State>, yDomain) {\n  draft.yDomain = yDomain;\n}\n\nfunction handelResetDomain(draft: Draft<State>) {\n  const { xDomain, yDomain, xDomains, yDomains } = draft.originDomain;\n  draft.xDomain = xDomain;\n  draft.yDomain = yDomain;\n  draft.xDomains = xDomains;\n  draft.yDomains = yDomains;\n}\n\nfunction setMode(draft: Draft<State>) {\n  const data = draft.data.filter(\n    (datum) =>\n      draft.xDomains[datum.id] &&\n      nucleusToString(datum.info.nucleus) === draft.activeTab,\n  );\n  draft.mode = (data[0] as Datum1D)?.info.isFid ? 'LTR' : 'RTL';\n}\n\nexport {\n  getDomain,\n  setOriginalDomain,\n  setXDomain,\n  setYDomain,\n  handelResetDomain,\n  setDomain,\n  setMode,\n  setIntegralsYDomain,\n};\n","import { Draft, original } from 'immer';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\n\nimport * as Filters from '../../../data/Filters';\nimport * as FiltersManager from '../../../data/FiltersManager';\nimport {\n  DatumKind,\n  SignalKindsToInclude,\n} from '../../../data/constants/SignalsKinds';\nimport {\n  addRange,\n  changeRangeSignal,\n  detectRanges,\n  updateRangesRelativeValues,\n  changeRange,\n  changeRangeRelativeValue,\n  updateXShift,\n} from '../../../data/data1d/Spectrum1D';\nimport { setSumOptions } from '../../../data/data1d/Spectrum1D/SumManager';\nimport { Datum1D } from '../../../data/types/data1d';\nimport {\n  unlink,\n  unlinkInAssignmentData,\n} from '../../../data/utilities/RangeUtilities';\nimport { State } from '../Reducer';\nimport getRange from '../helper/getRange';\n\nimport { handleUpdateCorrelations } from './CorrelationsActions';\nimport { setDomain, setIntegralsYDomain } from './DomainActions';\n\nfunction handleAutoRangesDetection(draft: Draft<State>, options) {\n  const {\n    activeSpectrum,\n    data,\n    xDomain,\n    molecules,\n    activeTab: nucleus,\n  } = draft;\n  if (activeSpectrum?.id) {\n    const { index } = activeSpectrum;\n    const datum = data[index] as Datum1D;\n\n    const [from, to] = xDomain;\n    const windowFromIndex = xFindClosestIndex(datum.data.x, from);\n    const windowToIndex = xFindClosestIndex(datum.data.x, to);\n\n    const detectionOptions = {\n      factorStd: 8,\n      integrationSum: 100,\n      compile: true,\n      frequencyCluster: 16,\n      clean: true,\n      keepPeaks: true,\n      ...options, // minMaxRatio default 0.05, lookNegative default false,\n    };\n\n    detectRanges(datum, {\n      ...detectionOptions,\n      windowFromIndex,\n      windowToIndex,\n      molecules,\n      nucleus,\n    });\n    handleOnChangeRangesData(draft);\n    setIntegralsYDomain(draft, datum);\n  }\n}\n\nfunction handleAutoSpectraRangesDetection(draft: Draft<State>) {\n  const peakPicking = {\n    factorStd: 8,\n    minMaxRatio: 0.05,\n    integrationSum: 100,\n    compile: true,\n    frequencyCluster: 16,\n    clean: true,\n    keepPeaks: true,\n  };\n  const { data, activeTab: nucleus, molecules } = draft;\n  for (const datum of data) {\n    if (datum.info.dimension === 1) {\n      detectRanges(datum as Datum1D, { peakPicking, molecules, nucleus });\n      handleOnChangeRangesData(draft);\n    }\n  }\n}\n\nfunction getRangeIndex(draft: Draft<State>, spectrumIndex, rangeID) {\n  return (draft.data[spectrumIndex] as Datum1D).ranges.values.findIndex(\n    (range) => range.id === rangeID,\n  );\n}\n\nfunction handleDeleteRange(draft: Draft<State>, action) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    const { id = null, assignmentData } = action.payload.data;\n    const datum = draft.data[index] as Datum1D;\n    if (id) {\n      const rangeIndex = getRangeIndex(draft, index, id);\n      unlinkInAssignmentData(assignmentData, [datum.ranges.values[rangeIndex]]);\n      datum.ranges.values.splice(rangeIndex, 1);\n    } else {\n      unlinkInAssignmentData(assignmentData, datum.ranges.values);\n      datum.ranges.values = [];\n    }\n    updateRangesRelativeValues(datum);\n    handleOnChangeRangesData(draft);\n  }\n}\n\nfunction handleChangeRangeSignalKind(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const { rowData, value } = action.payload.data;\n    const rangeIndex = getRangeIndex(state, index, rowData.id);\n    const _range = (draft.data[index] as Datum1D).ranges.values[rangeIndex];\n    if (_range?.signals) {\n      _range.signals[rowData.tableMetaInfo.signalIndex].kind = value;\n      _range.kind = SignalKindsToInclude.includes(value)\n        ? DatumKind.signal\n        : DatumKind.mixed;\n      updateRangesRelativeValues(draft.data[index] as Datum1D);\n      handleOnChangeRangesData(draft);\n    }\n  }\n}\n\nfunction handleSaveEditedRange(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const { editedRowData, assignmentData } = action.payload;\n\n    // reset temp range\n    draft.toolOptions.data.tempRange = null;\n\n    // remove assignments in global state\n\n    const _editedRowData: any = unlink(editedRowData);\n\n    delete _editedRowData.tableMetaInfo;\n    delete _editedRowData.rowKey;\n    // remove assignments in assignment hook data\n    // for now: clear all assignments for this range because signals or levels to store might have changed\n    unlinkInAssignmentData(assignmentData, [_editedRowData]);\n    const rangeIndex = getRangeIndex(state, index, _editedRowData.id);\n    (draft.data[index] as Datum1D).ranges.values[rangeIndex] = _editedRowData;\n    updateRangesRelativeValues(draft.data[index] as Datum1D);\n    handleOnChangeRangesData(draft);\n  }\n}\n\nfunction handleDeleteSignal(draft: Draft<State>, action) {\n  const {\n    spectrum,\n    range,\n    signal,\n    assignmentData,\n    unlinkSignalInAssignmentData = true,\n  } = action.payload;\n\n  if (spectrum && range) {\n    const datum1D = draft.data.find(\n      (datum) => datum.id === spectrum.id,\n    ) as Datum1D;\n    const rangeIndex = datum1D.ranges.values.findIndex(\n      (_range) => _range.id === range.id,\n    );\n    const signalIndex = range.signals.findIndex(\n      (_signal) => _signal.id === signal.id,\n    );\n    // remove assignments for the signal range object in global state\n    const _range = unlink(cloneDeep(range), 'signal', { signalIndex });\n    if (unlinkSignalInAssignmentData === true) {\n      unlinkInAssignmentData(assignmentData, [{ signals: [signal] }]);\n    }\n    _range.signals.splice(signalIndex, 1);\n    datum1D.ranges.values[rangeIndex] = _range;\n    // if no signals are existing in a range anymore then delete this range\n    if (_range.signals.length === 0) {\n      unlinkInAssignmentData(assignmentData, [_range]);\n      datum1D.ranges.values.splice(rangeIndex, 1);\n    }\n\n    handleOnChangeRangesData(draft);\n  }\n}\n\nfunction handleUnlinkRange(draft: Draft<State>, action) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    const {\n      assignmentData,\n      rangeData = null,\n      signalIndex = -1,\n    } = action.payload;\n\n    // remove assignments in global state\n    if (rangeData) {\n      const rangeIndex = getRangeIndex(draft, index, rangeData.id);\n      const range = cloneDeep(\n        (draft.data[index] as Datum1D).ranges.values[rangeIndex],\n      );\n\n      let newRange: any = {};\n      let id = rangeData.id;\n      if (rangeData && signalIndex === -1) {\n        newRange = unlink(range, 'range');\n      } else {\n        newRange = unlink(range, 'signal', { signalIndex });\n        id = rangeData.signals[signalIndex].id;\n      }\n      // remove assignments in assignment hook data\n      unlinkInAssignmentData(assignmentData, [\n        {\n          id,\n        },\n      ]);\n      (draft.data[index] as Datum1D).ranges.values[rangeIndex] = newRange;\n    } else {\n      const ranges = (draft.data[index] as Datum1D).ranges.values.map(\n        (range) => {\n          return unlink(range);\n        },\n      );\n      (draft.data[index] as Datum1D).ranges.values = ranges;\n\n      unlinkInAssignmentData(assignmentData, ranges);\n    }\n  }\n}\n\nfunction handleSetDiaIDRange(draft: Draft<State>, action) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    const { rangeData, diaIDs, signalIndex, nbAtoms } = action.payload;\n    const getNbAtoms = (input, current = 0) => input + current;\n    const rangeIndex = getRangeIndex(draft, index, rangeData.id);\n    const _range = (draft.data[index] as Datum1D).ranges.values[rangeIndex];\n    if (signalIndex === undefined) {\n      _range.diaIDs = diaIDs;\n      _range.nbAtoms = getNbAtoms(nbAtoms, _range.nbAtoms);\n    } else {\n      _range.signals[signalIndex].diaIDs = diaIDs;\n      _range.signals[signalIndex].nbAtoms = getNbAtoms(\n        nbAtoms,\n        _range.signals[signalIndex].nbAtoms,\n      );\n    }\n    // _range.nbAtoms = getNbAtoms(_range);\n  }\n}\n\nfunction handleResizeRange(draft: Draft<State>, action) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    changeRange(draft.data[index] as Datum1D, action.data);\n  }\n}\n\nfunction handleChangeRangeSum(draft: Draft<State>, options) {\n  const { data, activeSpectrum, activeTab: nucleus } = draft;\n  if (activeSpectrum?.id) {\n    const { index } = activeSpectrum;\n    const datum = data[index] as Datum1D;\n    setSumOptions(datum.ranges, { options, nucleus });\n    updateRangesRelativeValues(datum, true);\n  }\n}\n\nfunction handleAddRange(draft: Draft<State>, action) {\n  const { startX, endX } = action.payload;\n  const { activeSpectrum, activeTab: nucleus, molecules } = draft;\n  const range = getRange(draft, { startX, endX });\n\n  if (activeSpectrum?.id) {\n    const { index } = activeSpectrum;\n    const [from, to] = range;\n    addRange(draft.data[index] as Datum1D, { from, to, nucleus, molecules });\n    handleOnChangeRangesData(draft);\n    setIntegralsYDomain(draft, draft.data[index] as Datum1D);\n  }\n}\n\nfunction handleChangeRangeRelativeValue(draft, action) {\n  const data = action.payload.data;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    changeRangeRelativeValue(draft.data[index], data);\n  }\n}\n\nfunction handleChangeRangeSignalValue(draft, action) {\n  const { rangeID, signalID, value } = action.payload;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    const shift = changeRangeSignal(draft.data[index], {\n      rangeID,\n      signalID,\n      newSignalValue: value,\n    });\n    FiltersManager.applyFilter(draft.data[index], [\n      { name: Filters.shiftX.id, options: shift },\n    ]);\n\n    updateXShift(draft.data[index] as Datum1D);\n\n    handleOnChangeRangesData(draft);\n    setDomain(draft);\n  }\n}\n\nfunction handleOnChangeRangesData(draft) {\n  handleUpdateCorrelations(draft);\n}\n\nfunction handleChangeRangesSumFlag(draft, action) {\n  const flag = action.payload;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    draft.data[index].ranges.options.isSumConstant = !flag;\n  }\n}\n\nfunction handleChangeTempRange(draft: Draft<State>, action) {\n  draft.toolOptions.data.tempRange = action.payload.tempRange;\n}\n\nfunction handleShowMultiplicityTrees(draft: Draft<State>) {\n  draft.toolOptions.data.showMultiplicityTrees =\n    !draft.toolOptions.data.showMultiplicityTrees;\n}\n\nfunction handleShowRangesIntegrals(draft: Draft<State>) {\n  draft.toolOptions.data.showRangesIntegrals =\n    !draft.toolOptions.data.showRangesIntegrals;\n}\n\nfunction handleShowJGraph(draft: Draft<State>) {\n  draft.toolOptions.data.showJGraph = !draft.toolOptions.data.showJGraph;\n}\n\nexport {\n  handleAutoRangesDetection,\n  handleDeleteRange,\n  handleDeleteSignal,\n  handleChangeRangeSum,\n  handleAddRange,\n  handleResizeRange,\n  handleChangeRangeRelativeValue,\n  handleChangeRangeSignalValue,\n  handleChangeRangeSignalKind,\n  handleSaveEditedRange,\n  handleUnlinkRange,\n  handleSetDiaIDRange,\n  handleChangeRangesSumFlag,\n  handleChangeTempRange,\n  handleShowMultiplicityTrees,\n  handleShowRangesIntegrals,\n  handleAutoSpectraRangesDetection,\n  handleShowJGraph,\n};\n","import { DatumKind } from '../constants/SignalsKinds';\nimport { Zone } from '../types/data2d';\n\nexport function getDiaIDs(zone: Zone, axis: string): string[] {\n  return ([] as string[]).concat(\n    zone[axis].diaIDs || [],\n    zone.signals\n      ? zone.signals.map((signal) => signal[axis].diaIDs || []).flat()\n      : [],\n  );\n}\n\nexport function getNbAtoms(zone: Zone, axis: string) {\n  return zone.signals\n    ? zone.signals.reduce(\n        (sum, signal) =>\n          signal[axis].nbAtoms ? sum + signal[axis].nbAtoms : sum,\n        0,\n      )\n    : 0;\n}\n\nexport function setNbAtoms(zone: Zone, axis: string): void {\n  zone[axis].nbAtoms = getNbAtoms(zone, axis);\n  if (zone[axis].nbAtoms === 0) {\n    delete zone[axis].nbAtoms;\n  }\n}\n\nexport function resetDiaIDs(zone: Zone, axis: string) {\n  delete zone[axis].diaIDs;\n  delete zone[axis].nbAtoms;\n  zone.signals.forEach((signal) => {\n    delete signal[axis].diaIDs;\n    delete signal[axis].nbAtoms;\n  });\n  return zone;\n}\n\nexport function checkZoneKind(zone: Zone): boolean {\n  return zone.kind === DatumKind.signal;\n}\n\nexport function checkSignalKinds(zone: Zone, kinds: string[]): boolean {\n  return !zone.signals.some(\n    (_signal) => _signal.kind === undefined || !kinds.includes(_signal.kind),\n  );\n}\n\nexport function unlink(\n  zone: Zone,\n  isOnZoneLevel?: boolean,\n  signalIndex?: number,\n  axis?: string,\n): Zone {\n  if (isOnZoneLevel !== undefined && axis !== undefined) {\n    if (isOnZoneLevel === true) {\n      delete zone[axis].diaIDs;\n      delete zone[axis].nbAtoms;\n    } else if (\n      typeof signalIndex === 'number' &&\n      signalIndex !== -1 &&\n      zone.signals[signalIndex]\n    ) {\n      delete zone.signals[signalIndex][axis].diaIDs;\n      delete zone.signals[signalIndex][axis].nbAtoms;\n    }\n    setNbAtoms(zone, axis);\n  } else if (axis !== undefined) {\n    resetDiaIDs(zone, axis);\n    setNbAtoms(zone, axis);\n  } else {\n    ['x', 'y'].forEach((key) => {\n      resetDiaIDs(zone, key);\n      setNbAtoms(zone, key);\n    });\n  }\n  return zone;\n}\n\nexport function unlinkInAssignmentData(\n  assignmentData,\n  zones: Partial<Zone>[],\n  axis?: string,\n): void {\n  const ids = zones.reduce((acc: string[], zone) => {\n    if (zone.id) {\n      acc.push(zone.id);\n    }\n    if (zone.signals) {\n      acc = acc.concat(zone.signals.map((signal) => signal.id, []));\n    }\n    return acc;\n  }, []);\n\n  if (axis) {\n    assignmentData.dispatch({\n      type: 'REMOVE_ALL',\n      payload: { id: ids, axis },\n    });\n  } else {\n    assignmentData.dispatch({\n      type: 'REMOVE_ALL',\n      payload: { id: ids, axis: 'x' },\n    });\n    assignmentData.dispatch({\n      type: 'REMOVE_ALL',\n      payload: { id: ids, axis: 'y' },\n    });\n  }\n}\n","const LAYOUT = {\n  TOP_1D: 'TOP_1D',\n  LEFT_1D: 'LEFT_1D',\n  CENTER_2D: 'CENTER_2D',\n};\n\ninterface MarginProps {\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n}\n\nfunction get2DDimensionLayout({\n  width,\n  height,\n  margin,\n}: {\n  width: number;\n  height: number;\n  margin: MarginProps;\n}) {\n  return {\n    CENTER_2D: {\n      startX: margin.left,\n      startY: margin.top,\n      endX: width - margin.right,\n      endY: height - margin.bottom,\n    },\n    TOP_1D: {\n      startX: margin.left,\n      startY: 0,\n      endX: width - margin.right,\n      endY: margin.top,\n    },\n    LEFT_1D: {\n      startX: 0,\n      startY: margin.top,\n      endX: margin.left,\n      endY: height - margin.bottom,\n    },\n  };\n}\n\ninterface StartEndProps {\n  startX: number;\n  endX?: number;\n  startY: number;\n  endY?: number;\n}\n\ninterface DimensionType {\n  CENTER_2D: {\n    startX: number;\n    startY: number;\n    endX: number;\n    endY: number;\n  };\n  TOP_1D: {\n    startX: number;\n    startY: number;\n    endX: number;\n    endY: number;\n  };\n  LEFT_1D: {\n    startX: number;\n    startY: number;\n    endX: number;\n    endY: number;\n  };\n}\n\nfunction getLayoutID(dimension: DimensionType, brushData: StartEndProps) {\n  for (const key of Object.keys(dimension)) {\n    if (\n      brushData.startX >= dimension[key].startX &&\n      brushData.startX <= dimension[key].endX &&\n      brushData.startY >= dimension[key].startY &&\n      brushData.startY <= dimension[key].endY\n    ) {\n      return key;\n    }\n  }\n  return null;\n}\n\nexport { LAYOUT, get2DDimensionLayout, getLayoutID };\n","import { scaleLinear } from 'd3';\n\nimport { LAYOUT } from './DimensionLayout';\n\nfunction get2DXScale(props: {\n  width: number;\n  margin: { right: number; left: number };\n  xDomain: Array<number>;\n}) {\n  const { width, margin, xDomain } = props;\n  return scaleLinear(xDomain, [width - margin.right, margin.left]);\n}\n\nfunction get2DYScale(\n  props: {\n    height: number;\n    margin: { bottom: number; top: number };\n    yDomain: Array<number>;\n  },\n  reverse = false,\n) {\n  const { height, margin, yDomain } = props;\n  return scaleLinear(\n    yDomain,\n    reverse\n      ? [height - margin.bottom, margin.top]\n      : [margin.top, height - margin.bottom],\n  );\n}\n\ninterface TopLayout {\n  width: number;\n  margin: { right: number; left: number };\n  xDomain: Array<number>;\n}\n\ninterface LeftLayout {\n  height: number;\n  margin: { bottom: number; top: number };\n  yDomain: Array<number>;\n}\n\nfunction get1DXScale(props: TopLayout | LeftLayout, layout: string) {\n  if (![LAYOUT.TOP_1D, LAYOUT.LEFT_1D].includes(layout)) {\n    throw new Error(\n      `layout is required and must be ${LAYOUT.TOP_1D} or ${LAYOUT.LEFT_1D}  `,\n    );\n  }\n\n  switch (layout) {\n    case LAYOUT.TOP_1D: {\n      const { width, margin, xDomain } = props as TopLayout;\n      return scaleLinear(xDomain, [width - margin.right, margin.left]);\n    }\n    case LAYOUT.LEFT_1D: {\n      const { height, margin, yDomain } = props as LeftLayout;\n      return scaleLinear(yDomain, [height - margin.bottom, margin.top]);\n    }\n    default:\n      break;\n  }\n}\n\nfunction get1DYScale(yDomain: Array<number>, height: number, margin = 10) {\n  return scaleLinear(yDomain, [height - margin, margin]);\n}\n\nexport { get2DXScale, get2DYScale, get1DXScale, get1DYScale };\n","import { get2DXScale, get2DYScale } from '../../2d/utilities/scale';\n\nexport default function get2DRange(draft, options) {\n  const { startX, startY, endX, endY } = options;\n  const scaleX = get2DXScale(draft);\n  const scaleY = get2DYScale(draft);\n  const x1 = startX * 1000000 > endX * 1000000 ? endX : startX;\n  const x2 = startX * 1000000 > endX * 1000000 ? startX : endX;\n  const y1 = startY * 1000000 > endY * 1000000 ? endY : startY;\n  const y2 = startY * 1000000 > endY * 1000000 ? startY : endY;\n\n  const fromY = scaleY.invert(y1);\n  const fromX = scaleX.invert(x1);\n  const toY = scaleY.invert(y2);\n  const toX = scaleX.invert(x2);\n  return { fromX, fromY, toX, toY };\n}\n","import { FromTo } from 'cheminfo-types';\nimport { Draft, original } from 'immer';\nimport lodashCloneDeep from 'lodash/cloneDeep';\nimport { setPathLength } from 'nmr-correlation';\n\nimport * as Filters from '../../../data/Filters';\nimport * as FiltersManager from '../../../data/FiltersManager';\nimport {\n  DatumKind,\n  SignalKindsToInclude,\n} from '../../../data/constants/SignalsKinds';\nimport {\n  changeZoneSignal,\n  detectZones,\n  detectZonesManual,\n  updateShift,\n} from '../../../data/data2d/Spectrum2D';\nimport { Datum2D, Signal2D } from '../../../data/types/data2d';\nimport {\n  unlink,\n  unlinkInAssignmentData,\n} from '../../../data/utilities/ZoneUtilities';\nimport { State } from '../Reducer';\nimport get2DRange from '../helper/get2DRange';\n\nimport { handleUpdateCorrelations } from './CorrelationsActions';\nimport { setDomain } from './DomainActions';\n\nfunction changeZonesFactorHandler(draft: Draft<State>, action) {\n  draft.toolOptions.data.zonesNoiseFactor = action.payload;\n}\n\nfunction add2dZoneHandler(draft: Draft<State>, action) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    const drawnZone = get2DRange(draft, action);\n    const datum = draft.data[index] as Datum2D;\n\n    const zones = detectZonesManual(original(datum), {\n      selectedZone: drawnZone,\n      thresholdFactor: draft.toolOptions.data.zonesNoiseFactor,\n      convolutionByFFT: false,\n    });\n\n    datum.zones.values = datum.zones.values.concat(zones);\n\n    handleOnChangeZonesData(draft);\n  }\n}\nfunction handleAutoZonesDetection(draft: Draft<State>, detectionOptions) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    const [fromX, toX] = draft.xDomain;\n    const [fromY, toY] = draft.yDomain;\n    detectionOptions.selectedZone = { fromX, toX, fromY, toY };\n    const datum = draft.data[index] as Datum2D;\n    const zones = detectZones(original(datum), detectionOptions);\n    datum.zones.values = datum.zones.values.concat(zones);\n    handleOnChangeZonesData(draft);\n  }\n}\nfunction handleAutoSpectraZonesDetection(draft: Draft<State>) {\n  for (const datum of draft.data) {\n    if (datum.info.dimension === 2) {\n      const { minX, maxX, minY, maxY } = (datum as Datum2D).data;\n      const detectionOptions = {\n        selectedZone: { fromX: minX, toX: maxX, fromY: minY, toY: maxY },\n        thresholdFactor: 1,\n      };\n\n      const zones = detectZones(original(datum), detectionOptions);\n      (datum as Datum2D).zones.values = (datum as Datum2D).zones.values.concat(\n        zones,\n      );\n\n      handleOnChangeZonesData(draft);\n    }\n  }\n}\n\nfunction changeZoneSignalDelta(draft: Draft<State>, action) {\n  const { zoneID, signal } = action.payload;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    const { xShift, yShift } = changeZoneSignal(\n      draft.data[index] as Datum2D,\n      zoneID,\n      signal,\n    );\n    let filters: any = [];\n    if (xShift !== 0) {\n      filters.push({ name: Filters.shift2DX.id, options: xShift });\n    }\n    if (yShift !== 0) {\n      filters.push({ name: Filters.shift2DY.id, options: yShift });\n    }\n\n    FiltersManager.applyFilter(draft.data[index], filters);\n\n    updateShift(draft.data[index] as Datum2D);\n\n    setDomain(draft);\n    handleOnChangeZonesData(draft);\n  }\n}\n\nfunction getZoneIndex(state, spectrumIndex, zoneID) {\n  return state.data[spectrumIndex].zones.values.findIndex(\n    (zone) => zone.id === zoneID,\n  );\n}\n\nfunction handleChangeZoneSignalKind(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const { rowData, value } = action.payload;\n    const zoneIndex = getZoneIndex(state, index, rowData.id);\n    const _zone = (draft.data[index] as Datum2D).zones.values[zoneIndex];\n    _zone.signals[rowData.tableMetaInfo.signalIndex].kind = value;\n    _zone.kind = SignalKindsToInclude.includes(value)\n      ? DatumKind.signal\n      : DatumKind.mixed;\n    handleOnChangeZonesData(draft);\n  }\n}\n\nfunction handleDeleteZone(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const { id, assignmentData } = action.payload;\n    if (id) {\n      const zone = (draft.data[index] as Datum2D).zones.values.find(\n        (zone) => zone.id === id,\n      );\n      unlinkInAssignmentData(assignmentData, [zone || {}]);\n      const zoneIndex = getZoneIndex(state, index, id);\n      (draft.data[index] as Datum2D).zones.values.splice(zoneIndex, 1);\n    } else {\n      unlinkInAssignmentData(\n        assignmentData,\n        (draft.data[index] as Datum2D).zones.values,\n      );\n      (draft.data[index] as Datum2D).zones.values = [];\n    }\n    handleOnChangeZonesData(draft);\n  }\n}\n\nfunction handleDeleteSignal(draft: Draft<State>, action) {\n  const {\n    spectrum,\n    zone,\n    signal,\n    assignmentData,\n    unlinkSignalInAssignmentData = true,\n  } = action.payload;\n\n  if (spectrum && zone) {\n    const datum2D = draft.data.find(\n      (datum) => datum.id === spectrum.id,\n    ) as Datum2D;\n    const zoneIndex = datum2D.zones.values.findIndex(\n      (_zone) => _zone.id === zone.id,\n    );\n    const signalIndex = zone.signals.findIndex(\n      (_signal) => _signal.id === signal.id,\n    );\n    // remove assignments for the signal in zone object and global state\n    const _zone = unlink(lodashCloneDeep(zone), false, signalIndex, undefined);\n    if (unlinkSignalInAssignmentData === true) {\n      unlinkInAssignmentData(\n        assignmentData,\n        [{ signals: [signal] }],\n        undefined,\n      );\n    }\n    _zone.signals.splice(signalIndex, 1);\n    datum2D.zones.values[zoneIndex] = _zone;\n    // if no signals are existing in a zone anymore then delete this zone\n    if (_zone.signals.length === 0) {\n      unlinkInAssignmentData(assignmentData, [_zone]);\n      datum2D.zones.values.splice(zoneIndex, 1);\n    }\n\n    handleOnChangeZonesData(draft);\n  }\n}\n\nfunction handleSetSignalPathLength(draft: Draft<State>, action) {\n  const { spectrum, zone, signal, pathLength } = action.payload;\n  if (spectrum && zone) {\n    const datum2D = draft.data.find(\n      (datum) => datum.id === spectrum.id,\n    ) as Datum2D;\n    const zoneIndex = datum2D.zones.values.findIndex(\n      (_zone) => _zone.id === zone.id,\n    );\n    const signalIndex = zone.signals.findIndex(\n      (_signal) => _signal.id === signal.id,\n    );\n    const _zone = unlink(lodashCloneDeep(zone), false, signalIndex, undefined);\n    _zone.signals[signalIndex].j = {\n      ..._zone.signals[signalIndex].j,\n      pathLength,\n    };\n    datum2D.zones.values[zoneIndex] = _zone;\n\n    handleOnChangeZonesData(draft);\n  }\n}\n\nfunction handleUnlinkZone(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const {\n      zoneData = null,\n      assignmentData,\n      isOnZoneLevel = undefined,\n      signalIndex = -1,\n      axis = undefined,\n    } = action.payload;\n\n    if (zoneData) {\n      // remove assignments in global state\n\n      const zoneIndex = getZoneIndex(state, index, zoneData.id);\n\n      const zone = lodashCloneDeep(\n        (draft.data[index] as Datum2D).zones.values[zoneIndex],\n      );\n      const _zoneData = unlink(zone, isOnZoneLevel, signalIndex, axis);\n\n      unlinkInAssignmentData(\n        assignmentData,\n        [{ id: zoneData.signals[signalIndex].id }],\n        axis,\n      );\n      (draft.data[index] as Datum2D).zones.values[zoneIndex] = _zoneData;\n    } else {\n      const zones = (draft.data[index] as Datum2D).zones.values.map((zone) => {\n        return unlink(zone);\n      });\n      (draft.data[index] as Datum2D).zones.values = zones;\n\n      unlinkInAssignmentData(assignmentData, zones);\n    }\n  }\n}\n\nfunction handleSetDiaIDZone(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const { zoneData, diaIDs, axis, signalIndex, nbAtoms } = action.payload;\n    const getNbAtoms = (input, current = 0) => input + current;\n    const zoneIndex = getZoneIndex(state, index, zoneData.id);\n    const _zone = (draft.data[index] as Datum2D).zones.values[zoneIndex];\n    if (signalIndex === undefined) {\n      _zone[axis].diaIDs = diaIDs;\n      _zone[axis].nbAtoms = getNbAtoms(nbAtoms, _zone[axis].nbAtoms);\n    } else {\n      _zone.signals[signalIndex][axis].diaIDs = diaIDs;\n      _zone.signals[signalIndex][axis].nbAtoms = getNbAtoms(\n        nbAtoms,\n        _zone.signals[signalIndex][axis].nbAtoms,\n      );\n    }\n  }\n}\n\nfunction handleSaveEditedZone(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const { editedRowData } = action.payload;\n\n    delete editedRowData.tableMetaInfo;\n\n    const zoneIndex = getZoneIndex(state, index, editedRowData.id);\n    (draft.data[index] as Datum2D).zones.values[zoneIndex] = editedRowData;\n\n    if (editedRowData.signals) {\n      editedRowData.signals.forEach((signal: Signal2D) => {\n        setPathLength(\n          draft.correlations.values,\n          signal.id,\n          signal.j?.pathLength as FromTo,\n        );\n      });\n    }\n\n    handleOnChangeZonesData(draft);\n  }\n}\n\nfunction handleOnChangeZonesData(draft) {\n  handleUpdateCorrelations(draft);\n}\n\nexport {\n  add2dZoneHandler,\n  handleAutoZonesDetection,\n  handleDeleteSignal,\n  handleDeleteZone,\n  changeZoneSignalDelta,\n  handleChangeZoneSignalKind,\n  handleUnlinkZone,\n  handleSaveEditedZone,\n  handleSetDiaIDZone,\n  handleSetSignalPathLength,\n  changeZonesFactorHandler,\n  handleAutoSpectraZonesDetection,\n};\n","import { original, Draft } from 'immer';\nimport lodashCloneDeep from 'lodash/cloneDeep';\nimport {\n  buildCorrelationData,\n  setCorrelation,\n  Tolerance,\n  Options as CorrelationOptions,\n  Correlation,\n  Spectra,\n  Values as CorrelationValues,\n} from 'nmr-correlation';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport {\n  findRange,\n  findSignal1D,\n  findSignal2D,\n  findSpectrum,\n  findZone,\n} from '../../../data/utilities/FindUtilities';\nimport { State } from '../Reducer';\n\nimport { handleDeleteSignal as handleDeleteSignal1D } from './RangesActions';\nimport { handleDeleteSignal as handleDeleteSignal2D } from './ZonesActions';\n\nfunction handleUpdateCorrelations(draft: Draft<State>) {\n  const { data: spectra, correlations } = draft;\n  draft.correlations = buildCorrelationData(spectra as Spectra, {\n    ...correlations.options,\n    values: lodashCloneDeep(correlations.values),\n  });\n}\n\nfunction handleSetMF(draft: Draft<State>, payload: { mf: string }) {\n  const state = original(draft) as State;\n  const { data: spectra, correlations } = state;\n  const { mf } = payload;\n  // update of correlation data is needed only if the following is true\n  if (correlations.options.mf === '' || correlations.options.mf !== mf) {\n    draft.correlations = buildCorrelationData(spectra as Spectra, {\n      ...correlations.options,\n      mf,\n      values: lodashCloneDeep(correlations.values),\n    });\n  }\n}\n\nfunction handleSetTolerance(\n  draft: Draft<State>,\n  payload: { tolerance: Tolerance },\n) {\n  const state = original(draft) as State;\n  const { data: spectra, correlations } = state;\n  const { tolerance } = payload;\n  draft.correlations = buildCorrelationData(spectra as Spectra, {\n    ...correlations.options,\n    tolerance,\n    values: lodashCloneDeep(correlations.values),\n  });\n}\n\nfunction handleSetCorrelation(\n  draft: Draft<State>,\n  payload: {\n    id: string;\n    correlation: Correlation;\n    options: CorrelationOptions;\n  },\n) {\n  const state = original(draft) as State;\n  const { correlations } = state;\n  const { id, correlation, options } = payload;\n  draft.correlations = setCorrelation(correlations, id, correlation);\n  if (options) {\n    draft.correlations = {\n      ...draft.correlations,\n      options: { ...draft.correlations.options, ...options },\n    };\n  }\n  handleUpdateCorrelations(draft);\n}\n\nfunction handleSetCorrelations(\n  draft: Draft<State>,\n  payload: {\n    correlations: CorrelationValues;\n    options: CorrelationOptions;\n  },\n) {\n  const { correlations, options } = payload;\n  const state = original(draft) as State;\n  let correlationsData = lodashCloneDeep(state.correlations);\n  correlations.forEach((correlation) => {\n    correlationsData = setCorrelation(\n      correlationsData,\n      correlation.id,\n      correlation,\n    );\n  });\n  draft.correlations = correlationsData;\n  if (options) {\n    draft.correlations = {\n      ...draft.correlations,\n      options: { ...draft.correlations.options, ...options },\n    };\n  }\n  handleUpdateCorrelations(draft);\n}\n\nfunction handleDeleteCorrelation(\n  draft: Draft<State>,\n  payload: { correlation: Correlation; assignmentData },\n) {\n  const { correlation, assignmentData } = payload;\n  // delete all signals linked to the correlation\n  correlation.link.forEach((link) => {\n    const spectrum = findSpectrum(draft.data, link.experimentID, false);\n    if (spectrum) {\n      if (spectrum.info.dimension === 1) {\n        const range = findRange(spectrum as Datum1D, link.signal.id);\n        const signal = findSignal1D(spectrum as Datum1D, link.signal.id);\n        handleDeleteSignal1D(draft, {\n          payload: {\n            spectrum,\n            range,\n            signal,\n            assignmentData,\n          },\n        });\n      } else if (spectrum.info.dimension === 2) {\n        const zone = findZone(spectrum as Datum2D, link.signal.id);\n        const signal = findSignal2D(spectrum as Datum2D, link.signal.id);\n        handleDeleteSignal2D(draft, {\n          payload: {\n            spectrum,\n            zone,\n            signal,\n            assignmentData,\n          },\n        });\n      }\n    }\n  });\n}\n\nexport {\n  handleDeleteCorrelation,\n  handleSetCorrelation,\n  handleSetCorrelations,\n  handleSetMF,\n  handleSetTolerance,\n  handleUpdateCorrelations,\n};\n","import { zoomIdentity, scaleLinear } from 'd3';\nimport { Draft } from 'immer';\n\nimport { State } from '../Reducer';\n\nexport const ZoomType = {\n  HORIZONTAL: 'HORIZONTAL',\n  VERTICAL: 'VERTICAL',\n  STEP_HORIZONTAL: 'STEP_HORIZONTAL',\n  FULL: 'FULL',\n};\ninterface ZoomOptions {\n  factor?: number;\n  invert?: boolean;\n}\nfunction wheelZoom(\n  event: WheelEvent,\n  domain: number[],\n  zoomOptions: ZoomOptions = {},\n): number[] {\n  const { factor = 1, invert = false } = zoomOptions;\n  const deltaY =\n    Math.abs(event.deltaY) < 100 ? event.deltaY * 100 : event.deltaY;\n  const delta = deltaY * (invert ? -0.001 : 0.001) * factor;\n  const ratio = delta < 0 ? -1 / (delta - 1) : 1 + delta;\n\n  const [min, max] = domain;\n\n  return [min * ratio, max * ratio];\n}\n\nfunction setZoom(\n  draft: Draft<State>,\n  options: {\n    scale?: number;\n    spectrumID?: string;\n  } = {},\n) {\n  const { height, margin, activeSpectrum } = draft;\n  const { scale = 1, spectrumID = null } = options;\n\n  if (activeSpectrum === null && spectrumID === null) {\n    const { shareYDomain, yDomain, yDomains } = draft.originDomain;\n    draft.yDomains = Object.keys(draft.yDomains).reduce((acc, id) => {\n      const _scale = scaleLinear(shareYDomain ? yDomain : yDomains[id], [\n        height - margin.bottom,\n        margin.top,\n      ]);\n      const [min, max] = shareYDomain ? yDomain : yDomains[id];\n      const maxPoint = Math.max(Math.abs(max), Math.abs(min));\n      const scalePoint = maxPoint === max ? 0 : min;\n      const t = zoomIdentity\n        .translate(\n          0,\n          Math.sign(scalePoint) >= 0 ? _scale(scalePoint) : _scale(scalePoint),\n        )\n        .scale(scale)\n        .translate(0, -_scale(0));\n      const newYDomain = t.rescaleY(_scale).domain();\n      acc[id] = newYDomain;\n      return acc;\n    }, {});\n  } else {\n    const spectrumId = spectrumID || activeSpectrum?.id;\n    if (spectrumId) {\n      const _scale = scaleLinear(draft.originDomain.yDomains[spectrumId], [\n        height - margin.bottom,\n        margin.top,\n      ]);\n      const t = zoomIdentity\n        .translate(0, _scale(0))\n        .scale(scale)\n        .translate(0, -_scale(0));\n      const yDomain = t.rescaleY(_scale).domain();\n\n      draft.yDomains = {\n        ...draft.yDomains,\n        [spectrumId]: yDomain,\n      };\n    }\n  }\n}\n\nexport { setZoom, wheelZoom };\n","import { Draft } from 'immer';\n\nimport { generateSpectrumFromRanges } from '../../../data/data1d/Spectrum1D/ranges/generateSpectrumFromRanges';\nimport { State } from '../Reducer';\nimport { setZoom } from '../helper/Zoom1DManager';\n\nimport { setDomain } from './DomainActions';\n\nfunction handleRangeResurrecting(draft: Draft<State>, action) {\n  const { ranges, info } = action.payload;\n\n  const datum = generateSpectrumFromRanges(ranges, info, draft.usedColors);\n  draft.data.push(datum);\n  setDomain(draft, { yDomain: { isShared: false } });\n  setZoom(draft, { scale: 0.8, spectrumID: datum.id });\n}\n\nexport { handleRangeResurrecting };\n","import { Draft } from 'immer';\n\nimport { State } from '../Reducer';\n\nfunction setWidth(draft: Draft<State>, width) {\n  draft.width = width;\n}\n\nfunction handleSetDimensions(draft: Draft<State>, width, height) {\n  draft.width = width;\n  draft.height = height;\n}\n\nexport { setWidth, handleSetDimensions };\n","import { Datum1D } from '../../data/types/data1d/Datum1D';\nimport { Datum2D } from '../../data/types/data2d';\n\nimport nucleusToString from './nucleusToString';\n\nexport function getSpectraByNucleus(\n  nucleus: string,\n  data: (Datum1D | Datum2D)[],\n) {\n  return data.filter(\n    (spectrum) => nucleusToString(spectrum.info.nucleus) === nucleus,\n  );\n}\n","interface HistoryItem {\n  xDomain: Array<number>;\n  yDomain: Array<number>;\n}\n\nexport interface ZoomHistory {\n  [key: string]: Array<HistoryItem>;\n}\ninterface ZoomHistoryManager {\n  historyStack: Array<HistoryItem>;\n  push: (value: HistoryItem) => void;\n  pop: () => HistoryItem;\n  getLast: () => HistoryItem;\n  clear: () => void;\n}\n\nexport default function zoomHistoryManager(\n  zoomHistory: ZoomHistory,\n  nucleus: string,\n): ZoomHistoryManager {\n  if (!zoomHistory[nucleus] && !Array.isArray(zoomHistory[nucleus])) {\n    zoomHistory[nucleus] = [];\n  }\n\n  const push = preparePush(zoomHistory[nucleus]);\n  const pop = preparePop(zoomHistory[nucleus]);\n  const getLast = prepareGetLast(zoomHistory[nucleus]);\n  const clear = () => (zoomHistory[nucleus] = []);\n  return { historyStack: zoomHistory[nucleus], push, pop, getLast, clear };\n}\n\nfunction preparePush(historyStack) {\n  return (val: HistoryItem) => {\n    historyStack.push(val);\n  };\n}\n\nfunction preparePop(historyStack) {\n  return () => {\n    const val = historyStack.pop();\n    return val ? historyStack[historyStack.length - 1] : null;\n  };\n}\n\nfunction prepareGetLast(historyStack) {\n  return () => {\n    if (historyStack.length === 0) return null;\n    return historyStack[historyStack.length - 1];\n  };\n}\n","function getNucleusSum(input) {\n  const nucleus = input.split(',');\n  return nucleus.reduce((acc, i) => {\n    const additions = nucleus.length === 2 ? 100 : 0;\n    acc += Number(i.replace(/\\D/g, '')) + additions;\n    return acc;\n  }, 0);\n}\n\nexport default function GroupByInfoKey(key) {\n  return (array, orderByNucleus = false) => {\n    const unorderedGroup = array.reduce((objectsByKeyValue, obj) => {\n      const value = obj.info[key];\n      objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\n      return objectsByKeyValue;\n    }, {});\n\n    if (!orderByNucleus) {\n      return unorderedGroup;\n    } else {\n      return Object.keys(unorderedGroup)\n        .sort((a, b) => getNucleusSum(a) - getNucleusSum(b))\n        .reduce((acc, key) => {\n          acc[key] = unorderedGroup[key];\n          return acc;\n        }, {});\n    }\n  };\n}\n","import { Draft } from 'immer';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport GroupByInfoKey from '../../utility/GroupByInfoKey';\nimport nucleusToString from '../../utility/nucleusToString';\nimport { State, VerticalAlignment } from '../Reducer';\nimport { DEFAULT_YAXIS_SHIFT_VALUE, DISPLAYER_MODE } from '../core/Constants';\n\nimport { setDomain } from './DomainActions';\n\ninterface AlignmentOptions {\n  align?: VerticalAlignment | 'auto-check';\n  checkData?: boolean;\n  activeTab?: string;\n}\n\nfunction changeSpectrumVerticalAlignment(\n  draft: Draft<State>,\n  options: AlignmentOptions,\n) {\n  if (draft.data && draft.data.length > 0) {\n    let dataPerNucleus: Datum1D[] = [];\n    if (['auto-check', 'stack'].includes(options.align || '')) {\n      dataPerNucleus = (draft.data as Datum1D[]).filter((datum) =>\n        datum.info.nucleus === options?.activeTab\n          ? options.activeTab\n          : draft.activeTab && datum.info.dimension === 1,\n      );\n    }\n\n    switch (options.align) {\n      case 'auto-check':\n      case 'bottom':\n      case 'center': {\n        if (\n          options.align === 'center' ||\n          (options.align === 'auto-check' &&\n            dataPerNucleus[0]?.info.isFid &&\n            !dataPerNucleus.some((d) => d.info.isFid === false))\n        ) {\n          const YAxisShift = draft.height / 2;\n          draft.verticalAlign.align = 'center';\n          draft.verticalAlign.verticalShift = YAxisShift;\n        } else {\n          draft.verticalAlign.align = 'bottom';\n          draft.verticalAlign.verticalShift = DEFAULT_YAXIS_SHIFT_VALUE;\n        }\n        break;\n      }\n\n      case 'stack': {\n        draft.verticalAlign.align = 'stack';\n        const visibleSpectra = dataPerNucleus.filter(\n          (datum) => datum.display.isVisible === true,\n        );\n        draft.verticalAlign.verticalShift = Math.floor(\n          (draft.height - draft.margin.bottom) / (visibleSpectra.length + 2),\n        );\n        break;\n      }\n\n      default:\n        return;\n    }\n  }\n}\n\nfunction setKeyPreferencesHandler(draft: Draft<State>, keyCode) {\n  const {\n    activeTab,\n    data,\n    activeSpectrum,\n    zoom,\n    xDomain,\n    xDomains,\n    yDomain,\n    yDomains,\n    originDomain,\n    margin,\n    displayerMode,\n    tabActiveSpectrum,\n  } = draft;\n\n  if (activeTab) {\n    const groupByNucleus = GroupByInfoKey('nucleus');\n\n    const spectrumsGroupsList = groupByNucleus(data);\n\n    const level =\n      displayerMode === DISPLAYER_MODE.DM_2D\n        ? spectrumsGroupsList[activeTab].reduce((acc, datum) => {\n            acc[datum.id] = datum.processingController.getLevel();\n            return acc;\n          }, {})\n        : null;\n\n    draft.keysPreferences[keyCode] = {\n      activeTab,\n      activeSpectrum,\n      displayerMode,\n      tabActiveSpectrum,\n      zoom,\n      xDomain,\n      xDomains,\n      yDomain,\n      yDomains,\n      originDomain,\n      level,\n      margin,\n      data: spectrumsGroupsList[activeTab].reduce((acc, datum) => {\n        acc[datum.id] = {\n          display: {\n            color: datum.display.color,\n            isVisible: datum.display.isVisible,\n            isPeaksMarkersVisible: datum.display.isPeaksMarkersVisible,\n          },\n        };\n        return acc;\n      }, {}),\n    };\n  }\n}\n\nfunction applyKeyPreferencesHandler(draft: Draft<State>, keyCode) {\n  const preferences = draft.keysPreferences[keyCode];\n  if (preferences) {\n    draft.activeTab = preferences.activeTab;\n    (draft.data as Datum1D[] | Datum2D[]).forEach((datum, index) => {\n      if (nucleusToString(datum.info.nucleus) === preferences.activeTab) {\n        draft.data[index].display = Object.assign(\n          cloneDeep(datum.display),\n          preferences.data[datum.id].display,\n        );\n      }\n    });\n    draft.displayerMode = preferences.displayerMode;\n    draft.tabActiveSpectrum = preferences.tabActiveSpectrum;\n    draft.activeSpectrum = preferences.activeSpectrum;\n\n    draft.margin = preferences.margin;\n\n    setDomain(draft);\n\n    draft.xDomain = preferences.xDomain;\n    draft.xDomains = preferences.xDomains;\n    draft.yDomain = preferences.yDomain;\n    draft.originDomain = preferences.originDomain;\n    draft.yDomains = preferences.yDomains;\n\n    if (draft.displayerMode === DISPLAYER_MODE.DM_2D) {\n      for (const datumID of Object.keys(preferences.level)) {\n        const { levelPositive, levelNegative } = preferences.level[datumID];\n        const index = draft.data.findIndex((datum) => datum.id === datumID);\n        const processController = (draft.data[index] as Datum2D)\n          .processingController;\n        processController.setLevel(levelPositive, levelNegative);\n\n        draft.contours[datumID] = processController.drawContours();\n      }\n    } else {\n      draft.zoom = preferences.zoom;\n    }\n  }\n}\n\nexport {\n  changeSpectrumVerticalAlignment,\n  setKeyPreferencesHandler,\n  applyKeyPreferencesHandler,\n};\n","import { max } from 'd3';\nimport { original, Draft, current } from 'immer';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\n\nimport * as Filters from '../../../data/Filters';\nimport { Data1D, Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport generateID from '../../../data/utilities/generateID';\nimport { getYScale, getXScale } from '../../1d/utilities/scale';\nimport { LAYOUT } from '../../2d/utilities/DimensionLayout';\nimport { get2DYScale } from '../../2d/utilities/scale';\nimport { options } from '../../toolbar/ToolTypes';\nimport GroupByInfoKey from '../../utility/GroupByInfoKey';\nimport { getSpectraByNucleus } from '../../utility/getSpectraByNucleus';\nimport { State } from '../Reducer';\nimport { DISPLAYER_MODE, MARGIN } from '../core/Constants';\nimport { setZoom, wheelZoom, ZoomType } from '../helper/Zoom1DManager';\nimport zoomHistoryManager from '../helper/ZoomHistoryManager';\n\nimport {\n  setDomain,\n  SetDomainOptions,\n  setIntegralsYDomain,\n  setMode,\n} from './DomainActions';\nimport { resetSpectrumByFilter } from './FiltersActions';\nimport { changeSpectrumVerticalAlignment } from './PreferencesActions';\n\nfunction getStrongestPeak(draft: Draft<State>) {\n  const { activeSpectrum, data } = draft;\n  if (activeSpectrum) {\n    const activeData = data[activeSpectrum?.index].data as Data1D;\n    const strongestPeakValue = max(activeData.re);\n    const index = activeData.re.findIndex((val) => val === strongestPeakValue);\n    return {\n      xValue: activeData.x[index],\n      yValue: strongestPeakValue,\n      index: index,\n    };\n  }\n}\n\nfunction setFilterChanges(draft: Draft<State>, selectedFilter) {\n  const activeSpectrumId = draft.activeSpectrum?.id;\n\n  //save reduced snapshot\n  //select the equalizer tool when you enable manual phase correction filter\n  if (selectedFilter === Filters.phaseCorrection.id) {\n    const datumAfterPhaseCorrection = resetSpectrumByFilter(\n      draft,\n      Filters.phaseCorrection.id,\n      {\n        rollback: true,\n        searchBy: 'name',\n        returnCurrentDatum: true,\n      },\n    );\n    draft.tempData = current(draft).data;\n    if (datumAfterPhaseCorrection) {\n      draft.tempData[datumAfterPhaseCorrection?.index] =\n        datumAfterPhaseCorrection?.datum;\n    }\n    const { xValue, index } = getStrongestPeak(draft) || {\n      xValue: 0,\n      index: 0,\n    };\n\n    draft.toolOptions.data.pivot = { value: xValue, index };\n  } else {\n    if (draft.toolOptions.selectedTool === options.phaseCorrection.id) {\n      draft.toolOptions.data.activeFilterID = null;\n      const spectrumIndex = draft.data.findIndex(\n        (spectrum) => spectrum.id === activeSpectrumId,\n      );\n\n      draft.data[spectrumIndex].data = draft.tempData[spectrumIndex].data;\n    }\n  }\n}\n\nfunction resetTool(draft: Draft<State>, setDefaultTool = true) {\n  // reset temp range\n  draft.toolOptions.data.tempRange = null;\n\n  setSelectedOptionPanel(draft, null);\n  if (setDefaultTool) {\n    draft.toolOptions.selectedTool = options.zoom.id;\n  }\n  draft.toolOptions.data.baseLineZones = [];\n\n  if (draft.toolOptions.data.activeFilterID) {\n    resetSpectrumByFilter(draft);\n  }\n\n  if (draft.tempData) {\n    draft.tempData = null;\n    setDomain(draft);\n  }\n}\n\nfunction resetSelectedTool(draft: Draft<State>, filterOnly = false) {\n  if (\n    (draft.toolOptions.selectedTool &&\n      options[draft.toolOptions.selectedTool].isFilter) ||\n    !filterOnly\n  ) {\n    resetTool(draft);\n  }\n}\n\nfunction setSelectedTool(draft: Draft<State>, action) {\n  const { selectedTool } = action.payload;\n\n  if (draft?.data.length > 0) {\n    if (selectedTool) {\n      // start Range edit mode\n      if (selectedTool === options.editRange.id) {\n        draft.toolOptions.data.tempRange = action.payload.tempRange;\n      } else {\n        draft.toolOptions.data.tempRange = null;\n      }\n\n      if (selectedTool !== draft.toolOptions.selectedTool) {\n        resetTool(draft, false);\n      }\n\n      draft.toolOptions.selectedTool = selectedTool;\n\n      if (options[selectedTool].hasOptionPanel) {\n        setSelectedOptionPanel(draft, selectedTool);\n      }\n\n      if (options[selectedTool].isFilter) {\n        setFilterChanges(draft, selectedTool);\n      }\n    } else {\n      resetTool(draft, false);\n    }\n    setMargin(draft);\n  }\n}\n\nfunction setSelectedOptionPanel(draft: Draft<State>, selectedOptionPanel) {\n  draft.toolOptions.selectedOptionPanel = selectedOptionPanel;\n}\n\nfunction setSpectrumsVerticalAlign(draft: Draft<State>) {\n  const align = ['stack', 'center'].includes(draft.verticalAlign.align)\n    ? 'bottom'\n    : 'center';\n  changeSpectrumVerticalAlignment(draft, { align });\n}\n\nfunction handleChangeSpectrumDisplayMode(draft: Draft<State>) {\n  const align = draft.verticalAlign.align === 'stack' ? 'bottom' : 'stack';\n  changeSpectrumVerticalAlignment(draft, { align });\n}\n\nfunction handleAddBaseLineZone(draft: Draft<State>, { from, to }) {\n  const scaleX = getXScale(draft);\n\n  let start = scaleX.invert(from);\n  const end = scaleX.invert(to);\n\n  let zone: any = [];\n  if (start > end) {\n    zone = [end, start];\n  } else {\n    zone = [start, end];\n  }\n\n  const zones = draft.toolOptions.data.baseLineZones.slice();\n  zones.push({\n    id: generateID(),\n    from: zone[0],\n    to: zone[1],\n  });\n  draft.toolOptions.data.baseLineZones = zones;\n}\n\nfunction handleDeleteBaseLineZone(draft: Draft<State>, id) {\n  const state = original(draft) as State;\n  draft.toolOptions.data.baseLineZones =\n    state.toolOptions.data.baseLineZones.baseLineZones.filter(\n      (zone) => zone.id !== id,\n    );\n}\n\nfunction handleToggleRealImaginaryVisibility(draft) {\n  if (draft.activeSpectrum != null) {\n    const { index } = draft.activeSpectrum;\n\n    draft.data[index].display.isRealSpectrumVisible =\n      !draft.data[index].display.isRealSpectrumVisible;\n\n    setDomain(draft);\n  }\n}\n\nfunction handleBrushEnd(draft: Draft<State>, action) {\n  const is2D = draft.displayerMode === DISPLAYER_MODE.DM_2D;\n  const xScale = getXScale(draft);\n\n  const yScale = is2D ? get2DYScale(draft) : getYScale(draft);\n\n  const startX = xScale.invert(action.startX);\n  const endX = xScale.invert(action.endX);\n  const startY = yScale.invert(action.startY);\n  const endY = yScale.invert(action.endY);\n  const domainX = startX > endX ? [endX, startX] : [startX, endX];\n  const domainY = startY > endY ? [endY, startY] : [startY, endY];\n  const brushHistory = zoomHistoryManager(draft.zoom.history, draft.activeTab);\n  if (draft.displayerMode === DISPLAYER_MODE.DM_2D) {\n    switch (action.trackID) {\n      case LAYOUT.CENTER_2D:\n        draft.xDomain = domainX;\n        draft.yDomain = domainY;\n        break;\n      case LAYOUT.TOP_1D:\n        draft.xDomain = domainX;\n        break;\n      case LAYOUT.LEFT_1D:\n        draft.yDomain = domainY;\n        break;\n      default:\n        break;\n    }\n    if (brushHistory) {\n      brushHistory.push({ xDomain: draft.xDomain, yDomain: draft.yDomain });\n    }\n  } else {\n    draft.xDomain = domainX;\n    if (brushHistory) {\n      brushHistory.push({ xDomain: domainX, yDomain: domainY });\n    }\n  }\n}\nfunction setVerticalIndicatorXPosition(draft: Draft<State>, position) {\n  if (draft.activeSpectrum?.id) {\n    const scaleX = getXScale(draft);\n    const value = scaleX.invert(position);\n    const datum = draft.data[draft.activeSpectrum.index] as Datum1D;\n    const index = xFindClosestIndex(datum.data.x, value);\n    draft.toolOptions.data.pivot = { value, index };\n  }\n}\n\nfunction getSpectrumID(draft: Draft<State>, index): string | null {\n  const spectrum = draft.tabActiveSpectrum[draft.activeTab.split(',')[index]];\n  return spectrum?.id ? spectrum.id : null;\n}\n\nfunction handleZoom(draft: Draft<State>, action) {\n  const { event, trackID, selectedTool } = action;\n  const {\n    activeSpectrum,\n    toolOptions: {\n      data: { showRangesIntegrals },\n    },\n    displayerMode,\n  } = draft;\n  if (displayerMode === DISPLAYER_MODE.DM_2D) {\n    const index =\n      trackID === LAYOUT.TOP_1D ? 0 : trackID === LAYOUT.LEFT_1D ? 1 : null;\n    if (index !== null) {\n      const id = getSpectrumID(draft, index);\n      if (id) {\n        const domain = draft.yDomains[id];\n        draft.yDomains[id] = wheelZoom(event, domain);\n      }\n    }\n  } else {\n    if (activeSpectrum?.id) {\n      if (\n        (showRangesIntegrals || selectedTool === options.integral.id) &&\n        event.shiftKey\n      ) {\n        const domain = draft.integralsYDomains[activeSpectrum?.id];\n        draft.integralsYDomains[activeSpectrum?.id] = wheelZoom(event, domain);\n      } else {\n        const domain = draft.yDomains[activeSpectrum?.id];\n        draft.yDomains[activeSpectrum?.id] = wheelZoom(event, domain);\n      }\n    } else {\n      const spectra = getSpectraByNucleus(\n        draft.activeTab,\n        draft.data,\n      ) as Datum1D[];\n      for (const spectrum of spectra) {\n        const domain = draft.yDomains[spectrum.id];\n        draft.yDomains[spectrum.id] = wheelZoom(event, domain);\n      }\n    }\n  }\n}\n\nfunction zoomOut(draft: Draft<State>, action) {\n  if (draft?.data.length > 0) {\n    const { zoomType, trackID } = action;\n    const zoomHistory = zoomHistoryManager(draft.zoom.history, draft.activeTab);\n\n    if (draft.displayerMode === DISPLAYER_MODE.DM_1D) {\n      switch (zoomType) {\n        case ZoomType.HORIZONTAL: {\n          draft.xDomain = draft.originDomain.xDomain;\n          zoomHistory.clear();\n          break;\n        }\n        case ZoomType.VERTICAL:\n          setZoom(draft, { scale: 0.8 });\n          break;\n        case ZoomType.STEP_HORIZONTAL: {\n          const zoomValue = zoomHistory.pop();\n          draft.xDomain = zoomValue\n            ? zoomValue.xDomain\n            : draft.originDomain.xDomain;\n          setZoom(draft, { scale: 0.8 });\n          break;\n        }\n        default: {\n          draft.xDomain = draft.originDomain.xDomain;\n          setZoom(draft, { scale: 0.8 });\n          break;\n        }\n      }\n    } else {\n      const { xDomain, yDomain, yDomains } = draft.originDomain;\n\n      if ([LAYOUT.TOP_1D, LAYOUT.LEFT_1D, LAYOUT.CENTER_2D].includes(trackID)) {\n        const zoomValue = zoomHistory.pop();\n        draft.xDomain = zoomValue ? zoomValue.xDomain : xDomain;\n        draft.yDomain = zoomValue ? zoomValue.yDomain : yDomain;\n      } else {\n        zoomHistory.clear();\n        draft.xDomain = xDomain;\n        draft.yDomain = yDomain;\n        draft.yDomains = yDomains;\n      }\n    }\n  }\n}\n\nfunction hasAcceptedSpectrum(draft: Draft<State>, index) {\n  const nucleuses = draft.activeTab.split(',');\n  const activeSpectrum = draft.tabActiveSpectrum[nucleuses[index]];\n  return (\n    activeSpectrum?.id &&\n    !(draft.data[activeSpectrum.index] as Datum1D).info.isFid\n  );\n}\n\nfunction setMargin(draft: Draft<State>) {\n  if (\n    draft.displayerMode === DISPLAYER_MODE.DM_2D &&\n    draft.toolOptions.selectedTool !== options.slicingTool.id\n  ) {\n    const top = hasAcceptedSpectrum(draft, 0)\n      ? MARGIN['2D'].top\n      : MARGIN['1D'].top;\n    const left = hasAcceptedSpectrum(draft, 1)\n      ? MARGIN['2D'].left\n      : MARGIN['1D'].left;\n    draft.margin = { ...MARGIN['2D'], top, left };\n  } else if (draft.toolOptions.selectedTool === options.slicingTool.id) {\n    draft.margin = MARGIN['2D'];\n  } else if (draft.displayerMode === DISPLAYER_MODE.DM_1D) {\n    draft.margin = MARGIN['1D'];\n  }\n}\n\nfunction Processing2DData(draft: Draft<State>, data) {\n  if (draft.displayerMode === DISPLAYER_MODE.DM_2D) {\n    let _data = {};\n    for (const datum of data[draft.activeTab]) {\n      _data[datum.id] = datum.processingController.drawContours();\n    }\n    draft.contours = _data;\n  }\n}\n\nfunction setDisplayerMode(draft: Draft<State>, data) {\n  draft.displayerMode =\n    data && (data as Datum1D[] | Datum2D[]).some((d) => d.info.dimension === 2)\n      ? DISPLAYER_MODE.DM_2D\n      : DISPLAYER_MODE.DM_1D;\n}\n\nfunction setTabActiveSpectrum(draft: Draft<State>, dataGroupByTab) {\n  let tabs2D: any[] = [];\n  const tabActiveSpectrum = {};\n\n  const tabkeys = Object.keys(dataGroupByTab).sort((a, b) =>\n    a.split(',').length > b.split(',').length ? -1 : 1,\n  );\n  for (let tabKey of tabkeys) {\n    const data = dataGroupByTab[tabKey];\n    const nucleusLength = tabKey.split(',').length;\n    if (nucleusLength === 2) {\n      tabs2D.push(tabKey);\n    }\n\n    if (data.length === 1) {\n      const index = draft.data.findIndex((datum) => datum.id === data[0].id);\n      tabActiveSpectrum[tabKey] = { id: data[0].id, index };\n    } else {\n      const tabSpectra = dataGroupByTab[tabKey];\n      const tabSpectraLength = tabSpectra.length;\n      if (tabSpectraLength >= 2) {\n        const FTSpectrums = tabSpectra.filter((d) => !d.info.isFid);\n        if (\n          FTSpectrums.length > 0 &&\n          (nucleusLength === 2 ||\n            (nucleusLength === 1 && tabSpectraLength !== FTSpectrums.length))\n        ) {\n          const index = draft.data.findIndex(\n            (datum) => datum.id === FTSpectrums[0].id,\n          );\n          tabActiveSpectrum[tabKey] = { id: FTSpectrums[0].id, index };\n        } else {\n          tabActiveSpectrum[tabKey] = null;\n        }\n      } else {\n        tabActiveSpectrum[tabKey] = null;\n      }\n    }\n  }\n  draft.tabActiveSpectrum = tabActiveSpectrum;\n  return tabs2D;\n}\n\nfunction setTab(draft: Draft<State>, dataGroupByTab, tab, refresh = false) {\n  const groupByTab = Object.keys(dataGroupByTab).sort((a, b) =>\n    a.split(',').length > b.split(',').length ? -1 : 1,\n  );\n\n  if (\n    JSON.stringify(groupByTab) !==\n      JSON.stringify(Object.keys(draft.tabActiveSpectrum)) ||\n    refresh\n  ) {\n    const tabs2D = setTabActiveSpectrum(draft, dataGroupByTab);\n\n    if (tabs2D.length > 0 && tab == null) {\n      draft.activeSpectrum = draft.tabActiveSpectrum[tabs2D[0]];\n      draft.activeTab = tabs2D[0];\n    } else {\n      draft.activeSpectrum = tab ? draft.tabActiveSpectrum[tab] : tab;\n      draft.activeTab = tab;\n    }\n  } else {\n    draft.activeTab = tab;\n    draft.activeSpectrum = draft.tabActiveSpectrum[tab];\n  }\n\n  setDisplayerMode(draft, dataGroupByTab[draft.activeTab]);\n  setMargin(draft);\n}\n\ninterface SetActiveTabOptions {\n  tab?: string | null;\n  refreshActiveTab?: boolean;\n  domainOptions?: SetDomainOptions;\n}\n\nfunction setActiveTab(draft: Draft<State>, options?: SetActiveTabOptions) {\n  const {\n    tab = null,\n    refreshActiveTab = false,\n    domainOptions = {},\n  } = options || {};\n\n  const groupByNucleus = GroupByInfoKey('nucleus');\n  const dataGroupByNucleus = groupByNucleus(draft.data);\n  const tabs = Object.keys(dataGroupByNucleus);\n  const currentTab = !tab || !tabs.includes(tab || '') ? tabs[0] : tab;\n  setTab(draft, dataGroupByNucleus, currentTab, refreshActiveTab);\n  resetTool(draft);\n\n  Processing2DData(draft, dataGroupByNucleus);\n\n  setDomain(draft, domainOptions);\n  setIntegralsYDomain(draft, dataGroupByNucleus[currentTab]);\n\n  const zoomHistory = zoomHistoryManager(draft.zoom.history, draft.activeTab);\n  const zoomValue = zoomHistory.getLast();\n  if (zoomValue) {\n    draft.xDomain = zoomValue.xDomain;\n    draft.yDomain = zoomValue.yDomain;\n  }\n  setMode(draft);\n}\n\nfunction handelSetActiveTab(draft: Draft<State>, tab) {\n  if (tab) {\n    setActiveTab(draft, { tab });\n  }\n}\n\nfunction levelChangeHandler(draft: Draft<State>, { deltaY, shiftKey }) {\n  try {\n    if (draft.activeSpectrum?.id) {\n      const { index, id } = draft.activeSpectrum;\n      const processingController = (draft.data[index] as Datum2D)\n        .processingController;\n      if (shiftKey) {\n        processingController.shiftWheel(deltaY);\n      } else {\n        processingController.wheel(deltaY);\n      }\n      const contours = Object.freeze(processingController.drawContours());\n      draft.contours[id] = contours;\n    }\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n}\n\nfunction setSpectraSameTopHandler(draft: Draft<State>) {\n  if (draft.displayerMode === DISPLAYER_MODE.DM_1D) {\n    draft.originDomain.shareYDomain = false;\n    setZoom(draft, { scale: 0.8 });\n  }\n}\nfunction resetSpectraScale(draft: Draft<State>) {\n  draft.originDomain.shareYDomain = true;\n  draft.yDomains = draft.originDomain.yDomains;\n  draft.yDomain = draft.originDomain.yDomain;\n  setZoom(draft, { scale: 0.8 });\n}\n\nexport {\n  resetSelectedTool,\n  setSelectedTool,\n  setSelectedOptionPanel,\n  setSpectrumsVerticalAlign,\n  handleChangeSpectrumDisplayMode,\n  handleAddBaseLineZone,\n  handleDeleteBaseLineZone,\n  handleToggleRealImaginaryVisibility,\n  handleBrushEnd,\n  setVerticalIndicatorXPosition,\n  handleZoom,\n  zoomOut,\n  handelSetActiveTab,\n  levelChangeHandler,\n  setActiveTab,\n  setTab,\n  setSpectraSameTopHandler,\n  resetSpectraScale,\n};\n","import { current, Draft } from 'immer';\n\nimport * as Filters from '../../../data/Filters';\nimport * as FiltersManager from '../../../data/FiltersManager';\nimport { updateXShift } from '../../../data/data1d/Spectrum1D';\nimport { apply as autoPhaseCorrection } from '../../../data/data1d/filter1d/autoPhaseCorrection';\nimport { apply as phaseCorrection } from '../../../data/data1d/filter1d/phaseCorrection';\nimport { updateShift as update2dShift } from '../../../data/data2d/Spectrum2D';\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport generateID from '../../../data/utilities/generateID';\nimport { getSpectraByNucleus } from '../../utility/getSpectraByNucleus';\nimport nucleusToString from '../../utility/nucleusToString';\nimport { ActiveSpectrum, State } from '../Reducer';\nimport zoomHistoryManager from '../helper/ZoomHistoryManager';\nimport getRange from '../helper/getRange';\n\nimport { setDomain, setMode } from './DomainActions';\nimport { changeSpectrumVerticalAlignment } from './PreferencesActions';\nimport { resetSelectedTool } from './ToolsActions';\n\nfunction shiftSpectrumAlongXAxis(draft: Draft<State>, shiftValue) {\n  //apply filter into the spectrum\n  if (draft.activeSpectrum?.id) {\n    const index = draft.activeSpectrum?.index;\n\n    FiltersManager.applyFilter(draft.data[index], [\n      { name: Filters.shiftX.id, options: shiftValue },\n    ]);\n    updateXShift(draft.data[index] as Datum1D);\n    resetSelectedTool(draft);\n    setDomain(draft);\n  }\n}\n\nfunction applyZeroFillingFilter(draft: Draft<State>, filterOptions) {\n  if (draft.activeSpectrum?.id) {\n    const index = draft.activeSpectrum.index;\n    const filters = [\n      { name: Filters.zeroFilling.id, options: filterOptions.zeroFillingSize },\n      {\n        name: Filters.lineBroadening.id,\n        options: filterOptions.lineBroadeningValue,\n      },\n    ];\n    FiltersManager.applyFilter(draft.data[index], filters);\n    resetSelectedTool(draft);\n    setDomain(draft);\n    setMode(draft);\n  }\n}\nfunction applyFFTFilter(draft: Draft<State>) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    //apply filter into the spectrum\n    FiltersManager.applyFilter(draft.data[index], [\n      { name: Filters.fft.id, options: {} },\n    ]);\n    resetSelectedTool(draft);\n    changeSpectrumVerticalAlignment(draft, { align: 'bottom' });\n\n    setDomain(draft, { yDomain: { isChanged: true } });\n    setMode(draft);\n  }\n}\nfunction applyManualPhaseCorrectionFilter(draft: Draft<State>, filterOptions) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    const { ph0, ph1 } = filterOptions;\n\n    FiltersManager.applyFilter(draft.data[index], [\n      { name: Filters.phaseCorrection.id, options: { ph0, ph1 } },\n    ]);\n\n    resetSelectedTool(draft);\n    draft.tempData = null;\n    setDomain(draft);\n  }\n}\nfunction applyAbsoluteFilter(draft: Draft<State>) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    FiltersManager.applyFilter(draft.data[index], [\n      { name: Filters.absolute.id, options: {} },\n    ]);\n\n    resetSelectedTool(draft);\n    draft.tempData = null;\n    setDomain(draft);\n  }\n}\n\nfunction applyAutoPhaseCorrectionFilter(draft: Draft<State>) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    const { ph0, ph1 } = autoPhaseCorrection(draft.data[index]);\n\n    FiltersManager.applyFilter(draft.data[index], [\n      { name: Filters.phaseCorrection.id, options: { ph0, ph1 } },\n    ]);\n\n    resetSelectedTool(draft);\n    draft.tempData = null;\n    setDomain(draft);\n  }\n}\n\nfunction calculateManualPhaseCorrection(draft: Draft<State>, filterOptions) {\n  if (draft.activeSpectrum) {\n    const { index } = draft.activeSpectrum;\n    const {\n      data: { x, re, im },\n      info,\n    } = draft.data[index] as Datum1D;\n\n    const { ph0, ph1 } = filterOptions;\n    let _data = { data: { x: x, re: re, im }, info };\n    phaseCorrection(_data, { ph0, ph1 });\n    const { im: newIm, re: newRe } = _data.data;\n    draft.tempData[index].data.im = newIm;\n    draft.tempData[index].data.re = newRe;\n  }\n}\n\nfunction enableFilter(draft: Draft<State>, filterID, checked) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    //apply filter into the spectrum\n    FiltersManager.enableFilter(draft.data[index], filterID, checked);\n\n    if (draft.data[index].info?.dimension === 1) {\n      updateXShift(draft.data[index] as Datum1D);\n    } else if (draft.data[index].info?.dimension === 2) {\n      update2dShift(draft.data[index] as Datum2D);\n    }\n\n    resetSelectedTool(draft);\n    setDomain(draft);\n    setMode(draft);\n\n    const zoomHistory = zoomHistoryManager(draft.zoom.history, draft.activeTab);\n    const zoomValue = zoomHistory.getLast();\n    if (zoomValue) {\n      draft.xDomain = zoomValue.xDomain;\n      draft.yDomain = zoomValue.yDomain;\n    }\n  }\n}\n\nfunction deleteFilter(draft: Draft<State>, actions) {\n  const filterID = actions.payload.id;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    //apply filter into the spectrum\n    FiltersManager.deleteFilter(draft.data[index], filterID);\n\n    if (draft.data[index].info?.dimension === 1) {\n      updateXShift(draft.data[index] as Datum1D);\n    } else if (draft.data[index].info?.dimension === 2) {\n      update2dShift(draft.data[index] as Datum2D);\n    }\n\n    resetSelectedTool(draft);\n    setDomain(draft);\n    setMode(draft);\n  }\n}\nfunction deleteSpectraFilter(draft: Draft<State>, actions) {\n  const filterType = actions.payload.filterType;\n\n  if (draft.activeTab) {\n    for (const datum of draft.data) {\n      if (nucleusToString(datum?.info?.nucleus) === draft.activeTab) {\n        const filtersResult =\n          datum.filters?.filter((filter) => filter.name === filterType) || [];\n\n        filtersResult.forEach((filter) => {\n          FiltersManager.deleteFilter(datum, filter.id);\n\n          if (datum.info?.dimension === 1) {\n            updateXShift(datum as Datum1D);\n          } else if (datum.info?.dimension === 2) {\n            update2dShift(datum as Datum2D);\n          }\n        });\n      }\n    }\n\n    resetSelectedTool(draft);\n    setDomain(draft);\n    setMode(draft);\n  }\n}\n\nfunction handleBaseLineCorrectionFilter(draft: Draft<State>, action) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    FiltersManager.applyFilter(draft.data[index], [\n      {\n        name: Filters.baselineCorrection.id,\n        options: {\n          zones: draft.toolOptions.data.baseLineZones,\n          ...action.options,\n        },\n      },\n    ]);\n\n    draft.toolOptions.data.baseLineZones = [];\n    const xDomainSnapshot = draft.xDomain.slice();\n\n    resetSelectedTool(draft);\n    setDomain(draft);\n    draft.xDomain = xDomainSnapshot;\n  }\n}\n\n/**\n * reset spectrum data for specific point of time (Filter)\n * @param {object} draft\n * @param {string} id Filter id\n * @param {object} options\n * @param {boolean=} options.resetTool\n * @param {boolean=} options.updateDomain\n * @param {boolean=} options.rollback\n */\nfunction resetSpectrumByFilter(\n  draft,\n  id: string | null = null,\n  options: {\n    rollback?: boolean;\n    resetTool?: boolean;\n    updateDomain?: boolean;\n    returnCurrentDatum?: boolean;\n    searchBy?: 'id' | 'name';\n  } = {},\n  activeSpectrum: ActiveSpectrum | null = null,\n) {\n  const {\n    updateDomain = true,\n    rollback = false,\n    searchBy = 'id',\n    returnCurrentDatum = false,\n  } = options;\n\n  let currentDatum: any = null;\n\n  const currentActiveSpectrum = activeSpectrum\n    ? activeSpectrum\n    : draft.activeSpectrum;\n\n  if (currentActiveSpectrum?.id) {\n    const index = currentActiveSpectrum.index;\n    const datum = draft.data[index] as Datum1D | Datum2D;\n\n    if (id && draft.toolOptions.data.activeFilterID !== id) {\n      const filterIndex = datum.filters.findIndex((f) => f[searchBy] === id);\n      let filters: any[] = [];\n      if (filterIndex !== -1) {\n        filters = datum.filters.slice(\n          0,\n          rollback ? filterIndex : filterIndex + 1,\n        );\n\n        if (filters.length > 1) {\n          draft.toolOptions.data.activeFilterID =\n            datum.filters[rollback ? filterIndex - 1 : filterIndex]?.id;\n        } else {\n          draft.toolOptions.data.activeFilterID = null;\n        }\n\n        FiltersManager.reapplyFilters(datum, filters);\n\n        if (returnCurrentDatum) {\n          const { name, value: options } = datum.filters[filterIndex];\n          const newDatum = current(draft).data[index];\n          if (newDatum.info?.dimension === 1) {\n            FiltersManager.applyFilter(newDatum, [{ name, options }]);\n          }\n\n          currentDatum = { datum: newDatum, index };\n        }\n      }\n    } else {\n      //close filter snapshot mode and replay all enabled filters\n      draft.toolOptions.data.activeFilterID = null;\n      FiltersManager.reapplyFilters(datum);\n    }\n\n    if (datum.info?.dimension === 1) {\n      updateXShift(datum as Datum1D);\n    } else if (datum.info?.dimension === 2) {\n      update2dShift(datum as Datum2D);\n    }\n\n    if (updateDomain) {\n      setDomain(draft);\n      setMode(draft);\n    }\n  }\n  if (returnCurrentDatum) {\n    return currentDatum;\n  }\n}\n\nfunction filterSnapshotHandler(draft: Draft<State>, action) {\n  resetSpectrumByFilter(draft, action.id);\n}\n\nfunction handleMultipleSpectraFilter(draft: Draft<State>, action) {\n  const spectra = getSpectraByNucleus(draft.activeTab, draft.data);\n\n  if (spectra && spectra.length > 0 && Array.isArray(action.payload)) {\n    const exclusions =\n      spectra[0].filters.find((f) => f.name === Filters.exclusionZones.id)\n        ?.value || [];\n\n    for (const spectrum of spectra) {\n      const filters = action.payload.map((filter) => {\n        if (filter.name === Filters.equallySpaced.id) {\n          return {\n            ...filter,\n            options: { ...filter.options, exclusions },\n          };\n        }\n        return filter;\n      });\n\n      FiltersManager.applyFilter(spectrum, filters);\n    }\n  }\n  setDomain(draft);\n}\n\nfunction handleAddExclusionZone(draft: Draft<State>, action) {\n  const { from: startX, to: endX } = action.payload;\n  const range = getRange(draft, { startX, endX });\n\n  let spectra: Datum1D[];\n\n  if (draft.activeSpectrum?.id) {\n    const index = draft.activeSpectrum?.index;\n    spectra = [draft.data[index] as Datum1D];\n  } else {\n    spectra = getSpectraByNucleus(draft.activeTab, draft.data) as Datum1D[];\n  }\n\n  for (const spectrum of spectra) {\n    FiltersManager.applyFilter(spectrum, [\n      {\n        name: Filters.exclusionZones.id,\n        options: [\n          {\n            id: generateID(),\n            from: range[0],\n            to: range[1],\n          },\n        ],\n      },\n    ]);\n  }\n\n  setDomain(draft);\n}\n\nfunction handleDeleteExclusionZone(draft: Draft<State>, action) {\n  const { id, spectrumID } = action.payload;\n  const spectrumIndex = draft.data.findIndex(\n    (spectrum) => spectrum.id === spectrumID,\n  );\n  const exclusionZonesFilter = draft.data[spectrumIndex].filters.find(\n    (filter) => filter.name === Filters.exclusionZones.id,\n  );\n  if (exclusionZonesFilter) {\n    if (exclusionZonesFilter.value.length === 1) {\n      FiltersManager.deleteFilter(\n        draft.data[spectrumIndex],\n        exclusionZonesFilter.id,\n      );\n    } else {\n      exclusionZonesFilter.value = exclusionZonesFilter.value.filter(\n        (zone) => zone.id !== id,\n      );\n      FiltersManager.reapplyFilters(draft.data[spectrumIndex]);\n    }\n  }\n}\n\nexport {\n  shiftSpectrumAlongXAxis,\n  applyZeroFillingFilter,\n  applyFFTFilter,\n  applyManualPhaseCorrectionFilter,\n  applyAutoPhaseCorrectionFilter,\n  applyAbsoluteFilter,\n  calculateManualPhaseCorrection,\n  handleMultipleSpectraFilter,\n  enableFilter,\n  deleteFilter,\n  deleteSpectraFilter,\n  handleBaseLineCorrectionFilter,\n  filterSnapshotHandler,\n  resetSpectrumByFilter,\n  handleAddExclusionZone,\n  handleDeleteExclusionZone,\n};\n","import { Draft } from 'immer';\n\nimport { State } from '../Reducer';\n\nfunction setIsOverDisplayer(draft: Draft<State>, actions) {\n  draft.overDisplayer = actions.payload;\n}\nexport { setIsOverDisplayer };\n","import { setDomain, getDomain } from './DomainActions';\n\nfunction handleHistoryUndo(draft) {\n  const { past, present, future } = draft.history;\n  const previous = past[past.length - 1];\n  const newPast = past.slice(0, past.length - 1);\n  const newfuture = [present, ...future];\n\n  const hasRedo = newfuture.length !== 0;\n  const hasUndo = past.length !== 0;\n\n  const domain = getDomain(draft.data);\n  const history = {\n    past: newPast,\n    present: previous,\n    future: newfuture,\n    hasRedo,\n    hasUndo,\n  };\n\n  draft.xDomain = domain.xDomain;\n  draft.yDomain = domain.yDomain;\n  draft.originDomain = domain;\n  draft.history = history;\n}\n\nfunction handleHistoryRedo(draft) {\n  const { history } = draft;\n  const newPresent = history.future.shift();\n  history.past.push(history.present);\n  history.present = newPresent;\n  history.hasUndo = true;\n  history.hasRedo = history.future.length > 0;\n\n  setDomain(draft.data);\n}\n\nfunction handleHistoryReset(draft, action) {\n  draft.history = {\n    past: [],\n    present: action,\n    future: [],\n    hasRedo: false,\n    hasUndo: false,\n  };\n}\n\nexport { handleHistoryUndo, handleHistoryRedo, handleHistoryReset };\n","import { Draft, original } from 'immer';\nimport { xyIntegration } from 'ml-spectra-processing';\n\nimport {\n  updateIntegralsRelativeValues,\n  changeIntegralsRelative,\n  getShiftX,\n} from '../../../data/data1d/Spectrum1D';\nimport {\n  initSumOptions,\n  setSumOptions,\n} from '../../../data/data1d/Spectrum1D/SumManager';\nimport { Datum1D } from '../../../data/types/data1d';\nimport generateID from '../../../data/utilities/generateID';\nimport { State } from '../Reducer';\nimport getRange from '../helper/getRange';\n\nimport { setIntegralsYDomain } from './DomainActions';\n\nfunction handleChangeIntegralSum(draft: Draft<State>, options) {\n  const { data, activeSpectrum, activeTab: nucleus } = draft;\n  if (activeSpectrum?.id) {\n    const { index } = activeSpectrum;\n    const datum = data[index] as Datum1D;\n    setSumOptions(datum.integrals, { options, nucleus });\n    updateIntegralsRelativeValues(datum, true);\n  }\n}\n\nfunction addIntegral(draft: Draft<State>, action) {\n  const { startX, endX } = action;\n  const { data, molecules, activeTab: nucleus, activeSpectrum } = draft;\n  const [from, to] = getRange(draft, { startX, endX });\n\n  if (activeSpectrum?.id) {\n    const datum = data[activeSpectrum.index] as Datum1D;\n\n    const { x, re } = datum.data;\n\n    const shiftX = getShiftX(datum);\n\n    const integral = {\n      id: generateID(),\n      originFrom: from - shiftX,\n      originTo: to - shiftX,\n      from,\n      to,\n      absolute: xyIntegration({ x, y: re }, { from, to, reverse: true }), // the real value\n      kind: 'signal',\n    };\n    datum.integrals.values.push(integral);\n    datum.integrals.options = initSumOptions(datum.integrals.options, {\n      molecules,\n      nucleus,\n    });\n    updateIntegralsRelativeValues(datum);\n    setIntegralsYDomain(draft, datum);\n  }\n}\n\nfunction deleteIntegral(draft: Draft<State>, action) {\n  if (draft.activeSpectrum) {\n    const state = original(draft) as State;\n    const { index } = draft.activeSpectrum;\n    const { integralID } = action;\n\n    const datum = draft.data[index] as Datum1D;\n\n    if (integralID == null) {\n      datum.integrals.values = [];\n    } else {\n      const peakIndex = (\n        state.data[index] as Datum1D\n      ).integrals.values.findIndex((p) => p.id === integralID);\n      datum.integrals.values.splice(peakIndex, 1);\n      updateIntegralsRelativeValues(datum);\n    }\n  }\n}\n\nfunction changeIntegral(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  const integral = action.payload.data;\n\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    const originalDatum = state.data[index] as Datum1D;\n    const datum = draft.data[index] as Datum1D;\n\n    const { x, re } = originalDatum.data;\n    const integralIndex = originalDatum.integrals.values.findIndex(\n      (i) => i.id === integral.id,\n    );\n\n    if (integralIndex !== -1) {\n      datum.integrals.values[integralIndex] = {\n        originFrom: integral.from,\n        originTo: integral.to,\n        ...integral,\n        absolute: xyIntegration(\n          { x, y: re },\n          { from: integral.from, to: integral.to, reverse: true },\n        ),\n      };\n      updateIntegralsRelativeValues(datum);\n    }\n  }\n}\n\nfunction handleChangeIntegralsRelativeValue(draft: Draft<State>, action) {\n  const data = action.payload.data;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    changeIntegralsRelative(draft.data[index] as Datum1D, data);\n  }\n}\n\nfunction handleChangeIntegralsSumFlag(draft, action) {\n  const flag = action.payload;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    draft.data[index].integrals.options.isSumConstant = !flag;\n  }\n}\n\nexport {\n  handleChangeIntegralSum,\n  addIntegral,\n  deleteIntegral,\n  changeIntegral,\n  handleChangeIntegralsRelativeValue,\n  handleChangeIntegralsSumFlag,\n};\n","import { Molecule as OCLMolecule } from 'openchemlib/full';\n\nimport { initMolecule, Molecule } from './Molecule';\n\nexport function fromJSON(mols: any[] = []) {\n  const molecules: Molecule[] = [];\n  for (const mol of mols) {\n    const molecule = OCLMolecule.fromMolfile(mol.molfile);\n    const fragments = molecule.getFragments();\n    for (let fragment of fragments) {\n      molecules.push(\n        initMolecule({\n          molfile: fragment.toMolfileV3(),\n        }),\n      );\n    }\n  }\n\n  return molecules;\n}\n\nexport function addMolfile(molecules, molfile) {\n  // try to parse molfile\n  // this will throw if the molecule can not be parsed !\n  const molecule = OCLMolecule.fromMolfile(molfile);\n  let fragments = molecule.getFragments();\n  for (let fragment of fragments) {\n    molecules.push(\n      initMolecule({\n        molfile: fragment.toMolfileV3(),\n      }),\n    );\n  }\n  // we will split if we have many fragments\n}\n\nexport function setMolfile(molecules, molfile, key) {\n  // try to parse molfile\n  // this will throw if the molecule can not be parsed !\n  let molecule = OCLMolecule.fromMolfile(molfile);\n  let fragments = molecule.getFragments();\n\n  if (fragments.length > 1) {\n    molecules = molecules.filter((m) => m.key !== key);\n\n    for (let fragment of fragments) {\n      molecules.push(\n        initMolecule({\n          molfile: fragment.toMolfileV3(),\n        }),\n      );\n    }\n  } else if (fragments.length === 1) {\n    const fragment = fragments[0];\n    const _mol = initMolecule({\n      molfile: fragment.toMolfileV3(),\n      key: key,\n    });\n    let molIndex = molecules.findIndex((m) => m.key === key);\n    molecules.splice(molIndex, 1, _mol);\n  }\n\n  // we will split if we have many fragments\n}\n","export type ActionType<Action, Payload = void> = Payload extends void\n  ? { type: Action }\n  : { type: Action; payload: Payload };\n\nexport const INITIATE = 'INITIATE';\nexport const SAVE_DATA_AS_JSON = 'SAVE_DATA_AS_JSON';\nexport const LOAD_JSON_FILE = 'LOAD_JSON_FILE';\nexport const LOAD_JCAMP_FILE = 'LOAD_JCAMP_FILE';\nexport const LOAD_NMREDATA_FILE = 'LOAD_NMREDATA_FILE';\nexport const LOAD_MOL_FILE = 'LOAD_MOL_FILE';\nexport const LOAD_ZIP_FILE = 'LOAD_ZIP_FILE';\nexport const LOAD_JDF_FILE = 'LOAD_JDF_FILE';\nexport const ADD_PEAK = 'ADD_PEAK';\nexport const ADD_PEAKS = 'ADD_PEAKS';\nexport const DELETE_PEAK_NOTATION = 'DELETE_PEAK_NOTATION';\nexport const SHIFT_SPECTRUM = 'SHIFT_SPECTRUM';\nexport const SET_X_DOMAIN = 'SET_X_DOMAIN';\nexport const SET_Y_DOMAIN = 'SET_Y_DOMAIN';\nexport const SET_ORIGINAL_DOMAIN = 'SET_ORIGINAL_DOMAIN';\nexport const SET_WIDTH = 'SET_WIDTH';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const SET_SELECTED_TOOL = 'SET_SELECTED_TOOL';\nexport const SET_SELECTED_FILTER = 'SET_SELECTED_FILTER';\nexport const CHANGE_SPECTRUM_SETTING = 'CHANGE_SPECTRUM_SETTING';\nexport const CHANGE_SPECTRUM_TYPE = 'CHANGE_SPECTRUM_TYPE';\nexport const FULL_ZOOM_OUT = 'FULL_ZOOM_OUT';\nexport const CHANGE_VISIBILITY = 'CHANGE_VISIBILITY';\nexport const CHANGE_PEAKS_MARKERS_VISIBILITY =\n  'CHANGE_PEAKS_MARKERS_VISIBILITY';\nexport const CHANGE_ACTIVE_SPECTRUM = 'CHANGE_ACTIVE_SPECTRUM';\nexport const CHANGE_SPECTRUM_COLOR = 'CHANGE_SPECTRUM_COLOR';\nexport const ADD_INTEGRAL = 'ADD_INTEGRAL';\nexport const DELETE_INTEGRAL = 'DELETE_INTEGRAL';\nexport const TOGGLE_REAL_IMAGINARY_VISIBILITY =\n  'TOGGLE_REAL_IMAGINARY_VISIBILITY';\nexport const SET_ZOOM = 'SET_ZOOM';\nexport const ADD_MOLECULE = 'ADD_MOLECULE';\nexport const SET_MOLECULE = 'SET_MOLECULE';\nexport const DELETE_MOLECULE = 'DELETE_MOLECULE';\nexport const SET_CORRELATION = 'SET_CORRELATION';\nexport const SET_CORRELATIONS = 'SET_CORRELATIONS';\nexport const DELETE_CORRELATION = 'DELETE_CORRELATION';\nexport const SET_CORRELATIONS_MF = 'SET_CORRELATIONS_MF';\nexport const SET_CORRELATIONS_TOLERANCE = 'SET_CORRELATIONS_TOLERANCE';\nexport const DELETE_SPECTRA = 'DELETE_SPECTRA';\nexport const CHANGE_SPECTRUM_DISPLAY_VIEW_MODE =\n  'CHANGE_SPECTRUM_DISPLAY_VIEW_MODE';\nexport const RESIZE_INTEGRAL = 'RESIZE_INTEGRAL';\nexport const BRUSH_END = 'BRUSH_END';\nexport const RESET_DOMAIN = 'RESET_X_DOMAIN';\nexport const ENABLE_FILTER = 'ENABLE_FILTER';\nexport const DELETE_FILTER = 'DELETE_FILTER';\nexport const DELETE_SPECTRA_FILTER = 'DELETE_SPECTRA_FILTER';\nexport const APPLY_ZERO_FILLING_FILTER = 'APPLY_ZERO_FILLING_FILTER';\nexport const APPLY_FFT_FILTER = 'APPLY_FFT_FILTER';\nexport const CALCULATE_MANUAL_PHASE_CORRECTION_FILTER =\n  'CALCULATE_MANUAL_PHASE_CORRECTION_FILTER';\nexport const APPLY_MANUAL_PHASE_CORRECTION_FILTER =\n  'APPLY_MANUAL_PHASE_CORRECTION_FILTER';\nexport const APPLY_AUTO_PHASE_CORRECTION_FILTER =\n  'APPLY_AUTO_PHASE_CORRECTION_FILTER';\nexport const APPLY_ABSOLUTE_FILTER = 'APPLY_ABSOLUTE_FILTER';\nexport const SET_VERTICAL_INDICATOR_X_POSITION =\n  'SET_VERTICAL_INDICATOR_X_POSITION';\nexport const AUTO_PEAK_PICKING = 'AUTO_PEAK_PICKING';\nexport const AUTO_RANGES_DETECTION = 'AUTO_RANGES_DETECTION';\nexport const AUTO_ZONES_DETECTION = 'AUTO_ZONES_DETECTION';\nexport const DELETE_RANGE = 'DELETE_RANGE';\nexport const DELETE_1D_SIGNAL = 'DELETE_1D_SIGNAL';\nexport const SET_SELECTED_OPTIONS_PANEL = 'SET_SELECTED_OPTIONS_PANEL';\nexport const SET_LOADING_FLAG = 'SET_LOADING_FLAG';\nexport const RESET_SELECTED_TOOL = 'RESET_SELECTED_TOOL';\nexport const SET_SPECTRUMS_VERTICAL_ALIGN = 'SET_SPECTRUMS_VERTICAL_AlIGN';\nexport const SAVE_AS_SVG = 'SAVE_AS_SVG';\nexport const CHANGE_INTEGRAL_DATA = 'CHANGE_INTEGRAL_DATA';\nexport const SET_ACTIVE_TAB = 'SET_ACTIVE_TAB';\nexport const CHANGE_INTEGRAL_SUM = 'CHANGE_INTEGRAL_SUM';\nexport const ADD_BASE_LINE_ZONE = 'ADD_BASE_LINE_ZONE';\nexport const DELETE_BASE_LINE_ZONE = 'DELETE_BASE_LINE_ZONE';\nexport const APPLY_BASE_LINE_CORRECTION_FILTER =\n  'APPLY_BASE_LINE_CORRECTION_FILTER';\nexport const SET_KEY_PREFERENCES = 'SET_KEY_PREFERENCES';\nexport const APPLY_KEY_PREFERENCES = 'APPLY_KEY_PREFERENCES';\nexport const RESIZE_RANGE = 'RESIZE_RANGE';\nexport const CHANGE_RANGE_SUM = 'CHANGE_RANGE_SUM';\nexport const ADD_RANGE = 'ADD_RANGE';\nexport const SET_2D_LEVEL = 'SET_2D_LEVEL';\nexport const ADD_2D_ZONE = 'ADD_2D_ZONE';\nexport const DELETE_2D_ZONE = 'DELETE_2D_ZONE';\nexport const DELETE_2D_SIGNAL = 'DELETE_2D_SIGNAL';\nexport const SET_2D_SIGNAL_PATH_LENGTH = 'SET_2D_SIGNAL_PATH_LENGTH';\nexport const ADD_MISSING_PROJECTION = 'ADD_MISSING_PROJECTION';\nexport const SET_FILTER_SNAPSHOT = 'SET_FILTER_SNAPSHOT';\nexport const CHANGE_RANGE_RELATIVE = 'CHANGE_RANGE_RELATIVE';\nexport const CHANGE_RANGE_SIGNAL_VALUE = 'CHANGE_RANGE_SIGNAL_VALUE';\nexport const CHANGE_RANGE_SIGNAL_KIND = 'CHANGE_RANGE_SIGNAL_KIND';\nexport const SAVE_EDITED_RANGE = 'SAVE_EDITED_RANGE';\nexport const UNLINK_RANGE = 'UNLINK_RANGE';\nexport const SET_DIAID_RANGE = 'SET_DIAID_RANGE';\nexport const CHANGE_INTEGRAL_RELATIVE = 'CHANGE_INTEGRAL_RELATIVE';\nexport const ANALYZE_SPECTRA = 'ANALYZE_SPECTRA';\nexport const DELETE_ANALYZE_SPECTRA_RANGE = 'DELETE_ANALYZE_SPECTRA_RANGE';\nexport const RESIZE_ANALYZE_SPECTRA_RANGE = 'RESIZE_ANALYZE_SPECTRA_RANGE';\nexport const SET_ANALYZE_SPECTRA_COLUMNS = 'SET_ANALYZE_SPECTRA_COLUMNS';\nexport const FILTER_SPECTRA_COLUMN = 'FILTER_SPECTRA_COLUMN';\nexport const ALIGN_SPECTRA = 'ALIGN_SPECTRA';\nexport const CHANGE_ZONE_SIGNAL_VALUE = 'CHANGE_ZONE_SIGNAL_VALUE';\nexport const CHANGE_ZONE_SIGNAL_KIND = 'CHANGE_ZONE_SIGNAL_KIND';\nexport const SAVE_EDITED_ZONE = 'SAVE_EDITED_ZONE';\nexport const UNLINK_ZONE = 'UNLINK_ZONE';\nexport const SET_DIAID_ZONE = 'SET_DIAID_ZONE';\nexport const PREDICT_SPECTRA = 'PREDICT_SPECTRA';\nexport const SET_SPECTRA_SAME_TOP = 'SET_SPECTRA_SAME_TOP';\nexport const RESET_SPECTRA_SCALE = 'RESET_SPECTRA_SCALE';\nexport const SET_MOUSE_OVER_DISPLAYER = 'SET_MOUSE_OVER_DISPLAYER';\nexport const APPLY_MULTIPLE_SPECTRA_FILTER = 'APPLY_MULTIPLE_SPECTRA_FILTER';\nexport const ADD_EXCLUSION_ZONE = 'ADD_EXCLUSION_ZONE';\nexport const DELETE_EXCLUSION_ZONE = 'DELETE_EXCLUSION_ZONE';\nexport const CHANGE_RANGES_SUM_FLAG = 'CHANGE_RANGES_SUM_FLAG';\nexport const CHANGE_INTEGRALS_SUM_FLAG = 'CHANGE_INTEGRALS_SUM_FLAG';\nexport const CHANGE_ZONES_NOISE_FACTOR = 'CHANGE_ZONES_NOISE_FACTOR';\nexport const CHANGE_TEMP_RANGE = 'CHANGE_TEMP_RANGE';\nexport const SHOW_MULTIPLICTY_TREES = 'SHOW_MULTIPLICTY_TREES';\nexport const SHOW_RANGES_INTEGRALS = 'SHOW_RANGES_INTEGRALS';\nexport const AUTO_RANGES_SPECTRA_PICKING = 'AUTO_RANGES_SPECTRA_PICKING';\nexport const AUTO_ZONES_SPECTRA_PICKING = 'AUTO_ZONES_SPECTRA_PICKING';\nexport const GENERATE_SPECTRUM_FROM_PUBLICATION_STRING =\n  'GENERATE_SPECTRUM_FROM_PUBLICATION_STRING';\nexport const RESURRECTING_SPECTRUM_FROM_RANGES =\n  'RESURRECTING_SPECTRUM_FROM_RANGES';\nexport const SHOW_J_GRAPH = 'SHOW_J_GRAPH';\n","import { Draft } from 'immer';\nimport { buildCorrelationData, CorrelationData } from 'nmr-correlation';\n\nimport { addJcamps, addJDFs } from '../../../data/SpectraManager';\nimport * as MoleculeManager from '../../../data/molecules/MoleculeManager';\nimport { UsedColors } from '../../../types/UsedColors';\nimport { Molecules, NMRiumPreferences, Spectra } from '../../NMRium';\nimport { DefaultTolerance } from '../../panels/SummaryPanel/CorrelationTable/Constants';\nimport { getInitialState, State } from '../Reducer';\nimport { LOAD_JSON_FILE, LOAD_NMREDATA_FILE } from '../types/Types';\n\nimport { changeSpectrumVerticalAlignment } from './PreferencesActions';\nimport { setActiveTab } from './ToolsActions';\n\nfunction setIsLoading(draft: Draft<State>, isLoading: boolean) {\n  draft.isLoading = isLoading;\n}\n\nfunction setColors(draft: Draft<State>, colors: UsedColors) {\n  draft.usedColors['1d'] = draft.usedColors['1d'].concat(colors['1d']);\n  draft.usedColors['2d'] = draft.usedColors['2d'].concat(colors['2d']);\n}\n\nfunction setData(\n  draft: Draft<State>,\n  data: {\n    spectra: Spectra;\n    molecules: Molecules;\n    preferences: NMRiumPreferences;\n    correlations: CorrelationData;\n    usedColors: UsedColors;\n  },\n) {\n  const { spectra, molecules, correlations, usedColors } = data || {\n    spectra: [],\n    molecules: [],\n    correlations: {},\n    multipleAnalysis: {},\n    exclusionZones: [],\n  };\n  setColors(draft, usedColors);\n  draft.data = spectra;\n  draft.molecules = MoleculeManager.fromJSON(molecules);\n\n  if (!correlations || Object.keys(correlations).length === 0) {\n    draft.correlations = buildCorrelationData([], {\n      tolerance: DefaultTolerance,\n    });\n  } else {\n    // in case of older NMRium data are imported, convert hybridization string to number array\n    // @TODO remove following command to overwrite correlations at some point in future\n    draft.correlations =\n      convertHybridizationStringValuesInCorrelations(correlations);\n\n    // draft.correlations = correlations // original command without overwriting\n  }\n}\n\nfunction convertHybridizationStringValuesInCorrelations(\n  correlations: CorrelationData,\n): CorrelationData {\n  return {\n    ...correlations,\n    values: correlations.values.map((correlation) => {\n      if (typeof correlation.hybridization === 'string') {\n        let values: number[] = [];\n        if (correlation.hybridization.length > 0) {\n          const hybridizationString: string =\n            correlation.hybridization.replaceAll('SP', '');\n          const value = Number(hybridizationString);\n          values.push(value);\n        }\n        correlation.hybridization = values;\n      }\n      return correlation;\n    }),\n  };\n}\n\nfunction setPreferences(draft: Draft<State>, data) {\n  const emptyPreferences = {\n    verticalAlign: null,\n  };\n\n  const { verticalAlign = null } = data || emptyPreferences;\n\n  if (verticalAlign) {\n    changeSpectrumVerticalAlignment(draft, {\n      align: verticalAlign,\n    });\n  } else {\n    changeSpectrumVerticalAlignment(draft, { align: 'auto-check' });\n  }\n}\n\nfunction initiate(draft: Draft<State>, action) {\n  setData(draft, action.payload);\n  const preferences = action.payload?.preferences || {};\n  setActiveTab(draft, { tab: preferences?.activeTab || '' });\n  setPreferences(draft, action.payload);\n  draft.isLoading = false;\n}\n\nfunction loadJDFFile(draft: Draft<State>, actions) {\n  const { files } = actions;\n  const spectra = addJDFs(files, draft.usedColors);\n  for (const spectrum of spectra) {\n    draft.data.push(spectrum);\n  }\n\n  setActiveTab(draft);\n\n  draft.isLoading = false;\n}\n\nfunction loadJcampFile(draft: Draft<State>, actions) {\n  const { files } = actions;\n  const spectra = addJcamps(files, draft.usedColors);\n  for (const spectrum of spectra) {\n    draft.data.push(spectrum);\n  }\n  setActiveTab(draft);\n  changeSpectrumVerticalAlignment(draft, { align: 'auto-check' });\n\n  draft.isLoading = false;\n}\n\nfunction handleLoadJsonFile(draft: Draft<State>, action) {\n  const state = getInitialState();\n\n  setData(state, action.payload);\n  const preferences = action.payload?.preferences || {};\n  setActiveTab(state, { tab: preferences?.activeTab || '' });\n  setPreferences(state, preferences);\n\n  state.width = draft.width;\n  state.height = draft.height;\n  state.isLoading = false;\n  state.actionType = LOAD_JSON_FILE;\n  return state;\n}\n\nfunction handleLoadMOLFile(draft: Draft<State>, actions) {\n  const { files } = actions;\n  for (let file of files) {\n    MoleculeManager.addMolfile(draft.molecules, file.binary.toString());\n  }\n  draft.isLoading = false;\n}\n\nfunction handleLoadZIPFile(draft: Draft<State>, action) {\n  const { data, usedColors } = action.payload;\n  draft.data = draft.data.concat(data);\n  setColors(draft, usedColors);\n\n  setActiveTab(draft);\n  changeSpectrumVerticalAlignment(draft, { align: 'auto-check' });\n\n  draft.isLoading = false;\n}\n\nfunction handleLoadNmredata(draft: Draft<State>, action) {\n  const state = getInitialState();\n\n  setData(state, action.payload);\n  setActiveTab(state);\n  changeSpectrumVerticalAlignment(state, { align: 'auto-check' });\n  state.isLoading = false;\n  state.width = draft.width;\n  state.height = draft.height;\n  state.actionType = LOAD_NMREDATA_FILE;\n\n  return state;\n}\n\nexport {\n  setIsLoading,\n  initiate,\n  loadJcampFile,\n  loadJDFFile,\n  handleLoadJsonFile,\n  handleLoadNmredata,\n  handleLoadMOLFile,\n  handleLoadZIPFile,\n};\n","import { Draft } from 'immer';\n\nimport { generateSpectra } from '../../../data/PredictionManager';\nimport { changeSpectraRelativeSum } from '../../../data/data1d/Spectrum1D/SumManager';\nimport * as MoleculeManager from '../../../data/molecules/MoleculeManager';\nimport getColor from '../../../data/utilities/getColor';\nimport nucleusToString from '../../utility/nucleusToString';\nimport { State } from '../Reducer';\nimport { DISPLAYER_MODE } from '../core/Constants';\n\nimport { handleUnlinkRange } from './RangesActions';\nimport { setActiveTab } from './ToolsActions';\nimport { handleUnlinkZone } from './ZonesActions';\n\nfunction addMoleculeHandler(draft: Draft<State>, molfile) {\n  const isEmpty = draft.molecules.length === 0;\n  MoleculeManager.addMolfile(draft.molecules, molfile);\n\n  /**\n   *  if it's the first creation of a molecule after the molecules list was empty,\n   * set the relative sum for ranges and integrals base on the first molecule\n   */\n  const molecule = draft.molecules[0] || null;\n\n  if (isEmpty && molecule) {\n    changeSpectraRelativeSum(draft, molecule.key, molecule);\n  }\n}\n\nfunction setMoleculeHandler(draft: Draft<State>, molfile, key) {\n  MoleculeManager.setMolfile(draft.molecules, molfile, key);\n\n  /**\n   * update all spectra that its sum was based on this molecule with the new molecule\n   */\n  const index = draft.molecules.findIndex((molecule) => molecule.key === key);\n\n  changeSpectraRelativeSum(\n    draft,\n    key,\n    index !== -1 ? draft.molecules[index] : draft.molecules[0] || null,\n  );\n}\n\nfunction removeAssignments(draft: Draft<State>, assignmentData: any) {\n  if (draft.displayerMode === DISPLAYER_MODE.DM_1D) {\n    handleUnlinkRange(draft, { payload: { assignmentData, rangeData: null } });\n  }\n  if (draft.displayerMode === DISPLAYER_MODE.DM_2D) {\n    handleUnlinkZone(draft, { payload: { assignmentData, zoneData: null } });\n  }\n}\n\nfunction deleteMoleculeHandler(draft: Draft<State>, action) {\n  const { key, assignmentData } = action.payload;\n  // remove Assignments links of the active spectrum\n  removeAssignments(draft, assignmentData);\n\n  const moleculeIndex = draft.molecules.findIndex(\n    (molecule) => molecule.key === key,\n  );\n  draft.molecules.splice(moleculeIndex, 1);\n  /**\n   * update all spectra that its sum was based on this molecule with the first molecule\n   * from molecules list and if no remains molecules it sum will be 100\n   */\n  changeSpectraRelativeSum(draft, key, draft.molecules[0] || null);\n}\n\nfunction predictSpectraFromMoleculeHandler(draft: Draft<State>, action) {\n  const { data, options } = action.payload;\n  if (!data) {\n    draft.isLoading = false;\n  } else {\n    const color = getColor(false, draft.usedColors['1d']);\n    for (const spectrum of generateSpectra(data, options, color)) {\n      draft.data.push(spectrum);\n      draft.tabActiveSpectrum[nucleusToString(spectrum.info.nucleus)] = {\n        id: spectrum.id,\n        index: draft.data.length - 1,\n      };\n    }\n    draft.usedColors['1d'].push(color);\n  }\n  draft.toolOptions.data.predictionIndex++;\n  setActiveTab(draft);\n  draft.isLoading = false;\n}\n\nexport {\n  addMoleculeHandler,\n  setMoleculeHandler,\n  deleteMoleculeHandler,\n  predictSpectraFromMoleculeHandler,\n};\n","import { Draft, original } from 'immer';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\n\nimport {\n  getShiftX,\n  lookupPeak,\n  autoPeakPicking,\n} from '../../../data/data1d/Spectrum1D';\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Data1D } from '../../../data/types/data1d/Data1D';\nimport { Peak } from '../../../data/types/data1d/Peak';\nimport generateID from '../../../data/utilities/generateID';\nimport { options } from '../../toolbar/ToolTypes';\nimport { State } from '../Reducer';\nimport getRange from '../helper/getRange';\n\nfunction addPeak(draft: Draft<State>, mouseCoordinates) {\n  const state = original(draft) as State;\n  if (draft.activeSpectrum?.id && state) {\n    const { index } = draft.activeSpectrum;\n    const xShift = 10;\n    const startX = mouseCoordinates.x - xShift;\n    const endX = mouseCoordinates.x + xShift;\n    const [from, to] = getRange(draft, { startX, endX });\n    const candidatePeak = lookupPeak(state.data[index].data as Data1D, {\n      from,\n      to,\n    });\n\n    const shiftX = getShiftX(draft.data[index] as Datum1D);\n\n    if (candidatePeak) {\n      const peak: Peak = {\n        id: generateID(),\n        originalX: candidatePeak.x - shiftX,\n        x: candidatePeak.x,\n        y: candidatePeak.y,\n        width: 0,\n      };\n      (draft.data[index] as Datum1D).peaks.values.push(peak);\n    }\n  }\n}\n\nfunction addPeaks(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n\n  if (draft.activeSpectrum) {\n    const { index } = draft.activeSpectrum;\n    const datumOriginal = state.data[index] as Datum1D;\n\n    const { startX, endX } = action;\n    const [from, to] = getRange(draft, { startX, endX });\n\n    if (from !== to) {\n      const peak = lookupPeak(datumOriginal.data, { from, to });\n\n      const shiftX = getShiftX(draft.data[index] as Datum1D);\n\n      if (peak && !datumOriginal.peaks.values.some((p) => p.x === peak.x)) {\n        const newPeak: Peak = {\n          id: generateID(),\n          originalX: peak.x - shiftX,\n          x: peak.x,\n          y: peak.y,\n          width: 0,\n        };\n        (draft.data[index] as Datum1D).peaks.values.push(newPeak);\n      }\n    }\n  }\n}\n\nfunction deletePeak(draft: Draft<State>, peakData) {\n  if (draft.activeSpectrum) {\n    const { index } = draft.activeSpectrum;\n    const state = original(draft) as State;\n\n    if (peakData == null) {\n      (draft.data[index] as Datum1D).peaks.values = [];\n    } else {\n      const peakIndex = (state.data[index] as Datum1D).peaks.values.findIndex(\n        (p) => p.id === peakData.id,\n      );\n      (draft.data[index] as Datum1D).peaks.values.splice(peakIndex, 1);\n    }\n  }\n}\n\nfunction handleAutoPeakPicking(draft: Draft<State>, autOptions) {\n  if (draft.activeSpectrum?.id) {\n    draft.toolOptions.selectedTool = options.zoom.id;\n    draft.toolOptions.selectedOptionPanel = null;\n    const { index } = draft.activeSpectrum;\n    const datum = draft.data[index] as Datum1D;\n\n    const [from, to] = draft.xDomain;\n    const windowFromIndex = xFindClosestIndex(datum.data.x, from);\n    const windowToIndex = xFindClosestIndex(datum.data.x, to);\n\n    const peaks = autoPeakPicking(draft.data[index] as Datum1D, {\n      ...autOptions,\n      windowFromIndex,\n      windowToIndex,\n    });\n\n    datum.peaks.values = datum.peaks.values.concat(peaks);\n  }\n}\n\nexport { addPeak, addPeaks, deletePeak, handleAutoPeakPicking };\n","export default function generateChar(index: number): string {\n  const aPotions = 'a'.charCodeAt(0);\n  const zPostion = 'z'.charCodeAt(0);\n  const len = zPostion - aPotions + 1;\n\n  let chartResult = '';\n  while (index >= 0) {\n    chartResult = String.fromCharCode((index % len) + aPotions) + chartResult;\n    index = Math.floor(index / len) - 1;\n  }\n  return chartResult;\n}\n","import lodashGet from 'lodash/get';\n\nimport { Spectra } from '../../component/NMRium';\nimport { RangeDetectionResult } from '../types/data1d';\nimport generateChar from '../utilities/generateChar';\n\nimport { detectRange, isSpectrum1D } from './Spectrum1D';\n\nexport enum COLUMNS_TYPES {\n  NORMAL = 'NORMAL',\n  FORMULA = 'FORMULA',\n}\nexport enum COLUMNS_VALUES_KEYS {\n  RELATIVE = 'relative',\n  ABSOLUTE = 'absolute',\n  MIN = 'min',\n  MAX = 'max',\n}\n\nexport type ColumnType = keyof typeof COLUMNS_TYPES;\n\ninterface Column {\n  type: ColumnType;\n  valueKey: COLUMNS_VALUES_KEYS;\n  from: number;\n  to: number;\n  formula?: string;\n  index: number;\n}\n\ntype Columns = Record<string, Column>;\n\ninterface AnalysisOptions {\n  sum: number;\n  code: string | null;\n  columns: Columns;\n  columnIndex: number;\n}\n\ninterface AnalysisRow extends RangeDetectionResult {\n  SID: string;\n  colKey?: string;\n  value?: number;\n}\n\ninterface SpectraAnalysisData {\n  options: AnalysisOptions;\n  values: Record<string, AnalysisRow>;\n}\n\nexport type SpectraAnalysis = Record<string, SpectraAnalysisData>;\n\nfunction addColumnKey(\n  spectraAnalysis: SpectraAnalysis,\n  nucleus: string,\n  columnProps: Column,\n  columnKey: string,\n) {\n  const key = columnKey\n    ? columnKey\n    : generateChar(spectraAnalysis[nucleus].options.columnIndex).toUpperCase();\n  spectraAnalysis[nucleus].options.columns[key] = columnProps;\n  spectraAnalysis[nucleus].options.columnIndex++;\n  return key;\n}\n\nexport function getColumns(spectraAnalysis: SpectraAnalysis, nucleus: string) {\n  return spectraAnalysis[nucleus].options.columns;\n}\n\nexport function getValue(colKey: string, columns: Columns, data) {\n  return data[columns[colKey].valueKey];\n}\n\nexport function getSpectraAnalysis(\n  spectra: Spectra,\n  options,\n): { values: Array<AnalysisRow>; sum: number } {\n  const { from, to, nucleus } = options;\n  return spectra.reduce<{ values: Array<AnalysisRow>; sum: number }>(\n    (acc, datum) => {\n      if (\n        isSpectrum1D(datum) &&\n        datum.info.nucleus === nucleus &&\n        !datum.info.isFid\n      ) {\n        const range = detectRange(datum, { from, to });\n        acc.sum += range.absolute;\n        acc.values.push({ SID: datum.id, ...range });\n      }\n      return acc;\n    },\n    { values: [], sum: 0 },\n  );\n}\n\nfunction init(spectraAnalysis: SpectraAnalysis, nucleus: string) {\n  if (spectraAnalysis[nucleus] === undefined) {\n    spectraAnalysis[nucleus] = {\n      options: {\n        sum: 100,\n        code: null,\n        columns: {},\n        columnIndex: 0,\n      },\n      values: {},\n    };\n  }\n}\n\nexport function changeColumnValueKey(\n  spectraAnalysis: SpectraAnalysis,\n  nucleus: string,\n  columnKey: string,\n  newKey: COLUMNS_VALUES_KEYS,\n) {\n  spectraAnalysis[nucleus].options.columns[columnKey].valueKey = newKey;\n\n  spectraAnalysis[nucleus].values = refreshCalculation(\n    spectraAnalysis,\n    nucleus,\n  );\n}\n\nexport function setColumn(\n  spectraAnalysis: SpectraAnalysis,\n  nucleus: string,\n  { columns: inputColumns, code },\n) {\n  init(spectraAnalysis, nucleus);\n  spectraAnalysis[nucleus].options.code = code;\n  spectraAnalysis[nucleus].options.columns = Object.values(\n    inputColumns,\n  ).reduce<any>((acc, value: any) => {\n    const data = { ...value };\n    delete data.tempKey;\n    acc[value.tempKey] = data;\n    return acc;\n  }, {});\n\n  const { columns: newColumns } = spectraAnalysis[nucleus].options;\n\n  let data = Object.entries(spectraAnalysis[nucleus].values).reduce<any>(\n    (outerAcc, [spectraKey, spectra]) => {\n      outerAcc[spectraKey] = Object.keys(inputColumns).reduce((acc, key) => {\n        const newKey = inputColumns[key].tempKey;\n        if (spectra[key]) {\n          acc[newKey] = spectra[key];\n        }\n        return acc;\n      }, {});\n      return outerAcc;\n    },\n    {},\n  );\n\n  data = Object.entries(data).reduce((acc, spectra: any) => {\n    acc[spectra[0]] = Object.keys(newColumns).reduce((acc, key) => {\n      const isFormula = newColumns[key].type === COLUMNS_TYPES.FORMULA;\n      acc[key] = isFormula\n        ? {\n            colKey: key,\n            value: calculate(\n              newColumns,\n              data[spectra[0]],\n              newColumns[key].formula,\n            ),\n          }\n        : { ...spectra[1][key], colKey: key };\n\n      return acc;\n    }, {});\n\n    return acc;\n  }, {});\n  spectraAnalysis[nucleus].values = data;\n}\n\nfunction refreshByRow(row, columns) {\n  return Object.keys(columns).reduce((acc, key) => {\n    if (columns[key].type === COLUMNS_TYPES.FORMULA) {\n      acc[key] = {\n        colKey: key,\n        ...row,\n        value: calculate(columns, row, columns[key].formula),\n      };\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction refreshCalculation(spectraAnalysis: SpectraAnalysis, nucleus: string) {\n  const { columns } = spectraAnalysis[nucleus].options;\n\n  const data = Object.entries(spectraAnalysis[nucleus].values).reduce(\n    (acc, spectra) => {\n      const [id, row] = spectra;\n      acc[id] = {\n        ...row,\n        ...refreshByRow(row, columns),\n      };\n      return acc;\n    },\n    {},\n  );\n\n  return data;\n}\n\nexport function analyzeSpectra(\n  spectra,\n  spectraAnalysis: SpectraAnalysis,\n  options,\n) {\n  const { from, to, nucleus, columnKey = null } = options;\n  init(spectraAnalysis, nucleus);\n  const colKey = addColumnKey(\n    spectraAnalysis,\n    nucleus,\n    {\n      type: COLUMNS_TYPES.NORMAL,\n      valueKey: COLUMNS_VALUES_KEYS.RELATIVE,\n      from,\n      to,\n      index: 1,\n    },\n    columnKey,\n  );\n\n  const { sum } = spectraAnalysis[nucleus].options;\n\n  const { values: result, sum: spectraSum } = getSpectraAnalysis(spectra, {\n    from,\n    to,\n    nucleus,\n  });\n\n  const prevNucleusData = lodashGet(spectraAnalysis, `${nucleus}.values`, {});\n\n  let data = result.reduce((acc, row) => {\n    const factor = spectraSum > 0 ? sum / spectraSum : 0.0;\n\n    acc[row.SID] = {\n      ...prevNucleusData[row.SID],\n      [colKey]: {\n        colKey,\n        ...row,\n        relative: Math.abs(row.absolute) * factor,\n      },\n    };\n    return acc;\n  }, {});\n\n  spectraAnalysis[nucleus].values = data;\n  spectraAnalysis[nucleus].values = refreshCalculation(\n    spectraAnalysis,\n    nucleus,\n  );\n}\n\nexport function deleteSpectraAnalysis(\n  spectraAnalysis: SpectraAnalysis,\n  colKey: string,\n  nucleus: string,\n) {\n  const result = Object.entries(spectraAnalysis[nucleus].values).reduce(\n    (acc, item: any) => {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete item[1][colKey];\n      if (item[1] && Object.keys(item[1]).length > 0) {\n        acc[item[0]] = item[1];\n        return acc;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  const { [colKey]: deletedColumnKey, ...resColumns } =\n    spectraAnalysis[nucleus].options.columns;\n\n  const currentColumns = Object.keys(spectraAnalysis[nucleus].options.columns);\n\n  if (currentColumns.length === 1) {\n    spectraAnalysis[nucleus].options.columnIndex = 0;\n  }\n\n  spectraAnalysis[nucleus].options.columns = resColumns;\n  spectraAnalysis[nucleus].values = result;\n  spectraAnalysis[nucleus].values = refreshCalculation(\n    spectraAnalysis,\n    nucleus,\n  );\n}\n\nfunction calculate(columns: Columns, data: AnalysisRow, formula = '') {\n  const array = formula.split(/\\+|-|\\*|\\/|%|\\(|\\)/);\n\n  const variables: string[] = [];\n\n  for (const col of array) {\n    const column = col.trim();\n    if (columns[column]) {\n      variables.push(column);\n    }\n  }\n\n  const params = variables.map((key) =>\n    data[key] ? data[key][columns[key].valueKey] : null,\n  );\n\n  let result;\n  try {\n    result = new Function(...variables, `return ${formula}`)(...params);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    result = new Error(`Invalid Formula ( ${formula} ) `);\n  }\n  return result;\n}\n\nexport function getDataAsString(\n  spectraAnalysis: SpectraAnalysis,\n  nucleus: string,\n) {\n  if (spectraAnalysis?.[nucleus]) {\n    const {\n      values,\n      options: { columns },\n    } = spectraAnalysis[nucleus];\n\n    let result = '';\n\n    for (const letter in columns) {\n      result += `${letter}\\t`;\n    }\n    result += '\\n';\n\n    for (const spectrum of Object.values(values)) {\n      for (const letter in columns) {\n        result += `${spectrum[letter][columns[letter].valueKey]}\\t`;\n      }\n      result += '\\n';\n    }\n    return result;\n  }\n  return null;\n}\n","import { Draft } from 'immer';\n\nimport * as MultipleAnalysis from '../../../data/data1d/MultipleAnalysis';\nimport { State } from '../Reducer';\nimport getRange from '../helper/getRange';\n\nfunction analyzeSpectra(draft: Draft<State>, action) {\n  const [from, to] = getRange(draft, action);\n  MultipleAnalysis.analyzeSpectra(draft.data, draft.spectraAnalysis, {\n    from,\n    to,\n    nucleus: draft.activeTab,\n  });\n}\n\nfunction handleDeleteSpectraRanges(draft: Draft<State>, action) {\n  const { colKey } = action;\n\n  MultipleAnalysis.deleteSpectraAnalysis(\n    draft.spectraAnalysis,\n    colKey,\n    draft.activeTab,\n  );\n}\nfunction handleResizeSpectraRange(draft: Draft<State>, action) {\n  const { columnKey, from, to } = action.payload;\n  MultipleAnalysis.analyzeSpectra(draft.data, draft.spectraAnalysis, {\n    from,\n    to,\n    nucleus: draft.activeTab,\n    columnKey,\n  });\n}\nfunction handleSetColumns(draft: Draft<State>, action) {\n  const data = action.payload;\n\n  MultipleAnalysis.setColumn(draft.spectraAnalysis, draft.activeTab, data);\n}\nfunction handleFilterColumn(draft: Draft<State>, action) {\n  const { columnKey, valueKey } = action.payload;\n\n  MultipleAnalysis.changeColumnValueKey(\n    draft.spectraAnalysis,\n    draft.activeTab,\n    columnKey,\n    valueKey,\n  );\n}\n\nexport {\n  analyzeSpectra,\n  handleDeleteSpectraRanges,\n  handleResizeSpectraRange,\n  handleSetColumns,\n  handleFilterColumn,\n};\n","import { Draft, original } from 'immer';\n\nimport * as Filters from '../../../data/Filters';\nimport { applyFilter } from '../../../data/FiltersManager';\nimport {\n  generateSpectrumFromPublicationString,\n  getReferenceShift,\n} from '../../../data/data1d/Spectrum1D';\nimport { getMissingProjection } from '../../../data/data2d/Spectrum2D';\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport { options } from '../../toolbar/ToolTypes';\nimport GroupByInfoKey from '../../utility/GroupByInfoKey';\nimport { State } from '../Reducer';\nimport { setZoom } from '../helper/Zoom1DManager';\n\nimport { setDomain, setMode } from './DomainActions';\nimport { resetSpectrumByFilter } from './FiltersActions';\nimport { setTab, setActiveTab } from './ToolsActions';\n\nfunction checkIsVisible2D(datum: Datum2D): boolean {\n  if (\n    datum.display.isPositiveVisible === false &&\n    datum.display.isNegativeVisible === false\n  ) {\n    return false;\n  }\n  return true;\n}\n\nfunction setVisible(datum, flag) {\n  if (datum.info.dimension === 2) {\n    (datum as Datum2D).display.isPositiveVisible = flag;\n    (datum as Datum2D).display.isNegativeVisible = flag;\n    (datum as Datum2D).display.isVisible = checkIsVisible2D(datum as Datum2D);\n  } else {\n    (datum as Datum1D).display.isVisible = flag;\n  }\n}\n\nfunction handleSpectrumVisibility(draft: Draft<State>, action) {\n  if (Array.isArray(action.id)) {\n    const IDs = action.id;\n    if (IDs.length === 0) {\n      for (const datum of draft.data) {\n        setVisible(datum, false);\n      }\n    } else {\n      for (const datum of draft.data) {\n        if (IDs.includes(datum.id)) {\n          setVisible(datum, true);\n        } else {\n          setVisible(datum, false);\n        }\n      }\n    }\n  } else {\n    const index = draft.data.findIndex((d) => d.id === action.id);\n    (draft.data[index] as Datum1D | Datum2D).display[action.key] = action.value;\n\n    if ((draft.data[index] as Datum1D | Datum2D).info.dimension === 2) {\n      (draft.data[index] as Datum2D).display.isVisible = checkIsVisible2D(\n        draft.data[index] as Datum2D,\n      );\n    }\n  }\n}\n\nfunction handleChangePeaksMarkersVisibility(draft: Draft<State>, data) {\n  for (let datum of draft.data) {\n    if (\n      datum.info?.dimension === 1 &&\n      data.some((activeData) => activeData.id === datum.id)\n    ) {\n      (datum as Datum1D).display.isPeaksMarkersVisible = true;\n    } else {\n      (datum as Datum1D).display.isPeaksMarkersVisible = false;\n    }\n  }\n}\n\nfunction handleChangeActiveSpectrum(draft: Draft<State>, activeSpectrum) {\n  let refreshDomain = false;\n\n  const currentActiveSpectrum = draft.activeSpectrum;\n  if (activeSpectrum) {\n    const newIndex = draft.data.findIndex((d) => d.id === activeSpectrum.id);\n    const oldIndex = draft.data.findIndex(\n      (d) => d.id === draft.activeSpectrum?.id,\n    );\n    if (newIndex !== -1) {\n      const newActiveSpectrum = draft.data[newIndex] as Datum1D | Datum2D;\n\n      newActiveSpectrum.display.isVisible = true;\n\n      if (oldIndex !== -1) {\n        refreshDomain =\n          (draft.data[oldIndex] as Datum1D | Datum2D).info.isFid ===\n          newActiveSpectrum.info.isFid\n            ? false\n            : true;\n      } else {\n        refreshDomain = newActiveSpectrum.info.isFid || false;\n      }\n    }\n    activeSpectrum = { ...activeSpectrum, index: newIndex };\n    draft.activeSpectrum = activeSpectrum;\n    draft.tabActiveSpectrum[draft.activeTab] = activeSpectrum;\n  } else {\n    if (currentActiveSpectrum) {\n      const index = draft.data.findIndex(\n        (d) => d.id === currentActiveSpectrum.id,\n      );\n      refreshDomain = draft.data[index].info.isFid;\n    } else {\n      refreshDomain = false;\n    }\n    draft.activeSpectrum = null;\n    draft.tabActiveSpectrum[draft.activeTab] = null;\n  }\n\n  if (options[draft.toolOptions.selectedTool].isFilter) {\n    draft.toolOptions.selectedTool = options.zoom.id;\n    draft.toolOptions.data.baseLineZones = [];\n    draft.toolOptions.selectedOptionPanel = null;\n    draft.tempData = null;\n  }\n\n  /**\n   * if the active spectrum not is FID then dont refresh the domain and the mode when the first time you activate soectrum\n   * if the new active spectrum different than the previous active spectrum fid then refresh the domain andf the mode.\n   */\n  if (draft.toolOptions.data.activeFilterID) {\n    resetSpectrumByFilter(draft, null, {}, currentActiveSpectrum);\n  } else if (refreshDomain) {\n    setDomain(draft);\n    setMode(draft);\n  }\n}\n\nfunction changeSpectrumSetting(draft: Draft<State>, { id, display }) {\n  const state = original(draft) as State;\n  const index = state.data.findIndex((d) => d.id === id);\n  if (index !== -1) {\n    draft.data[index].display = display;\n  }\n}\nfunction handleChangeSpectrumColor(draft: Draft<State>, { id, color, key }) {\n  const state = original(draft) as State;\n  const index = state.data.findIndex((d) => d.id === id);\n  if (index !== -1) {\n    (draft.data[index] as Datum1D | Datum2D).display[key] = color;\n  }\n}\n\nfunction handleDeleteSpectra(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (action.id) {\n    const index = state.data.findIndex((d) => d.id === action.id);\n    draft.data.splice(index, 1);\n  } else {\n    draft.data = [];\n  }\n  setActiveTab(draft, { tab: draft.activeTab, refreshActiveTab: true });\n}\nfunction addMissingProjectionHandler(draft, action) {\n  const state = original(draft);\n  const { nucleus } = action;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    for (let n of nucleus) {\n      const datum1D = getMissingProjection(\n        state.data[index],\n        n,\n        draft.usedColors,\n      );\n      draft.data.push(datum1D);\n    }\n    const groupByNucleus = GroupByInfoKey('nucleus');\n    const dataGroupByNucleus = groupByNucleus(draft.data);\n    setTab(draft, dataGroupByNucleus, draft.activeTab, true);\n    setDomain(draft);\n    setMode(draft);\n  }\n}\nfunction alignSpectraHandler(draft: Draft<State>, action) {\n  if (draft.data && draft.data.length > 0) {\n    for (let datum of draft.data) {\n      if (\n        datum.info?.dimension === 1 &&\n        datum.info.nucleus === draft.activeTab &&\n        !datum.info?.isFid\n      ) {\n        const shift = getReferenceShift(datum, { ...action.payload });\n        applyFilter(datum, [\n          {\n            name: Filters.shiftX.id,\n            options: shift,\n          },\n        ]);\n      }\n    }\n  }\n\n  setDomain(draft);\n  setMode(draft);\n}\n\nfunction generateSpectrumFromPublicationStringHandler(\n  draft: Draft<State>,\n  action,\n) {\n  const publicationString = action.payload.publicationText;\n\n  const spectrum = generateSpectrumFromPublicationString(\n    publicationString,\n    draft.usedColors,\n  );\n  draft.data.push(spectrum);\n  setActiveTab(draft);\n  setZoom(draft, { scale: 0.8, spectrumID: spectrum.id });\n}\n\nexport {\n  handleSpectrumVisibility,\n  handleChangePeaksMarkersVisibility,\n  handleChangeActiveSpectrum,\n  handleChangeSpectrumColor,\n  changeSpectrumSetting,\n  handleDeleteSpectra,\n  addMissingProjectionHandler,\n  alignSpectraHandler,\n  generateSpectrumFromPublicationStringHandler,\n};\n","export const UNDO = 'undo';\nexport const REDO = 'redo';\nexport const SET = 'set';\nexport const RESET = 'reset';\n","import { Draft, produce } from 'immer';\nimport { buildCorrelationData, CorrelationData } from 'nmr-correlation';\n\nimport { predictSpectra } from '../../data/PredictionManager';\nimport * as SpectraManager from '../../data/SpectraManager';\nimport { SpectraAnalysis } from '../../data/data1d/MultipleAnalysis';\nimport { migrate } from '../../data/migration/MigrationManager';\nimport { Molecule } from '../../data/molecules/Molecule';\nimport { Range } from '../../data/types/data1d';\nimport { Contours } from '../../data/types/data2d/Contours';\nimport generateID from '../../data/utilities/generateID';\nimport { UsedColors } from '../../types/UsedColors';\nimport { Spectra } from '../NMRium';\nimport { DefaultTolerance } from '../panels/SummaryPanel/CorrelationTable/Constants';\nimport { options } from '../toolbar/ToolTypes';\nimport { nmredataToNmrium } from '../utility/nmredataToNmrium';\n\nimport * as CorrelationsActions from './actions/CorrelationsActions';\nimport * as DatabaseActions from './actions/DatabaseActions';\nimport { setWidth, handleSetDimensions } from './actions/DimensionsActions';\nimport * as DomainActions from './actions/DomainActions';\nimport * as FiltersActions from './actions/FiltersActions';\nimport * as GlobalActions from './actions/GlobalActions';\nimport {\n  handleHistoryUndo,\n  handleHistoryRedo,\n  handleHistoryReset,\n} from './actions/HistoryActions';\nimport * as IntegralsActions from './actions/IntegralsActions';\nimport * as LoadActions from './actions/LoadActions';\nimport * as MoleculeActions from './actions/MoleculeActions';\nimport * as PeaksActions from './actions/PeaksActions';\nimport {\n  setKeyPreferencesHandler,\n  applyKeyPreferencesHandler,\n} from './actions/PreferencesActions';\nimport * as RangesActions from './actions/RangesActions';\nimport * as SpectraAnalysisActions from './actions/SpectraAnalysisAction';\nimport * as SpectrumsActions from './actions/SpectrumsActions';\nimport * as ToolsActions from './actions/ToolsActions';\nimport * as ZonesActions from './actions/ZonesActions';\nimport { DEFAULT_YAXIS_SHIFT_VALUE, DISPLAYER_MODE } from './core/Constants';\nimport { ZoomHistory } from './helper/ZoomHistoryManager';\nimport { UNDO, REDO, RESET } from './types/HistoryTypes';\nimport * as types from './types/Types';\n\nexport interface ActiveSpectrum {\n  id: string;\n  index: number;\n}\n\nexport interface Margin {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\nexport const getInitialState = (): State => ({\n  actionType: '',\n  data: [],\n  contours: {} as Contours,\n  tempData: null,\n  xDomain: [],\n  yDomain: [],\n  yDomains: {},\n  xDomains: {},\n  originDomain: {\n    xDomain: [],\n    yDomain: [],\n    xDomains: {},\n    yDomains: {},\n    shareYDomain: false,\n  },\n  integralsYDomains: {},\n  activeTab: '',\n  width: 0,\n  height: 0,\n  margin: {\n    top: 10,\n    right: 20,\n    bottom: 70,\n    left: 0,\n  },\n  activeSpectrum: null,\n  mode: 'RTL',\n  molecules: [],\n  verticalAlign: {\n    align: 'bottom',\n    verticalShift: DEFAULT_YAXIS_SHIFT_VALUE,\n  },\n  history: {\n    past: [],\n    present: null,\n    future: [],\n    hasUndo: false,\n    hasRedo: false,\n  },\n  isLoading: false,\n  keysPreferences: {},\n  displayerMode: DISPLAYER_MODE.DM_1D,\n  tabActiveSpectrum: {},\n  spectraAnalysis: {},\n  correlations: {},\n  displayerKey: '',\n  zoom: {\n    history: {} as ZoomHistory,\n  },\n  overDisplayer: false,\n  toolOptions: {\n    selectedTool: options.zoom.id,\n    selectedOptionPanel: null,\n    data: {\n      baseLineZones: [],\n      pivot: { value: 0, index: 0 },\n      zonesNoiseFactor: 1,\n      activeFilterID: null,\n      tempRange: null,\n      showMultiplicityTrees: false,\n      showRangesIntegrals: true,\n      showJGraph: false,\n      predictionIndex: 0,\n    },\n  },\n  usedColors: { '1d': [], '2d': [] },\n});\n\nexport const initialState = getInitialState();\n\nexport type VerticalAlignment = 'bottom' | 'center' | 'stack';\nexport interface VerticalAlign {\n  align: VerticalAlignment;\n  verticalShift: number;\n}\nexport interface State {\n  /**\n   * Last action type\n   *  base on the action type we can decide to trigger or not the callback function (onDataChange)\n   */\n  actionType: string;\n  /**\n   * spectra list (1d and 2d)\n   */\n  data: Spectra;\n  /**\n   * calculated contours for 2d spectra\n   */\n  contours: Contours;\n  /**\n   * snapshot of the spectra data once phase correction activated\n   *\n   */\n  tempData: any;\n  /**\n   * X axis domain\n   * value change when zooming in/out\n   * @default []\n   */\n  xDomain: Array<number>;\n  /**\n   * Y axis domain\n   * value change when vertical scale change for all spectra\n   * @default []\n   */\n  yDomain: Array<number>;\n\n  /**\n   * Y axis domain per spectrum\n   * value change when vertical scale change for the selected spectrum\n   * @default {}\n   */\n  yDomains: Record<string, Array<number>>;\n  /**\n   * X axis domain per spectrum\n   * value change when zooming in/out for the selected spectrum\n   * @default {}\n   */\n  xDomains: Record<string, Array<number>>;\n  /**\n   * Domain for X and Y axis once it calculated and it change in one case  when we load new spectra\n   * @default {}\n   */\n  originDomain: {\n    xDomain: Array<number>;\n    yDomain: Array<number>;\n    xDomains: Record<string, Array<number>>;\n    yDomains: Record<string, Array<number>>;\n    shareYDomain: boolean;\n  };\n  /**\n   * y axis domain per spectrum for integrals\n   * value change when vertical scale change for the integrals\n   * @default {}\n   */\n  integralsYDomains: Record<string, Array<number>>;\n\n  /**\n   * current select tab (nucleus)\n   * @default null\n   */\n  activeTab: string;\n  /**\n   * plot chart area width\n   * @default 0\n   */\n  width: number;\n  /**\n   * plot chart area height\n   * @default 0\n   */\n  height: number;\n  /**\n   * The margin Around the plot chart area\n   * @default {top: 10,right: 20,bottom: 70,left: 0}\n   */\n  margin: Margin;\n  /**\n   * current active spectrum\n   * @default null\n   */\n  activeSpectrum: ActiveSpectrum | null;\n  /**\n   * Scale direction\n   * @default 'RTL'\n   */\n  mode: 'RTL' | 'LTR';\n  /**\n   * molecules\n   * @default []\n   */\n  molecules: Array<Molecule>;\n  /**\n   * options to control spectra vertical alignment\n   * @default {align: 'bottom',value: DEFAULT_YAXIS_SHIFT_VALUE}\n   */\n  verticalAlign: VerticalAlign;\n  /**\n   * @todo for undo /redo features\n   */\n  history: Partial<{\n    past: Array<any>;\n    present: any;\n    future: Array<any>;\n    hasUndo: boolean;\n    hasRedo: boolean;\n  }>;\n\n  /**\n   * hide/show main loading indicator\n   * @default false\n   */\n  isLoading: boolean;\n\n  /**\n   * temporary snapshot of state once the user press on number from 1-9\n   */\n  keysPreferences: any;\n\n  /**\n   * displayer mode '1D' or '2D'\n   * @default '1D'\n   */\n  displayerMode: DISPLAYER_MODE;\n\n  /**\n   * active spectrum per nucleus\n   * @default {}\n   */\n  tabActiveSpectrum: Record<string, ActiveSpectrum | null>;\n\n  /**\n   * Multiple spectra analysis data\n   */\n\n  spectraAnalysis: SpectraAnalysis;\n  /**\n   * unique key identifier per Displayer instance\n   */\n  displayerKey: string;\n\n  /**\n   * Correlation data\n   */\n  correlations: CorrelationData;\n\n  /**\n   * Zoom Manager for vertical scale for spectra, integral, And undo zoom in per tab (nucleus)\n   * @default  {history: {},spectra: {},integral: {}}\n   */\n  zoom: {\n    history: ZoomHistory;\n  };\n\n  /**\n   * boolean indicator to check if the mouse over the displayer or not\n   * value change to true once the mouse come over the displayer and vice versa true once the mouse out of the displayer\n   * @default false\n   */\n  overDisplayer: boolean;\n\n  /**\n   * Basic options for the tools\n   */\n  toolOptions: {\n    /**\n     * The current selected tool\n     * @default `options.zoom.id`\n     */\n    selectedTool: string;\n    /**\n     * The current active options panel\n     * Part of tools has an options panel for more control over the tool, once the user select the tool then the options panel will be shown in the header\n     * @default null\n     */\n    selectedOptionPanel: string | null;\n\n    /**\n     * extra data for tools\n     */\n    data: {\n      /**\n       * list of zones for Baseline correction filter\n       */\n      baseLineZones: any;\n      /**\n       * pivot point for manual phase correction\n       * @default {value:0,index:0}\n       */\n      pivot: { value: number; index: number };\n      /**\n       * Noise factor for auto zones detection\n       * @default 1\n       */\n      zonesNoiseFactor: number;\n\n      /**\n       * The current active Filter\n       * @default null\n       */\n      activeFilterID: string | null;\n\n      /**\n       * copy of the range that the user start editing for multiplicity tree live updating\n       */\n      tempRange: Range | null;\n      /**\n       * boolean indicator to hide/show multiplicity tree\n       * @default false\n       */\n      showMultiplicityTrees: boolean;\n      /**\n       * boolean indicator to hide/show integrals for the spectrum ranges\n       * @default false\n       */\n      showRangesIntegrals: boolean;\n\n      /**\n       * boolean indicator to hide/show J graph for spectrum signals\n       * @default false\n       */\n\n      showJGraph: boolean;\n\n      /**\n       * prediction Index\n       * @default 0\n       */\n      predictionIndex: number;\n    };\n  };\n\n  usedColors: UsedColors;\n}\n\nexport function initState(state: State): State {\n  const displayerKey = generateID();\n  const correlations = buildCorrelationData([], {\n    tolerance: DefaultTolerance,\n  });\n\n  return {\n    ...state,\n    correlations,\n    displayerKey,\n    history: {},\n  };\n}\n\nexport function dispatchMiddleware(dispatch) {\n  const usedColors: UsedColors = { '1d': [], '2d': [] };\n\n  return (action) => {\n    switch (action.type) {\n      case types.INITIATE: {\n        if (action.payload) {\n          const { spectra, ...res } = migrate(action.payload);\n          void SpectraManager.fromJSON(spectra, usedColors).then((data) => {\n            action.payload = { spectra: data, ...res, usedColors };\n            dispatch(action);\n          });\n        }\n\n        break;\n      }\n      case types.LOAD_JSON_FILE: {\n        const parsedData = JSON.parse(action.files[0].binary.toString());\n        const data = migrate(parsedData);\n        void SpectraManager.fromJSON(data.spectra, usedColors).then(\n          (spectra) => {\n            action.payload = Object.assign(data, { spectra, usedColors });\n            dispatch(action);\n          },\n        );\n        break;\n      }\n      case types.LOAD_ZIP_FILE: {\n        for (let zipFile of action.files) {\n          void SpectraManager.addBruker(\n            { display: { name: zipFile.name } },\n            zipFile.binary,\n            usedColors,\n          ).then((data) => {\n            action.payload = { data, usedColors };\n            dispatch(action);\n          });\n        }\n        break;\n      }\n      case types.LOAD_NMREDATA_FILE: {\n        void nmredataToNmrium(action.file, usedColors).then((data) => {\n          action.payload = Object.assign(data, { usedColors });\n          dispatch(action);\n        });\n        break;\n      }\n      case types.PREDICT_SPECTRA: {\n        const {\n          mol: { molfile },\n          options,\n        } = action.payload;\n        void predictSpectra(molfile).then(\n          (data) => {\n            action.payload = { data, options };\n            dispatch(action);\n          },\n          () => {\n            dispatch(action);\n          },\n        );\n\n        break;\n      }\n\n      default:\n        action.usedColors = usedColors;\n        dispatch(action);\n\n        break;\n    }\n  };\n}\n\nfunction innerSpectrumReducer(draft: Draft<State>, action) {\n  if (![types.LOAD_JSON_FILE, types.LOAD_NMREDATA_FILE].includes(action.type)) {\n    draft.actionType = action.type;\n  }\n\n  switch (action.type) {\n    case types.INITIATE:\n      return LoadActions.initiate(draft, action);\n    case types.SET_LOADING_FLAG:\n      return LoadActions.setIsLoading(draft, action.isLoading);\n    case types.LOAD_JSON_FILE:\n      return LoadActions.handleLoadJsonFile(draft, action);\n    case types.LOAD_JCAMP_FILE:\n      return LoadActions.loadJcampFile(draft, action);\n    case types.LOAD_JDF_FILE:\n      return LoadActions.loadJDFFile(draft, action);\n    case types.LOAD_MOL_FILE:\n      return LoadActions.handleLoadMOLFile(draft, action);\n    case types.LOAD_ZIP_FILE:\n      return LoadActions.handleLoadZIPFile(draft, action);\n    case types.LOAD_NMREDATA_FILE:\n      return LoadActions.handleLoadNmredata(draft, action);\n    case types.ADD_PEAK:\n      return PeaksActions.addPeak(draft, action.mouseCoordinates);\n    case types.ADD_PEAKS:\n      return PeaksActions.addPeaks(draft, action);\n\n    case types.DELETE_PEAK_NOTATION:\n      return PeaksActions.deletePeak(draft, action.data);\n\n    case types.ADD_INTEGRAL:\n      return IntegralsActions.addIntegral(draft, action);\n    case types.DELETE_INTEGRAL:\n      return IntegralsActions.deleteIntegral(draft, action);\n    case types.CHANGE_INTEGRAL_DATA:\n      return IntegralsActions.changeIntegral(draft, action);\n    case types.RESIZE_INTEGRAL:\n      return IntegralsActions.changeIntegral(draft, action);\n    case types.CHANGE_INTEGRAL_SUM:\n      return IntegralsActions.handleChangeIntegralSum(draft, action.value);\n    case types.CHANGE_INTEGRALS_SUM_FLAG:\n      return IntegralsActions.handleChangeIntegralsSumFlag(draft, action);\n    case types.CHANGE_INTEGRAL_RELATIVE:\n      return IntegralsActions.handleChangeIntegralsRelativeValue(draft, action);\n\n    case types.SET_ORIGINAL_DOMAIN:\n      return DomainActions.setOriginalDomain(draft, action.domain);\n\n    case types.SET_X_DOMAIN:\n      return DomainActions.setXDomain(draft, action.xDomain);\n\n    case types.SET_Y_DOMAIN:\n      return DomainActions.setYDomain(draft, action.yDomain);\n\n    case types.SET_WIDTH:\n      return setWidth(draft, action.width);\n\n    case types.SET_DIMENSIONS:\n      return handleSetDimensions(draft, action.width, action.height);\n\n    case types.SET_SELECTED_TOOL:\n      return ToolsActions.setSelectedTool(draft, action);\n    case types.RESET_SELECTED_TOOL:\n      return ToolsActions.resetSelectedTool(draft);\n    case types.SET_SELECTED_OPTIONS_PANEL:\n      return ToolsActions.setSelectedOptionPanel(\n        draft,\n        action.selectedOptionPanel,\n      );\n    case types.FULL_ZOOM_OUT:\n      return ToolsActions.zoomOut(draft, action);\n    case types.SHIFT_SPECTRUM:\n      return FiltersActions.shiftSpectrumAlongXAxis(draft, action.shiftValue);\n    case types.APPLY_ZERO_FILLING_FILTER:\n      return FiltersActions.applyZeroFillingFilter(draft, action.value);\n    case types.APPLY_FFT_FILTER:\n      return FiltersActions.applyFFTFilter(draft);\n    case types.APPLY_MANUAL_PHASE_CORRECTION_FILTER:\n      return FiltersActions.applyManualPhaseCorrectionFilter(\n        draft,\n        action.value,\n      );\n    case types.APPLY_AUTO_PHASE_CORRECTION_FILTER:\n      return FiltersActions.applyAutoPhaseCorrectionFilter(draft);\n    case types.APPLY_ABSOLUTE_FILTER:\n      return FiltersActions.applyAbsoluteFilter(draft);\n    case types.CALCULATE_MANUAL_PHASE_CORRECTION_FILTER:\n      return FiltersActions.calculateManualPhaseCorrection(draft, action.value);\n    case types.ENABLE_FILTER:\n      return FiltersActions.enableFilter(draft, action.id, action.checked);\n    case types.DELETE_FILTER:\n      return FiltersActions.deleteFilter(draft, action);\n    case types.DELETE_SPECTRA_FILTER:\n      return FiltersActions.deleteSpectraFilter(draft, action);\n    case types.SET_FILTER_SNAPSHOT:\n      return FiltersActions.filterSnapshotHandler(draft, action);\n    case types.APPLY_MULTIPLE_SPECTRA_FILTER:\n      return FiltersActions.handleMultipleSpectraFilter(draft, action);\n    case types.ADD_EXCLUSION_ZONE:\n      return FiltersActions.handleAddExclusionZone(draft, action);\n    case types.DELETE_EXCLUSION_ZONE:\n      return FiltersActions.handleDeleteExclusionZone(draft, action);\n\n    case types.CHANGE_VISIBILITY:\n      return SpectrumsActions.handleSpectrumVisibility(draft, action);\n\n    case types.CHANGE_PEAKS_MARKERS_VISIBILITY:\n      return SpectrumsActions.handleChangePeaksMarkersVisibility(\n        draft,\n        action.data,\n      );\n    case types.CHANGE_ACTIVE_SPECTRUM:\n      return SpectrumsActions.handleChangeActiveSpectrum(draft, action.data);\n    case types.CHANGE_SPECTRUM_COLOR:\n      return SpectrumsActions.handleChangeSpectrumColor(draft, action.data);\n    case types.CHANGE_SPECTRUM_SETTING:\n      return SpectrumsActions.changeSpectrumSetting(draft, action);\n    case types.ALIGN_SPECTRA:\n      return SpectrumsActions.alignSpectraHandler(draft, action);\n    case types.DELETE_SPECTRA:\n      return SpectrumsActions.handleDeleteSpectra(draft, action);\n    case types.ADD_MISSING_PROJECTION:\n      return SpectrumsActions.addMissingProjectionHandler(draft, action);\n    case types.GENERATE_SPECTRUM_FROM_PUBLICATION_STRING:\n      return SpectrumsActions.generateSpectrumFromPublicationStringHandler(\n        draft,\n        action,\n      );\n\n    case types.TOGGLE_REAL_IMAGINARY_VISIBILITY:\n      return ToolsActions.handleToggleRealImaginaryVisibility(draft);\n    case types.SET_ZOOM:\n      return ToolsActions.handleZoom(draft, action);\n    case types.SET_SPECTRA_SAME_TOP:\n      return ToolsActions.setSpectraSameTopHandler(draft);\n    case types.RESET_SPECTRA_SCALE:\n      return ToolsActions.resetSpectraScale(draft);\n\n    case types.CHANGE_SPECTRUM_DISPLAY_VIEW_MODE:\n      return ToolsActions.handleChangeSpectrumDisplayMode(draft);\n\n    case types.ADD_MOLECULE:\n      return MoleculeActions.addMoleculeHandler(draft, action.molfile);\n\n    case types.SET_MOLECULE:\n      return MoleculeActions.setMoleculeHandler(\n        draft,\n        action.molfile,\n        action.key,\n      );\n\n    case types.DELETE_MOLECULE:\n      return MoleculeActions.deleteMoleculeHandler(draft, action);\n\n    case types.PREDICT_SPECTRA:\n      return MoleculeActions.predictSpectraFromMoleculeHandler(draft, action);\n\n    case types.SET_CORRELATIONS_MF:\n      return CorrelationsActions.handleSetMF(draft, action.payload);\n\n    case types.SET_CORRELATIONS_TOLERANCE:\n      return CorrelationsActions.handleSetTolerance(draft, action.payload);\n\n    case types.SET_CORRELATION:\n      return CorrelationsActions.handleSetCorrelation(draft, action.payload);\n\n    case types.SET_CORRELATIONS:\n      return CorrelationsActions.handleSetCorrelations(draft, action.payload);\n\n    case types.DELETE_CORRELATION:\n      return CorrelationsActions.handleDeleteCorrelation(draft, action.payload);\n\n    case types.BRUSH_END:\n      return ToolsActions.handleBrushEnd(draft, action);\n\n    case types.SET_VERTICAL_INDICATOR_X_POSITION:\n      return ToolsActions.setVerticalIndicatorXPosition(draft, action.position);\n    case types.SET_SPECTRUMS_VERTICAL_ALIGN:\n      return ToolsActions.setSpectrumsVerticalAlign(draft);\n\n    case types.AUTO_PEAK_PICKING:\n      return PeaksActions.handleAutoPeakPicking(draft, action.options);\n\n    case types.AUTO_ZONES_DETECTION:\n      return ZonesActions.handleAutoZonesDetection(draft, action.options);\n    case types.CHANGE_ZONES_NOISE_FACTOR:\n      return ZonesActions.changeZonesFactorHandler(draft, action);\n    case types.AUTO_RANGES_DETECTION:\n      return RangesActions.handleAutoRangesDetection(draft, action.options);\n    case types.ADD_RANGE:\n      return RangesActions.handleAddRange(draft, action);\n    case types.DELETE_RANGE:\n      return RangesActions.handleDeleteRange(draft, action);\n    case types.DELETE_1D_SIGNAL:\n      return RangesActions.handleDeleteSignal(draft, action);\n    case types.RESIZE_RANGE:\n      return RangesActions.handleResizeRange(draft, action);\n    case types.CHANGE_RANGE_SUM:\n      return RangesActions.handleChangeRangeSum(draft, action.value);\n    case types.CHANGE_RANGES_SUM_FLAG:\n      return RangesActions.handleChangeRangesSumFlag(draft, action);\n    case types.CHANGE_RANGE_RELATIVE:\n      return RangesActions.handleChangeRangeRelativeValue(draft, action);\n    case types.CHANGE_RANGE_SIGNAL_VALUE:\n      return RangesActions.handleChangeRangeSignalValue(draft, action);\n    case types.CHANGE_RANGE_SIGNAL_KIND:\n      return RangesActions.handleChangeRangeSignalKind(draft, action);\n    case types.SAVE_EDITED_RANGE:\n      return RangesActions.handleSaveEditedRange(draft, action);\n    case types.UNLINK_RANGE:\n      return RangesActions.handleUnlinkRange(draft, action);\n    case types.SET_DIAID_RANGE:\n      return RangesActions.handleSetDiaIDRange(draft, action);\n    case types.CHANGE_TEMP_RANGE:\n      return RangesActions.handleChangeTempRange(draft, action);\n    case types.SHOW_MULTIPLICTY_TREES:\n      return RangesActions.handleShowMultiplicityTrees(draft);\n    case types.SHOW_RANGES_INTEGRALS:\n      return RangesActions.handleShowRangesIntegrals(draft);\n    case types.AUTO_RANGES_SPECTRA_PICKING:\n      return RangesActions.handleAutoSpectraRangesDetection(draft);\n    case types.SHOW_J_GRAPH:\n      return RangesActions.handleShowJGraph(draft);\n\n    case types.SET_ACTIVE_TAB:\n      return ToolsActions.handelSetActiveTab(draft, action.tab);\n    case types.ADD_BASE_LINE_ZONE:\n      return ToolsActions.handleAddBaseLineZone(draft, action.zone);\n    case types.DELETE_BASE_LINE_ZONE:\n      return ToolsActions.handleDeleteBaseLineZone(draft, action.id);\n\n    case types.APPLY_BASE_LINE_CORRECTION_FILTER:\n      return FiltersActions.handleBaseLineCorrectionFilter(draft, action);\n    case types.SET_KEY_PREFERENCES:\n      return setKeyPreferencesHandler(draft, action.keyCode);\n    case types.APPLY_KEY_PREFERENCES:\n      return applyKeyPreferencesHandler(draft, action.keyCode);\n    case types.SET_2D_LEVEL:\n      return ToolsActions.levelChangeHandler(draft, action);\n    case types.ADD_2D_ZONE:\n      return ZonesActions.add2dZoneHandler(draft, action);\n    case types.DELETE_2D_ZONE:\n      return ZonesActions.handleDeleteZone(draft, action);\n    case types.DELETE_2D_SIGNAL:\n      return ZonesActions.handleDeleteSignal(draft, action);\n    case types.SET_2D_SIGNAL_PATH_LENGTH:\n      return ZonesActions.handleSetSignalPathLength(draft, action);\n    case types.RESET_DOMAIN:\n      return DomainActions.handelResetDomain(draft);\n    case types.CHANGE_ZONE_SIGNAL_VALUE:\n      return ZonesActions.changeZoneSignalDelta(draft, action);\n    case types.CHANGE_ZONE_SIGNAL_KIND:\n      return ZonesActions.handleChangeZoneSignalKind(draft, action);\n    case types.UNLINK_ZONE:\n      return ZonesActions.handleUnlinkZone(draft, action);\n    case types.SET_DIAID_ZONE:\n      return ZonesActions.handleSetDiaIDZone(draft, action);\n    case types.AUTO_ZONES_SPECTRA_PICKING:\n      return ZonesActions.handleAutoSpectraZonesDetection(draft);\n    case types.SAVE_EDITED_ZONE:\n      return ZonesActions.handleSaveEditedZone(draft, action);\n\n    case types.ANALYZE_SPECTRA:\n      return SpectraAnalysisActions.analyzeSpectra(draft, action);\n    case types.DELETE_ANALYZE_SPECTRA_RANGE:\n      return SpectraAnalysisActions.handleDeleteSpectraRanges(draft, action);\n    case types.RESIZE_ANALYZE_SPECTRA_RANGE:\n      return SpectraAnalysisActions.handleResizeSpectraRange(draft, action);\n    case types.SET_ANALYZE_SPECTRA_COLUMNS:\n      return SpectraAnalysisActions.handleSetColumns(draft, action);\n    case types.FILTER_SPECTRA_COLUMN:\n      return SpectraAnalysisActions.handleFilterColumn(draft, action);\n\n    case types.RESURRECTING_SPECTRUM_FROM_RANGES:\n      return DatabaseActions.handleRangeResurrecting(draft, action);\n\n    case UNDO:\n      return handleHistoryUndo(draft);\n\n    case REDO:\n      return handleHistoryRedo(draft);\n\n    case RESET:\n      return handleHistoryReset(draft, action);\n\n    case types.SET_MOUSE_OVER_DISPLAYER:\n      return GlobalActions.setIsOverDisplayer(draft, action);\n\n    default:\n      return;\n  }\n}\n\nexport const spectrumReducer = produce(innerSpectrumReducer);\n","import { createContext, useContext } from 'react';\n\nimport { initialState, State } from '../reducer/Reducer';\n\nexport const ChartContext = createContext<State>(initialState);\nexport const ChartDataProvider = ChartContext.Provider;\n\nexport function useChartData() {\n  return useContext(ChartContext);\n}\n","import { createContext, useContext } from 'react';\n\nexport const dispatchContext = createContext<any>({});\n\nexport const DispatchProvider = dispatchContext.Provider;\n\nexport function useDispatch() {\n  return useContext(dispatchContext);\n}\n","import { useMemo } from 'react';\n\nimport { Datum1D } from '../../data/types/data1d';\nimport { Datum2D } from '../../data/types/data2d';\nimport { useChartData } from '../context/ChartContext';\n\nexport default function useSpectrum(defaultValue: any) {\n  const { data, activeSpectrum } = useChartData();\n\n  return useMemo<Datum1D | Datum2D>(() => {\n    if (data && activeSpectrum && activeSpectrum.id) {\n      const datum =\n        data.find((datum) => datum.id === activeSpectrum.id) || defaultValue;\n      return datum;\n    }\n    return defaultValue;\n  }, [activeSpectrum, data, defaultValue]);\n}\n","import { createContext, useContext } from 'react';\n\nfunction defaultLoader() {\n  // Empty\n}\n\nconst LoaderContext = createContext<() => void>(defaultLoader);\n\nexport const LoaderProvider = LoaderContext.Provider;\n\nexport function useLoader() {\n  return useContext(LoaderContext);\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { ReactNode } from 'react';\n\nimport { useLoader } from '../context/LoaderContext';\n\nconst styles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(255, 255, 255, 0.25);\n  flex-direction: column;\n  user-select: none;\n  width: 100%;\n  height: 100%;\n  outline: 10px dashed rgba(0, 0, 0, 0.3);\n  outline-offset: -10px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  p {\n    padding: 15px 30px;\n    background-color:rgba(0, 0, 0, 0.5);\n    border-radius: 39px;\n    color: white;\n    font-size: x-large;\n    font-weight: bold;\n\n  }\n}\n`;\n\ninterface NoDataProps {\n  isEmpty?: boolean;\n  canOpenLoader?: boolean;\n  emptyText?: ReactNode;\n}\n\nfunction NoData({\n  isEmpty = true,\n  emptyText = 'Drag and drop here a JCAMP-DX, zipped Bruker folder, Jeol jdf or NMRium file',\n  canOpenLoader = true,\n}: NoDataProps) {\n  const openLoader = useLoader();\n\n  if (!isEmpty) {\n    return null;\n  }\n\n  return (\n    <div css={styles} {...(canOpenLoader && { onClick: openLoader })}>\n      <p>{emptyText}</p>\n    </div>\n  );\n}\n\nexport default NoData;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nconst styles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(255, 255, 255, 0.25);\n  height: 100%;\n  flex-direction: column;\n  user-select: none;\n  position: absolute;\n  width: 100%;\n\n  svg {\n    animation-duration: 0.5s;\n    animation-name: spinAnimation;\n    animation-iteration-count: infinite;\n    animation-fill-mode: forwards;\n    animation-direction: inherit;\n    animation-timing-function: linear;\n    animation-duration: 1s;\n    width: 100px;\n    height: 100px;\n  }\n\n  @keyframes spinAnimation {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default function DefaultSpinnerComponent() {\n  return (\n    <div css={styles}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\">\n        <g fill=\"#61DAFB\">\n          <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\" />\n          <path d=\"M520.5 78.1z\" />\n        </g>\n      </svg>\n      <p>Loading ...</p>\n    </div>\n  );\n}\n","import { createContext, ReactElement } from 'react';\n\nimport DefaultSpinnerComponent from './DefaultSpinnerComponent';\n\nexport function defaultGetSpinner() {\n  return <DefaultSpinnerComponent />;\n}\n\nexport const spinnerContext =\n  createContext<() => ReactElement>(defaultGetSpinner);\n\nexport const SpinnerProvider = spinnerContext.Provider;\n","import { useState, Fragment, useEffect, useContext, ReactNode } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nimport NoData from './NoData';\nimport { spinnerContext } from './SpinnerContext';\n\ninterface SpinnerProps {\n  isLoading?: boolean;\n  emptyText?: ReactNode;\n}\n\nfunction Spinner({ isLoading = true, emptyText = undefined }: SpinnerProps) {\n  const { data } = useChartData();\n  const [checkEmpty, startCheckEmpty] = useState(false);\n\n  useEffect(() => {\n    let timeout: any = null;\n    if (!isLoading) {\n      timeout = setTimeout(() => {\n        startCheckEmpty(true);\n      }, 500);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [isLoading]);\n\n  const getSpinner = useContext(spinnerContext);\n\n  return (\n    <Fragment>\n      {isLoading && getSpinner()}\n      {checkEmpty && !isLoading && (\n        <NoData isEmpty={data && data.length === 0} emptyText={emptyText} />\n      )}\n    </Fragment>\n  );\n}\n\nexport default Spinner;\n","import { CSSProperties, useContext } from 'react';\n\nimport { BrushContext } from '../EventsTrackers/BrushTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { options } from '../toolbar/ToolTypes';\n\nconst styles: Record<'container', CSSProperties> = {\n  container: {\n    transformOrigin: 'top left',\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    zoom: '100%',\n  },\n};\n\nconst allowTools: Array<string | number> = [\n  options.zoom.id,\n  options.zeroFilling.id,\n  options.peakPicking.id,\n  options.integral.id,\n  options.phaseCorrection.id,\n  options.baseLineCorrection.id,\n  options.rangesPicking.id,\n  options.zone2D.id,\n  options.slicingTool.id,\n  options.editRange.id,\n  options.multipleSpectraAnalysis.id,\n  options.exclusionZones.id,\n  options.databaseRangesSelection.id,\n];\n\nexport const BRUSH_TYPE = {\n  X: 1,\n  Y: 2,\n  XY: 3,\n};\n\nconst defaultDimensionBorder: {\n  startX: number;\n  startY: number;\n  endX?: number;\n  endY?: number;\n} = {\n  startX: 0,\n  startY: 0,\n};\n\ninterface BrushXYProps {\n  brushType: number;\n  dimensionBorder?: {\n    startX: number;\n    startY: number;\n    endX?: number;\n    endY?: number;\n  };\n  width?: number;\n  height?: number;\n}\n\nexport default function BrushXY({\n  brushType = BRUSH_TYPE.XY,\n  dimensionBorder = defaultDimensionBorder,\n  width: widthProps,\n  height: heightProps,\n}: BrushXYProps) {\n  let {\n    width,\n    height,\n    toolOptions: { selectedTool },\n  } = useChartData();\n  let { startX, endX, startY, endY, step } = useContext(BrushContext);\n\n  if (\n    !allowTools.includes(selectedTool) ||\n    step !== 'brushing' ||\n    !dimensionBorder ||\n    (dimensionBorder.startX && startX < dimensionBorder.startX) ||\n    (dimensionBorder.startY && startY < dimensionBorder.startY) ||\n    ((dimensionBorder.endX && Math.sign(endX - startX) === 1\n      ? endX > dimensionBorder.endX\n      : endX < dimensionBorder.startX) &&\n      (dimensionBorder.endX &&\n      dimensionBorder.endY &&\n      Math.sign(endY - startY) === 1\n        ? endY > dimensionBorder.endY\n        : endY < dimensionBorder.startY))\n  ) {\n    return null;\n  }\n\n  width = widthProps ? widthProps : width;\n\n  height = heightProps ? heightProps : height;\n\n  endX =\n    dimensionBorder.endX && endX > dimensionBorder.endX\n      ? dimensionBorder.endX\n      : dimensionBorder.startX && endX < dimensionBorder.startX\n      ? dimensionBorder.startX\n      : endX;\n  endY =\n    dimensionBorder.endY && endY > dimensionBorder.endY\n      ? dimensionBorder.endY\n      : dimensionBorder.startY && endY < dimensionBorder.startY\n      ? dimensionBorder.startY\n      : endY;\n\n  const scaleX =\n    brushType === BRUSH_TYPE.X || brushType === BRUSH_TYPE.XY\n      ? (endX - startX) / width\n      : 1;\n  startX =\n    brushType === BRUSH_TYPE.X || brushType === BRUSH_TYPE.XY ? startX : 0;\n\n  const scaleY =\n    brushType === BRUSH_TYPE.Y || brushType === BRUSH_TYPE.XY\n      ? (endY - startY) / height\n      : 1;\n  startY =\n    brushType === BRUSH_TYPE.Y || brushType === BRUSH_TYPE.XY ? startY : 0;\n  return (\n    <div\n      style={{\n        ...styles.container,\n        transform: `translate(${startX}px, ${startY}px) scale(${scaleX},${scaleY})`,\n        willChange: 'transform',\n      }}\n    >\n      <svg width={width} height={height}>\n        <rect\n          x=\"0\"\n          y=\"0\"\n          width={width}\n          height={height}\n          fill=\"gray\"\n          opacity=\"0.2\"\n        />\n      </svg>\n    </div>\n  );\n}\n","import { CSSProperties, useContext } from 'react';\n\nimport { BrushContext } from '../EventsTrackers/BrushTracker';\nimport { MouseContext } from '../EventsTrackers/MouseTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { options } from '../toolbar/ToolTypes';\n\nconst styles: Record<'line', CSSProperties> = {\n  line: {\n    stroke: 'black',\n    strokeOpacity: 1,\n    shapeRendering: 'crispEdges',\n    strokeWidth: '1',\n    willChange: 'transform',\n  },\n};\n\nconst allowTools: Array<string | number> = [\n  options.zoom.id,\n  options.equalizerTool.id,\n  options.baseLineCorrection.id,\n  options.zone2D.id,\n  options.slicingTool.id,\n  options.integral.id,\n  options.rangesPicking.id,\n  options.editRange.id,\n  options.multipleSpectraAnalysis.id,\n  options.exclusionZones.id,\n  options.databaseRangesSelection.id,\n];\n\nfunction CrossLinePointer() {\n  const {\n    height,\n    width,\n    margin,\n    toolOptions: { selectedTool },\n  } = useChartData();\n  let position = useContext(MouseContext);\n  const brushState = useContext(BrushContext);\n\n  if (\n    !allowTools.includes(selectedTool) ||\n    brushState.step === 'brushing' ||\n    !position ||\n    position.x > width - margin.right ||\n    position.y > height - margin.bottom ||\n    !width ||\n    !height\n  ) {\n    return null;\n  }\n  return (\n    <div\n      key=\"crossLine\"\n      style={{\n        willChange: 'transform',\n        cursor: 'crosshair',\n        transform: `translate(${-width + position.x}px, ${\n          -height + position.y\n        }px)`,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        pointerEvents: 'none',\n        overflow: 'visible',\n        width: 2 * width,\n        height: 2 * height,\n      }}\n    >\n      <svg width={2 * width} height={2 * height}>\n        <line\n          style={styles.line}\n          x1={width}\n          y1=\"0\"\n          x2={width}\n          y2={height * 2}\n          key=\"vertical_line\"\n        />\n        <line\n          style={styles.line}\n          x1=\"0\"\n          y1={height}\n          x2={width * 2}\n          y2={height}\n          key=\"horizontal_line\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default CrossLinePointer;\n","import lodashGet from 'lodash/get';\nimport lodashSet from 'lodash/set';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nexport function useStateWithLocalStorage(localStorageKey, key?: string) {\n  const [value, setValue] = useState(\n    localStorage.getItem(localStorageKey) || '{}',\n  );\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, value);\n  }, [localStorageKey, value]);\n\n  const setData = useCallback(\n    (data, key = null) => {\n      let castData = JSON.parse(value);\n      if (key) {\n        lodashSet(castData, key, data);\n      } else {\n        castData = { ...castData, ...data };\n      }\n      setValue(JSON.stringify(castData));\n    },\n    [value],\n  );\n\n  return useMemo(() => {\n    return [\n      key ? lodashGet(JSON.parse(value), key, {}) : JSON.parse(value),\n      setData,\n    ];\n  }, [key, setData, value]);\n}\n\nexport function getLocalStorage(localStorageKey, isJson = true) {\n  const settings = localStorage.getItem(localStorageKey);\n  return settings && isJson ? JSON.parse(settings) : settings;\n}\n\nexport function storeData(localStorageKey, value) {\n  localStorage.setItem(localStorageKey, value);\n}\n\nexport function removeData(localStorageKey) {\n  localStorage.removeItem(localStorageKey);\n}\n\nexport function getValue(object, keyPath, defaultValue: any = null) {\n  return lodashGet(object, keyPath, defaultValue);\n}\n","import { Workspace } from './Workspace';\n\nexport const basic: Workspace = {\n  version: 1,\n  label: 'Default workspace',\n  display: {\n    general: {\n      disableMultipletAnalysis: false,\n      hideSetSumFromMolecule: false,\n      hideGeneralSettings: false,\n      experimentalFeatures: { display: true },\n    },\n\n    panels: {\n      spectraPanel: { display: true, open: true },\n      informationPanel: { display: true, open: false },\n      peaksPanel: { display: true, open: false },\n      integralsPanel: { display: true, open: false },\n      rangesPanel: { display: true, open: false },\n      structuresPanel: { display: true, open: false },\n      filtersPanel: { display: true, open: false },\n      zonesPanel: { display: true, open: false },\n      summaryPanel: { display: false, open: false },\n      multipleSpectraAnalysisPanel: { display: false, open: false },\n      databasePanel: { display: false, open: false },\n      predictionPanel: { display: false, open: false },\n    },\n  },\n\n  controllers: {\n    dimmedSpectraTransparency: 0.1,\n  },\n  formatting: {\n    nucleus: [\n      { key: '1H', name: '1H', ppm: '0.00', hz: '0.00' },\n      { key: '13C', name: '13C', ppm: '0.00', hz: '0.00' },\n      { key: '15N', name: '15N', ppm: '0.00', hz: '0.00' },\n      { key: '19F', name: '19F', ppm: '0.00', hz: '0.00' },\n      { key: '29Si', name: '29Si', ppm: '0.00', hz: '0.00' },\n      { key: '31P', name: '31P', ppm: '0.00', hz: '0.00' },\n    ],\n    nucleusByKey: {},\n    panels: {},\n  },\n};\n","import { Workspace } from './Workspace';\nimport { basic } from './basic';\n\nexport const exercise: Workspace = {\n  version: 1,\n  label: 'Exercise workspace',\n  display: {\n    general: {\n      disableMultipletAnalysis: true,\n      hideSetSumFromMolecule: true,\n      hideGeneralSettings: true,\n      experimentalFeatures: { hidden: true },\n    },\n\n    panels: {\n      spectraPanel: { display: true, open: true },\n      informationPanel: { hidden: true },\n      peaksPanel: { hidden: true },\n      integralsPanel: { display: true },\n      rangesPanel: { hidden: true },\n      structuresPanel: { hidden: true },\n      filtersPanel: { hidden: true },\n      zonesPanel: { hidden: true },\n      summaryPanel: { hidden: true },\n      multipleSpectraAnalysisPanel: { hidden: true },\n      databasePanel: { hidden: true },\n      predictionPanel: { hidden: true },\n    },\n\n    toolBarButtons: {\n      zoomTool: true,\n      zoomOutTool: true,\n      import: false,\n      exportAs: false,\n      spectraStackAlignments: true,\n      spectraCenterAlignments: true,\n      realImaginary: false,\n      peakTool: true,\n      integralTool: true,\n      zonePickingTool: false,\n      slicingTool: false,\n      autoRangesTool: false,\n      zeroFillingTool: false,\n      phaseCorrectionTool: false,\n      baseLineCorrectionTool: false,\n      FFTTool: false,\n      multipleSpectraAnalysisTool: false,\n      exclusionZonesTool: false,\n    },\n  },\n  controllers: basic.controllers,\n  formatting: basic.formatting,\n};\n","import { Workspace } from './Workspace';\nimport { basic } from './basic';\n\nexport const prediction: Workspace = {\n  version: 1,\n  label: 'Prediction workspace',\n  display: {\n    general: {\n      experimentalFeatures: { display: false },\n    },\n    panels: {\n      spectraPanel: { display: true },\n      rangesPanel: { display: true },\n      zonesPanel: { display: true },\n      predictionPanel: { display: true, open: true },\n      informationPanel: { display: false },\n      peaksPanel: { display: false },\n      integralsPanel: { display: false },\n      structuresPanel: { display: false },\n      filtersPanel: { display: false },\n      summaryPanel: { display: false },\n      multipleSpectraAnalysisPanel: { display: false },\n      databasePanel: { display: false },\n    },\n  },\n  controllers: basic.controllers,\n  formatting: basic.formatting,\n};\n","import { Workspace } from './Workspace';\nimport { basic } from './basic';\n\nexport const process1D: Workspace = {\n  version: 1,\n  label: 'Process 1D workspace',\n  display: {\n    general: {\n      disableMultipletAnalysis: true,\n    },\n\n    panels: {\n      zonesPanel: { display: true },\n      summaryPanel: { display: true },\n      multipleSpectraAnalysisPanel: { display: true, open: true },\n      spectraPanel: { display: true, open: true },\n      informationPanel: { hidden: true },\n      peaksPanel: { hidden: true },\n      integralsPanel: { hidden: true },\n      rangesPanel: { hidden: true },\n      structuresPanel: { hidden: true },\n      filtersPanel: { hidden: true },\n      databasePanel: { hidden: true },\n      predictionPanel: { hidden: true },\n    },\n\n    toolBarButtons: {\n      import: false,\n      exportAs: false,\n      autoRangesTool: false,\n      multipleSpectraAnalysisTool: false,\n      exclusionZonesTool: false,\n    },\n  },\n  controllers: basic.controllers,\n  formatting: basic.formatting,\n};\n","import { basic } from './basic';\nimport { exercise } from './exercise';\nimport { prediction } from './prediction';\nimport { process1D } from './process1D';\n\nexport default { exercise, default: basic, process1D, prediction };\n","import { Draft, produce, original } from 'immer';\nimport lodashMerge from 'lodash/merge';\n\nimport generateID from '../../data/utilities/generateID';\nimport { NMRiumWorkspace, NMRiumPreferences } from '../NMRium';\nimport {\n  getLocalStorage,\n  removeData,\n  storeData,\n} from '../utility/LocalStorage';\nimport Workspaces from '../workspaces';\nimport { Workspace } from '../workspaces/Workspace';\n\nimport { ActionType } from './types/Types';\n\ntype InitPreferencesAction = ActionType<\n  'INIT_PREFERENCES',\n  { display: NMRiumPreferences; workspace: NMRiumWorkspace; dispatch: any }\n>;\ntype SetPreferencesAction = ActionType<\n  'SET_PREFERENCES',\n  Omit<Workspace, 'version' | 'label'>\n>;\ntype SetPanelsPreferencesAction = ActionType<\n  'SET_PANELS_PREFERENCES',\n  { key: string; value: string }\n>;\n\ntype WorkspaceAction = ActionType<\n  'SET_WORKSPACE' | 'REMOVE_WORKSPACE',\n  { workspace: string }\n>;\ntype AddWorkspaceAction = ActionType<\n  'ADD_WORKSPACE',\n  { workspace: string; data: Omit<Workspace, 'version' | 'label'> }\n>;\n\ntype PreferencesActions =\n  | InitPreferencesAction\n  | SetPreferencesAction\n  | ActionType<'RESET_PREFERENCES'>\n  | SetPanelsPreferencesAction\n  | WorkspaceAction\n  | AddWorkspaceAction;\n\nconst LOCAL_STORAGE_VERSION = 5;\n\nexport const WORKSPACES: Array<{\n  key: NMRiumWorkspace;\n  label: string;\n}> = [\n  {\n    key: 'default',\n    label: Workspaces.default.label,\n  },\n  {\n    key: 'process1D',\n    label: Workspaces.process1D.label,\n  },\n  {\n    key: 'exercise',\n    label: Workspaces.exercise.label,\n  },\n  {\n    key: 'prediction',\n    label: Workspaces.prediction.label,\n  },\n];\n\nfunction getPreferencesByWorkspace(workspace: NMRiumWorkspace) {\n  switch (workspace) {\n    case 'exercise':\n      return Workspaces.exercise;\n    case 'process1D':\n      return Workspaces.process1D;\n    case 'prediction':\n      return Workspaces.prediction;\n    case 'default':\n      return Workspaces.default;\n    default:\n      return {} as Workspace;\n  }\n}\n\nexport interface PreferencesState {\n  version: number;\n  workspaces: Record<string, Workspace>;\n  dispatch: (action?: PreferencesActions) => void;\n  workspace: {\n    current: NMRiumWorkspace;\n    base: NMRiumWorkspace | null;\n  };\n}\n\nfunction getActiveWorkspace(draft: Draft<PreferencesState>) {\n  return draft.workspaces[draft.workspace.current || 'default'];\n}\n\nexport const preferencesInitialState: PreferencesState = {\n  version: LOCAL_STORAGE_VERSION,\n  workspaces: {},\n  dispatch: () => null,\n  workspace: {\n    current: 'default',\n    base: null,\n  },\n};\n\nfunction filterObject(data: any) {\n  return JSON.parse(JSON.stringify(data), (key, value) => {\n    if (value?.hidden !== true) {\n      return value;\n    }\n  });\n}\nfunction FlatObject(data: any) {\n  let result = {};\n  JSON.parse(JSON.stringify(data), (key, value) => {\n    if (value?.hidden !== true && key) {\n      result[key] = result[key]++ || 1;\n    }\n  });\n  return result;\n}\n\nfunction checkKeysExists(sourceObject, targetObject) {\n  const source = FlatObject(sourceObject);\n  const target = FlatObject(targetObject);\n\n  if (Object.keys(target).length === 0) {\n    return false;\n  }\n\n  for (const [key, value] of Object.entries(source)) {\n    if (!target[key] || target[key] !== value) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction mapNucleus(draft: Draft<PreferencesState>) {\n  const currentWorkspacePreferences = getActiveWorkspace(draft);\n\n  if (\n    currentWorkspacePreferences.formatting.nucleus &&\n    Array.isArray(currentWorkspacePreferences.formatting.nucleus)\n  ) {\n    currentWorkspacePreferences.formatting.nucleusByKey =\n      currentWorkspacePreferences.formatting.nucleus.reduce((acc, item) => {\n        acc[item.name.toLowerCase()] = item;\n        return { ...acc };\n      }, {});\n  }\n}\n\nexport function initPreferencesState(\n  state: PreferencesState,\n): PreferencesState {\n  const nmrLocalStorageVersion = getLocalStorage(\n    'nmr-local-storage-version',\n    false,\n  );\n\n  let localData = getLocalStorage('nmr-general-settings');\n\n  // remove old nmr-local-storage-version key\n  if (nmrLocalStorageVersion && localData?.version) {\n    removeData('nmr-local-storage-version');\n  }\n\n  //  if the local setting version != current settings version number\n  if (!localData?.version || localData?.version !== LOCAL_STORAGE_VERSION) {\n    removeData('nmr-general-settings');\n  }\n  return {\n    ...state,\n    workspaces: localData?.workspaces || { default: Workspaces.default },\n  };\n}\n\nfunction handleInit(draft: Draft<PreferencesState>, action) {\n  if (action.payload) {\n    const localData = getLocalStorage('nmr-general-settings');\n\n    const { dispatch, workspace, ...resProps } = action.payload;\n    /**\n     * set the current workspace what the user-defined in the setting if the workspace is not defined at the level of component, otherwise\n     * use the default workspace\n     *\n     */\n    draft.workspace =\n      !workspace && localData?.currentWorkspace\n        ? { current: localData.currentWorkspace, base: null }\n        : { current: workspace || 'default', base: workspace };\n\n    const workspacePreferences = lodashMerge(\n      {},\n      getPreferencesByWorkspace(draft.workspace.current),\n      resProps,\n    );\n    const currentWorkspacePreferences = getActiveWorkspace(draft);\n\n    /**\n     * Update the local storage general preferences\n     * 1- if local storage is empty.\n     * 2- if predefine workspaces.\n     * 3- b) if workspace not exists in the local storage\n     *    c) if the local setting workspace version != current workspace version number\n     *    d) if hard code workspace parameters !=  current workspace parameters\n     */\n    if (\n      (Workspaces[draft.workspace.current] &&\n        (!currentWorkspacePreferences ||\n          workspacePreferences?.version !==\n            currentWorkspacePreferences?.version ||\n          !checkKeysExists(\n            workspacePreferences.display,\n            currentWorkspacePreferences?.display,\n          ))) ||\n      !localData\n    ) {\n      const {\n        workspaces,\n        version,\n        workspace: { current },\n      } = draft || {};\n      const display = filterObject(workspacePreferences.display);\n\n      const data = {\n        version,\n        ...(localData?.currentWorkspace && {\n          currentWorkspace: localData?.currentWorkspace,\n        }),\n        workspaces: {\n          ...workspaces,\n          [current]: {\n            ...workspacePreferences,\n            display,\n          },\n        },\n      };\n\n      draft.workspaces[current] = lodashMerge(\n        {},\n        currentWorkspacePreferences,\n        workspacePreferences,\n      );\n      storeData('nmr-general-settings', JSON.stringify(data));\n    } else {\n      currentWorkspacePreferences.display = lodashMerge(\n        {},\n        workspacePreferences.display,\n        currentWorkspacePreferences.display,\n      );\n    }\n\n    draft.dispatch = dispatch;\n  }\n}\n\nfunction handleSetPreferences(draft: Draft<PreferencesState>, action) {\n  if (action.payload) {\n    const currentWorkspacePreferences = getActiveWorkspace(draft);\n\n    const { controllers, formatting, display } = action.payload;\n\n    let localData = getLocalStorage('nmr-general-settings');\n    localData.currentWorkspace = draft.workspace.current;\n    localData.workspaces = {\n      ...localData.workspaces,\n      [draft.workspace.current]: {\n        ...localData.workspaces[draft.workspace.current],\n        controllers,\n        formatting,\n        display,\n      },\n    };\n\n    storeData('nmr-general-settings', JSON.stringify(localData));\n\n    currentWorkspacePreferences.controllers = controllers;\n    currentWorkspacePreferences.formatting = formatting;\n    currentWorkspacePreferences.display = {\n      ...currentWorkspacePreferences.display,\n      panels: display.panels,\n      general: {\n        ...(currentWorkspacePreferences.display.general || {}),\n        experimentalFeatures: display.general.experimentalFeatures,\n      },\n    };\n    mapNucleus(draft);\n  }\n}\nfunction handleSetPanelsPreferences(draft: Draft<PreferencesState>, action) {\n  if (action.payload) {\n    const currentWorkspacePreferences = getActiveWorkspace(draft);\n\n    const { key, value } = action.payload;\n    let localData = getLocalStorage('nmr-general-settings');\n    localData.workspaces[draft.workspace.current].formatting.panels[key] =\n      value;\n    storeData('nmr-general-settings', JSON.stringify(localData));\n    currentWorkspacePreferences.formatting.panels[key] = value;\n  }\n}\nfunction handleResetPreferences(draft: Draft<PreferencesState>) {\n  const currentWorkspacePreferences = getActiveWorkspace(draft);\n  let localData = getLocalStorage('nmr-general-settings');\n  const workSpaceDisplayPreferences = getPreferencesByWorkspace(\n    draft.workspace.current,\n  ).display;\n\n  if (localData.workspaces[draft.workspace.current]) {\n    localData.workspaces[draft.workspace.current].display =\n      workSpaceDisplayPreferences;\n    storeData('nmr-general-settings', JSON.stringify(localData));\n  }\n  currentWorkspacePreferences.display = workSpaceDisplayPreferences;\n}\nfunction handleSetWorkspace(\n  draft: Draft<PreferencesState>,\n  action: WorkspaceAction,\n) {\n  const workspaceKey = action.payload.workspace;\n  if (!draft.workspaces[workspaceKey]) {\n    draft.workspaces[workspaceKey] = getPreferencesByWorkspace(\n      workspaceKey as NMRiumWorkspace,\n    );\n  }\n  draft.workspace.current = workspaceKey as NMRiumWorkspace;\n}\nfunction handleAddWorkspace(\n  draft: Draft<PreferencesState>,\n  action: AddWorkspaceAction,\n) {\n  const {\n    workspace: workspaceName,\n    data: { display, controllers, formatting },\n  } = action.payload;\n  const newWorkSpace = {\n    version: 1,\n    label: workspaceName,\n    display,\n    controllers,\n    formatting,\n  };\n  const newWorkspaceKey = generateID();\n  const localData = getLocalStorage('nmr-general-settings');\n\n  localData.workspaces[newWorkspaceKey] = newWorkSpace;\n  storeData('nmr-general-settings', JSON.stringify(localData));\n  draft.workspaces[newWorkspaceKey] = newWorkSpace;\n  draft.workspace.current = newWorkspaceKey as any;\n}\nfunction handleRemoveWorkspace(\n  draft: Draft<PreferencesState>,\n  action: WorkspaceAction,\n) {\n  const { workspace } = action.payload;\n\n  if (workspace === draft.workspace.current) {\n    draft.workspace.current = 'default';\n  }\n\n  let localData = getLocalStorage('nmr-general-settings');\n  const storedWorkspaces = original(draft)?.workspaces || {};\n  const workspaces = Object.keys(storedWorkspaces).reduce((acc, key) => {\n    if (key !== workspace) {\n      acc[key] = storedWorkspaces[key];\n    }\n    return acc;\n  }, {});\n  draft.workspaces = workspaces;\n  localData.workspaces = filterObject(workspaces);\n  storeData('nmr-general-settings', JSON.stringify(localData));\n}\n\nfunction innerPreferencesReducer(\n  draft: Draft<PreferencesState>,\n  action: PreferencesActions,\n) {\n  switch (action.type) {\n    case 'INIT_PREFERENCES':\n      return handleInit(draft, action);\n    case 'SET_PREFERENCES':\n      return handleSetPreferences(draft, action);\n    case 'SET_PANELS_PREFERENCES':\n      return handleSetPanelsPreferences(draft, action);\n    case 'RESET_PREFERENCES':\n      return handleResetPreferences(draft);\n    case 'SET_WORKSPACE':\n      return handleSetWorkspace(draft, action);\n    case 'ADD_WORKSPACE':\n      return handleAddWorkspace(draft, action);\n    case 'REMOVE_WORKSPACE':\n      return handleRemoveWorkspace(draft, action);\n    default:\n      return draft;\n  }\n}\nconst preferencesReducer = produce(innerPreferencesReducer);\n\nexport default preferencesReducer;\n","import { createContext, useContext, useMemo } from 'react';\n\nimport {\n  preferencesInitialState,\n  PreferencesState,\n  WORKSPACES,\n} from '../reducer/preferencesReducer';\nimport Workspaces from '../workspaces';\n\nexport const PreferencesContext = createContext<PreferencesState>(\n  preferencesInitialState,\n);\nexport const PreferencesProvider = PreferencesContext.Provider;\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Preferences context was not found');\n  }\n\n  const { workspace, workspaces, dispatch } = context;\n\n  return useMemo(() => {\n    return {\n      current: workspaces[workspace.current] || {},\n      workspace,\n      workspaces,\n      dispatch,\n    };\n  }, [dispatch, workspace, workspaces]);\n}\n\nexport function useWorkspacesList() {\n  const { workspaces } = usePreferences();\n  return useMemo(() => {\n    const currentWorkspaces = Object.keys(workspaces).reduce<\n      { key: string; label: string }[]\n    >((acc, key) => {\n      if (!Workspaces[key]) {\n        acc.push({ key, label: workspaces[key].label });\n      }\n      return acc;\n    }, []);\n\n    return [...WORKSPACES, ...currentWorkspaces];\n  }, [workspaces]);\n}\n","export class PathBuilder {\n  private array: Array<string> = [];\n\n  public moveTo(x: number, y: number) {\n    this.array.push(`M ${x} ${y}`);\n  }\n\n  public lineTo(x: number, y: number) {\n    this.array.push(`L ${x} ${y}`);\n  }\n\n  public closePath() {\n    this.array.push('Z');\n  }\n\n  public toString() {\n    return this.array.join(' ');\n  }\n}\n","import get from 'lodash/get';\nimport { memo, useMemo } from 'react';\n\nimport { getShift } from '../../data/data2d/Spectrum2D';\nimport { Datum2D } from '../../data/types/data2d';\nimport { useChartData } from '../context/ChartContext';\nimport { usePreferences } from '../context/PreferencesContext';\nimport { PathBuilder } from '../utility/PathBuilder';\n\nimport { get2DXScale, get2DYScale } from './utilities/scale';\n\ninterface ContoursPathsProps {\n  id: string;\n  color: string;\n  sign: string;\n  datum: Datum2D;\n}\n\nfunction ContoursPaths({\n  id: spectrumID,\n  sign,\n  color,\n  datum,\n}: ContoursPathsProps) {\n  const { margin, width, height, xDomain, yDomain, contours, activeSpectrum } =\n    useChartData();\n\n  const preferences = usePreferences();\n  const { xShift, yShift } = getShift(datum);\n\n  const isActive = useMemo(() => {\n    return activeSpectrum === null\n      ? true\n      : spectrumID === activeSpectrum.id\n      ? true\n      : false;\n  }, [activeSpectrum, spectrumID]);\n\n  function buildContourPath(data) {\n    const _scaleX = get2DXScale({ margin, width, xDomain });\n    const _scaleY = get2DYScale({ margin, height, yDomain });\n    const path = new PathBuilder();\n\n    for (const element of data) {\n      if (element.lines) {\n        const lines = element.lines;\n        if (lines.length < 1e6) {\n          for (let i = 0; i < lines.length; i += 4) {\n            path.moveTo(\n              _scaleX(lines[i] + xShift),\n              _scaleY(lines[i + 1] + yShift),\n            );\n            path.lineTo(\n              _scaleX(lines[i + 2] + xShift),\n              _scaleY(lines[i + 3] + yShift),\n            );\n          }\n        }\n      } else {\n        path.moveTo(\n          _scaleX(element[0].x + xShift),\n          _scaleY(element[0].y + yShift),\n        );\n\n        for (let j = 1; j < element.length; j++) {\n          path.lineTo(\n            _scaleX(element[j].x + xShift),\n            _scaleY(element[j].y + yShift),\n          );\n        }\n      }\n    }\n\n    path.closePath();\n    return path.toString();\n  }\n\n  const data = useMemo(() => {\n    return get(contours, `${spectrumID}.${sign}`, []);\n  }, [contours, sign, spectrumID]);\n\n  return (\n    <path\n      fill=\"none\"\n      data-test-id=\"spectrum-line\"\n      stroke={color}\n      strokeWidth=\"1\"\n      style={{\n        opacity: isActive\n          ? 1\n          : get(\n              preferences.current,\n              'controllers.dimmedSpectraTransparency',\n              0.1,\n            ),\n      }}\n      d={buildContourPath(data)}\n    />\n  );\n}\n\ninterface ContoursInnerProps {\n  data: Array<Datum2D>;\n  displayerKey: string;\n}\n\nfunction ContoursInner({ data, displayerKey }: ContoursInnerProps) {\n  return (\n    <g clipPath={`url(#${displayerKey}clip-chart-2d)`} className=\"contours\">\n      {data?.map((datum, index) => (\n        <g key={`${datum.id + index}`}>\n          {datum.display.isPositiveVisible && (\n            <ContoursPaths\n              id={datum.id}\n              sign=\"positive\"\n              datum={datum}\n              color={datum.display.positiveColor}\n            />\n          )}\n          {datum.display.isNegativeVisible && (\n            <ContoursPaths\n              id={datum.id}\n              sign=\"negative\"\n              datum={datum}\n              color={datum.display.negativeColor}\n            />\n          )}\n        </g>\n      ))}\n    </g>\n  );\n}\n\nconst MemoizedContours = memo(ContoursInner);\n\nexport default function Contours() {\n  const { data: spectra, displayerKey } = useChartData();\n  const data = useMemo<Array<Datum2D>>(() => {\n    return spectra.filter(\n      (datum) => datum.info.dimension === 2 && datum.info.isFt,\n    ) as Array<Datum2D>;\n  }, [spectra]);\n\n  return <MemoizedContours {...{ data, displayerKey }} />;\n}\n","import { DataXY, DoubleArray } from 'cheminfo-types';\nimport { xyReduce } from 'ml-spectra-processing';\nimport { useCallback } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nexport enum XYReducerDomainAxis {\n  XAxis = 'XAxis',\n  YAxis = 'YAxis',\n}\n\ntype XYReducerDomainAxisType = keyof typeof XYReducerDomainAxis;\n\nexport default function useXYReduce(\n  domainAxis: XYReducerDomainAxisType,\n): (data: { x: number[]; y: number[] }) => DataXY<DoubleArray> {\n  const { width, xDomain, yDomain } = useChartData();\n\n  return useCallback(\n    (data: { x: number[]; y: number[] }) => {\n      const { x, y } = data;\n      const [from, to] =\n        domainAxis === XYReducerDomainAxis.XAxis ? xDomain : yDomain;\n      return xyReduce(\n        { x, y },\n        { from, to, nbPoints: width * 4, optimize: true },\n      );\n    },\n    [domainAxis, width, xDomain, yDomain],\n  );\n}\n","import { useMemo, memo } from 'react';\n\nimport { Datum1D } from '../../data/types/data1d';\nimport { useChartData } from '../context/ChartContext';\nimport useXYReduce, { XYReducerDomainAxis } from '../hooks/useXYReduce';\nimport { PathBuilder } from '../utility/PathBuilder';\n\nimport { get1DYScale, get2DYScale } from './utilities/scale';\n\ninterface Left1DChartProps {\n  margin?: number;\n  data: Datum1D;\n}\n\nfunction Left1DChart({\n  margin: marignValue = 10,\n  data: spectrum,\n}: Left1DChartProps) {\n  const {\n    height: originHeight,\n    margin,\n    yDomain,\n    yDomains,\n    displayerKey,\n  } = useChartData();\n  const xyReduce = useXYReduce(XYReducerDomainAxis.YAxis);\n\n  const height = margin.left;\n\n  const paths = useMemo(() => {\n    if (spectrum) {\n      const scaleX = get2DYScale({\n        height: originHeight,\n        yDomain: [yDomain[0], yDomain[1]],\n        margin,\n      });\n      const scaleY = get1DYScale(yDomains[spectrum.id], height, marignValue);\n\n      const { x, re: y } = spectrum.data;\n      const pathPoints = xyReduce({ x, y });\n\n      const pathBuilder = new PathBuilder();\n\n      pathBuilder.moveTo(\n        scaleY(pathPoints.y[pathPoints.y.length - 1]),\n        scaleX(pathPoints.x.length - 1),\n      );\n\n      for (let i = pathPoints.x.length - 2; i >= 0; i--) {\n        pathBuilder.lineTo(scaleY(pathPoints.y[i]), scaleX(pathPoints.x[i]));\n      }\n\n      return pathBuilder.toString();\n    } else {\n      return undefined;\n    }\n  }, [\n    height,\n    margin,\n    marignValue,\n    originHeight,\n    spectrum,\n    xyReduce,\n    yDomain,\n    yDomains,\n  ]);\n\n  const mainHeight = originHeight - margin.bottom - margin.top;\n\n  if (!mainHeight || !height) return null;\n\n  return (\n    <svg\n      viewBox={`0 0 ${height} ${mainHeight + margin.top}`}\n      width={height}\n      height={mainHeight + margin.top}\n    >\n      <defs>\n        <clipPath id={`${displayerKey}clip-left`}>\n          <rect width={height} height={mainHeight} x=\"0\" y={margin.top} />\n        </clipPath>\n      </defs>\n      <g clipPath={`url(#${displayerKey}clip-left)`}>\n        <path className=\"line\" stroke=\"black\" fill=\"none\" d={paths} />\n      </g>\n    </svg>\n  );\n}\n\nexport default memo(Left1DChart);\n","import { useMemo, memo } from 'react';\n\nimport { Datum1D } from '../../data/types/data1d';\nimport { useChartData } from '../context/ChartContext';\nimport useXYReduce, { XYReducerDomainAxis } from '../hooks/useXYReduce';\nimport { PathBuilder } from '../utility/PathBuilder';\n\nimport { get1DYScale, get2DXScale } from './utilities/scale';\n\ninterface Top1DChartProps {\n  margin?: number;\n  data: Datum1D;\n}\n\nfunction Top1DChart({\n  margin: marginProps = 10,\n  data: spectrum,\n}: Top1DChartProps) {\n  const {\n    width,\n    margin: originMargin,\n    xDomain,\n    yDomains,\n    displayerKey,\n  } = useChartData();\n  const xyReduce = useXYReduce(XYReducerDomainAxis.XAxis);\n  const height = originMargin.top;\n\n  const paths = useMemo(() => {\n    if (spectrum) {\n      const scaleX = get2DXScale({ width, xDomain, margin: originMargin });\n      const scaleY = get1DYScale(yDomains[spectrum.id], height, marginProps);\n      const { x, re: y } = spectrum.data;\n      const pathPoints = xyReduce({ x, y });\n\n      const pathBuilder = new PathBuilder();\n      pathBuilder.moveTo(scaleX(pathPoints.x[0]), scaleY(pathPoints.y[0]));\n      for (let i = 1; i < pathPoints.x.length; i++) {\n        pathBuilder.lineTo(scaleX(pathPoints.x[i]), scaleY(pathPoints.y[i]));\n      }\n\n      return pathBuilder.toString();\n    } else {\n      return undefined;\n    }\n  }, [\n    height,\n    marginProps,\n    originMargin,\n    spectrum,\n    width,\n    xDomain,\n    xyReduce,\n    yDomains,\n  ]);\n\n  if (!width || !height) {\n    return null;\n  }\n\n  return (\n    <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\n      <defs>\n        <clipPath id={`${displayerKey}clip-top`}>\n          <rect\n            width={width - originMargin.left - originMargin.right}\n            height={height}\n            x={originMargin.left}\n            y={`${0}`}\n          />\n        </clipPath>\n      </defs>\n      <g clipPath={`url(#${displayerKey}clip-top)`}>\n        <path\n          className=\"line\"\n          stroke=\"red\"\n          fill=\"none\"\n          strokeWidth=\"1px\"\n          d={paths}\n        />\n      </g>\n    </svg>\n  );\n}\n\nexport default memo(Top1DChart);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport * as d3 from 'd3';\nimport { useEffect, useRef, memo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nimport { get2DXScale } from './utilities/scale';\n\nconst axisStyles = css`\n  user-select: none;\n\n  path,\n  line {\n    fill: none;\n    stroke: black;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n    user-select: none;\n  }\n`;\n\nconst defaultMargin = { right: 100, top: 0, left: 0, bottom: 0 };\n\ninterface XAxisProps {\n  show?: boolean;\n  label?: string;\n  margin?: {\n    top: number;\n    right: number;\n    bottom: number;\n    left: number;\n  };\n}\n\nfunction XAxis(props: XAxisProps) {\n  const {\n    show = true,\n    label = 'δ [ppm]',\n    margin: marginProps = defaultMargin,\n  } = props;\n\n  const state = useChartData();\n  const { xDomain, height, width, margin, tabActiveSpectrum, activeTab } =\n    state;\n\n  const refAxis = useRef<SVGGElement>(null);\n\n  useEffect(() => {\n    if (!show) return;\n    const scaleX = get2DXScale({ width, margin, xDomain });\n    const xAxis = d3.axisBottom(scaleX).ticks(8).tickFormat(d3.format('0'));\n\n    // @ts-expect-error actually well typed\n    d3.select(refAxis.current).call(xAxis);\n  }, [\n    activeTab,\n    height,\n    margin,\n    margin.bottom,\n    margin.left,\n    margin.right,\n    margin.top,\n    show,\n    tabActiveSpectrum,\n    width,\n    xDomain,\n  ]);\n\n  if (!width || !height) {\n    return null;\n  }\n\n  return (\n    <>\n      {show && (\n        <g\n          className=\"x\"\n          css={axisStyles}\n          transform={`translate(0,${\n            height - (margin.bottom + marginProps.bottom)\n          })`}\n          ref={refAxis}\n        >\n          <text fill=\"#000\" x={width - 60} y=\"20\" dy=\"0.71em\" textAnchor=\"end\">\n            {label}\n          </text>\n        </g>\n      )}\n    </>\n  );\n}\n\nexport default memo(XAxis);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport * as d3 from 'd3';\nimport { useEffect, useRef, memo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nimport { get2DYScale } from './utilities/scale';\n\nconst axisStyles = css`\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n\n  path,\n  line {\n    fill: none;\n    stroke: black;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n    user-select: 'none';\n    -webkit-user-select: none; /* Chrome all / Safari all */\n    -moz-user-select: none; /* Firefox all */\n  }\n`;\n\nconst defaultMargin = { right: 50, top: 0, bottom: 0, left: 0 };\n\ninterface YAxisProps {\n  show?: boolean;\n  label?: string;\n  margin?: {\n    right: number;\n    top: number;\n    bottom: number;\n    left: number;\n  };\n}\n\nfunction YAxis(props: YAxisProps) {\n  const {\n    show = true,\n    label = '',\n    margin: marginProps = defaultMargin,\n  } = props;\n\n  const refAxis = useRef<SVGGElement>(null);\n\n  const state = useChartData();\n  const { yDomain, width, height, activeTab, tabActiveSpectrum, margin } =\n    state;\n\n  useEffect(() => {\n    if (!show || !yDomain) return;\n    const scaleY = get2DYScale({ height, yDomain, margin });\n\n    const axis = d3.axisRight(scaleY).ticks(8).tickFormat(d3.format('0'));\n\n    // @ts-expect-error well typed\n    d3.select(refAxis.current).call(axis);\n  }, [show, yDomain, activeTab, tabActiveSpectrum, height, margin]);\n\n  if (!width || !height) {\n    return null;\n  }\n\n  return (\n    <>\n      <g\n        className=\"y\"\n        css={axisStyles}\n        transform={`translate(${width - marginProps.right})`}\n        ref={refAxis}\n      >\n        <text\n          fill=\"#000\"\n          x={-marginProps.top}\n          y={-(marginProps.right - 5)}\n          dy=\"0.71em\"\n          transform=\"rotate(-90)\"\n          textAnchor=\"end\"\n        >\n          {label}\n        </text>\n      </g>\n    </>\n  );\n}\n\nexport default memo(YAxis);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState, useEffect, useMemo } from 'react';\n\nimport { SignalKindsToInclude } from '../../../data/constants/SignalsKinds';\nimport { isSpectrum1D } from '../../../data/data1d/Spectrum1D';\nimport { useChartData } from '../../context/ChartContext';\nimport { get2DXScale, get2DYScale } from '../utilities/scale';\n\nconst lineStyle = css`\n  stroke: lightgrey;\n  opacity: 0.7;\n`;\n\ninterface IndicationLinesProps {\n  show: boolean;\n  axis: 'X' | 'Y';\n}\n\nfunction IndicationLines({ axis, show }: IndicationLinesProps) {\n  const {\n    data,\n    activeTab,\n    margin,\n    width,\n    height,\n    xDomain,\n    yDomain,\n    displayerMode,\n  } = useChartData();\n  const [deltas1D, setDeltas1D] = useState<Array<number>>([]);\n\n  const scaleX = get2DXScale({ margin, width, xDomain });\n  const scaleY = get2DYScale({ margin, height, yDomain });\n\n  useEffect(() => {\n    const split = activeTab.split(',');\n\n    const nucleus = axis === 'X' ? split[0] : axis === 'Y' ? split[1] : null;\n    if (nucleus !== null) {\n      const ranges = data\n        .filter(\n          (_datum) =>\n            _datum.display.isVisible === true &&\n            _datum.info.nucleus === nucleus,\n        )\n        .filter(isSpectrum1D)\n        .map((_datum) => _datum.ranges.values)\n        .flat();\n\n      const deltas = ranges\n        .map((_range) =>\n          _range.signals\n            .filter((_signal) =>\n              SignalKindsToInclude.some((_kind) => _signal.kind === _kind),\n            )\n            .map((_signal) => _signal.delta),\n        )\n        .flat();\n      setDeltas1D(deltas);\n    } else {\n      setDeltas1D([]);\n    }\n  }, [activeTab, axis, data, displayerMode]);\n\n  const indicationLines = useMemo(() => {\n    if (show === true && deltas1D.length > 0) {\n      const lines = deltas1D.map((_delta, i) => {\n        return axis === 'X' ? (\n          <line\n            css={lineStyle}\n            // eslint-disable-next-line react/no-array-index-key\n            key={`indicationLine${axis}${i}`}\n            x1={scaleX(_delta)}\n            x2={scaleX(_delta)}\n            y1={scaleY(yDomain[0])}\n            y2={scaleY(yDomain[1])}\n          />\n        ) : axis === 'Y' ? (\n          <line\n            css={lineStyle}\n            // eslint-disable-next-line react/no-array-index-key\n            key={`indicationLine${axis}${i}`}\n            x1={scaleX(xDomain[0])}\n            x2={scaleX(xDomain[1])}\n            y1={scaleY(_delta)}\n            y2={scaleY(_delta)}\n          />\n        ) : null;\n      });\n      return lines;\n    }\n  }, [axis, deltas1D, scaleX, scaleY, show, xDomain, yDomain]);\n\n  return <g>{indicationLines}</g>;\n}\n\nexport default IndicationLines;\n","import EventEmitter from 'eventemitter3';\n\nconst eventEmitter = new EventEmitter();\n\nconst Emitter = {\n  on: (event, fn) => eventEmitter.on(event, fn),\n  once: (event, fn) => eventEmitter.once(event, fn),\n  off: (event, fn) => eventEmitter.off(event, fn),\n  emit: (event, payload) => eventEmitter.emit(event, payload),\n};\n\nObject.freeze(Emitter);\n\nexport default Emitter;\n","/* eslint-disable @typescript-eslint/no-dynamic-delete */\nimport {\n  createContext,\n  useReducer,\n  useMemo,\n  useContext,\n  useCallback,\n  useEffect,\n} from 'react';\n\nconst assignmentContext = createContext<any>({});\n\nfunction assignmentReducer(state, action) {\n  switch (action.type) {\n    case 'ADD': {\n      const newState = {\n        ...state,\n        assignment: { ...state.assignment },\n      };\n      if (newState.assignment[action.payload.id[0]] === undefined) {\n        newState.assignment[action.payload.id[0]] = {};\n      }\n      if (\n        newState.assignment[action.payload.id[0]][action.payload.axis] ===\n        undefined\n      ) {\n        newState.assignment[action.payload.id[0]][action.payload.axis] = [];\n      }\n      // avoid duplicates\n      if (\n        !newState.assignment[action.payload.id[0]][\n          action.payload.axis\n        ].includes(action.payload.id[1])\n      ) {\n        newState.assignment[action.payload.id[0]][action.payload.axis].push(\n          action.payload.id[1],\n        );\n      }\n\n      return newState;\n    }\n    case 'REMOVE': {\n      const newState = {\n        ...state,\n        assignment: { ...state.assignment },\n      };\n      if (\n        newState.assignment[action.payload.id[0]]?.[action.payload.axis] !==\n        undefined\n      ) {\n        newState.assignment[action.payload.id[0]][action.payload.axis] =\n          newState.assignment[action.payload.id[0]][action.payload.axis].filter(\n            (_id) => _id !== action.payload.id[1],\n          );\n\n        if (\n          newState.assignment[action.payload.id[0]][action.payload.axis]\n            .length === 0\n        ) {\n          delete newState.assignment[action.payload.id[0]][action.payload.axis];\n        }\n        if (\n          Object.keys(newState.assignment[action.payload.id[0]]).length === 0\n        ) {\n          delete newState.assignment[action.payload.id[0]];\n        }\n      }\n\n      return newState;\n    }\n    case 'REMOVE_ALL': {\n      const newState = {\n        ...state,\n        assignment: { ...state.assignment },\n      };\n      // takes an array now to delete multiple identifiers\n      action.payload.id.forEach((_id) => {\n        if (newState.assignment[_id]?.[action.payload.axis] !== undefined) {\n          delete newState.assignment[_id][action.payload.axis];\n          if (Object.keys(newState.assignment[_id]).length === 0) {\n            delete newState.assignment[_id];\n          }\n        }\n      });\n\n      return newState;\n    }\n    case 'SET_IS_ACTIVE': {\n      return {\n        ...state,\n        isActive:\n          action.payload.id !== undefined && action.payload.axis !== undefined,\n        activeID: action.payload.id,\n        activeAxis: action.payload.axis,\n      };\n    }\n    case 'SET_IS_ON_HOVER': {\n      return {\n        ...state,\n        isOnHover: action.payload.id !== undefined,\n        onHoverID: action.payload.id,\n        onHoverAxis: action.payload.axis,\n      };\n    }\n    case 'DELETE_RECORD': {\n      const newState = {\n        ...state,\n        assignment: { ...state.assignment },\n      };\n\n      delete newState.assignment[action.payload.id];\n\n      if (newState.isActive && newState.activeID === action.payload.id) {\n        newState.isActive = false;\n        newState.activeID = undefined;\n        newState.activeAxis = undefined;\n      }\n      if (newState.isOnHover && newState.onHoverID === action.payload.id) {\n        newState.isOnHover = false;\n        newState.onHoverID = undefined;\n        newState.onHoverAxis = undefined;\n      }\n\n      return newState;\n    }\n    default: {\n      throw new Error(`unknown action type: ${action.type}`);\n    }\n  }\n}\n\nconst emptyState = {\n  assignment: {},\n  isActive: false,\n  activeID: undefined,\n  activeAxis: undefined,\n  isOnHover: false,\n  onHoverID: undefined,\n  onHoverAxis: undefined,\n};\n\nexport function AssignmentProvider(props) {\n  const { spectraData } = props;\n  const [assignment, dispatch] = useReducer(assignmentReducer, emptyState);\n  const contextValue = useMemo(() => ({ assignment, dispatch }), [assignment]);\n\n  function initAssignmentDataRanges(range, _contextValue) {\n    _contextValue.dispatch({\n      type: 'DELETE_RECORD',\n      payload: { id: range.id },\n    });\n    (range.diaIDs || []).forEach((_diaID) =>\n      _contextValue.dispatch({\n        type: 'ADD',\n        payload: { id: [range.id, _diaID], axis: 'x' },\n      }),\n    );\n    range.signals.forEach((signal) =>\n      (signal.diaIDs || []).forEach((_diaID) =>\n        _contextValue.dispatch({\n          type: 'ADD',\n          payload: { id: [signal.id, _diaID], axis: 'x' },\n        }),\n      ),\n    );\n  }\n\n  function initAssignmentDataZones(zone, _contextValue) {\n    _contextValue.dispatch({\n      type: 'DELETE_RECORD',\n      payload: { id: zone.id },\n    });\n    (zone.y.diaIDs || []).forEach((_diaID) =>\n      _contextValue.dispatch({\n        type: 'ADD',\n        payload: { id: [zone.id, _diaID], axis: 'y' },\n      }),\n    );\n    (zone.x.diaIDs || []).forEach((_diaID) =>\n      _contextValue.dispatch({\n        type: 'ADD',\n        payload: { id: [zone.id, _diaID], axis: 'x' },\n      }),\n    );\n    zone.signals.forEach((signal) => {\n      (signal.x.diaIDs || []).forEach((_diaID) =>\n        _contextValue.dispatch({\n          type: 'ADD',\n          payload: { id: [signal.id, _diaID], axis: 'x' },\n        }),\n      );\n      (signal.y.diaIDs || []).forEach((_diaID) =>\n        _contextValue.dispatch({\n          type: 'ADD',\n          payload: { id: [signal.id, _diaID], axis: 'y' },\n        }),\n      );\n    });\n  }\n\n  useEffect(() => {\n    if (spectraData) {\n      spectraData.forEach((spectrum) => {\n        if (spectrum.info.dimension === 1) {\n          spectrum.ranges.values.forEach((range) =>\n            initAssignmentDataRanges(range, contextValue),\n          );\n        } else if (spectrum.info.dimension === 2) {\n          spectrum.zones.values.forEach((zone) =>\n            initAssignmentDataZones(zone, contextValue),\n          );\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [spectraData]);\n\n  return (\n    <assignmentContext.Provider value={contextValue}>\n      {props.children}\n    </assignmentContext.Provider>\n  );\n}\n\nexport function useAssignmentData() {\n  return useContext(assignmentContext);\n}\n\nexport function useAssignment(key) {\n  const context = useAssignmentData();\n\n  if ((typeof key !== 'string' && typeof key !== 'number') || key === '') {\n    throw new Error(`assignment key must be a non-empty string or number`);\n  }\n  const id = String(key);\n\n  const isActive = useMemo(() => {\n    return context.assignment.isActive && context.assignment.activeID === id;\n  }, [context.assignment.activeID, context.assignment.isActive, id]);\n\n  const activeAxis = useMemo(() => {\n    return isActive ? context.assignment.activeAxis : undefined;\n  }, [context.assignment.activeAxis, isActive]);\n\n  const assigned = useMemo(() => {\n    return context.assignment.assignment[id]\n      ? context.assignment.assignment[id]\n      : [];\n  }, [context.assignment.assignment, id]);\n\n  const isOnHover = useMemo(() => {\n    return context.assignment.isOnHover && context.assignment.onHoverID === id;\n  }, [context.assignment.isOnHover, context.assignment.onHoverID, id]);\n\n  const onHoverAxis = useMemo(() => {\n    return isOnHover ? context.assignment.onHoverAxis : undefined;\n  }, [context.assignment.onHoverAxis, isOnHover]);\n\n  const add = useCallback(\n    (_id) => {\n      context.dispatch({\n        type: 'ADD',\n        payload: { id: [id, _id], axis: activeAxis },\n      });\n    },\n    [activeAxis, context, id],\n  );\n\n  const remove = useCallback(\n    (_id) => {\n      context.dispatch({\n        type: 'REMOVE',\n        payload: { id: [id, _id], axis: activeAxis },\n      });\n    },\n    [activeAxis, context, id],\n  );\n\n  const removeAll = useCallback(\n    (axis) => {\n      context.dispatch({\n        type: 'REMOVE_ALL',\n        payload: { id: [id], axis },\n      });\n    },\n    [context, id],\n  );\n\n  const toggle = useCallback(\n    (_id) => {\n      if (\n        assigned[activeAxis] === undefined ||\n        !assigned[activeAxis].includes(_id)\n      ) {\n        add(_id);\n      } else {\n        remove(_id);\n      }\n    },\n    [activeAxis, add, assigned, remove],\n  );\n\n  // totally deletion of a record from assignment storage\n  const deleteRecord = useCallback(() => {\n    context.dispatch({\n      type: 'DELETE_RECORD',\n      payload: { id },\n    });\n  }, [context, id]);\n\n  const onClick = useCallback(\n    (axis) => {\n      context.dispatch({\n        type: 'SET_IS_ACTIVE',\n        payload: {\n          id: !isActive ? id : undefined,\n          axis: !isActive && id !== undefined ? axis : undefined,\n        },\n      });\n    },\n    [context, id, isActive],\n  );\n\n  const setIsOnHover = useCallback(\n    (action, axis) => {\n      if (action === 'enter') {\n        context.dispatch({\n          type: 'SET_IS_ON_HOVER',\n          payload: {\n            id: id,\n            axis: id !== undefined ? axis : undefined,\n          },\n        });\n      } else if (action === 'leave') {\n        context.dispatch({\n          type: 'SET_IS_ON_HOVER',\n          payload: {},\n        });\n      }\n    },\n    [context, id],\n  );\n\n  const onMouseEnter = useCallback(\n    (axis) => setIsOnHover('enter', axis),\n    [setIsOnHover],\n  );\n\n  const onMouseLeave = useCallback(\n    (axis) => setIsOnHover('leave', axis),\n    [setIsOnHover],\n  );\n\n  return {\n    id,\n    isActive,\n    activeAxis,\n    assigned,\n    add,\n    remove,\n    removeAll,\n    toggle,\n    deleteRecord,\n    onClick,\n    isOnHover,\n    onHoverAxis,\n    onMouseEnter,\n    onMouseLeave,\n  };\n}\n\nexport function filterForIDsWithAssignment(assignmentData, ids) {\n  return ids.filter((id) =>\n    Object.keys(assignmentData.assignment).filter((_id) => _id === id),\n  );\n}\n","import {\n  createContext,\n  useReducer,\n  useMemo,\n  useContext,\n  useCallback,\n  useEffect,\n} from 'react';\n\nexport enum HighlightedSource {\n  PEAK = 'PEAK',\n  INTEGRAL = 'INTEGRAL',\n  SIGNAL = 'SIGNAL',\n  RANGE = 'RANGE',\n  ZONE = 'ZONE',\n  EXCLUSION_ZONE = 'EXCLUSION_ZONE',\n  DATABASE = 'DATABASE',\n  UNKNOWN = 'UNKNOWN',\n}\n\ntype HighlightedSourceType = keyof typeof HighlightedSource;\n\ninterface SourceData {\n  type: HighlightedSourceType;\n  extra?: any;\n}\n\ntype HighlightActions = 'HIDE' | 'SHOW' | 'SET_PERMANENT' | 'UNSET_PERMANENT';\n\ninterface HighlightState {\n  highlights: Record<string, number>;\n  highlighted: string[];\n  highlightedPermanently: string[];\n  sourceData: SourceData | null;\n}\n\ninterface HighlightContextProps {\n  highlight: HighlightState;\n  dispatch: (props: { type: HighlightActions; payload?: any }) => void;\n  remove: () => void;\n}\n\nconst emptyState = {\n  highlight: {\n    highlights: {},\n    highlighted: [],\n    highlightedPermanently: [],\n    sourceData: null,\n  },\n  dispatch: () => null,\n  remove: () => null,\n};\n\nconst highlightContext = createContext<HighlightContextProps>(emptyState);\n\nfunction highlightReducer(state, action) {\n  switch (action.type) {\n    case 'SHOW': {\n      const { convertedHighlights, sourceData } = action.payload;\n      const { type = HighlightedSource.UNKNOWN, extra = null } =\n        sourceData || {};\n\n      const newState = {\n        ...state,\n        highlights: { ...state.highlights },\n        sourceData: { type, extra },\n      };\n      for (const value of convertedHighlights) {\n        if (!(value in newState.highlights)) {\n          newState.highlights[value] = 1;\n        }\n      }\n      newState.highlighted = Object.keys(newState.highlights);\n\n      return newState;\n    }\n    case 'HIDE': {\n      const { convertedHighlights } = action.payload;\n\n      const newState = {\n        ...state,\n        highlights: { ...state.highlights },\n        sourceData: null,\n      };\n      for (const value of convertedHighlights) {\n        if (value in newState.highlights) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete newState.highlights[value];\n        }\n      }\n      newState.highlighted = Object.keys(newState.highlights);\n      return newState;\n    }\n    case 'SET_PERMANENT': {\n      const newState = {\n        ...state,\n        // allow just one permanent highlights group at same time\n        highlightedPermanently: action.payload,\n      };\n\n      return newState;\n    }\n    case 'UNSET_PERMANENT': {\n      const newState = {\n        ...state,\n        highlightedPermanently: [],\n      };\n\n      return newState;\n    }\n    default: {\n      throw new Error(`unknown action type: ${action.type}`);\n    }\n  }\n}\n\nexport function HighlightProvider(props) {\n  const [highlight, dispatch] = useReducer(\n    highlightReducer,\n    emptyState.highlight,\n  );\n\n  const contextValue = useMemo(() => {\n    function remove() {\n      dispatch({\n        type: 'HIDE',\n        payload: { convertedHighlights: highlight.highlighted },\n      });\n    }\n    return { highlight, dispatch, remove };\n  }, [highlight]);\n\n  return (\n    <highlightContext.Provider value={contextValue}>\n      {props.children}\n    </highlightContext.Provider>\n  );\n}\n\nexport function useHighlightData() {\n  return useContext(highlightContext);\n}\n\n/**\n * @param {Array<string | number>}  highlights\n * @param {SourceData = null} sourceData\n */\nexport function useHighlight(\n  highlights: (string | number)[],\n  sourceData: SourceData | null = null,\n) {\n  if (!Array.isArray(highlights)) {\n    throw new Error('highlights must be an array');\n  }\n  const { dispatch, highlight } = useHighlightData();\n\n  const convertedHighlights = useMemo(() => {\n    const newHighlights: Array<any> = [];\n    for (const highlight of highlights) {\n      if (typeof highlight !== 'string' && typeof highlight !== 'number') {\n        throw new Error(`highlight key must be a string or number`);\n      }\n      if (highlight !== '') {\n        newHighlights.push(String(highlight));\n      }\n    }\n    return newHighlights;\n  }, [highlights]);\n\n  useEffect(() => {\n    // if deletion of component then also delete its highlight information -> componentWillUnmount\n    return () => {\n      dispatch({\n        type: 'HIDE',\n        payload: { convertedHighlights: [] },\n      });\n      dispatch({\n        type: 'UNSET_PERMANENT',\n      });\n    };\n  }, [dispatch]);\n\n  const isActive = useMemo(() => {\n    return highlight.highlighted.some((key) =>\n      convertedHighlights.includes(key),\n    );\n  }, [convertedHighlights, highlight.highlighted]);\n\n  const isActivePermanently = useMemo(() => {\n    return highlight.highlightedPermanently.some((key) =>\n      convertedHighlights.includes(key),\n    );\n  }, [convertedHighlights, highlight.highlightedPermanently]);\n\n  const show = useCallback(() => {\n    dispatch({\n      type: 'SHOW',\n      payload: {\n        convertedHighlights,\n        sourceData,\n      },\n    });\n  }, [dispatch, convertedHighlights, sourceData]);\n\n  const hide = useCallback(() => {\n    dispatch({\n      type: 'HIDE',\n      payload: {\n        convertedHighlights,\n      },\n    });\n  }, [convertedHighlights, dispatch]);\n\n  const add = useCallback(\n    (id) => {\n      dispatch({\n        type: 'SHOW',\n        payload: { convertedHighlights: [], id },\n      });\n    },\n    [dispatch],\n  );\n\n  const remove = useCallback(\n    (id) => {\n      dispatch({\n        type: 'HIDE',\n        payload: { convertedHighlights: [], id },\n      });\n    },\n    [dispatch],\n  );\n\n  const click = useCallback(\n    (e) => {\n      if (e) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      if (!isActivePermanently) {\n        dispatch({\n          type: 'SET_PERMANENT',\n          payload: convertedHighlights,\n        });\n      } else {\n        dispatch({\n          type: 'UNSET_PERMANENT',\n        });\n      }\n    },\n    [convertedHighlights, dispatch, isActivePermanently],\n  );\n\n  return useMemo(() => {\n    return {\n      isActive,\n      onHover: {\n        onMouseEnter: show,\n        onMouseLeave: hide,\n      },\n      onClick: click,\n      show,\n      hide,\n      isActivePermanently,\n      click,\n      add,\n      remove,\n    };\n  }, [add, click, hide, isActive, isActivePermanently, remove, show]);\n}\n","export const ConcatenationString = '___';\n\nexport function buildID(prefix: string, suffix: string): string {\n  return `${prefix}${ConcatenationString}${suffix}`;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useMemo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nimport { get2DXScale, get2DYScale } from './utilities/scale';\n\nconst lineStyle = css`\n  stroke: green;\n  stroke-width: 2;\n  opacity: 0.5;\n`;\n\ninterface SignalDeltaLineProps {\n  delta: number;\n  axis: 'X' | 'Y';\n  show: boolean;\n}\n\nfunction SignalDeltaLine({ delta, axis, show }: SignalDeltaLineProps) {\n  const { margin, width, height, xDomain, yDomain } = useChartData();\n  const scaleX = get2DXScale({ margin, width, xDomain });\n  const scaleY = get2DYScale({ margin, height, yDomain });\n\n  const line = useMemo(() => {\n    return show === true ? (\n      axis === 'X' ? (\n        <line\n          css={lineStyle}\n          key={`signalLine_${delta}_X`}\n          x1={scaleX(delta)}\n          x2={scaleX(delta)}\n          y1={scaleY(yDomain[0])}\n          y2={scaleY(yDomain[1])}\n        />\n      ) : axis === 'Y' ? (\n        <line\n          css={lineStyle}\n          key={`signalLine_${delta}_Y`}\n          x1={scaleX(xDomain[0])}\n          x2={scaleX(xDomain[1])}\n          y1={scaleY(delta)}\n          y2={scaleY(delta)}\n        />\n      ) : null\n    ) : null;\n  }, [axis, delta, scaleX, scaleY, show, xDomain, yDomain]);\n\n  return <g>{line}</g>;\n}\n\nexport default SignalDeltaLine;\n","/** @jsxImportSource @emotion/react */\n\nimport { useMemo } from 'react';\n\nimport { Signal2D } from '../../../data/types/data2d';\nimport { buildID } from '../../../data/utilities/Concatenation';\nimport { useHighlight } from '../../highlight';\nimport SignalDeltaLine from '../SignalDeltaLine';\n\ninterface SignalCrosshairProps {\n  signal: Signal2D;\n}\n\nfunction SignalCrosshair({ signal }: SignalCrosshairProps) {\n  const highlightIDsX = useMemo(() => {\n    return [buildID(signal.id, 'Crosshair'), buildID(signal.id, 'Crosshair_X')];\n  }, [signal.id]);\n\n  const highlightIDsY = useMemo(() => {\n    return [buildID(signal.id, 'Crosshair'), buildID(signal.id, 'Crosshair_Y')];\n  }, [signal.id]);\n\n  const highlightX = useHighlight(highlightIDsX);\n  const highlightY = useHighlight(highlightIDsY);\n  const highlight = useHighlight([signal.id]);\n\n  if (!signal?.x?.delta || !signal?.y?.delta) return null;\n\n  return (\n    <g>\n      <SignalDeltaLine\n        delta={signal.x.delta}\n        axis=\"X\"\n        show={highlightX.isActive || highlight.isActive}\n      />\n      <SignalDeltaLine\n        delta={signal.y.delta}\n        axis=\"Y\"\n        show={highlightY.isActive || highlight.isActive}\n      />\n    </g>\n  );\n}\n\nexport default SignalCrosshair;\n","/** @jsxImportSource @emotion/react */\n\nimport { memo, useState, useEffect, useCallback } from 'react';\n\nimport { Signal2D } from '../../../data/types/data2d';\nimport { buildID } from '../../../data/utilities/Concatenation';\nimport { useAssignment } from '../../assignment';\nimport { useChartData } from '../../context/ChartContext';\nimport { useHighlightData, useHighlight } from '../../highlight';\nimport { get2DXScale, get2DYScale } from '../utilities/scale';\n\nimport SignalCrosshair from './SignalCrosshair';\n\ninterface SignalProps {\n  signal: Signal2D;\n  isVisible: {\n    signals?: boolean;\n    peaks?: boolean;\n    zones?: boolean;\n  };\n}\n\nconst Signal = memo(({ signal, isVisible }: SignalProps) => {\n  const { margin, width, height, xDomain, yDomain } = useChartData();\n  const scaleX = get2DXScale({ margin, width, xDomain });\n  const scaleY = get2DYScale({ margin, height, yDomain });\n\n  const buildIDs = useCallback((id) => {\n    return [id].concat(buildID(id, 'X'), buildID(id, 'Y'));\n  }, []);\n\n  const assignment = useAssignment(signal.id);\n  const highlight = useHighlight(buildIDs(assignment.id));\n  const highlightData = useHighlightData();\n\n  const [isHighlighted, setIsHighlighted] = useState(false);\n\n  useEffect(() => {\n    if (\n      highlightData.highlight.highlighted.some((_highlighted) =>\n        buildIDs(signal.id).includes(_highlighted),\n      ) ||\n      assignment.isActive\n    ) {\n      setIsHighlighted(true);\n    } else {\n      setIsHighlighted(false);\n    }\n  }, [\n    assignment.isActive,\n    buildIDs,\n    highlightData.highlight.highlighted,\n    signal.id,\n  ]);\n\n  if (!signal) return null;\n\n  return (\n    <g\n      className=\"zone-signal\"\n      onMouseEnter={() => {\n        assignment.onMouseEnter(undefined);\n        highlight.show();\n      }}\n      onMouseLeave={() => {\n        assignment.onMouseLeave(undefined);\n        highlight.hide();\n      }}\n    >\n      {isVisible.signals && (\n        <g>\n          <circle\n            key={signal.id}\n            cx={scaleX(signal.x.delta || 0)}\n            cy={scaleY(signal.y.delta || 0)}\n            r={isHighlighted ? 6 : 4}\n            fill={isHighlighted ? 'green' : 'darkgreen'}\n          />\n          <SignalCrosshair signal={signal} />\n        </g>\n      )}\n      <g className=\"zone-signal-peak\">\n        {isVisible.peaks &&\n          signal.peaks &&\n          signal.peaks.map((peak, i) => (\n            <circle\n              key={`${signal.id + i}`}\n              cx={scaleX(peak.x)}\n              cy={scaleY(peak.y)}\n              r={2}\n              fill=\"black\"\n            />\n          ))}\n      </g>\n    </g>\n  );\n});\n\nexport default Signal;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState, useEffect } from 'react';\n\nimport { Zone as ZoneDataProps } from '../../../data/types/data2d';\nimport { checkZoneKind } from '../../../data/utilities/ZoneUtilities';\nimport { useAssignment } from '../../assignment';\nimport { useChartData } from '../../context/ChartContext';\nimport { HighlightedSource, useHighlight } from '../../highlight';\nimport { get2DXScale, get2DYScale } from '../utilities/scale';\n\nimport Signal from './Signal';\n\nconst stylesOnHover = css`\n  pointer-events: bounding-box;\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n\n  .delete-button {\n    visibility: hidden;\n  }\n`;\n\nconst stylesHighlighted = css`\n  pointer-events: bounding-box;\n\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  .Integral-area {\n    fill: #ff6f0057;\n  }\n  .delete-button {\n    visibility: visible;\n    cursor: pointer;\n  }\n`;\n\ninterface ZoneProps {\n  zoneData: ZoneDataProps;\n  isVisible: {\n    zones: boolean;\n  };\n}\n\nconst Zone = ({ zoneData, isVisible }: ZoneProps) => {\n  const { x, y, id, signals } = zoneData;\n  const assignmentZone = useAssignment(id);\n  const highlightZone = useHighlight([assignmentZone.id], {\n    type: HighlightedSource.ZONE,\n    extra: { id: assignmentZone.id },\n  });\n  const { margin, width, height, xDomain, yDomain } = useChartData();\n  const scaleX = get2DXScale({ margin, width, xDomain });\n  const scaleY = get2DYScale({ margin, height, yDomain });\n\n  const { from: x1 = 0, to: x2 = 0 } = x;\n  const { from: y1 = 0, to: y2 = 0 } = y;\n\n  const [reduceOpacity, setReduceOpacity] = useState(false);\n\n  useEffect(() => {\n    setReduceOpacity(!checkZoneKind(zoneData));\n  }, [zoneData]);\n\n  return (\n    <g\n      css={\n        highlightZone.isActive || assignmentZone.isActive\n          ? stylesHighlighted\n          : stylesOnHover\n      }\n      key={id}\n      onMouseEnter={() => {\n        assignmentZone.onMouseEnter(undefined);\n        highlightZone.show();\n      }}\n      onMouseLeave={() => {\n        assignmentZone.onMouseLeave(undefined);\n        highlightZone.hide();\n      }}\n    >\n      {isVisible.zones && (\n        <g transform={`translate(${scaleX(x2)},${scaleY(y1)})`}>\n          <rect\n            x=\"0\"\n            width={scaleX(x1) - scaleX(x2)}\n            height={scaleY(y2) - scaleY(y1)}\n            className=\"Integral-area\"\n            fill=\"#0000000f\"\n            stroke={reduceOpacity ? '#343a40' : 'darkgreen'}\n            strokeWidth={reduceOpacity ? '0' : '1'}\n          />\n        </g>\n      )}\n      {signals.map((_signal, i) => (\n        <Signal key={`${id + i}`} signal={_signal} isVisible={isVisible} />\n      ))}\n    </g>\n  );\n};\n\nexport default Zone;\n","import { useEffect, useState, memo } from 'react';\n\nimport {\n  Datum2D,\n  Display2D,\n  Zones as ZonesProps,\n} from '../../../data/types/data2d';\nimport { useChartData } from '../../context/ChartContext';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport Events from '../../utility/Events';\n\nimport Zone from './Zone';\n\ninterface ZonesInnerProps {\n  zones: ZonesProps;\n  display: Display2D;\n  displayerKey: string;\n}\n\nfunction ZonesInner({ zones, display, displayerKey }: ZonesInnerProps) {\n  const [isVisible, setVisibility] = useState({\n    zones: true,\n    signals: true,\n    peaks: true,\n  });\n\n  useEffect(() => {\n    Events.on('onZonesVisibilityChange', ({ key }) => {\n      setVisibility((prevVisiblity) => ({\n        ...prevVisiblity,\n        [key]: !prevVisiblity[key],\n      }));\n    });\n  }, []);\n\n  return (\n    <g clipPath={`url(#${displayerKey}clip-chart-2d)`} className=\"2D-Zones\">\n      {display.isVisible &&\n        zones.values.map((zone) => (\n          <g className=\"zone\" key={zone.id}>\n            <Zone zoneData={zone} isVisible={isVisible} />\n          </g>\n        ))}\n    </g>\n  );\n}\n\nconst MemoizedZones = memo(ZonesInner);\n\nconst emptyData = { zones: {}, display: {} };\n\nexport default function Zones() {\n  const { displayerKey } = useChartData();\n\n  const { zones, display } = useSpectrum(emptyData) as Datum2D;\n\n  return <MemoizedZones {...{ zones, display, displayerKey }} />;\n}\n","import { memo } from 'react';\n\nimport { Datum1D } from '../../data/types/data1d';\nimport { useChartData } from '../context/ChartContext';\nimport { Margin } from '../reducer/Reducer';\n\nimport Contours from './Contours';\nimport Left1DChart from './Left1DChart';\nimport Top1DChart from './Top1DChart';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport IndicationLines from './zones/IndicationLines';\nimport Zones from './zones/Zones';\n\ninterface Chart2DProps {\n  spectra?: Datum1D[];\n}\n\ninterface Chart2DInnerProps extends Chart2DProps {\n  width: number;\n  height: number;\n  margin: Margin;\n  displayerKey: string;\n}\n\nfunction chart2DInner({\n  spectra,\n  width,\n  height,\n  margin,\n  displayerKey,\n}: Chart2DInnerProps) {\n  return (\n    <svg\n      viewBox={`0 0 ${width} ${height}`}\n      width={width}\n      height={height}\n      id=\"nmrSVG\"\n    >\n      <defs>\n        <clipPath id={`${displayerKey}clip-chart-2d`}>\n          <rect\n            width={width - margin.left - margin.right}\n            height={height - margin.top - margin.bottom}\n            x={margin.left}\n            y={margin.top}\n          />\n        </clipPath>\n      </defs>\n      <rect\n        width={width - margin.left - margin.right}\n        height={height - margin.top - margin.bottom}\n        x={margin.left}\n        y={margin.top}\n        stroke=\"black\"\n        strokeWidth=\"1\"\n        fill=\"transparent\"\n      />\n      {spectra?.[0] && <Top1DChart data={spectra[0]} />}\n      {spectra?.[1] && <Left1DChart data={spectra[1]} />}\n      <Contours />\n      <Zones />\n      <IndicationLines axis=\"X\" show />\n      <IndicationLines axis=\"Y\" show />\n\n      <g className=\"container\" style={{ pointerEvents: 'none' }}>\n        <XAxis />\n        <YAxis />\n      </g>\n    </svg>\n  );\n}\n\nconst MemoizedChart2D = memo(chart2DInner);\n\nexport default function Chart2D({ spectra }: Chart2DProps) {\n  const { width, height, margin, displayerKey } = useChartData();\n\n  return (\n    <MemoizedChart2D {...{ spectra, width, height, margin, displayerKey }} />\n  );\n}\n","import lodashGet from 'lodash/get';\nimport Numeral from 'numeral';\nimport { useMemo } from 'react';\n\nimport { usePreferences } from '../context/PreferencesContext';\n\nfunction FormatNumber(value, format, prefix = '', suffix = '') {\n  return prefix + Numeral(value).format(format) + suffix;\n}\n\ntype ReturnFunction = (\n  value?: number | string,\n  formatKey?: string,\n  prefix?: string,\n  suffix?: string,\n) => string;\n\nexport function useFormatNumberByNucleus(\n  nucleus?: Array<string>,\n): Array<ReturnFunction>;\nexport function useFormatNumberByNucleus(nucleus?: string): ReturnFunction;\nexport function useFormatNumberByNucleus(nucleus?: string | Array<string>) {\n  const preferences = usePreferences();\n  const nucleusByKey = lodashGet(\n    preferences.current,\n    `formatting.nucleusByKey`,\n    {\n      ppm: '0.0',\n      hz: '0.0',\n    },\n  );\n\n  return useMemo(() => {\n    function formatFun(n: string) {\n      return (value: any, formatKey = 'ppm', prefix = '', suffix = '') => {\n        return (\n          prefix +\n          Numeral(Number(value)).format(\n            lodashGet(nucleusByKey, `${n.toLowerCase()}.${formatKey}`, '0.0'),\n          ) +\n          suffix\n        );\n      };\n    }\n\n    if (!nucleus) {\n      return () => undefined;\n    }\n\n    if (typeof nucleus === 'string') {\n      return formatFun(nucleus);\n    } else if (Array.isArray(nucleus)) {\n      return nucleus.map((n) => formatFun(n));\n    } else {\n      throw Error('nuclus must be string or array of string');\n    }\n  }, [nucleus, nucleusByKey]);\n}\n\nexport function getNumberOfDecimals(value: number | string) {\n  value = String(value).trim();\n  const lastIndex = value.lastIndexOf('.');\n  return lastIndex > 0 ? value.substr(lastIndex).split('').length - 1 : 0;\n}\n\nexport default FormatNumber;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\nimport { useContext, useMemo, Fragment } from 'react';\nimport { MF } from 'react-mf';\n\nimport { get1DDataXY } from '../../data/data1d/Spectrum1D/get1DDataXY';\nimport { BrushContext } from '../EventsTrackers/BrushTracker';\nimport { MouseContext } from '../EventsTrackers/MouseTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { options } from '../toolbar/ToolTypes';\nimport { useFormatNumberByNucleus } from '../utility/FormatNumber';\n\nimport { getLayoutID, LAYOUT } from './utilities/DimensionLayout';\nimport { get2DXScale, get1DYScale, get2DYScale } from './utilities/scale';\n\nconst styles = css`\n  display: flex;\n  flex-firection: row;\n  align-items: center;\n  pointer-events: bounding-box;\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n  background-color: #f7f7f7;\n  height: 30px;\n  padding: 6px;\n  color: #8d0018;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  div {\n    margin: 0px 10px;\n    display: inline-block;\n\n    .label {\n      font-size: 12px;\n      color: #4d4d4d;\n      font-weight: bold;\n    }\n    .value {\n      font-weight: bold;\n      font-size: 14px;\n    }\n    .unit {\n      font-weight: bold;\n      font-size: 10px;\n    }\n  }\n`;\n\nfunction FooterBanner({ layout, data1D }) {\n  const position = useContext(MouseContext);\n  const { startX, endX, startY, endY, step } = useContext(BrushContext);\n  const {\n    margin,\n    width,\n    height,\n    activeSpectrum,\n    xDomain,\n    yDomain,\n    yDomains,\n    activeTab,\n    data,\n    toolOptions: { selectedTool },\n  } = useChartData();\n\n  const trackID =\n    position &&\n    getLayoutID(layout, {\n      startX: position.x,\n      startY: position.y,\n    });\n\n  const nucleuses = activeTab.split(',');\n  const [formatX, formatY] = useFormatNumberByNucleus(nucleuses);\n\n  const scaleX = useMemo(() => {\n    if (!data1D || data1D.length === 0) {\n      return get2DXScale({ width, margin, xDomain });\n    }\n    if (selectedTool !== options.slicingTool.id) {\n      switch (trackID) {\n        case LAYOUT.TOP_1D:\n        case LAYOUT.CENTER_2D: {\n          return get2DXScale({ width, margin, xDomain });\n        }\n        case LAYOUT.LEFT_1D: {\n          return get2DYScale({ height, margin, yDomain });\n        }\n        default:\n          return null;\n      }\n    }\n    return null;\n  }, [data1D, height, margin, selectedTool, trackID, width, xDomain, yDomain]);\n\n  const scaleY = useMemo(() => {\n    if (!data1D || data1D.length === 0) {\n      return get2DYScale({ height, margin, yDomain });\n    }\n    if (selectedTool !== options.slicingTool.id) {\n      switch (trackID) {\n        case LAYOUT.CENTER_2D: {\n          return get2DYScale({ height, margin, yDomain });\n        }\n        case LAYOUT.TOP_1D: {\n          return data1D[0]\n            ? get1DYScale(yDomains[data1D[0].id], margin.top)\n            : null;\n        }\n        case LAYOUT.LEFT_1D: {\n          return data1D[1]\n            ? get1DYScale(yDomains[data1D[1].id], margin.left)\n            : null;\n        }\n        default:\n          return null;\n      }\n    }\n    return null;\n  }, [data1D, height, margin, selectedTool, trackID, yDomain, yDomains]);\n\n  if (\n    !activeSpectrum ||\n    !position ||\n    position.y < 10 ||\n    position.x < 10 ||\n    position.x > width - margin.right ||\n    position.y > height - margin.bottom\n  ) {\n    return <div css={styles} />;\n  }\n  const getRealYValue = (cordinate) => {\n    let index: number | null = null;\n    if (trackID === LAYOUT.TOP_1D) {\n      index = 0;\n    } else if (trackID === LAYOUT.LEFT_1D) {\n      index = 1;\n    }\n    if (index != null && scaleX != null) {\n      const datum = get1DDataXY(data1D[index]);\n      const xIndex = xFindClosestIndex(datum.x, scaleX.invert(cordinate));\n      return datum.y[xIndex];\n    }\n    return 1;\n  };\n\n  const getXValue = (x: number | null = null) => {\n    if (scaleX != null) {\n      switch (trackID) {\n        case LAYOUT.CENTER_2D:\n        case LAYOUT.TOP_1D: {\n          return scaleX.invert(x ? x : position.x);\n        }\n        case LAYOUT.LEFT_1D: {\n          return scaleX.invert(x ? x : position.y);\n        }\n        default:\n          return 0;\n      }\n    }\n    return 0;\n  };\n\n  const getYValue = () => {\n    if (scaleY != null) {\n      switch (trackID) {\n        case LAYOUT.CENTER_2D:\n        case LAYOUT.TOP_1D: {\n          return scaleY.invert(position.y);\n        }\n        case LAYOUT.LEFT_1D: {\n          return scaleY.invert(position.x);\n        }\n        default:\n          return 0;\n      }\n    }\n    return 0;\n  };\n\n  const getRation = () => {\n    switch (trackID) {\n      case LAYOUT.TOP_1D: {\n        return (\n          (getRealYValue(startX) / (getRealYValue(endX) || Number.MIN_VALUE)) *\n          100\n        ).toFixed(2);\n      }\n      case LAYOUT.LEFT_1D: {\n        return (\n          (getRealYValue(startY) / (getRealYValue(endY) || Number.MIN_VALUE)) *\n          100\n        ).toFixed(2);\n      }\n      default:\n        return 0;\n    }\n  };\n\n  const getDeltaX = () => {\n    switch (trackID) {\n      case LAYOUT.TOP_1D: {\n        return (getXValue(startX) - getXValue(endX)).toPrecision(6);\n      }\n      case LAYOUT.LEFT_1D: {\n        return (getXValue(startY) - getXValue(endY)).toPrecision(6);\n      }\n      default:\n        return 0;\n    }\n  };\n\n  const getLabel = (label2d, labelld, nucleus) => {\n    return trackID === LAYOUT.CENTER_2D ? (\n      <Fragment>\n        {label2d} ( <MF mf={nucleus} /> )\n      </Fragment>\n    ) : (\n      labelld\n    );\n  };\n\n  const getZValue = () => {\n    if (trackID === LAYOUT.CENTER_2D) {\n      const { maxX, maxY, minX, minY, z } = data[activeSpectrum.index]\n        .data as any;\n\n      const xStep = (maxX - minX) / (z[0].length - 1);\n      const yStep = (maxY - minY) / (z.length - 1);\n      const xIndex = Math.floor((getXValue() - minX) / xStep);\n      const yIndex = Math.floor((getYValue() - minY) / yStep);\n\n      if (xIndex < 0 || xIndex >= z[0].length) return 0;\n      if (yIndex < 0 || yIndex >= z.length) return 0;\n\n      return z[yIndex][xIndex];\n    }\n    return 0;\n  };\n\n  return (\n    <div css={styles}>\n      <div>\n        <span className=\"label\">{getLabel('F2', 'X', nucleuses[0])} :</span>\n        <span className=\"value\">{formatX(getXValue())}</span>\n        <span className=\"unit\">ppm</span>\n      </div>\n\n      <div>\n        <span className=\"label\">{getLabel('F1', 'Y', nucleuses[1])} :</span>\n        <span className=\"value\">{formatY(getYValue())}</span>\n        <span className=\"unit\">ppm</span>\n      </div>\n      <div>\n        <span className=\"label\">Intensity :</span>\n        <span className=\"value\">{getZValue()}</span>\n      </div>\n      {step === 'brushing' && (\n        <div>\n          <span className=\"label\"> Δppm :</span>\n          <span className=\"value\">{getDeltaX()}</span>\n        </div>\n      )}\n\n      {step === 'brushing' && (\n        <div>\n          <span className=\"label\"> ratio :</span>\n          <span className=\"value\">{getRation()}%</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FooterBanner;\n","import { useContext, useMemo, CSSProperties } from 'react';\n\nimport { BrushContext } from '../../EventsTrackers/BrushTracker';\nimport { MouseContext } from '../../EventsTrackers/MouseTracker';\nimport { useChartData } from '../../context/ChartContext';\nimport { useFormatNumberByNucleus } from '../../utility/FormatNumber';\nimport { getLayoutID, LAYOUT } from '../utilities/DimensionLayout';\nimport { get2DXScale, get2DYScale, get1DYScale } from '../utilities/scale';\n\nconst style: CSSProperties = {\n  cursor: 'crosshair',\n  transformOrigin: 'bottom right',\n  position: 'absolute',\n  top: '-18px',\n  left: '-88px',\n  fontWeight: 'bold',\n  pointerEvents: 'none',\n  overflow: 'visible',\n  userSelect: 'none',\n  width: '85px',\n  textAlign: 'right',\n};\n\nfunction XYLabelPointer({ layout, data1D }) {\n  const position = useContext(MouseContext);\n  const { step } = useContext(BrushContext);\n  const {\n    margin,\n    width,\n    height,\n    xDomain,\n    yDomain,\n    yDomains,\n    activeTab,\n    activeSpectrum,\n  } = useChartData();\n\n  const trackID =\n    position &&\n    getLayoutID(layout, {\n      startX: position.x,\n      startY: position.y,\n    });\n\n  const nucleuses = activeTab.split(',');\n  const [formatX, formatY] = useFormatNumberByNucleus(nucleuses);\n\n  const scaleX = useMemo(() => {\n    if (!activeSpectrum || !data1D || data1D.length === 0) {\n      return get2DXScale({ width, margin, xDomain });\n    }\n\n    switch (trackID) {\n      case LAYOUT.TOP_1D:\n      case LAYOUT.CENTER_2D: {\n        return get2DXScale({ width, margin, xDomain });\n      }\n      case LAYOUT.LEFT_1D: {\n        return get2DYScale({ height, margin, yDomain });\n      }\n      default:\n        return null;\n    }\n  }, [\n    activeSpectrum,\n    data1D,\n    height,\n    margin,\n    trackID,\n    width,\n    xDomain,\n    yDomain,\n  ]);\n\n  const scaleY = useMemo(() => {\n    if (!activeSpectrum || !data1D || data1D.length === 0) {\n      return get2DYScale({ height, margin, yDomain });\n    }\n\n    switch (trackID) {\n      case LAYOUT.CENTER_2D: {\n        return get2DYScale({ height, margin, yDomain });\n      }\n      case LAYOUT.TOP_1D: {\n        return data1D[0]\n          ? get1DYScale(yDomains[data1D[0].id], margin.top)\n          : null;\n      }\n      case LAYOUT.LEFT_1D: {\n        return data1D[1]\n          ? get1DYScale(yDomains[data1D[1].id], margin.left)\n          : null;\n      }\n      default:\n        return null;\n    }\n  }, [activeSpectrum, data1D, height, margin, trackID, yDomain, yDomains]);\n\n  if (\n    step === 'brushing' ||\n    !position ||\n    position.y < margin.top ||\n    position.x < margin.left ||\n    position.x > width - margin.right ||\n    position.y > height - margin.bottom\n  ) {\n    return null;\n  }\n\n  const getXValue = (x = null) => {\n    switch (trackID) {\n      case LAYOUT.CENTER_2D:\n      case LAYOUT.TOP_1D: {\n        return scaleX?.invert(x ? x : position.x);\n      }\n      case LAYOUT.LEFT_1D: {\n        return scaleX?.invert(x ? x : position.y);\n      }\n      default:\n        return 0;\n    }\n  };\n\n  const getYValue = () => {\n    switch (trackID) {\n      case LAYOUT.CENTER_2D:\n      case LAYOUT.TOP_1D: {\n        return scaleY?.invert(position.y);\n      }\n      case LAYOUT.LEFT_1D: {\n        return scaleY?.invert(position.x);\n      }\n      default:\n        return 0;\n    }\n  };\n\n  return (\n    <div\n      key=\"xLabelPointer\"\n      style={{\n        ...style,\n        transform: `translate(${position.x}px, ${position.y}px)`,\n      }}\n    >\n      <span>{formatY(getYValue())}</span>\n      <span style={{ color: 'gray' }}>{','}</span>\n      <span style={{ color: 'red' }}>{formatX(getXValue())}</span>\n    </div>\n  );\n}\n\nexport default XYLabelPointer;\n","import { extent, scaleLinear } from 'd3';\n\nfunction getTopXScale(\n  width: number,\n  margin: { right: number; left: number },\n  x: Array<number>,\n) {\n  const xDomain = extent<number>(x);\n  const scaleX = scaleLinear(extent(x) as number[], [\n    width - margin.right,\n    margin.left,\n  ]);\n\n  return {\n    xDomain,\n    scaleX,\n  };\n}\n\nfunction getLeftXScale(\n  width: number,\n  margin: { bottom: number; top: number },\n  x: Array<number>,\n) {\n  const xDomain = extent(x);\n\n  const scaleX = scaleLinear(extent(x) as number[], [\n    width - margin.bottom,\n    margin.top,\n  ]);\n\n  return {\n    xDomain,\n    scaleX,\n  };\n}\n\nfunction getYScale(height: number, y: Array<number>, margin = 10) {\n  return scaleLinear(extent(y) as number[], [height - margin, margin]);\n}\n\nexport { getTopXScale, getLeftXScale, getYScale };\n","import { useMemo, memo } from 'react';\n\nimport { useChartData } from '../../../context/ChartContext';\nimport useXYReduce, { XYReducerDomainAxis } from '../../../hooks/useXYReduce';\nimport { PathBuilder } from '../../../utility/PathBuilder';\nimport { get2DXScale } from '../../utilities/scale';\n\nimport { getYScale } from './SliceScale';\n\ninterface HorizontalSliceChartProps {\n  margin?: number;\n  data: {\n    x: Array<number>;\n    re: Array<number>;\n  };\n}\n\nfunction HorizontalSliceChart({\n  margin: marginProps = 10,\n  data,\n}: HorizontalSliceChartProps) {\n  const { width, margin: originMargin, xDomain, displayerKey } = useChartData();\n  const xyReduce = useXYReduce(XYReducerDomainAxis.XAxis);\n\n  const height = originMargin.top;\n\n  const paths = useMemo(() => {\n    if (data) {\n      const { x, re: y } = data;\n      const scaleX = get2DXScale({ margin: originMargin, width, xDomain });\n\n      const scaleY = getYScale(height, y, marginProps);\n      const pathPoints = xyReduce({ x, y });\n\n      const pathBuilder = new PathBuilder();\n      pathBuilder.moveTo(scaleX(pathPoints.x[0]), scaleY(pathPoints.y[0]));\n      for (let i = 1; i < pathPoints.x.length; i++) {\n        pathBuilder.lineTo(scaleX(pathPoints.x[i]), scaleY(pathPoints.y[i]));\n      }\n\n      return pathBuilder.toString();\n    } else {\n      return undefined;\n    }\n  }, [data, height, marginProps, originMargin, width, xDomain, xyReduce]);\n\n  if (!width || !height) {\n    return null;\n  }\n\n  return (\n    <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\n      <defs>\n        <clipPath id={`${displayerKey}clip-top`}>\n          <rect\n            width={width - originMargin.left - originMargin.right}\n            height={height}\n            x={originMargin.left}\n            y={`${0}`}\n          />\n        </clipPath>\n      </defs>\n      <g clipPath={`url(#${displayerKey}clip-top)`}>\n        <rect\n          width={width - originMargin.left - originMargin.right}\n          height={height}\n          x={originMargin.left}\n          y={`${0}`}\n          fillOpacity=\"0\"\n        />\n        <path className=\"line\" stroke=\"red\" fill=\"none\" d={paths} />\n      </g>\n    </svg>\n  );\n}\n\nexport default memo(HorizontalSliceChart);\n","import { useMemo, memo } from 'react';\n\nimport { useChartData } from '../../../context/ChartContext';\nimport useXYReduce, { XYReducerDomainAxis } from '../../../hooks/useXYReduce';\nimport { PathBuilder } from '../../../utility/PathBuilder';\nimport { get2DYScale } from '../../utilities/scale';\n\nimport { getYScale } from './SliceScale';\n\ninterface VerticalSliceChartProps {\n  margin?: number;\n  data: {\n    x: Array<number>;\n    re: Array<number>;\n  };\n}\n\nfunction VerticalSliceChart({\n  margin: marignValue = 10,\n  data,\n}: VerticalSliceChartProps) {\n  const {\n    height: originHeight,\n    margin,\n    yDomain,\n    displayerKey,\n  } = useChartData();\n  const xyReduce = useXYReduce(XYReducerDomainAxis.YAxis);\n\n  const height = margin.left;\n\n  const paths = useMemo(() => {\n    if (data) {\n      const { x, re: y } = data;\n      const scaleX = get2DYScale({ height: originHeight, margin, yDomain });\n\n      const scaleY = getYScale(height, y, marignValue);\n\n      const pathPoints = xyReduce({ x, y });\n\n      const pathBuilder = new PathBuilder();\n\n      pathBuilder.moveTo(\n        scaleY(pathPoints.y[pathPoints.y.length - 1]),\n        scaleX(pathPoints.x.length - 1),\n      );\n\n      for (let i = pathPoints.x.length - 2; i >= 0; i--) {\n        pathBuilder.lineTo(scaleY(pathPoints.y[i]), scaleX(pathPoints.x[i]));\n      }\n\n      return pathBuilder.toString();\n    } else {\n      return undefined;\n    }\n  }, [data, height, margin, marignValue, originHeight, xyReduce, yDomain]);\n\n  const mainHeight = originHeight - margin.bottom - margin.top;\n\n  if (!mainHeight || !height) return null;\n\n  return (\n    <svg\n      viewBox={`0 0 ${height} ${mainHeight + margin.top}`}\n      width={height}\n      height={mainHeight + margin.top}\n    >\n      <defs>\n        <clipPath id={`${displayerKey}clip-left`}>\n          <rect width={height} height={mainHeight} x=\"0\" y={margin.top} />\n        </clipPath>\n      </defs>\n      <g clipPath={`url(#${displayerKey}clip-left)`}>\n        <path className=\"line\" stroke=\"red\" fill=\"none\" d={paths} />\n      </g>\n    </svg>\n  );\n}\n\nexport default memo(VerticalSliceChart);\n","import { useMemo } from 'react';\n\nimport { getSlice } from '../../../../data/data2d/Spectrum2D';\nimport { Datum2D } from '../../../../data/types/data2d/Datum2D';\nimport { useMouseTracker } from '../../../EventsTrackers/MouseTracker';\nimport { useChartData } from '../../../context/ChartContext';\nimport { get2DXScale, get2DYScale } from '../../utilities/scale';\n\nimport HorizontalSliceChart from './HorizontalSliceChart';\nimport VerticalSliceChart from './VerticalSliceChart';\n\nfunction SlicingView() {\n  const {\n    width,\n    height,\n    margin,\n    activeSpectrum,\n    data: spectra,\n    xDomain,\n    yDomain,\n  } = useChartData();\n  const position = useMouseTracker();\n\n  const chart2d = useMemo(() => {\n    if (position && activeSpectrum && activeSpectrum.id) {\n      const { x, y } = position;\n      const scale2dX = get2DXScale({ margin, width, xDomain });\n      const scale2dY = get2DYScale({ margin, height, yDomain });\n      const data = getSlice(spectra[activeSpectrum.index] as Datum2D, {\n        x: scale2dX.invert(x),\n        y: scale2dY.invert(y),\n      });\n      return (\n        <svg\n          viewBox={`0 0 ${width} ${height}`}\n          width={width}\n          height={height}\n          style={{\n            position: 'absolute',\n            backgroundColor: 'rgba(255,255,255,0.8)',\n          }}\n        >\n          {data?.horizontal && (\n            <HorizontalSliceChart data={data.horizontal.data} />\n          )}\n          {data?.vertical && <VerticalSliceChart data={data.vertical.data} />}\n        </svg>\n      );\n    }\n    return null;\n  }, [\n    position,\n    activeSpectrum,\n    margin,\n    width,\n    xDomain,\n    height,\n    yDomain,\n    spectra,\n  ]);\n\n  if (!position) {\n    return null;\n  }\n\n  return chart2d;\n}\n\nexport default SlicingView;\n","import { useCallback, useEffect, useMemo, ReactNode } from 'react';\nimport { ResponsiveChart } from 'react-d3-utils';\n\nimport { BrushTracker } from '../EventsTrackers/BrushTracker';\nimport { MouseTracker } from '../EventsTrackers/MouseTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport useSpectrum from '../hooks/useSpectrum';\nimport NoData from '../loader/NoData';\nimport Spinner from '../loader/Spinner';\nimport {\n  BRUSH_END,\n  FULL_ZOOM_OUT,\n  SET_DIMENSIONS,\n  SET_2D_LEVEL,\n  SET_ZOOM,\n  ADD_2D_ZONE,\n} from '../reducer/types/Types';\nimport BrushXY, { BRUSH_TYPE } from '../tool/BrushXY';\nimport CrossLinePointer from '../tool/CrossLinePointer';\nimport { options } from '../toolbar/ToolTypes';\n\nimport Chart2D from './Chart2D';\nimport FooterBanner from './FooterBanner';\nimport XYLabelPointer from './tools/XYLabelPointer';\nimport SlicingView from './tools/slicing/SlicingView';\nimport { get2DDimensionLayout, getLayoutID } from './utilities/DimensionLayout';\n\ninterface Viewer2DProps {\n  emptyText: ReactNode;\n}\n\nfunction Viewer2D({ emptyText = undefined }: Viewer2DProps) {\n  const state = useChartData();\n  const {\n    toolOptions: { selectedTool },\n    isLoading,\n    data,\n    margin,\n    tabActiveSpectrum,\n    activeTab,\n  } = state;\n\n  const dispatch = useDispatch();\n  const { info } = useSpectrum({ info: {} });\n  const isVisible = info.isFt || !('isFt' in info);\n\n  const spectrumData = useMemo(() => {\n    const nucleuses = activeTab.split(',');\n    return nucleuses.reduce<any>((acc, n) => {\n      if (tabActiveSpectrum[n]?.id) {\n        const id = tabActiveSpectrum[n]?.id;\n        const spectrum = data.find(\n          (datum) => datum.id === id && !datum.info.isFid,\n        );\n        if (spectrum) {\n          acc.push(spectrum);\n        }\n      } else {\n        acc.push(null);\n      }\n      return acc;\n    }, []);\n  }, [activeTab, data, tabActiveSpectrum]);\n\n  const DIMENSION = get2DDimensionLayout(state);\n\n  const handelBrushEnd = useCallback(\n    (brushData) => {\n      const trackID = getLayoutID(DIMENSION, brushData);\n      if (trackID) {\n        if (brushData.altKey) {\n          switch (selectedTool) {\n            default:\n              break;\n          }\n        } else if (brushData.shiftKey) {\n          switch (selectedTool) {\n            case options.zone2D.id:\n              dispatch({ type: ADD_2D_ZONE, ...brushData });\n              break;\n            default:\n              break;\n          }\n        } else {\n          switch (selectedTool) {\n            default:\n              if (selectedTool != null) {\n                return dispatch({\n                  type: BRUSH_END,\n                  ...brushData,\n                  trackID: getLayoutID(DIMENSION, brushData),\n                });\n              }\n          }\n        }\n      }\n    },\n    [selectedTool, dispatch, DIMENSION],\n  );\n\n  const handelOnDoubleClick = useCallback(\n    (e) => {\n      const { x: startX, y: startY } = e;\n      const trackID = getLayoutID(DIMENSION, { startX, startY });\n      if (trackID) {\n        dispatch({ type: FULL_ZOOM_OUT, trackID });\n      }\n    },\n    [DIMENSION, dispatch],\n  );\n\n  const handleZoom = (event) => {\n    const { x: startX, y: startY } = event;\n    const trackID = getLayoutID(DIMENSION, { startX, startY });\n\n    if (trackID) {\n      if (trackID === 'CENTER_2D') {\n        dispatch({ type: SET_2D_LEVEL, ...event });\n      } else {\n        dispatch({ type: SET_ZOOM, event, trackID });\n      }\n    }\n  };\n\n  const mouseClick = useCallback(\n    (position) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { x, y } = position;\n      switch (selectedTool) {\n        default:\n          break;\n      }\n    },\n    [selectedTool],\n  );\n\n  if (!isVisible) {\n    return (\n      <NoData\n        emptyText=\"Currently FID can not be displayed for 2D spectra\"\n        canOpenLoader={false}\n      />\n    );\n  }\n\n  return (\n    <ResponsiveChart>\n      {({ width, height }) => (\n        <ViewerResponsiveWrapper width={width} height={height}>\n          <Spinner isLoading={isLoading} emptyText={emptyText} />\n          {data && data.length > 0 && (\n            <BrushTracker\n              onBrush={handelBrushEnd}\n              onDoubleClick={handelOnDoubleClick}\n              onClick={mouseClick}\n              onZoom={handleZoom}\n              style={{\n                width: '100%',\n                height: '100%',\n                margin: 'auto',\n                position: 'relative',\n                overflow: 'hidden',\n              }}\n            >\n              <MouseTracker\n                style={{ width: '100%', height: `100%`, position: 'absolute' }}\n              >\n                {selectedTool && selectedTool === options.slicingTool.id && (\n                  <SlicingView />\n                )}\n\n                <CrossLinePointer />\n                {spectrumData && (\n                  <XYLabelPointer data1D={spectrumData} layout={DIMENSION} />\n                )}\n\n                <BrushXY\n                  brushType={BRUSH_TYPE.XY}\n                  dimensionBorder={DIMENSION.CENTER_2D}\n                />\n                <>\n                  {spectrumData?.[0] && (\n                    <BrushXY\n                      brushType={BRUSH_TYPE.X}\n                      dimensionBorder={DIMENSION.TOP_1D}\n                      height={margin.top}\n                    />\n                  )}\n                  {spectrumData?.[1] && (\n                    <BrushXY\n                      brushType={BRUSH_TYPE.Y}\n                      dimensionBorder={DIMENSION.LEFT_1D}\n                      width={margin.left}\n                    />\n                  )}\n                </>\n                {spectrumData && (\n                  <FooterBanner data1D={spectrumData} layout={DIMENSION} />\n                )}\n\n                <Chart2D spectra={spectrumData} />\n              </MouseTracker>\n            </BrushTracker>\n          )}\n        </ViewerResponsiveWrapper>\n      )}\n    </ResponsiveChart>\n  );\n}\n\ninterface ViewerResponsiveWrapperProps {\n  width: number;\n  height: number;\n  children: any;\n}\n\nexport function ViewerResponsiveWrapper(props: ViewerResponsiveWrapperProps) {\n  const dispatch = useDispatch();\n  const { width, height, children } = props;\n\n  useEffect(() => {\n    dispatch({ type: SET_DIMENSIONS, ...{ width, height } });\n  }, [width, height, dispatch]);\n\n  return children;\n}\n\nexport default Viewer2D;\n","import { ScaleLinear } from 'd3';\nimport { produce } from 'immer';\n\nimport { getXScale, getYScale } from '../1d/utilities/scale';\n\nexport const SET_X_SCALE = 'SET_X_SCALE';\nexport const SET_Y_SCALE = 'SET_Y_SCALE';\nexport const SET_SCALE = 'SET_SCALE';\n\ntype ScaleLinearNumberFunction = (\n  spectrumId?: number | null | string,\n) => ScaleLinear<number, number, number>;\n\nexport interface ScaleState {\n  scaleX: ScaleLinearNumberFunction | null;\n  scaleY: ScaleLinearNumberFunction | null;\n}\n\nexport const scaleInitialState: ScaleState = {\n  scaleX: null,\n  scaleY: null,\n};\n\nfunction innerScaleReducer(draft: ScaleState, action) {\n  switch (action.type) {\n    case SET_X_SCALE:\n      draft.scaleX = (spectrumId = null) => getXScale(action, spectrumId);\n      break;\n\n    case SET_Y_SCALE:\n      draft.scaleY = (spectrumId = null) => getYScale(action, spectrumId);\n      break;\n\n    case SET_SCALE: {\n      draft.scaleX = (spectrumId = null) =>\n        getXScale(action.payload, spectrumId);\n      draft.scaleY = (spectrumId = null) =>\n        getYScale(action.payload, spectrumId);\n      break;\n    }\n    default:\n      return draft;\n  }\n}\n\nconst scaleReducer = produce(innerScaleReducer);\nexport default scaleReducer;\n","import { createContext, useContext } from 'react';\n\nimport { scaleInitialState, ScaleState } from '../reducer/scaleReducer';\n\nexport const scaleContext = createContext<ScaleState>(scaleInitialState);\nexport const ScaleProvider = scaleContext.Provider;\n\nexport function useScale() {\n  return useContext(scaleContext);\n}\n\ntype CheckedScaleState = {\n  [key in keyof ScaleState]: Exclude<ScaleState[key], null>;\n};\n\nexport function useScaleChecked(): CheckedScaleState {\n  const scale = useScale();\n\n  if (!scale.scaleX || !scale.scaleY) {\n    throw new Error('scale cannot be null');\n  }\n\n  return scale as CheckedScaleState;\n}\n","export const positions = {\n  TOP_LEFT: 'top left',\n  TOP_CENTER: 'top center',\n  TOP_RIGHT: 'top right',\n  MIDDLE_LEFT: 'middle left',\n  MIDDLE: 'middle',\n  MIDDLE_RIGHT: 'middle right',\n  BOTTOM_LEFT: 'bottom left',\n  BOTTOM_CENTER: 'bottom center',\n  BOTTOM_RIGHT: 'bottom right',\n};\n\nexport const types = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PROGRESS_INDICATOR: 'progress_indicator',\n};\n\nexport const transitions = {\n  FADE: 'fade',\n  SCALE: 'scale',\n  SLIDE_RIGHT: 'slide_right',\n  SLIDE_LEFT: 'slide_left',\n  SLIDE_TOP: 'slide_top',\n  SLIDE_BOTTOM: 'slide_bottom',\n};\n","import { createContext, useContext } from 'react';\n\nconst AlertContext = createContext<any>({});\n\nexport const AlertProvider = AlertContext.Provider;\n\nexport function useAlert() {\n  return useContext(AlertContext);\n}\n","import { CSSProperties, ReactNode, useRef } from 'react';\nimport { Transition as ContainerTransition } from 'react-transition-group';\n\nimport { transitions } from './options';\n\nconst duration = 250;\n\nconst defaultStyle: Record<string, CSSProperties> = {\n  [transitions.FADE]: {\n    transition: `opacity ${duration}ms ease`,\n    opacity: 0,\n  },\n  [transitions.SCALE]: {\n    transform: 'scale(1)',\n    transition: `all ${duration}ms ease-in-out`,\n  },\n};\n\ntype TransitionStyles = Record<\n  string,\n  Partial<{\n    entering: CSSProperties;\n    entered: CSSProperties;\n    exiting: CSSProperties;\n    exited: CSSProperties;\n  }>\n>;\n\nconst defaultTransitionStyles: TransitionStyles = {\n  [transitions.FADE]: {\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n  },\n  [transitions.SCALE]: {\n    entering: { transform: 'scale(0)' },\n    entered: { transform: 'scale(1)' },\n    exiting: { transform: 'scale(0)' },\n    exited: { transform: 'scale(1)' },\n  },\n};\n\ninterface TransitionProps {\n  children: ReactNode;\n  type: string;\n  transitionStyles?: TransitionStyles;\n}\n\nexport default function Transtion({\n  children,\n  type,\n  transitionStyles = defaultTransitionStyles,\n  ...props\n}: TransitionProps) {\n  const ref = useRef(null);\n  return (\n    <ContainerTransition nodeRef={ref} {...props} timeout={duration}>\n      {(state) => (\n        <div\n          ref={ref}\n          style={{\n            ...defaultStyle[type],\n            ...transitionStyles[type][state],\n            ...transitionStyles.default,\n          }}\n        >\n          {children}\n        </div>\n      )}\n    </ContainerTransition>\n  );\n}\n","import { useMemo } from 'react';\n\nimport { positions } from './options';\n\nfunction getStyles(position, containerStyle): any {\n  const initialStyles = {\n    position: 'fixed',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    pointerEvents: 'none',\n    overflow: 'visible',\n    ...(containerStyle\n      ? {\n          top: `${containerStyle.top}px`,\n          left: `${containerStyle.left}px`,\n          height: `${containerStyle.height}px`,\n          width: `${containerStyle.width}px`,\n        }\n      : { width: '100%', height: '100%' }),\n  };\n\n  switch (position) {\n    case positions.TOP_LEFT:\n      return {\n        ...initialStyles,\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n      };\n    case positions.TOP_CENTER:\n      return {\n        ...initialStyles,\n        justifyContent: 'flex-start',\n      };\n    case positions.TOP_RIGHT:\n      return {\n        ...initialStyles,\n        justifyContent: 'flex-start',\n        alignItems: 'flex-end',\n      };\n    case positions.MIDDLE_LEFT:\n      return {\n        ...initialStyles,\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n      };\n    case positions.MIDDLE: {\n      return {\n        ...initialStyles,\n        justifyContent: 'center',\n      };\n    }\n    case positions.MIDDLE_RIGHT:\n      return {\n        ...initialStyles,\n        justifyContent: 'center',\n\n        alignItems: 'flex-end',\n      };\n\n    case positions.BOTTOM_LEFT:\n      return {\n        ...initialStyles,\n        justifyContent: 'flex-end',\n\n        alignItems: 'flex-start',\n      };\n    case positions.BOTTOM_CENTER:\n      return {\n        ...initialStyles,\n        justifyContent: 'flex-end',\n      };\n    case positions.BOTTOM_RIGHT:\n      return {\n        ...initialStyles,\n        justifyContent: 'flex-end',\n\n        alignItems: 'flex-end',\n      };\n\n    default: {\n      return initialStyles;\n    }\n  }\n}\n\nexport default function Wrapper({\n  children,\n  options: { position },\n  containerStyle,\n  ...props\n}) {\n  const styles = useMemo(\n    () => getStyles(position, containerStyle),\n    [position, containerStyle],\n  );\n\n  return (\n    children.length > 0 && (\n      <div style={styles} {...props}>\n        {children}\n      </div>\n    )\n  );\n}\n","export function groupBy(\n  array: Array<any>,\n  fn: (item: any) => string,\n): Array<any> {\n  return array.reduce((result, item) => {\n    const key = fn(item);\n    if (!result[key]) result[key] = [];\n    result[key].push(item);\n    return result;\n  }, {});\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nconst styles = css`\n  width: 40px;\n  height: 40px;\n  margin: 0 auto;\n  :after {\n    content: ' ';\n    display: block;\n    width: 30px;\n    height: 30px;\n    margin-top: 10px;\n    border-radius: 50%;\n    border: 4px solid;\n    border-color: #fff transparent #fff transparent;\n    animation: ring-animation 1s linear infinite;\n  }\n  @keyframes ring-animation {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default function ProgressIndicator() {\n  return <div css={styles} />;\n}\n","import {\n  Fragment,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  useMemo,\n  memo,\n  CSSProperties,\n  ReactNode,\n} from 'react';\nimport { createPortal } from 'react-dom';\nimport { FaTimes } from 'react-icons/fa';\nimport { TransitionGroup } from 'react-transition-group';\n\nimport Transition from '../Transition';\nimport Wrapper from '../Wrapper';\nimport { groupBy } from '../helpers';\nimport { positions, transitions, types } from '../options';\n\nimport { AlertProvider } from './Context';\nimport ProgressIndicator from './ProgressIndicator';\n\ninterface ProviderProps {\n  children: ReactNode;\n  offset?: string;\n  position?: any;\n  timeout?: number;\n  type?: any;\n  transition?: any;\n  containerStyle?: CSSProperties;\n  wrapperRef?: any;\n  context?: {\n    Provider?: any;\n    Consumer?: any;\n  };\n}\n\nfunction Provider({\n  children,\n  wrapperRef = null,\n  offset = '5px',\n  position = positions.BOTTOM_CENTER,\n  timeout = 3000,\n  type,\n  transition = transitions.FADE,\n  ...props\n}: ProviderProps) {\n  const root = useRef<any>(null);\n  const timersId = useRef<any>([]);\n  const [alerts, setAlerts] = useState<any[]>([]);\n\n  useEffect(() => {\n    root.current = document.createElement('div');\n    const ref = root.current;\n    const timersIdRef = timersId.current;\n\n    if (wrapperRef) {\n      wrapperRef.appendChild(ref);\n    }\n    return () => {\n      if (ref) {\n        if (wrapperRef) {\n          timersIdRef.forEach(clearTimeout);\n\n          wrapperRef.removeChild(ref);\n        }\n      }\n    };\n  }, [wrapperRef]);\n\n  const remove = useCallback((alert) => {\n    setAlerts((currentAlerts) => {\n      const lengthBeforeRemove = currentAlerts.length;\n      const filteredAlerts = currentAlerts.filter((a) => a.id !== alert.id);\n\n      if (lengthBeforeRemove > filteredAlerts.length && alert.options.onClose) {\n        alert.options.onClose();\n      }\n\n      return filteredAlerts;\n    });\n  }, []);\n\n  const show = useCallback(\n    (message = '', options = {}) => {\n      const id = Math.random().toString(36).substr(2, 9);\n\n      const alertOptions = {\n        position: options.position || position,\n        timeout,\n        type,\n        backgroundColor: 'black',\n        color: 'white',\n        ...options,\n      };\n\n      const alert: any = {\n        id,\n        message,\n        options: alertOptions,\n      };\n\n      alert.close = () => remove(alert);\n\n      if (alert.options.timeout) {\n        const timerId = setTimeout(() => {\n          remove(alert);\n\n          timersId.current.splice(timersId.current.indexOf(timerId), 1);\n        }, alert.options.timeout);\n\n        timersId.current.push(timerId);\n      }\n\n      setAlerts((state) => state.concat(alert));\n      if (alert.options.onOpen) alert.options.onOpen();\n\n      return alert;\n    },\n    [position, remove, timeout, type],\n  );\n\n  const success = useCallback(\n    (message = '', options = {}) => {\n      options.type = types.SUCCESS;\n      options = { backgroundColor: '#28ba62', color: 'white', ...options };\n\n      return show(message, options);\n    },\n    [show],\n  );\n\n  const error = useCallback(\n    (message = '', options = {}) => {\n      options.type = types.ERROR;\n      options = { backgroundColor: '#cf3c4f', color: 'white', ...options };\n      return show(message, options);\n    },\n    [show],\n  );\n\n  const info = useCallback(\n    (message = '', options = {}) => {\n      options.type = types.INFO;\n      options.color = '#28ba62';\n      return show(message, options);\n    },\n    [show],\n  );\n\n  const showLoading = useCallback(\n    (message = 'Process in progress', options = {}) => {\n      options.type = types.PROGRESS_INDICATOR;\n      options.timeout = 0;\n      options.backgroundColor = '#232323';\n\n      return new Promise((resolve) => {\n        const alert = show(message, options);\n        setTimeout(() => {\n          resolve(() => remove(alert));\n        }, 500);\n      });\n    },\n    [remove, show],\n  );\n\n  const closeHandler = useCallback(\n    (alert) => {\n      remove(alert);\n    },\n    [remove],\n  );\n\n  const alertsByPosition = groupBy(alerts, (alert) => alert.options.position);\n\n  const parentStyle = useMemo(() => {\n    return wrapperRef\n      ? wrapperRef.getBoundingClientRect()\n      : {\n          top: 0,\n          left: 0,\n          width: window.innerWidth,\n          height: window.innerHeight,\n        };\n  }, [wrapperRef]);\n\n  const alertContextValue = useMemo(\n    () => ({ show, success, error, info, showLoading }),\n    [show, success, error, info, showLoading],\n  );\n\n  return (\n    <AlertProvider value={alertContextValue}>\n      {children}\n      {root.current &&\n        createPortal(\n          <Fragment>\n            {Object.keys(positions).map((key) => {\n              const position = positions[key];\n\n              return (\n                <TransitionGroup\n                  appear\n                  key={position}\n                  options={{ position, zIndex: 999999 }}\n                  component={Wrapper}\n                  containerStyle={parentStyle}\n                  {...props}\n                >\n                  {alertsByPosition[position]\n                    ? alertsByPosition[position].map((alert) => (\n                        <Transition type={transition} key={alert.id}>\n                          <div\n                            style={{\n                              margin: offset,\n                              padding: '25px',\n                              borderRadius: '10px',\n                              pointerEvents: 'all',\n                              backgroundColor: alert.options.backgroundColor,\n                              color: alert.options.color,\n                              minHeight: '60px',\n                              position: 'relative',\n                            }}\n                            key={alert.id}\n                          >\n                            <button\n                              style={{\n                                position: 'absolute',\n                                right: '5px',\n                                top: '5px',\n                                border: 'none',\n                                backgroundColor: 'transparent',\n                                color: 'white',\n                              }}\n                              type=\"button\"\n                              onClick={() => closeHandler(alert)}\n                            >\n                              <FaTimes />\n                            </button>\n\n                            <span>{alert.message}</span>\n                            {alert.options.type ===\n                              types.PROGRESS_INDICATOR && <ProgressIndicator />}\n                          </div>\n                        </Transition>\n                      ))\n                    : null}\n                </TransitionGroup>\n              );\n            })}\n          </Fragment>,\n          root.current,\n        )}\n    </AlertProvider>\n  );\n}\n\nexport default memo(Provider);\n","import { createContext, useContext } from 'react';\n\nconst ModalContext = createContext<any>({});\nexport const ModalProvider = ModalContext.Provider;\n\nexport function useModal() {\n  return useContext(ModalContext);\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { CSSProperties, useCallback } from 'react';\n\nconst styles = css`\n  display: block;\n  border-radius: 5px;\n  overflow: hidden;\n  width: 300px;\n  border-top: 10px solid #ed0000;\n\n  .message {\n    font-weight: bold;\n    font-size: 14px;\n    text-align: center;\n    color: #af0000;\n    text-align: center;\n    padding: 25px;\n    display: block;\n  }\n  .buttons-container {\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: flex-end;\n    padding: 5px;\n    border-top: 1px solid #efefef;\n\n    button:last-of-type {\n      border-radius: 5px 0 0 5px;\n    }\n    button:first-of-type {\n      border-radius: 0px 5px 5px 0px;\n      border-width: 1px;\n    }\n    button {\n      border-color: #dcdcdc;\n      border-width: 1px 0px 1px 1px;\n      background-color: white;\n      display: inline-block;\n      cursor: pointer;\n      color: #363636;\n      font-weight: bold;\n      padding: 6px 24px;\n      text-decoration: none;\n    }\n    button:hover {\n      background: -webkit-gradient(\n        linear,\n        left top,\n        left bottom,\n        color-stop(0.05, #f6f6f6),\n        color-stop(1, #ffffff)\n      );\n      background: -moz-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n      background: -webkit-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n      background: -o-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n      background: -ms-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n      background: linear-gradient(to bottom, #f6f6f6 5%, #ffffff 100%);\n      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#f6f6f6', endColorstr='#ffffff',GradientType=0);\n      background-color: #f6f6f6;\n    }\n  }\n`;\n\ninterface ConfirmationDialogProps {\n  style?: CSSProperties;\n  buttons: Array<{ handler: () => void; text: string; style?: CSSProperties }>;\n  onClose: () => void;\n  message: string;\n}\n\nfunction ConfirmationDialog({\n  style = {},\n  buttons = [],\n  onClose,\n  message,\n}: ConfirmationDialogProps) {\n  const optionsHandler = useCallback(\n    (e, { handler = () => null }) => {\n      handler(e);\n      onClose();\n    },\n    [onClose],\n  );\n\n  return (\n    <div style={style} css={styles}>\n      <p className=\"message\">{message}</p>\n      <div className=\"buttons-container\">\n        {buttons.map((option) => (\n          <button\n            key={option.text}\n            type=\"button\"\n            onClick={(e) => optionsHandler(e, option)}\n            style={option.style && option.style}\n          >\n            {option.text}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ConfirmationDialog;\n","import { useRef, useEffect, cloneElement } from 'react';\nimport { useSize } from 'react-use';\n\nconst ModalContent = ({ modal, onClose, onLayout }) => {\n  const contentSize = useRef<any>();\n\n  const [Content, { width, height }] = useSize(() => {\n    return (\n      <div\n        style={{\n          height: '100%',\n          display: 'block',\n          overflow: 'auto',\n        }}\n      >\n        {cloneElement(modal.component, {\n          ...modal.options,\n          onClose: onClose,\n          style: { cursor: 'default' },\n        })}\n      </div>\n    );\n  });\n\n  useEffect(() => {\n    if (isFinite(height) && isFinite(width) && !contentSize.current) {\n      contentSize.current = { width, height };\n      onLayout({ modal, layout: { width, height } });\n    }\n  }, [width, height, contentSize, onLayout, modal]);\n\n  return Content;\n};\n\nexport default ModalContent;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  useRef,\n  useState,\n  useEffect,\n  useCallback,\n  Fragment,\n  useMemo,\n  CSSProperties,\n  ReactNode,\n} from 'react';\nimport { createPortal } from 'react-dom';\nimport { Rnd } from 'react-rnd';\nimport { TransitionGroup } from 'react-transition-group';\n\nimport Transition from '../Transition';\nimport Wrapper from '../Wrapper';\nimport { positions, transitions } from '../options';\n\nimport ConfirmDialog from './ConfirmDialog';\nimport { ModalProvider } from './Context';\nimport ModalContent from './ModalContent';\n\nconst transitionStyles: any = {\n  [transitions.FADE]: {\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n  },\n  [transitions.SCALE]: {\n    entering: { transform: 'scale(0)' },\n    entered: { transform: 'scale(1)' },\n    exiting: { transform: 'scale(0)' },\n    exited: { transform: 'scale(0)' },\n  },\n};\n\ninterface ProviderProps {\n  children: ReactNode;\n  style?: CSSProperties;\n  offset?: string;\n  position?: any;\n  transition?: any;\n  wrapperRef?: any;\n}\n\nfunction Provider({\n  children,\n  style = undefined,\n  offset = '0px',\n  position = positions.MIDDLE,\n  transition = transitions.SCALE,\n  wrapperRef = null,\n}: ProviderProps) {\n  const root = useRef<any>();\n  const modalRef = useRef<any>();\n  const [modal, setModal] = useState<any>();\n\n  useEffect(() => {\n    root.current = document.createElement('div');\n    const ref = root.current;\n    if (wrapperRef) {\n      wrapperRef.appendChild(ref);\n    }\n    return () => {\n      if (ref) {\n        if (wrapperRef) {\n          wrapperRef.removeChild(ref);\n        }\n      }\n    };\n  }, [wrapperRef]);\n\n  const close = useCallback(\n    function close() {\n      setModal(null);\n    },\n    [setModal],\n  );\n\n  const parentStyle = useMemo(() => {\n    return wrapperRef\n      ? wrapperRef.getBoundingClientRect()\n      : {\n          top: 0,\n          left: 0,\n          width: window.innerWidth,\n          height: window.innerHeight,\n        };\n  }, [wrapperRef]);\n\n  /**\n   *\n   * @param {*} component  <component />\n   * @param {object} options    {onYest:()=>{}, prop1, .... etc}\n   * @param {transitions} options.transition\n   * @param {positions} options.position\n   * @param {boolean} options.isBackgroundBlur\n   * @param {boolean} options.enableResizing\n   */\n  const show = useCallback(\n    (component, options = {}) => {\n      const _modal: any = {\n        component,\n        options: { isBackgroundBlur: true, enableResizing: false, ...options },\n      };\n\n      _modal.close = close;\n\n      setModal(_modal);\n      if (_modal.options.onOpen) _modal.options.onOpen();\n      return _modal;\n    },\n    [close],\n  );\n\n  /**\n   * @param {object} dialogOptions\n   * @param {object} dialogOptions.message\n   * @param {Array<{ handler: Function,text: string,style: object}>} dialogOptions.buttons\n   * @param {object} dialogOptions.tyle\n   */\n  const showConfirmDialog = useCallback(\n    (dialogOptions, options = { enableResizing: false }) => {\n      const _modal: any = {\n        component: <ConfirmDialog {...dialogOptions} />,\n        options: { isBackgroundBlur: true, ...options },\n      };\n\n      _modal.close = close;\n\n      setModal(_modal);\n      if (_modal.options.onOpen) _modal.options.onOpen();\n\n      return _modal;\n    },\n    [close],\n  );\n\n  useEffect(() => {\n    function keyHandler(e) {\n      if (['Escape', 'Esc'].includes(e.key)) {\n        close();\n      }\n    }\n    document.addEventListener('keydown', keyHandler, false);\n    return () => document.removeEventListener('keydown', keyHandler, false);\n  }, [close]);\n\n  const styles = css`\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 0;\n    pointer-events: all;\n    .handle {\n      cursor: move;\n    }\n\n    .rnd-container {\n      box-sizing: initial;\n      background-color: #fff;\n      box-shadow: 0 0 0 0, 0 8px 16px rgba(0, 0, 0, 0.3);\n      border-radius: 5px;\n    }\n  `;\n\n  const outerStyle: CSSProperties = modal?.options.isBackgroundBlur\n    ? { backgroundColor: 'rgba(255,255,255,0.8)' }\n    : { pointerEvents: 'none' };\n\n  const modalContextValue = useMemo(\n    () => ({ show, close, showConfirmDialog }),\n    [show, close, showConfirmDialog],\n  );\n\n  const contentLayoutHandler = useCallback(\n    ({ modal, layout }) => {\n      const width = modal.options.width\n        ? modal.options.width\n        : layout.width > parentStyle.width\n        ? parentStyle.width\n        : layout.width;\n      const height = modal.options.height\n        ? modal.options.height\n        : layout.height > parentStyle.height\n        ? parentStyle.height\n        : layout.height;\n\n      modalRef.current.updateSize({ width, height });\n    },\n    [parentStyle.height, parentStyle.width],\n  );\n\n  return (\n    <ModalProvider value={modalContextValue}>\n      {children}\n      {root.current &&\n        createPortal(\n          <Fragment>\n            {modal ? (\n              <div\n                css={styles}\n                style={{\n                  ...outerStyle,\n                }}\n              >\n                <TransitionGroup\n                  appear\n                  key={\n                    positions[\n                      modal.options.transition\n                        ? modal.options.transition\n                        : transition\n                    ]\n                  }\n                  options={{\n                    position: modal.options.position\n                      ? modal.options.position\n                      : position,\n                  }}\n                  containerStyle={parentStyle}\n                  component={Wrapper}\n                >\n                  <Transition\n                    type={\n                      modal.options.transition\n                        ? modal.options.transition\n                        : transition\n                    }\n                    transitionStyles={{\n                      ...transitionStyles,\n                      default: {\n                        width: modal.options.width\n                          ? `${modal.options.width}px`\n                          : 'auto',\n                      },\n                      height: modal.options.height\n                        ? `${modal.options.height}px`\n                        : 'auto',\n                    }}\n                    key={modal.id}\n                  >\n                    <Rnd\n                      maxWidth={parentStyle.width}\n                      maxHeight={parentStyle.height}\n                      ref={modalRef}\n                      default={{\n                        width: modal.options.width\n                          ? modal.options.width\n                          : 'auto',\n                        height: modal.options.height\n                          ? modal.options.height\n                          : 'auto',\n                        x: 0,\n                        y: 0,\n                      }}\n                      className=\"rnd-container\"\n                      style={{\n                        ...style,\n                        margin: offset,\n                        position: 'static',\n                        pointerEvents: 'all',\n                        userSelect: 'none',\n                      }}\n                      enableResizing={modal.options.enableResizing}\n                      dragHandleClassName=\"handle\"\n                      enableUserSelectHack={false}\n                    >\n                      <ModalContent\n                        modal={modal}\n                        onClose={close}\n                        onLayout={contentLayoutHandler}\n                      />\n                    </Rnd>\n                  </Transition>\n                </TransitionGroup>\n              </div>\n            ) : null}\n          </Fragment>,\n          root.current,\n        )}\n    </ModalProvider>\n  );\n}\n\nexport default Provider;\n","import { createContext, useContext } from 'react';\n\nexport const GlobalConetxt = createContext<any>({});\n\nexport const GlobalProvider = GlobalConetxt.Provider;\n\nexport function useGlobal() {\n  return useContext(GlobalConetxt);\n}\n","import {\n  useRef,\n  useLayoutEffect,\n  useCallback,\n  useState,\n  memo,\n  Fragment,\n  CSSProperties,\n  ReactNode,\n} from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { useGlobal } from '../../context/GlobalContext';\n\nconst styles: Record<'popup', CSSProperties> = {\n  popup: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    pointerEvents: 'none',\n    backgroundColor: 'gray',\n    padding: '3px',\n    borderRadius: '2px',\n    color: 'white',\n    whiteSpace: 'nowrap',\n    fontSize: '10px',\n    fontFamily: 'tahoma',\n    textShadow: 'none',\n  },\n};\n\ninterface ToolTipProps {\n  style?: any;\n  className?: string;\n  popupPlacement: string;\n  children: ReactNode;\n  title: string;\n  offset?: { x: number; y: number };\n}\n\nfunction ToolTip({\n  style = { popup: {}, mainContainer: {} },\n  className = '',\n  popupPlacement = 'right',\n  children,\n  title,\n  offset = { x: 0, y: 0 },\n}: ToolTipProps) {\n  const refChild = useRef<HTMLDivElement>(null);\n  const refContent = useRef<HTMLDivElement>(null);\n\n  const [placement, setPlacement] = useState({ x: 0, y: 0 });\n  const [show, showToolTip] = useState(false);\n  const { elementsWraperRef } = useGlobal();\n\n  useLayoutEffect(() => {\n    const getPopupPlacement = () => {\n      let x: number;\n      let y: number;\n\n      if (refChild.current === null || refContent.current === null) {\n        return null;\n      }\n\n      const childBounding = refChild.current.getBoundingClientRect();\n      const contentBounding = refContent.current.getBoundingClientRect();\n\n      switch (popupPlacement) {\n        case 'left':\n          x = -contentBounding.width;\n          y =\n            childBounding.height / 2 -\n            ((childBounding.height / 2) * contentBounding.height) /\n              childBounding.height;\n          break;\n        case 'right':\n          x = childBounding.width;\n          y =\n            childBounding.height / 2 -\n            ((childBounding.height / 2) * contentBounding.height) /\n              childBounding.height;\n          break;\n        case 'top':\n          x =\n            childBounding.width / 2 -\n            ((childBounding.width / 2) * contentBounding.width) /\n              childBounding.width;\n          y = -childBounding.height;\n          break;\n        case 'bottom':\n          x =\n            childBounding.width / 2 -\n            ((childBounding.width / 2) * contentBounding.width) /\n              childBounding.width;\n          y = childBounding.height;\n          break;\n        default:\n          x = 0;\n          y = 0;\n          break;\n      }\n      return { x: x + childBounding.x, y: y + childBounding.y };\n    };\n\n    if (show) {\n      const pl = getPopupPlacement();\n\n      if (pl) {\n        setPlacement(pl);\n      }\n    }\n  }, [popupPlacement, show]);\n\n  const mouseOverHandler = useCallback(() => {\n    showToolTip(true);\n  }, []);\n\n  const mouseLeaveHandler = useCallback(() => {\n    showToolTip(false);\n  }, []);\n\n  return (\n    <Fragment>\n      <div\n        style={{\n          position: 'relative',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          ...style.mainContainer,\n        }}\n        ref={refChild}\n        onMouseOver={mouseOverHandler}\n        onMouseOut={mouseLeaveHandler}\n      >\n        {children}\n      </div>\n      {show &&\n        createPortal(\n          <div\n            ref={refContent}\n            style={{\n              ...styles.popup,\n              transform: `translate(${placement.x + offset.x}px,${\n                placement.y + offset.y\n              }px)`,\n              zIndex: 999999999,\n              ...style.popup,\n            }}\n            className={className}\n          >\n            <span style={{ pointerEvents: 'none' }}>{title}</span>\n          </div>,\n          elementsWraperRef,\n        )}\n    </Fragment>\n  );\n}\n\nexport default memo(ToolTip);\n","import { CSSProperties, memo } from 'react';\nimport { FaTimes } from 'react-icons/fa';\n\nimport ToolTip from './ToolTip/ToolTip';\n\nconst styles: Record<'button' | 'svg', CSSProperties> = {\n  button: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  svg: {\n    fill: '#ca0000',\n    fontSize: '16px',\n  },\n};\n\ninterface CloseButtonProps {\n  onClick?: () => void;\n  popupTitle?: string;\n  popupPlacement?: string;\n  className?: string;\n}\n\nfunction CloseButton(props: CloseButtonProps) {\n  const {\n    onClick = () => null,\n    popupTitle = 'Close',\n    popupPlacement = 'left',\n    className = '',\n  } = props;\n  return (\n    <div className={className}>\n      <ToolTip title={popupTitle} popupPlacement={popupPlacement}>\n        <button style={styles.button} type=\"button\" onClick={onClick}>\n          <FaTimes style={styles.svg} />\n        </button>\n      </ToolTip>\n    </div>\n  );\n}\n\nexport default memo(CloseButton);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { xGetFromToIndex, xyToXYObject } from 'ml-spectra-processing';\nimport { analyseMultiplet } from 'multiplet-analysis';\nimport { useState, useEffect } from 'react';\nimport { Plot, LineSeries, Axis } from 'react-plot';\n\nimport { isSpectrum2D } from '../../data/data2d/Spectrum2D';\nimport { Spectra } from '../NMRium';\nimport CloseButton from '../elements/CloseButton';\nimport { ActiveSpectrum } from '../reducer/Reducer';\n\nconst styles = css`\n  display: flex;\n  flex-direction: column;\n  width: 900px;\n  height: 400px;\n  padding: 5px;\n  button:focus {\n    outline: none;\n  }\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    span {\n      color: #464646;\n      font-size: 15px;\n      flex: 1;\n    }\n\n    button {\n      background-color: transparent;\n      border: none;\n      svg {\n        height: 16px;\n      }\n    }\n  }\n  .container {\n    overflow-y: auto;\n    background-color: white;\n    padding-top: 10px;\n\n    .row {\n      outline: none;\n      display: flex !important;\n      flex-direction: row;\n      margin: 0;\n      div {\n        flex: 4;\n      }\n      .multiplicity {\n        flex: 2;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    }\n\n    .row:nth-child(odd) {\n      background: #fafafa;\n    }\n  }\n`;\n\nconst loaderStyles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  user-select: none;\n  width: 900px;\n  height: 400px;\n\n  svg {\n    animation-duration: 0.5s;\n    animation-name: spinAnimation;\n    animation-iteration-count: infinite;\n    animation-fill-mode: forwards;\n    animation-direction: inherit;\n    animation-timing-function: linear;\n    animation-duration: 1s;\n    width: 100px;\n    height: 100px;\n  }\n\n  @keyframes spinAnimation {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\ninterface MultipletAnalysisModalProps {\n  data: Spectra;\n  activeSpectrum: ActiveSpectrum;\n  scaleX: any;\n  startX: any;\n  endX: any;\n  onClose: (element?: string) => void;\n}\n\nexport default function MultipletAnalysisModal({\n  data,\n  activeSpectrum,\n  scaleX,\n  startX,\n  endX,\n  onClose,\n}: MultipletAnalysisModalProps) {\n  const [analysisData, setAnalysisData] = useState<any>();\n  const [calcStart, setCalcStartStatus] = useState(false);\n  const [isCalcFinished, setCalcFinished] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCalcStartStatus(true);\n    }, 400);\n  }, []);\n\n  useEffect(() => {\n    if (activeSpectrum && startX && endX && calcStart) {\n      const spectrum = data[activeSpectrum.index];\n      if (isSpectrum2D(spectrum)) {\n        throw new Error('unreachable');\n      }\n\n      const {\n        data: { x, re },\n        info,\n      } = spectrum;\n\n      const from = scaleX().invert(startX);\n      const to = scaleX().invert(endX);\n\n      const { fromIndex, toIndex } = xGetFromToIndex(x, {\n        from,\n        to,\n      });\n      const analysesProps = {\n        x: x.slice(fromIndex, toIndex),\n        y: re.slice(fromIndex, toIndex),\n      };\n      try {\n        const result = analyseMultiplet(analysesProps, {\n          frequency: info.originFrequency,\n          takeBestPartMultiplet: true,\n          symmetrizeEachStep: true,\n          debug: true,\n        });\n        setCalcFinished(true);\n        setAnalysisData(result);\n      } catch (err) {\n        // eslint-disable-next-line no-console\n        console.log(err);\n      }\n    }\n  }, [startX, endX, data, scaleX, activeSpectrum, calcStart]);\n\n  if (!isCalcFinished) {\n    return (\n      <div css={loaderStyles}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\">\n          <g fill=\"#61DAFB\">\n            <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\" />\n            <path d=\"M520.5 78.1z\" />\n          </g>\n        </svg>\n        <p>Analyse Multiplet in progress. Please wait ...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div css={styles}>\n      <div className=\"header handle\">\n        <span>Analyse Multiplet</span>\n\n        <CloseButton onClick={onClose} />\n      </div>\n      <div className=\"container\">\n        {analysisData?.debug?.steps.map((d, index) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <div key={index} className=\"row\">\n              <Plot\n                width={400}\n                height={200}\n                svgStyle={{ overflow: 'visible' }}\n                seriesViewportStyle={{ stroke: 'black' }}\n              >\n                <LineSeries data={xyToXYObject(d.multiplet)} />\n                <Axis\n                  id=\"y\"\n                  position=\"left\"\n                  tickPosition=\"inner\"\n                  displayPrimaryGridLines\n                  hiddenTicks\n                  paddingStart={0.1}\n                  paddingEnd={0.1}\n                />\n                <Axis\n                  id=\"x\"\n                  position=\"bottom\"\n                  tickPosition=\"inner\"\n                  displayPrimaryGridLines\n                />\n              </Plot>\n              <div className=\"multiplicity\">\n                <p>\n                  {analysisData.js[index]\n                    ? `${\n                        analysisData.js[index]?.multiplicity\n                      }: ${analysisData.js[index]?.coupling.toFixed(3)} Hz`\n                    : ''}\n                </p>\n              </div>\n              <Plot\n                width={400}\n                height={200}\n                seriesViewportStyle={{ stroke: 'black' }}\n              >\n                <LineSeries\n                  data={xyToXYObject(d.errorFunction)}\n                  lineStyle={{ strokeWidth: 1 }}\n                />\n                <Axis\n                  id=\"y\"\n                  position=\"left\"\n                  tickPosition=\"inner\"\n                  displayPrimaryGridLines\n                  hiddenTicks\n                  paddingStart={0.1}\n                  paddingEnd={0.1}\n                />\n                <Axis\n                  id=\"x\"\n                  position=\"bottom\"\n                  tickPosition=\"inner\"\n                  displayPrimaryGridLines\n                />\n              </Plot>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { useMemo } from 'react';\n\nimport { Datum1D } from '../../data/types/data1d';\nimport { Datum2D } from '../../data/types/data2d';\nimport { useChartData } from '../context/ChartContext';\nimport nucleusToString from '../utility/nucleusToString';\n\nexport default function useSpectraByActiveNucleus() {\n  const { data, activeTab } = useChartData();\n\n  return useMemo<Array<Datum1D | Datum2D>>(() => {\n    if (data) {\n      return (\n        data.filter(\n          (spectrum) => activeTab === nucleusToString(spectrum.info.nucleus),\n        ) || []\n      );\n    }\n    return [];\n  }, [activeTab, data]);\n}\n","import get from 'lodash/get';\nimport { useMemo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\nimport { usePreferences } from '../context/PreferencesContext';\n\ninterface ActiveSpectrumOptionsResult {\n  isActive: boolean;\n  opacity: number;\n}\n\nexport default function useActiveSpectrumStyleOptions(\n  id: string,\n): ActiveSpectrumOptionsResult {\n  const { activeSpectrum } = useChartData();\n  const preferences = usePreferences();\n\n  return useMemo(() => {\n    const isActive =\n      activeSpectrum === null ? true : id === activeSpectrum.id ? true : false;\n    const opacity = isActive\n      ? 1\n      : get(preferences.current, 'controllers.dimmedSpectraTransparency', 0.1);\n    return { isActive, opacity };\n  }, [activeSpectrum, id, preferences]);\n}\n","import { memo } from 'react';\n\nimport { ExclusionZone } from '../../data/types/data1d/ExclusionZone';\nimport { useScaleChecked } from '../context/ScaleContext';\nimport { HighlightedSource, useHighlight } from '../highlight';\nimport useActiveSpectrumStyleOptions from '../hooks/useActiveSpectrumStyleOptions';\n\ninterface ExclusionZoneProps {\n  zone: ExclusionZone;\n  color: string;\n  vAlign: number;\n  spectrumID: string;\n}\n\nfunction ExclusionZoneAnnotation({\n  zone,\n  color,\n  vAlign,\n  spectrumID,\n}: ExclusionZoneProps) {\n  const { scaleX, scaleY } = useScaleChecked();\n  const highlight = useHighlight([zone.id], {\n    type: HighlightedSource.EXCLUSION_ZONE,\n    extra: { id: zone.id, spectrumID },\n  });\n\n  const { opacity } = useActiveSpectrumStyleOptions(spectrumID);\n\n  return (\n    <g key={zone.id} transform={`translate(${scaleX()(zone.to)},0)`}>\n      <rect\n        x=\"0\"\n        transform={`translate(0,${scaleY()(0) - (vAlign + 5)})`}\n        width={`${scaleX()(zone.from) - scaleX()(zone.to)}`}\n        height=\"10px\"\n        style={{\n          fill: highlight.isActive ? '#ff6f0057' : color,\n          opacity,\n        }}\n        {...highlight.onHover}\n      />\n    </g>\n  );\n}\n\nexport default memo(ExclusionZoneAnnotation);\n","import { VerticalAlign, VerticalAlignment } from '../../reducer/Reducer';\n\nexport default function getVerticalShift(\n  verticalAlign: VerticalAlign,\n  option: { index?: number; align?: VerticalAlignment },\n) {\n  const { index = 1, align = 'stack' } = option || {\n    index: 1,\n    align: 'stack',\n  };\n\n  return verticalAlign.align === align\n    ? index * verticalAlign.verticalShift\n    : 0;\n}\n","import { memo } from 'react';\n\nimport * as Filters from '../../data/Filters';\nimport { Datum1D } from '../../data/types/data1d';\nimport { ExclusionZone } from '../../data/types/data1d/ExclusionZone';\nimport { useChartData } from '../context/ChartContext';\nimport useSpectraByActiveNucleus from '../hooks/useSpectraPerNucleus';\nimport { VerticalAlign } from '../reducer/Reducer';\nimport { DISPLAYER_MODE } from '../reducer/core/Constants';\n\nimport ExclusionZoneAnnotation from './ExclusionZoneAnnotation';\nimport getVerticalShift from './utilities/getVerticalShift';\n\ninterface ExclusionZonesAnnotationsInnerProps {\n  displayerKey: string;\n  spectra: Datum1D[];\n  xDomains: any;\n  verticalAlign: VerticalAlign;\n}\n\nfunction ExclusionZonesAnnotationsInner({\n  displayerKey,\n  xDomains,\n  spectra,\n  verticalAlign,\n}: ExclusionZonesAnnotationsInnerProps) {\n  return (\n    <g\n      className=\"spectrum-exclusion-zones-group\"\n      clipPath={`url(#${displayerKey}clip-chart-1d)`}\n    >\n      {spectra\n        .filter((d) => d.display.isVisible === true && xDomains[d.id])\n        .map((d, index) =>\n          getExclusionZones(d).map((zone) => {\n            return (\n              <ExclusionZoneAnnotation\n                key={zone.id}\n                spectrumID={d.id}\n                vAlign={getVerticalShift(verticalAlign, { index })}\n                zone={zone}\n                color={d.display.color}\n              />\n            );\n          }),\n        )}\n    </g>\n  );\n}\n\nconst MemoizedPeakAnnotations = memo(ExclusionZonesAnnotationsInner);\n\nfunction ExclusionZonesAnnotations() {\n  const { displayerKey, xDomains, displayerMode, verticalAlign } =\n    useChartData();\n\n  const spectra = useSpectraByActiveNucleus() as Datum1D[];\n\n  if (displayerMode !== DISPLAYER_MODE.DM_1D) return null;\n\n  return (\n    <MemoizedPeakAnnotations\n      spectra={spectra}\n      displayerKey={displayerKey}\n      xDomains={xDomains}\n      verticalAlign={verticalAlign}\n    />\n  );\n}\n\nexport default ExclusionZonesAnnotations;\n\nfunction getExclusionZones(data: Datum1D): ExclusionZone[] {\n  return (\n    data.filters.find(\n      (filter) => filter.name === Filters.exclusionZones.id && filter.flag,\n    )?.value || []\n  );\n}\n","import { ScaleLinear } from 'd3';\nimport { useMemo } from 'react';\n\nimport { getXScale } from '../1d/utilities/scale';\nimport { useChartData } from '../context/ChartContext';\n\nexport function useXScale(): ScaleLinear<any, any, never> {\n  const { width, margin, xDomains, xDomain, mode } = useChartData();\n\n  return useMemo(\n    () => getXScale({ width, margin, xDomains, xDomain, mode }),\n    [margin, mode, width, xDomain, xDomains],\n  );\n}\n","import { ScaleLinear } from 'd3';\nimport { xyIntegral, xyReduce } from 'ml-spectra-processing';\nimport { useMemo } from 'react';\n\nimport { Data1D } from '../../data/types/data1d';\nimport { getIntegralYScale } from '../1d/utilities/scale';\nimport { useChartData } from '../context/ChartContext';\nimport { PathBuilder } from '../utility/PathBuilder';\n\nimport { useXScale } from './useXScale';\n\nfunction useIntegralYDomain(): ScaleLinear<number, number, number> {\n  const { height, margin, verticalAlign, activeSpectrum, integralsYDomains } =\n    useChartData();\n\n  return useMemo(\n    () =>\n      getIntegralYScale({\n        height,\n        margin,\n        verticalAlign,\n        activeSpectrum,\n        integralsYDomains,\n      }),\n    [activeSpectrum, height, integralsYDomains, margin, verticalAlign],\n  );\n}\n\nexport default function useIntegralPath(integralOptions: {\n  from: number;\n  to: number;\n}) {\n  const { data, activeSpectrum } = useChartData();\n\n  const scaleX = useXScale();\n  const scaleY = useIntegralYDomain();\n  const integral = useMemo(() => {\n    if (activeSpectrum) {\n      const { x, re } = data[activeSpectrum?.index].data as Data1D;\n      const { from, to } = integralOptions;\n      return xyIntegral(\n        { x, y: re },\n        {\n          from,\n          to,\n          reverse: true,\n        },\n      );\n    }\n    return { x: [], y: [] };\n  }, [activeSpectrum, data, integralOptions]);\n\n  const paths = useMemo(() => {\n    if (integral) {\n      const xySeries = xyReduce(integral, {\n        // from: xDomain[0],\n        // to: xDomain[1],\n        nbPoints: 200,\n        optimize: true,\n      });\n\n      const pathBuilder = new PathBuilder();\n      pathBuilder.moveTo(scaleX(xySeries.x[0]), scaleY(xySeries.y[0]));\n      for (let i = 1; i < xySeries.x.length; i++) {\n        pathBuilder.lineTo(scaleX(xySeries.x[i]), scaleY(xySeries.y[i]));\n      }\n\n      return pathBuilder.toString();\n    } else {\n      return '';\n    }\n  }, [integral, scaleX, scaleY]);\n\n  return paths;\n}\n","const integralDefaultValues = {\n  showAbsolute: false,\n  absoluteFormat: '0.00',\n  showRelative: true,\n  relativeFormat: '0.00',\n  color: '#000000',\n  strokeWidth: 1,\n};\n\nconst zoneDefaultValues = {\n  showFrom: false,\n  fromFormat: '0.00',\n  showTo: false,\n  toFormat: '0.00',\n  showAbsolute: false,\n  absoluteFormat: '0.00',\n  showRelative: true,\n  relativeFormat: '0.00',\n};\n\nconst getRangeDefaultValues = (nucleus?: string) => ({\n  showFrom: false,\n  fromFormat: '0.00',\n  showTo: false,\n  toFormat: '0.00',\n  showAbsolute: false,\n  absoluteFormat: '0.00',\n  showRelative: true,\n  relativeFormat: '0.00',\n  jGraphTolerance: nucleus === '1H' ? 0.2 : nucleus === '13C' ? 2 : 0, //J Graph tolerance for: 1H: 0.2Hz 13C: 2Hz\n});\n\nconst peaksDefaultValues = {\n  showPeakNumber: true,\n  peakNumberFormat: '0',\n  showPeakIndex: false,\n  peakIndexFormat: '0.00',\n  showDeltaPPM: true,\n  deltaPPMFormat: '0.00',\n  showDeltaHz: false,\n  deltaHzFormat: '0.00',\n  showPeakWidth: false,\n  peakWidthFormat: '00.0000',\n  showIntensity: true,\n  intensityFormat: '0.00',\n};\n\nconst databaseDefaultValues = {\n  showSmiles: true,\n  showSolvent: false,\n  showNames: true,\n  showRange: false,\n  showDelta: true,\n  showAssignment: false,\n  showCoupling: true,\n  showMultiplicity: true,\n};\n\nexport {\n  peaksDefaultValues,\n  integralDefaultValues,\n  getRangeDefaultValues,\n  zoneDefaultValues,\n  databaseDefaultValues,\n};\n","/** @jsxImportSource @emotion/react */\nimport { Fragment, useCallback, useRef, useState } from 'react';\nimport Draggable from 'react-draggable';\n\nimport { useChartData } from '../context/ChartContext';\nimport { useScaleChecked } from '../context/ScaleContext';\n\ninterface ResizedDrop {\n  from?: number;\n  to?: number;\n}\n\ninterface ResizableProps {\n  from: number;\n  to: number;\n  onDrag?: (element: ResizedDrop) => void;\n  onDrop: (element: ResizedDrop) => void;\n}\n\nfunction Resizable({ from, to, onDrag = () => null, onDrop }: ResizableProps) {\n  const { height, margin, mode } = useChartData();\n  const [rightDragVisibility, setRightDragVisibility] = useState(false);\n  const [leftDragVisibility, setLeftDragVisibility] = useState(false);\n  const [enable, setEnable] = useState(true);\n  const draggableRightRef = useRef(null);\n  const draggableLeftRef = useRef(null);\n\n  const { scaleX } = useScaleChecked();\n\n  const handleRightStart = useCallback((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setRightDragVisibility(true);\n  }, []);\n\n  const handleRightDrag = useCallback(\n    (e) => {\n      onDrag({ from: scaleX().invert(e.layerX) });\n    },\n    [onDrag, scaleX],\n  );\n\n  const handleRightStop = useCallback(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      setRightDragVisibility(false);\n\n      const _range =\n        mode === 'RTL'\n          ? [scaleX().invert(e.layerX), to]\n          : [to, scaleX().invert(e.layerX)];\n\n      let resized: ResizedDrop;\n      if (_range[1] > _range[0]) {\n        resized = {\n          from: _range[0],\n          to: _range[1],\n        };\n      } else {\n        resized = {\n          from,\n          to,\n        };\n      }\n\n      onDrop(resized);\n    },\n    [from, mode, onDrop, scaleX, to],\n  );\n\n  const handleLeftStart = useCallback((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setLeftDragVisibility(true);\n  }, []);\n\n  const handleLeftDrag = useCallback(\n    (e) => {\n      onDrag({ to: scaleX().invert(e.layerX) });\n    },\n    [onDrag, scaleX],\n  );\n\n  const handleLeftStop = useCallback(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      setLeftDragVisibility(false);\n      const _range =\n        mode === 'RTL'\n          ? [from, scaleX().invert(e.layerX)]\n          : [scaleX().invert(e.layerX), from];\n\n      let resized;\n      if (_range[1] > _range[0]) {\n        resized = {\n          from: _range[0],\n          to: _range[1],\n        };\n      } else {\n        resized = {\n          from,\n          to,\n        };\n      }\n\n      onDrop(resized);\n    },\n    [from, mode, onDrop, scaleX, to],\n  );\n\n  const mouseDownCaptureHandler = useCallback(({ shiftKey }) => {\n    if (shiftKey) {\n      setEnable(false);\n    }\n  }, []);\n\n  const mouseUpCaptureHandler = useCallback(() => {\n    setEnable(true);\n  }, []);\n\n  const mouseOverHandler = useCallback(({ target, shiftKey }) => {\n    if (shiftKey) {\n      target.style.cursor = 'crosshair';\n    } else {\n      target.style.cursor = 'ew-resize';\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <Draggable\n        axis=\"x\"\n        defaultPosition={{\n          x: scaleX()(from),\n          y: 0,\n        }}\n        position={{\n          x: scaleX()(from),\n          y: 0,\n        }}\n        scale={1}\n        handle=\".handle\"\n        onStart={handleRightStart}\n        onDrag={handleRightDrag}\n        onStop={handleRightStop}\n        nodeRef={draggableRightRef}\n      >\n        <rect\n          ref={draggableRightRef}\n          className={enable ? 'handle' : ''}\n          width={rightDragVisibility ? 1 : 6}\n          fill=\"red\"\n          height={height + margin.top}\n          style={{ fillOpacity: rightDragVisibility ? 1 : 0 }}\n          onMouseDownCapture={mouseDownCaptureHandler}\n          onMouseUpCapture={mouseUpCaptureHandler}\n          onMouseEnter={mouseOverHandler}\n        />\n      </Draggable>\n\n      <Draggable\n        axis=\"x\"\n        defaultPosition={{\n          x: scaleX()(to),\n          y: 0,\n        }}\n        position={{\n          x: scaleX()(to),\n          y: 0,\n        }}\n        handle=\".handle\"\n        scale={1}\n        onStart={handleLeftStart}\n        onDrag={handleLeftDrag}\n        onStop={handleLeftStop}\n        nodeRef={draggableLeftRef}\n      >\n        <rect\n          ref={draggableLeftRef}\n          className={enable ? 'handle' : ''}\n          width={leftDragVisibility ? 1 : 6}\n          fill=\"red\"\n          height={height + margin.top}\n          style={{ fillOpacity: leftDragVisibility ? 1 : 0 }}\n          onMouseDownCapture={mouseDownCaptureHandler}\n          onMouseUpCapture={mouseUpCaptureHandler}\n          onMouseEnter={mouseOverHandler}\n        />\n      </Draggable>\n    </Fragment>\n  );\n}\n\nexport default Resizable;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useState, useEffect } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport { useScaleChecked } from '../context/ScaleContext';\nimport { HighlightedSource, useHighlight } from '../highlight/index';\nimport { RESIZE_INTEGRAL } from '../reducer/types/Types';\n\nimport Resizable from './Resizable';\n\nconst stylesOnHover = css`\n  pointer-events: bounding-box;\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  .highlight {\n    fill: transparent;\n  }\n  .target {\n    visibility: hidden;\n  }\n`;\n\nconst stylesHighlighted = css`\n  pointer-events: bounding-box;\n\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  fill: #ff6f0057;\n\n  .target {\n    visibility: visible;\n  }\n`;\n\ninterface IntegralResizableProps {\n  integralData: {\n    id: string;\n    from: number;\n    to: number;\n    integral?: number;\n  };\n}\n\nfunction IntegralResizable({ integralData }: IntegralResizableProps) {\n  const { height, margin } = useChartData();\n  const { scaleX } = useScaleChecked();\n  const dispatch = useDispatch();\n\n  const [{ id, integral, from, to }, setIntegral] = useState(integralData);\n  const highlight = useHighlight([id], {\n    type: HighlightedSource.INTEGRAL,\n    extra: { id },\n  });\n\n  useEffect(() => {\n    setIntegral(integralData);\n  }, [integralData]);\n\n  const handleOnStopResizing = useCallback(\n    (resized) => {\n      dispatch({\n        type: RESIZE_INTEGRAL,\n        payload: { data: { ...integralData, ...resized } },\n      });\n    },\n    [dispatch, integralData],\n  );\n\n  const handleOnEnterNotation = useCallback(() => {\n    highlight.show();\n  }, [highlight]);\n\n  const handleOnMouseLeaveNotation = useCallback(() => {\n    highlight.hide();\n  }, [highlight]);\n\n  const dragHandler = useCallback((boundary) => {\n    setIntegral((integral) => ({ ...integral, ...boundary }));\n  }, []);\n\n  const x0 = from ? scaleX()(from) : 0;\n  const x1 = to ? scaleX()(to) : 0;\n\n  return (\n    <g\n      css={highlight.isActive ? stylesHighlighted : stylesOnHover}\n      onMouseEnter={handleOnEnterNotation}\n      onMouseLeave={handleOnMouseLeaveNotation}\n    >\n      <rect\n        data-no-export=\"true\"\n        x={`${x1}`}\n        y=\"0\"\n        width={`${x0 - x1}`}\n        height={height - margin.bottom}\n        className=\"highlight\"\n      />\n      {/* {highlight.isActive && ( */}\n      <text\n        x={x1}\n        y={height - margin.bottom + 30}\n        fill=\"black\"\n        style={{ fontSize: '12px', fontWeight: 'bold' }}\n      >\n        {integral !== undefined ? integral.toFixed(2) : ''}\n      </text>\n      {/* )} */}\n      <Resizable\n        from={integralData.from}\n        to={integralData.to}\n        onDrag={dragHandler}\n        onDrop={handleOnStopResizing}\n        data-no-export=\"true\"\n      />\n    </g>\n  );\n}\n\nexport default IntegralResizable;\n","import { useMemo } from 'react';\n\nimport { usePreferences } from '../context/PreferencesContext';\nimport useIntegralPath from '../hooks/useIntegralPath';\nimport { integralDefaultValues } from '../panels/extra/preferences/defaultValues';\nimport { getValue } from '../utility/LocalStorage';\n\nimport IntegralResizable from './IntegralResizable';\n\ninterface IntegralProps {\n  integral: { id: string; from: number; to: number; integral?: number };\n  isActive: boolean;\n}\n\nfunction Integral({ integral, isActive }: IntegralProps) {\n  const preferences = usePreferences();\n  const path = useIntegralPath(integral);\n\n  const integralSettings = useMemo(() => {\n    let {\n      color = integralDefaultValues.color,\n      strokeWidth = integralDefaultValues.strokeWidth,\n    } = getValue(preferences.current, 'formatting.panels.integrals') || {};\n    return { color, strokeWidth };\n  }, [preferences]);\n\n  return (\n    <g>\n      <path\n        className=\"line\"\n        stroke={integralSettings.color}\n        strokeWidth={integralSettings.strokeWidth}\n        fill=\"none\"\n        style={{\n          opacity: isActive ? 1 : 0.2,\n        }}\n        d={path}\n      />\n\n      <IntegralResizable integralData={integral} />\n    </g>\n  );\n}\n\nexport default Integral;\n","import { useMemo } from 'react';\n\nimport { isSpectrum1D } from '../../data/data1d/Spectrum1D';\nimport { useChartData } from '../context/ChartContext';\n\nimport Integral from './Integral';\n\nfunction IntegralsSeries() {\n  const { xDomains, activeSpectrum, data, displayerKey } = useChartData();\n\n  const Integrals = useMemo(() => {\n    const isActive = (id) => {\n      return activeSpectrum === null\n        ? true\n        : id === activeSpectrum.id\n        ? true\n        : false;\n    };\n\n    return (\n      <g className=\"integrals\">\n        {data?.[0] &&\n          data\n            .filter((d) => d.display.isVisible === true && xDomains[d.id])\n            .filter(isSpectrum1D)\n            .map((spectrum) =>\n              spectrum.integrals.values.map((integral) => (\n                <Integral\n                  key={integral.id}\n                  integral={integral}\n                  isActive={isActive(spectrum.id)}\n                />\n              )),\n            )}\n      </g>\n    );\n  }, [activeSpectrum, data, xDomains]);\n\n  return <g clipPath={`url(#${displayerKey}clip-chart-1d)`}>{Integrals}</g>;\n}\n\nexport default IntegralsSeries;\n","import { CSSProperties, useMemo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\nimport { useScaleChecked } from '../context/ScaleContext';\nimport useActiveSpectrumStyleOptions from '../hooks/useActiveSpectrumStyleOptions';\nimport useXYReduce, { XYReducerDomainAxis } from '../hooks/useXYReduce';\nimport { PathBuilder } from '../utility/PathBuilder';\n\nimport getVerticalShift from './utilities/getVerticalShift';\n\ninterface LineProps {\n  data?: {\n    x: Array<number>;\n    y: Array<number>;\n  };\n  id: string;\n  display: {\n    color: CSSProperties['stroke'];\n  };\n  index: number;\n}\n\nfunction Line({ data, id, display, index }: LineProps) {\n  const { verticalAlign } = useChartData();\n  const { scaleX, scaleY } = useScaleChecked();\n  const xyReduce = useXYReduce(XYReducerDomainAxis.XAxis);\n  const { opacity } = useActiveSpectrumStyleOptions(id);\n\n  const vAlign = useMemo(() => {\n    return getVerticalShift(verticalAlign, { index });\n  }, [index, verticalAlign]);\n\n  const paths = useMemo(() => {\n    const _scaleX = scaleX();\n    const _scaleY = scaleY(id);\n\n    const pathBuilder = new PathBuilder();\n    if (data?.x && data?.y && _scaleX(0)) {\n      const pathPoints = xyReduce(data);\n\n      pathBuilder.moveTo(_scaleX(pathPoints.x[0]), _scaleY(pathPoints.y[0]));\n      for (let i = 1; i < pathPoints.x.length; i++) {\n        pathBuilder.lineTo(_scaleX(pathPoints.x[i]), _scaleY(pathPoints.y[i]));\n      }\n\n      return pathBuilder.toString();\n    } else {\n      return '';\n    }\n  }, [scaleX, scaleY, id, data, xyReduce]);\n\n  return (\n    <path\n      className=\"line\"\n      data-test-id=\"spectrum-line\"\n      key={id}\n      stroke={display.color}\n      fill=\"none\"\n      style={{\n        opacity,\n      }}\n      d={paths}\n      transform={`translate(0,-${vAlign})`}\n    />\n  );\n}\n\nexport default Line;\n","import { get1DDataXY } from '../../data/data1d/Spectrum1D/get1DDataXY';\nimport { useChartData } from '../context/ChartContext';\n\nimport Line from './Line';\n\nfunction LinesSeries() {\n  const { data, tempData, displayerKey, xDomains } = useChartData();\n  const _data = tempData ? tempData : data;\n\n  return (\n    <g clipPath={`url(#${displayerKey}clip-chart-1d)`} className=\"spectrums\">\n      {_data\n        ?.filter((d) => d.display.isVisible === true && xDomains[d.id])\n        .map((d, i) => (\n          <Line key={d.id} {...d} data={get1DDataXY(d)} index={i} />\n        ))}\n    </g>\n  );\n}\n\nexport default LinesSeries;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  useRef,\n  useState,\n  useCallback,\n  useLayoutEffect,\n  useEffect,\n  useMemo,\n} from 'react';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport { HighlightedSource, useHighlight } from '../highlight';\nimport { SHIFT_SPECTRUM } from '../reducer/types/Types';\nimport { useFormatNumberByNucleus } from '../utility/FormatNumber';\n\nconst styles = css`\n  input {\n    -webkit-user-select: text; /* Safari 3.1+ */\n    -moz-user-select: text; /* Firefox 2+ */\n    -ms-user-select: text; /* IE 10+ */\n    user-select: text; /* Standard syntax */\n  }\n\n  input[type='number']::-webkit-outer-spin-button,\n  input[type='number']::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  .notification-input-normal {\n    opacity: 1;\n    left: 4px;\n    position: fixed;\n    font-size: 10px;\n    outline: none;\n    background-color: transparent;\n  }\n\n  .notification-input-normal input:focus {\n    outline: none;\n    background-color: white;\n  }\n\n  .input-over {\n    background-color: white;\n    outline: none;\n  }\n`;\n\ninterface PeakAnnotationProps {\n  id: string;\n  x: number;\n  y: number;\n  sign: number;\n  color: string;\n  isActive: boolean;\n  value: number;\n  nucleus: string;\n}\n\nfunction PeakAnnotation({\n  id,\n  x,\n  y,\n  sign, // 1 positive -1 negative\n  value,\n  color,\n  isActive,\n  nucleus,\n}: PeakAnnotationProps) {\n  const refText = useRef<SVGTextElement>(null);\n  const [isSelected, setIsSelected] = useState(false);\n  const [_value, setValue] = useState(value);\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 });\n  const format = useFormatNumberByNucleus(nucleus);\n  const highlight = useHighlight([id], {\n    type: HighlightedSource.PEAK,\n    extra: { id },\n  });\n\n  const dispatch = useDispatch();\n\n  const handleOnPeakChange = useCallback(\n    (e) => dispatch({ type: SHIFT_SPECTRUM, shiftValue: e.shiftValue }),\n    [dispatch],\n  );\n\n  useLayoutEffect(() => {\n    const textBox = refText.current?.getBBox();\n    setContainerSize({\n      width: textBox?.width || 0,\n      height: textBox?.height || 0,\n    });\n  }, [isSelected]);\n\n  useEffect(() => {\n    setValue(value);\n  }, [value]);\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        const newValue = event.currentTarget.valueAsNumber;\n        if (!isNaN(newValue)) {\n          const shiftValue = newValue - value;\n\n          handleOnPeakChange({\n            id,\n            value: newValue,\n            oldValue: value,\n            shiftValue: shiftValue,\n          });\n\n          event.currentTarget.blur();\n          setIsSelected(false);\n        }\n      } else if (event.key === 'Escape') {\n        setValue(value);\n        event.currentTarget.blur();\n        setIsSelected(false);\n      }\n    },\n    [value, handleOnPeakChange, id],\n  );\n\n  const handleChange = useCallback((event) => {\n    setValue(event.target.value);\n  }, []);\n\n  const handleSelectPeakAnnotation = useCallback((e) => {\n    e.stopPropagation();\n    setIsSelected(true);\n    return false;\n  }, []);\n\n  const handleOnEnterNotation = useCallback(() => {\n    highlight.show();\n  }, [highlight]);\n\n  const handleOnMouseLeaveNotation = useCallback(() => {\n    highlight.hide();\n  }, [highlight]);\n\n  const newValue = useMemo(\n    () => (isSelected ? value : format(value)),\n    [format, isSelected, value],\n  );\n  const oldValue = useMemo(\n    () => (isSelected ? _value : format(_value)),\n    [_value, format, isSelected],\n  );\n\n  return (\n    <g\n      css={styles}\n      id={id}\n      style={{ outline: 'none' }}\n      transform={`translate(${x}, ${y})`}\n      onMouseEnter={handleOnEnterNotation}\n      onMouseLeave={handleOnMouseLeaveNotation}\n    >\n      <line\n        x1=\"0\"\n        x2=\"0\"\n        y1={sign === -1 ? 10 : 0}\n        y2={sign === -1 ? 28 : -18}\n        stroke={color}\n        strokeWidth={highlight.isActive ? '7px' : '1px'}\n      />\n      <text\n        ref={refText}\n        className=\"peaks-text\"\n        x=\"0\"\n        y={sign === -1 ? 28 : -12}\n        dy=\"0\"\n        dx=\"0.35em\"\n        fill=\"transparent\"\n        fontSize=\"10px\"\n        fontWeight=\"100\"\n        style={{\n          position: 'absolute',\n        }}\n      >\n        {newValue}\n      </text>\n      <foreignObject\n        x=\"0\"\n        y={sign === -1 ? 16 : -22}\n        dy=\"0.1em\"\n        dx=\"0.35em\"\n        width={containerSize.width + 20}\n        height=\"40px\"\n        data-no-export=\"true\"\n      >\n        <div\n          style={{\n            width: containerSize.width + 20,\n            height: '100%',\n            paddingRight: 5,\n          }}\n        >\n          <input\n            onClick={handleSelectPeakAnnotation}\n            className={isSelected ? 'input-over' : 'notification-input-normal'}\n            style={{\n              width: 'inherit',\n              border: isSelected ? `1px solid ${color}` : `0`,\n              opacity: isActive ? 1 : 0.2,\n              userSelect: 'none',\n              color: color,\n            }}\n            value={oldValue}\n            onKeyDown={handleKeyDown}\n            onChange={handleChange}\n            type=\"number\"\n            disabled={!isActive}\n          />\n        </div>\n      </foreignObject>\n    </g>\n  );\n}\n\nexport default PeakAnnotation;\n","import { useMemo } from 'react';\n\nimport { isSpectrum1D } from '../../data/data1d/Spectrum1D';\nimport { useChartData } from '../context/ChartContext';\nimport { useScaleChecked } from '../context/ScaleContext';\n\nimport PeakAnnotation from './PeakAnnotation';\nimport getVerticalShift from './utilities/getVerticalShift';\n\nfunction PeakAnnotations() {\n  const { data, activeSpectrum, verticalAlign, displayerKey, xDomains } =\n    useChartData();\n  const { scaleX, scaleY } = useScaleChecked();\n\n  const Peaks = useMemo(() => {\n    const getVerticalAlign = (id) => {\n      const index = data.findIndex((d) => d.id === id);\n      return getVerticalShift(verticalAlign, { index });\n    };\n\n    const reSortData = () => {\n      const _data = [...data];\n      return activeSpectrum\n        ? _data.sort((x, y) => {\n            return x.id === activeSpectrum.id\n              ? 1\n              : y.id === activeSpectrum.id\n              ? -1\n              : 0;\n          })\n        : _data;\n    };\n\n    return (\n      data &&\n      reSortData()\n        .filter((d) => d.display.isVisible === true && xDomains[d.id])\n        .filter(isSpectrum1D)\n        .map((d) => {\n          return (\n            d.peaks?.values &&\n            d.display.isPeaksMarkersVisible && (\n              <g\n                key={d.id}\n                transform={`translate(0,-${getVerticalAlign(d.id)})`}\n              >\n                {d.peaks.values.map(({ x, y, id }) => (\n                  <PeakAnnotation\n                    key={id}\n                    x={scaleX()(x)}\n                    y={scaleY(d.id)(y) - 5}\n                    sign={Math.sign(y)}\n                    id={id}\n                    value={x}\n                    color=\"#730000\"\n                    nucleus={d.info.nucleus}\n                    isActive={\n                      activeSpectrum == null\n                        ? false\n                        : activeSpectrum.id === d.id\n                        ? true\n                        : false\n                    }\n                  />\n                ))}\n              </g>\n            )\n          );\n        })\n    );\n  }, [data, verticalAlign, activeSpectrum, xDomains, scaleX, scaleY]);\n\n  return (\n    <g className=\"peaks\" clipPath={`url(#${displayerKey}clip-chart-1d)`}>\n      {Peaks}\n    </g>\n  );\n}\n\nexport default PeakAnnotations;\n","import { extent } from 'd3';\nimport { rangesToXY } from 'nmr-processing';\n\nimport { Datum1D } from '../../data/types/data1d';\nimport { useChartData } from '../context/ChartContext';\nimport { useScaleChecked } from '../context/ScaleContext';\nimport { HighlightedSource, useHighlightData } from '../highlight';\nimport useSpectrum from '../hooks/useSpectrum';\n\nimport { getYScale } from './utilities/scale';\n\nconst emptyData = { info: { originFrequency: 400 } };\n\nfunction ResurrectedDatabaseRanges() {\n  const { displayerKey, verticalAlign, height, margin } = useChartData();\n  const { info } = useSpectrum(emptyData) as Datum1D;\n  const { highlight } = useHighlightData();\n  const { scaleX } = useScaleChecked();\n\n  if (highlight.sourceData?.type !== HighlightedSource.DATABASE) {\n    return null;\n  }\n\n  const fullHeight = height - margin.bottom;\n  const blockHight = fullHeight / 4;\n\n  const { ranges } = highlight.sourceData.extra || [];\n\n  let yDomain: any[] = [0, 0];\n\n  const spectra = ranges.map((range) => {\n    const { from, to } = range;\n    const diff = Math.abs(from - to) / 2;\n    const newForm = from - diff;\n    const newTo = to + diff;\n    const data = rangesToXY([range], {\n      frequency: info.originFrequency,\n      from: newForm,\n      to: newTo,\n      nbPoints: 256,\n    });\n    //calculate y domain\n    const domain = extent(data.y) as number[];\n    yDomain[0] = domain[0] < yDomain[0] ? domain[0] : yDomain[0];\n    yDomain[1] = domain[1] > yDomain[1] ? domain[1] : yDomain[1];\n\n    return { data, from: newForm, to: newTo };\n  }, []);\n\n  const scaleY = getYScale({\n    height: blockHight,\n    margin: { top: 0, bottom: 0 },\n    verticalAlign,\n    yDomain,\n  });\n\n  const paths = spectra.map(({ data: { x, y }, from, to }) => {\n    let path = `M ${scaleX()(x[0])} ${scaleY(y[0])} `;\n    path += x.slice(1).reduce((accumulator, point, i) => {\n      accumulator += ` L ${scaleX()(point)} ${scaleY(y[i + 1])}`;\n      return accumulator;\n    }, '');\n    return { path, from, to };\n  }, []);\n\n  return (\n    <g\n      clipPath={`url(#${displayerKey}clip-chart-1d)`}\n      className=\"resurrected-database-ranges\"\n      width=\"100%\"\n      height=\"100%\"\n    >\n      {paths.map(({ path, from, to }, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <g key={`${index}`}>\n          <g transform={`translate(${scaleX()(to)},0)`}>\n            <rect\n              x=\"0\"\n              width={Math.abs(scaleX()(to) - scaleX()(from))}\n              height=\"100%\"\n              fill=\"#ff6f0057\"\n            />\n          </g>\n          <path\n            transform={`translate(0,${fullHeight - blockHight * 2})`}\n            stroke=\"black\"\n            fill=\"none\"\n            d={path}\n          />\n        </g>\n      ))}\n    </g>\n  );\n}\n\nexport default ResurrectedDatabaseRanges;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport * as d3 from 'd3';\nimport { useEffect, useRef } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\nimport { useScale } from '../context/ScaleContext';\n\nconst axisStyles = css`\n  user-select: none;\n\n  path,\n  line {\n    fill: none;\n    stroke: black;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n    user-select: none;\n  }\n`;\n\nconst gridStyles = css`\n  user-select: none;\n\n  line {\n    stroke: rgb(104, 104, 104);\n    stroke-opacity: 0.2;\n    shape-rendering: crispEdges;\n    stroke-dasharray: 3;\n    stroke-width: 1;\n    user-select: none;\n  }\n\n  path {\n    stroke-width: 0;\n  }\n`;\n\ninterface XAxisProps {\n  show?: boolean;\n  showGrid?: boolean;\n  mode?: string;\n  label?: string;\n}\n\nfunction XAxis(props: XAxisProps) {\n  const { show = true, showGrid = false, mode, label: labelProp } = props;\n  const { xDomain, height, width, margin } = useChartData();\n  const { scaleX } = useScale();\n\n  const refAxis = useRef<SVGGElement>(null);\n  const refGrid = useRef<SVGGElement>(null);\n\n  const label = labelProp ? labelProp : mode === 'RTL' ? 'δ [ppm]' : 'time [s]';\n\n  useEffect(() => {\n    if (!show || !scaleX) return;\n\n    const xAxis = d3\n      .axisBottom(scaleX().domain(xDomain))\n      .ticks(8)\n      .tickFormat(d3.format('0'));\n\n    const grid = d3\n      .axisBottom(scaleX().domain(xDomain))\n      .ticks(50)\n      .tickSize(-(height - margin.top - margin.bottom))\n      .tickFormat(() => '');\n\n    // @ts-expect-error This line of code is actually well typed ...\n    d3.select(refAxis.current).call(xAxis);\n\n    // @ts-expect-error ditto\n    d3.select(refGrid.current).call(grid);\n  }, [height, margin.bottom, margin.top, scaleX, show, xDomain]);\n\n  if (!width || !height || !scaleX) {\n    return null;\n  }\n\n  return (\n    <>\n      {show && (\n        <g\n          className=\"x\"\n          css={axisStyles}\n          transform={`translate(0,${height - margin.bottom})`}\n          ref={refAxis}\n        >\n          <text fill=\"#000\" x={width - 10} y=\"30\" dy=\"0.70em\" textAnchor=\"end\">\n            {label}\n          </text>\n        </g>\n      )}\n      {showGrid && (\n        <g\n          css={gridStyles}\n          className=\"grid\"\n          ref={refGrid}\n          transform={`translate(0,${height - margin.bottom})`}\n        />\n      )}\n    </>\n  );\n}\n\nexport default XAxis;\n","import { Jcoupling } from 'nmr-processing';\n\nimport { Range, Signal1D } from '../../types/data1d';\nimport generateID from '../../utilities/generateID';\n/**\n * Links object that use coupling as key and value is an array of objects {id:signal id ,x:signal delta,y:coupling}\n */\n\ninterface Coupling {\n  coupling: number;\n  delta: number;\n}\n\nexport interface CouplingLink {\n  id: string;\n  couplings: Coupling[];\n  from: number;\n  to: number;\n}\n\ninterface GenerateJGraphDataResult {\n  signals: Signal1D[];\n  jCouplingMax: number;\n  links: CouplingLink[];\n}\n\nexport default function generateJGraphData(\n  ranges: Range[],\n  jGraphTolerance: number,\n): GenerateJGraphDataResult | null {\n  if (!ranges && !Array.isArray(ranges)) return null;\n\n  let signals: Signal1D[] = [];\n  let jCouplingMax = 0;\n  let links: CouplingLink[] = createLinks(ranges, jGraphTolerance);\n  for (const range of ranges) {\n    for (const signal of range.signals) {\n      const { id: signalId, ...restSignal } = signal;\n\n      if (restSignal.js) {\n        signals.push({ id: `${range.id}${signalId}`, ...restSignal });\n        const tempMax = getJsCouplingMax(restSignal.js);\n        jCouplingMax = tempMax > jCouplingMax ? tempMax : jCouplingMax;\n      }\n    }\n  }\n\n  return { signals, jCouplingMax, links };\n}\n\nfunction getJsCouplingMax(js: Jcoupling[]): number {\n  let max = -Infinity;\n  for (const { coupling } of js) {\n    max = coupling > max ? coupling : max;\n  }\n  return max;\n}\n\nfunction getCouplings(ranges: Range[]): Coupling[] {\n  const couplings: Coupling[] = [];\n  for (let range of ranges) {\n    for (const { delta, js } of range.signals) {\n      for (const { coupling } of js || []) {\n        couplings.push({ coupling, delta });\n      }\n    }\n  }\n  return couplings;\n}\n\nfunction initLink(coupling: Coupling): CouplingLink {\n  const { delta } = coupling;\n  return {\n    id: generateID(),\n    from: delta,\n    to: delta,\n    couplings: [coupling],\n  };\n}\n\nfunction createLinks(ranges: Range[], jGraphTolerance = 0) {\n  const couplings = getCouplings(ranges).sort(\n    (a, b) => a.coupling - b.coupling,\n  );\n\n  if (!couplings || couplings.length === 0) return [];\n\n  const links: CouplingLink[] = [initLink(couplings[0])];\n\n  let index = 0;\n  let start = index;\n  let end = 1;\n\n  while (end < couplings.length) {\n    const nextCoupling = couplings[end];\n    if (\n      Math.abs(couplings[start].coupling - nextCoupling.coupling) <\n      jGraphTolerance\n    ) {\n      links[index].couplings.push(nextCoupling);\n\n      if (nextCoupling.delta > links[index].to) {\n        links[index].to = nextCoupling.delta;\n      } else if (nextCoupling.delta < links[index].from) {\n        links[index].from = nextCoupling.delta;\n      }\n\n      end++;\n    } else {\n      if (\n        Math.abs(couplings[end - 1].coupling - nextCoupling.coupling) <\n        jGraphTolerance\n      ) {\n        start = end - 1;\n      } else {\n        index++;\n        links[index] = initLink(couplings[end]);\n        start = end;\n        end = end + 1;\n      }\n    }\n  }\n\n  return links;\n}\n","import { ScaleLinear } from 'd3';\nimport { useContext, createContext } from 'react';\n\ninterface JGraphState {\n  scaleY: ScaleLinear<number, number, never> | null;\n  height: number;\n  maxValue: number;\n}\n\nconst JGraphContext = createContext<JGraphState>({\n  scaleY: null,\n  height: 0,\n  maxValue: 0,\n});\n\nexport const JGraphContextProvider = JGraphContext.Provider;\n\nexport function useJGraph() {\n  const jGraphState = useContext(JGraphContext);\n  if (!jGraphState.scaleY) {\n    throw new Error('scale cannot be null');\n  }\n\n  return jGraphState;\n}\n","import { ScaleLinear } from 'd3';\nimport { forwardRef, useRef, MutableRefObject } from 'react';\nimport { useLinearPrimaryTicks } from 'react-d3-utils';\n\ninterface BaseAxis {\n  x: number;\n  y: number;\n}\ninterface ScaleAxis {\n  scale: ScaleLinear<number, number>;\n}\n\ninterface Vertical {\n  height: number;\n  showGrid?: false;\n}\n\ninterface VerticalGrid {\n  height: number;\n  showGrid: true;\n  width: number;\n}\n\ninterface Ticks {\n  label: string;\n  position: number;\n}\n\ninterface TickAxis {\n  ticks: Ticks[];\n  // eslint-disable-next-line react/no-unused-prop-types\n  ref: MutableRefObject<SVGGElement | null>;\n}\n\ntype VerticalAxisProps = BaseAxis & (Vertical | VerticalGrid) & ScaleAxis;\ntype VerticalRenderProps = BaseAxis & (Vertical | VerticalGrid) & TickAxis;\n\nconst VerticalAxis = forwardRef<SVGGElement | null, VerticalRenderProps>(\n  (props, ref) => {\n    const { x, y, height, showGrid, ticks } = props;\n    return (\n      <g ref={ref} transform={`translate(${x}, ${y})`}>\n        <line y2={height} x1={15} x2={15} stroke=\"black\" />\n        {ticks.map(({ label, position }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <g key={index + label + position}>\n            {showGrid && props.width && (\n              <line\n                y1={position}\n                y2={position}\n                x1={15}\n                x2={props.width - x}\n                stroke=\"lightgray\"\n              />\n            )}\n            <line y1={position} y2={position} x1={15} x2={10} stroke=\"black\" />\n            <text y={position} dominantBaseline=\"middle\" textAnchor=\"end\">\n              {label}\n            </text>\n          </g>\n        ))}\n      </g>\n    );\n  },\n);\n\nexport function LinearVerticalAxis(props: VerticalAxisProps) {\n  const { scale, ...other } = props;\n  const ref = useRef<SVGGElement>(null);\n  const ticks = useLinearPrimaryTicks(scale, 'vertical', ref);\n  return <VerticalAxis {...other} ticks={ticks} ref={ref} />;\n}\n","import { useChartData } from '../../context/ChartContext';\nimport { LinearVerticalAxis } from '../../elements/linearAxis/LinearVerticalAxis';\n\nimport { useJGraph } from './JGraphContext';\n\nexport function JGraphVerticalAxis() {\n  const { width, margin } = useChartData();\n  const { height, scaleY } = useJGraph();\n\n  if (!scaleY) return null;\n\n  return (\n    <svg style={{ overflow: 'visible' }} height={height + 20} width={60}>\n      <LinearVerticalAxis\n        x={20}\n        y={0}\n        scale={scaleY}\n        height={height}\n        showGrid\n        width={width - margin.right}\n      />\n    </svg>\n  );\n}\n","import { useCallback } from 'react';\n\nimport { CouplingLink } from '../../../data/data1d/Spectrum1D/generateJGraphData';\nimport { useScaleChecked } from '../../context/ScaleContext';\n\nimport { useJGraph } from './JGraphContext';\n\ninterface JsCouplingLinksProps {\n  links: CouplingLink[];\n}\n\nexport default function JsCouplingLinks(props: JsCouplingLinksProps) {\n  const { links } = props;\n  const { scaleX } = useScaleChecked();\n  const { scaleY, maxValue } = useJGraph();\n  const generatePath = useCallback(\n    (link: CouplingLink): string => {\n      if (!scaleY) return '';\n\n      const { from, to, couplings } = link;\n      let paths: string[] = [];\n      for (const coupling of couplings) {\n        paths.push(\n          `M${scaleX()(from)},${scaleY(coupling.coupling)} L${scaleX()(\n            to,\n          )},${scaleY(coupling.coupling)}`,\n        );\n      }\n      return paths.join(' ');\n    },\n    [scaleX, scaleY],\n  );\n\n  return (\n    <g className=\"js-coupling-links\">\n      {links\n        .filter((link) => link.couplings.length > 1)\n        .map((link) => {\n          return (\n            <path\n              key={link.id}\n              d={generatePath(link)}\n              style={{\n                stroke: `hsl(${\n                  (link.couplings[0].coupling * 360) / maxValue\n                },100%,50%)`,\n              }}\n              strokeWidth=\"1\"\n            />\n          );\n        })}\n    </g>\n  );\n}\n","import { useState } from 'react';\n\nimport { useJGraph } from './JGraphContext';\n\ninterface JsCouplingProps {\n  value: number;\n}\n\nexport default function JsCoupling({ value }: JsCouplingProps) {\n  const { scaleY, maxValue } = useJGraph();\n  const [isOver, setOver] = useState<boolean>(false);\n\n  if (!scaleY) return null;\n\n  return (\n    <g\n      className=\"coupling\"\n      style={{ transform: `translate(0px,${scaleY(value)}px)` }}\n    >\n      <circle\n        onMouseEnter={() => setOver(true)}\n        onMouseLeave={() => setOver(false)}\n        cx={0}\n        cy={0}\n        r={4}\n        fill={`hsl(${(value * 360) / maxValue},100%,${isOver ? 45 : 50}%)`}\n        pointerEvents=\"all\"\n      />\n      {isOver && (\n        <g style={{ transform: `translate(0px,15px)` }}>\n          <text\n            pointerEvents=\"none\"\n            stroke=\"white\"\n            strokeWidth=\"0.6em\"\n            fontSize=\"11px\"\n            dominantBaseline=\"middle\"\n            textAnchor=\"end\"\n          >{`${value.toFixed(1)} Hz`}</text>\n          <text\n            pointerEvents=\"none\"\n            stroke=\"black\"\n            fontSize=\"11px\"\n            dominantBaseline=\"middle\"\n            textAnchor=\"end\"\n          >{`${value.toFixed(1)} Hz`}</text>\n        </g>\n      )}\n    </g>\n  );\n}\n","import { Signal1D } from '../../../data/types/data1d';\nimport { useScaleChecked } from '../../context/ScaleContext';\n\nimport { useJGraph } from './JGraphContext';\nimport JsCoupling from './JsCoupling';\n\ninterface JsCouplingsProps {\n  signals: Signal1D[];\n}\n\nexport default function JsCouplings(props: JsCouplingsProps) {\n  const { scaleX } = useScaleChecked();\n  const { height } = useJGraph();\n\n  return (\n    <g className=\"js-coupling\">\n      {props.signals.map((signal) => {\n        return (\n          <g\n            key={signal.id}\n            transform={`translate(${scaleX()(signal.delta)},0)`}\n          >\n            <line\n              x1=\"0\"\n              y1={height}\n              x2=\"0\"\n              y2=\"0\"\n              stroke=\"black\"\n              strokeWidth=\"1\"\n            />\n            {signal.js?.map((j) => {\n              return <JsCoupling key={`${j.coupling}`} value={j.coupling} />;\n            })}\n          </g>\n        );\n      })}\n    </g>\n  );\n}\n","import { scaleLinear } from 'd3';\nimport lodashGet from 'lodash/get';\nimport { memo, useMemo } from 'react';\n\nimport generateJGraphData, {\n  CouplingLink,\n} from '../../../data/data1d/Spectrum1D/generateJGraphData';\nimport { Signal1D } from '../../../data/types/data1d';\nimport { Datum1D } from '../../../data/types/data1d/Datum1D';\nimport { useChartData } from '../../context/ChartContext';\nimport { usePreferences } from '../../context/PreferencesContext';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport { getRangeDefaultValues } from '../../panels/extra/preferences/defaultValues';\n\nimport { JGraphContextProvider } from './JGraphContext';\nimport { JGraphVerticalAxis } from './JGraphVerticalAxis';\nimport JCouplingLinks from './JsCouplingLinks';\nimport JsCouplings from './JsCouplings';\n\nconst marginTop = 50;\n\ninterface innerJGraphProps {\n  signals: Signal1D[];\n  links: CouplingLink[];\n}\n\nfunction InnerJGraph(props: innerJGraphProps) {\n  const { signals, links } = props;\n  return (\n    <g className=\"j-graph\" transform={`translate(0,${marginTop})`}>\n      <JGraphVerticalAxis />\n      <JCouplingLinks links={links} />\n      <JsCouplings signals={signals} />\n    </g>\n  );\n}\n\nconst emptyData = { ranges: {} };\nconst MemoizedJGraph = memo(InnerJGraph);\n\nexport default function JGraph() {\n  const preferences = usePreferences();\n\n  const {\n    height,\n    toolOptions: {\n      data: { showJGraph },\n    },\n    activeTab,\n  } = useChartData();\n\n  const graphHeight = height / 4;\n\n  const { ranges } = useSpectrum(emptyData) as Datum1D;\n\n  const jGraphTolerance = useMemo(() => {\n    const _preferences =\n      lodashGet(\n        preferences.current,\n        `formatting.panels.ranges.[${activeTab}]`,\n      ) || getRangeDefaultValues(activeTab);\n\n    return _preferences.jGraphTolerance;\n  }, [activeTab, preferences]);\n\n  const {\n    signals,\n    jCouplingMax: maxValue,\n    links,\n  } = useMemo(\n    () =>\n      generateJGraphData(ranges.values, jGraphTolerance) || {\n        signals: [],\n        jCouplingMax: 0,\n        links: [],\n      },\n    [jGraphTolerance, ranges.values],\n  );\n\n  const scaleY = useMemo(() => {\n    const maxRange = maxValue + maxValue * 0.1;\n    return scaleLinear().range([graphHeight, 0]).domain([0, maxRange]);\n  }, [graphHeight, maxValue]);\n\n  const JGraphState = useMemo(() => {\n    return { scaleY, height: graphHeight, maxValue };\n  }, [graphHeight, scaleY, maxValue]);\n\n  if (!showJGraph) return null;\n\n  return (\n    <JGraphContextProvider value={JGraphState}>\n      <MemoizedJGraph signals={signals} links={links} />\n    </JGraphContextProvider>\n  );\n}\n","interface DeleteButtonProps {\n  onDelete?: () => void;\n  fill?: string;\n  x: string | number;\n  y: string | number;\n}\n\nfunction DeleteButton(props: DeleteButtonProps) {\n  const {\n    x = 'initial',\n    y = 'initial',\n    onDelete = () => null,\n    fill = '#c81121',\n  } = props;\n\n  return (\n    <svg\n      className=\"delete-button\"\n      x={x}\n      y={y}\n      onClick={onDelete}\n      data-no-export=\"true\"\n    >\n      <rect rx=\"5\" width=\"16\" height=\"16\" fill={fill} />\n      <line x1=\"5\" x2=\"10\" y1=\"8\" y2=\"8\" stroke=\"white\" strokeWidth=\"2\" />\n    </svg>\n  );\n}\n\nexport default DeleteButton;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback } from 'react';\n\nimport { useDispatch } from '../../context/DispatchContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport DeleteButton from '../../elements/DeleteButton';\nimport { useHighlight } from '../../highlight';\nimport {\n  DELETE_ANALYZE_SPECTRA_RANGE,\n  RESIZE_ANALYZE_SPECTRA_RANGE,\n} from '../../reducer/types/Types';\nimport Resizable from '../Resizable';\n\nconst stylesOnHover = css`\n  pointer-events: bounding-box;\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n\n  .delete-button {\n    visibility: hidden;\n  }\n`;\n\nconst stylesHighlighted = css`\n  pointer-events: bounding-box;\n\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  .range-area {\n    height: 100%;\n    fill: #ff6f0057;\n  }\n  .delete-button {\n    visibility: visible;\n    cursor: pointer;\n  }\n`;\n\ninterface AnalysisRangeProps {\n  columnKey: string;\n  rangeData: {\n    from: number;\n    to: number;\n  };\n}\n\nfunction AnalysisRange({ rangeData, columnKey }: AnalysisRangeProps) {\n  const { from, to } = rangeData;\n  const highlight = useHighlight([columnKey]);\n  const { scaleX } = useScaleChecked();\n  const dispatch = useDispatch();\n\n  const deleteHandler = useCallback(() => {\n    dispatch({ type: DELETE_ANALYZE_SPECTRA_RANGE, colKey: columnKey });\n  }, [columnKey, dispatch]);\n\n  const handleOnStopResizing = useCallback(\n    (resized) => {\n      dispatch({\n        type: RESIZE_ANALYZE_SPECTRA_RANGE,\n        payload: { ...rangeData, ...resized, columnKey },\n      });\n    },\n    [columnKey, dispatch, rangeData],\n  );\n\n  return (\n    <g\n      {...highlight.onHover}\n      css={highlight.isActive ? stylesHighlighted : stylesOnHover}\n    >\n      <g transform={`translate(${scaleX()(to)},25)`}>\n        <rect\n          x=\"0\"\n          width={scaleX()(from) - scaleX()(to)}\n          height=\"6\"\n          className=\"range-area\"\n          fill=\"green\"\n        />\n        <text\n          textAnchor=\"middle\"\n          x={(scaleX()(from) - scaleX()(to)) / 2}\n          y=\"-5\"\n          fontSize=\"12\"\n          fill=\"red\"\n          fontWeight=\"bolder\"\n          fillOpacity={highlight.isActive ? 1 : 0.6}\n        >\n          {columnKey}\n        </text>\n      </g>\n\n      <Resizable\n        from={rangeData.from}\n        to={rangeData.to}\n        onDrop={handleOnStopResizing}\n      />\n      <DeleteButton x={scaleX()(to) - 20} y={10} onDelete={deleteHandler} />\n    </g>\n  );\n}\n\nexport default AnalysisRange;\n","import { memo, useMemo } from 'react';\n\nimport { SpectraAnalysis } from '../../../data/data1d/MultipleAnalysis';\nimport { useChartData } from '../../context/ChartContext';\n\nimport AnalysisRange from './AnalysisRange';\n\ninterface MultiAnalysisRangesInnerProps {\n  activeTab: string;\n  displayerKey: string;\n  spectraAnalysis: SpectraAnalysis;\n}\n\nfunction MultiAnalysisRangesInner({\n  activeTab,\n  spectraAnalysis,\n  displayerKey,\n}: MultiAnalysisRangesInnerProps) {\n  const columns = useMemo(() => {\n    const {\n      options: { columns },\n    } = spectraAnalysis[activeTab] || {\n      options: { columns: {} },\n    };\n    return columns;\n  }, [activeTab, spectraAnalysis]);\n\n  const ranges = useMemo(() => {\n    return Object.keys(columns).map((key) => key, []);\n  }, [columns]);\n\n  if (!ranges || ranges.length === 0) {\n    return null;\n  }\n\n  return (\n    <g clipPath={`url(#${displayerKey}clip-chart-1d)`}>\n      {ranges.map((columnKey) => (\n        <AnalysisRange\n          key={columnKey}\n          columnKey={columnKey}\n          rangeData={columns[columnKey]}\n        />\n      ))}\n    </g>\n  );\n}\n\nconst MemoizedMultiAnalysisRanges = memo(MultiAnalysisRangesInner);\n\nexport default function MultiAnalysisRanges() {\n  const { activeTab, spectraAnalysis, displayerKey } = useChartData();\n\n  return (\n    <MemoizedMultiAnalysisRanges\n      {...{ activeTab, spectraAnalysis, displayerKey }}\n    />\n  );\n}\n","export interface MultipletDefinition {\n  label: string;\n  value: string;\n  multiplicity: number | null;\n}\n\nexport const Multiplets: MultipletDefinition[] = [\n  { label: 'massive (m)', value: 'm', multiplicity: null },\n  { label: 'singlet (s)', value: 's', multiplicity: 1 },\n  { label: 'doublet (d)', value: 'd', multiplicity: 2 },\n  { label: 'triplet (t)', value: 't', multiplicity: 3 },\n  { label: 'quartet (q)', value: 'q', multiplicity: 4 },\n  { label: 'quintet (i)', value: 'i', multiplicity: 5 },\n  { label: 'sextet (x)', value: 'x', multiplicity: 6 },\n  { label: 'septet (p)', value: 'p', multiplicity: 7 },\n  { label: 'octet (o)', value: 'o', multiplicity: 8 },\n  { label: 'nonet (n)', value: 'n', multiplicity: 9 },\n];\n","import { Multiplets } from '../../../../data/constants/Multiplets';\n\nfunction getMultiplicityNumber(string) {\n  const multiplet = Multiplets.find(\n    (_multiplet) => string === _multiplet.label || string === _multiplet.value,\n  );\n\n  return multiplet ? multiplet.multiplicity : null;\n}\n\nfunction checkMultiplet(multiplet, rejected: Array<any> = []) {\n  // options to determine whether a massive (m), for example, should be considered as rejected multiplet\n  if (multiplet === undefined || multiplet.length === 0) {\n    return false;\n  }\n  const _multiplet = Multiplets.find(\n    (m) => m.value === multiplet || m.label === multiplet,\n  );\n  return (\n    _multiplet &&\n    !rejected.includes(_multiplet.value) &&\n    !rejected.includes(_multiplet.label)\n  );\n}\n\nfunction checkMultiplicity(multiplicity, rejected: Array<string> = []) {\n  // options to determine whether a massive (m), for example, should be considered as rejected multiplicity\n  if (multiplicity === undefined || multiplicity.length === 0) {\n    return false;\n  }\n  return !multiplicity\n    .split('')\n    .find((_multiplet) => !checkMultiplet(_multiplet, rejected));\n}\n\nfunction translateMultiplet(multiplet) {\n  return multiplet.length === 1\n    ? Multiplets.find((_multiplet) => _multiplet.value === multiplet)?.label\n    : Multiplets.find((_multiplet) => _multiplet.label === multiplet)?.value;\n}\n\nfunction hasCouplingConstant(multiplet) {\n  if (multiplet.length > 1) {\n    multiplet = translateMultiplet(multiplet);\n  }\n  // with the pre-set rejected ones, we check the given multiplicity for the need of having a coupling constant (massive and singlet do not)\n  return checkMultiplicity(multiplet, ['m', 's']);\n}\n\nfunction getPascal(n, spin) {\n  if (n === undefined || n === 0 || spin === undefined) return [1];\n  let mult = 2 * spin + 1;\n  let previousLine: Array<any> = [];\n  for (let j = 0; j < mult - 1; j++) previousLine.push(1);\n  // complete with \"1 1\" or \"1 1 1\" for spin 1/2 and 1 respectively\n  for (let i = 0; i < n - 1; i++) {\n    // copy the line\n    let _line = previousLine.slice();\n    for (let j = 1; j < mult; j++) {\n      for (let k = 0; k < previousLine.length - 1; k++) {\n        _line[k + j] += previousLine[k];\n      } // add the previous line\n      _line.push(1); // complete the line\n    }\n    previousLine = _line.slice();\n  }\n  return previousLine;\n}\n\nexport {\n  checkMultiplet,\n  checkMultiplicity,\n  getMultiplicityNumber,\n  getPascal,\n  hasCouplingConstant,\n  translateMultiplet,\n};\n","export const TREE_LEVEL_COLORS: Array<string> = [\n  'red',\n  'green',\n  'blue',\n  'magenta',\n];\n","import { Signal1D } from '../../../data/types/data1d';\nimport { useScaleChecked } from '../../context/ScaleContext';\n\nimport { TREE_LEVEL_COLORS } from './TreeColors';\n\ninterface LevelNodeProps {\n  signal: Signal1D;\n  startY: number;\n  levelHeight: number;\n}\n\nfunction LevelNode({ signal, startY, levelHeight }: LevelNodeProps) {\n  const { scaleX } = useScaleChecked();\n\n  return (\n    <line\n      key={`startLevelNode_${signal.id}`}\n      x1={scaleX()(signal.delta)}\n      y1={startY}\n      x2={scaleX()(signal.delta)}\n      y2={startY + levelHeight}\n      stroke={TREE_LEVEL_COLORS[0]}\n    />\n  );\n}\n\nexport default LevelNode;\n","/* eslint-disable import/order */\nimport { CSSProperties } from 'react';\n\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport { Signal1D } from '../../../data/types/data1d/Signal1D';\n\ninterface StringNodeProps {\n  signal: Signal1D;\n  startY: number;\n  levelHeight: number;\n  fontSize: CSSProperties['fontSize'];\n  showLabels: boolean;\n}\n\nfunction StringNode({\n  signal,\n  startY,\n  levelHeight,\n  fontSize,\n  showLabels,\n}: StringNodeProps) {\n  const { scaleX } = useScaleChecked();\n  return (\n    <text\n      key={`multiplicityString_${signal.id}`}\n      textAnchor=\"middle\"\n      x={scaleX()(signal.delta)}\n      y={startY + levelHeight / 2}\n      fontSize={fontSize}\n      lengthAdjust=\"spacing\"\n      fill=\"black\"\n      visibility={showLabels ? 'visible' : 'hidden'}\n    >\n      {signal.multiplicity}\n    </text>\n  );\n}\n\nexport default StringNode;\n","/* eslint-disable react/no-unused-prop-types */\nimport { CSSProperties, useCallback } from 'react';\n\nimport { useScaleChecked } from '../../context/ScaleContext';\n\ninterface NodeData {\n  startX: number;\n  _startX: number;\n  ratio: number;\n  multiplicityIndex: number;\n  color: string;\n}\n\ninterface TreeNodesProps {\n  showLabels: boolean;\n  startY: number;\n  signalID: string;\n  levelHeight: number;\n  nodesData: Array<NodeData>;\n  labelOptions: {\n    distance: number;\n    fontSize: CSSProperties['fontSize'];\n  };\n}\n\nfunction TreeNodes({\n  nodesData,\n  levelHeight,\n  startY,\n  signalID,\n  labelOptions,\n  showLabels,\n}: TreeNodesProps) {\n  const { scaleX } = useScaleChecked();\n  const buildTreeNodeAndEdge = useCallback(\n    ({ startX, _startX, ratio, multiplicityIndex, color }: NodeData) => {\n      const edgeLevel = 2 * multiplicityIndex + 2;\n      const _startYEdge = startY + edgeLevel * levelHeight;\n      const _startYNode = startY + (edgeLevel + 1) * levelHeight;\n\n      return (\n        <g\n          key={`${multiplicityIndex}_${signalID}_${startX}_${_startX}_${ratio}`}\n        >\n          {/* ratio text */}\n          <text\n            textAnchor=\"middle\"\n            x={scaleX()(_startX) + labelOptions.distance}\n            y={_startYNode + 2 * (levelHeight / 3)}\n            fontSize={labelOptions.fontSize}\n            fill={color}\n            visibility={showLabels ? 'visible' : 'hidden'}\n          >\n            {ratio}\n          </text>\n\n          <line\n            x1={scaleX()(startX)}\n            y1={_startYEdge}\n            x2={scaleX()(_startX)}\n            y2={_startYNode}\n            stroke={color}\n          />\n\n          <line\n            x1={scaleX()(_startX)}\n            y1={_startYNode}\n            x2={scaleX()(_startX)}\n            y2={_startYNode + levelHeight}\n            stroke={color}\n          />\n        </g>\n      );\n    },\n    [\n      signalID,\n      labelOptions.distance,\n      labelOptions.fontSize,\n      scaleX,\n      showLabels,\n      startY,\n      levelHeight,\n    ],\n  );\n\n  return <>{nodesData?.map((node) => buildTreeNodeAndEdge(node))}</>;\n}\n\nexport default TreeNodes;\n","import lodashGet from 'lodash/get';\n\nimport { Signal1D } from '../../../data/types/data1d';\nimport {\n  getMultiplicityNumber,\n  getPascal,\n} from '../../panels/extra/utilities/MultiplicityUtilities';\n\nimport { TREE_LEVEL_COLORS } from './TreeColors';\n\nfunction createTreeNodes(signal: Signal1D, spectrumData) {\n  function buildTreeNodesData(\n    multiplicityIndex,\n    jIndices,\n    treeNodesData,\n    startX,\n  ) {\n    if (!signal.multiplicity) {\n      return null;\n    }\n\n    if (multiplicityIndex >= signal.multiplicity.length) {\n      return treeNodesData;\n    }\n    // re-use colors if needed\n    const color =\n      TREE_LEVEL_COLORS[multiplicityIndex % TREE_LEVEL_COLORS.length];\n\n    const jIndex = jIndices.findIndex(\n      (_jIndex) => _jIndex === multiplicityIndex,\n    );\n    const frequency = lodashGet(spectrumData, 'info.originFrequency', 0);\n\n    const coupling =\n      jIndex >= 0 && frequency > 0 && signal?.js?.[jIndex]\n        ? signal.js[jIndex].coupling / frequency // convert to ppm\n        : null;\n\n    // in case of \"s\": no coupling constant and build one tree node only\n    if (!coupling) {\n      treeNodesData.push({\n        startX,\n        _startX: startX,\n        ratio: 1,\n        multiplicityIndex,\n        color,\n      });\n      // go to next multiplet in multiplicity string\n      buildTreeNodesData(\n        multiplicityIndex + 1,\n        jIndices,\n        treeNodesData,\n        startX,\n      );\n    } else {\n      // in case of other multiplets\n      const multiplicity = signal.multiplicity || '';\n      const pascal = getPascal(\n        getMultiplicityNumber(multiplicity.charAt(multiplicityIndex)),\n        0.5,\n      ); // @TODO for now we use the default spin of 1 / 2 only\n\n      let _startX =\n        pascal.length % 2 === 0\n          ? startX - (pascal.length / 2) * coupling + coupling / 2 // in case of even number of nodes\n          : startX - (pascal.length / 2 - 0.5) * coupling; // in case of odd number of nodes\n\n      pascal.forEach((ratio, k) => {\n        if (k > 0) {\n          _startX += coupling;\n        }\n        treeNodesData.push({\n          startX,\n          _startX,\n          ratio,\n          multiplicityIndex,\n          color,\n        });\n        // go to next multiplet in multiplicity string\n        buildTreeNodesData(\n          multiplicityIndex + 1,\n          jIndices,\n          treeNodesData,\n          _startX,\n        );\n      });\n    }\n\n    return treeNodesData;\n  }\n  return buildTreeNodesData;\n}\n\nexport default createTreeNodes;\n","/** @jsxImportSource @emotion/react */\nimport lodashGet from 'lodash/get';\nimport { useMemo, useState, useEffect, CSSProperties } from 'react';\n\nimport { Signal1D } from '../../../data/types/data1d';\nimport { useAssignment } from '../../assignment';\nimport { useChartData } from '../../context/ChartContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport { HighlightedSource, useHighlight } from '../../highlight';\nimport {\n  hasCouplingConstant,\n  checkMultiplicity,\n} from '../../panels/extra/utilities/MultiplicityUtilities';\nimport { options } from '../../toolbar/ToolTypes';\n\nimport LevelNode from './LevelNode';\nimport StringNode from './StringNode';\nimport TreeNodes from './TreeNodes';\nimport createTreeNodes from './buildTreeNode';\n\nconst styles = {\n  cursor: 'default',\n  opacity: 0.6,\n  strokeWidth: 1,\n};\n\n// export interface SignalNodeProps {\n//   id: string;\n//   delta: number;\n//   multiplicity: string;\n// }\n\ninterface MultiplicityTreeProps {\n  rangeFrom: number;\n  rangeTo: number;\n  signal: Signal1D;\n  labelOptions?: {\n    distance: number;\n    fontSize: CSSProperties['fontSize'];\n  };\n}\n\nfunction extractID(assignment) {\n  return [assignment.id].concat(assignment.assigned.x || []);\n}\n\nfunction MultiplicityTree({\n  rangeFrom,\n  rangeTo,\n  signal,\n  labelOptions = {\n    distance: 10,\n    fontSize: 11,\n  },\n}: MultiplicityTreeProps) {\n  const { scaleX, scaleY } = useScaleChecked();\n  const {\n    data: spectraData,\n    activeSpectrum,\n    toolOptions: { selectedTool },\n    width,\n  } = useChartData();\n  const assignment = useAssignment(signal.id);\n  const highlight = useHighlight(extractID(assignment), {\n    type: HighlightedSource.SIGNAL,\n    extra: extractID(assignment),\n  });\n\n  const spectrumData = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      lodashGet(spectraData, `${activeSpectrum?.index}`, null),\n    [activeSpectrum, spectraData],\n  );\n\n  const [xRange, setXRange] = useState({ x1: signal.delta, x2: signal.delta });\n  const [treeProps, setTreeProps] = useState({\n    width: 0,\n    height: 0,\n    levelHeight: 0,\n  });\n  const [drawInFullRange, setDrawInFullRange] = useState(false);\n  const [showLabels, setShowLabels] = useState(false);\n\n  useEffect(() => {\n    const _drawInFullRange = !checkMultiplicity(signal.multiplicity, ['m']);\n    const _treeWidth = _drawInFullRange\n      ? Math.abs(scaleX()(xRange.x1) - scaleX()(xRange.x2))\n      : Math.abs(scaleX()(xRange.x1) - scaleX()(xRange.x2)) +\n        labelOptions.distance;\n    const _treeHeight = _drawInFullRange ? _treeWidth / 3 : _treeWidth / 2;\n    // +2 because of multiplicity text and start level node before the actual tree starts\n    // 2* for levels between nodes (edges)\n    const length = signal?.multiplicity?.length || 0;\n    const _treeLevelHeight = _drawInFullRange\n      ? _treeHeight / (length + 2)\n      : _treeHeight / (2 * length + 2);\n\n    setTreeProps({\n      width: _treeWidth,\n      height: _treeHeight,\n      levelHeight: _treeLevelHeight,\n    });\n    setDrawInFullRange(_drawInFullRange);\n  }, [\n    labelOptions.distance,\n    scaleX,\n    signal.multiplicity,\n    xRange.x1,\n    xRange.x2,\n  ]);\n\n  useEffect(() => {\n    if (treeProps.width / width >= 0.1) {\n      setShowLabels(true);\n    } else {\n      setShowLabels(false);\n    }\n  }, [treeProps.width, width]);\n\n  const startY = useMemo(() => {\n    let yMax;\n    spectrumData.data.x.forEach((_x, i) => {\n      if (\n        _x >= rangeFrom &&\n        _x <= rangeTo &&\n        (!yMax || spectrumData.data.re[i] > yMax)\n      ) {\n        yMax = spectrumData.data.re[i];\n      }\n    });\n\n    return scaleY(spectrumData.id)(yMax) - treeProps.height - 30;\n  }, [\n    spectrumData.data.x,\n    spectrumData.data.re,\n    spectrumData.id,\n    scaleY,\n    treeProps.height,\n    rangeFrom,\n    rangeTo,\n  ]);\n\n  const treeNodesData = useMemo(() => {\n    if (signal.multiplicity) {\n      const buildTreeNodesData = createTreeNodes(signal, spectrumData);\n      const jIndices = signal.multiplicity\n        .split('')\n        .map((_mult, i) => (hasCouplingConstant(_mult) ? i : undefined))\n        .filter((_i) => _i !== undefined);\n\n      return buildTreeNodesData(0, jIndices, [], signal.delta);\n    }\n    return [];\n  }, [signal, spectrumData]);\n\n  useEffect(() => {\n    if (drawInFullRange) {\n      setXRange({ x1: rangeFrom, x2: rangeTo });\n    } else {\n      const _xRange = { x1: signal.delta, x2: signal.delta };\n      treeNodesData.forEach((_treeNodeData) => {\n        if (_treeNodeData.startX < _xRange.x1) {\n          _xRange.x1 = _treeNodeData.startX;\n        }\n        if (_treeNodeData.startX > _xRange.x2) {\n          _xRange.x2 = _treeNodeData.startX;\n        }\n        if (_treeNodeData._startX < _xRange.x1) {\n          _xRange.x1 = _treeNodeData._startX;\n        }\n        if (_treeNodeData._startX > _xRange.x2) {\n          _xRange.x2 = _treeNodeData._startX;\n        }\n      });\n      setXRange(_xRange);\n    }\n  }, [\n    drawInFullRange,\n    rangeFrom,\n    rangeTo,\n    signal.delta,\n    signal.multiplicity,\n    treeNodesData,\n  ]);\n\n  const multiplicityTree = useMemo(() => {\n    const { levelHeight } = treeProps;\n    // first tree level\n    const firstLevelStartY = startY;\n    let _startY = firstLevelStartY;\n    // second tree level\n    const secondLevelStartY = startY + levelHeight;\n    _startY = secondLevelStartY;\n\n    // third tree level\n    _startY += levelHeight;\n\n    if (drawInFullRange) {\n      const _rangeFrom = scaleX()(rangeFrom);\n      const _rangeTo = scaleX()(rangeTo);\n\n      const pathData = `M ${_rangeFrom} ${\n        _startY + levelHeight\n      } ${_rangeFrom} ${_startY} ${scaleX()(\n        signal.delta,\n      )} ${_startY} ${_rangeTo} ${_startY} ${_rangeTo} ${\n        _startY + levelHeight\n      }`;\n\n      return (\n        <g>\n          <StringNode\n            signal={signal}\n            startY={firstLevelStartY}\n            levelHeight={levelHeight}\n            fontSize={labelOptions.fontSize}\n            showLabels={showLabels}\n          />\n          <LevelNode\n            signal={signal}\n            startY={secondLevelStartY}\n            levelHeight={levelHeight}\n          />\n          <path d={pathData} stroke=\"blue\" fill=\"none\" />\n        </g>\n      );\n    }\n\n    return (\n      <g>\n        <StringNode\n          signal={signal}\n          startY={firstLevelStartY}\n          levelHeight={levelHeight}\n          fontSize={labelOptions.fontSize}\n          showLabels={showLabels}\n        />\n        <LevelNode\n          signal={signal}\n          startY={secondLevelStartY}\n          levelHeight={levelHeight}\n        />\n        <TreeNodes\n          nodesData={treeNodesData}\n          signalID={treeNodesData}\n          showLabels={showLabels}\n          startY={startY}\n          labelOptions={labelOptions}\n          levelHeight={levelHeight}\n        />\n      </g>\n    );\n  }, [\n    treeProps,\n    startY,\n    drawInFullRange,\n    signal,\n    labelOptions,\n    showLabels,\n    treeNodesData,\n    scaleX,\n    rangeFrom,\n    rangeTo,\n  ]);\n\n  return (\n    <g\n      css={\n        highlight.isActive || assignment.isActive\n          ? { ...styles, opacity: 1, strokeWidth: 1.5 }\n          : styles\n      }\n      {...{\n        onMouseEnter: () => {\n          assignment.onMouseEnter('x');\n          highlight.show();\n        },\n        onMouseLeave: () => {\n          assignment.onMouseLeave('x');\n          highlight.hide();\n        },\n      }}\n      {...{\n        onClick:\n          selectedTool && selectedTool === options.editRange.id\n            ? () => {\n                return null;\n              }\n            : (e) => {\n                if (e.shiftKey) {\n                  e.stopPropagation();\n                  assignment.onClick('x');\n                }\n              },\n      }}\n    >\n      {multiplicityTree}\n    </g>\n  );\n}\n\nexport default MultiplicityTree;\n","import { memo } from 'react';\n\nimport { useChartData } from '../../context/ChartContext';\n\nimport MultiplicityTree from './MultiplicityTree';\n\ninterface TempMultiplicityTreeInnerProps {\n  range: any;\n}\n\nfunction TempMultiplicityTreeInner({ range }: TempMultiplicityTreeInnerProps) {\n  return (\n    range?.signals &&\n    range.signals.length > 0 &&\n    range.signals.map((signal) => (\n      <MultiplicityTree\n        rangeFrom={range.from}\n        rangeTo={range.to}\n        signal={signal}\n        key={signal.id}\n      />\n    ))\n  );\n}\n\nconst MemoizedTempMultiplicityTree = memo(TempMultiplicityTreeInner);\n\nexport default function TempMultiplicityTree() {\n  const {\n    toolOptions: {\n      data: { tempRange },\n    },\n  } = useChartData();\n\n  return <MemoizedTempMultiplicityTree range={tempRange} />;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useState, useEffect } from 'react';\n\nimport { Signal1D } from '../../../data/types/data1d';\nimport { checkRangeKind } from '../../../data/utilities/RangeUtilities';\nimport {\n  filterForIDsWithAssignment,\n  useAssignment,\n  useAssignmentData,\n} from '../../assignment';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport { HighlightedSource, useHighlight } from '../../highlight';\nimport { RESIZE_RANGE } from '../../reducer/types/Types';\nimport { options } from '../../toolbar/ToolTypes';\nimport Resizable from '../Resizable';\nimport MultiplicityTree from '../multiplicityTree/MultiplicityTree';\nimport TempMultiplicityTree from '../multiplicityTree/TempMultiplicityTree';\n\nconst stylesOnHover = css`\n  pointer-events: bounding-box;\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n\n  .delete-button {\n    visibility: hidden;\n  }\n`;\n\nconst stylesHighlighted = css`\n  pointer-events: bounding-box;\n\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  .range-area {\n    height: 100%;\n    fill: #ff6f0057;\n  }\n  .delete-button {\n    visibility: visible;\n    cursor: pointer;\n  }\n`;\n\nexport interface RangeData {\n  id: string;\n  from: number;\n  to: number;\n  integration: number;\n  signals: Signal1D[];\n}\n\ninterface RangeProps {\n  showMultiplicityTrees: boolean;\n  selectedTool: string;\n  rangeData: RangeData;\n  startEditMode: boolean;\n}\n\nfunction Range({\n  rangeData,\n  showMultiplicityTrees,\n  selectedTool,\n  startEditMode,\n}: RangeProps) {\n  const { id, from: rangeFrom, to: rangeTo, integration, signals } = rangeData;\n  const assignmentData = useAssignmentData();\n  const assignmentRange = useAssignment(id);\n  const highlightRange = useHighlight(\n    [assignmentRange.id].concat(assignmentRange.assigned.x || []).concat(\n      filterForIDsWithAssignment(\n        assignmentData,\n        signals.map((_signal) => _signal.id),\n      ),\n    ),\n    { type: HighlightedSource.RANGE, extra: { id } },\n  );\n  const [rangeBoundary, setRangeBoundary] = useState({\n    from: rangeFrom,\n    to: rangeTo,\n  });\n\n  const { scaleX } = useScaleChecked();\n  const dispatch = useDispatch();\n\n  const [reduceOpacity, setReduceOpacity] = useState(false);\n  const [isBlockedByEditing, setIsBlockedByEditing] = useState(false);\n\n  useEffect(() => {\n    setRangeBoundary({\n      from: rangeFrom,\n      to: rangeTo,\n    });\n  }, [rangeFrom, rangeTo]);\n\n  useEffect(() => {\n    if (selectedTool && selectedTool === options.editRange.id) {\n      setIsBlockedByEditing(true);\n    } else {\n      setIsBlockedByEditing(false);\n    }\n  }, [selectedTool]);\n\n  useEffect(() => {\n    setReduceOpacity(!checkRangeKind(rangeData));\n  }, [rangeData]);\n\n  const handleOnStopResizing = useCallback(\n    (resized) => {\n      dispatch({\n        type: RESIZE_RANGE,\n        data: { ...rangeData, ...resized },\n      });\n    },\n    [dispatch, rangeData],\n  );\n\n  const mouseEnterHandler = useCallback(() => {\n    assignmentRange.onMouseEnter('x');\n    highlightRange.show();\n  }, [assignmentRange, highlightRange]);\n\n  const mouseLeaveHandler = useCallback(() => {\n    assignmentRange.onMouseLeave('x');\n    highlightRange.hide();\n  }, [assignmentRange, highlightRange]);\n\n  const assignHandler = useCallback(\n    (e) => {\n      if (\n        selectedTool === options.rangesPicking.id &&\n        e.shiftKey &&\n        !isBlockedByEditing\n      ) {\n        assignmentRange.onClick('x');\n      }\n    },\n    [assignmentRange, isBlockedByEditing, selectedTool],\n  );\n\n  const dragHandler = useCallback((boundary) => {\n    setRangeBoundary((range) => ({ ...range, ...boundary }));\n  }, []);\n\n  const { from, to } = rangeBoundary;\n\n  return (\n    <g\n      data-test-id=\"range\"\n      style={{ outline: 'none' }}\n      css={\n        isBlockedByEditing ||\n        highlightRange.isActive ||\n        assignmentRange.isActive\n          ? stylesHighlighted\n          : stylesOnHover\n      }\n      key={id}\n      onMouseEnter={mouseEnterHandler}\n      onMouseLeave={mouseLeaveHandler}\n      onClick={assignHandler}\n    >\n      <g transform={`translate(${scaleX()(to)},10)`}>\n        <rect\n          x=\"0\"\n          width={Math.abs(scaleX()(from) - scaleX()(to))}\n          height=\"6\"\n          className=\"range-area\"\n          fill=\"green\"\n          fillOpacity={\n            !reduceOpacity ||\n            highlightRange.isActive ||\n            assignmentRange.isActive\n              ? 1\n              : 0.4\n          }\n        />\n        <text\n          textAnchor=\"middle\"\n          x={Math.abs(scaleX()(from) - scaleX()(to)) / 2}\n          y=\"20\"\n          fontSize=\"10\"\n          fill=\"red\"\n          fillOpacity={\n            !reduceOpacity ||\n            highlightRange.isActive ||\n            assignmentRange.isActive\n              ? 1\n              : 0.6\n          }\n        >\n          {integration !== undefined ? integration.toFixed(2) : ''}\n        </text>\n      </g>\n      <Resizable\n        from={rangeData.from}\n        to={rangeData.to}\n        onDrop={handleOnStopResizing}\n        onDrag={dragHandler}\n      />\n      {startEditMode ? (\n        <TempMultiplicityTree />\n      ) : (\n        showMultiplicityTrees &&\n        signals &&\n        signals.length > 0 &&\n        signals.map((_signal) => (\n          <MultiplicityTree\n            rangeFrom={from}\n            rangeTo={to}\n            signal={_signal}\n            key={_signal.id}\n          />\n        ))\n      )}\n    </g>\n  );\n}\n\nexport default Range;\n","import useIntegralPath from '../../hooks/useIntegralPath';\n\ninterface IntegralProps {\n  range: { id: string; from: number; to: number; integral?: number };\n}\n\nfunction RangeIntegral({ range }: IntegralProps) {\n  const path = useIntegralPath(range);\n\n  return (\n    <path\n      className=\"line\"\n      stroke=\"black\"\n      strokeWidth=\"1\"\n      fill=\"none\"\n      d={path}\n    />\n  );\n}\n\nexport default RangeIntegral;\n","import { Fragment, memo } from 'react';\n\nimport { Datum1D, Ranges as RangesProps } from '../../../data/types/data1d';\nimport { useChartData } from '../../context/ChartContext';\nimport useSpectrum from '../../hooks/useSpectrum';\n\nimport Range from './Range';\nimport RangeIntegral from './RangeIntegral';\n\ninterface RangesInnerProps {\n  displayerKey: string;\n  selectedTool: string;\n  ranges: RangesProps;\n  editRangeID: string;\n  showMultiplicityTrees: boolean;\n  showRangesIntegrals: boolean;\n}\n\nfunction RangesInner({\n  ranges,\n  displayerKey,\n  selectedTool,\n  editRangeID,\n  showMultiplicityTrees,\n  showRangesIntegrals,\n}: RangesInnerProps) {\n  return (\n    <g clipPath={`url(#${displayerKey}clip-chart-1d)`}>\n      {ranges?.values?.map((range) => (\n        <Fragment key={range.id}>\n          <Range\n            rangeData={range}\n            selectedTool={selectedTool}\n            showMultiplicityTrees={showMultiplicityTrees}\n            startEditMode={\n              editRangeID && editRangeID === range.id ? true : false\n            }\n          />\n          {showRangesIntegrals && <RangeIntegral range={range} />}\n        </Fragment>\n      ))}\n    </g>\n  );\n}\n\nconst MemoizedRanges = memo(RangesInner);\n\nconst empyData = { ranges: {} };\n\nexport default function Ranges() {\n  const {\n    displayerKey,\n    toolOptions: {\n      selectedTool,\n      data: { tempRange, showMultiplicityTrees, showRangesIntegrals },\n    },\n  } = useChartData();\n\n  const { ranges } = useSpectrum(empyData) as Datum1D;\n\n  return (\n    <MemoizedRanges\n      {...{\n        ranges,\n        showMultiplicityTrees,\n        showRangesIntegrals,\n        selectedTool,\n        displayerKey,\n        editRangeID: tempRange?.id || '',\n      }}\n    />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useMemo } from 'react';\n\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport DeleteButton from '../../elements/DeleteButton';\nimport { DELETE_BASE_LINE_ZONE } from '../../reducer/types/Types';\n\nconst styles = css`\n  pointer-events: bounding-box;\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n\n  .zone-area {\n    height: 100%;\n    fill: #b8b8b857;\n    cursor: pointer;\n  }\n  .delete-button {\n    display: none;\n    cursor: pointer;\n  }\n  :hover .delete-button {\n    display: block;\n  }\n`;\n\nfunction BaseLineZones() {\n  const { toolOptions } = useChartData();\n\n  const { scaleX } = useScaleChecked();\n  const dispatch = useDispatch();\n\n  const deleteRangeHandler = useCallback(\n    (id) => {\n      dispatch({ type: DELETE_BASE_LINE_ZONE, id });\n    },\n    [dispatch],\n  );\n\n  const baseLineZones = useMemo(() => {\n    return toolOptions.data.baseLineZones;\n  }, [toolOptions]);\n\n  return (\n    <>\n      {baseLineZones.length > 0 && (\n        <g>\n          {baseLineZones.map((zone) => (\n            <g\n              key={zone.id}\n              transform={`translate(${scaleX()(zone.to)},0)`}\n              css={styles}\n            >\n              <DeleteButton\n                x={-20}\n                y={10}\n                onDelete={() => deleteRangeHandler(zone.id)}\n              />\n              <rect\n                x=\"0\"\n                width={`${scaleX()(zone.from) - scaleX()(zone.to)}`}\n                className=\"zone-area\"\n              />\n            </g>\n          ))}\n        </g>\n      )}\n    </>\n  );\n}\n\nexport default BaseLineZones;\n","import ExclusionZonesAnnotations from './ExclusionZonesAnnotations';\nimport IntegralsSeries from './IntegralsSeries';\nimport LinesSeries from './LinesSeries';\nimport PeakAnnotations from './PeakAnnotations';\nimport ResurrectedDatabaseRanges from './ResurrectedDatabaseRanges';\nimport XAxis from './XAxis';\nimport JGraph from './jCouplingGraph/JGraph';\nimport MultiAnalysisRanges from './multiAnalysis/MultiAnalysisRanges';\nimport Ranges from './ranges/Ranges';\nimport BaseLineZones from './tool/BaseLineZones';\n\nfunction Chart1D({ mode, width, height, margin, displayerKey }) {\n  return (\n    <svg\n      viewBox={`0 0 ${width} ${height}`}\n      width={width}\n      height={height}\n      id=\"nmrSVG\"\n    >\n      <defs>\n        <clipPath id={`${displayerKey}clip-chart-1d`}>\n          <rect\n            width={`${width - margin.left - margin.right}`}\n            height={`${height}`}\n            x={`${margin.left}`}\n            y={`${0}`}\n          />\n        </clipPath>\n      </defs>\n\n      <LinesSeries />\n      <IntegralsSeries />\n      <PeakAnnotations />\n      <Ranges />\n      <JGraph />\n      <MultiAnalysisRanges />\n      <BaseLineZones />\n      <ExclusionZonesAnnotations />\n      <ResurrectedDatabaseRanges />\n\n      <g className=\"container\" style={{ pointerEvents: 'none' }}>\n        <XAxis showGrid mode={mode} />\n      </g>\n    </svg>\n  );\n}\n\nexport default Chart1D;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\nimport { useContext, useCallback, Fragment, memo } from 'react';\nimport { BsCursor } from 'react-icons/bs';\nimport { IoPulseSharp } from 'react-icons/io5';\n\nimport { get1DDataXY } from '../../data/data1d/Spectrum1D/get1DDataXY';\nimport { Datum1D } from '../../data/types/data1d';\nimport { BrushContext } from '../EventsTrackers/BrushTracker';\nimport { MouseContext } from '../EventsTrackers/MouseTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { useScaleChecked } from '../context/ScaleContext';\nimport useSpectrum from '../hooks/useSpectrum';\nimport { ActiveSpectrum } from '../reducer/Reducer';\nimport { useFormatNumberByNucleus } from '../utility/FormatNumber';\n\nconst styles = css`\n  display: flex;\n  flex-firection: row;\n  align-items: center;\n  pointer-events: bounding-box;\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n  background-color: #f7f7f7;\n  height: 30px;\n  padding: 6px;\n  color: #8d0018;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n\n  div {\n    margin: 0px 10px;\n    display: inline-block;\n\n    .label {\n      font-size: 12px;\n      color: #4d4d4d;\n      font-weight: bold;\n    }\n    .value {\n      font-weight: bold;\n      font-size: 14px;\n      display: inline-block;\n    }\n    .unit {\n      font-weight: bold;\n      font-size: 10px;\n    }\n    .xvalue {\n      min-width: 50px;\n    }\n    .yvalue {\n      min-width: 80px;\n    }\n  }\n\n  .separator {\n    border-left: 2px solid gray;\n    margin: 0 20px;\n    width: 1px;\n    height: 100%;\n  }\n`;\n\ninterface FooterBannerInnerProps {\n  margin: {\n    top: number;\n    left: number;\n    right: number;\n    bottom: number;\n  };\n  width: number;\n  height: number;\n  activeSpectrum: ActiveSpectrum | null;\n  spectrum: Datum1D;\n  activeTab: string;\n}\n\nfunction FooterBannerInner({\n  margin,\n  width,\n  height,\n  activeSpectrum,\n  spectrum,\n  activeTab,\n}: FooterBannerInnerProps) {\n  let position = useContext(MouseContext);\n  const { startX, endX, step } = useContext(BrushContext);\n  const { scaleX } = useScaleChecked();\n\n  const format = useFormatNumberByNucleus(activeTab);\n\n  const getYValue = useCallback(\n    (xPosition) => {\n      if (spectrum) {\n        const data = get1DDataXY(spectrum);\n        const xIndex = xFindClosestIndex(data.x, scaleX().invert(xPosition));\n        return data.y[xIndex];\n      }\n      return 1;\n    },\n    [spectrum, scaleX],\n  );\n\n  if (\n    !position ||\n    position.y < margin.top ||\n    position.x < margin.left ||\n    position.x > width - margin.right ||\n    position.y > height - margin.bottom\n  ) {\n    return <div css={styles} />;\n  }\n\n  return (\n    <div css={styles}>\n      <BsCursor />\n      <div>\n        <span className=\"label\"> 𝛅: </span>\n        <span className=\"value\">{format(scaleX().invert(position.x))}</span>\n        <span className=\"unit\">ppm</span>\n        {activeSpectrum && spectrum?.info?.originFrequency && (\n          <>\n            <span className=\"value\">\n              &nbsp;(\n              {format(\n                scaleX().invert(position.x) * spectrum?.info?.originFrequency,\n                'hz',\n              )}\n            </span>\n            <span className=\"unit\">Hz</span>\n            <span className=\"value\">) </span>\n          </>\n        )}\n      </div>\n\n      {step === 'brushing' && (\n        <div>\n          <span className=\"label\"> Δppm: </span>\n          <span className=\"value\">\n            {(scaleX().invert(startX) - scaleX().invert(endX)).toPrecision(6)}\n          </span>\n        </div>\n      )}\n\n      {activeSpectrum && (\n        <Fragment>\n          {spectrum?.info?.originFrequency && step === 'brushing' && (\n            <div>\n              <span className=\"label\"> ΔHz: </span>\n              <span className=\"value\">\n                {(\n                  (scaleX().invert(startX) - scaleX().invert(endX)) *\n                  spectrum?.info?.originFrequency\n                ).toPrecision(5)}\n              </span>\n            </div>\n          )}\n          {step === 'brushing' && (\n            <div>\n              <span className=\"label\"> ratio :</span>\n              <span className=\"value\">\n                {(\n                  (getYValue(startX) / (getYValue(endX) || Number.MIN_VALUE)) *\n                  100\n                ).toFixed(2)}\n                %\n              </span>\n            </div>\n          )}\n        </Fragment>\n      )}\n\n      {activeSpectrum && (\n        <Fragment>\n          <div className=\"separator\" />\n          <IoPulseSharp />\n          <div>\n            <span className=\"label\">Intensity: </span>\n            <span className=\"value yvalue\">\n              {format(getYValue(position.x))}\n            </span>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nconst MemoizedFooterBanner = memo(FooterBannerInner);\n\nexport default function FooterBanner() {\n  const { margin, width, height, activeSpectrum, activeTab } = useChartData();\n  const spectrum = useSpectrum(null) as Datum1D;\n  return (\n    <MemoizedFooterBanner\n      {...{ margin, width, height, activeSpectrum, spectrum, activeTab }}\n    />\n  );\n}\n","import { xFindClosestIndex } from 'ml-spectra-processing';\nimport { CSSProperties, useContext, useEffect, useMemo, useState } from 'react';\n\nimport { get1DDataXY } from '../../data/data1d/Spectrum1D/get1DDataXY';\nimport { Datum1D } from '../../data/types/data1d';\nimport { MouseContext } from '../EventsTrackers/MouseTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { useScale } from '../context/ScaleContext';\nimport Events from '../utility/Events';\n\nconst styles: Record<\n  'container' | 'value' | 'colorIndicator' | 'name',\n  CSSProperties\n> = {\n  container: {\n    position: 'absolute',\n    left: '10px',\n    top: '10px',\n  },\n  value: {\n    width: '67px',\n    display: 'inline-block',\n    margin: '0 5px',\n    fontSize: '12px',\n  },\n  colorIndicator: {\n    width: '10px',\n    height: '1px',\n    borderBottom: `2px solid`,\n    display: 'inline-block',\n    marginBottom: '3px',\n  },\n  name: {\n    fontSize: '12px',\n  },\n};\n\ninterface YTrackerProps {\n  datum: {\n    x: Array<number>;\n    y: Array<number>;\n  };\n}\n\nfunction YTracker({ datum }: YTrackerProps) {\n  const { scaleX } = useScale();\n  const position = useContext(MouseContext);\n\n  if (!scaleX || !position) {\n    return null;\n  }\n\n  const xIndex = xFindClosestIndex(datum.x, scaleX().invert(position.x));\n\n  return <span style={styles.value}>{datum.y[xIndex]}</span>;\n}\n\nfunction SpectraTracker() {\n  const { data, activeTab, xDomains } = useChartData();\n  const [isVisible, ToggleVisibility] = useState(false);\n\n  useEffect(() => {\n    function handler(flag) {\n      ToggleVisibility(flag);\n    }\n\n    Events.on('showYSpectraTrackers', handler);\n\n    return () => {\n      Events.off('showYSpectraTrackers', handler);\n    };\n  }, []);\n\n  const trackers = useMemo(() => {\n    return (\n      isVisible &&\n      data.map(\n        (spectrum) =>\n          spectrum.display.isVisible &&\n          xDomains[spectrum.id] &&\n          spectrum.info.nucleus === activeTab && (\n            <div style={{ display: 'block' }} key={spectrum.id}>\n              <span\n                style={{\n                  ...styles.colorIndicator,\n                  borderColor: (spectrum as Datum1D).display.color,\n                }}\n              />\n              <YTracker datum={get1DDataXY(spectrum as Datum1D)} />\n              <span style={styles.value}>{spectrum.display.name}</span>\n            </div>\n          ),\n        [],\n      )\n    );\n  }, [activeTab, data, isVisible, xDomains]);\n\n  if (!isVisible) return null;\n\n  return <div style={styles.container}>{trackers}</div>;\n}\n\nexport default SpectraTracker;\n","import max from 'ml-array-max';\nimport { useContext, useEffect, useState } from 'react';\n\nimport { get1DDataXY } from '../../../data/data1d/Spectrum1D/get1DDataXY';\nimport { Datum1D } from '../../../data/types/data1d';\nimport { BrushContext } from '../../EventsTrackers/BrushTracker';\nimport { MouseContext } from '../../EventsTrackers/MouseTracker';\nimport { useChartData } from '../../context/ChartContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport { options } from '../../toolbar/ToolTypes';\nimport getVerticalShift from '../utilities/getVerticalShift';\n\nconst styles = {\n  radius: 10,\n  borderColor: '#1f1f1f',\n  strokeWidth: 1,\n  fillOpacity: 0,\n  SVGPadding: 1,\n};\n\ninterface PeakPosition {\n  x: number;\n  y: number;\n  xIndex: number;\n}\n\nfunction PeakPointer() {\n  const {\n    height,\n    width,\n    margin,\n    activeSpectrum,\n    data,\n    mode,\n    toolOptions: { selectedTool },\n    verticalAlign,\n  } = useChartData();\n  const { scaleX, scaleY } = useScaleChecked();\n\n  let position = useContext(MouseContext);\n  const brushState = useContext(BrushContext);\n  const [closePeakPosition, setPosition] = useState<PeakPosition | null>();\n\n  useEffect(() => {\n    const vShift = activeSpectrum\n      ? getVerticalShift(verticalAlign, {\n          index: activeSpectrum?.index || 1,\n          align: 'center',\n        })\n      : 0;\n\n    const getClosePeak = (xShift, mouseCoordinates) => {\n      if (\n        activeSpectrum &&\n        position &&\n        selectedTool === options.peakPicking.id\n      ) {\n        const range = [\n          scaleX().invert(mouseCoordinates.x - xShift),\n          scaleX().invert(mouseCoordinates.x + xShift),\n        ].sort((a, b) => {\n          return a - b;\n        });\n\n        //get the active sepectrum data by looking for it by id\n        const spectrum = data.find(\n          (d) => d.id === activeSpectrum.id,\n        ) as Datum1D;\n\n        if (!spectrum) throw new Error('Unreachable');\n        const datum = get1DDataXY(spectrum);\n        const maxIndex = datum.x.findIndex((number) => number >= range[1]) - 1;\n        const minIndex = datum.x.findIndex((number) => number >= range[0]);\n\n        const yDataRange = datum.y.slice(minIndex, maxIndex);\n        if (yDataRange && yDataRange.length > 0) {\n          const yValue = max(yDataRange);\n          const xIndex = yDataRange.findIndex((value) => value === yValue);\n          const xValue = datum.x[minIndex + xIndex];\n          return {\n            x: scaleX()(xValue),\n            y: scaleY(activeSpectrum.id)(yValue) - vShift,\n            xIndex: minIndex + xIndex,\n          };\n        }\n      }\n      return null;\n    };\n\n    const candidatePeakPosition = getClosePeak(10, position);\n    setPosition(candidatePeakPosition);\n  }, [\n    activeSpectrum,\n    data,\n    mode,\n    position,\n    scaleX,\n    scaleY,\n    selectedTool,\n    verticalAlign,\n  ]);\n\n  if (\n    selectedTool !== options.peakPicking.id ||\n    !closePeakPosition ||\n    !activeSpectrum ||\n    brushState.step === 'brushing' ||\n    !position ||\n    position.y < margin.top ||\n    position.left < margin.left ||\n    position.x > width - margin.right ||\n    position.y > height - margin.bottom\n  ) {\n    return null;\n  }\n\n  return (\n    <div\n      key=\"peakPointer\"\n      style={{\n        cursor: 'crosshair',\n        transform: `translate(${closePeakPosition.x}px, ${closePeakPosition.y}px)`,\n        transformOrigin: 'top left',\n        position: 'absolute',\n        top: -(styles.radius + styles.SVGPadding),\n        left: -(styles.radius + styles.SVGPadding),\n        pointerEvents: 'none',\n        overflow: 'visible',\n      }}\n    >\n      <svg\n        width={styles.radius * 2 + styles.SVGPadding * 2}\n        height={styles.radius * 2 + styles.SVGPadding * 2}\n      >\n        <circle\n          cx={styles.radius + styles.SVGPadding}\n          cy={styles.radius + styles.SVGPadding}\n          r={styles.radius}\n          stroke={styles.borderColor}\n          strokeWidth={styles.strokeWidth}\n          fillOpacity={styles.fillOpacity}\n        />\n        <line\n          x1={styles.radius + styles.SVGPadding}\n          y1={styles.SVGPadding}\n          x2={styles.radius + styles.SVGPadding}\n          y2={styles.radius * 2 + styles.SVGPadding}\n          stroke={styles.borderColor}\n          strokeWidth={styles.strokeWidth}\n        />\n        <line\n          x1={styles.SVGPadding}\n          y1={styles.radius + styles.SVGPadding}\n          x2={styles.radius * 2 + styles.SVGPadding}\n          y2={styles.radius + styles.SVGPadding}\n          stroke={styles.borderColor}\n          strokeWidth={styles.strokeWidth}\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default PeakPointer;\n","import { CSSProperties } from 'react';\n\nimport { useChartData } from '../../context/ChartContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport { options } from '../../toolbar/ToolTypes';\n\nconst styles: CSSProperties = {\n  transformOrigin: 'top left',\n  position: 'absolute',\n  top: '0px',\n  left: '0px',\n  width: 1,\n  backgroundColor: 'red',\n};\n\nfunction VerticalIndicator() {\n  const {\n    height,\n    toolOptions: {\n      selectedTool,\n      data: { pivot },\n    },\n  } = useChartData();\n  const { scaleX } = useScaleChecked();\n\n  if (options.phaseCorrection.id !== selectedTool) return null;\n  return (\n    <div\n      style={{\n        ...styles,\n        transform: `translate(${scaleX()(pivot.value)}px, 0px)`,\n        height: height,\n      }}\n    />\n  );\n}\n\nexport default VerticalIndicator;\n","import { useContext, useCallback, useMemo, CSSProperties } from 'react';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { BrushContext } from '../../EventsTrackers/BrushTracker';\nimport { MouseContext } from '../../EventsTrackers/MouseTracker';\nimport { useChartData } from '../../context/ChartContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport { useFormatNumberByNucleus } from '../../utility/FormatNumber';\n\nconst style: CSSProperties = {\n  cursor: 'crosshair',\n  transformOrigin: 'bottom right',\n  position: 'absolute',\n  top: '-18px',\n  left: '-30px',\n  pointerEvents: 'none',\n  overflow: 'visible',\n  userSelect: 'none',\n};\n\nfunction XLabelPointer() {\n  const { height, width, margin, data, activeSpectrum } = useChartData();\n  const { scaleX } = useScaleChecked();\n\n  const position = useContext(MouseContext);\n  const brushState = useContext(BrushContext);\n  const activeSpectrumData = useMemo(() => {\n    const spectrumData = activeSpectrum\n      ? data.find((d) => d.id === activeSpectrum.id)\n      : null;\n    return spectrumData;\n  }, [activeSpectrum, data]);\n\n  const format = useFormatNumberByNucleus(\n    (activeSpectrumData as Datum1D)?.info.nucleus,\n  );\n\n  const getXValue = useCallback(\n    (xVal) => {\n      if (activeSpectrumData) {\n        const xInvert = scaleX().invert(xVal);\n        return format(xInvert);\n      }\n    },\n    [activeSpectrumData, format, scaleX],\n  );\n\n  if (\n    !activeSpectrum ||\n    brushState.step === 'brushing' ||\n    !position ||\n    position.y < margin.top ||\n    position.x < margin.left ||\n    position.x > width - margin.right ||\n    position.y > height - margin.bottom\n  ) {\n    return null;\n  }\n  return (\n    <div\n      key=\"xLabelPointer\"\n      style={{\n        ...style,\n        transform: `translate(${position.x}px, ${position.y}px)`,\n      }}\n    >\n      <span>{getXValue(position.x)}</span>\n    </div>\n  );\n}\n\nexport default XLabelPointer;\n","import { xGetFromToIndex } from 'ml-spectra-processing';\nimport { useCallback, useEffect, useReducer, ReactNode } from 'react';\nimport { ResponsiveChart } from 'react-d3-utils';\n\nimport { MAX_LENGTH } from '../../data/data1d/Spectrum1D/ranges/detectSignal';\nimport { Datum1D } from '../../data/types/data1d';\nimport { ViewerResponsiveWrapper } from '../2d/Viewer2D';\nimport { BrushTracker } from '../EventsTrackers/BrushTracker';\nimport { MouseTracker } from '../EventsTrackers/MouseTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport { usePreferences } from '../context/PreferencesContext';\nimport { ScaleProvider } from '../context/ScaleContext';\nimport { useAlert } from '../elements/popup/Alert';\nimport { useModal } from '../elements/popup/Modal';\nimport Spinner from '../loader/Spinner';\nimport MultipletAnalysisModal from '../modal/MultipletAnalysisModal';\nimport { ZoomType } from '../reducer/helper/Zoom1DManager';\nimport getRange from '../reducer/helper/getRange';\nimport scaleReducer, {\n  scaleInitialState,\n  SET_SCALE,\n} from '../reducer/scaleReducer';\nimport {\n  ADD_INTEGRAL,\n  ADD_PEAKS,\n  ADD_BASE_LINE_ZONE,\n  BRUSH_END,\n  FULL_ZOOM_OUT,\n  SET_ZOOM,\n  ADD_PEAK,\n  SET_VERTICAL_INDICATOR_X_POSITION,\n  ADD_RANGE,\n  ANALYZE_SPECTRA,\n  ADD_EXCLUSION_ZONE,\n} from '../reducer/types/Types';\nimport BrushXY, { BRUSH_TYPE } from '../tool/BrushXY';\nimport CrossLinePointer from '../tool/CrossLinePointer';\nimport { options } from '../toolbar/ToolTypes';\nimport Events from '../utility/Events';\n\nimport Chart1D from './Chart1D';\nimport FooterBanner from './FooterBanner';\nimport SpectraTracker from './SpectraTracker';\nimport PeakPointer from './tool/PeakPointer';\nimport VerticalIndicator from './tool/VerticalIndicator';\nimport XLabelPointer from './tool/XLabelPointer';\n\ninterface Viewer1DProps {\n  emptyText?: ReactNode;\n}\n\nfunction Viewer1D({ emptyText = undefined }: Viewer1DProps) {\n  const {\n    current: {\n      display: { general },\n    },\n  } = usePreferences();\n  const state = useChartData();\n\n  const {\n    toolOptions: { selectedTool },\n    isLoading,\n    data,\n    mode,\n    width: widthProp,\n    height: heightProp,\n    margin,\n    activeSpectrum,\n    xDomain,\n    xDomains,\n    yDomain,\n    yDomains,\n    verticalAlign,\n    displayerKey,\n  } = state;\n\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const alert = useAlert();\n\n  const [scaleState, dispatchScale] = useReducer(\n    scaleReducer,\n    scaleInitialState,\n  );\n\n  useEffect(() => {\n    if (xDomain.length > 0 && yDomain.length > 0 && widthProp && heightProp) {\n      dispatchScale({\n        type: SET_SCALE,\n        payload: {\n          yDomain,\n          yDomains,\n          xDomain,\n          xDomains,\n          margin,\n          height: heightProp,\n          width: widthProp,\n          verticalAlign,\n          mode,\n        },\n      });\n    }\n  }, [\n    heightProp,\n    margin,\n    mode,\n    verticalAlign,\n    widthProp,\n    xDomain,\n    xDomains,\n    yDomain,\n    yDomains,\n  ]);\n\n  const handelBrushEnd = useCallback(\n    (brushData) => {\n      const propagateEvent = () => {\n        if (!scaleState.scaleX || !scaleState.scaleY) return;\n\n        const { startX, endX } = brushData;\n        const startXPPM = scaleState.scaleX().invert(startX);\n        const endXPPM = scaleState.scaleX().invert(endX);\n        Events.emit('brushEnd', {\n          ...brushData,\n          range: [startXPPM, endXPPM].sort((a, b) => a - b),\n        });\n      };\n\n      if (brushData.altKey) {\n        switch (selectedTool) {\n          case options.rangesPicking.id: {\n            if (!general?.disableMultipletAnalysis) {\n              modal.show(\n                <MultipletAnalysisModal\n                  data={data}\n                  activeSpectrum={activeSpectrum}\n                  scaleX={scaleState.scaleX}\n                  {...brushData}\n                />,\n                {\n                  onClose: () => {\n                    modal.close();\n                  },\n                },\n              );\n            }\n            break;\n          }\n          default:\n            break;\n        }\n      } else if (brushData.shiftKey) {\n        switch (selectedTool) {\n          case options.integral.id:\n            dispatch({\n              type: ADD_INTEGRAL,\n              ...brushData,\n            });\n            break;\n          case options.rangesPicking.id: {\n            const [from, to] = getRange(state, {\n              startX: brushData.startX,\n              endX: brushData.endX,\n            });\n\n            if (!activeSpectrum) break;\n\n            const {\n              data: { x },\n            } = state.data[activeSpectrum.index] as Datum1D;\n\n            const { fromIndex, toIndex } = xGetFromToIndex(x, { from, to });\n\n            if (toIndex - fromIndex <= MAX_LENGTH) {\n              dispatch({\n                type: ADD_RANGE,\n                payload: {\n                  ...brushData,\n                },\n              });\n            } else {\n              alert.error(\n                `Advanced peak picking only available for area up to ${MAX_LENGTH} points`,\n              );\n            }\n\n            break;\n          }\n          case options.multipleSpectraAnalysis.id:\n            dispatch({\n              type: ANALYZE_SPECTRA,\n              ...brushData,\n            });\n            break;\n\n          case options.peakPicking.id:\n            dispatch({\n              type: ADD_PEAKS,\n              ...brushData,\n            });\n            break;\n\n          case options.baseLineCorrection.id:\n            dispatch({\n              type: ADD_BASE_LINE_ZONE,\n              zone: { from: brushData.startX, to: brushData.endX },\n            });\n            break;\n\n          case options.exclusionZones.id:\n            dispatch({\n              type: ADD_EXCLUSION_ZONE,\n              payload: { from: brushData.startX, to: brushData.endX },\n            });\n            break;\n\n          default:\n            propagateEvent();\n            break;\n        }\n      } else {\n        switch (selectedTool) {\n          default:\n            if (selectedTool != null) {\n              dispatch({ type: BRUSH_END, ...brushData });\n            }\n            break;\n        }\n      }\n    },\n    [\n      scaleState,\n      selectedTool,\n      general?.disableMultipletAnalysis,\n      modal,\n      data,\n      activeSpectrum,\n      dispatch,\n      state,\n      alert,\n    ],\n  );\n\n  const handelOnDoubleClick = useCallback(() => {\n    dispatch({ type: FULL_ZOOM_OUT, zoomType: ZoomType.STEP_HORIZONTAL });\n  }, [dispatch]);\n\n  const handleZoom = useCallback(\n    (event) => {\n      dispatch({ type: SET_ZOOM, event, selectedTool });\n    },\n    [dispatch, selectedTool],\n  );\n\n  const mouseClick = useCallback(\n    (position) => {\n      const propagateEvent = () => {\n        if (!scaleState.scaleX) return;\n\n        const xPPM = scaleState.scaleX().invert(position.x);\n        Events.emit('mouseClick', {\n          ...position,\n          xPPM,\n        });\n      };\n\n      if (position.shiftKey) {\n        switch (selectedTool) {\n          case options.peakPicking.id:\n            dispatch({\n              type: ADD_PEAK,\n              mouseCoordinates: position,\n            });\n            break;\n          case options.editRange.id:\n            propagateEvent();\n            break;\n          default:\n            break;\n        }\n      } else {\n        switch (selectedTool) {\n          case options.phaseCorrection.id:\n            dispatch({\n              type: SET_VERTICAL_INDICATOR_X_POSITION,\n              position: position.x,\n            });\n            break;\n\n          default:\n        }\n      }\n    },\n    [dispatch, scaleState, selectedTool],\n  );\n\n  return (\n    <ScaleProvider value={scaleState}>\n      <ResponsiveChart>\n        {({ height, width }) => (\n          <ViewerResponsiveWrapper height={height} width={width}>\n            <div style={{ height: '100%', position: 'relative' }}>\n              <Spinner isLoading={isLoading} emptyText={emptyText} />\n\n              {scaleState.scaleX &&\n                scaleState.scaleY &&\n                data &&\n                data.length > 0 && (\n                  <BrushTracker\n                    onBrush={handelBrushEnd}\n                    onDoubleClick={handelOnDoubleClick}\n                    onClick={mouseClick}\n                    onZoom={handleZoom}\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      margin: 'auto',\n                      position: 'relative',\n                      overflow: 'hidden',\n                    }}\n                  >\n                    <MouseTracker\n                      style={{\n                        width: '100%',\n                        height: `100%`,\n                        position: 'absolute',\n                      }}\n                    >\n                      <SpectraTracker />\n                      <CrossLinePointer />\n                      <BrushXY brushType={BRUSH_TYPE.X} />\n                      <XLabelPointer />\n                      <PeakPointer />\n                      <VerticalIndicator />\n                      <FooterBanner />\n                      <Chart1D\n                        width={widthProp}\n                        height={heightProp}\n                        margin={margin}\n                        mode={mode}\n                        displayerKey={displayerKey}\n                      />\n                    </MouseTracker>\n                  </BrushTracker>\n                )}\n            </div>\n          </ViewerResponsiveWrapper>\n        )}\n      </ResponsiveChart>\n    </ScaleProvider>\n  );\n}\n\nexport default Viewer1D;\n","import { CSSProperties } from 'react';\nimport { FallbackProps } from 'react-error-boundary';\n\ntype RecordKey = 'container' | 'header' | 'title' | 'body';\n\nconst styles: Record<RecordKey, CSSProperties> = {\n  container: {\n    margin: '25px',\n  },\n\n  header: {\n    backgroundColor: '#ffffff',\n    padding: '20px',\n    borderRadius: '10px',\n    fontSize: '30px',\n    textAlign: 'center',\n  },\n\n  title: {\n    textDecoration: 'underline',\n  },\n\n  body: {\n    marginTop: '10px',\n    whiteSpace: 'pre-wrap',\n    backgroundColor: 'white',\n    padding: '20px',\n    borderRadius: '10px',\n    color: 'red',\n  },\n};\n\nexport default function ErrorOverlay(props: FallbackProps) {\n  return (\n    <div style={styles.container}>\n      <p style={styles.header}>Something went wrong.</p>\n      <details style={styles.body}>\n        <p style={styles.title}>{props.error.message}</p>\n        {props.error.stack}\n      </details>\n    </div>\n  );\n}\n","import {\n  useState,\n  useCallback,\n  ChangeEvent,\n  forwardRef,\n  ForwardedRef,\n  CSSProperties,\n} from 'react';\n\nexport interface CheckBoxProps {\n  onChange?: (value: ChangeEvent<HTMLInputElement>) => void;\n  name?: string;\n  disabled?: boolean;\n  checked?: boolean;\n  style?: CSSProperties;\n}\n\nconst CheckBox = forwardRef(\n  (props: CheckBoxProps, ref: ForwardedRef<HTMLInputElement>) => {\n    const {\n      checked: checkProps = false,\n      disabled = false,\n      name = '',\n      onChange = () => null,\n      style = {},\n    } = props;\n\n    const [checked, setCheck] = useState<boolean>(checkProps);\n\n    const handleCheck = useCallback(\n      (e) => {\n        setCheck(!checked);\n        onChange(e);\n      },\n      [checked, onChange],\n    );\n\n    return (\n      <input\n        ref={ref}\n        type=\"checkbox\"\n        name={name}\n        id={name}\n        onChange={handleCheck}\n        defaultChecked={checkProps}\n        disabled={disabled}\n        style={style}\n      />\n    );\n  },\n);\n\nexport default CheckBox;\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { CSSProperties, useCallback } from 'react';\n\nimport CheckBox, { CheckBoxProps } from '../CheckBox';\n\ninterface FormikCheckBoxProps extends Omit<CheckBoxProps, 'style'> {\n  name: string;\n  label?: string;\n  className?: string;\n  reverse?: boolean;\n  style?: {\n    container?: CSSProperties;\n    label?: CSSProperties;\n    checkbox?: CSSProperties;\n  };\n}\n\nfunction FormikCheckBox(props: FormikCheckBoxProps) {\n  const {\n    label,\n    name,\n    onChange = () => null,\n    className = 'checkbox',\n    reverse = false,\n    style = { container: {}, label: {}, checkbox: {} },\n    ...resProps\n  } = props;\n\n  const { values, setFieldValue } = useFormikContext();\n  const value = reverse ? !lodashGet(values, name) : lodashGet(values, name);\n\n  const changeHandler = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      e.persist();\n      onChange(e);\n      setFieldValue(name, reverse ? value : !value);\n    },\n    [name, onChange, reverse, setFieldValue, value],\n  );\n\n  return (\n    <div\n      className={`${className} check-${value}`}\n      style={style.container ? style.container : {}}\n    >\n      {label && (\n        <label\n          htmlFor={name}\n          className=\"checkbox-label\"\n          style={style.label ? style.label : {}}\n        >\n          {label}\n        </label>\n      )}\n      <CheckBox\n        {...resProps}\n        name={name}\n        checked={value}\n        onChange={changeHandler}\n        style={style.checkbox ? style.checkbox : {}}\n      />\n    </div>\n  );\n}\n\nexport default FormikCheckBox;\n","import { Formik, FormikHelpers, FormikProps } from 'formik';\nimport { ForwardedRef, forwardRef, ReactNode } from 'react';\n\ninterface FormikFormProps {\n  initialValues?: any;\n  onSubmit?: (values: any, helpers: FormikHelpers<any>) => void;\n  validationSchema?: any;\n  children?: Array<ReactNode> | ReactNode;\n}\n\nconst FormikForm = forwardRef(\n  (props: FormikFormProps, ref: ForwardedRef<FormikProps<any>>) => {\n    const {\n      onSubmit = () => null,\n      initialValues = {},\n      validationSchema = null,\n    } = props;\n\n    return (\n      <Formik\n        innerRef={ref}\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        <>{props.children}</>\n      </Formik>\n    );\n  },\n);\n\nexport default FormikForm;\n","import { LegacyRef, MutableRefObject, useEffect, useRef } from 'react';\n\nexport default function useCombinedRefs(\n  refs: Array<MutableRefObject<any> | LegacyRef<any>>,\n) {\n  const targetRef = useRef<any>();\n\n  useEffect(() => {\n    refs.forEach((ref) => {\n      if (!ref) return;\n      if (typeof ref === 'function') {\n        ref(targetRef.current);\n      } else {\n        (ref as MutableRefObject<any>).current = targetRef.current;\n      }\n    });\n  }, [refs]);\n\n  return targetRef;\n}\n","import debounce from 'lodash/debounce';\nimport {\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  CSSProperties,\n  forwardRef,\n  ForwardedRef,\n  ReactElement,\n} from 'react';\n\nimport useCombinedRefs from '../hooks/useCombinedRefs';\n\nconst styles: Record<\n  'label' | 'input' | 'inputWrapper' | 'clearButton',\n  CSSProperties\n> = {\n  label: {\n    lineHeight: 2,\n    userSelect: 'none',\n  },\n\n  inputWrapper: {\n    height: '100%',\n    width: '100px',\n    borderRadius: '5px',\n    borderWidth: '0.55px',\n    borderColor: '#c7c7c7',\n    borderStyle: 'solid',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  input: {\n    outline: 'none',\n    flex: 1,\n    height: '100%',\n    textAlign: 'center',\n    width: '100%',\n  },\n  clearButton: {\n    height: 'calc(100% - 4px)',\n    borderRadius: '50%',\n    backgroundColor: 'gray',\n    color: 'white',\n    aspectRatio: '1',\n    fontSize: '60%',\n    padding: 0,\n  },\n};\n\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'style'> {\n  style?: {\n    input?: CSSProperties;\n    inputWrapper?: CSSProperties;\n  };\n  enableAutoSelect?: boolean;\n  debounceTime?: number;\n  checkValue?: (element: number | string) => boolean;\n  format?: () => (element: string) => number | string;\n  renderIcon?: (() => ReactElement) | null;\n  canClear?: boolean;\n  onClear?: () => void;\n}\n\nconst Input = forwardRef(\n  (\n    {\n      value = '',\n      name,\n      style = {\n        input: {},\n        inputWrapper: {},\n      },\n      onChange = () => null,\n      debounceTime = 0,\n      onKeyDown = () => null,\n      checkValue = () => true,\n      type = 'text',\n      enableAutoSelect = false,\n      className,\n      format = () => (value) => value,\n      onBlur = () => null,\n      onFocus = () => null,\n      renderIcon = null,\n      canClear = false,\n      onClear,\n      ...props\n    }: InputProps,\n    ref: ForwardedRef<HTMLInputElement>,\n  ) => {\n    const [val, setVal] = useState(value);\n    const localRef = useRef<any>();\n    const combinedRef = useCombinedRefs([ref, localRef]);\n\n    const debounceOnChange = useRef(\n      debounce((value) => {\n        onChange(value);\n      }, debounceTime),\n    ).current;\n\n    useEffect(() => {\n      setVal(value);\n    }, [value]);\n\n    useEffect(() => {\n      if (enableAutoSelect) {\n        combinedRef?.current?.select();\n      }\n    }, [enableAutoSelect, combinedRef]);\n\n    const getValue = useCallback(\n      (value) => {\n        const formatValue = format();\n        return formatValue(\n          type === 'number'\n            ? String(value).trim() === '-'\n              ? Number(0)\n              : Number(value)\n            : value,\n        );\n      },\n      [format, type],\n    );\n\n    const onChangeHandler = useCallback(\n      (e) => {\n        e.persist();\n        e.stopPropagation();\n        e.preventDefault();\n        function check(value) {\n          if (type === 'number') {\n            const pattern = /^(?:-?[0-9]*|[0-9]\\d*)(?:\\.\\d{0,20})?$/;\n            if (value.trim() === '' || pattern.test(value)) {\n              return true;\n            }\n            return false;\n          }\n          return true;\n        }\n\n        const _value: string = e.target.value;\n        if (check(_value) && checkValue(_value)) {\n          const formatValue = format();\n\n          setVal(formatValue(_value));\n\n          const val = {\n            ...e,\n            target: { name: e.target.name, value: getValue(_value) },\n          };\n\n          if (debounceTime) {\n            debounceOnChange(val);\n          } else {\n            onChange(val);\n          }\n        }\n      },\n      [\n        checkValue,\n        debounceOnChange,\n        debounceTime,\n        format,\n        getValue,\n        onChange,\n        type,\n      ],\n    );\n\n    const handleKeyDown = useCallback(\n      (event) => {\n        event.persist();\n        onKeyDown({\n          ...event,\n          target: { name: event.target.name, value: getValue(val) },\n        });\n      },\n      [getValue, onKeyDown, val],\n    );\n    const preventPropagate = useCallback((event) => {\n      event.stopPropagation();\n    }, []);\n\n    const clearHandler = useCallback(() => {\n      setVal('');\n      onClear?.();\n    }, [onClear]);\n\n    return (\n      <div\n        style={{\n          ...styles.inputWrapper,\n          ...(style?.inputWrapper ? style.inputWrapper : {}),\n        }}\n        className={`input ${className || ''}`}\n      >\n        {renderIcon?.()}\n        <input\n          {...props}\n          ref={combinedRef}\n          name={name}\n          style={{\n            ...styles.input,\n            ...(style?.input ? style.input : {}),\n          }}\n          data-test-id={name ? `input-${name}` : ''}\n          type=\"text\"\n          value={val}\n          onChange={onChangeHandler}\n          onKeyDown={handleKeyDown}\n          onKeyPress={preventPropagate}\n          onDoubleClick={(e) => e.stopPropagation()}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        />\n        {canClear && val && (\n          <button\n            type=\"button\"\n            style={styles.clearButton}\n            onClick={clearHandler}\n          >\n            <span style={{ display: 'block', margin: '0 auto' }}>&#10005;</span>\n          </button>\n        )}\n      </div>\n    );\n  },\n);\n\nexport default Input;\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, useEffect, useMemo } from 'react';\n\nimport Input, { InputProps } from '../Input';\n\ninterface FormikInputProps extends InputProps {\n  name: string;\n  checkErrorAfterInputTouched?: boolean;\n}\n\nfunction FormikInput(props: FormikInputProps) {\n  const {\n    name,\n    style = { label: {}, input: {} },\n    onChange = () => null,\n    checkValue = () => true,\n    type = 'text',\n    className = '',\n    value = null,\n    format = () => (value) => value,\n    checkErrorAfterInputTouched = true,\n    ...resProps\n  } = props;\n\n  const { values, handleChange, setFieldValue, errors, touched } =\n    useFormikContext();\n\n  const changeHandler = useCallback(\n    (e) => {\n      onChange(e);\n      handleChange(e);\n    },\n    [handleChange, onChange],\n  );\n\n  useEffect(() => {\n    if (value) {\n      setFieldValue(name, value);\n    }\n  }, [name, setFieldValue, value]);\n\n  const isInvalid = useMemo(() => {\n    if (checkErrorAfterInputTouched) {\n      return lodashGet(errors, name) && lodashGet(touched, name);\n    }\n    return lodashGet(errors, name);\n  }, [checkErrorAfterInputTouched, errors, name, touched]);\n\n  return (\n    <Input\n      name={name}\n      value={value ? value : lodashGet(values, name)}\n      onChange={changeHandler}\n      type={type}\n      style={{\n        ...style,\n        inputWrapper: {\n          ...style.input,\n          ...(isInvalid && { borderColor: 'red', outline: 'none' }),\n        },\n      }}\n      checkValue={checkValue}\n      className={className}\n      format={format}\n      {...resProps}\n    />\n  );\n}\n\nexport default FormikInput;\n","import { css } from '@emotion/react';\n\nexport const ModalStyles = css`\n  overflow: auto;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  .header {\n    text-align: center;\n    padding: 10px 0 10px 0px;\n    margin: 0px;\n    color: #005d9e;\n    place-items: normal;\n    text-transform: none;\n    background-color: #fcfcfc;\n  }\n\n  .tab-content {\n    width: 100%;\n  }\n  .row {\n    display: flex;\n  }\n\n  .inner-content {\n    padding: 15px 30px;\n    width: 100%;\n    overflow: auto;\n  }\n\n  button:focus {\n    outline: none;\n  }\n  button:not([disabled]):hover {\n    color: black;\n  }\n  .btn:not([disabled]):hover {\n    background-color: #ffffff;\n  }\n  .btn:disabled {\n    opacity: 0.5;\n  }\n  .btn {\n    border: none;\n    padding: 0 15px;\n    background-color: #ffffff5e;\n    border-radius: 5px;\n    height: 25px;\n  }\n\n  .primary {\n    background-color: #e2e2e2;\n  }\n\n  .footer-container {\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: flex-end;\n    background: rgb(242, 242, 242);\n    background: -moz-linear-gradient(\n      0deg,\n      rgba(242, 242, 242, 1) 0%,\n      rgba(245, 245, 245, 1) 37%,\n      rgba(255, 255, 255, 1) 90%\n    );\n    background: -webkit-linear-gradient(\n      0deg,\n      rgba(242, 242, 242, 1) 0%,\n      rgba(245, 245, 245, 1) 37%,\n      rgba(255, 255, 255, 1) 90%\n    );\n    background: linear-gradient(\n      0deg,\n      rgba(242, 242, 242, 1) 0%,\n      rgba(245, 245, 245, 1) 37%,\n      rgba(255, 255, 255, 1) 90%\n    );\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#f2f2f2\",endColorstr=\"#ffffff\",GradientType=1);\n    padding: 6px 15px;\n    height: 55px;\n  }\n\n  .section-header {\n    font-size: 13px;\n    color: #2ca8ff;\n    margin-bottom: 10px;\n    border-bottom: 0.55px solid #f9f9f9;\n    padding: 6px 2px;\n  }\n\n  .custom-label {\n    font-size: 12px;\n    font-weight: bold;\n    margin-right: 10px;\n    width: 120px;\n  }\n  .margin-10 {\n    margin: 10px 0;\n  }\n  .padding-h-10 {\n    margin: 10px;\n  }\n\n  .input {\n    font-size: 14px;\n    border-radius: 5px;\n    border: 1px solid #cccccc;\n    padding: 5px;\n    width: 100px;\n    margin-right: 10px;\n    height: initial !important;\n  }\n\n  .close-bt {\n    border: none;\n    color: red;\n    background-color: transparent;\n    outline: none;\n    position: absolute;\n    right: 10px;\n    top: 2px;\n    width: 30px;\n    height: 30px;\n  }\n`;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Field } from 'formik';\nimport { useCallback, useRef } from 'react';\n\nimport { DataExportOptions } from '../../data/SpectraManager';\nimport CloseButton from '../elements/CloseButton';\nimport FormikCheckBox from '../elements/formik/FormikCheckBox';\nimport FormikForm from '../elements/formik/FormikForm';\nimport FormikInput from '../elements/formik/FormikInput';\n\nimport { ModalStyles } from './ModalStyle';\n\nconst styles = css`\n  .row {\n    align-items: center;\n  }\n\n  .inner-content {\n    flex: 1;\n  }\n\n  .custom-label {\n    width: 80px;\n  }\n\n  .name {\n    width: 100% !important;\n    text-align: left !important;\n  }\n\n  .data-export-group {\n    label:first-child {\n      margin-right: 10px;\n    }\n    label {\n      display: inline-block;\n    }\n    input[type='radio'] {\n      margin-right: 5px;\n    }\n  }\n`;\n\nconst INITIAL_VALUE = {\n  name: '',\n  compressed: false,\n  pretty: false,\n  dataExportOption: DataExportOptions.ROW_DATA,\n};\n\ninterface SaveAsModalProps {\n  onClose?: (element?: any) => void;\n  onSave: (element: any) => void;\n  name: string;\n}\n\nfunction SaveAsModal({ onClose, onSave, name }: SaveAsModalProps) {\n  const refForm = useRef<any>();\n\n  const handleSave = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n\n  const submitHandler = useCallback(\n    (values) => {\n      onSave(values);\n      onClose?.();\n    },\n    [onClose, onSave],\n  );\n\n  return (\n    <div css={[ModalStyles, styles]}>\n      <div className=\"header handle\">\n        <span>Save as ... </span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"inner-content\">\n        <FormikForm\n          ref={refForm}\n          initialValues={{ ...INITIAL_VALUE, name }}\n          onSubmit={submitHandler}\n        >\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Name</span>\n            <FormikInput\n              name=\"name\"\n              className=\"name\"\n              style={{\n                inputWrapper: { width: '100%' },\n              }}\n            />\n          </div>\n\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Compressed</span>\n            <FormikCheckBox name=\"compressed\" />\n          </div>\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Pretty Format</span>\n            <FormikCheckBox name=\"pretty\" />\n          </div>\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\"> Include </span>\n            <div className=\"data-export-group\">\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"dataExportOption\"\n                  value={DataExportOptions.ROW_DATA}\n                />\n                Raw Data\n              </label>\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"dataExportOption\"\n                  value={DataExportOptions.DATA_SOURCE}\n                />\n                Data Source\n              </label>\n            </div>\n          </div>\n        </FormikForm>\n      </div>\n      <div className=\"footer-container\">\n        <button type=\"button\" onClick={handleSave} className=\"btn primary\">\n          Save\n        </button>\n        <button type=\"button\" onClick={onClose} className=\"btn\">\n          Close\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default SaveAsModal;\n","import { saveAs } from 'file-saver';\nimport JSZip from 'jszip';\n\nfunction copyFormattedHtml(html) {\n  // Create an iframe (isolated container) for the HTML\n  let container = document.createElement('div');\n  container.innerHTML = html;\n\n  // Hide element\n  container.style.position = 'fixed';\n  container.style.pointerEvents = 'none';\n  container.style.opacity = '0';\n\n  // Detect all style sheets of the page\n  let activeSheets = Array.prototype.slice\n    .call(document.styleSheets)\n    .filter((sheet) => {\n      return !sheet.disabled;\n    });\n\n  // Mount the iframe to the DOM to make `contentWindow` available\n  document.body.appendChild(container);\n\n  // Copy to clipboard\n  window.getSelection()?.removeAllRanges();\n\n  let range = document.createRange();\n  range.selectNode(container);\n  window.getSelection()?.addRange(range);\n\n  document.execCommand('copy');\n  for (const active of activeSheets) {\n    active.disabled = true;\n  }\n\n  document.execCommand('copy');\n  for (const active of activeSheets) {\n    active.disabled = false;\n  }\n\n  // Remove the iframe\n  document.body.removeChild(container);\n}\n\nasync function copyHTMLToClipboard(data) {\n  try {\n    copyFormattedHtml(data);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nasync function copyTextToClipboard(data) {\n  try {\n    await navigator.clipboard.writeText(data);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n/**\n * export the experiments result in JSON format\n * @param {*} data\n */\nasync function exportAsJSON(\n  data,\n  fileName = 'experiment',\n  spaceIndent = 0,\n  isCompressed = false,\n) {\n  const fileData = JSON.stringify(\n    data,\n    (key, value) =>\n      ArrayBuffer.isView(value) ? Array.from(value as any) : value,\n    spaceIndent,\n  );\n  if (!isCompressed) {\n    const blob = new Blob([fileData], { type: 'text/plain' });\n    saveAs(blob, `${fileName}.nmrium`);\n  } else {\n    try {\n      const zip = new JSZip();\n      zip.file(`${fileName}.nmrium`, fileData);\n      const blob = await zip.generateAsync({\n        type: 'blob',\n        compression: 'DEFLATE',\n        compressionOptions: {\n          level: 9,\n        },\n      });\n      saveAs(blob, `${fileName}.nmrium`);\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log(e);\n    }\n  }\n}\n\nfunction exportAsMatrix(data, options, fileName = 'experiment') {\n  //columns labels\n  const columnsLables = ['name', 'experiment'];\n  for (const value of data[0].data.x) {\n    columnsLables.push(value);\n  }\n  let matrix = `${columnsLables.join('\\t')}\\n`;\n\n  for (const spectrum of data) {\n    const {\n      data: { re },\n      info: { experiment },\n      display: { name },\n    } = spectrum;\n    const cellsValues = [name, experiment];\n    for (const value of re) {\n      cellsValues.push(value);\n    }\n    matrix += `${cellsValues.join('\\t')}\\n`;\n  }\n\n  const blob = new Blob([matrix], { type: 'text/tab-separated-values' });\n  saveAs(blob, `${fileName}.tsv`);\n}\n\nfunction exportAsNMRE(data, fileName = 'experiment') {\n  data.generateAsync({ type: 'blob' }).then((content) => {\n    saveAs(content, `${fileName}.nmredata`);\n  });\n}\n\nfunction exportAsMol(data, fileName = 'mol') {\n  const blob = new Blob([data], { type: 'text/plain' });\n  saveAs(blob, `${fileName}.mol`);\n}\n/**\n * export the vitalization result as SVG, if you need to remove some content during exportation process enclose the the content with <!-- export-remove --> ${content} <!-- export-remove -->\n */\nfunction exportAsSVG(elementID, fileName = 'experiment') {\n  const { blob } = getBlob(elementID);\n  saveAs(blob, `${fileName}.svg`);\n}\n\nfunction exportAsPng(elementID, fileName = 'experiment') {\n  const { blob, width, height } = getBlob(elementID);\n  try {\n    let canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    let context = canvas.getContext('2d');\n\n    if (context) {\n      context.fillStyle = 'white';\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    let img = new Image();\n    let url = URL.createObjectURL(blob);\n    img.onload = async () => {\n      context?.drawImage(img, 0, 0);\n      let png = canvas.toDataURL('image/png', 1);\n      saveAs(png, `${fileName}.png`);\n      URL.revokeObjectURL(png);\n    };\n    img.src = url;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n}\n\nfunction copyDataURLCliboard(image) {\n  const img = document.createElement('img');\n  img.src = image;\n\n  img.style.position = 'fixed';\n  img.style.pointerEvents = 'none';\n  img.style.opacity = '0';\n\n  document.body.appendChild(img);\n  const range = document.createRange();\n  range.selectNode(img);\n  window.getSelection()?.addRange(range);\n  document.execCommand('Copy');\n  document.body.removeChild(img);\n}\n\nfunction copyBlobToCliboard(canvas) {\n  canvas.toBlob((b) => {\n    const clip = new ClipboardItem({\n      [b.type]: b,\n    });\n\n    navigator.clipboard.write([clip]).then(\n      () => {\n        // eslint-disable-next-line no-console\n        console.log('experiment copied.');\n      },\n      (err) => {\n        // eslint-disable-next-line no-console\n        console.log(err);\n      },\n    );\n  });\n}\n\nfunction copyPNGToClipboard(elementID) {\n  const { blob, width, height } = getBlob(elementID);\n  try {\n    let canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    let context = canvas.getContext('2d');\n\n    if (context) {\n      context.fillStyle = 'white';\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    let img = new Image();\n    const url = URL.createObjectURL(blob);\n    img.onload = async () => {\n      context?.drawImage(img, 0, 0);\n      const png = canvas.toDataURL('image/png', 1);\n\n      // @ts-expect-error write exists in some browsers\n      if (navigator.clipboard.write) {\n        copyBlobToCliboard(canvas);\n      } else {\n        copyDataURLCliboard(png);\n      }\n\n      URL.revokeObjectURL(png);\n    };\n    img.src = url;\n  } catch (e) {\n    if (e instanceof ReferenceError) {\n      // eslint-disable-next-line no-alert\n      alert(\n        'Your browser does not support this feature, please use Google Chrome',\n      );\n    }\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n}\n\nfunction getBlob(elementID) {\n  // nmrSVG\n  let _svg: any = document.getElementById(elementID)?.cloneNode(true);\n  const width = _svg?.getAttribute('width').replace('px', '');\n  const height = _svg?.getAttribute('height').replace('px', '');\n  _svg\n    .querySelectorAll('[data-no-export=\"true\"]')\n    .forEach((element) => element.remove());\n  const head = `<svg class=\"nmr-svg\"  viewBox='0 0 ${width} ${height}' width=\"${width}\"  height=\"${height}\"  version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">`;\n  const style = `<style>.grid line,.grid path{stroke:none;} .peaks-text{fill:#730000} .x path{stroke-width:1px} .x text{\n    font-size: 12px;\n    font-weight: bold;\n  } \n \n  .nmr-svg,.contours{\n    background-color:white;\n    fill:white;\n  }\n  \n\n  \n  </style>`;\n  const svg = `${head + style + _svg.innerHTML}</svg>`;\n  const blob = new Blob([svg], { type: 'image/svg+xml' });\n  return { blob, width, height };\n}\n\nexport {\n  exportAsSVG,\n  exportAsJSON,\n  exportAsNMRE,\n  exportAsPng,\n  copyPNGToClipboard,\n  copyTextToClipboard,\n  copyHTMLToClipboard,\n  exportAsMol,\n  exportAsMatrix,\n};\n","import Jszip from 'jszip';\n\nconst jszip = new Jszip();\n\ninterface addSourceOptions {\n  spectrum?: any;\n  source?: any;\n}\n\nexport async function addSource(nmrRecord, options: addSourceOptions = {}) {\n  const { spectrum, source } = options;\n  const { file = {}, jcampURL } = source;\n  let tag = '';\n  const dimension = `${spectrum.info.dimension}d`;\n  switch (file.extension) {\n    case 'jdx':\n    case 'dx':\n      tag += `\\nJcamp_Location=file:jcamp/${dimension}/${spectrum.display.name}\\\\`;\n      nmrRecord.file(\n        `jcamp/${dimension}/${spectrum.display.name}`,\n        file.binary,\n      );\n      break;\n    case 'zip':\n      if (!file.binary) return;\n      void jszip.loadAsync(file.binary).then(async (zip) => {\n        for (const file in zip.files) {\n          if (file.endsWith('/')) continue;\n          nmrRecord.file(\n            `Bruker/${file}`,\n            await zip.file(file)?.async('arraybuffer'),\n          );\n        }\n        tag += `\\nSpectrum_Location=file:Bruker/${getPathFromZip(zip)}\\\\`;\n      });\n      break;\n    default:\n      if (!jcampURL) break;\n      void (await fetch(jcampURL).then(async (jcamp) => {\n        if (!jcamp) return;\n        let name = jcampURL.split('/').slice(-1);\n        const path = `jcamp/${dimension}/${name}`;\n        tag += `\\nJcamp_Location=file:${path}\\\\`;\n        nmrRecord.file(path, await jcamp.arrayBuffer());\n      }));\n  }\n\n  return tag;\n}\n\nfunction getPathFromZip(zip) {\n  let files = zip.filter((relativePath) => {\n    if (relativePath.match('__MACOSX')) return false;\n    if (\n      relativePath.endsWith('fid') ||\n      relativePath.endsWith('1r') ||\n      relativePath.endsWith('ser') ||\n      relativePath.endsWith('2rr')\n    ) {\n      return true;\n    }\n    return false;\n  });\n  const index = files.findIndex(\n    (file) => file.name.endsWith('1r') || file.name.endsWith('2rr'),\n  );\n  return index > -1 ? files[index].name : files[0].name;\n}\n","export function getToFix(nucleusArray: string | Array<string>) {\n  if (!Array.isArray(nucleusArray)) nucleusArray = [nucleusArray];\n  let toFix: Array<number> = [];\n  for (let nucleus of nucleusArray) {\n    toFix.push(chooseDecimal(nucleus));\n  }\n  return toFix;\n}\n\nfunction chooseDecimal(nucleus: string) {\n  switch (nucleus.toUpperCase()) {\n    case '1H':\n      return 2;\n    case '13C':\n      return 1;\n    default:\n      return 1;\n  }\n}\n","import { addSource } from './addSource';\nimport { getToFix } from './getToFix';\n\ninterface Get1DSignalsOptions {\n  prefix?: string;\n  labels: {\n    byDiaID: Array<{ label: string }>;\n  };\n}\n\nexport async function get1DSignals(\n  data,\n  nmrRecord,\n  options: Get1DSignalsOptions = { labels: { byDiaID: [] } },\n) {\n  let { prefix = '', labels } = options;\n  let str = '';\n  let nucleusArray: Array<Array<any>> = [];\n  for (let spectrum of data) {\n    const { info } = spectrum;\n    if (info.isFid || info.dimension > 1) continue;\n    let partTag = '';\n    let ranges = spectrum.ranges.values || [];\n\n    let nucleus = spectrum.info.nucleus;\n    let counter = 1;\n    let subfix = '';\n    nucleusArray.forEach((e) => {\n      if (e === nucleus) counter++;\n    });\n    nucleusArray.push(nucleus);\n\n    if (counter > 1) subfix = `#${counter}`;\n\n    partTag += `${prefix}1D_${nucleus.toUpperCase()}${subfix}>`;\n\n    if (spectrum.info.baseFrequency) {\n      partTag += `\\nLarmor=${Number(spectrum.info.baseFrequency).toFixed(2)}\\\\`;\n    }\n\n    const { source = {} } = spectrum;\n\n    partTag += await addSource(nmrRecord, {\n      spectrum,\n      source,\n    });\n\n    let toFix = getToFix(nucleus)[0];\n\n    for (let range of ranges) {\n      let signals = range.signals;\n\n      for (let signal of signals) {\n        let { multiplicity } = signal;\n        if ((!multiplicity || multiplicity === 'm') && nucleus === '1H') {\n          partTag += `\\n${Number(range.from).toFixed(toFix)}-${Number(\n            range.to,\n          ).toFixed(toFix)}`;\n        } else if (signal.delta) {\n          partTag += `\\n${Number(signal.delta).toFixed(toFix)}`;\n        } else {\n          continue;\n        }\n\n        let signalLabel = '';\n\n        if (signal.diaIDs && signal.diaIDs.length > 0) {\n          signal.diaIDs.forEach((diaID, i, arr) => {\n            let separator = ', ';\n            if (i === arr.length - 1) separator = '';\n            let label = labels.byDiaID[diaID].label || diaID;\n            signalLabel += `${label}${separator}`;\n          });\n          partTag += `, L=${signalLabel}`;\n        }\n\n        if (nucleus === '1H') {\n          if (signal.multiplicity) partTag += `, S=${signal.multiplicity}`;\n\n          let jCoupling = signal.js;\n          if (Array.isArray(jCoupling) && jCoupling.length) {\n            let separator = ', J=';\n\n            for (const jCouplingElement of jCoupling) {\n              partTag += `${separator}${Number(\n                jCouplingElement.coupling,\n              ).toFixed(3)}`;\n              if (jCouplingElement.diaIDs) {\n                let { diaIDs } = jCouplingElement;\n                if (!Array.isArray(diaIDs)) diaIDs = [diaIDs];\n                if (!diaIDs.length) continue;\n                let jCouple =\n                  labels.byDiaID[diaIDs[0]].label || String(diaIDs[0]);\n                partTag += `(${jCouple})`;\n              }\n              separator = ', ';\n            }\n          }\n          if (range.integration) {\n            partTag += `, E=${Number(range.integration).toFixed(toFix)}`;\n          } else if (range.nbAtoms) {\n            partTag += `, E=${range.nbAtoms.toFixed(toFix)}`;\n          } else if (range.signals[0].nbAtoms !== undefined) {\n            partTag += `, E=${range.signals[0].nbAtoms}`;\n          }\n        }\n      }\n      if (signals.length) partTag += '\\\\';\n    }\n    partTag += '\\n';\n\n    if (/\\n/.exec(partTag)) str += partTag;\n  }\n  return str;\n}\n","export function getCouplingObserved(experiment: string) {\n  switch (experiment.toLowerCase()) {\n    case 'hsqc':\n    case 'cosy':\n      return '1J';\n    case 'hmbc':\n      return 'NJ';\n    default:\n      return 'NJ';\n  }\n}\n","import { addSource } from './addSource';\nimport { getCouplingObserved } from './getCouplingObserved';\nimport { getToFix } from './getToFix';\n\nconst isArray = Array.isArray;\n\ninterface Get2DSignalsOptions {\n  labels: { byDiaID?: string };\n  prefix?: string;\n}\n\nexport async function get2DSignals(\n  data,\n  nmrRecord,\n  options: Get2DSignalsOptions = { labels: {} },\n) {\n  const { byDiaID } = options.labels;\n  let str = '';\n  let nucleusRecorded: Array<Array<any>> = [];\n  const prefix = `\\n> <NMREDATA_2D_`;\n  for (let spectrum of data) {\n    if (spectrum.info.dimension < 2) continue;\n    let partTag = '';\n    const { info, source } = spectrum;\n    let { nucleus, experiment, pulseSequence } = info;\n\n    nucleusRecorded.push(nucleus);\n\n    let couplingObserved = getCouplingObserved(experiment);\n    if (nucleus) {\n      partTag += `${prefix}${nucleus[1]}_${couplingObserved}_${nucleus[0]}>`;\n    }\n    let toFix = getToFix(nucleus);\n\n    partTag += await addSource(nmrRecord, {\n      spectrum,\n      source,\n    });\n\n    if (experiment) partTag += `\\nCorType=${experiment} \\\\`;\n    if (pulseSequence) partTag += `\\nPulseProgram=${pulseSequence} \\\\`;\n\n    if (spectrum.info.baseFrequency) {\n      partTag += `\\nLarmor=${Number(spectrum.info.baseFrequency[0]).toFixed(\n        2,\n      )}\\\\`;\n    }\n\n    let zones = spectrum.zones.values || [];\n    for (let zone of zones) {\n      let signals = zone.signals;\n      for (let signal of signals) {\n        let { x, y, peaks } = signal;\n        let xLabel = getAssignment(x, byDiaID, toFix[0]);\n        let yLabel = getAssignment(y, byDiaID, toFix[1]);\n        let intensity = Math.max(...peaks.map((e) => e.z));\n        partTag += `\\n${xLabel}/${yLabel}, I=${intensity.toFixed(2)}\\\\`;\n      }\n    }\n    str += partTag;\n  }\n  return str.length > 0 ? `${str}\\n` : '';\n}\n\nfunction getAssignment(axis, labels, toFix) {\n  let { diaIDs, delta } = axis;\n  if (diaIDs) {\n    if (!isArray(diaIDs)) diaIDs = [diaIDs];\n    if (diaIDs.length < 1) return Number(delta).toFixed(toFix);\n    let label = diaIDs.map((diaID) => labels[diaID].label).join(',');\n    return diaIDs.length > 1 ? `(${label})` : label;\n  }\n  return Number(delta).toFixed(toFix);\n}\n","export function flat2DSignals(signals) {\n  let flattedSignal: Array<any> = [];\n  for (const { x, y } of signals) {\n    flattedSignal.push(x, y);\n  }\n  return flattedSignal;\n}\n","import { getShortestPaths } from 'openchemlib-utils';\n\nimport { flat2DSignals } from './flat2DSignals';\nimport { getToFix } from './getToFix';\n\ninterface GetLabelsOptions {\n  molecule?: any;\n  groupedDiaIDs: Array<any>;\n}\n\nexport function getLabels(\n  data,\n  options: GetLabelsOptions = { groupedDiaIDs: [] },\n) {\n  const { groupedDiaIDs, molecule } = options;\n\n  let connections = getShortestPaths(molecule, { toLabel: 'H', maxLength: 1 });\n\n  let byDiaID = {};\n  let byAssignNumber = {};\n  for (let spectrum of data) {\n    let { dimension, nucleus } = spectrum.info;\n    let toFix = getToFix(nucleus);\n\n    let [roiKey, flatSignals] =\n      dimension > 1 ? ['zones', flat2DSignals] : ['ranges', (s) => s || []];\n\n    let rois = spectrum[roiKey].values || [];\n    for (let roi of rois) {\n      let signals = flatSignals(roi.signals);\n      for (let i = 0; i < signals.length; i++) {\n        let diaIDs = signals[i].diaIDs || [];\n        for (let diaID of diaIDs) {\n          let delta = Number(signals[i].delta).toFixed(toFix[i % dimension]);\n          // get atomLabel\n          let groupedOclID = groupedDiaIDs.find((dia) => {\n            if (dia.oclID === diaID) return true;\n            return false;\n          });\n          // the addition of one in atom number it is because the atoms enumeration starts from zero\n\n          let labelOptions = {\n            atom: groupedOclID.atoms[0],\n            molecule,\n            connections,\n            atomLabel: groupedOclID.atomLabel,\n          };\n\n          byDiaID[diaID] = {\n            atoms: groupedOclID.atoms.map((e) => e + 1),\n            shift: delta,\n            label: createLabel(labelOptions),\n          };\n\n          for (let atom of groupedOclID.atoms) {\n            labelOptions.atom = atom;\n            byAssignNumber[atom] = {\n              shift: delta,\n              diaID,\n              label: createLabel(labelOptions),\n            };\n          }\n        }\n      }\n    }\n  }\n  return { byAssignNumber, byDiaID };\n}\n\nfunction createLabel(options) {\n  const { atom, molecule, atomLabel, connections } = options;\n  let label = '';\n  if (atomLabel !== 'C') {\n    let connectedTo = connections[atom];\n    let path = connectedTo.find((e) => e && e.length > 1);\n    let pLabel = `${atomLabel}${path[0] + 1}`;\n    let hLabel = `${molecule.getAtomLabel(path[1])}${path[1] + 1}`;\n    label = `${pLabel}${hLabel}`;\n  } else {\n    label = `${atomLabel}${atom + 1}`;\n  }\n  return label;\n}\n","import jszip from 'jszip';\nimport { getGroupedDiastereotopicAtomIDs } from 'openchemlib-utils';\nimport { Molecule as OCLMolecule } from 'openchemlib/full';\n\nimport { get1DSignals } from './util/nmredata/get1DSignals';\nimport { get2DSignals } from './util/nmredata/get2DSignals';\nimport { getLabels } from './util/nmredata/getLabels';\n\nconst tags = {\n  solvent: 'SOLVENT',\n  temperature: 'TEMPERATURE',\n  assignment: 'ASSIGNMENT',\n  j: 'J',\n  signals: 'SIGNALS',\n  id: 'ID',\n};\n\nexport async function nmriumToNmredata(state, options = {}) {\n  const {\n    data, // it would be changed depending of the final location\n    molecules,\n  } = state || {\n    data: [], // it would be changed depending of the final location\n    molecules: [],\n  };\n\n  let nmrRecord = new jszip();\n\n  for (const molecule of molecules) {\n    await addNMReDATA(data, nmrRecord, {\n      ...options,\n      molecule,\n    });\n  }\n\n  if (!molecules.length) await addNMReDATA(data, nmrRecord, options);\n  return nmrRecord;\n}\n\ninterface AddNMReDATAOptions {\n  id?: string;\n  prefix?: string;\n  filename?: string;\n  molecule?: any;\n}\n\nasync function addNMReDATA(data, nmrRecord, options: AddNMReDATAOptions = {}) {\n  let {\n    id,\n    prefix = '\\n> <NMREDATA_',\n    filename = 'nmredata',\n    molecule,\n  } = options;\n\n  let sdfResult = '';\n\n  let groupedDiaIDs;\n  if (molecule) {\n    molecule = OCLMolecule.fromMolfile(molecule.molfile);\n    sdfResult += molecule.toMolfile();\n    molecule.addImplicitHydrogens();\n    groupedDiaIDs = getGroupedDiastereotopicAtomIDs(molecule);\n  }\n\n  let labels: { byDiaID: any; byAssignNumber: any } = molecule\n    ? getLabels(data, { groupedDiaIDs, molecule })\n    : { byDiaID: undefined, byAssignNumber: undefined };\n\n  sdfResult += `${prefix}VERSION>\\n1.1\\\\\\n`;\n  sdfResult += putTag(data, 'temperature', { prefix });\n  sdfResult += putTag(data, 'solvent', { prefix });\n\n  if (id) sdfResult += `${prefix + tags.id}>\\nid\\\\\\n`;\n  sdfResult += formatAssignments(labels.byDiaID, { prefix });\n  sdfResult += await get1DSignals(data, nmrRecord, { prefix, labels });\n  sdfResult += await get2DSignals(data, nmrRecord, { prefix, labels });\n  sdfResult += '\\n$$$$\\n';\n  nmrRecord.file(`${filename}.sdf`, sdfResult);\n}\n\nfunction formatAssignments(labels, options) {\n  if (!labels) return '';\n  const { prefix } = options;\n  let str = `${prefix + tags.assignment}>\\n`;\n  for (let l in labels) {\n    let atoms = labels[l].atoms;\n    str += `${labels[l].label}, ${labels[l].shift}`; // change to add label\n    for (let atom of atoms) str += `, ${atom}`;\n    str += '\\\\\\n';\n  }\n  return str;\n}\n\nfunction putTag(spectra, tag, options: { prefix?: string } = { prefix: '' }) {\n  const { prefix } = options;\n  let str = '';\n  for (let spectrum of spectra) {\n    if (spectrum.info[tag]) {\n      str += `${prefix + tags[tag]}>\\n${String(spectrum.info[tag])}\\\\\\n`;\n      break;\n    }\n  }\n  return str;\n}\n","import { useCallback } from 'react';\n\nimport { toJSON } from '../../data/SpectraManager';\nimport { useChartData } from '../context/ChartContext';\nimport { useAlert } from '../elements/popup/Alert';\nimport { positions, useModal } from '../elements/popup/Modal';\nimport SaveAsModal from '../modal/SaveAsModal';\nimport {\n  copyPNGToClipboard,\n  exportAsJSON,\n  exportAsNMRE,\n  exportAsPng,\n  exportAsSVG,\n} from '../utility/Export';\nimport { nmriumToNmredata } from '../utility/nmriumToNmredata';\n\nexport default function useExport() {\n  const modal = useModal();\n  const alert = useAlert();\n  const state = useChartData();\n\n  const saveToClipboardHandler = useCallback(async () => {\n    if (state.data.length > 0) {\n      const hideLoading = await alert.showLoading(\n        'Exporting as NMRium process in progress',\n      );\n      setTimeout(() => {\n        copyPNGToClipboard('nmrSVG');\n        hideLoading();\n        alert.success('Image copied to clipboard');\n      }, 0);\n    }\n  }, [alert, state]);\n\n  const saveAsJSONHandler = useCallback(\n    async (spaceIndent = 0, isCompressed = true) => {\n      if (state.data.length > 0) {\n        const hideLoading = await alert.showLoading(\n          'Exporting as NMRium process in progress',\n        );\n\n        setTimeout(() => {\n          async function handle() {\n            //exported file name by default will be the first spectrum name\n            const fileName = state.data[0]?.display?.name;\n            const exportedData = toJSON(state);\n            await exportAsJSON(\n              exportedData,\n              fileName,\n              spaceIndent,\n              isCompressed,\n            );\n            hideLoading();\n          }\n\n          void handle();\n        }, 0);\n      }\n    },\n    [alert, state],\n  );\n\n  const saveAsNMREHandler = useCallback(async () => {\n    if (state.data.length > 0) {\n      const hideLoading = await alert.showLoading(\n        'Exporting as NMRE process in progress',\n      );\n      setTimeout(() => {\n        async function handle() {\n          const fileName = state.data[0]?.display?.name;\n          const exportedData = await nmriumToNmredata(state);\n          exportAsNMRE(exportedData, fileName);\n          hideLoading();\n        }\n\n        void handle();\n      }, 0);\n    }\n  }, [alert, state]);\n\n  const saveAsSVGHandler = useCallback(async () => {\n    if (state.data.length > 0) {\n      const hideLoading = await alert.showLoading(\n        'Exporting as SVG process in progress',\n      );\n      setTimeout(() => {\n        const fileName = state.data[0]?.display?.name;\n        exportAsSVG('nmrSVG', fileName);\n        hideLoading();\n      }, 0);\n    }\n  }, [alert, state.data]);\n\n  const saveAsPNGHandler = useCallback(async () => {\n    if (state.data.length > 0) {\n      const hideLoading = await alert.showLoading(\n        'Exporting as PNG process in progress',\n      );\n      setTimeout(() => {\n        const fileName = state.data[0]?.display?.name;\n        exportAsPng('nmrSVG', fileName);\n        hideLoading();\n      }, 0);\n    }\n  }, [alert, state.data]);\n\n  const saveHandler = useCallback(\n    (options) => {\n      async function handler() {\n        const { name, pretty, compressed, dataExportOption } = options;\n        const hideLoading = await alert.showLoading(\n          `Exporting as ${name}.nmrium process in progress`,\n        );\n        setTimeout(() => {\n          void (async () => {\n            const exportedData = toJSON(state, dataExportOption);\n            const spaceIndent = pretty ? 2 : 0;\n            await exportAsJSON(exportedData, name, spaceIndent, compressed);\n            hideLoading();\n          })();\n        }, 0);\n      }\n\n      void handler();\n    },\n    [alert, state],\n  );\n  const saveAsHandler = useCallback(async () => {\n    if (state.data.length > 0) {\n      const fileName = state.data[0]?.display?.name;\n      modal.show(<SaveAsModal name={fileName} onSave={saveHandler} />, {\n        isBackgroundBlur: false,\n        position: positions.TOP_CENTER,\n        width: 400,\n      });\n    }\n  }, [modal, saveHandler, state.data]);\n\n  return {\n    saveToClipboardHandler,\n    saveAsJSONHandler,\n    saveAsNMREHandler,\n    saveAsSVGHandler,\n    saveAsPNGHandler,\n    saveAsHandler,\n  };\n}\n","import lodashGet from 'lodash/get';\n\nimport { usePreferences } from '../context/PreferencesContext';\n\nexport default function useCheckExperimentalFeature(): boolean {\n  const preferences = usePreferences();\n  const value = lodashGet(\n    preferences.current,\n    'display.general.experimentalFeatures',\n    false,\n  );\n\n  if (value?.hidden === true || value?.display === false) {\n    return false;\n  }\n\n  return true;\n}\n","import { CSSProperties, InputHTMLAttributes, ReactNode } from 'react';\n\nimport ToolTip from './ToolTip/ToolTip';\n\ninterface ButtonToolTipProps\n  extends Omit<InputHTMLAttributes<HTMLButtonElement>, 'type'> {\n  popupTitle?: string;\n  popupPlacement?: string;\n  style?: CSSProperties;\n  children?: ReactNode;\n}\n\nfunction ButtonToolTip({\n  children,\n  style = {},\n  onClick = () => null,\n  popupTitle = '',\n  popupPlacement = 'right',\n  ...props\n}: ButtonToolTipProps) {\n  return (\n    <ToolTip title={popupTitle} popupPlacement={popupPlacement}>\n      <button style={style} type=\"button\" onClick={onClick} {...props}>\n        {children}\n      </button>\n    </ToolTip>\n  );\n}\n\nexport default ButtonToolTip;\n","import { css } from '@emotion/react';\n\nexport const tablePanelStyle = css`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n\n  .inner-container {\n    height: 100%;\n    overflow: hidden;\n    isolation: isolate;\n  }\n\n  .table-container {\n    overflow: auto;\n    height: 100%;\n    display: block;\n    background-color: white;\n  }\n`;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { CSSProperties, memo, ReactNode, useCallback, useState } from 'react';\n\nimport ToolTip from './ToolTip/ToolTip';\n\nconst styles = css`\n  background-color: #f5f5f5;\n  border: none;\n  border-radius: 5px;\n\n  &:hover {\n    background-color: lightgray !important;\n    color: black !important;\n  }\n\n  &.toggle-active {\n    background-color: gray;\n    color: white;\n  }\n`;\n\ninterface ToggleButtonProps {\n  popupTitle: string;\n  popupPlacement: string;\n  style?: CSSProperties;\n  defaultValue?: boolean;\n  onClick: (element: boolean) => void;\n  disabled?: boolean;\n  children: ReactNode;\n  className?: string;\n}\n\nfunction ToggleButton({\n  children,\n  style = {},\n  onClick = () => null,\n  popupTitle = '',\n  popupPlacement = 'right',\n  defaultValue = false,\n  disabled = false,\n  className = '',\n}: ToggleButtonProps) {\n  const [flag, Toggle] = useState<boolean>(defaultValue);\n\n  const toggleHandler = useCallback(() => {\n    onClick(!flag);\n\n    Toggle(!flag);\n  }, [onClick, flag]);\n  return (\n    <ToolTip title={popupTitle} popupPlacement={popupPlacement}>\n      <button\n        disabled={disabled}\n        css={styles}\n        style={style}\n        className={(flag ? 'toggle toggle-active ' : 'toggle ') + className}\n        type=\"button\"\n        onClick={toggleHandler}\n      >\n        {children}\n      </button>\n    </ToolTip>\n  );\n}\n\nexport default memo(ToggleButton);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { CSSProperties, memo, ReactNode } from 'react';\nimport { FaRegTrashAlt, FaCog, FaFilter } from 'react-icons/fa';\n\nimport ToggleButton from '../../elements/ToggleButton';\nimport ToolTip from '../../elements/ToolTip/ToolTip';\n\nconst styles = css`\n  display: flex;\n  flex-direction: row;\n  border-bottom: 0.55px solid rgb(240, 240, 240);\n  padding: 0px 5px;\n\n  .left-container {\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n  }\n  button {\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n  }\n\n  button:disabled {\n    opacity: 0.6;\n  }\n\n  .counter-label {\n    margin: 0;\n    text-align: right;\n    line-height: 22px;\n    padding: 0px 10px;\n    white-space: nowrap;\n  }\n`;\n\ninterface DefaultPanelHeaderProps {\n  counter?: number;\n  counterFiltered?: number;\n  deleteToolTip?: string;\n  filterToolTip?: string;\n  onDelete?: () => void;\n  onFilter?: () => void;\n  onSettingClick?: () => void;\n  filterIsActive?: boolean;\n  canDelete?: boolean;\n  showSettingButton?: boolean;\n  showCounter?: boolean;\n  children?: ReactNode;\n  style?: CSSProperties;\n  className?: string;\n}\n\nfunction DefaultPanelHeader({\n  counter,\n  onDelete = () => null,\n  deleteToolTip = 'Delete',\n  onFilter = () => null,\n  filterToolTip = '',\n  filterIsActive = false,\n  counterFiltered = 0,\n  children,\n  onSettingClick = () => null,\n  showSettingButton = false,\n  canDelete = true,\n  style = {},\n  className = '',\n}: DefaultPanelHeaderProps) {\n  return (\n    <div css={styles} {...{ style, className }}>\n      <div className=\"left-container\">\n        {canDelete && (\n          <ToolTip title={deleteToolTip} popupPlacement=\"right\">\n            <button type=\"button\" onClick={onDelete} disabled={counter === 0}>\n              <FaRegTrashAlt />\n            </button>\n          </ToolTip>\n        )}\n\n        {/* Optional if there is no filter needed, e.g. in spectra panel */}\n        {filterToolTip ? (\n          <ToggleButton\n            popupTitle={filterToolTip}\n            popupPlacement=\"right\"\n            onClick={onFilter}\n            defaultValue={filterIsActive}\n          >\n            <FaFilter style={{ pointerEvents: 'none', fontSize: '12px' }} />\n          </ToggleButton>\n        ) : null}\n\n        {children}\n      </div>\n      {counter !== undefined && (\n        <p className=\"counter-label\">\n          [{' '}\n          {filterIsActive &&\n          filterIsActive === true &&\n          counterFiltered !== undefined\n            ? `${counterFiltered}/${counter}`\n            : counter}{' '}\n          ]\n        </p>\n      )}\n      {showSettingButton && (\n        <ToolTip title=\"preferences\" popupPlacement=\"left\">\n          <button type=\"button\" onClick={onSettingClick}>\n            <FaCog />\n          </button>\n        </ToolTip>\n      )}\n    </div>\n  );\n}\n\nexport default memo(DefaultPanelHeader);\n","/** @jsxImportSource @emotion/react */\nimport { SvgNmrAssignment2 } from 'cheminfo-font';\nimport { useCallback } from 'react';\n\nimport Button from '../../elements/ButtonToolTip';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\n\nfunction AutomaticAssignment() {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  const automaticAssignmentHandler = useCallback(() => {}, []);\n\n  return (\n    <div css={tablePanelStyle}>\n      {\n        <DefaultPanelHeader showSettingButton={false} canDelete={false}>\n          <Button\n            popupTitle=\"automatic assignment\"\n            onClick={automaticAssignmentHandler}\n          >\n            <SvgNmrAssignment2 style={{ fontSize: '18px' }} />\n          </Button>\n        </DefaultPanelHeader>\n      }\n\n      <div className=\"inner-container\" />\n    </div>\n  );\n}\n\nexport default AutomaticAssignment;\n","import { css } from '@emotion/react';\n\nconst HighlightedRowStyle = css`\n  background-color: #ff6f0057;\n`;\n\nconst ConstantlyHighlightedRowStyle = css`\n  background-color: #f5f5dc;\n`;\n\nconst ReactTableStyle = css`\n  border-spacing: 0;\n  border: 1px solid #dedede;\n  width: 100%;\n  max-height: 100%;\n  font-size: 12px;\n\n  .react-contextmenu-wrapper {\n    display: contents;\n  }\n\n  tr {\n    :last-child {\n      td {\n        border-bottom: 0;\n      }\n    }\n  }\n\n  th {\n    position: sticky;\n    background-color: white;\n    z-index: 0;\n    top: 0;\n  }\n  th,\n  td {\n    margin: 0;\n    padding: 0.15rem 0.4rem;\n    border-bottom: 1px solid #dedede;\n    border-right: 1px solid #dedede;\n\n    // :last-child {\n    //   border-right: 0;\n    // }\n    button {\n      background-color: transparent;\n      border: none;\n    }\n  }\n`;\n\nexport { ReactTableStyle, HighlightedRowStyle, ConstantlyHighlightedRowStyle };\n","/** @jsxImportSource @emotion/react */\n\nimport { memo } from 'react';\nimport { useTable, useSortBy, useFlexLayout } from 'react-table';\n\nimport { ReactTableStyle } from './Style';\n\ninterface ReactTableFlexLayoutProps {\n  data: any;\n  columns: any;\n  onMouseDown?: () => void;\n}\n\nfunction ReactTableFlexLayout({\n  data,\n  columns,\n  onMouseDown = () => null,\n}: ReactTableFlexLayoutProps) {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable(\n      {\n        columns,\n        data,\n      },\n      useSortBy,\n      useFlexLayout,\n    );\n  return (\n    <table\n      {...getTableProps()}\n      css={ReactTableStyle}\n      style={{ height: '100%' }}\n    >\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr\n            key={headerGroup.getHeaderGroupProps().key}\n            {...headerGroup.getHeaderGroupProps()}\n          >\n            {headerGroup.headers.map((column) => (\n              <th\n                key={column.getHeaderProps().key}\n                {...column.getHeaderProps(column.getSortByToggleProps())}\n              >\n                {column.render('Header')}\n                <span>\n                  {column.isSorted ? (column.isSortedDesc ? ' ▼' : ' ▲') : ''}\n                </span>\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody\n        {...getTableBodyProps()}\n        style={{ display: 'block', height: '100%', overflowY: 'auto' }}\n      >\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr\n              key={row.getRowProps().key}\n              {...row.getRowProps()}\n              onMouseDown={onMouseDown}\n            >\n              {row.cells.map((cell) => {\n                return (\n                  <td\n                    key={cell.getCellProps().key}\n                    {...cell.getCellProps()}\n                    style={{ ...cell.getCellProps().style, padding: '0px' }}\n                  >\n                    {cell.render('Cell')}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default memo(ReactTableFlexLayout);\n","import {\n  useState,\n  useCallback,\n  useEffect,\n  memo,\n  useMemo,\n  useRef,\n  CSSProperties,\n} from 'react';\n\nimport ReactTableFlexLayout from '../elements/ReactTable/ReactTableFlexLayout';\nimport useSpectrum from '../hooks/useSpectrum';\n\nconst styles: Record<\n  'container' | 'tableContainer' | 'searchInput',\n  CSSProperties\n> = {\n  container: {\n    height: '100%',\n    flexDirection: 'column',\n    display: 'flex',\n    width: '100%',\n  },\n  tableContainer: {\n    height: 'calc(100% - 30px)',\n    overflow: 'auto',\n    display: 'block',\n  },\n\n  searchInput: {\n    width: '100%',\n    borderRadius: '5px',\n    border: '0.55px solid gray',\n    padding: '5px',\n    marginBottom: '2px',\n  },\n};\n\ninterface InformationPanelInnerProps {\n  info: any;\n  meta: any;\n}\n\nfunction InformationPanelInner({ info, meta }: InformationPanelInnerProps) {\n  const [information, setInformation] = useState({});\n  const [matches, setMatchesData] = useState<string[]>([]);\n  const searchRef = useRef<HTMLInputElement>(null);\n\n  const handleSearch = useCallback(\n    (e) => {\n      const values = Object.keys(information).filter((key) =>\n        key\n          .toLowerCase()\n          .includes(e.target ? e.target.value.toLowerCase() : e.toLowerCase()),\n      );\n      setMatchesData(values);\n    },\n    [information],\n  );\n\n  useEffect(() => {\n    if (searchRef.current) {\n      handleSearch(searchRef.current.value);\n    }\n  }, [handleSearch, searchRef]);\n\n  useEffect(() => {\n    if (info && meta) {\n      const keys = Object.keys(info).concat(Object.keys(meta));\n      setMatchesData(keys);\n      setInformation({\n        ...info,\n        ...meta,\n      });\n    }\n  }, [info, meta]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Parameter',\n        sortType: 'basic',\n        minWidth: 100,\n        width: 20,\n        maxWidth: 20,\n        Cell: ({ row }) => (\n          <p style={{ padding: '5px', backgroundColor: 'white' }}>\n            {row.original}\n          </p>\n        ),\n      },\n      {\n        Header: 'Value',\n        sortType: 'basic',\n        resizable: true,\n        Cell: ({ row }) => (\n          <p\n            style={{\n              backgroundColor: '#efefef',\n              height: '100%',\n              padding: '5px',\n              fontFamily: 'monospace',\n              whiteSpace: 'pre',\n              overflow: 'hidden',\n            }}\n          >\n            {`${information[row.original]}`}\n          </p>\n        ),\n      },\n    ],\n    [information],\n  );\n\n  return (\n    <div style={styles.container}>\n      <div>\n        <input\n          type=\"text\"\n          style={styles.searchInput}\n          placeholder=\"Search for parameter...\"\n          onChange={handleSearch}\n          ref={searchRef}\n        />\n      </div>\n      <div style={styles.tableContainer}>\n        <ReactTableFlexLayout data={matches} columns={columns} />\n      </div>\n    </div>\n  );\n}\n\nconst MemoizedInformationPanel = memo(InformationPanelInner);\n\nconst emptyData = { info: {}, meta: {} };\n\nexport default function InformationPanel() {\n  const { info, meta } = useSpectrum(emptyData);\n\n  return <MemoizedInformationPanel {...{ info, meta }} />;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FaTimes } from 'react-icons/fa';\n\nconst styles = css`\n  border-radius: 50%;\n  width: 16px;\n  height: 16px;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :hover {\n    background-color: red;\n    border-radius: 50%;\n\n    .icon {\n      color: white;\n    }\n  }\n\n  .icon {\n    color: #252525;\n    width: 8px;\n  }\n`;\n\ninterface DeleteButtonProps {\n  onDelete: (element: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  className?: string;\n}\n\nfunction DeleteButton({ onDelete, className = 'delete' }: DeleteButtonProps) {\n  return (\n    <button css={styles} className={className} type=\"button\" onClick={onDelete}>\n      <FaTimes className=\"icon\" />\n    </button>\n  );\n}\n\nexport default DeleteButton;\n","/** @jsxImportSource @emotion/react */\nimport { css, SerializedStyles } from '@emotion/react';\nimport { CSSProperties, ReactNode, useCallback } from 'react';\n\nimport DeleteButton from './DeleteButton';\n\nconst styles = (styles) => css`\n  position: relative;\n\n  .delete {\n    position: absolute;\n    top: 2px;\n    left: 2px;\n  }\n\n  ${styles}\n`;\n\nexport interface InternalTabProps {\n  tabid: string;\n  tablabel?: string;\n  isActive: boolean;\n  tabstyles?: CSSProperties | SerializedStyles;\n  canDelete?: boolean;\n  onDelete?: (element: any) => void;\n  onClick?: (element: any) => void;\n  render?: ({\n    isActive,\n    title,\n    id,\n  }: {\n    isActive: boolean;\n    title: string;\n    id: string | number;\n  }) => any;\n}\n\n/* eslint-disable react/no-unused-prop-types */\nexport interface TabProps {\n  tabid: string;\n  tablabel?: string;\n  canDelete?: boolean;\n  onDelete?: (element: any) => void;\n  tabstyles?: CSSProperties | SerializedStyles;\n  children: ReactNode;\n  render?: () => ReactNode;\n  className?: string;\n}\n/* eslint-enable react/no-unused-prop-types */\n\nexport function InternalTab({\n  tabid,\n  tablabel,\n  isActive,\n  onClick = () => null,\n  canDelete,\n  onDelete = () => null,\n  tabstyles,\n  render,\n}: InternalTabProps) {\n  let className = 'tab-list-item';\n\n  // use tab identifier if given (higher priority)\n  if (isActive) {\n    className += ' tab-list-active';\n  }\n\n  const clickHandler = useCallback(\n    (e) => {\n      onClick({ ...e, tablabel, tabid });\n    },\n    [onClick, tablabel, tabid],\n  );\n\n  const deleteHandler = useCallback(\n    (e) => {\n      // stop propagation here to not have set it\n      // as active tab too (via tab click event triggering)\n      e.stopPropagation();\n      onDelete({ ...e, tablabel, tabid });\n    },\n    [onDelete, tablabel, tabid],\n  );\n\n  return (\n    <li\n      className={className}\n      onClick={clickHandler}\n      css={styles(tabstyles)}\n      data-test-id={`tab-${tabid}`}\n    >\n      {canDelete && <DeleteButton onDelete={deleteHandler} />}\n      {render\n        ? render({ isActive, title: tablabel || '', id: tabid })\n        : tablabel}\n    </li>\n  );\n}\n\nexport default function Tab(props: TabProps) {\n  return <>{props.children}</>;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  isValidElement,\n  useCallback,\n  useMemo,\n  Children,\n  memo,\n  ReactElement,\n} from 'react';\n\nimport { InternalTab, TabProps } from './Tab';\n\nconst topStyles = css`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  .tab-list {\n    border-bottom: 1px solid #ccc;\n    padding-left: 0;\n    margin: 0;\n  }\n\n  .tab-list li:first-of-type {\n    margin-left: 5px;\n  }\n\n  .tab-list li:hover {\n    background-color: #f7f7f7;\n  }\n\n  .tab-list-item {\n    display: inline-block;\n    list-style: none;\n    padding: 0.5rem 2rem;\n  }\n\n  .tab-list-active {\n    background-color: white;\n    border: solid #ccc;\n    border-width: 1px 1px 0 1px;\n  }\n\n  .tab-content {\n    height: 100%;\n    overflow: auto;\n  }\n`;\n\nconst leftStyles = css`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  .tab-list {\n    border-right: 1px solid #ccc;\n    padding-left: 0;\n    margin: 0;\n  }\n\n  .tab-list li:hover {\n    background-color: #f7f7f7;\n  }\n\n  .tab-list li:first-of-type {\n    margin-top: 10px;\n  }\n\n  .tab-list-item {\n    display: block;\n    list-style: none;\n    margin-right: -1px;\n    padding: 0.5rem 0.75rem;\n  }\n\n  .tab-list-active {\n    background-color: white;\n    border: solid #ccc;\n    border-width: 1px 0px 1px 1px;\n  }\n\n  .tab-content {\n    height: 100%;\n    overflow: auto;\n  }\n`;\n\nexport enum PositionsEnum {\n  TOP = 'TOP',\n  LEFT = 'LEFT',\n}\n\ninterface TabsProps {\n  children: Array<ReactElement<TabProps> | boolean>;\n  onClick: (element: any) => void;\n  activeTab: string;\n  position?: PositionsEnum;\n  onDelete?: (element: any) => void;\n}\n\nfunction Tabs({\n  children,\n  onClick,\n  position,\n  onDelete = () => null,\n  activeTab,\n}: TabsProps) {\n  const onClickTabHandler = useCallback(\n    (tab) => {\n      const { tablabel, tabid } = tab;\n      onClick({ tablabel, tabid });\n    },\n    [onClick],\n  );\n\n  let contentChild;\n  const tabs = Children.map(children, (child) => {\n    if (!isValidElement(child)) return null;\n\n    const { tabid } = child.props;\n\n    if (tabid === activeTab) {\n      contentChild = child.props.children;\n    }\n\n    return (\n      <InternalTab\n        {...child.props}\n        isActive={tabid === activeTab}\n        onClick={onClickTabHandler}\n        onDelete={onDelete}\n      />\n    );\n  });\n\n  const styles = useMemo(() => {\n    switch (position) {\n      case PositionsEnum.TOP:\n        return topStyles;\n      case PositionsEnum.LEFT:\n        return leftStyles;\n      default:\n        return topStyles;\n    }\n  }, [position]);\n\n  return (\n    <div className=\"tabs\" css={styles}>\n      <ol className=\"tab-list\">{tabs}</ol>\n      <div className=\"tab-content\">{contentChild}</div>\n    </div>\n  );\n}\n\nexport default memo(Tabs);\n","/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport {\n  ReactNode,\n  useState,\n  Children,\n  useMemo,\n  useEffect,\n  useCallback,\n  memo,\n} from 'react';\nimport { FaAngleLeft } from 'react-icons/fa';\nimport { useMeasure } from 'react-use';\n\ninterface ArrowProps {\n  direction: 'right' | 'left';\n  onClick: () => void;\n}\n\nfunction Arrow({ direction, onClick }: ArrowProps) {\n  return (\n    <div\n      onClick={onClick}\n      css={css`\n        display: flex;\n        position: absolute;\n        top: calc(50% - 20px);\n        ${direction === 'right' ? `right: 25px` : `left: 25px`};\n        height: 40px;\n        width: 40px;\n        justify-content: center;\n        background: white;\n        border-radius: 50%;\n        cursor: pointer;\n        align-items: center;\n        border: none;\n        transition: transform ease-in 0.1s;\n        background-color: #f7f7f7;\n\n        &:hover {\n          transform: scale(1.1);\n          background-color: #607d8b !important;\n          color: white;\n        }\n        img {\n          transform: translateX(${direction === 'left' ? '-2' : '2'}px);\n          &:focus {\n            outline: 0;\n          }\n        }\n      `}\n    >\n      <FaAngleLeft\n        style={{ transform: `scaleX(${direction === 'right' ? '-1' : '1'})` }}\n      />\n    </div>\n  );\n}\n\nconst transition = 0.45;\n\ninterface NextPrevProps {\n  children: ReactNode;\n  loop?: boolean;\n  defaultIndex?: number;\n  onChange?: (element: number) => void;\n}\n\nfunction NextPrev({\n  children,\n  loop = false,\n  defaultIndex = 0,\n  onChange = () => null,\n}: NextPrevProps) {\n  const [ref, { width }] = useMeasure<HTMLDivElement>();\n  const [activeIndex, setActiveIndex] = useState(0);\n  useEffect(() => {\n    setActiveIndex(defaultIndex);\n  }, [defaultIndex]);\n\n  const Sliders = useMemo(\n    () =>\n      Children.map(children, (child: any) => {\n        return (\n          <div\n            key={child.key}\n            css={css`\n              width: ${width}px;\n              height: 100%;\n            `}\n          >\n            {child}\n          </div>\n        );\n      }),\n    [children, width],\n  );\n\n  const nextHandler = useCallback(() => {\n    setActiveIndex((preActiveIndex) => {\n      if (Sliders && preActiveIndex === Sliders.length - 1) {\n        onChange(preActiveIndex);\n\n        if (loop) {\n          return 0;\n        } else {\n          return preActiveIndex;\n        }\n      }\n\n      const nextIndex = preActiveIndex + 1;\n      onChange(nextIndex);\n\n      return nextIndex;\n    });\n  }, [Sliders, loop, onChange]);\n\n  const prevHandler = useCallback(() => {\n    setActiveIndex((preActiveIndex) => {\n      if (preActiveIndex === 0) {\n        onChange(preActiveIndex);\n        if (loop) {\n          return 0;\n        } else {\n          return preActiveIndex;\n        }\n      }\n      const prevIndex = preActiveIndex - 1;\n\n      onChange(prevIndex);\n\n      return prevIndex;\n    });\n  }, [loop, onChange]);\n\n  if (!width && !Sliders) return null;\n  return (\n    <div\n      css={css`\n        position: relative;\n        height: 100%;\n        width: 100%;\n        margin: 0 auto;\n        overflow: hidden;\n        display: block;\n      `}\n      ref={ref}\n    >\n      <div\n        css={css`\n          transform: translateX(-${width * activeIndex}px);\n          transition: transform ease-out ${transition}s;\n          height: 100%;\n          width: ${width * (Sliders ? Sliders.length : 1)}px;\n          display: flex;\n        `}\n      >\n        {Sliders}\n      </div>\n\n      {activeIndex !== 0 && <Arrow direction=\"left\" onClick={prevHandler} />}\n      {Sliders && activeIndex !== Sliders.length - 1 && (\n        <Arrow direction=\"right\" onClick={nextHandler} />\n      )}\n    </div>\n  );\n}\n\nexport default memo(NextPrev);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\nimport MF from 'react-mf/lib/components/MF';\nimport { MolfileSvgRenderer } from 'react-ocl/full';\n\nimport { Molecule } from '../../data/molecules/Molecule';\n\nimport NextPrev from './NextPrev';\n\nconst toolbarStyle = css`\n  display: flex;\n  flex-direction: row;\n  border-top: 0.55px solid rgb(240, 240, 240);\n  border-bottom: 0.55px solid rgb(240, 240, 240);\n  padding: 0px 5px;\n\n  p {\n    margin: 0;\n    text-align: right;\n    width: 100%;\n    line-height: 22px;\n    padding: 0px 10px;\n  }\n`;\n\nconst moleculeContainerStyle = css`\n  width: 100%;\n  position: relative;\n  .slider {\n    height: 180px;\n    width: 100%;\n    padding: 0px;\n    padding: 0px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n  }\n  .slider p {\n    width: 100%;\n    margin: 0 auto;\n    display: block;\n    position: relative;\n    text-align: center;\n  }\n  .slider svg polygon {\n    fill: gray !important;\n  }\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 36px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 20%;\n\n    color: white;\n    background-color: gray;\n  }\n`;\n\ninterface MoleculeSelectionProps {\n  molecules: Array<Molecule>;\n  onChange: (element: number) => void;\n  index?: number;\n}\n\nexport default function MoleculeSelection(props: MoleculeSelectionProps) {\n  const { molecules, onChange = () => null, index } = props;\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  useEffect(() => {\n    const _index = index && index < molecules.length ? index : 0;\n    if (molecules && molecules.length > 0) {\n      setCurrentIndex(_index);\n    }\n  }, [index, molecules]);\n\n  const onChangeHandler = useCallback(\n    (slideIndex) => {\n      setCurrentIndex(slideIndex);\n      onChange(slideIndex);\n    },\n    [onChange],\n  );\n\n  return (\n    <div>\n      <div css={toolbarStyle}>\n        <p>\n          {molecules &&\n            molecules.length > 0 &&\n            `${+(currentIndex + 1)} / ${molecules.length}`}{' '}\n        </p>\n      </div>\n      <div css={moleculeContainerStyle}>\n        <NextPrev defaultIndex={currentIndex} onChange={onChangeHandler}>\n          {molecules?.map((mol, index) => (\n            <div key={mol.key} className=\"slider\">\n              <div>\n                {mol.molfile && (\n                  <MolfileSvgRenderer\n                    id={`molSVG${index}`}\n                    width={120}\n                    molfile={mol.molfile}\n                  />\n                )}\n              </div>\n              <p>\n                <MF mf={mol.mf} /> - {mol.mw?.toFixed(2)}\n              </p>\n            </div>\n          ))}\n        </NextPrev>\n      </div>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport { useCallback, useState, useEffect, useMemo } from 'react';\n\nimport getAtom from '../../../data/utilities/getAtom';\nimport { useChartData } from '../../context/ChartContext';\nimport MoleculeSelection from '../../elements/MoleculeSelection';\n\nconst styles = css`\n  .molecule-container {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    .title {\n      padding: 0px 10px;\n      width: 100%;\n      text-align: center;\n    }\n\n    .molecule-selection-container {\n      width: 450px;\n      display: block;\n      margin: 0 auto;\n    }\n\n    .newSumText {\n      margin-top: 15px;\n      padding: 0px 10px;\n      width: 100%;\n\n      text-align: center;\n    }\n  }\n\n  .empty {\n    width: 100%;\n    padding: 20%;\n    text-align: center;\n  }\n`;\n\ninterface SelectMoleculeProps {\n  name: string;\n}\n\nexport default function SelectMolecule(props: SelectMoleculeProps) {\n  const [currentIndex, setCurrentIndex] = useState<number>();\n  const { setFieldValue, errors, values } = useFormikContext<{\n    molecule: { mf: string; key: string } | null;\n    sum: number;\n  }>();\n  const { molecules, activeTab } = useChartData();\n  const element = getAtom(activeTab);\n  const newSum = useMemo(() => {\n    return element &&\n      molecules &&\n      molecules.length > 0 &&\n      currentIndex !== undefined &&\n      molecules[currentIndex].atoms[element]\n      ? molecules[currentIndex].atoms[element]\n      : 0;\n  }, [currentIndex, element, molecules]);\n\n  const setValue = useCallback(\n    (index: number) => {\n      setCurrentIndex(index);\n      setFieldValue(props.name, molecules[index]);\n    },\n    [molecules, props.name, setFieldValue],\n  );\n\n  useEffect(() => {\n    if (molecules && molecules.length > 0) {\n      const index = values[props.name]\n        ? molecules.findIndex(\n            (molecule) => molecule.key === values[props.name].key,\n          )\n        : -1;\n      setValue(index !== -1 ? index : 0);\n    }\n  }, [molecules, props.name, setValue, values]);\n\n  const onChangeMoleculeSelectionHandler = useCallback(\n    (index) => {\n      setValue(index);\n    },\n    [setValue],\n  );\n\n  return (\n    <div css={styles}>\n      {element && molecules && molecules.length > 0 ? (\n        <div className=\"molecule-container\">\n          <p className=\"title\">Select a molecule as reference!</p>\n\n          <div className=\"molecule-selection-container\">\n            <MoleculeSelection\n              index={currentIndex}\n              molecules={molecules}\n              onChange={onChangeMoleculeSelectionHandler}\n            />\n            <p className=\"newSumText\">\n              New sum for {element} will be {newSum}!\n            </p>\n          </div>\n        </div>\n      ) : (\n        <p\n          className=\"empty\"\n          style={{ color: errors[props.name] ? 'red' : 'black' }}\n        >\n          You have to Select a spectrum and Add a molecule from the Structure\n          panel to select as a reference!\n        </p>\n      )}\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport * as Yup from 'yup';\n\nimport { SumOptions } from '../../../data/types/data1d/SumOptions';\nimport { usePreferences } from '../../context/PreferencesContext';\nimport CloseButton from '../../elements/CloseButton';\nimport Tab from '../../elements/Tab/Tab';\nimport Tabs from '../../elements/Tab/Tabs';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikInput from '../../elements/formik/FormikInput';\nimport { ModalStyles } from '../ModalStyle';\n\nimport SelectMolecule from './SelectMolecule';\n\nconst styles = css`\n  width: 450px;\n  height: 400px;\n  .header {\n    display: flex;\n    padding: 10px;\n    span {\n      font-size: 14px;\n      flex: 1;\n    }\n  }\n\n  .tab-content {\n    flex: 1;\n  }\n\n  .manual-container {\n    padding: 30px 5px;\n\n    .input {\n      width: 80% !important;\n      height: 36px;\n      margin: 0 auto;\n    }\n    .input Input {\n      padding: 5px;\n      text-align: center;\n    }\n  }\n\n  .footer-container {\n    button {\n      width: 20%;\n      color: white;\n      background-color: gray !important;\n    }\n    button:hover {\n      border: 1px solid gray;\n      color: gray;\n      background-color: white !important;\n    }\n  }\n`;\n\nenum SumSetOptions {\n  Auto = 'auto',\n  Manual = 'manual',\n}\n\ntype SaveInput =\n  | {\n      sum: number;\n      sumAuto: false;\n    }\n  | {\n      moleculeKey: string;\n      mf: string;\n      sumAuto: true;\n    };\n\ninterface ChangeSumModalProps {\n  onSave: (saveInput: SaveInput) => void;\n  onClose: () => void;\n  header: string;\n  sumOptions: SumOptions;\n}\n\nexport default function ChangeSumModal({\n  onSave,\n  onClose,\n  header,\n  sumOptions,\n}: ChangeSumModalProps) {\n  const {\n    current: {\n      display: { general, panels },\n    },\n  } = usePreferences();\n\n  const [setOption, setActiveOption] = useState(SumSetOptions.Auto);\n  const formRef = useRef<any>(null);\n\n  const handleKeyDown = useCallback((event) => {\n    if (event.key === 'Enter') {\n      formRef.current.submitForm();\n    }\n  }, []);\n\n  const onTabChangeHandler = useCallback((tab) => {\n    setActiveOption(tab.tabid);\n  }, []);\n\n  useEffect(() => {\n    if (\n      sumOptions?.sumAuto &&\n      !general?.hideSetSumFromMolecule &&\n      !panels?.structuresPanel?.hidden\n    ) {\n      setActiveOption(SumSetOptions.Auto);\n      const { mf, moleculeKey: key } = sumOptions;\n      formRef.current.setValues({\n        sum: null,\n        molecule: key && mf ? { mf, key } : null,\n      });\n    } else {\n      setActiveOption(SumSetOptions.Manual);\n      formRef.current.setValues({ sum: sumOptions?.sum || '', molecule: null });\n    }\n  }, [general?.hideSetSumFromMolecule, panels?.structuresPanel, sumOptions]);\n\n  const saveHandler = useCallback(\n    (values) => {\n      switch (setOption) {\n        case SumSetOptions.Auto: {\n          const {\n            molecule: { mf, key: moleculeKey },\n          } = values;\n\n          onSave({ sumAuto: true, mf, moleculeKey });\n          break;\n        }\n        case SumSetOptions.Manual: {\n          const { sum } = values;\n          onSave({ sum, sumAuto: false });\n          break;\n        }\n        default:\n          return;\n      }\n      onClose();\n    },\n    [onClose, onSave, setOption],\n  );\n\n  const validationSchema = useMemo(() => {\n    switch (setOption) {\n      case SumSetOptions.Auto: {\n        return Yup.object({\n          molecule: Yup.object().required(),\n        });\n      }\n      case SumSetOptions.Manual: {\n        return Yup.object({\n          sum: Yup.number().required(),\n        });\n      }\n      default:\n        return null;\n    }\n  }, [setOption]);\n\n  return (\n    // <div css={modalContainer}>\n    <div css={[ModalStyles, styles]}>\n      <div className=\"header handle\">\n        <span>{header}</span>\n\n        <CloseButton onClick={onClose} />\n      </div>\n      <div className=\"tab-content\">\n        <FormikForm\n          ref={formRef}\n          onSubmit={saveHandler}\n          initialValues={{ sum: null, molecule: null }}\n          validationSchema={validationSchema}\n        >\n          <Tabs activeTab={setOption} onClick={onTabChangeHandler}>\n            {!general?.hideSetSumFromMolecule &&\n              !panels?.structuresPanel?.hidden && (\n                <Tab tablabel=\"Auto\" tabid={SumSetOptions.Auto}>\n                  <SelectMolecule name=\"molecule\" />\n                </Tab>\n              )}\n\n            <Tab tablabel=\"Manual\" tabid={SumSetOptions.Manual}>\n              <div className=\"manual-container\">\n                <FormikInput\n                  name=\"sum\"\n                  type=\"number\"\n                  placeholder=\"Enter the new value\"\n                  onKeyDown={handleKeyDown}\n                />\n              </div>\n            </Tab>\n          </Tabs>\n        </FormikForm>\n      </div>\n      <div className=\"footer-container\">\n        <button\n          type=\"button\"\n          onClick={() => formRef.current.submitForm()}\n          className=\"btn\"\n        >\n          Set\n        </button>\n      </div>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { memo } from 'react';\nimport { FaCheck } from 'react-icons/fa';\n\nimport ToolTip from './ToolTip/ToolTip';\n\nconst styles = css`\n  background-color: transparent;\n  border: none;\n  height: 100%;\n  svg {\n    fill: green;\n    font-size: 16px;\n  }\n`;\n\ninterface SaveButtonProps {\n  popupTitle?: string;\n  popupPlacement?: string;\n  disabled?: boolean;\n  className?: string;\n  onClick?: () => void;\n}\n\nfunction SaveButton(props: SaveButtonProps) {\n  const {\n    className = '',\n    disabled = false,\n    popupPlacement = 'left',\n    popupTitle = 'Save',\n    onClick,\n  } = props;\n\n  return (\n    <div className={className}>\n      <ToolTip title={popupTitle} popupPlacement={popupPlacement}>\n        <button\n          css={styles}\n          type=\"button\"\n          onClick={onClick}\n          disabled={disabled}\n          className={className}\n        >\n          <FaCheck />\n        </button>\n      </ToolTip>\n    </div>\n  );\n}\n\nexport default memo(SaveButton);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { memo } from 'react';\n\nimport CloseButton from '../../elements/CloseButton';\nimport SaveButton from '../../elements/SaveButton';\n\nconst styles = css`\n  display: flex;\n  flex-direction: row-reverse;\n  border-bottom: 0.55px solid rgb(240, 240, 240);\n\n  button {\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n  }\n  button:disabled {\n    opacity: 0.6;\n  }\n`;\n\ninterface PreferencesHeaderProps {\n  onClose: () => void;\n  onSave: () => void;\n}\n\nfunction PreferencesHeader({ onClose, onSave }: PreferencesHeaderProps) {\n  return (\n    <div css={styles}>\n      <CloseButton onClick={onClose} popupTitle=\"close Preferences\" />\n      <SaveButton onClick={onSave} popupTitle=\"save Preferences\" />\n    </div>\n  );\n}\n\nexport default memo(PreferencesHeader);\n","import {\n  CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\n\nimport Input from './Input';\n\ninterface EditableColumnProps {\n  onSave?: (element: any) => void;\n  onEditStart?: (element: any) => void;\n  type?: 'number' | 'text';\n  editStatus?: boolean;\n  value: string | number;\n  style?: CSSProperties;\n}\n\n// TODO: remove this hacky ref usage.\nfunction EditableColumn(props: EditableColumnProps, ref: any) {\n  const {\n    onSave = () => null,\n    value,\n    type = 'text',\n    style,\n    onEditStart = () => null,\n    editStatus = false,\n  } = props;\n\n  const [enabled, enableEdit] = useState<boolean | undefined>();\n\n  useEffect(() => {\n    enableEdit(editStatus);\n  }, [editStatus]);\n\n  useImperativeHandle(ref, () => ({\n    startEdit: () => {\n      enableEdit(true);\n    },\n    closeEdit: () => {\n      enableEdit(false);\n    },\n  }));\n\n  const mouseClickCallback = useCallback((e: MouseEvent) => {\n    if (!(e.target as HTMLInputElement).classList.contains('editable-column')) {\n      enableEdit(false);\n      window.removeEventListener('mousedown', mouseClickCallback);\n    }\n  }, []);\n\n  const editModeHandler = useCallback(\n    (flag, event = null) => {\n      if (!flag) {\n        // when press Enter or Tab\n        if (['Enter', 'Tab'].includes(event.key)) {\n          onSave(event);\n        }\n        // close edit mode if press Enter, Tab or Escape\n        if (['Enter', 'Tab', 'Escape'].includes(event.key)) {\n          enableEdit(flag);\n          window.removeEventListener('mousedown', mouseClickCallback);\n        }\n      } else {\n        // start edit mode and add mouse listener to handle mouse click outside the input to finish the mode\n        window.addEventListener('mousedown', mouseClickCallback);\n        onEditStart(event);\n        enableEdit(flag);\n      }\n    },\n    [mouseClickCallback, onEditStart, onSave],\n  );\n\n  return (\n    <div\n      style={{ display: 'table', width: '100%', height: '100%', ...style }}\n      onDoubleClick={(event) => editModeHandler(true, event)}\n    >\n      {!enabled && (\n        <span style={{ display: 'table-cell', verticalAlign: 'middle' }}>\n          {value}\n        </span>\n      )}\n      {enabled && (\n        <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\n          <Input\n            enableAutoSelect\n            className=\"editable-column\"\n            value={value}\n            type={type}\n            onKeyDown={(e) => editModeHandler(false, e)}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default forwardRef(EditableColumn);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  useState,\n  useImperativeHandle,\n  useCallback,\n  useRef,\n  useEffect,\n  forwardRef,\n} from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { useGlobal } from '../context/GlobalContext';\n\nconst styles = css`\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.25);\n  padding: 0px;\n  margin: 0px;\n  border-radius: 2px;\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  z-index: 99999;\n  padding: 2px;\n  background-color: white;\n  width: 150px;\n  pointer-events: all;\n\n  button {\n    background-color: transparent;\n    border: none;\n    border-bottom: 0.55px solid #f0f0f0;\n    font-size: 11px;\n    padding: 5px;\n    text-align: left;\n    outline: none;\n  }\n  button:hover {\n    background-color: #fafafa;\n    outline: none;\n  }\n\n  button:active {\n    background-color: #eaeaea;\n    outline: none;\n  }\n\n  button:last-of-type {\n    border: none;\n  }\n`;\n\n// TODO: remove this hacky ref usage.\nfunction ContextMenu({ context }, ref: any) {\n  const [position, setPosition] = useState<{ left: any; top: any }>({\n    left: 0,\n    top: 0,\n  });\n  const { rootRef, elementsWraperRef } = useGlobal();\n  const [data, setData] = useState();\n  const [isVisible, show] = useState<boolean>();\n  const [sourceElement, setSourceElement] = useState(null);\n  const root = useRef<any>();\n\n  useEffect(() => {\n    root.current = document.createElement('div');\n    if (elementsWraperRef) {\n      elementsWraperRef.appendChild(root.current);\n    }\n    return () => {\n      if (root.current && elementsWraperRef) {\n        elementsWraperRef.removeChild(root.current);\n      }\n    };\n  }, [elementsWraperRef]);\n\n  const contextMenuHandler = (event) => {\n    event.preventDefault();\n    setSourceElement(event.target.parentElement);\n    show(true);\n    const clickX = event.clientX;\n    const clickY = event.clientY;\n\n    const screenW = window.innerWidth;\n    const screenH = window.innerHeight;\n    const rootW = 150;\n    const rootH = 0;\n\n    const right = screenW - clickX > rootW;\n    let left: any = !right;\n    let top: any = screenH - clickY > rootH;\n    const bottom = !top;\n    if (right) {\n      left = `${clickX + 5}px`;\n    }\n\n    if (left) {\n      left = `${clickX - rootW - 5}px`;\n    }\n\n    if (top) {\n      top = `${clickY + 5}px`;\n    }\n\n    if (bottom) {\n      top = `${clickY - rootH - 5}px`;\n    }\n\n    setPosition({ left, top });\n  };\n\n  useImperativeHandle(ref, () => ({\n    handleContextMenu: (e, _data) => {\n      setData(_data);\n      contextMenuHandler(e);\n    },\n  }));\n\n  const clickHandler = useCallback(\n    (event, click) => {\n      event.preventDefault();\n      click(data);\n      show(false);\n    },\n    [data],\n  );\n\n  useEffect(() => {\n    const _handleGlobalClick = (event) => {\n      const wasOutside =\n        sourceElement &&\n        event.target.parentElement &&\n        !event.target.parentElement.isSameNode(sourceElement);\n      if (wasOutside && isVisible) show(false);\n    };\n    if (rootRef) {\n      rootRef.addEventListener('click', _handleGlobalClick);\n    }\n    return () => {\n      if (rootRef) {\n        rootRef.removeEventListener('click', _handleGlobalClick);\n      }\n    };\n  }, [isVisible, ref, rootRef, sourceElement]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    root.current &&\n    createPortal(\n      context && (\n        <div ref={ref} css={[styles, position]}>\n          {context.map((c, index) => (\n            <button\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n              type=\"button\"\n              onClick={(e) => clickHandler(e, c.onClick)}\n            >\n              {c.label}\n            </button>\n          ))}\n        </div>\n      ),\n      root.current,\n    )\n  );\n}\n\nexport default forwardRef(ContextMenu);\n","import { memo } from 'react';\n\ninterface ReactTableHeaderProps {\n  headerGroups: any;\n}\n\nfunction ReactTableHeader({ headerGroups }: ReactTableHeaderProps) {\n  return (\n    <thead>\n      {headerGroups.map((headerGroup) => (\n        <tr\n          key={headerGroup.getHeaderGroupProps().key}\n          {...headerGroup.getHeaderGroupProps()}\n        >\n          {headerGroup.headers.map((column) => (\n            <th\n              key={column.getHeaderProps().key}\n              {...column.getHeaderProps(column.getSortByToggleProps())}\n              style={column.style}\n            >\n              {column.render('Header')}\n              <span>\n                {column.isSorted ? (column.isSortedDesc ? ' ▼' : ' ▲') : ''}\n              </span>\n            </th>\n          ))}\n        </tr>\n      ))}\n    </thead>\n  );\n}\n\nexport default memo(ReactTableHeader);\n","/** @jsxImportSource @emotion/react */\n\nimport { useMemo, forwardRef, useEffect } from 'react';\n\nimport { HighlightedSource, useHighlight } from '../../../highlight/index';\nimport { HighlightedRowStyle, ConstantlyHighlightedRowStyle } from '../Style';\n\ninterface ReactTableRowProps {\n  row: any;\n  highlightedSource?: HighlightedSource;\n  onContextMenu: () => void;\n  isVisible: boolean;\n}\n\nfunction getIDs(row: any): string[] {\n  const id = row.original.id;\n  if (id) {\n    if (id instanceof Array) {\n      return id;\n    } else {\n      return [String(id)];\n    }\n  }\n  return [''];\n}\nfunction ReactTableRow(props: ReactTableRowProps, ref) {\n  const {\n    row,\n    highlightedSource = HighlightedSource.UNKNOWN,\n    onContextMenu,\n  } = props;\n  const data = useMemo(\n    () => ({\n      type: highlightedSource,\n      extra: row.original,\n    }),\n    [highlightedSource, row],\n  );\n  const highlight = useHighlight(getIDs(row), data);\n\n  useEffect(() => {\n    return () => {\n      highlight.hide();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return useMemo(() => {\n    return (\n      <tr\n        ref={ref}\n        onContextMenu={onContextMenu}\n        key={row.getRowProps().key}\n        css={\n          highlight.isActive\n            ? HighlightedRowStyle\n            : Object.prototype.hasOwnProperty.call(\n                row.original,\n                'isConstantlyHighlighted',\n              ) && row.original.isConstantlyHighlighted === true\n            ? ConstantlyHighlightedRowStyle\n            : null\n        }\n        {...row.getRowProps()}\n        {...highlight.onHover}\n      >\n        {row.cells.map((cell) => {\n          const { style, padding } = cell.column;\n\n          if (cell.isRowSpanned) {\n            return null;\n          } else {\n            return (\n              <td\n                rowSpan={cell.rowSpan}\n                key={cell.key}\n                {...cell.getCellProps()}\n                onContextMenu={(e) => {\n                  e.preventDefault();\n\n                  return false;\n                }}\n                style={{ padding, ...style }}\n              >\n                {cell.render('Cell')}\n              </td>\n            );\n          }\n        })}\n      </tr>\n    );\n  }, [highlight.isActive, highlight.onHover, onContextMenu, ref, row]);\n}\n\nexport default forwardRef(ReactTableRow);\n","import { createContext, useContext } from 'react';\n\nimport { TableVirtualConfig } from '../ReactTable';\n\nconst reactContext = createContext<TableVirtualConfig | null>(null);\nexport const ReactTableProvider = reactContext.Provider;\n\nexport function useReactTableContext() {\n  const context = useContext(reactContext);\n  if (!context) {\n    throw new Error('react table context was not found ');\n  }\n  return context;\n}\n","export default function useRowSpan(hooks) {\n  hooks.useInstance.push(reducer);\n}\n\nfunction reducer(instance) {\n  const { allColumns } = instance;\n\n  let rowSpanHeaders: any[] = [];\n\n  allColumns.forEach((column) => {\n    const { id, enableRowSpan } = column;\n\n    if (enableRowSpan !== undefined && enableRowSpan !== false) {\n      rowSpanHeaders.push({ id, cellValue: null, cellIndex: 0 });\n    }\n  });\n\n  Object.assign(instance, {\n    rowSpanHeaders,\n  });\n}\n\nexport function prepareRowSpan(rows, index, rowSpanHeaders, groupKey?: string) {\n  const row = rows[index];\n  for (let j = 0; j < row.allCells.length; j++) {\n    const cell = row.allCells[j];\n    const rowSpanHeader = rowSpanHeaders.find((x) => x.id === cell.column.id);\n    if (rowSpanHeader !== undefined) {\n      const cellValue = groupKey\n        ? `${cell.value}-${row.original[groupKey]}`\n        : cell.value;\n\n      if (\n        rowSpanHeader.cellValue === null ||\n        rowSpanHeader.cellValue !== cellValue\n      ) {\n        cell.isRowSpanned = false;\n        rowSpanHeader.cellValue = cellValue;\n        rowSpanHeader.cellIndex = index;\n        cell.rowSpan = 1;\n      } else {\n        rows[rowSpanHeader.cellIndex].allCells[j].rowSpan++;\n        cell.isRowSpanned = true;\n      }\n    }\n  }\n}\n","/** @jsxImportSource @emotion/react */\nimport {\n  useRef,\n  useCallback,\n  memo,\n  forwardRef,\n  useState,\n  Ref,\n  useEffect,\n  UIEvent,\n} from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport { useMeasure } from 'react-use';\n\nimport checkModifierKeyActivated from '../../../data/utilities/checkModifierKeyActivated';\nimport { HighlightedSource } from '../../highlight';\nimport useCombinedRefs from '../../hooks/useCombinedRefs';\nimport ContextMenu from '../ContextMenu';\n\nimport ReactTableHeader from './Elements/ReactTableHeader';\nimport ReactTableRow from './Elements/ReactTableRow';\nimport { ReactTableStyle } from './Style';\nimport {\n  ReactTableProvider,\n  useReactTableContext,\n} from './utility/ReactTableContext';\nimport useRowSpan, { prepareRowSpan } from './utility/useRowSpan';\n\ninterface ReactTableProps {\n  data: any;\n  columns: any;\n  highlightedSource?: HighlightedSource;\n  context?: Array<{ label: string; onClick: () => void }> | null;\n  approxItemHeight?: number;\n  groupKey?: string;\n  enableVirtualScroll?: boolean;\n}\n\ninterface ReactTableInnerProps extends ReactTableProps {\n  onScroll: (event: UIEvent<HTMLDivElement>) => void;\n}\n\nconst styles = {\n  table: (enableVirtualScroll: boolean) => {\n    if (enableVirtualScroll) {\n      return { position: 'sticky', top: 0 };\n    }\n  },\n};\n\nconst ReactTableInner = forwardRef(function ReactTableInner(\n  props: ReactTableInnerProps,\n  ref: Ref<HTMLDivElement>,\n) {\n  const {\n    data,\n    columns,\n    highlightedSource,\n    context = null,\n    onScroll,\n    approxItemHeight = 40,\n    enableVirtualScroll = false,\n    groupKey,\n  } = props;\n\n  const contextRef = useRef<any>(null);\n  const { index: indexBoundary } = useReactTableContext();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    rowSpanHeaders,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy,\n    useRowSpan,\n  );\n  const contextMenuHandler = useCallback(\n    (e, row) => {\n      if (!checkModifierKeyActivated(e)) {\n        e.preventDefault();\n        contextRef.current.handleContextMenu(e, row.original);\n      }\n    },\n    [contextRef],\n  );\n\n  const rowsData = enableVirtualScroll\n    ? rows.slice(indexBoundary.start, indexBoundary.end)\n    : rows;\n\n  return (\n    <div\n      ref={ref}\n      className=\"table-container\"\n      style={{\n        overflowY: 'auto',\n        position: 'relative',\n        height: '100%',\n      }}\n      {...(enableVirtualScroll && { onScroll })}\n    >\n      {enableVirtualScroll && (\n        <div\n          style={{\n            height: approxItemHeight * data.length,\n            position: 'absolute',\n            width: '100%',\n            pointerEvents: 'none',\n          }}\n        />\n      )}\n      <table\n        {...getTableProps()}\n        css={ReactTableStyle}\n        style={styles.table(enableVirtualScroll)}\n      >\n        <ReactTableHeader headerGroups={headerGroups} />\n        <tbody {...getTableBodyProps()}>\n          {rowsData.map((row, index) => {\n            prepareRow(row);\n            prepareRowSpan(\n              rows,\n              enableVirtualScroll ? index + indexBoundary.start : index,\n              rowSpanHeaders,\n              groupKey,\n            );\n\n            return (\n              <ReactTableRow\n                key={row.key}\n                row={row}\n                {...row.getRowProps()}\n                onContextMenu={(e) => contextMenuHandler(e, row)}\n                highlightedSource={highlightedSource}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n      <ContextMenu ref={contextRef} context={context} />\n    </div>\n  );\n});\n\nexport interface TableVirtualConfig {\n  offsetHeight: number;\n  scrollHeight: number;\n  numberOfVisibleRows: number;\n  index: { start: number; end: number };\n}\n\nfunction ReactTable(props: ReactTableProps) {\n  const { data, approxItemHeight = 40, groupKey } = props;\n  const ref = useRef<HTMLDivElement | null>(null);\n  const [mRef, { height }] = useMeasure();\n  const combineRef = useCombinedRefs([mRef, ref]);\n\n  const [tableVirtualConfig, setTableVirtualConfig] =\n    useState<TableVirtualConfig>({\n      offsetHeight: 0,\n      scrollHeight: 0,\n      numberOfVisibleRows: 0,\n      index: { start: 0, end: 0 },\n    });\n\n  useEffect(() => {\n    if (combineRef.current) {\n      const { scrollHeight } = combineRef.current;\n      const numberOfVisibleRows = Math.ceil(height / approxItemHeight);\n      setTableVirtualConfig((prev) => ({\n        ...prev,\n        offsetHeight: height,\n        scrollHeight,\n        numberOfVisibleRows,\n        index: { start: 0, end: numberOfVisibleRows + 1 },\n      }));\n    }\n  }, [approxItemHeight, combineRef, height]);\n\n  const lookForGroupIndex = useCallback(\n    (currentIndex: number, side: 1 | -1) => {\n      const currentItem = data[currentIndex];\n      if (currentItem.index && groupKey) {\n        switch (side) {\n          case -1: {\n            let index = currentIndex - 1;\n            while (index > 0) {\n              if (data[index][groupKey] !== currentItem[groupKey]) {\n                return index + 1;\n              }\n              index--;\n            }\n            return currentIndex;\n          }\n          case 1: {\n            let index = currentIndex + 1;\n            while (index < data.length) {\n              if (data[index][groupKey] !== currentItem[groupKey]) {\n                return index - 1;\n              }\n              index++;\n            }\n            return currentIndex;\n          }\n          default:\n            return currentIndex;\n        }\n      }\n\n      return currentIndex;\n    },\n    [data, groupKey],\n  );\n\n  const findStartIndex = useCallback(\n    (index: number, numberOfVisibleRows: number) => {\n      const newIndex = index - numberOfVisibleRows;\n      const currentIndx = newIndex >= data.length ? newIndex : index;\n      // return currentIndx;\n      // Look for the first index of the group\n      return lookForGroupIndex(currentIndx, -1);\n    },\n    [data.length, lookForGroupIndex],\n  );\n  const findEndIndex = useCallback(\n    (index: number, numberOfVisibleRows: number) => {\n      const newIndex = index + numberOfVisibleRows;\n      const currentIndx = newIndex >= data.length ? data.length - 1 : newIndex;\n      // return currentIndx;\n      // Look for the last index of the group\n      return lookForGroupIndex(currentIndx, 1);\n    },\n    [data.length, lookForGroupIndex],\n  );\n\n  const scrollHandler = useCallback(() => {\n    if (ref.current && tableVirtualConfig) {\n      const { scrollTop } = ref.current;\n      const { numberOfVisibleRows, index } = tableVirtualConfig;\n      const currentIndx = Math.ceil(scrollTop / approxItemHeight);\n      const start = findStartIndex(currentIndx, numberOfVisibleRows);\n\n      if (currentIndx !== index.start) {\n        const end = findEndIndex(currentIndx, numberOfVisibleRows);\n        setTableVirtualConfig({\n          ...tableVirtualConfig,\n          index: { start, end: end + 1 },\n        });\n      }\n    }\n  }, [approxItemHeight, findEndIndex, findStartIndex, tableVirtualConfig]);\n\n  return (\n    <ReactTableProvider value={tableVirtualConfig}>\n      <ReactTableInner\n        onScroll={scrollHandler}\n        ref={combineRef}\n        {...{ ...props }}\n      />\n    </ReactTableProvider>\n  );\n}\n\nexport default memo(ReactTable);\n","import { CSSProperties } from 'react';\n\nexport interface CustomColumn {\n  index: number;\n  id?: string;\n  Header?: (() => JSX.Element) | string;\n  sortType?: string;\n  Cell?: (rowData: { row: { original: any; index: number } }) => any;\n  accessor?: ((row?: any, index?: number) => any) | string;\n  enableRowSpan?: boolean;\n  style?: CSSProperties;\n  extraParams?: any;\n}\n\nexport default function addCustomColumn(array, options: CustomColumn) {\n  const {\n    index,\n    Header = () => null,\n    extraParams,\n    accessor = null,\n    Cell = null,\n    sortType = 'basic',\n    enableRowSpan = false,\n    style = {},\n    id,\n  } = options || {};\n\n  array.push({\n    index,\n    ...{ ...(id && { id }) },\n    ...{ ...(accessor ? { accessor } : {}) },\n    ...{ ...(Cell ? { Cell } : {}) },\n    Header,\n    sortType,\n    enableRowSpan,\n    style,\n    ...extraParams,\n  });\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { CSSProperties, ForwardedRef, forwardRef, useCallback } from 'react';\n\nconst arrowDownIcon = `url('data:image/svg+xml;utf8,<svg  xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"960px\" height=\"560px\" viewBox=\"0 0 960 560\" enable-background=\"new 0 0 960 560\" xml:space=\"preserve\"><g id=\"Rounded_Rectangle_33_copy_4_1_\"><path d=\"M480,344.181L268.869,131.889c-15.756-15.859-41.3-15.859-57.054,0c-15.754,15.857-15.754,41.57,0,57.431l237.632,238.937c8.395,8.451,19.562,12.254,30.553,11.698c10.993,0.556,22.159-3.247,30.555-11.698l237.631-238.937c15.756-15.86,15.756-41.571,0-57.431s-41.299-15.859-57.051,0L480,344.181z\"/></g></svg>')`;\n\nexport interface SelectEntry {\n  key: string | number;\n  value: string | number;\n  label: string | number;\n}\n\nexport interface SelectProps {\n  onChange?: (element: string) => void;\n  data: Array<SelectEntry>;\n  style?: CSSProperties;\n  defaultValue?: string | number;\n  name?: string;\n  className?: string;\n}\n\nconst Select = forwardRef(function Select(\n  props: SelectProps,\n  ref: ForwardedRef<HTMLSelectElement>,\n) {\n  const {\n    data,\n    style = { width: 100 },\n    onChange = () => null,\n    defaultValue,\n    name = '',\n    className = '',\n  } = props;\n\n  const handleOnChanged = useCallback(\n    (e) => {\n      let value = e.target.value;\n      if (!isNaN(value)) {\n        value = Number(value);\n      }\n      onChange(value);\n    },\n    [onChange],\n  );\n\n  const styles = css`\n    padding: 0px 5px;\n    border: 0.55px solid #cacaca;\n    font-size: 14px;\n    width: ${style.width ? Number(style.width) - 5 : 115}px;\n    margin: 0;\n    height: 100%;\n    background: ${arrowDownIcon} no-repeat right white;\n    -webkit-appearance: none;\n    background-position-x: calc(100% - 5px);\n    background-size: 15px 15px;\n    border-radius: 5px;\n    margin: 0px 5px;\n    align-self: center;\n    :focus,\n    input:focus {\n      outline: none;\n    }\n  `;\n\n  return (\n    <select\n      ref={ref}\n      css={styles}\n      name={name}\n      onChange={handleOnChanged}\n      defaultValue={defaultValue}\n      className={className}\n      style={style}\n    >\n      {data.map((d) => (\n        <option key={`${d.key}`} value={d.value}>\n          {d.label}\n        </option>\n      ))}\n    </select>\n  );\n});\n\nexport default Select;\n","import { CSSProperties } from 'react';\n\nconst styles: Record<'label' | 'container', CSSProperties> = {\n  container: {\n    height: '100%',\n    backgroundColor: 'white',\n  },\n  label: {\n    textAlign: 'center',\n    width: '100%',\n    fontSize: '11px',\n    padding: '5px',\n    color: 'gray',\n  },\n};\n\n// placeholder for empty tables if no data is available to show (e.g. peaks, integrals, ranges)\nfunction NoTableData() {\n  return (\n    <div style={styles.container}>\n      <p style={styles.label}>No Data</p>\n    </div>\n  );\n}\n\nexport default NoTableData;\n","import lodashGet from 'lodash/get';\nimport { useCallback, useMemo, memo } from 'react';\nimport { FaRegTrashAlt } from 'react-icons/fa';\n\nimport { SignalKinds } from '../../../data/constants/SignalsKinds';\nimport { checkIntegralKind } from '../../../data/data1d/Spectrum1D';\nimport { Integral } from '../../../data/types/data1d';\nimport { useDispatch } from '../../context/DispatchContext';\nimport EditableColumn from '../../elements/EditableColumn';\nimport ReactTable from '../../elements/ReactTable/ReactTable';\nimport addCustomColumn, {\n  CustomColumn,\n} from '../../elements/ReactTable/utility/addCustomColumn';\nimport Select from '../../elements/Select';\nimport {\n  DELETE_INTEGRAL,\n  CHANGE_INTEGRAL_DATA,\n  CHANGE_INTEGRAL_RELATIVE,\n} from '../../reducer/types/Types';\nimport formatNumber from '../../utility/FormatNumber';\nimport { getValue } from '../../utility/LocalStorage';\nimport NoTableData from '../extra/placeholder/NoTableData';\nimport { integralDefaultValues } from '../extra/preferences/defaultValues';\n\nimport { IntegralPanelInnerProps } from './IntegralPanel';\n\nconst selectStyle = { marginLeft: 10, marginRight: 10, border: 'none' };\n\ninterface IntegralTableProps\n  extends Pick<IntegralPanelInnerProps, 'activeTab' | 'preferences'> {\n  data: Array<Integral>;\n}\n\nfunction IntegralTable({ activeTab, data, preferences }: IntegralTableProps) {\n  const dispatch = useDispatch();\n  const deleteIntegralHandler = useCallback(\n    (e, row) => {\n      e.preventDefault();\n      e.stopPropagation();\n      const params = row.original;\n      dispatch({\n        type: DELETE_INTEGRAL,\n        integralID: params.id,\n      });\n    },\n    [dispatch],\n  );\n  const changeIntegralDataHandler = useCallback(\n    (value, row) => {\n      const data = { ...row.original, kind: value };\n      dispatch({\n        type: CHANGE_INTEGRAL_DATA,\n        payload: { data },\n      });\n    },\n    [dispatch],\n  );\n  const initialColumns: CustomColumn[] = useMemo(\n    () => [\n      {\n        index: 1,\n        Header: '#',\n        Cell: ({ row }) => row.index + 1,\n        width: 10,\n      },\n\n      {\n        index: 2,\n        Header: 'From',\n        sortType: 'basic',\n        resizable: true,\n        accessor: (row) => row.from.toFixed(2),\n      },\n      {\n        index: 3,\n        Header: 'To',\n        sortType: 'basic',\n        resizable: true,\n        accessor: (row) => row.to.toFixed(2),\n      },\n      {\n        index: 6,\n        Header: 'Kind',\n        sortType: 'basic',\n        resizable: true,\n        accessor: (row) => row.kind,\n        Cell: ({ row }) => (\n          <Select\n            onChange={(value) => changeIntegralDataHandler(value, row)}\n            data={SignalKinds}\n            style={selectStyle}\n            defaultValue={row.original.kind}\n          />\n        ),\n      },\n      {\n        index: 7,\n        style: { width: '1%', maxWidth: '24px', minWidth: '24px' },\n        id: 'delete-button',\n        Cell: ({ row }) => (\n          <button\n            type=\"button\"\n            className=\"delete-button\"\n            onClick={(e) => deleteIntegralHandler(e, row)}\n          >\n            <FaRegTrashAlt />\n          </button>\n        ),\n      },\n    ],\n    [changeIntegralDataHandler, deleteIntegralHandler],\n  );\n\n  const saveRelativeHandler = useCallback(\n    (event, row) => {\n      const data = { value: event.target.value, id: row.id };\n      dispatch({\n        type: CHANGE_INTEGRAL_RELATIVE,\n        payload: { data },\n      });\n    },\n    [dispatch],\n  );\n\n  const integralsPreferences = useMemo(\n    () =>\n      getValue(\n        preferences.current,\n        `formatting.panels.integrals.[${activeTab}]`,\n        integralDefaultValues,\n      ),\n    [activeTab, preferences],\n  );\n\n  const COLUMNS: (CustomColumn & { showWhen: string })[] = useMemo(\n    () => [\n      {\n        showWhen: 'showAbsolute',\n        index: 4,\n        Header: 'Absolute',\n        accessor: (row) =>\n          formatNumber(\n            row.absolute,\n            lodashGet(\n              integralsPreferences,\n              'absoluteFormat',\n              integralDefaultValues.absoluteFormat,\n            ),\n          ),\n      },\n      {\n        showWhen: 'showRelative',\n        index: 5,\n        id: 'relative',\n        Header: () => {\n          const n = activeTab?.replace(/[0-9]/g, '');\n          return <span>{`Relative ${n}`}</span>;\n        },\n        accessor: (row) => {\n          return formatNumber(\n            row.integral,\n            lodashGet(\n              integralsPreferences,\n              'relativeFormat',\n              integralDefaultValues.relativeFormat,\n            ),\n          );\n        },\n        Cell: ({ row }) => {\n          const value = formatNumber(\n            row.original.integral,\n            lodashGet(\n              integralsPreferences,\n              'relativeFormat',\n              integralDefaultValues.relativeFormat,\n            ),\n          );\n          const flag = checkIntegralKind(row.original);\n          const integral = flag ? value : `[ ${value} ]`;\n\n          return (\n            <EditableColumn\n              value={integral}\n              onSave={(event) => saveRelativeHandler(event, row.original)}\n              type=\"number\"\n            />\n          );\n        },\n      },\n    ],\n    [activeTab, integralsPreferences, saveRelativeHandler],\n  );\n\n  const tableColumns = useMemo(() => {\n    let columns = [...initialColumns];\n    for (const col of COLUMNS) {\n      const { showWhen, ...colParams } = col;\n      if (integralsPreferences[showWhen]) {\n        addCustomColumn(columns, colParams);\n      }\n    }\n\n    return columns.sort((object1, object2) => object1.index - object2.index);\n  }, [COLUMNS, initialColumns, integralsPreferences]);\n\n  return data && data.length > 0 ? (\n    <ReactTable data={data} columns={tableColumns} />\n  ) : (\n    <NoTableData />\n  );\n}\n\nexport default memo(IntegralTable);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, memo, useState, useEffect } from 'react';\nimport { ChromePicker } from 'react-color';\n\nconst style = css`\n  display: flex;\n  margin: 5px 0px;\n\n.inputLabel{\n  flex: 2;\n  font-size: 11px;\n  font-weight: bold;\n  color: #232323;\n}\n\n.input {\n  width: '60%',\n  text-align: 'center',\n}\n\n.color{\n  width: 36px;\n  height: 14px;\n  border-radius: 2px;\n}\n\n.swatch{\n  padding: 5px;\n  background: #fff;\n  border-radius: 1px;\n  box-shadow: 0 0 0 1px rgba(0,0,0,.1);\n  display: inline-block;\n  cursor: pointer;\n}\n.color-popover {\n  position: absolute;\n  z-index: 2;\n}\n\n.cover {\n  position: fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n}\n  .chrome-picker {\n    border-radius: none !important;\n    width: 200px !important;\n    height: 60px !important;\n    display: flex;\n\n\n  }\n  .chrome-picker > div:first-of-type {\n    padding: 0px !important;\n\n  }\n  .chrome-picker > div:last-child >  div:first-of-type {\n    width: 120px;\n\n  }\n  .chrome-picker > div:last-child >  div:last-child {\n    display:none !important;\n  }\n`;\n\nexport interface ColorInputProps {\n  value?: string;\n  label?: string;\n  name: string;\n  onColorChange?: (element: any) => void;\n}\n\nfunction ColorInput(props: ColorInputProps) {\n  const {\n    label = 'Color: ',\n    onColorChange = () => null,\n    name,\n    value = '#000000',\n  } = props;\n\n  const [displayColorPicker, showColorPicker] = useState(false);\n  const [selectedColor, setColor] = useState(value);\n\n  useEffect(() => {\n    setColor(value);\n  }, [value]);\n\n  const handleClick = useCallback(() => {\n    showColorPicker(!displayColorPicker);\n  }, [displayColorPicker]);\n\n  const handleClose = useCallback(() => {\n    showColorPicker(false);\n  }, []);\n\n  const handleOnColorChanged = useCallback(\n    (colorEvent) => {\n      const hex = `${colorEvent.hex}${Math.round(\n        colorEvent.rgb.a * 255,\n      ).toString(16)}`;\n      setColor(hex);\n      onColorChange({ ...colorEvent, hex, name });\n    },\n    [name, onColorChange],\n  );\n  return (\n    <div css={style}>\n      <span className=\"inputLabel\">{label}</span>\n      <div style={{ flex: 4 }}>\n        <div className=\"swatch\" onClick={handleClick}>\n          <div className=\"color\" style={{ backgroundColor: selectedColor }} />\n          <input type=\"hidden\" value={selectedColor} name={name} />\n        </div>\n        {displayColorPicker ? (\n          <div className=\"color-popover\">\n            <div className=\"cover\" onClick={handleClose} />\n            <ChromePicker\n              color={{ hex: selectedColor }}\n              onChangeComplete={handleOnColorChanged}\n            />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(ColorInput);\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, memo } from 'react';\n\nimport ColorInput, { ColorInputProps } from '../ColorInput';\n\ninterface FormikColorPickerProps extends ColorInputProps {\n  name: string;\n}\n\nfunction FormikColorPicker(props: FormikColorPickerProps) {\n  const { onColorChange = () => null, name, ...colorPickerProps } = props;\n\n  const { values, setFieldValue } = useFormikContext();\n\n  const colorChangeHandler = useCallback(\n    (color) => {\n      onColorChange(color);\n      setFieldValue(name, color.hex);\n    },\n    [name, onColorChange, setFieldValue],\n  );\n\n  return (\n    <ColorInput\n      {...colorPickerProps}\n      name={name}\n      onColorChange={colorChangeHandler}\n      value={lodashGet(values, name)}\n    />\n  );\n}\n\nexport default memo(FormikColorPicker);\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { CSSProperties, memo, useCallback } from 'react';\n\nimport Input from '../Input';\n\nconst styles: Record<'row' | 'inputLabel' | 'input', CSSProperties> = {\n  row: {\n    display: 'flex',\n    margin: '5px 0px',\n    alignItems: 'center',\n  },\n  inputLabel: {\n    flex: 2,\n    fontSize: '11px',\n    fontWeight: 'bold',\n    color: '#232323',\n  },\n  input: {\n    width: '60%',\n    textAlign: 'center',\n  },\n};\n\ninterface FormikColumnFormatFieldProps {\n  label: string;\n  checkControllerName: string;\n  formatControllerName?: string;\n  disableFormat?: boolean;\n  hideFormat?: boolean;\n}\n\nfunction FormikColumnFormatField(props: FormikColumnFormatFieldProps) {\n  const {\n    label,\n    checkControllerName,\n    formatControllerName,\n    disableFormat = false,\n    hideFormat = false,\n  } = props;\n\n  const { values, handleChange, setFieldValue } = useFormikContext();\n\n  const changeHandler = useCallback(\n    (e) => {\n      handleChange(e);\n    },\n    [handleChange],\n  );\n\n  const checkChangeHandler = useCallback(\n    (e) => {\n      setFieldValue(e.target.name, e.target.checked);\n    },\n    [setFieldValue],\n  );\n\n  return (\n    <div style={styles.row}>\n      <span style={styles.inputLabel}>{label}</span>\n      <div\n        style={{\n          flex: 4,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n        }}\n      >\n        <input\n          type=\"checkbox\"\n          style={{ margin: '0px 5px' }}\n          name={checkControllerName}\n          onChange={checkChangeHandler}\n          checked={lodashGet(values, checkControllerName, false)}\n        />\n        {!hideFormat && formatControllerName && (\n          <Input\n            style={{ inputWrapper: styles.input }}\n            name={formatControllerName}\n            value={lodashGet(values, formatControllerName, '')}\n            onChange={changeHandler}\n            type=\"text\"\n            disabled={disableFormat}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(FormikColumnFormatField);\n","import {\n  CSSProperties,\n  ForwardedRef,\n  forwardRef,\n  useCallback,\n  useRef,\n} from 'react';\n\nconst styles: Record<\n  'container' | 'label' | 'inputContainer' | 'input',\n  CSSProperties\n> = {\n  container: {\n    display: 'flex',\n  },\n  label: {\n    lineHeight: 2,\n    userSelect: 'none',\n    flex: '2',\n  },\n  inputContainer: {\n    flex: '4',\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  input: {\n    height: '100%',\n    width: '100px',\n    borderRadius: '5px',\n    border: '0.55px solid #c7c7c7',\n    margin: '0px 5px 0px 5px',\n    textAlign: 'center',\n  },\n};\n\nexport interface NumberInputProps {\n  pattern?: string;\n  label?: string;\n  name?: string;\n  step?: any;\n  min?: any;\n  max?: any;\n  defaultValue?: number;\n  style?: {\n    container?: any;\n    label?: any;\n    inputContainer?: any;\n    input?: any;\n  };\n  onChange?: (element: any) => void;\n  onInput?: () => void;\n}\n\nconst NumberInput = forwardRef(\n  (\n    {\n      label,\n      name,\n      defaultValue = 0,\n      style = { label: {}, input: {}, container: {}, inputContainer: {} },\n      onChange = () => null,\n      onInput = () => null,\n      pattern = '^d*(.d{0,2})?$',\n      step = 'any',\n      min = 'any',\n      max = 'any',\n    }: NumberInputProps,\n    ref: ForwardedRef<HTMLInputElement>,\n  ) => {\n    const localRef = useRef<HTMLInputElement>(null);\n    const changeHander = useCallback(\n      (e) => {\n        if (e.target.checkValidity()) {\n          const value = Number(\n            e.target.value === '' ? defaultValue : e.target.value,\n          );\n          onChange({\n            ...e,\n            target: { ...e.target, name: e.target.name, value },\n          });\n        } else {\n          const _ref: any = ref ? ref : localRef;\n          _ref.current.value = Number(defaultValue);\n        }\n      },\n      [defaultValue, onChange, ref],\n    );\n    return (\n      <div style={{ ...styles.container, ...style.container }}>\n        <span style={{ ...styles.label, ...style.label }}>{label}</span>\n        <div style={{ ...styles.inputContainer, ...style.inputContainer }}>\n          <input\n            ref={ref ? ref : localRef}\n            name={name}\n            style={{ ...styles.input, ...style.input }}\n            type=\"number\"\n            pattern={pattern}\n            defaultValue={defaultValue}\n            step={step}\n            onChange={changeHander}\n            onInput={onInput}\n            min={min}\n            max={max}\n            key={defaultValue}\n          />\n        </div>\n      </div>\n    );\n  },\n);\n\nexport default NumberInput;\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback } from 'react';\n\nimport NumberInput, { NumberInputProps } from '../NumberInput';\n\ninterface FormikNumberInputProps extends NumberInputProps {\n  label: string;\n  name: string;\n}\n\nfunction FormikNumberInput(props: FormikNumberInputProps) {\n  const { label, name, ...resProps } = props;\n  const { values, handleChange } = useFormikContext();\n\n  const changeHandler = useCallback(\n    (e) => {\n      handleChange(e);\n    },\n    [handleChange],\n  );\n\n  return (\n    <NumberInput\n      label={label}\n      name={name}\n      defaultValue={lodashGet(values, name)}\n      onChange={changeHandler}\n      {...resProps}\n    />\n  );\n}\n\nexport default FormikNumberInput;\n","import { useMemo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nexport default function useNucleus() {\n  const { tabActiveSpectrum } = useChartData();\n  return useMemo<Array<string>>(() => {\n    if (tabActiveSpectrum && Object.keys(tabActiveSpectrum).length > 0) {\n      return Object.keys(tabActiveSpectrum);\n    }\n    return [];\n  }, [tabActiveSpectrum]);\n}\n","import {\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  CSSProperties,\n  memo,\n  forwardRef,\n} from 'react';\nimport { MF } from 'react-mf';\n\nimport { usePreferences } from '../../context/PreferencesContext';\nimport FormikColorInput from '../../elements/formik/FormikColorInput';\nimport FormikColumnFormatField from '../../elements/formik/FormikColumnFormatField';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikNumberInput from '../../elements/formik/FormikNumberInput';\nimport { useAlert } from '../../elements/popup/Alert';\nimport useNucleus from '../../hooks/useNucleus';\nimport { getValue as getValueByKeyPath } from '../../utility/LocalStorage';\nimport { integralDefaultValues } from '../extra/preferences/defaultValues';\n\nconst styles: Record<\n  | 'container'\n  | 'groupContainer'\n  | 'row'\n  | 'header'\n  | 'inputLabel'\n  | 'input'\n  | 'inputLabel',\n  CSSProperties\n> = {\n  container: {\n    padding: 10,\n    backgroundColor: '#f1f1f1',\n    height: '100%',\n    overflowY: 'auto',\n  },\n  groupContainer: {\n    padding: '5px',\n    borderRadius: '5px',\n    margin: '10px 0px',\n    backgroundColor: 'white',\n  },\n  row: {\n    display: 'flex',\n    margin: '5px 0px',\n  },\n  header: {\n    borderBottom: '1px solid #e8e8e8',\n    paddingBottom: '5px',\n    fontWeight: 'bold',\n    color: '#4a4a4a',\n  },\n  inputLabel: {\n    flex: 2,\n    fontSize: '11px',\n    fontWeight: 'bold',\n    color: '#232323',\n  },\n  input: {\n    width: '30%',\n    textAlign: 'center',\n  },\n};\n\nconst formatFields = [\n  {\n    id: 1,\n    label: 'Absolute :',\n    checkController: 'showAbsolute',\n    formatController: 'absoluteFormat',\n  },\n  {\n    id: 2,\n    label: 'Relative :',\n    checkController: 'showRelative',\n    formatController: 'relativeFormat',\n  },\n];\n\ninterface IntegralsPreferencesInnerProps {\n  nucleus: Array<string>;\n  preferences: any;\n  innerRef: any;\n}\n\nfunction IntegralsPreferencesInner({\n  nucleus,\n  preferences,\n  innerRef,\n}: IntegralsPreferencesInnerProps) {\n  const alert = useAlert();\n\n  const formRef = useRef<any>();\n\n  const updateValues = useCallback(() => {\n    if (nucleus) {\n      const { color, strokeWidth, ...restProps } = integralDefaultValues;\n\n      const integralPreferences = getValueByKeyPath(\n        preferences.current,\n        `formatting.panels.integrals`,\n      );\n\n      let defaultValues = nucleus.reduce((acc, nucleusLabel) => {\n        acc[nucleusLabel] = restProps;\n        return acc;\n      }, {});\n      defaultValues = Object.assign(defaultValues, { color, strokeWidth });\n\n      formRef.current.setValues(\n        integralPreferences ? integralPreferences : defaultValues,\n      );\n    }\n  }, [nucleus, preferences]);\n\n  useEffect(() => {\n    updateValues();\n  }, [updateValues]);\n\n  const saveHandler = useCallback(\n    (values) => {\n      preferences.dispatch({\n        type: 'SET_PANELS_PREFERENCES',\n        payload: { key: 'integrals', value: values },\n      });\n      alert.success('Integrals preferences saved successfully');\n    },\n    [alert, preferences],\n  );\n\n  useImperativeHandle(innerRef, () => ({\n    saveSetting: () => {\n      formRef.current.submitForm();\n    },\n  }));\n\n  return (\n    <div style={styles.container}>\n      <FormikForm onSubmit={saveHandler} ref={formRef}>\n        <div style={styles.groupContainer}>\n          <p style={styles.header}>General</p>\n          <FormikColorInput name=\"color\" />\n          <FormikNumberInput\n            name=\"strokeWidth\"\n            label=\"stroke width :\"\n            style={{\n              label: { fontSize: '11px', fontWeight: 'bold', color: '#232323' },\n              input: {\n                width: '60%',\n                textAlign: 'center',\n                borderRadius: '5px',\n              },\n            }}\n            min={1}\n            max={9}\n            pattern=\"[1-9]+\"\n          />\n        </div>\n\n        {nucleus?.map((nucleusLabel) => (\n          <div key={nucleusLabel} style={styles.groupContainer}>\n            <p style={styles.header}>\n              <MF mf={nucleusLabel} />\n            </p>\n            {formatFields.map((field) => (\n              <FormikColumnFormatField\n                key={field.id}\n                label={field.label}\n                checkControllerName={`${nucleusLabel}.${field.checkController}`}\n                formatControllerName={`${nucleusLabel}.${field.formatController}`}\n              />\n            ))}\n          </div>\n        ))}\n      </FormikForm>\n    </div>\n  );\n}\n\nconst MemoizedIntegralsPreferences = memo(IntegralsPreferencesInner);\n\n// TODO: remove this hacky use of ref.\nfunction IntegralsPreferences(props, ref) {\n  const preferences = usePreferences();\n  const nucleus = useNucleus();\n\n  return (\n    <MemoizedIntegralsPreferences\n      innerRef={ref}\n      {...{\n        nucleus,\n        preferences,\n      }}\n    />\n  );\n}\n\nexport default forwardRef(IntegralsPreferences);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { SvgNmrSum } from 'cheminfo-font';\nimport lodashGet from 'lodash/get';\nimport { useCallback, useMemo, useState, useRef, memo, Fragment } from 'react';\nimport { ImLink } from 'react-icons/im';\n\nimport { Datum1D, Info1D, Integrals } from '../../../data/types/data1d';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { usePreferences } from '../../context/PreferencesContext';\nimport ToggleButton from '../../elements/ToggleButton';\nimport ToolTip from '../../elements/ToolTip/ToolTip';\nimport { useModal } from '../../elements/popup/Modal';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport ChangeSumModal from '../../modal/changeSum/ChangeSumModal';\nimport {\n  DELETE_INTEGRAL,\n  CHANGE_INTEGRAL_SUM,\n  CHANGE_INTEGRALS_SUM_FLAG,\n} from '../../reducer/types/Types';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\nimport PreferencesHeader from '../header/PreferencesHeader';\n\nimport IntegralTable from './IntegralTable';\nimport IntegralsPreferences from './IntegralsPreferences';\n\nconst style = css`\n  .sum-button {\n    width: 22px;\n    height: 22px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .fix-integral-toggle-btn {\n    svg {\n      font-size: 12px !important;\n    }\n  }\n`;\n\nexport interface IntegralPanelInnerProps {\n  integrals: Integrals;\n  info: Info1D;\n  activeTab: string;\n  xDomain: Array<number>;\n  preferences: any;\n}\n\nfunction IntegralPanelInner({\n  integrals,\n  info,\n  activeTab,\n  xDomain,\n  preferences,\n}: IntegralPanelInnerProps) {\n  const [filterIsActive, setFilterIsActive] = useState(false);\n\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const [isFlipped, setFlipStatus] = useState(false);\n  const settingRef = useRef<any>();\n\n  const yesHandler = useCallback(() => {\n    dispatch({ type: DELETE_INTEGRAL, integralID: null });\n  }, [dispatch]);\n\n  const handleDeleteAll = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All records will be deleted, Are You sure?',\n      buttons: [{ text: 'Yes', handler: yesHandler }, { text: 'No' }],\n    });\n  }, [modal, yesHandler]);\n\n  const changeIntegralSumHandler = useCallback(\n    (value) => {\n      dispatch({ type: CHANGE_INTEGRAL_SUM, value });\n      modal.close();\n    },\n    [dispatch, modal],\n  );\n\n  const currentSum = useMemo(() => {\n    return lodashGet(integrals, 'options.sum', null);\n  }, [integrals]);\n\n  const showChangeIntegralSumModal = useCallback(() => {\n    modal.show(\n      <ChangeSumModal\n        onClose={() => modal.close()}\n        onSave={changeIntegralSumHandler}\n        header={\n          currentSum\n            ? `Set new Integrals Sum (Current: ${Number(currentSum).toFixed(\n                2,\n              )})`\n            : 'Set new Integrals Sum'\n        }\n        sumOptions={integrals?.options}\n      />,\n    );\n  }, [changeIntegralSumHandler, currentSum, integrals?.options, modal]);\n\n  const settingsPanelHandler = useCallback(() => {\n    setFlipStatus(!isFlipped);\n  }, [isFlipped]);\n\n  const saveSettingHandler = useCallback(() => {\n    settingRef.current.saveSetting();\n    setFlipStatus(false);\n  }, []);\n\n  const handleOnFilter = useCallback(() => {\n    setFilterIsActive(!filterIsActive);\n  }, [filterIsActive]);\n\n  const toggleConstantSumHandler = useCallback(\n    (flag) => {\n      dispatch({ type: CHANGE_INTEGRALS_SUM_FLAG, payload: flag });\n    },\n    [dispatch],\n  );\n\n  const filteredData = useMemo(() => {\n    function isInRange(from, to) {\n      const factor = 10000;\n      to = to * factor;\n      from = from * factor;\n      return (\n        (to >= xDomain[0] * factor && from <= xDomain[1] * factor) ||\n        (from <= xDomain[0] * factor && to >= xDomain[1] * factor)\n      );\n    }\n    if (info.dimension === 1 && integrals?.values) {\n      const _integrals = filterIsActive\n        ? integrals.values.filter((integral) =>\n            isInRange(integral.from, integral.to),\n          )\n        : integrals.values;\n\n      return _integrals.map((integral) => {\n        return {\n          ...integral,\n          isConstantlyHighlighted: isInRange(integral.from, integral.to),\n        };\n      });\n    }\n    return [];\n  }, [filterIsActive, info.dimension, integrals, xDomain]);\n\n  return (\n    <Fragment>\n      <div\n        css={[\n          tablePanelStyle,\n          style,\n          isFlipped &&\n            css`\n              th {\n                position: relative;\n              }\n            `,\n        ]}\n      >\n        {!isFlipped && (\n          <DefaultPanelHeader\n            counter={integrals?.values?.length}\n            onDelete={handleDeleteAll}\n            deleteToolTip=\"Delete All Integrals\"\n            onFilter={handleOnFilter}\n            filterToolTip={\n              filterIsActive\n                ? 'Show all integrals'\n                : 'Hide integrals out of view'\n            }\n            filterIsActive={filterIsActive}\n            counterFiltered={filteredData.length}\n            showSettingButton\n            onSettingClick={settingsPanelHandler}\n          >\n            <ToolTip\n              title={\n                currentSum\n                  ? `Change Integrals Sum (${Number(currentSum).toFixed(2)})`\n                  : 'Change Integrals Sum'\n              }\n              popupPlacement=\"right\"\n            >\n              <button\n                className=\"sum-button\"\n                type=\"button\"\n                onClick={showChangeIntegralSumModal}\n              >\n                <SvgNmrSum />\n              </button>\n            </ToolTip>\n            <ToggleButton\n              className=\"fix-integral-toggle-btn\"\n              popupTitle=\"fix integral values\"\n              popupPlacement=\"right\"\n              onClick={toggleConstantSumHandler}\n            >\n              <ImLink />\n            </ToggleButton>\n          </DefaultPanelHeader>\n        )}\n        {isFlipped && (\n          <PreferencesHeader\n            onSave={saveSettingHandler}\n            onClose={settingsPanelHandler}\n          />\n        )}\n        <div className=\"inner-container\">\n          {!isFlipped ? (\n            <IntegralTable\n              data={filteredData}\n              activeTab={activeTab}\n              preferences={preferences}\n            />\n          ) : (\n            <IntegralsPreferences ref={settingRef} />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nconst MemoizedIntegralPanel = memo(IntegralPanelInner);\n\nconst emptyData = { integrals: {}, info: {} };\n\nexport default function IntegralPanel() {\n  const { xDomain, activeTab } = useChartData();\n\n  const preferences = usePreferences();\n\n  const { integrals, info } = useSpectrum(emptyData) as Datum1D;\n\n  return (\n    <MemoizedIntegralPanel\n      {...{\n        integrals,\n        info,\n        preferences: preferences.current,\n        xDomain,\n        activeTab,\n      }}\n    />\n  );\n}\n","import React, { CSSProperties, ReactNode } from 'react';\n\ninterface LabelProps {\n  title: string;\n  children: ReactNode;\n  className?: string;\n  style?: {\n    label?: CSSProperties;\n    wrapper?: CSSProperties;\n  };\n}\n\nexport default function Label(props: LabelProps) {\n  const { title, className = '', children, style } = props;\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <span\n        className={className}\n        style={{\n          fontSize: '11px',\n          fontWeight: 'bold',\n          color: '#232323',\n          paddingRight: '10px',\n          width: 'max-content',\n          ...style?.label,\n        }}\n      >\n        {title}\n      </span>\n      <div style={style?.wrapper}>{children}</div>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\nimport CloseButton from '../elements/CloseButton';\nimport Label from '../elements/Label';\nimport FormikForm from '../elements/formik/FormikForm';\nimport FormikInput from '../elements/formik/FormikInput';\nimport Events from '../utility/Events';\nimport { exportAsMatrix } from '../utility/Export';\n\nimport { ModalStyles } from './ModalStyle';\n\nconst INITIAL_VALUE = { from: -1, to: 1, nbPoints: 1024 };\n\ninterface ExportAsMatrixModalProps {\n  onClose?: (element?: string) => void;\n}\n\nfunction ExportAsMatrixModal({\n  onClose = () => null,\n}: ExportAsMatrixModalProps) {\n  const refForm = useRef<any>();\n  const { data } = useChartData();\n\n  const handleSave = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n\n  const submitHandler = useCallback(\n    (options) => {\n      exportAsMatrix(data, options, 'fileName');\n      onClose();\n    },\n    [data, onClose],\n  );\n\n  useEffect(() => {\n    function handler(event: any) {\n      const [from, to] = event.range;\n      refForm.current.setValues({ ...refForm.current.values, from, to });\n    }\n\n    Events.on('brushEnd', handler);\n\n    return () => {\n      Events.off('brushEnd', handler);\n    };\n  }, []);\n\n  return (\n    <div css={ModalStyles}>\n      <div className=\"header handle\">\n        <span>Export spectra as a Matrix</span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"inner-content\">\n        <FormikForm\n          ref={refForm}\n          initialValues={INITIAL_VALUE}\n          onSubmit={submitHandler}\n        >\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Range :</span>\n            <Label title=\"From : \">\n              <FormikInput name=\"from\" type=\"number\" />\n            </Label>\n            <Label title=\"To : \">\n              <FormikInput name=\"to\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\"row margin-10\">\n            <Label title=\"Number of Points :\" className=\"custom-label\">\n              <FormikInput name=\"nbPoints\" type=\"number\" />\n            </Label>\n          </div>\n        </FormikForm>\n      </div>\n      <div className=\"footer-container\">\n        <button type=\"button\" onClick={handleSave} className=\"btn\">\n          Export Now\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ExportAsMatrixModal;\n","import { FormikHelpers, FormikProps } from 'formik';\nimport { ForwardedRef, forwardRef } from 'react';\n\nimport { useChartData } from '../../context/ChartContext';\nimport Label from '../../elements/Label';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikInput from '../../elements/formik/FormikInput';\n\ninterface EquallySpacedFilterProps {\n  onSubmit: (values: any, helper: FormikHelpers<any>) => void;\n}\n\nfunction EquallySpacedFilter(\n  { onSubmit }: EquallySpacedFilterProps,\n  ref: ForwardedRef<FormikProps<any>>,\n) {\n  const { xDomain } = useChartData();\n  return (\n    <FormikForm\n      ref={ref}\n      initialValues={{\n        from: xDomain[0],\n        to: xDomain[1],\n        numberOfPoints: 1024,\n      }}\n      onSubmit={onSubmit}\n    >\n      <div className=\"row margin-10\">\n        <span className=\"custom-label\">Range :</span>\n        <Label title=\"From : \">\n          <FormikInput name=\"from\" type=\"number\" />\n        </Label>\n        <Label title=\"To : \">\n          <FormikInput name=\"to\" type=\"number\" />\n        </Label>\n      </div>\n      <div className=\"row margin-10\">\n        <Label className=\"custom-label\" title=\"Number of points : \">\n          <FormikInput name=\"numberOfPoints\" type=\"number\" />\n        </Label>\n      </div>\n    </FormikForm>\n  );\n}\n\nexport default forwardRef(EquallySpacedFilter);\n","import { FormikHelpers, FormikProps } from 'formik';\nimport { ForwardedRef, forwardRef } from 'react';\n\nimport { useChartData } from '../../context/ChartContext';\nimport Label from '../../elements/Label';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikInput from '../../elements/formik/FormikInput';\n\ninterface FromToFilterProps {\n  onSubmit: (values: any, helper: FormikHelpers<any>) => void;\n}\n\nfunction FromToFilter(\n  { onSubmit }: FromToFilterProps,\n  ref: ForwardedRef<FormikProps<any>>,\n) {\n  const { xDomain } = useChartData();\n  return (\n    <FormikForm\n      ref={ref}\n      initialValues={{ from: xDomain[0], to: xDomain[1] }}\n      onSubmit={onSubmit}\n    >\n      <div className=\"row margin-10\">\n        <span className=\"custom-label\">Range :</span>\n        <Label title=\"From :\">\n          <FormikInput name=\"from\" type=\"number\" />\n        </Label>\n        <Label title=\"To :\">\n          <FormikInput name=\"to\" type=\"number\" />\n        </Label>\n      </div>\n    </FormikForm>\n  );\n}\n\nexport default forwardRef(FromToFilter);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport * as Filters from '../../../data/Filters';\nimport { REFERENCES } from '../../../data/constants/References';\nimport { useDispatch } from '../../context/DispatchContext';\nimport CloseButton from '../../elements/CloseButton';\nimport Select from '../../elements/Select';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport { APPLY_MULTIPLE_SPECTRA_FILTER } from '../../reducer/types/Types';\nimport Events from '../../utility/Events';\nimport { ModalStyles } from '../ModalStyle';\n\nimport EquallySpacedFilter from './EquallySpacedFilter';\nimport FromToFilter from './FromToFilter';\n\nconst baseList: Array<{\n  key: string | number;\n  value: number | string;\n  label: string;\n}> = [\n  { key: 0, value: 0, label: 'Select Filter' },\n  {\n    key: Filters.fromTo.id,\n    value: Filters.fromTo.id,\n    label: Filters.fromTo.name,\n  },\n  {\n    key: Filters.equallySpaced.id,\n    value: Filters.equallySpaced.id,\n    label: Filters.equallySpaced.name,\n  },\n  {\n    key: Filters.standardDeviation.id,\n    value: Filters.standardDeviation.id,\n    label: Filters.standardDeviation.name,\n  },\n  {\n    key: Filters.centerMean.id,\n    value: Filters.centerMean.id,\n    label: Filters.centerMean.name,\n  },\n  {\n    key: Filters.pareto.id,\n    value: Filters.pareto.id,\n    label: Filters.pareto.name,\n  },\n];\n\nconst styles = css`\n  .row {\n    align-items: center;\n  }\n\n  .container {\n    flex: 1;\n  }\n\n  .infoText {\n    padding: 10px;\n    font-size: 12px;\n    text-align: left;\n    color: white;\n    background-color: #5f5f5f;\n    border-radius: 5px;\n  }\n`;\n\ninterface MultipleSpectraFiltersModalProps {\n  onClose?: () => void;\n  nucleus?: string;\n}\n\nfunction MultipleSpectraFiltersModal({\n  onClose = () => null,\n  nucleus = '',\n}: MultipleSpectraFiltersModalProps) {\n  const refForm = useRef<any>();\n\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState('');\n\n  const List = useMemo(() => {\n    const list = REFERENCES[nucleus]\n      ? Object.entries(REFERENCES[nucleus]).map(\n          (item) => ({\n            key: item[0],\n            value: item[0],\n            label: item[0],\n          }),\n          [],\n        )\n      : [];\n\n    return baseList.concat(list as any);\n  }, [nucleus]);\n\n  const handleSave = useCallback((e) => {\n    e.preventDefault();\n    if (refForm.current) {\n      refForm.current.submitForm();\n    }\n  }, []);\n\n  const submitHandler = useCallback(\n    (options) => {\n      if (options) {\n        dispatch({\n          type: APPLY_MULTIPLE_SPECTRA_FILTER,\n          payload: [{ name: filter, options }],\n        });\n\n        onClose();\n      }\n    },\n    [dispatch, filter, onClose],\n  );\n\n  useEffect(() => {\n    function handle(event: any) {\n      const [from, to] = event.range;\n      if (refForm.current) {\n        refForm.current.setValues({ ...refForm.current.values, from, to });\n      }\n    }\n\n    Events.on('brushEnd', handle);\n\n    return () => {\n      Events.off('brushEnd', handle);\n    };\n  }, []);\n\n  const filterChangeHandler = useCallback((id) => {\n    setFilter(id);\n  }, []);\n\n  const filterOptions = useMemo(() => {\n    switch (filter) {\n      case Filters.fromTo.id:\n        return <FromToFilter onSubmit={submitHandler} ref={refForm} />;\n      case Filters.equallySpaced.id:\n        return <EquallySpacedFilter onSubmit={submitHandler} ref={refForm} />;\n      default:\n        <FormikForm\n          ref={refForm}\n          initialValues={null}\n          onSubmit={submitHandler}\n        />;\n        break;\n    }\n  }, [filter, submitHandler]);\n\n  return (\n    <div css={[ModalStyles, styles]}>\n      <div className=\"header handle\">\n        <span>Apply filters</span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"inner-content container\">\n        <p className=\"infoText\">\n          This filter will use the exclusions zones defined in the first\n          spectrum.\n        </p>\n        <div className=\"row margin-10\">\n          <span className=\"custom-label\">Filter :</span>\n\n          <Select\n            data={List}\n            style={{ width: 275, height: 30, margin: 0 }}\n            onChange={filterChangeHandler}\n          />\n        </div>\n        {filterOptions}\n      </div>\n      <div className=\"footer-container\">\n        <button type=\"button\" onClick={handleSave} className=\"btn primary\">\n          Apply\n        </button>\n        <button type=\"button\" onClick={onClose} className=\"btn\">\n          Close\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default MultipleSpectraFiltersModal;\n","/** @jsxImportSource @emotion/react */\nimport { SvgNmrAddFilter, SvgNmrExportAsMatrix } from 'cheminfo-font';\nimport { useCallback } from 'react';\n\nimport { useDispatch } from '../../context/DispatchContext';\nimport Button from '../../elements/ButtonToolTip';\nimport { positions, useModal } from '../../elements/popup/Modal';\nimport ExportAsMatrixModal from '../../modal/ExportAsMatrixModal';\nimport MultipleSpectraFiltersModal from '../../modal/MultipleSpectraFiltersModal';\nimport { RESET_SELECTED_TOOL } from '../../reducer/types/Types';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\n\nfunction MatrixGenerationPanel() {\n  const modal = useModal();\n  const dispatch = useDispatch();\n\n  const openFiltersModal = useCallback(() => {\n    dispatch({ type: RESET_SELECTED_TOOL });\n    modal.show(<MultipleSpectraFiltersModal />, {\n      isBackgroundBlur: false,\n      position: positions.TOP_CENTER,\n      width: 550,\n      height: 250,\n    });\n  }, [modal, dispatch]);\n\n  const openExportAsMatrixModal = useCallback(() => {\n    dispatch({ type: RESET_SELECTED_TOOL });\n    modal.show(<ExportAsMatrixModal />, {\n      isBackgroundBlur: false,\n      position: positions.TOP_CENTER,\n      width: 500,\n    });\n  }, [modal, dispatch]);\n\n  return (\n    <div css={tablePanelStyle}>\n      {\n        <DefaultPanelHeader\n          deleteToolTip=\"Delete All Peaks\"\n          showSettingButton\n          canDelete={false}\n        >\n          <Button popupTitle=\"Add Filter\" onClick={openFiltersModal}>\n            <SvgNmrAddFilter style={{ fontSize: '18px' }} />\n          </Button>\n          <Button\n            popupTitle=\"Export spectra as a Matrix\"\n            onClick={openExportAsMatrixModal}\n          >\n            <SvgNmrExportAsMatrix />\n          </Button>\n        </DefaultPanelHeader>\n      }\n\n      <div className=\"inner-container\" />\n    </div>\n  );\n}\n\nexport default MatrixGenerationPanel;\n","/** @jsxImportSource @emotion/react */\nimport { useState, useEffect, useCallback } from 'react';\nimport { StructureEditor } from 'react-ocl/full';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport { SET_MOLECULE, ADD_MOLECULE } from '../reducer/types/Types';\n\nimport { ModalStyles } from './ModalStyle';\n\ninterface MoleculeStructureEditorModalProps {\n  onClose?: (element?: string) => void;\n  selectedMolecule: {\n    key: any;\n    molfile: string;\n  };\n}\n\nfunction MoleculeStructureEditorModal(\n  props: MoleculeStructureEditorModalProps,\n) {\n  const { onClose = () => null, selectedMolecule } = props;\n\n  const [molfile, setMolfile] = useState<string | null>(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (selectedMolecule) {\n      setMolfile(selectedMolecule.molfile);\n    } else {\n      setMolfile(null);\n    }\n  }, [selectedMolecule]);\n\n  const cb = useCallback(\n    (newMolfile) => {\n      const molText =\n        /(?<s>M {2}V30 BEGIN BOND)(?<mol>.*?)(?<e>M {2}V30 END BOND)/gs.exec(\n          newMolfile,\n        )?.groups?.mol;\n\n      setMolfile(molText?.trim() ? newMolfile : null);\n    },\n    [setMolfile],\n  );\n\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  const handleSave = useCallback(() => {\n    if (selectedMolecule) {\n      dispatch({ type: SET_MOLECULE, molfile, key: selectedMolecule.key });\n      onClose('replace');\n    } else {\n      dispatch({ type: ADD_MOLECULE, molfile });\n      onClose('new');\n    }\n  }, [dispatch, selectedMolecule, molfile, onClose]);\n\n  return (\n    <div css={ModalStyles}>\n      <StructureEditor\n        initialMolfile={selectedMolecule?.molfile}\n        svgMenu\n        fragment={false}\n        onChange={cb}\n      />\n      <div className=\"footer-container\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={handleSave}\n          disabled={!molfile}\n        >\n          Save\n        </button>\n        <button type=\"button\" className=\"btn\" onClick={handleClose}>\n          Close\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default MoleculeStructureEditorModal;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { ReactNode, useState, useCallback, useRef } from 'react';\n\nimport ToolTip from './ToolTip/ToolTip';\n\nconst menuStyles = css`\n  .menu {\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n    padding: 0px;\n    margin: 0px;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    z-index: 99999;\n    padding: 2px;\n    background-color: white;\n\n    button:hover {\n      background-color: #fafafa;\n    }\n  }\n\n  .menu-cover {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n\n  .menu-item {\n    background-color: transparent;\n    border: none;\n    border-bottom: 0.55px solid whitesmoke;\n    height: 35px;\n    outline: outline;\n    display: table-cell;\n    vertical-align: middle;\n    text-align: left;\n    padding: 0 10px;\n\n    svg {\n      display: inline-block;\n    }\n\n    :focus {\n      outline: none !important;\n    }\n    span {\n      font-size: 10px;\n      padding: 0px 10px;\n    }\n  }\n`;\n\ninterface MenuItemProps {\n  icon: ReactNode;\n  label: string;\n  onClick: () => void;\n}\n\nfunction MenuItem({ icon, label, onClick }: MenuItemProps) {\n  return (\n    <button type=\"button\" className=\"menu-item\" onClick={onClick}>\n      {icon}\n      <span>{label}</span>\n    </button>\n  );\n}\n\ninterface MenuListProps {\n  items: Array<MenuItemProps & { id: string }>;\n  onClick: (element: MenuItemProps & { id: string }) => void;\n  boxBounding: any;\n}\n\nfunction MenuList({ items, boxBounding, onClick }: MenuListProps) {\n  return (\n    <div\n      className=\"menu\"\n      style={{\n        transform: `translate(${boxBounding.width}px, -${boxBounding.height}px) `,\n      }}\n    >\n      {items?.map((item) => {\n        return (\n          <MenuItem key={item.id} {...item} onClick={() => onClick(item)} />\n        );\n      })}\n    </div>\n  );\n}\n\ninterface MenuButtonProps {\n  style?: any;\n  component: any;\n  toolTip: string;\n  className?: string;\n  items: Array<any>;\n  onClick: (element: any) => void;\n}\n\nexport default function MenuButton({\n  style,\n  component,\n  toolTip = '',\n  className,\n  items = [],\n  onClick = () => null,\n}: MenuButtonProps) {\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const [isShown, showMenu] = useState(false);\n\n  const closeMenuButton = useCallback(() => {\n    showMenu(false);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    showMenu((flag) => !flag);\n  }, []);\n  const clickHandler = useCallback(\n    (e) => {\n      showMenu(false);\n      onClick(e);\n    },\n    [onClick],\n  );\n\n  return (\n    <div style={{ height: 'auto' }} css={menuStyles}>\n      <button\n        ref={menuButtonRef}\n        type=\"button\"\n        css={style}\n        onClick={handleClick}\n        className={className}\n        style={{ boxSizing: 'border-box' }}\n      >\n        <ToolTip title={toolTip} popupPlacement=\"right\">\n          {component}\n        </ToolTip>\n      </button>\n      {isShown && (\n        <MenuList\n          items={items}\n          boxBounding={menuButtonRef.current?.getBoundingClientRect()}\n          onClick={clickHandler}\n        />\n      )}\n\n      {isShown && <div className=\"menu-cover\" onClick={closeMenuButton} />}\n    </div>\n  );\n}\n","export default function generateNumbersPowerOfX(\n  start: number,\n  end: number,\n  options?: { power?: number; format?: (input: number) => string | number },\n) {\n  const { power = 2, format = formatNumber } = options || {};\n  let values: Array<{ key: number; label: string | number; value: number }> =\n    [];\n  for (let i = start; i <= end; i++) {\n    const result = power ** i;\n    values.push({\n      key: result,\n      label: format(result),\n      value: result,\n    });\n  }\n  return values;\n}\n\nfunction formatNumber(number: number): string | number {\n  if (number >= 1024 * 1024) {\n    return `${number / (1024 * 1024)}M`;\n  } else if (number >= 1024) {\n    return `${number / 1024}K`;\n  } else {\n    return number;\n  }\n}\n","import { HTMLAttributes } from 'react';\n\ninterface IsotopesViewerProps extends HTMLAttributes<HTMLDivElement> {\n  value?: string;\n}\n\nfunction IsotopesViewer({ value = '', ...othersProps }: IsotopesViewerProps) {\n  return (\n    <div\n      {...othersProps}\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{\n        __html: value.replace(/(?<isotope>[0-9]+)/g, '<sup>$<isotope></sup>'),\n      }}\n    />\n  );\n}\n\nexport default IsotopesViewer;\n","import { useFormikContext } from 'formik';\nimport { CSSProperties, useMemo } from 'react';\n\nconst styles: Record<'container' | 'text', CSSProperties> = {\n  container: {\n    backgroundColor: '#fd000c',\n    borderRadius: '5px',\n    padding: '0.4rem',\n  },\n  text: {\n    color: 'white',\n    margin: '0.5px',\n    fontSize: '0.9em',\n    listStyle: 'inside',\n  },\n};\n\nexport interface FormikErrorsSummaryProps {\n  style?: Record<'container' | 'text', CSSProperties>;\n}\n\nconst getErrors = (errorObj: Record<string, any>): string[] => {\n  const result: string[] = [];\n  function errorsIterators(obj) {\n    Object.keys(obj).forEach((key) => {\n      if (typeof obj[key] === 'object') {\n        errorsIterators(obj[key]);\n      } else {\n        result.push(obj[key]);\n      }\n    });\n  }\n\n  errorsIterators(errorObj);\n  return result;\n};\n\nfunction FormikErrorsSummary({ style }: FormikErrorsSummaryProps) {\n  const { errors, isValid } = useFormikContext();\n\n  const errorList = useMemo(() => {\n    return getErrors(errors);\n  }, [errors]);\n\n  if (isValid) return <div />;\n\n  return (\n    <ul style={{ ...styles.container, ...style?.container }}>\n      {errorList.map((errorText, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <li key={index} style={{ ...styles.text, ...style?.text }}>\n            {errorText}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default FormikErrorsSummary;\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, useEffect } from 'react';\n\nimport Select, { SelectProps } from '../Select';\n\nconst FormikSelect = function FormikSelect(\n  props: SelectProps & { value?: string },\n) {\n  const { name = '', value, onChange = () => null, ...resProps } = props;\n\n  const { values, setFieldValue } = useFormikContext();\n  const changeHandler = useCallback(\n    (value) => {\n      onChange(value);\n      setFieldValue(name, value);\n    },\n    [name, onChange, setFieldValue],\n  );\n\n  useEffect(() => {\n    if (value) {\n      setFieldValue(name, value);\n    }\n  }, [name, setFieldValue, value]);\n\n  return (\n    <Select\n      name={name}\n      defaultValue={value ? value : lodashGet(values, name)}\n      onChange={changeHandler}\n      {...resProps}\n    />\n  );\n};\n\nexport default FormikSelect;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useRef, useState, useMemo } from 'react';\nimport * as Yup from 'yup';\n\nimport {\n  defaultPredictionOptions,\n  FREQUENCIES,\n} from '../../data/PredictionManager';\nimport generateNumbersPowerOfX from '../../data/utilities/generateNumbersPowerOfX';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport CheckBox from '../elements/CheckBox';\nimport CloseButton from '../elements/CloseButton';\nimport IsotopesViewer from '../elements/IsotopesViewer';\nimport Label from '../elements/Label';\nimport FormikCheckBox from '../elements/formik/FormikCheckBox';\nimport FormikErrorsSummary from '../elements/formik/FormikErrorsSummary';\nimport FormikForm from '../elements/formik/FormikForm';\nimport FormikInput from '../elements/formik/FormikInput';\nimport FormikSelect from '../elements/formik/FormikSelect';\nimport { useAlert } from '../elements/popup/Alert';\nimport { PREDICT_SPECTRA, SET_LOADING_FLAG } from '../reducer/types/Types';\nimport { useStateWithLocalStorage } from '../utility/LocalStorage';\n\nimport { ModalStyles } from './ModalStyle';\n\nconst styles = css`\n  .row {\n    align-items: center;\n  }\n\n  .inner-content {\n    flex: 1;\n  }\n\n  .custom-label {\n    width: 160px;\n    font-weight: 500;\n  }\n\n  .nucleus-label {\n    padding: 0 10px;\n    color: black;\n    font-weight: 700;\n\n    &.disabled {\n      opacity: 0.5;\n      color: black;\n    }\n  }\n  .warning {\n    color: #c40000;\n    font-weight: bold;\n    font-size: 13px;\n    text-align: justify;\n    margin-top: 30px;\n  }\n\n  .warning-container {\n    margin-top: 5px;\n    display: flex;\n    input {\n      margin: 5px 5px 5px 0;\n    }\n  }\n\n  button[disabled],\n  button[disabled]:hover {\n    opacity: 0.5;\n    color: black;\n  }\n\n  .middle-x {\n    padding: 0 10px;\n  }\n\n  .group-label {\n    width: 100%;\n    display: block;\n    border-bottom: 1px solid #efefef;\n    padding-bottom: 5px;\n    font-weight: 600;\n    color: #005d9e;\n  }\n`;\n\nconst NUMBER_OF_POINTS_1D = generateNumbersPowerOfX(12, 19);\nconst NUMBER_OF_POINTS_2D = generateNumbersPowerOfX(10, 10, {\n  format: (value) => value,\n});\n\nconst predictionFormValidation = Yup.object().shape({\n  name: Yup.string().required().label('Name'),\n  frequency: Yup.number().integer().required().label('Frequency'),\n  '1d': Yup.object({\n    '1H': Yup.object({\n      from: Yup.number().integer().required().label(\"1H ' From ' \"),\n      to: Yup.number().integer().required().label(\"1H ' To ' \"),\n    }),\n    '13C': Yup.object().shape({\n      from: Yup.number().integer().required().label(\"13C ' From ' \"),\n      to: Yup.number().integer().required().label(\"13C ' To ' \"),\n    }),\n    lineWidth: Yup.number().integer().min(1).required().label('Line Width'),\n    nbPoints: Yup.number().integer().required().label('1D Number Of Points'),\n  }),\n  '2d': Yup.object({\n    nbPoints: Yup.object({\n      x: Yup.number().integer().required().label('2D Number Of Points'),\n      y: Yup.number().integer().required().label('2D Number Of Points'),\n    }),\n  }),\n  spectra: Yup.object({\n    proton: Yup.boolean(),\n    carbon: Yup.boolean(),\n    cosy: Yup.boolean(),\n    hsqc: Yup.boolean(),\n    hmbc: Yup.boolean(),\n  }).test(\n    'check-options',\n    'You must check one of the options to start prediction',\n    (obj) => {\n      if (Object.values(obj).includes(true)) {\n        return true;\n      }\n      return false;\n    },\n  ),\n});\n\ninterface PredictSpectraModalProps {\n  onClose?: (element?: string) => void;\n  molfile: any;\n}\n\nfunction PredictSpectraModal({\n  onClose = () => null,\n  molfile,\n}: PredictSpectraModalProps) {\n  const refForm = useRef<any>();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const [isApproved, setApproved] = useState(false);\n  const [predictionPreferences, setPredictionPreferences] =\n    useStateWithLocalStorage('nmrium-prediction-preferences');\n\n  const {\n    toolOptions: {\n      data: { predictionIndex },\n    },\n  } = useChartData();\n\n  const handleSave = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n\n  const initValues = useMemo(() => {\n    const { isApproved: isAgree, ...options } = predictionPreferences;\n    setApproved(isAgree);\n    return Object.assign(defaultPredictionOptions, options, {\n      name: `Prediction ${predictionIndex + 1}`,\n    });\n  }, [predictionPreferences, predictionIndex]);\n\n  const submitHandler = useCallback(\n    (values) => {\n      void (async () => {\n        setPredictionPreferences({ ...values, isApproved });\n        dispatch({\n          type: SET_LOADING_FLAG,\n          isLoading: true,\n        });\n\n        const predictedSpectra = Object.entries(values.spectra)\n          .reduce<Array<string>>((acc, [key, value]) => {\n            if (value) {\n              acc.push(key);\n            }\n            return acc;\n          }, [])\n          .join(' , ');\n\n        const hideLoading = await alert.showLoading(\n          `Predict ${predictedSpectra} in progress`,\n        );\n\n        dispatch({\n          type: PREDICT_SPECTRA,\n          payload: { mol: molfile, options: values },\n        });\n\n        hideLoading();\n        onClose();\n      })();\n    },\n    [alert, dispatch, isApproved, molfile, onClose, setPredictionPreferences],\n  );\n\n  const approveCheckHandler = useCallback((e) => {\n    setApproved(e.target.checked);\n  }, []);\n\n  return (\n    <div css={[ModalStyles, styles]}>\n      <div className=\"header handle\">\n        <span>Prediction of NMR spectrum</span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"inner-content\">\n        <FormikForm\n          ref={refForm}\n          initialValues={initValues}\n          validationSchema={predictionFormValidation}\n          onSubmit={submitHandler}\n        >\n          <FormikErrorsSummary />\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Name :</span>\n            <FormikInput\n              name=\"name\"\n              style={{ input: { width: '200px', textAlign: 'left' } }}\n            />\n          </div>\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Spectrometer Frequency :</span>\n\n            <FormikSelect\n              data={FREQUENCIES}\n              style={{ width: 290, height: 30, margin: 0 }}\n              name=\"frequency\"\n            />\n          </div>\n\n          <span className=\"group-label\">1D Options </span>\n\n          <div className=\"row margin-10 padding-h-10\">\n            <IsotopesViewer value=\"1H\" className=\"custom-label\" />\n            <Label title=\"From\">\n              <FormikInput name=\"1d.1H.from\" type=\"number\" />\n            </Label>\n            <Label title=\"To\" style={{ label: { padding: '0 10px' } }}>\n              <FormikInput name=\"1d.1H.to\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\"row margin-10 padding-h-10\">\n            <IsotopesViewer value=\"13C\" className=\"custom-label\" />\n            <Label title=\"From\">\n              <FormikInput name=\"1d.13C.from\" type=\"number\" />\n            </Label>\n            <Label title=\"To\" style={{ label: { padding: '0 10px' } }}>\n              <FormikInput name=\"1d.13C.to\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\"row margin-10 padding-h-10\">\n            <span className=\"custom-label\">Line Width : </span>\n            <FormikInput\n              name=\"1d.lineWidth\"\n              type=\"number\"\n              style={{ input: { margin: 0 } }}\n            />\n            <span style={{ paddingLeft: '0.4rem' }}> Hz </span>\n          </div>\n          <div className=\"row margin-10 padding-h-10\">\n            <span className=\"custom-label\">Number of Points : </span>\n            <FormikSelect\n              data={NUMBER_OF_POINTS_1D}\n              name=\"1d.nbPoints\"\n              style={{ width: 290, height: 30, margin: 0 }}\n            />\n          </div>\n          <span className=\"group-label\">2D Options </span>\n\n          <div className=\"row margin-10 padding-h-10\">\n            <span className=\"custom-label\">Number of Points : </span>\n            <FormikSelect\n              data={NUMBER_OF_POINTS_2D}\n              name=\"2d.nbPoints.x\"\n              style={{ margin: 0, height: 30 }}\n            />\n            <span className=\"middle-x\"> X </span>\n            <FormikSelect\n              data={NUMBER_OF_POINTS_2D}\n              name=\"2d.nbPoints.y\"\n              style={{ margin: 0, height: 30 }}\n            />\n          </div>\n          <div className=\"row margin-10\">\n            <span className=\"group-label\">Spectra </span>\n          </div>\n          <div\n            className=\"row margin-10 padding-h-10\"\n            style={{ justifyContent: 'space-between' }}\n          >\n            <div className=\"row\">\n              <FormikCheckBox name=\"spectra.proton\" />\n              <IsotopesViewer value=\"1H\" className=\"nucleus-label\" />\n            </div>\n            <div className=\"row\">\n              <FormikCheckBox name=\"spectra.carbon\" />\n              <IsotopesViewer value=\"13C\" className=\"nucleus-label\" />\n            </div>\n            <div className=\"row\">\n              <FormikCheckBox name=\"spectra.cosy\" />\n              <IsotopesViewer value=\"COSY\" className=\"nucleus-label\" />\n            </div>\n            <div className=\"row\">\n              <FormikCheckBox name=\"spectra.hsqc\" />\n              <IsotopesViewer value=\"HSQC\" className=\"nucleus-label\" />\n            </div>\n            <div className=\"row\">\n              <FormikCheckBox name=\"spectra.hmbc\" />\n              <IsotopesViewer value=\"HMBC\" className=\"nucleus-label\" />\n            </div>\n          </div>\n        </FormikForm>\n        <p className=\"warning\">\n          In order to predict spectra we are calling an external service and the\n          chemical structure will leave your browser! You should never predict\n          spectra for confidential molecules.\n        </p>\n        <div className=\"warning-container\">\n          <CheckBox\n            onChange={approveCheckHandler}\n            checked={isApproved}\n            key={String(isApproved)}\n          />\n          <p>I confirm that the chemical structure is not confidential.</p>\n        </div>\n      </div>\n      <div className=\"footer-container\">\n        <button\n          type=\"button\"\n          onClick={handleSave}\n          className=\"btn\"\n          disabled={!isApproved}\n        >\n          Predict spectrum\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default PredictSpectraModal;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { SvgNmrFt } from 'cheminfo-font';\nimport { useCallback } from 'react';\nimport {\n  FaCopy,\n  FaDownload,\n  FaFileExport,\n  FaFileImage,\n  FaPaste,\n  FaPlus,\n  FaRegTrashAlt,\n} from 'react-icons/fa';\n\nimport { useAssignmentData } from '../../assignment';\nimport { useDispatch } from '../../context/DispatchContext';\nimport ButtonToolTip from '../../elements/ButtonToolTip';\nimport MenuButton from '../../elements/MenuButton';\nimport ToolTip from '../../elements/ToolTip/ToolTip';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { positions, useModal } from '../../elements/popup/Modal';\nimport PredictSpectraModal from '../../modal/PredictSpectraModal';\nimport { ADD_MOLECULE, DELETE_MOLECULE } from '../../reducer/types/Types';\nimport {\n  copyPNGToClipboard,\n  copyTextToClipboard,\n  exportAsSVG,\n} from '../../utility/Export';\n\nconst toolbarStyle = css`\n  display: flex;\n  flex-direction: row;\n  border-bottom: 0.55px solid rgb(240, 240, 240);\n  padding: 0px 5px;\n\n  button svg {\n    fill: #4e4e4e;\n  }\n\n  button {\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n  }\n\n  p {\n    margin: 0;\n    text-align: right;\n    width: 100%;\n    line-height: 22px;\n    padding: 0px 10px;\n  }\n`;\n\nconst MOL_EXPORT_MENU = [\n  {\n    id: 'molfile',\n    icon: <FaCopy />,\n    label: 'Copy as molfile',\n  },\n  {\n    id: 'png',\n    icon: <FaFileImage />,\n    label: 'Copy as PNG',\n  },\n  {\n    id: 'svg',\n    icon: <FaDownload />,\n    label: 'Export as SVG',\n  },\n];\n\nexport interface MoleculeHeaderActionsOptions {\n  hidePast?: boolean;\n  hideAdd?: boolean;\n  hideExport?: boolean;\n  hideDelete?: boolean;\n  hidePredict?: boolean;\n}\ninterface MoleculePanelHeaderProps {\n  currentIndex: number;\n  molecules: Array<any>;\n  onMoleculeIndexChange: (index: number) => void;\n  onOpenMoleculeEditor: () => void;\n  actionsOptions?: MoleculeHeaderActionsOptions;\n}\n\nexport default function MoleculePanelHeader({\n  currentIndex,\n  molecules,\n  onMoleculeIndexChange = () => null,\n  onOpenMoleculeEditor = () => null,\n  actionsOptions = {},\n}: MoleculePanelHeaderProps) {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const assignmentData = useAssignmentData();\n\n  const saveAsSVGHandler = useCallback(() => {\n    exportAsSVG(`molSVG${currentIndex}`, 'molFile');\n  }, [currentIndex]);\n\n  const saveAsPNGHandler = useCallback(() => {\n    copyPNGToClipboard(`molSVG${currentIndex}`);\n    alert.success('MOL copied as PNG to clipboard');\n  }, [alert, currentIndex]);\n\n  const saveAsMolHandler = useCallback(() => {\n    if (molecules[currentIndex]) {\n      void copyTextToClipboard(molecules[currentIndex].molfile).then((flag) => {\n        if (flag) {\n          alert.success('MOLFile copied to clipboard');\n        } else {\n          alert.error('copied not completed');\n        }\n      });\n    }\n  }, [alert, currentIndex, molecules]);\n\n  const exportHandler = useCallback(\n    ({ id }) => {\n      switch (id) {\n        case 'molfile':\n          saveAsMolHandler();\n          break;\n        case 'png':\n          saveAsPNGHandler();\n          break;\n        case 'svg':\n          saveAsSVGHandler();\n          break;\n        default:\n          break;\n      }\n    },\n    [saveAsMolHandler, saveAsPNGHandler, saveAsSVGHandler],\n  );\n\n  const handlePaste = useCallback(() => {\n    void navigator.clipboard.readText().then((molfile) => {\n      dispatch({ type: ADD_MOLECULE, molfile });\n    });\n  }, [dispatch]);\n\n  const handleDelete = useCallback(() => {\n    if (molecules[currentIndex]?.key) {\n      onMoleculeIndexChange(0);\n      dispatch({\n        type: DELETE_MOLECULE,\n        payload: { key: molecules[currentIndex].key, assignmentData },\n      });\n    }\n  }, [\n    molecules,\n    currentIndex,\n    onMoleculeIndexChange,\n    dispatch,\n    assignmentData,\n  ]);\n\n  const openPredictSpectraModal = useCallback(() => {\n    modal.show(<PredictSpectraModal molfile={molecules[currentIndex]} />, {\n      position: positions.TOP_CENTER,\n      enableResizing: true,\n      width: 600,\n    });\n  }, [modal, molecules, currentIndex]);\n\n  return (\n    <div css={toolbarStyle}>\n      {!actionsOptions.hideExport && (\n        <MenuButton\n          component={<FaFileExport />}\n          toolTip=\"Export As\"\n          items={MOL_EXPORT_MENU}\n          onClick={exportHandler}\n        />\n      )}\n\n      {!actionsOptions.hidePast && (\n        <ToolTip title=\"Paste molfile\" popupPlacement=\"left\">\n          <button className=\"bar-button\" type=\"button\" onClick={handlePaste}>\n            <FaPaste />\n          </button>\n        </ToolTip>\n      )}\n      {!actionsOptions.hideAdd && (\n        <ToolTip title=\"Add Molecule\" popupPlacement=\"left\">\n          <button\n            className=\"bar-button\"\n            type=\"button\"\n            onClick={onOpenMoleculeEditor}\n            data-test-id=\"panel-structures-button-add\"\n          >\n            <FaPlus />\n          </button>\n        </ToolTip>\n      )}\n      {!actionsOptions.hideDelete && (\n        <ToolTip title=\"Delete Molecule\" popupPlacement=\"left\">\n          <button className=\"bar-button\" type=\"button\" onClick={handleDelete}>\n            <FaRegTrashAlt />\n          </button>\n        </ToolTip>\n      )}\n      {!actionsOptions.hidePredict && molecules && molecules.length > 0 && (\n        <ButtonToolTip\n          popupTitle=\"Predict Spectra\"\n          popupPlacement=\"left\"\n          onClick={openPredictSpectraModal}\n        >\n          <SvgNmrFt />\n        </ButtonToolTip>\n      )}\n      <p>\n        {molecules &&\n          molecules.length > 0 &&\n          `${+(currentIndex + 1)} / ${molecules.length}`}{' '}\n      </p>\n    </div>\n  );\n}\n","import { DISPLAYER_MODE } from '../../reducer/core/Constants';\n\nexport function extractFromAtom(atom, elements, activeAxis) {\n  if (elements.length > 0 && Object.keys(atom).length > 0) {\n    const dim = activeAxis === 'x' ? 0 : activeAxis === 'y' ? 1 : undefined;\n    if (dim !== undefined) {\n      if (elements[dim] === atom.atomLabel) {\n        // take always oclID if atom type is same as element of activeTab)\n        return { oclIDs: [atom.oclID], nbAtoms: atom.nbAtoms };\n      }\n      if (elements[dim] === 'H') {\n        // if we are in proton spectrum and use then the IDs of attached hydrogens of an atom\n        return {\n          oclIDs: atom.hydrogenOCLIDs,\n          nbAtoms: atom.nbAtoms * atom.nbHydrogens,\n        };\n      }\n    } else {\n      return {\n        oclIDs: [atom.oclID].concat(atom.hydrogenOCLIDs),\n        nbAtoms: atom.nbAtoms + atom.nbAtoms * atom.nbHydrogens,\n      };\n    }\n  }\n\n  return { oclIDs: [], nbAtoms: 0 };\n}\n\nexport function findDatumAndSignalIndex(spectraData, id) {\n  // if datum could be found then the id is on range/zone level\n  let datum = spectraData.find((_datum) => _datum.id === id);\n  let signalIndex;\n  if (!datum) {\n    // figure out the datum via id\n    for (const data of spectraData) {\n      signalIndex = data.signals.findIndex((signal) => signal.id === id);\n      if (signalIndex >= 0) {\n        datum = data;\n        break;\n      }\n    }\n  }\n\n  return { datum, signalIndex };\n}\n\nexport function getHighlightsOnHover(assignmentData, oclIDs, data) {\n  // set all IDs to highlight when hovering over an atom from assignment data\n  let highlights: Array<number> = [];\n  for (let key in assignmentData.assignment.assignment) {\n    let datum, signalIndex;\n    let stop = false;\n    if (\n      (assignmentData.assignment.assignment[key].x || []).some((_assigned) =>\n        oclIDs.includes(_assigned),\n      )\n    ) {\n      highlights = highlights.concat(\n        assignmentData.assignment.assignment[key].x,\n      );\n      const result = findDatumAndSignalIndex(data, key);\n      datum = result.datum;\n      signalIndex = result.signalIndex;\n      stop = true;\n    }\n    if (\n      (assignmentData.assignment.assignment[key].y || []).some((_assigned) =>\n        oclIDs.includes(_assigned),\n      )\n    ) {\n      highlights = highlights.concat(\n        assignmentData.assignment.assignment[key].y,\n      );\n      const result = findDatumAndSignalIndex(data, key);\n      datum = result.datum;\n      signalIndex = result.signalIndex;\n      stop = true;\n    }\n    if (datum) {\n      highlights.push(datum.id);\n      if (signalIndex !== undefined) {\n        highlights.push(datum.signals[signalIndex].id);\n      }\n    }\n    if (stop) {\n      break;\n    }\n  }\n  return highlights;\n}\n\nexport function getCurrentDiaIDsToHighlight(assignmentData, displayerMode) {\n  const assignmentOnHover = assignmentData.assignment.isOnHover\n    ? assignmentData.assignment.assignment[assignmentData.assignment.onHoverID]\n    : null;\n\n  const axisOnHover = assignmentData.assignment.isOnHover\n    ? assignmentData.assignment.onHoverAxis\n    : null;\n\n  return assignmentOnHover\n    ? displayerMode === DISPLAYER_MODE.DM_1D\n      ? assignmentOnHover.x || []\n      : displayerMode === DISPLAYER_MODE.DM_2D\n      ? axisOnHover\n        ? axisOnHover === 'x'\n          ? assignmentOnHover.x || []\n          : axisOnHover === 'y'\n          ? assignmentOnHover.y || []\n          : (assignmentOnHover.x || []).concat(assignmentOnHover.y || [])\n        : (assignmentOnHover.x || []).concat(assignmentOnHover.y || [])\n      : []\n    : [];\n}\n\nexport function toggleDiaIDs(diaID, atomInformation) {\n  let _diaID = diaID ? diaID.slice() : [];\n  const { nbAtoms, oclIDs } = atomInformation;\n  let tempNbAtoms = nbAtoms;\n  oclIDs.forEach((_oclID) => {\n    if (_diaID.includes(_oclID)) {\n      tempNbAtoms *= -1;\n      _diaID = _diaID.filter((_id) => _id !== _oclID);\n    } else {\n      _diaID.push(_oclID);\n    }\n  });\n  return [_diaID, tempNbAtoms];\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { ConcatenationString } from '../../../data/utilities/Concatenation';\nimport checkModifierKeyActivated from '../../../data/utilities/checkModifierKeyActivated';\nimport {\n  filterForIDsWithAssignment,\n  useAssignment,\n  useAssignmentData,\n} from '../../assignment';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { HighlightedSource, useHighlightData } from '../../highlight';\nimport { DISPLAYER_MODE } from '../../reducer/core/Constants';\nimport { SET_DIAID_RANGE, SET_DIAID_ZONE } from '../../reducer/types/Types';\n\nimport {\n  extractFromAtom,\n  findDatumAndSignalIndex,\n  getCurrentDiaIDsToHighlight,\n  getHighlightsOnHover,\n  toggleDiaIDs,\n} from './Utilities';\n\nexport default function useAtomAssignment({\n  displayerMode,\n  activeTab,\n  zones,\n  ranges,\n}) {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const highlightData = useHighlightData();\n  const assignmentData = useAssignmentData();\n\n  const activeAssignment = useAssignment(\n    assignmentData.assignment.activeID !== undefined\n      ? assignmentData.assignment.activeID\n      : ConcatenationString, // dummy value\n  );\n\n  const [onAtomHoverHighlights, setOnAtomHoverHighlights] = useState<any>([]);\n  const [onAtomHoverAction, setOnAtomHoverAction] = useState<any>(null);\n  const [elements, setElements] = useState<Array<any>>([]);\n\n  useEffect(() => {\n    if (activeTab) {\n      const split = activeTab.split(',');\n      if (split.length === 1) {\n        setElements([activeTab.replace(/[0-9]/g, '')]);\n      } else if (split.length === 2) {\n        setElements(split.map((nucleus) => nucleus.replace(/[0-9]/g, '')));\n      }\n    }\n  }, [activeTab]);\n\n  useEffect(() => {\n    if (onAtomHoverAction) {\n      if (onAtomHoverAction === 'show') {\n        highlightData.dispatch({\n          type: 'SHOW',\n          payload: { convertedHighlights: onAtomHoverHighlights },\n        });\n      } else if (onAtomHoverAction === 'hide') {\n        highlightData.dispatch({\n          type: 'HIDE',\n          payload: { convertedHighlights: onAtomHoverHighlights },\n        });\n        setOnAtomHoverHighlights([]);\n      }\n      setOnAtomHoverAction(null);\n    }\n  }, [onAtomHoverAction, onAtomHoverHighlights, highlightData]);\n\n  const data = useMemo(() => {\n    if (zones || ranges) {\n      if (displayerMode === DISPLAYER_MODE.DM_1D && ranges && ranges.values) {\n        return ranges.values;\n      } else if (\n        displayerMode === DISPLAYER_MODE.DM_2D &&\n        zones &&\n        zones.values\n      ) {\n        return zones.values;\n      }\n    }\n    return [];\n  }, [displayerMode, ranges, zones]);\n\n  const assignedDiaIDs = useMemo(() => {\n    const assignedDiaID: { x: Array<any>; y: Array<any> } = { x: [], y: [] };\n    for (let id in assignmentData.assignment.assignment) {\n      if (assignmentData.assignment.assignment[id].x) {\n        assignedDiaID.x.push(...assignmentData.assignment.assignment[id].x);\n      }\n      if (assignmentData.assignment.assignment[id].y) {\n        assignedDiaID.y.push(...assignmentData.assignment.assignment[id].y);\n      }\n    }\n    // with its structure it's prepared for showing assigned IDs per axis\n    return assignedDiaID;\n  }, [assignmentData.assignment]);\n\n  // used for atom highlighting for now, until we would like to highlight atoms per axis separately\n  const assignedDiaIDsMerged = useMemo(\n    () => assignedDiaIDs.x.concat(assignedDiaIDs.y),\n    [assignedDiaIDs.x, assignedDiaIDs.y],\n  );\n\n  const currentDiaIDsToHighlight = useMemo(() => {\n    let highlights = [];\n    highlightData.highlight.highlighted.forEach((highlightID) => {\n      const temp = assignmentData.assignment.assignment[highlightID];\n      if (temp) {\n        const { datum } = findDatumAndSignalIndex(data, highlightID);\n        const type = highlightData.highlight.sourceData?.type;\n        if (\n          datum &&\n          (type === HighlightedSource.ZONE || type === HighlightedSource.RANGE)\n        ) {\n          // we are on range/zone level only, so add the belonging signal IDs to highlight too\n          highlights = highlights.concat(\n            datum.signals\n              .map((signal) =>\n                filterForIDsWithAssignment(assignmentData, [signal.id]).length >\n                0\n                  ? signal.diaIDs\n                  : [],\n              )\n              .flat(),\n          );\n        }\n      }\n    });\n    return getCurrentDiaIDsToHighlight(assignmentData, displayerMode).concat(\n      highlights,\n    );\n  }, [assignmentData, data, displayerMode, highlightData.highlight]);\n\n  const toggleAssignment = useCallback((diaID, atomInformation) => {\n    // a previous version of the code prevented to assign many time the same atom\n    // see revision cc13abc18f77b6787b923e3c4edaef51750d9e90\n    return toggleDiaIDs(diaID, atomInformation);\n  }, []);\n\n  const handleOnClickAtom = useCallback(\n    (atom, event) => {\n      if (!checkModifierKeyActivated(event)) {\n        if (activeAssignment.isActive) {\n          const atomInformation = extractFromAtom(\n            atom,\n            elements,\n            activeAssignment.activeAxis,\n          );\n          if (atomInformation.nbAtoms > 0) {\n            // save assignment in assignment hook\n            atomInformation.oclIDs.forEach((_oclID) => {\n              activeAssignment.toggle(_oclID);\n            });\n            // save assignment (diaIDs) in range/zone data\n            const { datum, signalIndex } = findDatumAndSignalIndex(\n              data,\n              activeAssignment.id,\n            );\n            if (datum) {\n              // determine the level of setting the diaIDs array (range vs. signal level) and save there\n              let _diaID = [];\n              let nbAtoms = 0;\n              // on range/zone level\n              if (signalIndex === undefined) {\n                if (displayerMode === DISPLAYER_MODE.DM_1D) {\n                  [_diaID, nbAtoms] = toggleAssignment(\n                    datum.diaIDs || [],\n                    atomInformation,\n                  );\n                } else if (displayerMode === DISPLAYER_MODE.DM_2D) {\n                  [_diaID, nbAtoms] = toggleAssignment(\n                    datum[activeAssignment.activeAxis].diaIDs || [],\n                    atomInformation,\n                  );\n                }\n              } else if (datum.signals?.[signalIndex]) {\n                // on signal level\n                if (displayerMode === DISPLAYER_MODE.DM_1D) {\n                  [_diaID, nbAtoms] = toggleAssignment(\n                    datum.signals[signalIndex].diaIDs || [],\n                    atomInformation,\n                  );\n                } else if (displayerMode === DISPLAYER_MODE.DM_2D) {\n                  [_diaID, nbAtoms] = toggleAssignment(\n                    datum.signals[signalIndex][activeAssignment.activeAxis]\n                      .diaIDs || [],\n                    atomInformation,\n                  );\n                }\n              }\n              if (displayerMode === DISPLAYER_MODE.DM_1D) {\n                dispatch({\n                  type: SET_DIAID_RANGE,\n                  payload: {\n                    nbAtoms,\n                    rangeData: datum,\n                    diaIDs: _diaID,\n                    signalIndex,\n                  },\n                });\n              } else if (displayerMode === DISPLAYER_MODE.DM_2D) {\n                dispatch({\n                  type: SET_DIAID_ZONE,\n                  payload: {\n                    nbAtoms,\n                    zoneData: datum,\n                    diaIDs: _diaID,\n                    axis: activeAssignment.activeAxis,\n                    signalIndex,\n                  },\n                });\n              }\n            }\n            activeAssignment.onClick(activeAssignment.activeAxis);\n          } else {\n            alert.info(\n              'Not assigned! Different atom type or no attached hydrogens found!',\n            );\n          }\n        }\n      }\n    },\n    [\n      activeAssignment,\n      alert,\n      data,\n      dispatch,\n      displayerMode,\n      elements,\n      toggleAssignment,\n    ],\n  );\n\n  const handleOnAtomHover = useCallback(\n    (atom) => {\n      const oclIDs = extractFromAtom(\n        atom,\n        elements,\n        activeAssignment.activeAxis,\n      ).oclIDs;\n      // on enter the atom\n      if (oclIDs.length > 0) {\n        // set all IDs to highlight when hovering over an atom from assignment data\n        const highlights = getHighlightsOnHover(assignmentData, oclIDs, data);\n        setOnAtomHoverHighlights(highlights);\n        setOnAtomHoverAction('show');\n      } else {\n        // on leave the atom\n        setOnAtomHoverAction('hide');\n      }\n    },\n    [activeAssignment.activeAxis, assignmentData, data, elements],\n  );\n\n  return {\n    handleOnAtomHover,\n    handleOnClickAtom,\n    currentDiaIDsToHighlight,\n    assignedDiaIDsMerged,\n  };\n}\n","/** @jsxImportSource @emotion/react */\nimport { css, SerializedStyles } from '@emotion/react';\nimport OCL from 'openchemlib/full';\nimport { useState, useCallback, useEffect, memo, ReactElement } from 'react';\nimport { ResponsiveChart } from 'react-d3-utils';\nimport { MF } from 'react-mf';\nimport OCLnmr from 'react-ocl-nmr';\n\nimport { Molecule } from '../../../data/molecules/Molecule';\nimport { Datum1D, Ranges } from '../../../data/types/data1d';\nimport { Datum2D, Zones } from '../../../data/types/data2d';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport NextPrev from '../../elements/NextPrev';\nimport { positions, useModal } from '../../elements/popup/Modal';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport MoleculeStructureEditorModal from '../../modal/MoleculeStructureEditorModal';\nimport { DISPLAYER_MODE } from '../../reducer/core/Constants';\nimport { SET_MOLECULE } from '../../reducer/types/Types';\n\nimport MoleculePanelHeader, {\n  MoleculeHeaderActionsOptions,\n} from './MoleculePanelHeader';\nimport useAtomAssignment from './useAtomAssignment';\n\nconst styles: Record<\n  'panel' | 'innerPanel' | 'molecule' | 'toolbar' | 'slider' | 'items',\n  SerializedStyles\n> = {\n  panel: css({\n    display: 'flex',\n    overflow: 'auto',\n    flexGrow: 1,\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column',\n  }),\n  innerPanel: css({\n    display: 'flex',\n    flex: '1',\n    flexDirection: 'column',\n    overflow: 'auto',\n  }),\n  molecule: css({\n    display: 'flex',\n    flex: '1',\n  }),\n  toolbar: css({\n    display: 'flex',\n    borderBottom: '0.55px solid rgb(240, 240, 240)',\n    padding: '0px 10px',\n    justifyContent: 'end',\n    height: 22,\n  }),\n  slider: css({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexGrow: 1,\n    minHeight: 0,\n  }),\n  items: css({\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '1 1 0%',\n    height: '100%',\n    minHeight: 0,\n  }),\n};\n\ninterface MoleculePanelInnerProps extends MoleculePanelProps {\n  zones: Zones;\n  ranges: Ranges;\n  molecules: Array<Molecule>;\n  activeTab: string;\n  displayerMode: DISPLAYER_MODE;\n}\n\nfunction MoleculePanelInner({\n  zones,\n  ranges,\n  molecules: moleculesProp,\n  activeTab,\n  displayerMode,\n  onMoleculeChange,\n  actionsOptions,\n  children,\n}: MoleculePanelInnerProps) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [molecules, setMolecules] = useState<any>([]);\n\n  const dispatch = useDispatch();\n  const modal = useModal();\n\n  const {\n    currentDiaIDsToHighlight,\n    handleOnAtomHover,\n    handleOnClickAtom,\n    assignedDiaIDsMerged,\n  } = useAtomAssignment({ zones, ranges, activeTab, displayerMode });\n\n  useEffect(() => {\n    if (moleculesProp) {\n      setMolecules((prevMolecules) => {\n        if (moleculesProp.length > prevMolecules.length) {\n          setCurrentIndex(molecules.length);\n        }\n        return moleculesProp;\n      });\n    }\n  }, [molecules.length, moleculesProp]);\n\n  useEffect(() => {\n    onMoleculeChange?.(molecules[currentIndex] || null);\n  }, [currentIndex, molecules, onMoleculeChange]);\n\n  const handleReplaceMolecule = useCallback(\n    (key, molfile) => {\n      dispatch({ type: SET_MOLECULE, molfile, key });\n    },\n    [dispatch],\n  );\n\n  const openMoleculeEditorHandler = useCallback(\n    (moleclue = null) => {\n      modal.show(<MoleculeStructureEditorModal selectedMolecule={moleclue} />, {\n        position: positions.TOP_CENTER,\n        width: 700,\n        height: 500,\n      });\n    },\n    [modal],\n  );\n\n  const moleculeIndexHandler = useCallback((index) => {\n    setCurrentIndex(index);\n  }, []);\n\n  return (\n    <div css={styles.panel}>\n      <MoleculePanelHeader\n        currentIndex={currentIndex}\n        molecules={molecules}\n        onOpenMoleculeEditor={() => openMoleculeEditorHandler()}\n        onMoleculeIndexChange={moleculeIndexHandler}\n        actionsOptions={actionsOptions}\n      />\n      <div css={styles.innerPanel}>\n        <div css={styles.molecule}>\n          <NextPrev\n            onChange={(slideIndex) => setCurrentIndex(slideIndex)}\n            defaultIndex={currentIndex}\n          >\n            {molecules && molecules.length > 0 ? (\n              molecules.map((mol: Molecule, index) => (\n                <div key={mol.key} css={styles.items}>\n                  <span css={styles.toolbar}>\n                    <MF mf={mol.mf} /> - {mol.mw?.toFixed(2)}\n                  </span>\n                  <div\n                    css={styles.slider}\n                    className=\"mol-svg-container\"\n                    onDoubleClick={() => openMoleculeEditorHandler(mol)}\n                    style={{\n                      backgroundColor:\n                        (index + 1) % 2 !== 0 ? '#fafafa' : 'white',\n                    }}\n                  >\n                    <ResponsiveChart>\n                      {({ height, width }) => {\n                        return (\n                          <OCLnmr\n                            OCL={OCL}\n                            id={`molSVG${index}`}\n                            width={width}\n                            height={height}\n                            molfile={mol.molfile || ''}\n                            setMolfile={(molfile) =>\n                              handleReplaceMolecule(mol.key, molfile)\n                            }\n                            setSelectedAtom={handleOnClickAtom}\n                            atomHighlightColor={\n                              currentDiaIDsToHighlight &&\n                              currentDiaIDsToHighlight.length > 0\n                                ? 'red'\n                                : '#FFD700'\n                            }\n                            atomHighlightOpacity={0.35}\n                            highlights={\n                              currentDiaIDsToHighlight &&\n                              currentDiaIDsToHighlight.length > 0\n                                ? currentDiaIDsToHighlight\n                                : assignedDiaIDsMerged\n                            }\n                            setHoverAtom={handleOnAtomHover}\n                          />\n                        );\n                      }}\n                    </ResponsiveChart>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div\n                css={styles.slider}\n                style={{ height: '100%' }}\n                onClick={() => openMoleculeEditorHandler()}\n              >\n                <span>Click to draw molecule</span>\n              </div>\n            )}\n          </NextPrev>\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nconst MemoizedMoleculePanel = memo(MoleculePanelInner);\nconst emptyData = { ranges: {}, zones: {} };\n\ninterface MoleculePanelProps {\n  onMoleculeChange?: (molecule: Molecule) => void;\n  children?: ReactElement;\n  actionsOptions?: MoleculeHeaderActionsOptions;\n}\n\nexport default function MoleculePanel({\n  onMoleculeChange,\n  children,\n  actionsOptions,\n}: MoleculePanelProps) {\n  const { molecules, displayerMode, activeTab } = useChartData();\n\n  const data = useSpectrum(emptyData);\n  const ranges: Ranges = (data as Datum1D)?.ranges || {};\n  const zones: Zones = (data as Datum2D)?.zones || {};\n\n  return (\n    <MemoizedMoleculePanel\n      {...{\n        molecules,\n        displayerMode,\n        activeTab,\n        ranges,\n        zones,\n        onMoleculeChange,\n        actionsOptions,\n      }}\n    >\n      {children}\n    </MemoizedMoleculePanel>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\n\nimport { REFERENCES } from '../../data/constants/References';\nimport { useDispatch } from '../context/DispatchContext';\nimport CloseButton from '../elements/CloseButton';\nimport Label from '../elements/Label';\nimport Select from '../elements/Select';\nimport FormikForm from '../elements/formik/FormikForm';\nimport FormikInput from '../elements/formik/FormikInput';\nimport { ALIGN_SPECTRA } from '../reducer/types/Types';\nimport Events from '../utility/Events';\n\nimport { ModalStyles } from './ModalStyle';\n\nconst baseList = [{ key: 1, value: 'manual', label: 'Manual' }];\n\ninterface AlignSpectraModalProps {\n  onClose?: (element?: string) => void;\n  nucleus: any;\n}\n\nfunction AlignSpectraModal({\n  onClose = () => null,\n  nucleus,\n}: AlignSpectraModalProps) {\n  const refForm = useRef<any>();\n  const dispatch = useDispatch();\n  const List = useMemo(() => {\n    const list = REFERENCES[nucleus]\n      ? Object.entries(REFERENCES[nucleus]).map(\n          (item) => ({\n            key: item[0],\n            value: item[0],\n            label: item[0],\n          }),\n          [],\n        )\n      : [];\n\n    return baseList.concat(list as any);\n  }, [nucleus]);\n  const handleSave = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n\n  const submitHandler = useCallback(\n    (values) => {\n      dispatch({ type: ALIGN_SPECTRA, payload: values });\n      onClose();\n    },\n    [dispatch, onClose],\n  );\n\n  useEffect(() => {\n    function handler(event: any) {\n      const [from, to] = event.range;\n      refForm.current.setValues({ ...refForm.current.values, from, to });\n    }\n\n    Events.on('brushEnd', handler);\n\n    return () => {\n      Events.off('brushEnd', handler);\n    };\n  }, []);\n\n  const optionChangeHandler = useCallback(\n    (id) => {\n      const value = REFERENCES[nucleus][id];\n      const { delta = 0, ...resValues } = value || { delta: 0 };\n      refForm.current.setValues({\n        ...refForm.current.values,\n        targetX: delta,\n        ...resValues,\n      });\n    },\n    [nucleus],\n  );\n\n  return (\n    <div css={ModalStyles}>\n      <div className=\"header handle\">\n        <span>Spectra calibration</span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"inner-content\" style={{ flex: 1 }}>\n        <FormikForm\n          ref={refForm}\n          initialValues={{ from: -1, to: 1, nbPeaks: 1, targetX: 0 }}\n          onSubmit={submitHandler}\n        >\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Options :</span>\n\n            <Select\n              data={List}\n              style={{ width: 270, height: 30, marginBottom: '20px' }}\n              onChange={optionChangeHandler}\n            />\n          </div>\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Range :</span>\n            <Label title=\"From : \">\n              <FormikInput name=\"from\" type=\"number\" />\n            </Label>\n            <Label title=\"To : \">\n              <FormikInput name=\"to\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\" margin-10\">\n            <Label className=\"custom-label\" title=\"Number of Peaks : \">\n              <FormikInput name=\"nbPeaks\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\" margin-10\">\n            <Label className=\"custom-label\" title=\"Target PPM :\">\n              <FormikInput name=\"targetX\" type=\"number\" />\n            </Label>\n          </div>\n        </FormikForm>\n      </div>\n      <div className=\"footer-container\">\n        <button type=\"button\" onClick={handleSave} className=\"btn\">\n          Done\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AlignSpectraModal;\n","export default function calculate(code: string, args = null) {\n  try {\n    return new Function('args', `return ${code}`)(args);\n  } catch (e) {\n    return e;\n  }\n}\n","/** @jsxImportSource @emotion/react */\nimport { useFormikContext } from 'formik';\nimport { memo, useEffect, useState } from 'react';\n\nimport Eval from '../../utility/Evaluate';\n\nconst initCode = `function run(data) {\n\n  return JSON.stringify(data,undefined, 2);\n  \n}(args);\n`;\n\ninterface MultipleAnalysisCodeEditorProps {\n  data: any;\n}\n\nfunction MultipleAnalysisCodeEditor({ data }: MultipleAnalysisCodeEditorProps) {\n  const { values, setFieldValue } = useFormikContext<any>();\n  const [code, setCode] = useState(values.code ? values.code : initCode);\n  const [result, setResult] = useState('');\n\n  useEffect(() => {\n    const evalResult = Eval(code, data);\n    if (evalResult instanceof Error) {\n      setResult(evalResult.message);\n    } else {\n      setFieldValue('code', code);\n      setResult(evalResult);\n    }\n  }, [code, data, setFieldValue]);\n\n  return (\n    <div style={{ marginTop: '20px' }}>\n      <textarea\n        value={code}\n        onChange={(event) => setCode(event.target.value)}\n        style={{\n          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n          fontSize: 12,\n          padding: '1em',\n          width: '90%',\n          backgroundColor: '#fcfcfc',\n          marginBottom: '10px',\n          minHeight: '100px',\n          overflow: 'auto',\n          maxHeight: '200px',\n        }}\n      />\n      <p style={{ marginBottom: '5px' }}>Result:</p>\n\n      <textarea\n        value={result}\n        readOnly\n        style={{\n          border: '0.55px solid #f3f3f3',\n          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n          fontSize: 12,\n          padding: '1em',\n          width: '90%',\n          marginBottom: '10px',\n          minHeight: '100px',\n          overflow: 'auto',\n          maxHeight: '200px',\n        }}\n      />\n    </div>\n  );\n}\n\nexport default memo(MultipleAnalysisCodeEditor);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { FaPlus } from 'react-icons/fa';\nimport * as Yup from 'yup';\n\nimport { COLUMNS_TYPES } from '../../../data/data1d/MultipleAnalysis';\nimport { useDispatch } from '../../context/DispatchContext';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikInput from '../../elements/formik/FormikInput';\nimport { SET_ANALYZE_SPECTRA_COLUMNS } from '../../reducer/types/Types';\n\nimport MultipleAnalysisCodeEditor from './MultipleAnalysisCodeEditor';\n\nconst styles = css`\n  width: 100%;\n  thead {\n    border-bottom: 1px solid lightgray;\n    background-color: #fafafa;\n    font-size: 12px;\n  }\n\n  td,\n  th {\n    padding: 3px 5px;\n    text-align: center;\n  }\n\n  .operation-col {\n    width: 30px;\n  }\n\n  .input {\n    height: 25px !important;\n    width: 100% !important;\n    margin: 0 !important;\n  }\n\n  .input.disbale {\n    background-color: #e8e8e8;\n    border-radius: 5px;\n  }\n\n  .label,\n  .index {\n    width: 100px;\n  }\n\n  .counter {\n    width: 50px;\n  }\n\n  .add {\n    background-color: transparent;\n    border: 0;\n    outline: none;\n    svg {\n      font-szie: 14px;\n      fill: green;\n    }\n  }\n`;\n\n// TODO: remove this hacky use of ref.\nfunction MultipleSpectraAnalysisPreferences({ data, onAfterSave }, ref: any) {\n  const dispatch = useDispatch();\n  const refForm = useRef<any>();\n  const [columns, setColumns] = useState({});\n\n  useImperativeHandle(ref, () => ({\n    saveSetting() {\n      refForm.current.submitForm();\n    },\n  }));\n\n  useEffect(() => {\n    const result = Object.keys(data.columns).reduce((acc, key) => {\n      acc[key] = { ...data.columns[key], tempKey: key };\n      return acc;\n    }, {});\n    setColumns(result);\n    refForm.current.setValues({ columns: result, code: data.code });\n  }, [data]);\n\n  const columnsKeys = useMemo(() => {\n    return Object.keys(columns);\n  }, [columns]);\n\n  const preferncesSchema = useMemo(() => {\n    function columnSchema() {\n      return columnsKeys.reduce((acc, key) => {\n        acc[key] = Yup.object().shape({\n          tempKey: Yup.string()\n            .required()\n            .test('unique', 'must be unique column name', (colmnName) => {\n              const formData = refForm.current.values.columns;\n              return (\n                Object.keys(formData).reduce((acc, colKey) => {\n                  if (formData[colKey].tempKey === colmnName) {\n                    (acc as any[]).push(colmnName);\n                  }\n                  return acc;\n                }, []).length === 1\n              );\n            }),\n          ...(columns[key].type === COLUMNS_TYPES.FORMULA\n            ? { formula: Yup.string().required() }\n            : {}),\n          index: Yup.string().required(),\n        });\n        return acc;\n      }, {});\n    }\n\n    return Yup.object().shape({\n      columns: Yup.object().shape(columnSchema()),\n    });\n  }, [columns, columnsKeys, refForm]);\n\n  const submitHandler = useCallback(\n    (values) => {\n      onAfterSave?.(true);\n      const result = Object.entries(values.columns).reduce(\n        (acc, [key, value]) => {\n          acc[key] = { ...columns[key], ...(value as any) };\n          return acc;\n        },\n        {},\n      );\n      dispatch({\n        type: SET_ANALYZE_SPECTRA_COLUMNS,\n        payload: { code: values.code, columns: result },\n      });\n    },\n    [columns, dispatch, onAfterSave],\n  );\n\n  const addNewColumn = useCallback((index) => {\n    setColumns((prevData) => {\n      return {\n        ...prevData,\n        [`temp${index}`]: {\n          tempKey: '',\n          type: 'FORMULA',\n          valueKey: 'value',\n          formula: '',\n          index: index,\n        },\n      };\n    });\n  }, []);\n\n  return (\n    <FormikForm\n      ref={refForm}\n      initialValues={{ columns, code: null }}\n      validationSchema={preferncesSchema}\n      onSubmit={submitHandler}\n    >\n      {columnsKeys && (\n        <table css={styles}>\n          <thead>\n            <tr>\n              <th className=\"counter\">#</th>\n              <th className=\"label\">Label</th>\n              <th>value</th>\n              <th className=\"index\">index</th>\n            </tr>\n          </thead>\n          <tbody>\n            {columnsKeys.map((key, index) => {\n              return (\n                <tr key={key}>\n                  <td className=\"counter\">{index + 1}</td>\n                  <td className=\"label\">\n                    <FormikInput\n                      key={key}\n                      name={`columns.${key}.tempKey`}\n                      value={columns[key].tempKey}\n                    />\n                  </td>\n                  <td>\n                    {columns[key].type === COLUMNS_TYPES.FORMULA ? (\n                      <FormikInput\n                        name={`columns.${key}.formula`}\n                        value={columns[key].formula}\n                      />\n                    ) : (\n                      <div className=\"input disbale\" />\n                    )}\n                  </td>\n                  <td className=\"index\">\n                    <FormikInput\n                      name={`columns.${key}.index`}\n                      value={columns[key].index}\n                    />\n                  </td>\n                  <td className=\"operation-col\">\n                    {columnsKeys.length === index + 1 && (\n                      <button\n                        className=\"add\"\n                        type=\"button\"\n                        onClick={() => addNewColumn(index + 1)}\n                      >\n                        <FaPlus />\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n      <MultipleAnalysisCodeEditor data={data} />\n    </FormikForm>\n  );\n}\n\nexport default forwardRef(MultipleSpectraAnalysisPreferences);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useLayoutEffect, useRef } from 'react';\n\nimport { DropDownListProps } from './DropDownButton';\n\nconst styles = {\n  container: css`\n    background-color: white;\n    position: absolute;\n    height: auto;\n    z-index: 99999999999999;\n    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n    border-radius: 10px;\n    margin-bottom: 20px;\n    overflow: hidden;\n  `,\n  ul: css`\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n  `,\n  li: css`\n    text-align: center;\n    color: black;\n    border-bottom: 0.55px solid #f9f9f9;\n    min-width: 150px;\n    width: fit-content;\n    &:last-of-type {\n      border-bottom: none;\n    }\n\n    &:hover {\n      background-color: gray;\n      color: white;\n    }\n  `,\n  label: css`\n    padding: 5px 20px;\n    display: block;\n  `,\n};\n\nfunction DropDownList({\n  data = [],\n  onSelect,\n  renderItem = null,\n}: DropDownListProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  useLayoutEffect(() => {\n    if (ref.current) {\n      const containerRect = ref.current?.getBoundingClientRect();\n      if (containerRect.right > window.innerWidth) {\n        ref.current.style.right = `${\n          containerRect.right - window.innerWidth\n        }px`;\n      }\n    }\n  }, []);\n  return (\n    <div css={styles.container} ref={ref}>\n      <ul css={styles.ul}>\n        {data.map((item, index) => (\n          <li css={styles.li} key={item.key} onClick={() => onSelect(index)}>\n            {renderItem?.(item) || <span css={styles.label}>{item.label}</span>}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default DropDownList;\n","/** @jsxImportSource @emotion/react */\nimport { css, CSSObject } from '@emotion/react';\nimport { ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { FaEllipsisH } from 'react-icons/fa';\n\nimport DropDownList from './DropDownList';\n\nconst styles = {\n  container: css`\n    position: relative;\n    padding: 2px;\n    border-radius: 10px;\n    width: max-content;\n    display: inline-block;\n    border: 0.55px solid lightgray;\n    font-size: 10px;\n  `,\n  button: css`\n    width: 100%;\n  `,\n};\n\nexport interface DropDownListItem {\n  key: string;\n  label: string;\n  index?: number;\n}\n\nexport interface DropDownListProps {\n  data: Array<DropDownListItem>;\n  onSelect: (index: number) => void;\n  renderItem?: ((item: DropDownListItem) => ReactNode) | null;\n}\n\ninterface DropDownButtonProps extends Omit<DropDownListProps, 'onSelect'> {\n  selectedKey?: string;\n  onSelect?: (item: DropDownListItem) => void;\n  formatSelectedValue?: (Item: DropDownListItem) => string;\n  style?: CSSObject;\n}\n\nfunction DropDownButton(props: DropDownButtonProps) {\n  const {\n    data,\n    selectedKey,\n    onSelect,\n    formatSelectedValue = (item) => item.label,\n    renderItem = null,\n    style,\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [item, setItem] = useState<DropDownListItem | null>();\n\n  const drop = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (selectedKey) {\n      const item = data.find((i) => i.key === selectedKey) || null;\n      setItem(item);\n    }\n  }, [selectedKey, data]);\n\n  useEffect(() => {\n    function handleClick() {\n      setOpen(false);\n    }\n    window.addEventListener('click', handleClick);\n    return () => window.removeEventListener('click', handleClick);\n  }, []);\n\n  const selectHandler = useCallback(\n    (index) => {\n      setItem(data[index]);\n      onSelect?.(data[index]);\n    },\n    [data, onSelect],\n  );\n\n  return (\n    <div className=\"dropdown\" ref={drop} css={[styles.container, style]}>\n      <button\n        css={styles.button}\n        type=\"button\"\n        onClick={(event) => {\n          setOpen((open) => !open);\n          event.stopPropagation();\n        }}\n      >\n        {!item ? <FaEllipsisH /> : formatSelectedValue(item)}\n      </button>\n      {open && (\n        <DropDownList\n          data={data}\n          onSelect={selectHandler}\n          renderItem={renderItem}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default DropDownButton;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback } from 'react';\n\nimport {\n  COLUMNS_TYPES,\n  COLUMNS_VALUES_KEYS,\n} from '../../../data/data1d/MultipleAnalysis';\nimport { useDispatch } from '../../context/DispatchContext';\nimport DeleteButton from '../../elements/Tab/DeleteButton';\nimport DropDownButton from '../../elements/dropDownButton/DropDownButton';\nimport { DELETE_ANALYZE_SPECTRA_RANGE } from '../../reducer/types/Types';\n\nconst styles = (styles) => css`\n  position: relative;\n\n  .delete {\n    position: absolute;\n    right: 0px;\n    top: 0px;\n  }\n\n  .container {\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    margin: 0;\n  }\n\n  .dropDown-container {\n    justify-content: flex-start;\n    align-items: flex-start;\n  }\n\n  .label-container {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    min-height: 45px;\n  }\n\n  .label {\n    text-align: center;\n  }\n\n  ${styles}\n`;\n\nconst columnsFilters: Array<{ key: string; label: string }> = [\n  { key: COLUMNS_VALUES_KEYS.RELATIVE, label: 'Relative' },\n  { key: COLUMNS_VALUES_KEYS.ABSOLUTE, label: 'Absolute' },\n  { key: COLUMNS_VALUES_KEYS.MIN, label: 'Min Intensity' },\n  { key: COLUMNS_VALUES_KEYS.MAX, label: 'Max Intensity' },\n];\n\ninterface ColumnHeaderProps {\n  charLabel: string;\n  rangeLabel: string;\n  onColumnFilter: (element: any) => void;\n  data: {\n    type: string;\n    valueKey: string;\n  };\n}\n\nfunction ColumnHeader({\n  charLabel,\n  rangeLabel,\n  data,\n  onColumnFilter,\n}: ColumnHeaderProps) {\n  const dispatch = useDispatch();\n\n  const deleteHandler = useCallback(() => {\n    dispatch({ type: DELETE_ANALYZE_SPECTRA_RANGE, colKey: charLabel });\n  }, [charLabel, dispatch]);\n\n  return (\n    <div css={styles}>\n      <div className=\"container\">\n        {data.type === COLUMNS_TYPES.NORMAL && (\n          <div className=\"dropDown-container\">\n            <DropDownButton\n              data={columnsFilters}\n              formatSelectedValue={(item) => item.label.substring(0, 3)}\n              selectedKey={data.valueKey}\n              onSelect={onColumnFilter}\n            />\n          </div>\n        )}\n        <div className=\"label-container\">\n          <span className=\"label\"> {charLabel}</span>\n          <span className=\"label\">{rangeLabel}</span>\n        </div>\n      </div>\n      <DeleteButton onDelete={deleteHandler} />\n    </div>\n  );\n}\n\nexport default ColumnHeader;\n","import lodashGet from 'lodash/get';\nimport { useMemo, memo, useCallback, Fragment } from 'react';\n\nimport { useDispatch } from '../../context/DispatchContext';\nimport ReactTable from '../../elements/ReactTable/ReactTable';\nimport addCustomColumn, {\n  CustomColumn,\n} from '../../elements/ReactTable/utility/addCustomColumn';\nimport { FILTER_SPECTRA_COLUMN } from '../../reducer/types/Types';\nimport Eval from '../../utility/Evaluate';\nimport { useFormatNumberByNucleus } from '../../utility/FormatNumber';\nimport NoTableData from '../extra/placeholder/NoTableData';\n\nimport ColumnHeader from './ColumnHeader';\n\ninterface MultipleSpectraAnalysisTableProps {\n  data: any;\n  activeTab: string;\n}\n\nfunction MultipleSpectraAnalysisTable({\n  data,\n  activeTab,\n}: MultipleSpectraAnalysisTableProps) {\n  const format = useFormatNumberByNucleus(activeTab);\n\n  const codeEvaluation = useMemo(() => {\n    const code = lodashGet(data, 'code', '');\n    return Eval(code, data);\n  }, [data]);\n\n  const dispatch = useDispatch();\n\n  const columnFilterHandler = useCallback(\n    (columnKey, valueKey) => {\n      dispatch({\n        type: FILTER_SPECTRA_COLUMN,\n        payload: {\n          columnKey,\n          valueKey,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const tableColumns = useMemo(() => {\n    const columns: CustomColumn[] = [\n      {\n        Header: '#',\n        index: 0,\n        Cell: ({ row }) => row.index + 1,\n      },\n    ];\n\n    function cellHandler(row, columnKey, valueKey) {\n      const value = row.original[columnKey][valueKey];\n      const result =\n        value instanceof Error ? (\n          <span style={{ color: 'red' }}>{value.message}</span>\n        ) : (\n          format(value)\n        );\n      return result;\n    }\n\n    function headerHandler(columnData, columnKey) {\n      return (\n        <ColumnHeader\n          charLabel={columnKey}\n          data={columnData}\n          onColumnFilter={(item) => columnFilterHandler(columnKey, item.key)}\n          rangeLabel={\n            columnData.from && columnData.to\n              ? `${format(columnData.from)} - ${format(columnData.to)}`\n              : ''\n          }\n        />\n      );\n    }\n\n    if (data.columns) {\n      Object.keys(data.columns).forEach((columnKey) => {\n        const { valueKey, index: columnIndex } = data.columns[columnKey];\n        addCustomColumn(columns, {\n          index: columnIndex + 1,\n          Cell: ({ row }) => cellHandler(row, columnKey, valueKey),\n          Header: () => headerHandler(data.columns[columnKey], columnKey),\n          id: columnKey,\n        });\n      });\n    }\n    return columns.sort((object1, object2) => object1.index - object2.index);\n  }, [columnFilterHandler, data.columns, format]);\n\n  return data.values && data.values.length > 0 ? (\n    <Fragment>\n      <ReactTable data={data.values} columns={tableColumns} />\n      <div\n        style={{\n          width: '100%',\n          padding: '10px',\n        }}\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={{ __html: codeEvaluation }}\n      />\n    </Fragment>\n  ) : (\n    <NoTableData />\n  );\n}\n\nexport default memo(MultipleSpectraAnalysisTable);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { SvgNmrOverlay } from 'cheminfo-font';\nimport { useCallback, useState, useRef, memo, useMemo } from 'react';\nimport { FaFileExport } from 'react-icons/fa';\nimport { IoPulseOutline } from 'react-icons/io5';\n\nimport {\n  getDataAsString,\n  SpectraAnalysis,\n} from '../../../data/data1d/MultipleAnalysis';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport Button from '../../elements/ButtonToolTip';\nimport ToggleButton from '../../elements/ToggleButton';\nimport { positions, useAlert } from '../../elements/popup/Alert';\nimport { useModal } from '../../elements/popup/Modal';\nimport AlignSpectraModal from '../../modal/AlignSpectraModal';\nimport { RESET_SELECTED_TOOL } from '../../reducer/types/Types';\nimport Events from '../../utility/Events';\nimport { copyTextToClipboard } from '../../utility/Export';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\nimport PreferencesHeader from '../header/PreferencesHeader';\n\nimport MultipleSpectraAnalysisPreferences from './MultipleSpectraAnalysisPreferences';\nimport MultipleSpectraAnalysisTable from './MultipleSpectraAnalysisTable';\n\ninterface MultipleSpectraAnalysisPanelInnerProps {\n  activeTab: string;\n  spectraAnalysis: SpectraAnalysis;\n}\n\nfunction MultipleSpectraAnalysisPanelInner({\n  activeTab,\n  spectraAnalysis,\n}: MultipleSpectraAnalysisPanelInnerProps) {\n  const [isFlipped, setFlipStatus] = useState(false);\n  const settingRef = useRef<any>();\n  const alert = useAlert();\n  const modal = useModal();\n  const dispatch = useDispatch();\n\n  const data = useMemo<any>(() => {\n    const {\n      values,\n      options: { columns, code },\n    } = spectraAnalysis[activeTab] || {\n      values: {},\n      options: { columns: {}, code: null },\n    };\n    return { values: Object.values(values), columns, code };\n  }, [activeTab, spectraAnalysis]);\n\n  const settingsPanelHandler = useCallback(() => {\n    setFlipStatus(!isFlipped);\n  }, [isFlipped]);\n\n  const saveSettingHandler = useCallback(() => {\n    settingRef.current.saveSetting();\n  }, []);\n\n  const afterSaveHandler = useCallback(() => {\n    setFlipStatus(false);\n  }, []);\n\n  const showTrackerHandler = useCallback((flag) => {\n    Events.emit('showYSpectraTrackers', flag);\n  }, []);\n  const openAlignSpectra = useCallback(() => {\n    dispatch({ type: RESET_SELECTED_TOOL });\n    modal.show(<AlignSpectraModal nucleus={activeTab} />, {\n      isBackgroundBlur: false,\n      position: positions.TOP_CENTER,\n      width: 500,\n    });\n  }, [activeTab, modal, dispatch]);\n\n  const copyToClipboardHandler = useCallback(() => {\n    void (async () => {\n      const data = getDataAsString(spectraAnalysis, activeTab);\n      const success = await copyTextToClipboard(data);\n      if (success) {\n        alert.success('Data copied to clipboard');\n      } else {\n        alert.error('copy to clipboard failed');\n      }\n    })();\n  }, [activeTab, alert, spectraAnalysis]);\n\n  return (\n    <div\n      css={[\n        tablePanelStyle,\n        isFlipped &&\n          css`\n            .table-container th {\n              position: relative;\n            }\n          `,\n      ]}\n    >\n      {!isFlipped && (\n        <DefaultPanelHeader\n          deleteToolTip=\"Delete All Peaks\"\n          showSettingButton\n          canDelete={false}\n          onSettingClick={settingsPanelHandler}\n        >\n          <Button\n            popupTitle=\"Copy To Clipboard\"\n            // style={styles.button}\n            onClick={copyToClipboardHandler}\n          >\n            <FaFileExport />\n          </Button>\n          <Button\n            popupTitle=\"Spectra calibration\"\n            // style={styles.button}\n            onClick={openAlignSpectra}\n          >\n            <SvgNmrOverlay style={{ fontSize: '18px' }} />\n          </Button>\n          <ToggleButton\n            popupTitle=\"Y Spectra Tracker\"\n            popupPlacement=\"right\"\n            onClick={showTrackerHandler}\n          >\n            <IoPulseOutline />\n          </ToggleButton>\n        </DefaultPanelHeader>\n      )}\n      {isFlipped && (\n        <PreferencesHeader\n          onSave={saveSettingHandler}\n          onClose={settingsPanelHandler}\n        />\n      )}\n      <div className=\"inner-container\">\n        {!isFlipped ? (\n          <MultipleSpectraAnalysisTable data={data} activeTab={activeTab} />\n        ) : (\n          <MultipleSpectraAnalysisPreferences\n            data={data}\n            onAfterSave={afterSaveHandler}\n            ref={settingRef}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst MemoizedMultipleSpectraAnalysisPanel = memo(\n  MultipleSpectraAnalysisPanelInner,\n);\n\nexport default function MultipleSpectraAnalysisPanel() {\n  const { activeTab, spectraAnalysis, displayerKey } = useChartData();\n\n  if (!activeTab) {\n    return <div />;\n  }\n\n  return (\n    <MemoizedMultipleSpectraAnalysisPanel\n      {...{ activeTab, spectraAnalysis, displayerKey }}\n    />\n  );\n}\n","import {\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  CSSProperties,\n  memo,\n  forwardRef,\n} from 'react';\n\nimport { usePreferences } from '../../context/PreferencesContext';\nimport IsotopesViewer from '../../elements/IsotopesViewer';\nimport FormikColumnFormatField from '../../elements/formik/FormikColumnFormatField';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport { useAlert } from '../../elements/popup/Alert';\nimport useNucleus from '../../hooks/useNucleus';\nimport { getValue as getValueByKeyPath } from '../../utility/LocalStorage';\nimport { peaksDefaultValues } from '../extra/preferences/defaultValues';\n\nconst styles: Record<\n  'container' | 'groupContainer' | 'row' | 'header' | 'inputLabel' | 'input',\n  CSSProperties\n> = {\n  container: {\n    padding: 10,\n    backgroundColor: '#f1f1f1',\n    height: '100%',\n    overflowY: 'auto',\n  },\n  groupContainer: {\n    padding: '5px',\n    borderRadius: '5px',\n    margin: '10px 0px',\n    backgroundColor: 'white',\n  },\n  row: {\n    display: 'flex',\n    margin: '5px 0px',\n  },\n  header: {\n    borderBottom: '1px solid #e8e8e8',\n    paddingBottom: '5px',\n    fontWeight: 'bold',\n    color: '#4a4a4a',\n  },\n  inputLabel: {\n    flex: 2,\n    fontSize: '11px',\n    fontWeight: 'bold',\n    color: '#232323',\n  },\n  input: {\n    width: '30%',\n    textAlign: 'center',\n  },\n};\n\nconst formatFields: Array<{\n  id: number;\n  label: string;\n  checkController: string;\n  formatController: string;\n}> = [\n  {\n    id: 1,\n    label: 'Peak Number :',\n    checkController: 'showPeakNumber',\n    formatController: 'peakNumberFormat',\n  },\n  {\n    id: 2,\n    label: 'Peak Index : ',\n    checkController: 'showPeakIndex',\n    formatController: 'peakIndexFormat',\n  },\n  {\n    id: 3,\n    label: 'δ (ppm) :',\n    checkController: 'showDeltaPPM',\n    formatController: 'deltaPPMFormat',\n  },\n  {\n    id: 4,\n    label: 'δ (Hz) :',\n    checkController: 'showDeltaHz',\n    formatController: 'deltaHzFormat',\n  },\n  {\n    id: 5,\n    label: 'Peak Width',\n    checkController: 'showPeakWidth',\n    formatController: 'peakWidthFormat',\n  },\n  {\n    id: 6,\n    label: 'Intensity :',\n    checkController: 'showIntensity',\n    formatController: 'intensityFormat',\n  },\n];\ninterface PeaksPreferencesInnerProps {\n  nucleus: Array<string>;\n  preferences: any;\n  innerRef: any;\n}\n\nfunction PeaksPreferencesInner({\n  nucleus,\n  preferences,\n  innerRef,\n}: PeaksPreferencesInnerProps) {\n  const alert = useAlert();\n  const formRef = useRef<any>(null);\n\n  const updateValues = useCallback(() => {\n    if (nucleus) {\n      const defaultValues = nucleus.reduce((acc, nucleusLabel) => {\n        acc[nucleusLabel] = peaksDefaultValues;\n        return acc;\n      }, {});\n      const peaksPreferences = getValueByKeyPath(\n        preferences.current,\n        `formatting.panels.peaks`,\n      );\n      formRef.current.setValues(\n        peaksPreferences ? peaksPreferences : defaultValues,\n      );\n    }\n  }, [nucleus, preferences]);\n\n  useEffect(() => {\n    updateValues();\n  }, [updateValues]);\n\n  const saveHandler = useCallback(\n    (values) => {\n      preferences.dispatch({\n        type: 'SET_PANELS_PREFERENCES',\n        payload: { key: 'peaks', value: values },\n      });\n      alert.success('Peaks preferences saved successfully');\n    },\n    [alert, preferences],\n  );\n\n  useImperativeHandle(\n    innerRef,\n    () => ({\n      saveSetting: () => {\n        formRef.current.submitForm();\n      },\n    }),\n    [],\n  );\n\n  return (\n    <div style={styles.container}>\n      <FormikForm onSubmit={saveHandler} ref={formRef}>\n        {nucleus?.map((nucleusLabel) => (\n          <div key={nucleusLabel} style={styles.groupContainer}>\n            <IsotopesViewer style={styles.header} value={nucleusLabel} />\n            {formatFields.map((field) => (\n              <FormikColumnFormatField\n                key={field.id}\n                label={field.label}\n                checkControllerName={`${nucleusLabel}.${field.checkController}`}\n                formatControllerName={`${nucleusLabel}.${field.formatController}`}\n                hideFormat={field.formatController === 'deltaPPMFormat'}\n              />\n            ))}\n          </div>\n        ))}\n      </FormikForm>\n    </div>\n  );\n}\n\nconst MemoizedPeaksPreferences = memo(PeaksPreferencesInner);\n\n// TODO: remove this hacky use of ref.\nfunction PeaksPreferences(props, ref: any) {\n  const nucleus = useNucleus();\n  const preferences = usePreferences();\n  return (\n    <MemoizedPeaksPreferences innerRef={ref} {...{ nucleus, preferences }} />\n  );\n}\n\nexport default forwardRef(PeaksPreferences);\n","import { useCallback, useMemo, memo } from 'react';\nimport { FaRegTrashAlt } from 'react-icons/fa';\n\nimport { useDispatch } from '../../context/DispatchContext';\nimport EditableColumn from '../../elements/EditableColumn';\nimport ReactTable from '../../elements/ReactTable/ReactTable';\nimport addCustomColumn, {\n  CustomColumn,\n} from '../../elements/ReactTable/utility/addCustomColumn';\nimport {\n  DELETE_PEAK_NOTATION,\n  SHIFT_SPECTRUM,\n} from '../../reducer/types/Types';\nimport formatNumber, {\n  useFormatNumberByNucleus,\n} from '../../utility/FormatNumber';\nimport { getValue } from '../../utility/LocalStorage';\nimport NoTableData from '../extra/placeholder/NoTableData';\nimport { peaksDefaultValues } from '../extra/preferences/defaultValues';\n\ninterface PeaksTableProps {\n  activeTab: string;\n  preferences: any;\n  data: any;\n  info: {\n    nucleus: string;\n  };\n}\n\nfunction PeaksTable({ activeTab, preferences, data, info }: PeaksTableProps) {\n  const dispatch = useDispatch();\n  const format = useFormatNumberByNucleus(info.nucleus);\n\n  const deletePeakHandler = useCallback(\n    (e, row) => {\n      e.preventDefault();\n      e.stopPropagation();\n      const params = row.original;\n      dispatch({\n        type: DELETE_PEAK_NOTATION,\n        data: { id: params.id, xIndex: params.xIndex },\n      });\n    },\n    [dispatch],\n  );\n\n  const peaksPreferences = useMemo(\n    () =>\n      getValue(\n        preferences.current,\n        `formatting.panels.peaks.[${activeTab}]`,\n        peaksDefaultValues,\n      ),\n    [activeTab, preferences],\n  );\n\n  const saveDeltaPPMRefsHandler = useCallback(\n    (event, row) => {\n      const shiftValue = parseFloat(event.target.value) - parseFloat(row.value);\n      dispatch({ type: SHIFT_SPECTRUM, shiftValue });\n    },\n    [dispatch],\n  );\n  const COLUMNS: (CustomColumn & { showWhen: string })[] = useMemo(\n    () => [\n      {\n        showWhen: 'showPeakNumber',\n        index: 1,\n        Header: '#',\n        Cell: ({ row }) => row.index + 1,\n        style: { width: '1%', maxWidth: '40px', minWidth: '40px' },\n      },\n      {\n        showWhen: 'showPeakIndex',\n        index: 2,\n        Header: 'index',\n        accessor: (row) =>\n          formatNumber(row.xIndex, peaksPreferences.peakIndexFormat),\n      },\n      {\n        showWhen: 'showDeltaPPM',\n        index: 3,\n        Header: 'δ (ppm)',\n        accessor: (row) => format(row.value),\n        Cell: ({ row }) => (\n          <EditableColumn\n            value={format(row.original.value)}\n            onSave={(event) => saveDeltaPPMRefsHandler(event, row.original)}\n            type=\"number\"\n          />\n        ),\n      },\n      {\n        showWhen: 'showDeltaHz',\n        index: 4,\n        Header: 'δ (Hz)',\n        accessor: (row) =>\n          formatNumber(row.valueHz, peaksPreferences.deltaHzFormat),\n      },\n      {\n        showWhen: 'showIntensity',\n        index: 5,\n        Header: 'Intensity',\n        style: { maxWidth: '80px' },\n        accessor: (row) =>\n          formatNumber(row.intensity, peaksPreferences.intensityFormat),\n      },\n      {\n        showWhen: 'showPeakWidth',\n        index: 6,\n        Header: 'Peak Width',\n        accessor: (row) =>\n          formatNumber(row.peakWidth, peaksPreferences.peakWidthFormat),\n      },\n    ],\n    [format, peaksPreferences, saveDeltaPPMRefsHandler],\n  );\n\n  const initialColumns: CustomColumn[] = useMemo(\n    () => [\n      {\n        index: 20,\n        Header: '',\n        style: {\n          width: '1%',\n          maxWidth: '24px',\n          minWidth: '24px',\n        },\n        id: 'delete-button',\n        Cell: ({ row }) => (\n          <button\n            type=\"button\"\n            className=\"delete-button\"\n            onClick={(e) => deletePeakHandler(e, row)}\n          >\n            <FaRegTrashAlt />\n          </button>\n        ),\n      },\n    ],\n    [deletePeakHandler],\n  );\n\n  const tableColumns = useMemo(() => {\n    let columns = [...initialColumns];\n    for (const col of COLUMNS) {\n      const { showWhen, ...colParams } = col;\n      if (peaksPreferences[showWhen]) {\n        addCustomColumn(columns, colParams);\n      }\n    }\n\n    return columns.sort((object1, object2) => object1.index - object2.index);\n  }, [COLUMNS, initialColumns, peaksPreferences]);\n\n  return data && data.length > 0 ? (\n    <ReactTable\n      data={data}\n      columns={tableColumns}\n      approxItemHeight={20}\n      enableVirtualScroll\n    />\n  ) : (\n    <NoTableData />\n  );\n}\n\nexport default memo(PeaksTable);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useMemo, useState, useRef, memo } from 'react';\n\nimport { Datum1D, Info1D, Peaks } from '../../../data/types/data1d';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { usePreferences } from '../../context/PreferencesContext';\nimport { useModal } from '../../elements/popup/Modal';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport { DELETE_PEAK_NOTATION } from '../../reducer/types/Types';\nimport { useFormatNumberByNucleus } from '../../utility/FormatNumber';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\nimport PreferencesHeader from '../header/PreferencesHeader';\n\nimport PeaksPreferences from './PeaksPreferences';\nimport PeaksTable from './PeaksTable';\n\ninterface PeaksPanelInnerProps {\n  peaks: Peaks;\n  xDomain: number[];\n  activeTab: string;\n  preferences: any;\n  info: Info1D;\n}\n\nfunction PeaksPanelInner({\n  peaks,\n  info,\n  xDomain,\n  activeTab,\n  preferences,\n}: PeaksPanelInnerProps) {\n  const [filterIsActive, setFilterIsActive] = useState(false);\n  const [isFlipped, setFlipStatus] = useState(false);\n  const format = useFormatNumberByNucleus(info.nucleus);\n\n  const dispatch = useDispatch();\n  const modal = useModal();\n\n  const settingRef = useRef<any>();\n\n  const yesHandler = useCallback(() => {\n    dispatch({ type: DELETE_PEAK_NOTATION, data: null });\n  }, [dispatch]);\n\n  const handleDeleteAll = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All records will be deleted, Are You sure?',\n      buttons: [{ text: 'Yes', handler: yesHandler }, { text: 'No' }],\n    });\n  }, [modal, yesHandler]);\n\n  const settingsPanelHandler = useCallback(() => {\n    setFlipStatus(!isFlipped);\n  }, [isFlipped]);\n\n  const saveSettingHandler = useCallback(() => {\n    settingRef.current.saveSetting();\n    setFlipStatus(false);\n  }, []);\n\n  const handleOnFilter = useCallback(() => {\n    setFilterIsActive(!filterIsActive);\n  }, [filterIsActive]);\n\n  const filteredPeaks = useMemo(() => {\n    function isInRange(value) {\n      const factor = 100000;\n      return (\n        value * factor >= xDomain[0] * factor &&\n        value * factor <= xDomain[1] * factor\n      );\n    }\n    if (peaks?.values) {\n      const _peaks = filterIsActive\n        ? peaks.values.filter((peak) => isInRange(peak.x))\n        : peaks.values;\n\n      return _peaks\n        .map((peak) => {\n          const value = Number(format(peak.x));\n          return {\n            value: value,\n            valueHz: info?.originFrequency\n              ? Number(value) * info.originFrequency\n              : '',\n            id: peak.id,\n            intensity: peak.y,\n            peakWidth: peak.width ? peak.width : '',\n            isConstantlyHighlighted: isInRange(value),\n          };\n        })\n        .sort((prev, next) => prev.value - next.value);\n    }\n\n    return [];\n  }, [filterIsActive, format, info, peaks, xDomain]);\n\n  return (\n    <div\n      css={[\n        tablePanelStyle,\n        isFlipped &&\n          css`\n            .table-container {\n              table,\n              th {\n                position: relative !important;\n              }\n            }\n          `,\n      ]}\n    >\n      {!isFlipped && (\n        <DefaultPanelHeader\n          counter={peaks?.values?.length}\n          onDelete={handleDeleteAll}\n          deleteToolTip=\"Delete All Peaks\"\n          onFilter={handleOnFilter}\n          filterToolTip={\n            filterIsActive ? 'Show all peaks' : 'Hide peaks out of view'\n          }\n          filterIsActive={filterIsActive}\n          counterFiltered={filteredPeaks.length}\n          showSettingButton\n          onSettingClick={settingsPanelHandler}\n        />\n      )}\n      {isFlipped && (\n        <PreferencesHeader\n          onSave={saveSettingHandler}\n          onClose={settingsPanelHandler}\n        />\n      )}\n      <div className=\"inner-container\">\n        {!isFlipped ? (\n          <PeaksTable\n            data={filteredPeaks}\n            activeTab={activeTab}\n            preferences={preferences}\n            info={info}\n          />\n        ) : (\n          <PeaksPreferences ref={settingRef} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst MemoizedPeaksPanel = memo(PeaksPanelInner);\n\nconst emptyData = { peaks: null, info: {} };\n\nexport default function PeaksPanel() {\n  const { xDomain, activeTab } = useChartData();\n  const { peaks, info } = useSpectrum(emptyData) as Datum1D;\n  const preferences = usePreferences();\n\n  return (\n    <MemoizedPeaksPanel {...{ peaks, info, xDomain, activeTab, preferences }} />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FaCopy } from 'react-icons/fa';\n\nimport CloseButton from '../elements/CloseButton';\n\nconst styles = css`\n  overflow: auto;\n  width: 400px;\n  .innerContainer {\n    padding: 5px;\n    width: 100%;\n    height: 180px;\n    border: none;\n  }\n\n  .mainButtonsContainer {\n    padding: 5px 0px;\n    border-bottom: 0.55px solid #ebebeb;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  button {\n    background-color: transparent;\n    border: none;\n    padding: 0 5px;\n  }\n\n  button:disabled {\n    opacity: 0.6;\n  }\n`;\n\ninterface CopyClipboardModalProps {\n  text: string;\n  onClose: () => void;\n  onCopyClick: (text: string) => void;\n}\n\nfunction CopyClipboardModal({\n  text,\n  onClose,\n  onCopyClick,\n}: CopyClipboardModalProps) {\n  return (\n    <div css={styles}>\n      <div className=\"mainButtonsContainer handle\">\n        <button type=\"button\" onClick={() => onCopyClick(text)}>\n          <FaCopy />\n        </button>\n\n        <CloseButton onClick={onClose} />\n      </div>\n      <div\n        className=\"innerContainer\"\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={{ __html: text }}\n      />\n    </div>\n  );\n}\n\nexport default CopyClipboardModal;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { SvgNmrIntegrate, SvgNmrSum } from 'cheminfo-font';\nimport lodashGet from 'lodash/get';\nimport { rangesToACS } from 'nmr-processing';\nimport { useCallback } from 'react';\nimport { FaFileExport, FaUnlink, FaSitemap, FaChartBar } from 'react-icons/fa';\nimport { ImLink } from 'react-icons/im';\n\nimport { useAssignmentData } from '../../assignment';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { usePreferences } from '../../context/PreferencesContext';\nimport Button from '../../elements/ButtonToolTip';\nimport ToggleButton from '../../elements/ToggleButton';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { useModal } from '../../elements/popup/Modal';\nimport CopyClipboardModal from '../../modal/CopyClipboardModal';\nimport ChangeSumModal from '../../modal/changeSum/ChangeSumModal';\nimport {\n  CHANGE_RANGES_SUM_FLAG,\n  CHANGE_RANGE_SUM,\n  DELETE_RANGE,\n  SHOW_J_GRAPH,\n  SHOW_MULTIPLICTY_TREES,\n  SHOW_RANGES_INTEGRALS,\n} from '../../reducer/types/Types';\nimport { copyHTMLToClipboard } from '../../utility/Export';\nimport { getNumberOfDecimals } from '../../utility/FormatNumber';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\n\nconst style = css`\n  .btn {\n    background-color: transparent;\n    border: none;\n  }\n\n  .icon svg {\n    font-size: 12px;\n  }\n\n  .preview-publication-icon svg {\n    font-size: 13px;\n  }\n\n  button {\n    margin-right: 2px;\n  }\n`;\n\nfunction RangesHeader({\n  ranges,\n  info,\n  onUnlink,\n  onFilterActivated,\n  onSettingClick,\n  isFilterActive,\n  filterCounter,\n  showMultiplicityTrees,\n  showJGraph,\n  showRangesIntegrals,\n}) {\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const alert = useAlert();\n  const preferences = usePreferences();\n  const assignmentData = useAssignmentData();\n\n  const currentSum = lodashGet(ranges, 'options.sum', null);\n\n  const changeRangesSumHandler = useCallback(\n    (value) => {\n      dispatch({ type: CHANGE_RANGE_SUM, value });\n      modal.close();\n    },\n    [dispatch, modal],\n  );\n\n  const showChangeRangesSumModal = useCallback(() => {\n    modal.show(\n      <ChangeSumModal\n        onClose={() => modal.close()}\n        onSave={changeRangesSumHandler}\n        header={\n          currentSum\n            ? `Set new Ranges Sum (Current: ${Number(currentSum).toFixed(2)})`\n            : 'Set new Ranges Sum'\n        }\n        sumOptions={ranges?.options}\n      />,\n    );\n  }, [changeRangesSumHandler, currentSum, modal, ranges?.options]);\n\n  const removeAssignments = useCallback(() => {\n    onUnlink();\n  }, [onUnlink]);\n\n  const handleOnRemoveAssignments = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All assignments will be removed. Are you sure?',\n      buttons: [{ text: 'Yes', handler: removeAssignments }, { text: 'No' }],\n    });\n  }, [removeAssignments, modal]);\n\n  const handleDeleteAll = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All ranges will be deleted. Are You sure?',\n      buttons: [\n        {\n          text: 'Yes',\n          handler: () => {\n            dispatch({\n              type: DELETE_RANGE,\n              payload: { data: { assignmentData } },\n            });\n          },\n        },\n        { text: 'No' },\n      ],\n    });\n  }, [assignmentData, dispatch, modal]);\n\n  const handleSetShowMultiplicityTrees = useCallback(() => {\n    dispatch({ type: SHOW_MULTIPLICTY_TREES });\n  }, [dispatch]);\n\n  const handleShowIntegrals = useCallback(() => {\n    dispatch({ type: SHOW_RANGES_INTEGRALS });\n  }, [dispatch]);\n\n  const handleShowJGraph = useCallback(() => {\n    dispatch({ type: SHOW_J_GRAPH });\n  }, [dispatch]);\n\n  const saveToClipboardHandler = useCallback(\n    (value) => {\n      void (async () => {\n        const success = await copyHTMLToClipboard(value);\n        if (success) {\n          alert.success('Data copied to clipboard');\n        } else {\n          alert.error('copy to clipboard failed');\n        }\n      })();\n    },\n    [alert],\n  );\n\n  const saveAsHTMLHandler = useCallback(() => {\n    const { originFrequency: observedFrequency, nucleus } = info;\n    const format = lodashGet(\n      preferences.current,\n      `formatting.nucleusByKey[${nucleus.toLowerCase()}]`,\n    );\n    const nbDecimalDelta = getNumberOfDecimals(format.ppm);\n    const nbDecimalJ = getNumberOfDecimals(format.hz);\n\n    const result = rangesToACS(ranges.values, {\n      nucleus, // '19f'\n      nbDecimalDelta, // 2\n      nbDecimalJ, // 1\n      observedFrequency, //400\n    });\n    modal.show(\n      <CopyClipboardModal\n        text={result}\n        onCopyClick={saveToClipboardHandler}\n        onClose={() => modal.close()}\n      />,\n      {},\n    );\n  }, [info, modal, preferences, ranges.values, saveToClipboardHandler]);\n\n  const changeSumConstantFlagHandler = useCallback(\n    (flag) => {\n      dispatch({\n        type: CHANGE_RANGES_SUM_FLAG,\n        payload: flag,\n      });\n    },\n    [dispatch],\n  );\n\n  return (\n    <div css={style}>\n      <DefaultPanelHeader\n        counter={ranges?.values?.length}\n        onDelete={handleDeleteAll}\n        deleteToolTip=\"Delete All Ranges\"\n        onFilter={onFilterActivated}\n        filterToolTip={\n          isFilterActive ? 'Show all ranges' : 'Hide ranges out of view'\n        }\n        filterIsActive={isFilterActive}\n        counterFiltered={filterCounter}\n        showSettingButton\n        onSettingClick={onSettingClick}\n      >\n        <Button\n          popupTitle=\"Preview publication string\"\n          popupPlacement=\"right\"\n          onClick={saveAsHTMLHandler}\n          className=\"btn preview-publication-icon\"\n        >\n          <FaFileExport />\n        </Button>\n        <Button\n          popupTitle={\n            currentSum\n              ? `Change Ranges Sum (${Number(currentSum).toFixed(2)})`\n              : 'Change Ranges Sum'\n          }\n          popupPlacement=\"right\"\n          onClick={showChangeRangesSumModal}\n          className=\"btn icon\"\n        >\n          <SvgNmrSum />\n        </Button>\n        <Button\n          popupTitle=\"Remove all Assignments\"\n          popupPlacement=\"right\"\n          onClick={handleOnRemoveAssignments}\n          disabled={!ranges || !ranges.values || ranges.values.length === 0}\n          className=\"btn icon\"\n        >\n          <FaUnlink />\n        </Button>\n        <ToggleButton\n          popupTitle={\n            showMultiplicityTrees\n              ? 'Hide Multiplicity Trees in Spectrum'\n              : 'Show Multiplicity Trees in Spectrum'\n          }\n          popupPlacement=\"right\"\n          onClick={handleSetShowMultiplicityTrees}\n          disabled={!ranges || !ranges.values || ranges.values.length === 0}\n        >\n          <FaSitemap style={{ pointerEvents: 'none', fontSize: '12px' }} />\n        </ToggleButton>\n        <ToggleButton\n          popupTitle={showJGraph ? 'Hide J Graph' : 'Show J Graph'}\n          popupPlacement=\"right\"\n          onClick={handleShowJGraph}\n          disabled={!ranges || !ranges.values || ranges.values.length === 0}\n        >\n          <FaChartBar style={{ pointerEvents: 'none', fontSize: '12px' }} />\n        </ToggleButton>\n        <ToggleButton\n          popupTitle={showRangesIntegrals ? 'Hide integrals' : 'Show integrals'}\n          popupPlacement=\"right\"\n          onClick={handleShowIntegrals}\n          defaultValue={showRangesIntegrals}\n          disabled={!ranges || !ranges.values || ranges.values.length === 0}\n        >\n          <SvgNmrIntegrate\n            style={{ pointerEvents: 'none', fontSize: '12px' }}\n          />\n        </ToggleButton>\n\n        <ToggleButton\n          className=\"icon\"\n          popupTitle=\"fix integral values\"\n          popupPlacement=\"right\"\n          onClick={changeSumConstantFlagHandler}\n        >\n          <ImLink />\n        </ToggleButton>\n      </DefaultPanelHeader>\n    </div>\n  );\n}\n\nexport default RangesHeader;\n","import {\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  memo,\n  CSSProperties,\n  forwardRef,\n} from 'react';\n\nimport { usePreferences } from '../../context/PreferencesContext';\nimport IsotopesViewer from '../../elements/IsotopesViewer';\nimport Label from '../../elements/Label';\nimport FormikColumnFormatField from '../../elements/formik/FormikColumnFormatField';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikInput from '../../elements/formik/FormikInput';\nimport { useAlert } from '../../elements/popup/Alert';\nimport useNucleus from '../../hooks/useNucleus';\nimport { getValue as getValueByKeyPath } from '../../utility/LocalStorage';\nimport { getRangeDefaultValues } from '../extra/preferences/defaultValues';\n\nconst styles: Record<\n  | 'container'\n  | 'groupContainer'\n  | 'row'\n  | 'header'\n  | 'inputLabel'\n  | 'inputWrapper',\n  CSSProperties\n> = {\n  container: {\n    padding: 10,\n    backgroundColor: '#f1f1f1',\n    height: '100%',\n    overflowY: 'auto',\n  },\n  groupContainer: {\n    padding: '5px',\n    borderRadius: '5px',\n    margin: '10px 0px',\n    backgroundColor: 'white',\n  },\n  row: {\n    display: 'flex',\n    margin: '5px 0px',\n  },\n  header: {\n    borderBottom: '1px solid #e8e8e8',\n    paddingBottom: '5px',\n    fontWeight: 'bold',\n    color: '#4a4a4a',\n  },\n  inputLabel: {\n    flex: 2,\n  },\n\n  inputWrapper: {\n    width: '100px',\n    flex: '4',\n    borderRadius: '5px',\n  },\n};\n\nconst formatFields = [\n  {\n    id: 1,\n    label: 'From :',\n    checkController: 'showFrom',\n    formatController: 'fromFormat',\n  },\n  {\n    id: 2,\n    label: 'To :',\n    checkController: 'showTo',\n    formatController: 'toFormat',\n  },\n  {\n    id: 3,\n    label: 'Absolute :',\n    checkController: 'showAbsolute',\n    formatController: 'absoluteFormat',\n  },\n  {\n    id: 4,\n    label: 'Relative :',\n    checkController: 'showRelative',\n    formatController: 'relativeFormat',\n  },\n];\n\ninterface RangesPreferencesInnerProps {\n  nucleus: Array<string>;\n  preferences: any;\n  innerRef: any;\n}\n\nfunction RangesPreferencesInner({\n  nucleus,\n  preferences,\n  innerRef,\n}: RangesPreferencesInnerProps) {\n  const alert = useAlert();\n  const formRef = useRef<any>();\n\n  const updateValues = useCallback(() => {\n    if (nucleus) {\n      const defaultValues = nucleus.reduce((acc, nucleusLabel) => {\n        acc[nucleusLabel] = getRangeDefaultValues(nucleusLabel);\n        return acc;\n      }, {});\n      const rangesPreferences = getValueByKeyPath(\n        preferences.current,\n        `formatting.panels.ranges`,\n      );\n      formRef.current.setValues(\n        rangesPreferences ? rangesPreferences : defaultValues,\n      );\n    }\n  }, [nucleus, preferences]);\n\n  useEffect(() => {\n    updateValues();\n  }, [updateValues]);\n\n  const saveHandler = useCallback(\n    (values) => {\n      preferences.dispatch({\n        type: 'SET_PANELS_PREFERENCES',\n        payload: { key: 'ranges', value: values },\n      });\n      alert.success('ranges preferences saved successfully');\n    },\n    [alert, preferences],\n  );\n\n  useImperativeHandle(\n    innerRef,\n    () => ({\n      saveSetting: () => {\n        formRef.current.submitForm();\n      },\n    }),\n    [],\n  );\n\n  return (\n    <div style={styles.container}>\n      <FormikForm onSubmit={saveHandler} ref={formRef}>\n        {nucleus?.map((nucleusLabel) => (\n          <div key={nucleusLabel} style={styles.groupContainer}>\n            <IsotopesViewer style={styles.header} value={nucleusLabel} />\n            {formatFields.map((field) => (\n              <FormikColumnFormatField\n                key={field.id}\n                label={field.label}\n                checkControllerName={`${nucleusLabel}.${field.checkController}`}\n                formatControllerName={`${nucleusLabel}.${field.formatController}`}\n              />\n            ))}\n            <Label\n              title=\"J Graph tolerance (Hz) :\"\n              style={{ label: styles.inputLabel, wrapper: styles.inputWrapper }}\n            >\n              <FormikInput\n                name={`${nucleusLabel}.jGraphTolerance`}\n                type=\"number\"\n              />\n            </Label>\n          </div>\n        ))}\n      </FormikForm>\n    </div>\n  );\n}\n\nconst MemoizedRangesPreferences = memo(RangesPreferencesInner);\n\n// TODO: remove this hacky use of ref.\nfunction RangesPreferences(prop, ref: any) {\n  const nucleus = useNucleus();\n\n  const preferences = usePreferences();\n  return (\n    <MemoizedRangesPreferences\n      innerRef={ref}\n      {...{\n        preferences,\n        nucleus,\n      }}\n    />\n  );\n}\n\nexport default forwardRef(RangesPreferences);\n","import lodashGet from 'lodash/get';\nimport { useCallback, useMemo, useState } from 'react';\n\nexport enum SortType {\n  ASCENDING = 'asc',\n  DESCENDING = 'desc',\n  ORIGINAL = 'original',\n}\n\ninterface SortConfig {\n  key: string;\n  direction: SortType;\n}\n\nexport default function useTableSortBy(items, config = null) {\n  const [sortConfig, setSortConfig] = useState<SortConfig | null>(config);\n  const sortedItems = useMemo(() => {\n    const sortableItems = items.slice();\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (sortConfig.direction === SortType.ASCENDING) {\n          return (\n            lodashGet(a, sortConfig.key, 0) - lodashGet(b, sortConfig.key, 0)\n          );\n        } else if (sortConfig.direction === SortType.DESCENDING) {\n          return (\n            lodashGet(b, sortConfig.key, 0) - lodashGet(a, sortConfig.key, 0)\n          );\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const sortHandler = useCallback(\n    (event) => {\n      const key = event.currentTarget?.id;\n      let direction = SortType.ASCENDING;\n      if (key && sortConfig && sortConfig.key === key) {\n        switch (sortConfig.direction) {\n          case SortType.ASCENDING:\n            direction = SortType.DESCENDING;\n\n            break;\n          case SortType.DESCENDING:\n            direction = SortType.ORIGINAL;\n\n            break;\n          default:\n            direction = SortType.ASCENDING;\n\n            break;\n        }\n      }\n      setSortConfig({ key, direction });\n    },\n    [sortConfig],\n  );\n\n  const isSortedDesc = useCallback(\n    (columnName): { flag: boolean | null; content: string } => {\n      const defaultContent = { flag: null, content: ' ' };\n\n      if (!sortConfig || sortConfig.key !== columnName) {\n        return defaultContent;\n      }\n      switch (sortConfig.direction) {\n        case SortType.DESCENDING:\n          return { flag: true, content: ' ▼' };\n\n        case SortType.ASCENDING:\n          return { flag: false, content: ' ▲' };\n\n        default:\n          return defaultContent;\n      }\n    },\n    [sortConfig],\n  );\n\n  return { items: sortedItems, isSortedDesc, onSort: { onClick: sortHandler } };\n}\n","import lodashGet from 'lodash/get';\n\nimport FormatNumber from '../../../utility/FormatNumber';\n\nexport default class ColumnsHelper {\n  private preferences: any;\n  private defaultPreference: any;\n\n  public constructor(preferences, defaultPreference) {\n    this.preferences = preferences;\n    this.defaultPreference = defaultPreference;\n  }\n\n  public checkPreferences(preferencesToCheck, key) {\n    const val =\n      preferencesToCheck === undefined ||\n      Object.keys(preferencesToCheck).length === 0 ||\n      (preferencesToCheck && preferencesToCheck[key] === true)\n        ? true\n        : false;\n\n    return val;\n  }\n\n  public setCustomColumn(array, index, columnLabel, cellHandler) {\n    array.push({\n      orderIndex: index,\n      Header: columnLabel,\n      sortType: 'basic',\n      Cell: ({ row }) => cellHandler(row),\n    });\n  }\n\n  public addColumn(\n    columns: string,\n    flagKey: string,\n    formatKey: string,\n    columnKey: string,\n    columnLabel: string,\n    columnIndex: string,\n    options: {\n      formatPrefix?: string;\n      formatSuffix?: string;\n      showPrefixSuffixCallback?: (element: any) => boolean;\n    } = {},\n  ) {\n    const preferences = this.preferences || this.defaultPreference;\n\n    if (this.checkPreferences(preferences, flagKey)) {\n      this.setCustomColumn(columns, columnIndex, columnLabel, (row) => {\n        const format =\n          preferences &&\n          Object.prototype.hasOwnProperty.call(preferences, formatKey)\n            ? preferences[formatKey]\n            : this.defaultPreference[formatKey];\n\n        const {\n          formatPrefix = '',\n          formatSuffix = '',\n          showPrefixSuffixCallback = () => true,\n        } = options;\n\n        if (showPrefixSuffixCallback(row)) {\n          return FormatNumber(\n            row.original[columnKey],\n            format,\n            formatPrefix,\n            formatSuffix,\n          );\n        } else {\n          return FormatNumber(row.original[columnKey], format, '', '');\n        }\n      });\n    }\n  }\n}\n\nexport function isColumnVisible(preferences, key) {\n  return lodashGet(preferences, key, false);\n}\n","import { CSSProperties } from 'react';\n\nimport FormatNumber from '../../../utility/FormatNumber';\n\ninterface AbsoluteColumnProps {\n  value: any;\n  onHoverRange: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n  rowSpanTags: {\n    rowSpan: any;\n    style: CSSProperties;\n  };\n  format: string;\n}\n\nfunction AbsoluteColumn({\n  rowSpanTags,\n  value,\n  onHoverRange,\n  format,\n}: AbsoluteColumnProps) {\n  return (\n    <td {...rowSpanTags} {...onHoverRange}>\n      {FormatNumber(value, format)}\n    </td>\n  );\n}\n\nexport default AbsoluteColumn;\n","import { Fragment, ButtonHTMLAttributes } from 'react';\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  onClick: () => void;\n}\n\nexport default function Button({ onClick, ...props }: ButtonProps) {\n  return (\n    <Fragment>\n      <button type=\"button\" onClick={onClick} {...props} />\n    </Fragment>\n  );\n}\n","import { useFormikContext } from 'formik';\nimport { useEffect } from 'react';\n\ninterface FormikOnChangeProps {\n  onChange?: (any) => void;\n  enableValidation?: boolean;\n}\n\nconst FormikOnChange = (props: FormikOnChangeProps) => {\n  const { onChange = () => null, enableValidation = true } = props;\n  const { values, errors } = useFormikContext();\n\n  useEffect(() => {\n    if (enableValidation) {\n      if (Object.keys(errors).length === 0) {\n        onChange(values);\n      }\n    } else {\n      onChange(values);\n    }\n  }, [values, enableValidation, errors, onChange]);\n\n  return null;\n};\n\nexport default FormikOnChange;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport { forwardRef, useCallback, useMemo } from 'react';\nimport { FaPlus } from 'react-icons/fa';\nimport * as Yup from 'yup';\n\nimport { useChartData } from '../../../../context/ChartContext';\nimport Button from '../../../../elements/Button';\nimport FormikForm from '../../../../elements/formik/FormikForm';\nimport FormikInput from '../../../../elements/formik/FormikInput';\nimport { translateMultiplet } from '../../../../panels/extra/utilities/MultiplicityUtilities';\nimport { useFormatNumberByNucleus } from '../../../../utility/FormatNumber';\n\nconst styles = {\n  container: css`\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    padding: 0.4rem;\n  `,\n  inputInfo: css`\n    font-size: 10px;\n    color: black;\n    font-weight: bold;\n  `,\n  infoText: css`\n    padding: 10px;\n    font-size: 13px;\n  `,\n\n  signalContainer: css`\n    border: 0.55px solid #dedede;\n  `,\n  inputContainer: css`\n    display: flex;\n    justify-content: center;\n  `,\n  addSignalBtn: css`\n    margin-top: 15px;\n    margin-top: 20px;\n    width: 100%;\n    background-color: #fcfcfc;\n    border-top: 0.55px solid #dedede;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    padding: 0.4rem;\n    font-size: 12px;\n\n    & :disabled {\n      opacity: 0.6;\n    }\n  `,\n};\n\ninterface AddSignalFormTabProps {\n  onFocus: (element: any) => void;\n  onBlur?: () => void;\n  range: any;\n}\n\n// TODO: this seems to be a hacky use of ref.\nfunction AddSignalFormTab(\n  { onFocus, onBlur, range }: AddSignalFormTabProps,\n  ref: any,\n) {\n  const { values, setFieldValue } = useFormikContext<any>();\n  const { activeTab } = useChartData();\n  const format = useFormatNumberByNucleus(activeTab);\n\n  const saveHandler = useCallback(\n    (val) => {\n      const newSignal = {\n        multiplicity: 'm',\n        kind: 'signal',\n        delta: Number(val.newSignalDelta),\n        js: [{ multiplicity: translateMultiplet('m'), coupling: '' }],\n      };\n      const _signals = values.signals.slice().concat(newSignal);\n\n      setFieldValue('signals', _signals);\n      setFieldValue('activeTab', String(_signals.length - 1));\n    },\n    [setFieldValue, values.signals],\n  );\n\n  const validation = useMemo(() => {\n    return Yup.object().shape({\n      newSignalDelta: Yup.number()\n        .test(`test-range`, '', function testNewSignalDelta(value) {\n          const { path, createError } = this;\n          if (value && value > range.from && value < range.to) {\n            return true;\n          }\n\n          const errorMessage = ` ${\n            value ? value.toFixed(5) : 0\n          } ppm out of the range`;\n          return createError({ path, message: errorMessage });\n        })\n        .required(),\n    });\n  }, [range]);\n\n  const triggerSubmitHandler = useCallback(() => {\n    ref.current.submitForm();\n  }, [ref]);\n\n  return (\n    <div css={styles.container}>\n      <div>\n        <p css={styles.infoText}>\n          Edit or select a delta value of new signal (ppm):\n        </p>\n        <FormikForm\n          ref={ref}\n          validationSchema={validation}\n          initialValues={{\n            newSignalDelta: (range.from + range.to) / 2,\n          }}\n          onSubmit={saveHandler}\n        >\n          <div css={styles.inputContainer}>\n            <FormikInput\n              name=\"newSignalDelta\"\n              type=\"number\"\n              placeholder={`𝛅 (ppm)`}\n              onFocus={onFocus}\n              onBlur={onBlur}\n              style={{\n                input: {\n                  width: '250px',\n                  height: '30px',\n                },\n              }}\n              checkErrorAfterInputTouched={false}\n            />\n          </div>\n          <p css={styles.inputInfo}>\n            [ {`${format(range.from)} ppm - ${format(range.to)} ppm`} ]\n          </p>\n\n          <Button css={styles.addSignalBtn} onClick={triggerSubmitHandler}>\n            <FaPlus title=\"Add new signal\" />\n          </Button>\n        </FormikForm>\n      </div>\n    </div>\n  );\n}\n\nexport default forwardRef(AddSignalFormTab);\n","import { CSSProperties } from 'react';\n\nimport FormikInput from '../../../../elements/formik/FormikInput';\nimport { translateMultiplet } from '../../../../panels/extra/utilities/MultiplicityUtilities';\n\nconst style: Record<'input', CSSProperties> = {\n  input: {\n    width: '50px',\n    height: '26px',\n    borderWidth: 0,\n    margin: '0 5px',\n  },\n};\n\ninterface DeltaInputProps {\n  signal: any;\n  index: number;\n  onFocus: (element: any) => void;\n}\n\nfunction DeltaInput({ signal, index, onFocus }: DeltaInputProps) {\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <span>𝛅: </span>\n      <FormikInput\n        name={`signals.${index}.delta`}\n        type=\"number\"\n        placeholder={'J (Hz)'}\n        onFocus={onFocus}\n        style={style}\n        checkErrorAfterInputTouched={false}\n      />\n      <span>\n        {signal.js\n          .map((_coupling) => translateMultiplet(_coupling.multiplicity))\n          .join('')}\n      </span>\n    </div>\n  );\n}\n\nexport default DeltaInput;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { memo, useMemo, useCallback } from 'react';\nimport { FaPlus, FaRegTrashAlt } from 'react-icons/fa';\n\nimport { Multiplets } from '../../../../../data/constants/Multiplets';\nimport Button from '../../../../elements/Button';\nimport FormikInput from '../../../../elements/formik/FormikInput';\nimport FormikSelect from '../../../../elements/formik/FormikSelect';\nimport {\n  hasCouplingConstant,\n  translateMultiplet,\n} from '../../../../panels/extra/utilities/MultiplicityUtilities';\n\nconst CouplingsTableStyle = css`\n  border-spacing: 0;\n  border: 1px solid #dedede;\n  width: 100%;\n  height: 100%;\n  font-size: 12px;\n\n  th,\n  td {\n    text-align: center;\n    margin: 0;\n    padding: 0.3rem;\n    border-bottom: 1px solid #f5f5f5;\n\n    button {\n      background-color: transparent;\n      border: none;\n    }\n\n    .add-button {\n      color: blue;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .delete-button {\n      border-radius: 25%;\n      padding: 0;\n      padding-left: 0.3rem;\n      padding-right: 0.3rem;\n    }\n    .delete-button:hover {\n      .icon {\n        color: red;\n      }\n    }\n\n    input {\n      background-color: transparent;\n      border: 0.5px solid #dedede;\n      height: 100%;\n      width: 100%;\n      text-align: center;\n    }\n    .selectBox {\n      background-color: transparent;\n      border: 0.5px solid #dedede;\n      height: 100%;\n      width: 100% !important;\n      text-align: center;\n      margin: 0;\n    }\n  }\n\n  tr {\n    :last-child {\n      background-color: #fcfcfc;\n    }\n  }\n`;\n\ninterface CouplingsTableProps {\n  push: (element: { multiplicity?: string; coupling: string }) => void;\n  remove: (element: number) => void;\n  onFocus: (element: any) => void;\n  onBlur?: () => void;\n}\n\nfunction CouplingsTable({\n  push,\n  remove,\n  onFocus,\n  onBlur,\n}: CouplingsTableProps) {\n  const { values, setFieldValue } = useFormikContext<any>();\n\n  const multiplicityChangeHandler = useCallback(\n    (value, name) => {\n      if (!hasCouplingConstant(value)) {\n        setFieldValue(name, '');\n      }\n    },\n    [setFieldValue],\n  );\n\n  const multipletsList = useMemo(() => {\n    return Multiplets.map((multiplet) => ({\n      key: multiplet.value,\n      ...multiplet,\n      value: multiplet.label,\n    }));\n  }, []);\n\n  return (\n    <table css={CouplingsTableStyle}>\n      <tbody>\n        <tr>\n          <th>#</th>\n          <th>Multiplicity</th>\n          <th>J (Hz)</th>\n          <th>{''}</th>\n        </tr>\n        {lodashGet(values, `signals[${values.activeTab}].js`, []).map(\n          (_coupling, i) => (\n            <tr\n              // eslint-disable-next-line react/no-array-index-key\n              key={`editCouplings${values.activeTab}${i}`}\n            >\n              <td>{i + 1}</td>\n              <td>\n                <FormikSelect\n                  className=\"selectBox\"\n                  name={`signals.${values.activeTab}.js.${i}.multiplicity`}\n                  data={multipletsList}\n                  onChange={(value) =>\n                    multiplicityChangeHandler(\n                      value,\n                      `signals.${values.activeTab}.js.${i}.coupling`,\n                    )\n                  }\n                />\n              </td>\n              <td>\n                <FormikInput\n                  name={`signals.${values.activeTab}.js.${i}.coupling`}\n                  type=\"number\"\n                  placeholder={'J (Hz)'}\n                  disabled={!hasCouplingConstant(_coupling.multiplicity)}\n                  onFocus={onFocus}\n                  onBlur={onBlur}\n                  style={{\n                    input: {\n                      width: '100%',\n                      height: '26px',\n                    },\n                  }}\n                  checkErrorAfterInputTouched={false}\n                />\n              </td>\n              <td>\n                <Button\n                  className=\"delete-button\"\n                  onClick={() => {\n                    remove(i);\n                  }}\n                >\n                  <FaRegTrashAlt className=\"icon\" title=\"Delete coupling\" />\n                </Button>\n              </td>\n            </tr>\n          ),\n        )}\n        <tr />\n        <tr>\n          <td colSpan={4}>\n            <Button\n              className=\"add-button\"\n              onClick={() =>\n                push({\n                  multiplicity: translateMultiplet('m'),\n                  coupling: '',\n                })\n              }\n            >\n              <FaPlus title=\"Add new coupling\" />\n            </Button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default memo(CouplingsTable);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext, FieldArray } from 'formik';\nimport { memo } from 'react';\n\nimport CouplingsTable from './CouplingsTable';\n\nconst SignalFormTabStyle = css`\n  border-spacing: 0;\n  width: 100%;\n  font-size: 12px;\n  height: 100%;\n\n  margin: 0;\n  padding: 0.4rem;\n  text-align: center;\n`;\n\ninterface SignalFormTabProps {\n  onFocus: (element: any) => void;\n  onBlur?: () => void;\n}\n\nfunction SignalFormTab({ onFocus, onBlur }: SignalFormTabProps) {\n  const { values } = useFormikContext<{ activeTab: string }>();\n\n  return (\n    <div css={SignalFormTabStyle}>\n      <FieldArray\n        name={`signals.${values.activeTab}.js`}\n        render={({ push, remove }) => (\n          <div>\n            <CouplingsTable\n              push={push}\n              remove={remove}\n              onFocus={onFocus}\n              onBlur={onBlur}\n            />\n          </div>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default memo(SignalFormTab);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport { useCallback, useMemo, memo, useEffect, useState, useRef } from 'react';\n\nimport { useChartData } from '../../../../context/ChartContext';\nimport Tab from '../../../../elements/Tab/Tab';\nimport Tabs from '../../../../elements/Tab/Tabs';\nimport useSpectrum from '../../../../hooks/useSpectrum';\nimport Events from '../../../../utility/Events';\nimport { useFormatNumberByNucleus } from '../../../../utility/FormatNumber';\n\nimport AddSignalFormTab from './AddSignalFormTab';\nimport DeltaInput from './DeltaInput';\nimport SignalFormTab from './SignalFormTab';\n\nconst textStyles = css`\n  text-align: center;\n  width: 100%;\n\n  .errorText {\n    color: red;\n  }\n\n  .infoText {\n    padding: 10px;\n    margin: 10px 0;\n    font-size: 14px;\n    text-align: left;\n    color: white;\n    background-color: #5f5f5f;\n    border-radius: 5px;\n  }\n`;\n\nconst tabStylesAddition = css`\n  color: red;\n`;\nconst tabStyles = css`\n  display: inline-grid;\n  list-style: none;\n  padding: 0.5rem 1.5rem;\n`;\n\ninterface SignalsFormProps {\n  range: number;\n}\n\nfunction SignalsForm({ range }: SignalsFormProps) {\n  const newSignalFormRef = useRef<any>();\n  const [activeField, setActiveField] = useState<string | null>(null);\n\n  const {\n    values,\n    setFieldValue,\n    errors,\n  }: {\n    values: any;\n    setFieldValue: (\n      field: string,\n      value: any,\n      shouldValidate?: boolean | undefined,\n    ) => void;\n    errors: any;\n  } = useFormikContext<any>();\n\n  const { activeTab } = useChartData();\n  const { info }: { info: any } = useSpectrum({ info: {} });\n  const format = useFormatNumberByNucleus(activeTab);\n\n  useEffect(() => {\n    function handle(event) {\n      if (info?.originFrequency && activeField) {\n        if (values.activeTab === 'addSignalTab') {\n          newSignalFormRef.current.setValues({\n            [activeField]:\n              (event.range[1] - event.range[0]) / 2 + event.range[0],\n          });\n        } else if (activeField.includes('delta')) {\n          setFieldValue(\n            activeField,\n            (event.range[1] - event.range[0]) / 2 + event.range[0],\n          );\n        } else {\n          const value = Number(\n            format(\n              Math.abs(event.range[0] - event.range[1]) * info.originFrequency,\n            ),\n          );\n          setFieldValue(activeField, value);\n        }\n      }\n\n      setActiveField(null);\n    }\n\n    Events.on('brushEnd', handle);\n\n    return () => {\n      Events.off('brushEnd', handle);\n    };\n  }, [activeField, setFieldValue, values.activeTab, format, info]);\n\n  useEffect(() => {\n    function handle(event) {\n      if (activeField) {\n        if (values.activeTab === 'addSignalTab') {\n          newSignalFormRef.current.setValues({ [activeField]: event.xPPM });\n        } else if (activeField.includes('delta')) {\n          setFieldValue(activeField, event.xPPM);\n        }\n      }\n      setActiveField(null);\n    }\n\n    Events.on('mouseClick', handle);\n\n    return () => {\n      Events.off('mouseClick', handle);\n    };\n  }, [values.activeTab, activeField, setFieldValue]);\n\n  const handleOnFocus = useCallback(\n    (event) => {\n      setActiveField(event.target.name);\n    },\n    [setActiveField],\n  );\n\n  const tapClickHandler = useCallback(\n    ({ tabid }) => {\n      setFieldValue('activeTab', tabid);\n    },\n    [setFieldValue],\n  );\n\n  const handleDeleteSignal = useCallback(\n    ({ tabid }) => {\n      const _signals = values.signals.filter(\n        (_signal, i) => i !== Number(tabid),\n      );\n      setFieldValue('signals', _signals);\n    },\n    [setFieldValue, values.signals],\n  );\n\n  useEffect(() => {\n    setFieldValue(\n      'activeTab',\n      values.signals.length > 0\n        ? (values.signals.length - 1).toString()\n        : 'addSignalTab',\n    );\n  }, [setFieldValue, values.signals.length]);\n\n  const tabContainsErrors = useCallback(\n    (i) => {\n      return errors?.signals && errors?.signals[i] ? true : false;\n    },\n    [errors],\n  );\n\n  const signalFormTabs = useMemo(() => {\n    const signalTabs =\n      values.signals.length > 0\n        ? values.signals.map((signal, i) => (\n            <Tab\n              // eslint-disable-next-line react/no-array-index-key\n              key={`signalForm${i}`}\n              tabid={`${i}`}\n              tabstyles={tabContainsErrors(i) ? tabStylesAddition : tabStyles}\n              canDelete\n              render={() => (\n                <DeltaInput signal={signal} index={i} onFocus={handleOnFocus} />\n              )}\n            >\n              <SignalFormTab onFocus={handleOnFocus} />\n            </Tab>\n          ))\n        : [];\n\n    const addSignalTab = (\n      <Tab\n        tablabel=\"+\"\n        tabid=\"addSignalTab\"\n        canDelete={false}\n        key=\"addSignalTab\"\n        className=\"add-signal-tab\"\n      >\n        <AddSignalFormTab\n          onFocus={handleOnFocus}\n          range={range}\n          ref={newSignalFormRef}\n        />\n      </Tab>\n    );\n\n    return signalTabs.concat(addSignalTab);\n  }, [handleOnFocus, range, tabContainsErrors, values.signals]);\n\n  const editSignalInfoText = (\n    <p className=\"infoText\">\n      Focus on an input field and press Shift + Drag &#38; Drop to draw a\n      coupling constant in spectrum view.\n    </p>\n  );\n\n  const addSignalInfoText = (\n    <p className=\"infoText\">\n      Focus on the input field and press Shift + Left mouse click to select new\n      signal delta value in spectrum view.\n    </p>\n  );\n\n  return (\n    <div>\n      <div css={textStyles}>\n        {errors.signals &&\n        (errors.signals.noSignals || errors.signals.noCouplings) ? (\n          <div>\n            <p className=\"errorText\">\n              {errors.signals.noSignals ||\n                errors.signals.noCouplings[0].message}\n            </p>\n            {errors.signals.noSignals ? addSignalInfoText : null}\n          </div>\n        ) : values.activeTab === 'addSignalTab' ? (\n          addSignalInfoText\n        ) : (\n          editSignalInfoText\n        )}\n      </div>\n      <Tabs\n        activeTab={values.activeTab}\n        onClick={tapClickHandler}\n        onDelete={handleDeleteSignal}\n      >\n        {signalFormTabs}\n      </Tabs>\n    </div>\n  );\n}\n\nexport default memo(SignalsForm);\n","import { useMemo } from 'react';\nimport * as Yup from 'yup';\n\nimport { hasCouplingConstant } from '../../../../panels/extra/utilities/MultiplicityUtilities';\n\nconst useValidation = () =>\n  useMemo(() => {\n    return Yup.object().shape({\n      signals: Yup.array()\n        .of(\n          Yup.object().shape({\n            j: Yup.array()\n              .of(\n                Yup.object().shape({\n                  multiplicity: Yup.string().required(),\n                  coupling: Yup.mixed().test(\n                    'checkValue',\n                    '',\n                    function testCoupling(value) {\n                      const { path, createError } = this;\n                      const hasCoupling = hasCouplingConstant(\n                        this.parent.multiplicity,\n                      );\n                      if (\n                        (!hasCoupling && isNaN(value)) ||\n                        (hasCoupling && !isNaN(value))\n                      ) {\n                        return true;\n                      }\n\n                      return createError({\n                        path,\n                        message: `${path} is required`,\n                      });\n                    },\n                  ),\n                }),\n              )\n              .min(1, 'There must be at least one coupling in a signal'),\n          }),\n        )\n        .min(1, 'There must be at least one signal in a range!'),\n    });\n  }, []);\n\nexport default useValidation;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useMemo, useCallback, useEffect, useRef } from 'react';\nimport { FaSearchPlus } from 'react-icons/fa';\n\nimport generateID from '../../../data/utilities/generateID';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport Button from '../../elements/Button';\nimport CloseButton from '../../elements/CloseButton';\nimport SaveButton from '../../elements/SaveButton';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikOnChange from '../../elements/formik/FormikOnChange';\nimport {\n  hasCouplingConstant,\n  translateMultiplet,\n} from '../../panels/extra/utilities/MultiplicityUtilities';\nimport { CHANGE_TEMP_RANGE } from '../../reducer/types/Types';\nimport { useFormatNumberByNucleus } from '../../utility/FormatNumber';\n\nimport SignalsForm from './forms/components/SignalsForm';\nimport useRangeFormValidation from './forms/validation/EditRangeValidation';\n\nconst styles = css`\n  width: 600px;\n  height: 500px;\n  padding: 5px;\n  button:focus {\n    outline: none;\n  }\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    align-items: center;\n    span {\n      color: #464646;\n      font-size: 15px;\n      flex: 1;\n      border-left: 1px solid #ececec;\n      padding-left: 6px;\n    }\n\n    button {\n      background-color: transparent;\n      border: none;\n      padding: 5px;\n\n      svg {\n        height: 16px;\n      }\n    }\n  }\n  .container {\n    display: flex;\n    margin: 30px 5px;\n    input,\n    button {\n      padding: 5px;\n      border: 1px solid gray;\n      border-radius: 5px;\n      height: 36px;\n      margin: 2px;\n    }\n    input {\n      flex: 10;\n    }\n    button {\n      flex: 2;\n      color: white;\n      background-color: gray;\n    }\n  }\n`;\n\ninterface EditRangeModalProps {\n  onSaveEditRangeModal: (value: any) => Promise<void> | null | void;\n  onCloseEditRangeModal: () => void;\n  onZoomEditRangeModal: (value: any) => void;\n  range: any;\n  automaticZoom?: boolean;\n}\n\ninterface Coupling {\n  multiplicity: any;\n  coupling: string | number;\n}\n\nfunction EditRangeModal({\n  onSaveEditRangeModal = () => null,\n  onCloseEditRangeModal = () => null,\n  onZoomEditRangeModal = () => null,\n  range,\n  automaticZoom = true,\n}: EditRangeModalProps) {\n  const formRef = useRef<any>(null);\n  const { activeTab } = useChartData();\n  const dispatch = useDispatch();\n  const format = useFormatNumberByNucleus(activeTab);\n  const validation = useRangeFormValidation();\n\n  const handleOnZoom = useCallback(() => {\n    onZoomEditRangeModal(range);\n  }, [onZoomEditRangeModal, range]);\n\n  useEffect(() => {\n    if (automaticZoom) {\n      handleOnZoom();\n    }\n  }, [automaticZoom, handleOnZoom]);\n\n  const handleOnClose = useCallback(() => {\n    onCloseEditRangeModal();\n  }, [onCloseEditRangeModal]);\n\n  const getCouplings = useCallback(\n    (couplings) =>\n      couplings\n        .filter((coupling) => coupling.coupling !== '')\n        .map((coupling) => {\n          return {\n            ...coupling,\n            multiplicity: translateMultiplet(coupling.multiplicity),\n          };\n        }),\n    [],\n  );\n\n  const getSignals = useCallback(\n    (signals) => {\n      return signals.map((signal) => {\n        return {\n          id: generateID(),\n          ...signal,\n          multiplicity: signal.js\n            .map((_coupling) => translateMultiplet(_coupling.multiplicity))\n            .join(''),\n          js: getCouplings(signal.js),\n        };\n      });\n    },\n    [getCouplings],\n  );\n\n  const handleOnSave = useCallback(\n    (formValues) => {\n      void (async () => {\n        const _range = { ...range };\n        _range.signals = getSignals(formValues.signals);\n        await onSaveEditRangeModal(_range);\n        handleOnClose();\n      })();\n    },\n    [getSignals, handleOnClose, onSaveEditRangeModal, range],\n  );\n\n  const data = useMemo(() => {\n    const signals = range.signals.map((signal) => {\n      // counter within j array to access to right j values\n\n      let counterJ = 0;\n      const couplings: Array<Coupling> = [];\n      signal.multiplicity.split('').forEach((_multiplicity) => {\n        let coupling: Coupling = {\n          multiplicity: _multiplicity,\n          coupling: '',\n        };\n\n        if (hasCouplingConstant(_multiplicity)) {\n          coupling = { ...signal.js[counterJ] };\n          coupling.coupling = Number(format(coupling.coupling));\n          counterJ++;\n        }\n        coupling.multiplicity = translateMultiplet(coupling.multiplicity);\n        couplings.push(coupling);\n      });\n\n      return { ...signal, js: couplings };\n    });\n    return { activeTab: '0', signals };\n  }, [format, range]);\n\n  const changeHandler = useCallback(\n    (values) => {\n      const signals = getSignals(values.signals);\n      dispatch({\n        type: CHANGE_TEMP_RANGE,\n        payload: { tempRange: Object.assign({}, range, { signals }) },\n      });\n    },\n    [dispatch, getSignals, range],\n  );\n\n  return (\n    <div css={styles}>\n      <FormikForm\n        ref={formRef}\n        initialValues={data}\n        validationSchema={validation}\n        onSubmit={handleOnSave}\n      >\n        <div className=\"header handle\">\n          <Button onClick={handleOnZoom} className=\"zoom-button\">\n            <FaSearchPlus title=\"Set to default view on range in spectrum\" />\n          </Button>\n          <span>\n            {` Range and Signal edition: ${format(range.from)} ppm to ${format(\n              range.to,\n            )} ppm`}\n          </span>\n          <SaveButton\n            onClick={() => formRef.current.submitForm()}\n            popupTitle=\"Save and exit\"\n          />\n\n          <CloseButton onClick={handleOnClose} />\n        </div>\n        <SignalsForm range={range} />\n        <FormikOnChange onChange={changeHandler} />\n      </FormikForm>\n    </div>\n  );\n}\n\nexport default EditRangeModal;\n","import { useCallback, useMemo } from 'react';\n\nimport { useAssignmentData } from '../../../assignment';\nimport { useDispatch } from '../../../context/DispatchContext';\nimport { useModal } from '../../../elements/popup/Modal';\nimport { positions, transitions } from '../../../elements/popup/options';\nimport EditRangeModal from '../../../modal/editRange/EditRangeModal';\nimport {\n  CHANGE_RANGE_SIGNAL_KIND,\n  DELETE_RANGE,\n  RESET_SELECTED_TOOL,\n  SAVE_EDITED_RANGE,\n  SET_SELECTED_TOOL,\n  SET_X_DOMAIN,\n} from '../../../reducer/types/Types';\nimport { options } from '../../../toolbar/ToolTypes';\n\nimport { RangeData } from './useMapRanges';\n\nexport default function useEditRangeModal(range: RangeData) {\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const assignmentData = useAssignmentData();\n\n  const zoomRange = useCallback(() => {\n    const margin = Math.abs(range.from - range.to);\n    dispatch({\n      type: SET_X_DOMAIN,\n      xDomain: [range.from - margin, range.to + margin],\n    });\n  }, [dispatch, range.from, range.to]);\n\n  const deleteRange = useCallback(() => {\n    dispatch({\n      type: DELETE_RANGE,\n      payload: {\n        data: { id: range.id, assignmentData },\n      },\n    });\n  }, [assignmentData, dispatch, range.id]);\n\n  const changeRangeSignalKind = useCallback(\n    (value) => {\n      dispatch({\n        type: CHANGE_RANGE_SIGNAL_KIND,\n        payload: {\n          data: { rowData: range, value },\n        },\n      });\n    },\n    [dispatch, range],\n  );\n\n  const saveEditRangeHandler = useCallback(\n    (editedRowData) => {\n      dispatch({\n        type: SAVE_EDITED_RANGE,\n        payload: {\n          editedRowData,\n          assignmentData,\n        },\n      });\n    },\n    [assignmentData, dispatch],\n  );\n\n  const closeEditRangeHandler = useCallback(() => {\n    dispatch({ type: RESET_SELECTED_TOOL });\n    modal.close();\n  }, [dispatch, modal]);\n\n  const editRange = useCallback(() => {\n    dispatch({\n      type: SET_SELECTED_TOOL,\n      payload: { selectedTool: options.editRange.id, tempRange: range },\n    });\n    modal.show(\n      <EditRangeModal\n        onCloseEditRangeModal={closeEditRangeHandler}\n        onSaveEditRangeModal={saveEditRangeHandler}\n        onZoomEditRangeModal={zoomRange}\n        range={range}\n      />,\n      {\n        position: positions.MIDDLE_RIGHT,\n        transition: transitions.SCALE,\n        isBackgroundBlur: false,\n      },\n    );\n  }, [\n    closeEditRangeHandler,\n    dispatch,\n    modal,\n    range,\n    saveEditRangeHandler,\n    zoomRange,\n  ]);\n\n  return useMemo(\n    () => ({\n      editRange,\n      deleteRange,\n      zoomRange,\n      changeRangeSignalKind,\n    }),\n    [changeRangeSignalKind, deleteRange, editRange, zoomRange],\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Fragment, CSSProperties } from 'react';\nimport { FaRegTrashAlt, FaSearchPlus, FaEdit } from 'react-icons/fa';\n\nimport { SignalKinds } from '../../../../data/constants/SignalsKinds';\nimport Select from '../../../elements/Select';\nimport useEditRangeModal from '../hooks/useEditRangeModal';\nimport { RangeData } from '../hooks/useMapRanges';\n\nconst styles = css`\n  width: 66px;\n  padding: 0 !important;\n  button {import useEditRangeModal from './../../../hooks/useEditRangeModal';\n\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n  }\n\n  button:disabled {\n    opacity: 0.6;\n  }\n`;\n\nconst selectBoxStyle: CSSProperties = {\n  marginLeft: 2,\n  marginRight: 2,\n  border: 'none',\n  height: '20px',\n};\n\ninterface ActionsColumnProps {\n  rowData: RangeData;\n  rowSpanTags: {\n    rowSpan: any;\n    style: CSSProperties;\n  };\n  onHoverSignal?: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n  onHoverRange?: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n}\n\nfunction ActionsColumn({\n  rowData,\n  onHoverSignal,\n  rowSpanTags,\n}: ActionsColumnProps) {\n  const { editRange, deleteRange, changeRangeSignalKind, zoomRange } =\n    useEditRangeModal(rowData);\n\n  return (\n    <Fragment>\n      <td {...onHoverSignal}>\n        <Select\n          onChange={changeRangeSignalKind}\n          data={SignalKinds}\n          defaultValue={rowData.tableMetaInfo.signal.kind}\n          style={selectBoxStyle}\n        />\n      </td>\n      <td {...rowSpanTags} css={styles}>\n        <button type=\"button\" className=\"delete-button\" onClick={deleteRange}>\n          <FaRegTrashAlt />\n        </button>\n        <button type=\"button\" className=\"zoom-button\" onClick={zoomRange}>\n          <FaSearchPlus title=\"Zoom to range in spectrum\" />\n        </button>\n        <button type=\"button\" className=\"edit-button\" onClick={editRange}>\n          <FaEdit color=\"blue\" />\n        </button>\n      </td>\n    </Fragment>\n  );\n}\n\nexport default ActionsColumn;\n","import lodashGet from 'lodash/get';\n\ninterface CouplingColumnProps {\n  rowData: {\n    id: number;\n    from: number;\n    to: number;\n    tableMetaInfo: any;\n  };\n  onHoverSignal?: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n}\n\nfunction CouplingColumn({ rowData, onHoverSignal }: CouplingColumnProps) {\n  const result = lodashGet(rowData, 'tableMetaInfo.signal.js');\n  return (\n    <td {...onHoverSignal}>\n      {result\n        ?.map((coupling) =>\n          !isNaN(coupling.coupling) ? coupling.coupling.toFixed(1) : '',\n        )\n        .join(',')}\n    </td>\n  );\n}\n\nexport default CouplingColumn;\n","import lodashGet from 'lodash/get';\nimport { CSSProperties, useMemo, useCallback, memo } from 'react';\nimport { FaMinusCircle } from 'react-icons/fa';\n\nimport { HighlightedSource } from '../../../highlight';\n\nconst spanStyle: CSSProperties = {\n  color: 'red',\n  fontWeight: 'bold',\n};\n\nfunction RangeAssignmentsColumn({\n  rowData,\n  assignment,\n  highlight,\n  onUnlinkVisibilityChange,\n  unlinkVisibility,\n  onLink,\n  onUnlink,\n  rowSpanTags,\n  onHover,\n  highlightData,\n}) {\n  const diaIDs = useMemo(() => {\n    return lodashGet(rowData, 'diaIDs', 0);\n  }, [rowData]);\n\n  const visibilityChangeHandler = useCallback(\n    (flag) => {\n      onUnlinkVisibilityChange?.(flag);\n    },\n    [onUnlinkVisibilityChange],\n  );\n\n  const spanCss: CSSProperties = useMemo(() => {\n    const flag =\n      assignment.isActive ||\n      assignment.isOnHover ||\n      (highlight.isActive &&\n        highlightData.highlight.sourceData?.type !== HighlightedSource.SIGNAL);\n    return flag\n      ? {\n          color: 'red',\n          fontWeight: 'bold',\n        }\n      : { color: 'black', fontWeight: 'normal' };\n  }, [\n    assignment.isActive,\n    assignment.isOnHover,\n    highlight.isActive,\n    highlightData.highlight.sourceData?.type,\n  ]);\n\n  return (\n    <td\n      {...rowSpanTags}\n      {...onHover}\n      {...{ onClick: (e) => onLink?.(e, assignment) }}\n    >\n      {rowData.nbAtoms !== undefined && rowData.nbAtoms > 0 ? (\n        rowData.diaIDs && rowData.diaIDs.length > 0 ? (\n          <div\n            onMouseEnter={() => visibilityChangeHandler(true)}\n            onMouseLeave={() => visibilityChangeHandler(false)}\n          >\n            {rowData.nbAtoms} {' ( '}\n            <span style={spanCss}>{diaIDs.length}</span>\n            {' ) '}\n            <sup>\n              <button\n                type=\"button\"\n                style={{\n                  visibility: unlinkVisibility ? 'visible' : 'hidden',\n                  padding: 0,\n                  margin: 0,\n                }}\n                onClick={(e) => onUnlink?.(e, true)}\n              >\n                <FaMinusCircle color=\"red\" />\n              </button>\n            </sup>\n          </div>\n        ) : assignment.isActive ? (\n          <div>\n            {`${rowData.nbAtoms} (`}\n            <span style={spanStyle}>0</span>\n            {')'}\n          </div>\n        ) : (\n          rowData.nbAtoms\n        )\n      ) : assignment.isActive ? (\n        <div>\n          {'0 ('}\n          <span style={spanStyle}>0</span>\n          {')'}\n        </div>\n      ) : (\n        ''\n      )}\n    </td>\n  );\n}\n\nexport default memo(RangeAssignmentsColumn);\n","import { CSSProperties, memo } from 'react';\n\nimport FormatNumber from '../../../utility/FormatNumber';\n\ninterface RangeColumnProps {\n  value: any;\n  rowSpanTags: {\n    rowSpan: any;\n    style: CSSProperties;\n  };\n  onHoverRange?: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n  format: string;\n}\n\nfunction RangeColumn({\n  value,\n  rowSpanTags,\n  onHoverRange,\n  format,\n}: RangeColumnProps) {\n  return (\n    <td {...rowSpanTags} {...onHoverRange}>\n      {FormatNumber(value, format)}\n    </td>\n  );\n}\n\nexport default memo(RangeColumn);\n","import { useCallback, useMemo } from 'react';\n\nimport { checkRangeKind } from '../../../../data/utilities/RangeUtilities';\nimport { useDispatch } from '../../../context/DispatchContext';\nimport EditableColumn from '../../../elements/EditableColumn';\nimport { CHANGE_RANGE_RELATIVE } from '../../../reducer/types/Types';\nimport FormatNumber from '../../../utility/FormatNumber';\n\nfunction RelativeColumn({ rowData, rowSpanTags, onHoverRange, format }) {\n  const dispatch = useDispatch();\n\n  const integralVal = useMemo(() => {\n    const flag = checkRangeKind(rowData);\n    const formattedValue = FormatNumber(rowData.integration, format);\n    return flag ? formattedValue : `[ ${formattedValue} ]`;\n  }, [format, rowData]);\n\n  const saveHandler = useCallback(\n    (event) => {\n      dispatch({\n        type: CHANGE_RANGE_RELATIVE,\n        payload: {\n          data: { value: event.target.value, id: rowData.id },\n        },\n      });\n    },\n    [dispatch, rowData.id],\n  );\n\n  return (\n    <td {...rowSpanTags} {...onHoverRange}>\n      <EditableColumn\n        value={integralVal}\n        onSave={saveHandler}\n        type=\"number\"\n        style={{ padding: '0.1rem 0.4rem' }}\n      />\n    </td>\n  );\n}\n\nexport default RelativeColumn;\n","import lodashGet from 'lodash/get';\nimport { CSSProperties, useMemo, useCallback, memo } from 'react';\nimport { FaMinusCircle } from 'react-icons/fa';\n\ninterface SignalAssignmentsColumnProps {\n  rowData: any;\n  onHover: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n  assignment: {\n    isActive: boolean;\n  };\n  highlight: {\n    isActive: boolean;\n  };\n  onUnlinkVisibilityChange?: (element: any) => void;\n  unlinkVisibility: boolean;\n  onLink?: (a: any, b: any) => void;\n  onUnlink?: (element: any, b: boolean) => void;\n}\n\nfunction SignalAssignmentsColumn({\n  rowData,\n  onHover,\n  assignment,\n  highlight,\n  onUnlinkVisibilityChange,\n  unlinkVisibility,\n  onLink,\n  onUnlink,\n}: SignalAssignmentsColumnProps) {\n  const diaIDs = useMemo(() => {\n    return lodashGet(rowData, 'tableMetaInfo.signal.diaIDs', []);\n  }, [rowData]);\n\n  const tdCss: CSSProperties | undefined = useMemo(() => {\n    return assignment.isActive || highlight.isActive\n      ? {\n          color: 'red',\n          fontWeight: 'bold',\n        }\n      : undefined;\n  }, [assignment.isActive, highlight.isActive]);\n\n  const visibilityChangeHandler = useCallback(\n    (flag) => {\n      onUnlinkVisibilityChange?.(flag);\n    },\n    [onUnlinkVisibilityChange],\n  );\n  const assignHandler = useCallback(\n    (e) => {\n      onLink?.(e, assignment);\n    },\n    [assignment, onLink],\n  );\n\n  return (\n    <td {...onHover} onClick={assignHandler} style={tdCss}>\n      {diaIDs && diaIDs.length > 0 ? (\n        <div\n          onMouseEnter={() => visibilityChangeHandler(true)}\n          onMouseLeave={() => visibilityChangeHandler(false)}\n        >\n          {diaIDs.length}{' '}\n          <sup>\n            <button\n              type=\"button\"\n              style={{\n                visibility: unlinkVisibility ? 'visible' : 'hidden',\n                padding: 0,\n                margin: 0,\n              }}\n              onClick={(e) => onUnlink?.(e, false)}\n            >\n              <FaMinusCircle color=\"red\" />\n            </button>\n          </sup>\n        </div>\n      ) : assignment.isActive ? (\n        '0'\n      ) : (\n        ''\n      )}\n    </td>\n  );\n}\n\nexport default memo(SignalAssignmentsColumn);\n","import lodashGet from 'lodash/get';\n\nimport FormatNumber from '../../../utility/FormatNumber';\n\nexport default function useFormat(preferences) {\n  return (value, keysPath, prefix = '', suffix = '') => {\n    const format = lodashGet(preferences, keysPath, '0.000');\n    return FormatNumber(value, format, prefix, suffix);\n  };\n}\n","import { useCallback } from 'react';\n\nimport { useDispatch } from '../../../context/DispatchContext';\nimport EditableColumn from '../../../elements/EditableColumn';\nimport { CHANGE_RANGE_SIGNAL_VALUE } from '../../../reducer/types/Types';\nimport { checkMultiplicity } from '../../extra/utilities/MultiplicityUtilities';\n\nimport useFormat from './format';\n\ninterface SignalDeltaColumnProps {\n  rowData: any;\n  onHoverSignal: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n  preferences: string;\n}\n\nfunction SignalDeltaColumn({\n  rowData,\n  onHoverSignal,\n  preferences,\n}: SignalDeltaColumnProps) {\n  const dispatch = useDispatch();\n  const signal = rowData.tableMetaInfo.signal;\n  const format = useFormat(preferences);\n\n  const saveHandler = useCallback(\n    (event) => {\n      dispatch({\n        type: CHANGE_RANGE_SIGNAL_VALUE,\n        payload: {\n          value: event.target.value,\n          rangeID: rowData.id,\n          signalID: signal.id,\n        },\n      });\n    },\n    [dispatch, rowData.id, signal.id],\n  );\n\n  if (!signal) return <td>{''}</td>;\n\n  return (\n    <td {...onHoverSignal}>\n      {!checkMultiplicity(signal.multiplicity, ['m']) ? (\n        `${format(rowData.from, 'fromFormat')} - ${format(\n          rowData.to,\n          'toFormat',\n        )}`\n      ) : (\n        <EditableColumn\n          value={signal.delta.toFixed(3)}\n          onSave={saveHandler}\n          type=\"number\"\n          style={{ padding: '0.1rem 0.4rem' }}\n        />\n      )}\n    </td>\n  );\n}\n\nexport default SignalDeltaColumn;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport lodashGet from 'lodash/get';\nimport { useMemo, useCallback, useState } from 'react';\n\nimport {\n  filterForIDsWithAssignment,\n  useAssignment,\n  useAssignmentData,\n} from '../../assignment';\nimport {\n  HighlightedSource,\n  useHighlight,\n  useHighlightData,\n} from '../../highlight';\nimport { isColumnVisible } from '../extra/preferences/ColumnsHelper';\n\nimport AbsoluteColumn from './TableColumns/AbsoluteColumn';\nimport ActionsColumn from './TableColumns/ActionsColumn';\nimport CouplingColumn from './TableColumns/CouplingColumn';\nimport RangeAssignmentsColumn from './TableColumns/RangeAssignmentsColumn';\nimport RangeColumn from './TableColumns/RangeColumn';\nimport RelativeColumn from './TableColumns/RelativeColumn';\nimport SignalAssignmentsColumn from './TableColumns/SignalAssignmentsColumn';\nimport SignalDeltaColumn from './TableColumns/SignalDeltaColumn';\nimport useFormat from './TableColumns/format';\n\nconst HighlightedRowStyle = css`\n  background-color: #ff6f0057;\n`;\n\nconst ConstantlyHighlightedRowStyle = css`\n  background-color: #f5f5dc;\n`;\n\ninterface RangesTableRowProps {\n  rowData: any;\n  onUnlink: (a: any, b?: any) => void;\n  onContextMenu: (element: any, data: any) => void;\n  preferences: string;\n}\n\nfunction RangesTableRow({\n  rowData,\n  onUnlink,\n  onContextMenu,\n  preferences,\n}: RangesTableRowProps) {\n  const assignmentData = useAssignmentData();\n  const assignmentRange = useAssignment(rowData.id);\n  const highlightRange = useHighlight(\n    [assignmentRange.id].concat(assignmentRange.assigned.x || []).concat(\n      filterForIDsWithAssignment(\n        assignmentData,\n        rowData.signals.map((_signal) => _signal.id),\n      ),\n    ),\n    { type: HighlightedSource.RANGE },\n  );\n  const highlightRangeAssignmentsColumn = useHighlight(\n    assignmentRange.assigned.x || [],\n    { type: HighlightedSource.RANGE },\n  );\n  const assignmentSignal = useAssignment(rowData.tableMetaInfo.id);\n  const highlightSignal = useHighlight(\n    [assignmentSignal.id].concat(assignmentSignal.assigned.x || []),\n    { type: HighlightedSource.SIGNAL },\n  );\n  const highlightData = useHighlightData();\n  const [unlinkRangeButtonVisibility, showUnlinkRangeButton] = useState(false);\n  const [unlinkSignalButtonVisibility, showUnlinkSignalButton] =\n    useState(false);\n\n  const getFormat = useFormat(preferences);\n\n  const rowSpanTags: any = useMemo(() => {\n    return {\n      rowSpan: rowData.tableMetaInfo.rowSpan,\n      style: lodashGet(rowData.tableMetaInfo, 'hide', false)\n        ? { display: 'none' }\n        : undefined,\n    };\n  }, [rowData.tableMetaInfo]);\n\n  const unlinkHandler = useCallback(\n    (e, isOnRangeLevel) => {\n      // stop propagation here to prevent enabling/disabling the assignment mode at the same time\n      if (e) {\n        e.stopPropagation();\n      }\n\n      if (isOnRangeLevel !== undefined) {\n        if (isOnRangeLevel) {\n          onUnlink(rowData);\n          showUnlinkRangeButton(false);\n          assignmentRange.removeAll('x');\n        } else {\n          onUnlink(\n            rowData,\n            lodashGet(rowData, 'tableMetaInfo.signalIndex', undefined),\n          );\n          showUnlinkSignalButton(false);\n          assignmentSignal.removeAll('x');\n        }\n      } else {\n        showUnlinkRangeButton(false);\n        showUnlinkSignalButton(false);\n      }\n    },\n    [assignmentRange, assignmentSignal, onUnlink, rowData],\n  );\n\n  const linkHandler = useCallback((e, assignment) => {\n    e.stopPropagation();\n    assignment.onClick('x');\n  }, []);\n\n  const onHoverRange = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentRange.onMouseEnter('x');\n        highlightRange.show();\n      },\n      onMouseLeave: () => {\n        assignmentRange.onMouseLeave('x');\n        highlightRange.hide();\n      },\n    };\n  }, [assignmentRange, highlightRange]);\n\n  const onHoverRangeAssignmentsColumn = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentRange.onMouseEnter('x');\n        highlightRangeAssignmentsColumn.show();\n      },\n      onMouseLeave: () => {\n        assignmentRange.onMouseLeave('x');\n        highlightRangeAssignmentsColumn.hide();\n      },\n    };\n  }, [assignmentRange, highlightRangeAssignmentsColumn]);\n\n  const onHoverSignal = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentSignal.onMouseEnter('x');\n        highlightSignal.show();\n      },\n      onMouseLeave: () => {\n        assignmentSignal.onMouseLeave('x');\n        highlightSignal.hide();\n      },\n    };\n  }, [assignmentSignal, highlightSignal]);\n\n  const trCss = useMemo(() => {\n    return highlightRange.isActive || assignmentRange.isActive\n      ? HighlightedRowStyle\n      : lodashGet(rowData, 'tableMetaInfo.isConstantlyHighlighted', false)\n      ? ConstantlyHighlightedRowStyle\n      : null;\n  }, [assignmentRange.isActive, highlightRange.isActive, rowData]);\n\n  return (\n    <tr onContextMenu={(e) => onContextMenu(e, rowData)} css={trCss}>\n      <td {...rowSpanTags} {...onHoverRange}>\n        {rowData.tableMetaInfo.rowIndex + 1}\n      </td>\n\n      {isColumnVisible(preferences, 'showFrom') && (\n        <RangeColumn\n          value={rowData.from}\n          rowSpanTags={rowSpanTags}\n          onHoverRange={onHoverRange}\n          format={getFormat('showFrom', undefined)}\n        />\n      )}\n      {isColumnVisible(preferences, 'showTo') && (\n        <RangeColumn\n          value={rowData.to}\n          rowSpanTags={rowSpanTags}\n          onHoverRange={onHoverRange}\n          format={getFormat('toFormat', undefined)}\n        />\n      )}\n\n      <SignalDeltaColumn\n        rowData={rowData}\n        onHoverSignal={onHoverSignal}\n        preferences={preferences}\n      />\n\n      {isColumnVisible(preferences, 'showRelative') && (\n        <RelativeColumn\n          rowData={rowData}\n          rowSpanTags={rowSpanTags}\n          onHoverRange={onHoverRange}\n          format={getFormat('relativeFormat', undefined)}\n        />\n      )}\n\n      {isColumnVisible(preferences, 'showAbsolute') && (\n        <AbsoluteColumn\n          value={rowData.absolute}\n          rowSpanTags={rowSpanTags}\n          onHoverRange={onHoverRange}\n          format={getFormat('absoluteFormat', undefined)}\n        />\n      )}\n\n      <td {...onHoverSignal}>\n        {lodashGet(rowData, 'tableMetaInfo.signal.multiplicity', '')}\n      </td>\n\n      <CouplingColumn rowData={rowData} onHoverSignal={onHoverSignal} />\n\n      <SignalAssignmentsColumn\n        rowData={rowData}\n        assignment={assignmentSignal}\n        highlight={highlightSignal}\n        onHover={onHoverSignal}\n        unlinkVisibility={unlinkSignalButtonVisibility}\n        onUnlinkVisibilityChange={(flag) => showUnlinkSignalButton(flag)}\n        onLink={linkHandler}\n        onUnlink={unlinkHandler}\n      />\n\n      <RangeAssignmentsColumn\n        rowData={rowData}\n        assignment={assignmentRange}\n        highlight={highlightRangeAssignmentsColumn}\n        onHover={onHoverRangeAssignmentsColumn}\n        unlinkVisibility={unlinkRangeButtonVisibility}\n        onUnlinkVisibilityChange={(flag) => showUnlinkRangeButton(flag)}\n        onLink={linkHandler}\n        onUnlink={unlinkHandler}\n        rowSpanTags={rowSpanTags}\n        highlightData={highlightData}\n      />\n\n      <ActionsColumn\n        rowData={rowData}\n        onHoverSignal={onHoverSignal}\n        onHoverRange={onHoverRange}\n        rowSpanTags={rowSpanTags}\n      />\n    </tr>\n  );\n}\n\nexport default RangesTableRow;\n","import { useMemo } from 'react';\n\nimport { Range } from '../../../../data/types/data1d';\nimport generateID from '../../../../data/utilities/generateID';\n\nexport interface RangeData extends Range {\n  rowKey: string;\n  tableMetaInfo: any;\n}\n\nfunction useMapRanges(data) {\n  return useMemo(() => {\n    const _rangesData: Array<RangeData> = [];\n    data.forEach((range, i) => {\n      if (range.signals.length === 1) {\n        _rangesData.push({\n          rowKey: generateID(),\n          ...range,\n          tableMetaInfo: {\n            ...range.tableMetaInfo,\n            signal: range.signals[0],\n            rowIndex: i,\n            signalIndex: 0,\n            id: range.signals[0].id,\n          },\n        });\n      } else if (range.signals.length > 1) {\n        range.signals.forEach((signal, j) => {\n          let hide = false;\n          let rowSpan = null;\n          if (j < range.signals.length - 1) {\n            if (j === 0) {\n              rowSpan = range.signals.length;\n            } else {\n              hide = true;\n            }\n          } else {\n            hide = true;\n          }\n\n          _rangesData.push({\n            rowKey: generateID(),\n            ...range,\n            tableMetaInfo: {\n              ...range.tableMetaInfo,\n              signal,\n              rowSpan,\n              hide,\n              rowIndex: i,\n              signalIndex: j,\n              id: signal.id,\n            },\n          });\n        });\n      }\n    });\n\n    return _rangesData;\n  }, [data]);\n}\n\nexport default useMapRanges;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport lodashGet from 'lodash/get';\nimport { Fragment, useCallback, useRef } from 'react';\nimport { FaLink } from 'react-icons/fa';\n\nimport checkModifierKeyActivated from '../../../data/utilities/checkModifierKeyActivated';\nimport ContextMenu from '../../elements/ContextMenu';\nimport useTableSortBy from '../../hooks/useTableSortBy';\n\nimport RangesTableRow from './RangesTableRow';\nimport useMapRanges from './hooks/useMapRanges';\n\nconst tableStyle = css`\n  border-spacing: 0;\n  border: 1px solid #dedede;\n  width: 100%;\n  font-size: 12px;\n  .react-contextmenu-wrapper {\n    display: contents;\n  }\n  tr {\n    :last-child {\n      td {\n        border-bottom: 0;\n      }\n    }\n  }\n  th {\n    position: sticky;\n    top: 0;\n    background-color: white;\n    z-index: 1;\n  }\n  th,\n  td {\n    white-space: nowrap;\n    text-align: center;\n    margin: 0;\n    padding: 0.1rem 0.4rem;\n    border-bottom: 1px solid #dedede;\n    border-right: 1px solid #dedede;\n\n    :last-child {\n      border-right: 0;\n    }\n    button {\n      background-color: transparent;\n      border: none;\n    }\n  }\n`;\n\nfunction RangesTable({ tableData, onUnlink, context, activeTab, preferences }) {\n  const element = activeTab?.replace(/[0-9]/g, '');\n  const contextRef = useRef<any>();\n  const { items: sortedData, isSortedDesc, onSort } = useTableSortBy(tableData);\n  const data = useMapRanges(sortedData);\n\n  const isVisible = (key) => {\n    return lodashGet(preferences, key, false);\n  };\n\n  const contextMenuHandler = useCallback(\n    (e, rowData) => {\n      if (!checkModifierKeyActivated(e)) {\n        e.preventDefault();\n        contextRef.current.handleContextMenu(e, rowData);\n      }\n    },\n    [contextRef],\n  );\n\n  return (\n    <Fragment>\n      <table css={tableStyle}>\n        <thead>\n          <tr>\n            <th>#</th>\n            {isVisible('showFrom') ? (\n              <th id=\"from\" {...onSort}>\n                From\n                {isSortedDesc('from').content}\n              </th>\n            ) : null}\n            {isVisible('showTo') ? (\n              <th id=\"to\" {...onSort}>\n                To {isSortedDesc('to').content}\n              </th>\n            ) : null}\n            <th>δ (ppm) </th>\n\n            {isVisible('showRelative') ? (\n              <th id=\"integration\" {...onSort}>\n                Rel. {element} {isSortedDesc('integration').content}\n              </th>\n            ) : null}\n            {isVisible('showAbsolute') ? <th>Absolute</th> : null}\n            <th>Mult.</th>\n            <th>J (Hz)</th>\n            <th>\n              <FaLink style={{ fontSize: 10 }} />\n            </th>\n            <th>Σ</th>\n            <th>Kind</th>\n            <th>{''}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data?.map((range) => {\n            return (\n              <RangesTableRow\n                key={range.rowKey}\n                rowData={range}\n                onUnlink={onUnlink}\n                onContextMenu={(e, rowData) => contextMenuHandler(e, rowData)}\n                preferences={preferences}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n      <ContextMenu ref={contextRef} context={context} />\n    </Fragment>\n  );\n}\n\nexport default RangesTable;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport lodashGet from 'lodash/get';\nimport { xGetFromToIndex } from 'ml-spectra-processing';\nimport { useCallback, useMemo, memo, useState, useRef } from 'react';\n\nimport { Molecule } from '../../../data/molecules/Molecule';\nimport { Data1D, Datum1D, Info1D, Ranges } from '../../../data/types/data1d';\nimport { useAssignmentData } from '../../assignment';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { usePreferences } from '../../context/PreferencesContext';\nimport { useAlert } from '../../elements/popup/Alert';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport { UNLINK_RANGE } from '../../reducer/types/Types';\nimport { copyTextToClipboard } from '../../utility/Export';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport NoTableData from '../extra/placeholder/NoTableData';\nimport { getRangeDefaultValues } from '../extra/preferences/defaultValues';\nimport PreferencesHeader from '../header/PreferencesHeader';\n\nimport RangesHeader from './RangesHeader';\nimport RangesPreferences from './RangesPreferences';\nimport RangesTable from './RangesTable';\n\ninterface RangesTablePanelInnerProps {\n  ranges: Ranges;\n  data: Data1D;\n  info: Info1D;\n  xDomain: Array<number>;\n  activeTab: string;\n  molecules: Array<Molecule>;\n  showMultiplicityTrees: boolean;\n  showJGraph: boolean;\n  showRangesIntegrals: boolean;\n  preferences: any;\n}\n\nfunction RangesTablePanelInner({\n  ranges,\n  data,\n  info,\n  xDomain,\n  preferences,\n  activeTab,\n  molecules,\n  showMultiplicityTrees,\n  showJGraph,\n  showRangesIntegrals,\n}: RangesTablePanelInnerProps) {\n  const [isFilterActive, setFilterIsActive] = useState(false);\n  const assignmentData = useAssignmentData();\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const [isFlipped, setFlipStatus] = useState(false);\n\n  const settingRef = useRef<any>();\n\n  const rangesData = useMemo(() => {\n    const isInView = (from, to) => {\n      const factor = 10000;\n      to = to * factor;\n      from = from * factor;\n      return (\n        (to >= xDomain[0] * factor && from <= xDomain[1] * factor) ||\n        (from <= xDomain[0] * factor && to >= xDomain[1] * factor)\n      );\n    };\n\n    const getFilteredRanges = (ranges) => {\n      return ranges.filter((range) => isInView(range.from, range.to));\n    };\n\n    if (ranges.values) {\n      const _ranges = isFilterActive\n        ? getFilteredRanges(ranges.values)\n        : ranges.values;\n\n      return _ranges.map((range) => {\n        return {\n          ...range,\n          tableMetaInfo: {\n            isConstantlyHighlighted: isInView(range.from, range.to),\n          },\n        };\n      });\n    }\n    return [];\n  }, [isFilterActive, ranges.values, xDomain]);\n\n  const unlinkRangeHandler = useCallback(\n    (rangeData, signalIndex = -1) => {\n      dispatch({\n        type: UNLINK_RANGE,\n        payload: {\n          rangeData,\n          assignmentData,\n          signalIndex,\n        },\n      });\n    },\n    [assignmentData, dispatch],\n  );\n\n  const saveJSONToClipboardHandler = useCallback(\n    async (value) => {\n      if (data.x && data.re) {\n        const { x, re } = data;\n        const { from, to } = value;\n\n        const { fromIndex, toIndex } = xGetFromToIndex(x, {\n          from,\n          to,\n        });\n        const dataToClipboard = {\n          x: Array.from(x.slice(fromIndex, toIndex)),\n          y: Array.from(re.slice(fromIndex, toIndex)),\n          ...value,\n        };\n\n        const success = await copyTextToClipboard(\n          JSON.stringify(dataToClipboard, undefined, 2),\n        );\n\n        if (success) {\n          alert.show('Data copied to clipboard');\n        } else {\n          alert.error('copy to clipboard failed');\n        }\n      }\n    },\n    [data, alert],\n  );\n\n  const rangesPreferences = useMemo(() => {\n    const _preferences =\n      lodashGet(\n        preferences.current,\n        `formatting.panels.ranges.[${activeTab}]`,\n      ) || getRangeDefaultValues(activeTab);\n\n    return _preferences;\n  }, [activeTab, preferences]);\n\n  const contextMenu = useMemo(\n    () => [\n      {\n        label: 'Copy to clipboard',\n        onClick: saveJSONToClipboardHandler,\n      },\n    ],\n    [saveJSONToClipboardHandler],\n  );\n\n  const filterHandler = useCallback(() => {\n    setFilterIsActive(!isFilterActive);\n  }, [isFilterActive]);\n\n  const settingsPanelHandler = useCallback(() => {\n    setFlipStatus(!isFlipped);\n  }, [isFlipped]);\n\n  const saveSettingHandler = useCallback(() => {\n    settingRef.current.saveSetting();\n    setFlipStatus(false);\n  }, []);\n\n  return (\n    <>\n      <div\n        css={[\n          tablePanelStyle,\n          isFlipped &&\n            css`\n              th {\n                position: relative;\n              }\n            `,\n        ]}\n      >\n        {!isFlipped && (\n          <RangesHeader\n            {...{\n              ranges,\n              info,\n              activeTab,\n              molecules,\n              showRangesIntegrals,\n              showMultiplicityTrees,\n              showJGraph,\n              isFilterActive,\n            }}\n            onUnlink={unlinkRangeHandler}\n            onFilterActivated={filterHandler}\n            onSettingClick={settingsPanelHandler}\n            filterCounter={rangesData.length}\n          />\n        )}\n        {isFlipped && (\n          <PreferencesHeader\n            onSave={saveSettingHandler}\n            onClose={settingsPanelHandler}\n          />\n        )}\n        <div className=\"inner-container\">\n          {!isFlipped ? (\n            <div className=\"table-container\">\n              {rangesData && rangesData.length > 0 ? (\n                <RangesTable\n                  activeTab={activeTab}\n                  tableData={rangesData}\n                  onUnlink={unlinkRangeHandler}\n                  context={contextMenu}\n                  preferences={rangesPreferences}\n                />\n              ) : (\n                <NoTableData />\n              )}\n            </div>\n          ) : (\n            <RangesPreferences ref={settingRef} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst MemoizedRangesTablePanel = memo(RangesTablePanelInner);\n\nconst emptyData = { ranges: {}, data: {}, info: {} };\n\nexport default function RangesTablePanel() {\n  const {\n    displayerKey,\n    xDomain,\n    activeTab,\n    molecules,\n    toolOptions: {\n      selectedTool,\n      data: { showMultiplicityTrees, showRangesIntegrals, showJGraph },\n    },\n  } = useChartData();\n\n  const { ranges, data, info } = useSpectrum(emptyData) as Datum1D;\n  const preferences = usePreferences();\n\n  return (\n    <MemoizedRangesTablePanel\n      {...{\n        ranges,\n        data,\n        info,\n        showMultiplicityTrees,\n        showJGraph,\n        showRangesIntegrals,\n        selectedTool,\n        displayerKey,\n        preferences,\n        xDomain,\n        activeTab,\n        molecules,\n      }}\n    />\n  );\n}\n","import lodashGet from 'lodash/get';\n\nimport { usePreferences } from '../context/PreferencesContext';\n\nexport function useCheckToolsVisibility(): (toolKey: string) => boolean {\n  const preferences = usePreferences();\n\n  return (toolKey) =>\n    lodashGet(preferences.current, `display.toolBarButtons.${toolKey}`, true);\n}\n","import {\n  SvgNmrSameTop,\n  SvgNmrResetScale,\n  SvgNmrRangePicking,\n} from 'cheminfo-font';\nimport { memo, useCallback } from 'react';\nimport {\n  FaCreativeCommonsSamplingPlus,\n  FaEye,\n  FaEyeSlash,\n} from 'react-icons/fa';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport Button from '../../elements/ButtonToolTip';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { useModal } from '../../elements/popup/Modal';\nimport { useCheckToolsVisibility } from '../../hooks/useCheckToolsVisibility';\nimport { ActiveSpectrum } from '../../reducer/Reducer';\nimport { DISPLAYER_MODE } from '../../reducer/core/Constants';\nimport {\n  ADD_MISSING_PROJECTION,\n  CHANGE_VISIBILITY,\n  DELETE_SPECTRA,\n  RESET_SPECTRA_SCALE,\n  SET_SPECTRA_SAME_TOP,\n  AUTO_RANGES_SPECTRA_PICKING,\n  AUTO_ZONES_SPECTRA_PICKING,\n} from '../../reducer/types/Types';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\n\ninterface SpectraPanelHeaderProps {\n  spectrums: Array<Datum1D | Datum2D>;\n}\n\ninterface SpectraPanelHeaderInnerProps extends SpectraPanelHeaderProps {\n  data: Array<Datum1D | Datum2D>;\n  activeTab: string;\n  activeSpectrum: ActiveSpectrum | null;\n  displayerMode: string;\n  isAutomaticPickingVisible: boolean;\n}\n\nfunction SpectraPanelHeaderInner({\n  data,\n  activeSpectrum,\n  activeTab,\n  displayerMode,\n  spectrums,\n  isAutomaticPickingVisible,\n}: SpectraPanelHeaderInnerProps) {\n  const modal = useModal();\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const handleDelete = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All records will be deleted, Are You sure?',\n      buttons: [\n        {\n          text: 'Yes',\n          handler: () => {\n            dispatch({ type: DELETE_SPECTRA });\n          },\n        },\n        { text: 'No' },\n      ],\n    });\n  }, [dispatch, modal]);\n\n  const showAllSpectrumsHandler = useCallback(() => {\n    const spectrumsPerTab = spectrums.map((datum) => {\n      return datum.id;\n    });\n    dispatch({ type: CHANGE_VISIBILITY, id: spectrumsPerTab });\n  }, [dispatch, spectrums]);\n\n  const hideAllSpectrumsHandler = useCallback(() => {\n    dispatch({ type: CHANGE_VISIBILITY, id: [] });\n  }, [dispatch]);\n\n  const addMissingProjectionHandler = useCallback(() => {\n    function getMissingProjection(SpectrumsData) {\n      let nucleus = activeTab.split(',');\n      nucleus = nucleus[0] === nucleus[1] ? [nucleus[0]] : nucleus;\n      const missingNucleus: Array<string> = [];\n      for (const n of nucleus) {\n        const hasSpectrums = SpectrumsData.some((d) => d.info.nucleus === n);\n        if (!hasSpectrums) {\n          missingNucleus.push(n);\n        }\n      }\n      return missingNucleus;\n    }\n    const missingNucleus = getMissingProjection(data);\n    if (missingNucleus.length > 0) {\n      dispatch({ type: ADD_MISSING_PROJECTION, nucleus: missingNucleus });\n    } else {\n      alert.error('Nothing to calculate');\n    }\n  }, [activeTab, alert, data, dispatch]);\n\n  const setSameTopHandler = useCallback(() => {\n    dispatch({ type: SET_SPECTRA_SAME_TOP });\n  }, [dispatch]);\n  const resetScaleHandler = useCallback(() => {\n    dispatch({ type: RESET_SPECTRA_SCALE });\n  }, [dispatch]);\n\n  const automaticPickingHandler = useCallback(() => {\n    void (async () => {\n      const hideLoading = await alert.showLoading(\n        'Automatic Ranges/Zones detection for all spectra in progress',\n      );\n      setTimeout(() => {\n        dispatch({ type: AUTO_RANGES_SPECTRA_PICKING });\n        dispatch({ type: AUTO_ZONES_SPECTRA_PICKING });\n        hideLoading();\n      }, 0);\n    })();\n  }, [dispatch, alert]);\n\n  return (\n    <DefaultPanelHeader\n      onDelete={handleDelete}\n      counter={spectrums?.length}\n      deleteToolTip=\"Delete all spectra\"\n    >\n      <Button popupTitle=\"Hide all spectra\" onClick={hideAllSpectrumsHandler}>\n        <FaEyeSlash />\n      </Button>\n      <Button popupTitle=\"Show all spectra\" onClick={showAllSpectrumsHandler}>\n        <FaEye />\n      </Button>\n      {activeSpectrum && activeTab && activeTab.split(',').length > 1 && (\n        <Button\n          popupTitle=\"Add missing projection\"\n          onClick={addMissingProjectionHandler}\n        >\n          <FaCreativeCommonsSamplingPlus />\n        </Button>\n      )}\n      {displayerMode === DISPLAYER_MODE.DM_1D && spectrums.length > 1 && (\n        <>\n          <Button popupTitle=\"Reset Scale\" onClick={resetScaleHandler}>\n            <SvgNmrResetScale />\n          </Button>\n          <Button popupTitle=\"Same Top\" onClick={setSameTopHandler}>\n            <SvgNmrSameTop />\n          </Button>\n        </>\n      )}\n      {data && data.length > 0 && isAutomaticPickingVisible && (\n        <Button\n          popupTitle=\"Automatic Ranges/Zones picking for all spectra\"\n          onClick={automaticPickingHandler}\n        >\n          <SvgNmrRangePicking />\n        </Button>\n      )}\n    </DefaultPanelHeader>\n  );\n}\n\nconst MemoizedSpectraPanelHeader = memo(SpectraPanelHeaderInner);\n\nexport default function SpectrumsTabs({ spectrums }: SpectraPanelHeaderProps) {\n  const { data, activeSpectrum, activeTab, displayerMode } = useChartData();\n  const isToolVisible = useCheckToolsVisibility();\n  const isAutomaticPickingVisible = isToolVisible('autoRangesTool');\n  return (\n    <MemoizedSpectraPanelHeader\n      {...{\n        data,\n        activeSpectrum,\n        activeTab,\n        displayerMode,\n        spectrums,\n        isAutomaticPickingVisible,\n      }}\n    />\n  );\n}\n","import { CSSProperties, memo } from 'react';\n\ninterface ColorIndicatorNDProps {\n  activated: boolean;\n}\n\ninterface ColorIndicator1DProps extends ColorIndicatorNDProps {\n  color: string;\n}\n\ninterface ColorIndicator2DProps extends ColorIndicatorNDProps {\n  positiveColor: string;\n  negativeColor: string;\n}\n\nfunction ColorIndicator1D({ color, activated }: ColorIndicator1DProps) {\n  return (\n    <div\n      style={{\n        backgroundColor: color,\n        height: '12px',\n        width: '12px',\n        opacity: activated ? 1 : 0.1,\n        display: 'inline-block',\n      }}\n    />\n  );\n}\n\nfunction ColorIndicator2D({\n  positiveColor,\n  negativeColor,\n  activated,\n}: ColorIndicator2DProps) {\n  return (\n    <svg\n      width=\"12\"\n      height=\"12\"\n      viewBox=\"0 0 12 12\"\n      opacity={activated ? 1 : 0.1}\n    >\n      <g>\n        <path d=\"M0,0H12L0,12Z\" fill={positiveColor} strokeWidth=\"0\" />\n        <path d=\"M12,12H0L12,0Z\" fill={negativeColor} strokeWidth=\"0\" />\n      </g>\n    </svg>\n  );\n}\n\ntype ColorIndicatorProps = BaseColorIndicatorProps &\n  (\n    | {\n        dimension: 1;\n        color: Omit<ColorIndicator1DProps, 'activated'>;\n      }\n    | { dimension: 2; color: Omit<ColorIndicator2DProps, 'activated'> }\n  );\n\ninterface BaseColorIndicatorProps {\n  activated: boolean;\n  onClick: (e: any) => void;\n  style: CSSProperties;\n}\n\nfunction ColorIndicator(props: ColorIndicatorProps) {\n  const { style, onClick = () => null, activated } = props;\n\n  return (\n    <button style={style} type=\"button\" onClick={onClick}>\n      {props.dimension === 2 ? (\n        <ColorIndicator2D {...props.color} activated={activated} />\n      ) : (\n        <ColorIndicator1D activated={activated} {...props.color} />\n      )}\n    </button>\n  );\n}\n\nexport default memo(ColorIndicator);\n","import { SvgNmrPeaks } from 'cheminfo-font';\nimport { CSSProperties } from 'react';\n\ninterface DataProps {\n  id: string;\n  peaks: {\n    values: Array<any>;\n  };\n}\n\ninterface MarkersProps {\n  id: string;\n}\n\ninterface ShowHideMarkersButtonProps {\n  style: CSSProperties;\n  data: DataProps;\n  onChangeMarkersVisibility: (data: DataProps) => void;\n  markersVisible: Array<MarkersProps>;\n}\n\nexport default function ShowHideMarkersButton({\n  data,\n  onChangeMarkersVisibility,\n  markersVisible,\n  style,\n}: ShowHideMarkersButtonProps) {\n  const isMarkerVisible = (id) => {\n    return markersVisible.findIndex((v) => v.id === id) !== -1 ? true : false;\n  };\n\n  return (\n    <button\n      style={{\n        ...style,\n        opacity:\n          isMarkerVisible(data.id) && data.peaks && data.peaks.values.length > 0\n            ? 1\n            : 0.1,\n      }}\n      type=\"button\"\n      onClick={() => onChangeMarkersVisibility(data)}\n      disabled={data.peaks && data.peaks.values.length === 0}\n    >\n      <SvgNmrPeaks />\n    </button>\n  );\n}\n","import { CSSProperties } from 'react';\nimport { FaEye } from 'react-icons/fa';\n\ninterface DataProps {\n  id: string;\n  display: { color: string; positiveColor: string; negativeColor: string };\n  info: {\n    dimension: 1 | 2;\n  };\n}\n\ninterface ShowHideSpectrumButtonProps {\n  data: DataProps;\n  onChangeVisibility: (\n    data: DataProps,\n    is: 'isVisible' | 'isPositiveVisible' | 'isNegativeVisible',\n  ) => void;\n  style: CSSProperties;\n}\n\nexport default function ShowHideSpectrumButton({\n  data,\n  onChangeVisibility,\n  style,\n}: ShowHideSpectrumButtonProps) {\n  const isVisible = (id, key) => {\n    return data ? data.display[key] : true;\n  };\n  return (\n    <>\n      {data.info.dimension === 1 && (\n        <button\n          data-test-id=\"hide-show-spectrum-button\"\n          style={style}\n          type=\"button\"\n          onClick={() => onChangeVisibility(data, 'isVisible')}\n        >\n          <FaEye\n            style={{\n              ...(isVisible(data.id, 'isVisible')\n                ? {\n                    opacity: 1,\n                    strokeWidth: '1px',\n                    fill: data.display.color,\n                  }\n                : {\n                    opacity: 0.1,\n                    fill: data.display.color,\n                  }),\n            }}\n          />\n        </button>\n      )}\n      {data.info.dimension === 2 && (\n        <div style={{ minWidth: '40px' }}>\n          <button\n            style={{ ...style, width: '20px', minWidth: '20px' }}\n            type=\"button\"\n            onClick={() => onChangeVisibility(data, 'isPositiveVisible')}\n          >\n            <FaEye\n              style={{\n                ...(isVisible(data.id, 'isPositiveVisible')\n                  ? {\n                      opacity: 1,\n                      strokeWidth: '1px',\n                      fill: data.display.positiveColor,\n                    }\n                  : {\n                      opacity: 0.1,\n                      fill: data.display.positiveColor,\n                    }),\n              }}\n            />\n          </button>\n          <button\n            style={{ ...style, width: '20px', minWidth: '20px' }}\n            type=\"button\"\n            onClick={() => onChangeVisibility(data, 'isNegativeVisible')}\n          >\n            <FaEye\n              style={{\n                ...(isVisible(data.id, 'isNegativeVisible')\n                  ? {\n                      opacity: 1,\n                      strokeWidth: '1px',\n                      fill: data.display.negativeColor,\n                    }\n                  : {\n                      opacity: 0.1,\n                      fill: data.display.negativeColor,\n                    }),\n              }}\n            />\n          </button>\n        </div>\n      )}\n    </>\n  );\n}\n","import { SvgNmrFid, SvgNmrFt, SvgNmr2D } from 'cheminfo-font';\nimport { CSSProperties, memo } from 'react';\n\nimport ColorIndicator from './base/ColorIndicator';\nimport ShowHideMarkersButton from './base/ShowHideMarkersButton';\nimport ShowHideSpectrumButton from './base/ShowHideSpectrumButton';\n\nconst styles: Record<\n  'button' | 'row' | 'name' | 'info' | 'icon',\n  CSSProperties\n> = {\n  button: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    width: '26px',\n    minWidth: '26px',\n  },\n  row: {\n    display: 'flex',\n    alignContent: 'center',\n    height: '25px',\n    borderBottom: '0.55px solid #f1f1f1',\n  },\n  name: {\n    flex: 1,\n    height: '100%',\n    display: 'flex',\n  },\n  info: {\n    flex: '1 1 1px',\n    height: '100%',\n    display: 'block',\n    alignItems: 'center',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    lineHeight: '24px',\n  },\n  icon: {\n    display: 'flex',\n    margin: 'auto',\n    justifyContent: 'center',\n  },\n};\n\nfunction SpectrumListItem({\n  activeSpectrum,\n  markersVisible,\n  data,\n  onChangeVisibility,\n  onChangeMarkersVisibility,\n  onChangeActiveSpectrum,\n  onOpenSettingModal,\n  onContextMenu,\n}) {\n  const formatValueAsHTML = (value) => {\n    if (value) {\n      value = value.replace(/(?<value>[0-9]+)/g, '<sub>$<value></sub>');\n    }\n    return value;\n  };\n  const activated = activeSpectrum && activeSpectrum.id === data.id;\n  const { color, name, positiveColor, negativeColor } = data.display;\n  return (\n    <div\n      style={{\n        ...styles.row,\n        ...(activated\n          ? { backgroundColor: '#fafafa' }\n          : { opacity: activeSpectrum ? 0.2 : 1 }),\n      }}\n      onContextMenu={onContextMenu}\n    >\n      <ShowHideSpectrumButton\n        data={data}\n        onChangeVisibility={onChangeVisibility}\n        style={styles.button}\n      />\n\n      <div\n        data-test-id=\"activate-deactivate-spectrum-button\"\n        style={styles.name}\n        onClick={() => onChangeActiveSpectrum(data)}\n      >\n        <div style={{ ...styles.icon, width: '16px' }}>\n          {data.info.isFid ? (\n            <SvgNmrFid />\n          ) : data.info.dimension === 2 ? (\n            <SvgNmr2D />\n          ) : (\n            <SvgNmrFt />\n          )}\n        </div>\n        <span style={styles.info}>{name}</span>\n        <div\n          style={styles.info}\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{\n            __html: data.info && formatValueAsHTML(data.info.solvent),\n          }}\n        />\n        <span style={styles.info}>\n          <span\n            style={{\n              borderLeft: '0.55px solid #e5e5e5',\n              paddingRight: '5px',\n            }}\n          />\n          {data.info?.experiment}\n        </span>\n\n        {/* {data.info && data.info.solvent} */}\n        {/* </div> */}\n        <span style={styles.info}>{data.info?.pulse}</span>\n      </div>\n\n      <ShowHideMarkersButton\n        data={data}\n        style={{\n          ...styles.icon,\n          ...styles.button,\n        }}\n        onChangeMarkersVisibility={onChangeMarkersVisibility}\n        markersVisible={markersVisible}\n      />\n      <ColorIndicator\n        style={styles.button}\n        dimension={data.info.dimension}\n        color={{ positiveColor, color, negativeColor }}\n        activated={activated}\n        onClick={(event) => onOpenSettingModal(data, event)}\n      />\n    </div>\n  );\n}\n\nexport default memo(SpectrumListItem);\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, memo } from 'react';\nimport { SketchPicker } from 'react-color';\n\nimport { COLORS } from '../../../data/utilities/getColor';\n\ninterface FormikColorPickerProps {\n  name: string;\n  onColorChange?: (element: any) => void;\n}\n\nfunction FormikColorPicker(props: FormikColorPickerProps) {\n  const { onColorChange = () => null, name } = props;\n\n  const { values, setFieldValue } = useFormikContext();\n\n  const colorchangeHandler = useCallback(\n    (color) => {\n      onColorChange(color);\n      setFieldValue(\n        name,\n        `${color.hex}${Math.round(color.rgb.a * 255).toString(16)}`,\n      );\n    },\n    [name, onColorChange, setFieldValue],\n  );\n\n  return (\n    <SketchPicker\n      color={{ hex: lodashGet(values, name, '#000') }}\n      presetColors={COLORS}\n      onChangeComplete={(e) => colorchangeHandler(e)}\n    />\n  );\n}\n\nexport default memo(FormikColorPicker);\n","import { xNoiseSanPlot } from 'ml-spectra-processing';\nimport { memo, useMemo } from 'react';\nimport { Axis, LineSeries, Legend, Heading, Plot } from 'react-plot';\n\nfunction prepareData(input) {\n  const length = input.length;\n  const jump = Math.floor(length / 307200) || 1;\n  const array = new Float64Array((length / jump) >> 0);\n  let index = 0;\n  for (let i = 0; i < array.length; i += jump) {\n    array[index++] = input[i];\n  }\n  return array;\n}\n\nfunction getLine(value, data, options) {\n  const { log10, abs } = Math;\n  const { yLogBase } = options;\n  const first = data.length > 0 ? data[0].x : 0;\n  const last = data.length > 0 ? data[data.length - 1].x : 0;\n  const inLogScale = log10(abs(value)) / log10(yLogBase);\n  return [\n    { x: first, y: inLogScale },\n    { x: last, y: inLogScale },\n  ];\n}\n\ninterface Spectrum1DHistogramProps {\n  color?: string;\n  data: any;\n  options?: any;\n}\n\nfunction Spectrum1DHistogram({\n  color = 'red',\n  data,\n  options = {},\n}: Spectrum1DHistogramProps) {\n  //factorStd = 5,\n  const { yLogBase = 2 } = options;\n  const processedData = useMemo(() => {\n    const input = prepareData(data.re);\n\n    const sanResult = xNoiseSanPlot(input, options);\n    const sanPlot: any = {};\n    const lines: any = {};\n    for (let plotKey in sanResult.sanplot) {\n      const { x, y } = sanResult.sanplot[plotKey];\n      let result = new Array(x.length);\n      for (let i = 0; i < x.length; i++) {\n        result[i] = { x: x[i], y: y[i] };\n      }\n      sanPlot[plotKey] = result;\n      lines[plotKey] = getLine(sanResult[plotKey], result, { yLogBase });\n    }\n    return { sanPlot, lines };\n  }, [data.re, options, yLogBase]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <div style={{ display: 'block' }}>\n        <Plot width={180} height={220}>\n          <Heading title=\"Sanplot\" />\n          <LineSeries\n            data={processedData.sanPlot.positive}\n            xAxis=\"x\"\n            yAxis=\"y\"\n            label=\"positive\"\n            lineStyle={{\n              stroke: color,\n              strokeWidth: 1.2,\n            }}\n            markerStyle={{\n              fill: color,\n              stroke: color,\n            }}\n          />\n          <LineSeries\n            data={processedData.lines.positive}\n            xAxis=\"x\"\n            yAxis=\"y\"\n            label=\"noise level\"\n            lineStyle={{\n              stroke: 'blue',\n              strokeWidth: 0.8,\n              strokeDasharray: '3, 3',\n            }}\n            markerStyle={{\n              fill: color,\n              stroke: color,\n            }}\n          />\n          <Axis\n            id=\"x\"\n            label=\"Pt\"\n            position=\"bottom\"\n            tickLabelStyle={{ fontSize: '0.6rem' }}\n            labelStyle={{ fontSize: '0.6rem' }}\n          />\n          <Axis\n            id=\"y\"\n            label={`Intensity [Log${yLogBase}]`}\n            position=\"left\"\n            tickLabelStyle={{ fontSize: '0.6rem' }}\n            labelStyle={{ fontSize: '0.7rem' }}\n          />\n          <Legend position=\"embedded\" bottom={5} right={60} />\n        </Plot>\n      </div>\n      <div style={{ display: 'block', width: 180, height: 180 }}>\n        <Plot width={180} height={180}>\n          <LineSeries\n            data={processedData.sanPlot.negative}\n            xAxis=\"x\"\n            yAxis=\"y\"\n            label=\"negative\"\n            lineStyle={{\n              stroke: color,\n              strokeWidth: 1.2,\n            }}\n            markerStyle={{\n              fill: color,\n              stroke: color,\n            }}\n          />\n\n          <LineSeries\n            data={processedData.lines.negative}\n            xAxis=\"x\"\n            yAxis=\"y\"\n            label=\"noise level\"\n            lineStyle={{\n              stroke: 'blue',\n              strokeWidth: 0.8,\n              strokeDasharray: '3, 3',\n            }}\n            markerStyle={{\n              fill: color,\n              stroke: color,\n            }}\n          />\n\n          <Axis\n            id=\"x\"\n            label=\"Pt\"\n            position=\"bottom\"\n            tickLabelStyle={{ fontSize: '0.6rem' }}\n            labelStyle={{ fontSize: '0.5rem' }}\n          />\n          <Axis\n            id=\"y\"\n            label={`Intensity [Log${yLogBase}]`}\n            position=\"left\"\n            tickLabelStyle={{ fontSize: '0.6rem' }}\n            labelStyle={{ fontSize: '0.7rem' }}\n          />\n          <Legend position=\"embedded\" bottom={5} right={60} />\n        </Plot>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(Spectrum1DHistogram);\n","import { useCallback, useRef } from 'react';\n\nimport FormikColorPicker from '../../../../elements/formik/FormikColorPicker';\nimport FormikForm from '../../../../elements/formik/FormikForm';\n\nimport Spectrum1DHistogram from './Spectrum1DHistogram';\n\ninterface Spectrum1DSettingProps {\n  data: any;\n  onSubmit: (values: any, helpers: any) => void;\n}\n\nfunction Spectrum1DSetting({\n  data: SpectrumData,\n  onSubmit,\n}: Spectrum1DSettingProps) {\n  const refForm = useRef<any>(null);\n\n  const triggerSubmitHandler = useCallback(() => {\n    if (refForm.current) {\n      refForm.current.submitForm();\n    }\n  }, []);\n\n  return (\n    <FormikForm\n      ref={refForm}\n      initialValues={SpectrumData.display}\n      onSubmit={onSubmit}\n    >\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '1.25rem' }}>\n        <div style={{ display: 'block', position: 'relative' }}>\n          <FormikColorPicker\n            name=\"color\"\n            onColorChange={triggerSubmitHandler}\n          />\n        </div>\n        <Spectrum1DHistogram color=\"red\" data={SpectrumData.data} />\n      </div>\n    </FormikForm>\n  );\n}\n\nexport default Spectrum1DSetting;\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, memo } from 'react';\nimport ReactSlider from 'react-slider';\n\ninterface FormikSliderProps {\n  name: string;\n  onAfterChange?: (element: any) => void;\n}\n\nfunction FormikSlider(props: FormikSliderProps) {\n  const { onAfterChange = () => null, name, ...sliderProps } = props;\n\n  const { values, setFieldValue } = useFormikContext();\n\n  const changeHandler = useCallback(\n    (value) => {\n      onAfterChange(value);\n      setFieldValue(name, value);\n    },\n    [name, onAfterChange, setFieldValue],\n  );\n\n  return (\n    <ReactSlider\n      className=\"horizontal-slider\"\n      thumbClassName=\"thumb\"\n      trackClassName=\"track\"\n      defaultValue={lodashGet(values, name, [0, 100])}\n      onAfterChange={changeHandler}\n      renderThumb={(props, state) => (\n        <div {...props}>\n          <span>{state.valueNow}</span>\n        </div>\n      )}\n      pearling\n      minDistance={10}\n      {...sliderProps}\n    />\n  );\n}\n\nexport default memo(FormikSlider);\n","import { xNoiseSanPlot } from 'ml-spectra-processing';\nimport { memo, useMemo } from 'react';\nimport { Axis, LineSeries, Legend, Plot } from 'react-plot';\n\nfunction prepareData(matrix) {\n  let cols = matrix[0].length;\n  let rows = matrix.length;\n  let jump = Math.floor((cols * rows) / 204800) || 1;\n  const array = new Float64Array(((cols * rows) / jump) >> 0);\n  let index = 0;\n  for (let i = 0; i < array.length; i += jump) {\n    array[index++] = matrix[(i / rows) >> 0][i % rows];\n  }\n  return array;\n}\n\nfunction getLine(value, data, options) {\n  const { log10, abs } = Math;\n  const { yLogBase } = options;\n  const first = data.length > 0 ? data[0].x : 0;\n  const last = data.length > 0 ? data[data.length - 1].x : 0;\n  const inLogScale = log10(abs(value)) / log10(yLogBase);\n  return [\n    { x: first, y: inLogScale },\n    { x: last, y: inLogScale },\n  ];\n}\n\ninterface Spectrum2DHistogramProps {\n  color?: string;\n  data: any;\n  options?: any;\n}\n\nfunction Spectrum2DHistogram({\n  color = 'red',\n  data,\n  options = {},\n}: Spectrum2DHistogramProps) {\n  const { yLogBase = 2 } = options;\n\n  const processedData = useMemo(() => {\n    const input = prepareData(data.z);\n    const sanResult = xNoiseSanPlot(input, options);\n    const sanPlot: any = {};\n    const lines: any = {};\n    for (let plotKey in sanResult.sanplot) {\n      const { x, y } = sanResult.sanplot[plotKey];\n      let result = new Array(x.length);\n      for (let i = 0; i < x.length; i++) {\n        result[i] = { x: x[i], y: y[i] };\n      }\n      sanPlot[plotKey] = result;\n      lines[plotKey] = getLine(sanResult[plotKey], result, { yLogBase });\n    }\n    return { sanPlot, lines };\n  }, [data.z, options, yLogBase]);\n\n  return (\n    <div>\n      <div style={{ textAlign: 'center', paddingBottom: 5, paddingTop: 5 }}>\n        San Plot\n      </div>\n\n      <div\n        style={{\n          borderTop: '1px solid #ededed',\n          marginTop: '10px',\n          paddingTop: '10px',\n          display: 'flex',\n          flexDirection: 'row',\n        }}\n      >\n        <Plot width={220} height={180}>\n          <LineSeries\n            data={processedData.sanPlot.positive}\n            xAxis=\"x\"\n            yAxis=\"y\"\n            label=\"positive\"\n            lineStyle={{\n              stroke: color,\n              strokeWidth: 1.2,\n            }}\n            markerStyle={{\n              fill: color,\n              stroke: color,\n            }}\n          />\n          <LineSeries\n            data={processedData.lines.positive}\n            xAxis=\"x\"\n            yAxis=\"y\"\n            label=\"noise level\"\n            lineStyle={{\n              stroke: 'blue',\n              strokeWidth: 0.8,\n              strokeDasharray: '3, 3',\n            }}\n            markerStyle={{\n              fill: color,\n              stroke: color,\n            }}\n          />\n          <Axis\n            id=\"x\"\n            label=\"Pt\"\n            position=\"bottom\"\n            tickLabelStyle={{ fontSize: '0.6rem' }}\n            labelStyle={{ fontSize: '0.6rem' }}\n          />\n          <Axis\n            id=\"y\"\n            label={`Intensity [Log ${yLogBase}]`}\n            position=\"left\"\n            tickLabelStyle={{ fontSize: '0.6rem' }}\n            labelStyle={{ fontSize: '0.7rem' }}\n          />\n          <Legend position=\"embedded\" bottom={90} right={5} />\n        </Plot>\n\n        <Plot width={220} height={180}>\n          <LineSeries\n            data={processedData.sanPlot.negative}\n            xAxis=\"x\"\n            yAxis=\"y\"\n            label=\"negative\"\n            lineStyle={{\n              stroke: color,\n              strokeWidth: 1.2,\n            }}\n            markerStyle={{\n              fill: color,\n              stroke: color,\n            }}\n          />\n\n          <LineSeries\n            data={processedData.lines.negative}\n            xAxis=\"x\"\n            yAxis=\"y\"\n            label=\"noise level\"\n            lineStyle={{\n              stroke: 'blue',\n              strokeWidth: 0.8,\n              strokeDasharray: '3, 3',\n            }}\n            markerStyle={{\n              fill: color,\n              stroke: color,\n            }}\n          />\n\n          <Axis\n            id=\"x\"\n            label=\"Pt\"\n            position=\"bottom\"\n            tickLabelStyle={{ fontSize: '0.6rem' }}\n            labelStyle={{ fontSize: '0.5rem' }}\n          />\n          <Axis\n            id=\"y\"\n            position=\"left\"\n            tickLabelStyle={{ fontSize: '0.6rem' }}\n            labelStyle={{ fontSize: '0.7rem' }}\n          />\n          <Legend position=\"embedded\" bottom={90} right={5} />\n        </Plot>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(Spectrum2DHistogram);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useRef } from 'react';\n\nimport FormikColorPicker from '../../../../elements/formik/FormikColorPicker';\nimport FormikForm from '../../../../elements/formik/FormikForm';\nimport FormikInput from '../../../../elements/formik/FormikInput';\nimport FormikSlider from '../../../../elements/formik/FormikSlider';\n\nimport Spectrum2DHistogram from './Spectrum2DHistogram';\n\ninterface Spectrum2DSettingProps {\n  data: any;\n  onSubmit: (values: any, helpers: any) => void;\n}\n\nfunction Spectrum2DSetting({\n  data: SpectrumData,\n  onSubmit,\n}: Spectrum2DSettingProps) {\n  const refForm = useRef<any>(null);\n\n  const style = css`\n    .positive {\n      display: inline-block;\n      .track-1 {\n        background-color: ${SpectrumData.display.positiveColor} !important;\n      }\n    }\n    .negative {\n      display: inline-block;\n\n      .track-1 {\n        background-color: ${SpectrumData.display.negativeColor} !important;\n      }\n    }\n  `;\n\n  const triggerSubmitHandler = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n\n  return (\n    <FormikForm\n      ref={refForm}\n      initialValues={SpectrumData.display}\n      onSubmit={onSubmit}\n    >\n      <div css={style}>\n        <div className=\"positive\">\n          <span style={{ padding: '0 10px' }}>Positive</span>\n          <FormikColorPicker\n            name=\"positiveColor\"\n            onColorChange={triggerSubmitHandler}\n          />\n          <div style={{ padding: '5px' }}>\n            <span className=\"label\">contour Levels [ min - max ]</span>\n            <FormikSlider\n              name=\"contourOptions.positive.contourLevels\"\n              onAfterChange={triggerSubmitHandler}\n            />\n            <span className=\"label\">number of Layers </span>\n            <FormikInput\n              name=\"contourOptions.positive.numberOfLayers\"\n              onChange={triggerSubmitHandler}\n              type=\"number\"\n            />\n          </div>\n        </div>\n        <div className=\"negative\">\n          <span style={{ padding: '0 10px' }}>Negative</span>\n          <FormikColorPicker\n            name=\"negativeColor\"\n            onColorChange={triggerSubmitHandler}\n          />\n          <div style={{ padding: '5px' }}>\n            <span className=\"label\">contour Levels [ min - max ]</span>\n            <FormikSlider\n              name=\"contourOptions.negative.contourLevels\"\n              onAfterChange={triggerSubmitHandler}\n            />\n            <span className=\"label\">number of Layers </span>\n            <FormikInput\n              name=\"contourOptions.negative.numberOfLayers\"\n              onChange={triggerSubmitHandler}\n              type=\"number\"\n            />\n          </div>\n        </div>\n        <Spectrum2DHistogram data={SpectrumData.data} />\n      </div>\n    </FormikForm>\n  );\n}\n\nexport default Spectrum2DSetting;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { memo, useCallback } from 'react';\n\nimport { useDispatch } from '../../../../context/DispatchContext';\nimport { CHANGE_SPECTRUM_SETTING } from '../../../../reducer/types/Types';\n\nimport Spectrum1DSetting from './Spectrum1DSetting';\nimport Spectrum2DSetting from './Spectrum2DSetting';\n\nconst style = css`\n  position: fixed;\n  z-index: 999999999;\n  width:100%;\n  height:100%;\n  left:0;\n  top:0;\n  .inner-conatiner{\n    position:absolute;\n    display: flex;\n    flex-direction: row-reverse;\n    border-radius: 4px;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px,\n      rgba(0, 0, 0, 0.15) 0px 8px 16px;\n      overflow: auto;\n      height: 350px;\n  }\n\n\n  .sketch-picker {\n    border-radius: none !important;\n    box-shadow: none !important;\n  }\n\n\n  .horizontal-slider {\n    width: 80%;\n    height: 15px;\n  }\n\n  .thumb {\n    height: 15px;\n    line-height: 15px;\n    width: 20px;\n    text-align: center;\n    color: black;\n    border-radius: 5px;\n    cursor: grab;\n    font-size: 10px;\n    background-image: -webkit-linear-gradient(top, #f4f1ee, #fff);\n    background-image: linear-gradient(top, #f4f1ee, #fff);\n  }\n\n  .track {\n    top: 0;\n    bottom: 0;\n    background: #eaeaea;\n    border-radius: 999px;\n    border-radius: 5px;\n  }\n\n  .track-1 {\n    background: red;\n  }\n   \n  .label{\n    font-size: 12px;\n    margin: 8px 0;\n    display: block;\n  }\n \n  }\n`;\n\ninterface SpectrumSettingProps {\n  position: { x: number; y: number } | null;\n  data: any;\n  onClose: () => void;\n}\n\nfunction SpectrumSetting({ position, data, onClose }: SpectrumSettingProps) {\n  const dispatch = useDispatch();\n  const { id, info } = data;\n\n  const submitHandler = useCallback(\n    (values) => {\n      dispatch({ type: CHANGE_SPECTRUM_SETTING, id, display: values });\n    },\n    [dispatch, id],\n  );\n\n  const clickHandler = useCallback(\n    (e) => {\n      if (e.target === e.currentTarget) {\n        onClose();\n      }\n    },\n    [onClose],\n  );\n\n  if (!position) return null;\n  const { x, y } = position;\n\n  return (\n    <div css={style} onClick={clickHandler}>\n      <div\n        className=\"inner-conatiner\"\n        style={{\n          left: info.dimension === 2 ? x - 450 : x - 240,\n          width: info.dimension === 2 ? 450 : 240,\n          padding: info.dimension === 2 ? '10px 0' : '',\n          top: y,\n        }}\n      >\n        {info.dimension === 2 ? (\n          <Spectrum2DSetting onSubmit={submitHandler} data={data} />\n        ) : (\n          <Spectrum1DSetting onSubmit={submitHandler} data={data} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction arePropsEqual() {\n  return true;\n}\n\nexport default memo(SpectrumSetting, arePropsEqual);\n","import { useCallback, useState, useMemo, useRef, useEffect, memo } from 'react';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport checkModifierKeyActivated from '../../../data/utilities/checkModifierKeyActivated';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport ContextMenu from '../../elements/ContextMenu';\nimport Tab from '../../elements/Tab/Tab';\nimport Tabs from '../../elements/Tab/Tabs';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { ActiveSpectrum } from '../../reducer/Reducer';\nimport {\n  CHANGE_PEAKS_MARKERS_VISIBILITY,\n  SET_ACTIVE_TAB,\n  CHANGE_VISIBILITY,\n  CHANGE_ACTIVE_SPECTRUM,\n  DELETE_SPECTRA,\n} from '../../reducer/types/Types';\nimport { copyTextToClipboard } from '../../utility/Export';\nimport GroupByInfoKey from '../../utility/GroupByInfoKey';\n\nimport SpectrumListItem from './SpectrumListItem';\nimport SpectrumSetting from './base/setting/SpectrumSetting';\n\ninterface TabChangeProps {\n  tab: string;\n  data: Array<Datum1D | Datum2D>;\n}\n\ninterface SpectrumsTabsProps {\n  onTabChange: (data: TabChangeProps) => void;\n}\ninterface SpectrumsTabsInnerProps extends SpectrumsTabsProps {\n  data: Array<Datum1D | Datum2D>;\n  activeTab: string;\n  activeSpectrum: ActiveSpectrum | null;\n}\n\nfunction SpectrumsTabsInner({\n  data,\n  activeSpectrum,\n  activeTab,\n  onTabChange,\n}: SpectrumsTabsInnerProps) {\n  const contextRef = useRef<any>();\n  const [markersVisible, setMarkersVisible] = useState<Array<{ id: string }>>(\n    [],\n  );\n  const [selectedSpectrumData, setSelectedSpectrum] = useState(null);\n  const [settingModalPosition, setSettingModalPosition] = useState<{\n    x: number;\n    y: number;\n  } | null>(null);\n  const [isSettingModalDisplayed, setIsSettingModalDisplayed] = useState(false);\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (data) {\n      const visibleMarkers = data.reduce((acc: any, datum) => {\n        if (\n          datum.info.dimension === 1 &&\n          (datum as Datum1D).display.isPeaksMarkersVisible === true\n        ) {\n          acc.push({ id: datum.id });\n        }\n        return acc;\n      }, []);\n\n      setMarkersVisible(visibleMarkers);\n    }\n  }, [data, dispatch]);\n\n  const spectrumsGroupByNucleus = useMemo(() => {\n    if (!data) return [];\n    const groupByNucleus = GroupByInfoKey('nucleus');\n    return groupByNucleus(data, true);\n  }, [data]);\n\n  useEffect(() => {\n    onTabChange({\n      tab: activeTab,\n      data: spectrumsGroupByNucleus[activeTab],\n    });\n  }, [activeTab, onTabChange, spectrumsGroupByNucleus]);\n\n  const handleChangeMarkersVisibility = useCallback(\n    (d) => {\n      const currentIndex = markersVisible.findIndex((v) => v.id === d.id);\n      const newChecked = [...markersVisible];\n      if (currentIndex === -1) {\n        newChecked.push({ id: d.id });\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n      dispatch({ type: CHANGE_PEAKS_MARKERS_VISIBILITY, data: newChecked });\n      setMarkersVisible(newChecked);\n    },\n    [dispatch, markersVisible],\n  );\n\n  const onTabChangeHandler = useCallback(\n    (tab) => {\n      onTabChange({\n        tab: tab.tabid,\n        data: spectrumsGroupByNucleus[tab.tabid],\n      });\n\n      dispatch({ type: SET_ACTIVE_TAB, tab: tab.tabid });\n    },\n    [dispatch, onTabChange, spectrumsGroupByNucleus],\n  );\n\n  const contextMenu = useMemo(\n    () => [\n      {\n        label: 'Copy to Clipboard',\n        onClick: (spectrumData) => {\n          void (async () => {\n            const { x, y, info } = spectrumData;\n            const success = await copyTextToClipboard(\n              JSON.stringify({ x, y, info }, undefined, 2),\n            );\n\n            if (success) {\n              alert.success('Data copied to clipboard');\n            } else {\n              alert.error('Copy to clipboard failed');\n            }\n          })();\n        },\n      },\n      {\n        label: 'Delete',\n        onClick: (spectrumData) => {\n          setTimeout(() => {\n            dispatch({ type: DELETE_SPECTRA, id: spectrumData.id });\n          }, 0);\n        },\n      },\n    ],\n    [alert, dispatch],\n  );\n\n  const contextMenuHandler = useCallback(\n    (e, rowData) => {\n      if (!checkModifierKeyActivated(e)) {\n        e.preventDefault();\n        contextRef.current.handleContextMenu(e, rowData);\n      }\n    },\n    [contextRef],\n  );\n\n  const openSettingHandler = useCallback((selectedSpectrum, event) => {\n    setSettingModalPosition({\n      x: event.nativeEvent.clientX,\n      y: event.nativeEvent.clientY,\n    });\n    setSelectedSpectrum(selectedSpectrum);\n    setIsSettingModalDisplayed(true);\n  }, []);\n\n  const handleChangeVisibility = useCallback(\n    (d, key) => {\n      dispatch({\n        type: CHANGE_VISIBILITY,\n        id: d.id,\n        key,\n        value: !d.display[key],\n      });\n    },\n    [dispatch],\n  );\n\n  const handleChangeActiveSpectrum = useCallback(\n    (d) => {\n      setTimeout(() => {\n        if (activeSpectrum && activeSpectrum.id === d.id) {\n          dispatch({ type: CHANGE_ACTIVE_SPECTRUM, data: null });\n        } else {\n          dispatch({ type: CHANGE_ACTIVE_SPECTRUM, data: { id: d.id } });\n        }\n      }, 0);\n    },\n    [activeSpectrum, dispatch],\n  );\n\n  const mouseLeaveHandler = useCallback(() => {\n    setIsSettingModalDisplayed(false);\n  }, []);\n\n  return (\n    <div style={{ height: 'calc(100% - 25px)' }}>\n      <Tabs activeTab={activeTab} onClick={onTabChangeHandler}>\n        {spectrumsGroupByNucleus &&\n          Object.keys(spectrumsGroupByNucleus).map((group) => (\n            <Tab tablabel={group} tabid={group} key={group}>\n              {spectrumsGroupByNucleus[group]?.map((d) => (\n                <SpectrumListItem\n                  key={d.id}\n                  activeSpectrum={activeSpectrum}\n                  markersVisible={markersVisible}\n                  data={d}\n                  onChangeVisibility={handleChangeVisibility}\n                  onChangeMarkersVisibility={handleChangeMarkersVisibility}\n                  onChangeActiveSpectrum={handleChangeActiveSpectrum}\n                  onOpenSettingModal={openSettingHandler}\n                  onContextMenu={(e) => contextMenuHandler(e, d)}\n                />\n              ))}\n            </Tab>\n          ))}\n      </Tabs>\n      <ContextMenu ref={contextRef} context={contextMenu} />\n\n      {isSettingModalDisplayed ? (\n        <SpectrumSetting\n          onClose={mouseLeaveHandler}\n          data={selectedSpectrumData}\n          position={settingModalPosition}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nconst MemoizedSpectra = memo(SpectrumsTabsInner);\n\nexport default function SpectrumsTabs({ onTabChange }: SpectrumsTabsProps) {\n  const { data, activeSpectrum, activeTab } = useChartData();\n\n  return (\n    <MemoizedSpectra {...{ data, activeSpectrum, activeTab, onTabChange }} />\n  );\n}\n","import { useCallback, memo, useState, CSSProperties } from 'react';\n\nimport SpectraPanelHeader from './SpectraPanelHeader';\nimport SpectrumsTabs from './SpectrumsTabs';\n\nconst styles: CSSProperties = {\n  overflow: 'hidden',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n};\n\nfunction SpectrumListPanel() {\n  const [spectrums, setSpectrums] = useState<Array<any>>([]);\n\n  const tabChangeHandler = useCallback((e) => {\n    setSpectrums(e.data ? e.data : []);\n  }, []);\n\n  return (\n    <div style={styles}>\n      <SpectraPanelHeader spectrums={spectrums} />\n      <SpectrumsTabs onTabChange={tabChangeHandler} />\n    </div>\n  );\n}\n\nexport default memo(SpectrumListPanel);\n","import { FromTo } from 'cheminfo-types';\n\nexport interface DefaultPathLengthsInterface {\n  [key: string]: FromTo;\n}\n\nconst DefaultPathLengths: DefaultPathLengthsInterface = {\n  hmbc: { from: 2, to: 3 },\n  cosy: { from: 3, to: 4 },\n  hsqc: { from: 1, to: 1 },\n  hmqc: { from: 1, to: 1 },\n  inadequate: { from: 1, to: 1 },\n};\n\nexport default DefaultPathLengths;\n","import { FromTo } from 'cheminfo-types';\n\nimport DefaultPathLengths from '../../../../data/constants/DefaultPathLengths';\n\nfunction isDefaultPathLength(\n  pathLength: FromTo,\n  experimentType: string,\n): boolean {\n  return (\n    DefaultPathLengths[experimentType] &&\n    pathLength.from === DefaultPathLengths[experimentType].from &&\n    pathLength.to === DefaultPathLengths[experimentType].to\n  );\n}\n\nexport default isDefaultPathLength;\n","import { FromTo } from 'cheminfo-types';\nimport lodashCloneDeep from 'lodash/cloneDeep';\nimport lodashGet from 'lodash/get';\nimport {\n  addLink,\n  buildCorrelation,\n  buildLink,\n  getLinkDelta,\n  getLinkDim,\n  removeLink,\n  Correlation,\n  Link,\n} from 'nmr-correlation';\n\nimport DefaultPathLengths from '../../../../data/constants/DefaultPathLengths';\nimport { Datum2D } from '../../../../data/types/data2d';\nimport {\n  findSignal2D,\n  findSpectrum,\n} from '../../../../data/utilities/FindUtilities';\nimport { Spectra } from '../../../NMRium';\nimport isDefaultPathLength from '../../../modal/editZone/validation/isDefaultPathLength';\nimport { ActiveSpectrum } from '../../../reducer/Reducer';\nimport { DISPLAYER_MODE } from '../../../reducer/core/Constants';\nimport { ErrorColors } from '../CorrelationTable/Constants';\n\nfunction getAtomType(nucleus: string): string {\n  return nucleus.split(/\\d+/)[1];\n}\n\nfunction getLabelColor(correlationData, correlation) {\n  const error = lodashGet(\n    correlationData,\n    `state.${correlation.atomType}.error`,\n    null,\n  );\n\n  if (error) {\n    for (let { key, color } of ErrorColors) {\n      if (\n        key !== 'incomplete' && // do not consider this for a single atom type\n        (key === 'notAttached' || key === 'ambiguousAttachment') &&\n        lodashGet(error, `${key}`, []).some(\n          (index) => correlationData.values[index].id === correlation.id,\n        )\n      ) {\n        return color;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction findSignalMatch1D(\n  spectrum: Datum2D,\n  link: Link,\n  factor: number,\n  xDomain0: number,\n  xDomain1: number,\n) {\n  if (spectrum && spectrum.info.dimension === 2) {\n    const signal = findSignal2D(spectrum, link.signal.id);\n    if (signal) {\n      const otherAxis = link.axis === 'x' ? 'y' : 'x';\n      const delta = signal[otherAxis]?.delta;\n      if (delta !== undefined) {\n        return delta * factor >= xDomain0 && delta * factor <= xDomain1;\n      }\n    }\n  }\n  return false;\n}\n\nfunction findSignalMatch2D(\n  spectrum: Datum2D,\n  link: Link,\n  factor: number,\n  xDomain0: number,\n  xDomain1: number,\n  yDomain0: number,\n  yDomain1: number,\n): boolean {\n  if (spectrum && spectrum.info.dimension === 2) {\n    const signal = findSignal2D(spectrum, link.signal.id);\n    if (signal?.x.delta && signal?.y.delta) {\n      return (\n        signal.x.delta * factor >= xDomain0 &&\n        signal.x.delta * factor <= xDomain1 &&\n        signal.y.delta * factor >= yDomain0 &&\n        signal.y.delta * factor <= yDomain1\n      );\n    }\n  }\n  return false;\n}\n\nfunction getAbbreviation(link: Link): string {\n  let abbreviation = 'X';\n  if (link.experimentType === 'hsqc' || link.experimentType === 'hmqc') {\n    abbreviation =\n      !link.signal || link.signal.sign === 0\n        ? 'S'\n        : `S${link.signal.sign === 1 ? '+' : '-'}`;\n  } else if (\n    link.experimentType === 'hmbc' ||\n    link.experimentType === 'cosy' ||\n    link.experimentType === 'tocsy'\n  ) {\n    abbreviation = 'M';\n  } else if (\n    link.experimentType === 'noesy' ||\n    link.experimentType === 'roesy'\n  ) {\n    abbreviation = 'NOE';\n  } else if (link.experimentType === 'inadequate') {\n    abbreviation = 'I';\n  } else if (link.experimentType === 'adequate') {\n    abbreviation = 'A';\n  }\n\n  const pathLength: FromTo | undefined = link.signal.j?.pathLength;\n  if (pathLength) {\n    const isDefaultCorrelation =\n      DefaultPathLengths[link.experimentType] &&\n      pathLength.from >= DefaultPathLengths[link.experimentType].from &&\n      pathLength.from <= DefaultPathLengths[link.experimentType].to &&\n      pathLength.to >= DefaultPathLengths[link.experimentType].from &&\n      pathLength.to <= DefaultPathLengths[link.experimentType].to;\n\n    return `${abbreviation}${isDefaultCorrelation ? '' : '*'}`;\n  }\n\n  return abbreviation;\n}\n\nfunction buildNewLink1D(link) {\n  return buildLink({\n    ...link,\n    edited: {\n      ...link.edited,\n      moved: true,\n    },\n  });\n}\n\nfunction buildNewLink2D(link: Link, axis: 'x' | 'y') {\n  const linkIDs = link.id.split('_');\n  return buildLink({\n    ...link,\n    id: linkIDs[axis === 'x' ? 0 : 1],\n    axis,\n    match: [],\n    edited: {\n      ...link.edited,\n      moved: true,\n    },\n  });\n}\n\nfunction cloneCorrelationAndEditLink(\n  correlation: Correlation,\n  link: Link,\n  axis: 'x' | 'y',\n  action: 'add' | 'remove' | 'unmove',\n): Correlation {\n  const linkDim = getLinkDim(link);\n  const _correlation = lodashCloneDeep(correlation);\n  const split = link.id.split('_');\n  if (action === 'add') {\n    addLink(\n      _correlation,\n      linkDim === 1 ? buildNewLink1D(link) : buildNewLink2D(link, axis),\n    );\n  } else if (action === 'remove' || action === 'unmove') {\n    removeLink(_correlation, axis === 'x' ? split[0] : split[1]);\n  }\n\n  return _correlation;\n}\n\nfunction getEditedCorrelations({\n  correlationDim1,\n  correlationDim2,\n  selectedCorrelationIdDim1,\n  selectedCorrelationIdDim2,\n  action,\n  link,\n  correlations,\n}: {\n  correlationDim1: Correlation;\n  correlationDim2: Correlation;\n  action: 'move' | 'remove' | 'unmove' | 'setPathLength';\n  selectedCorrelationIdDim1: string | undefined;\n  selectedCorrelationIdDim2: string | undefined;\n  link: Link;\n  correlations: Correlation[];\n}) {\n  const selectedCorrelationDim1 = correlations.find(\n    (correlation) => correlation.id === selectedCorrelationIdDim1,\n  );\n  const selectedCorrelationDim2 = correlations.find(\n    (correlation) => correlation.id === selectedCorrelationIdDim2,\n  );\n  const hasChangedDim1 = selectedCorrelationDim1?.id !== correlationDim1.id;\n  const hasChangedDim2 =\n    correlationDim2 && selectedCorrelationDim2?.id !== correlationDim2?.id;\n  const linkDim = getLinkDim(link);\n\n  const editedCorrelations: Correlation[] = [];\n  const buildCorrelationDataOptions: {\n    skipDataUpdate?: boolean;\n  } = {};\n\n  if (action === 'move') {\n    if (linkDim === 1) {\n      // modify current cell correlation\n      const _correlationDim1 = cloneCorrelationAndEditLink(\n        correlationDim1,\n        link,\n        'x',\n        'remove',\n      );\n      // modify selected correlation\n      let newCorrelationDim1: Correlation;\n      if (selectedCorrelationDim1) {\n        newCorrelationDim1 = cloneCorrelationAndEditLink(\n          hasChangedDim1 ? selectedCorrelationDim1 : _correlationDim1,\n          link,\n          'x',\n          'add',\n        );\n      } else {\n        newCorrelationDim1 = buildCorrelation({\n          atomType: correlationDim1.atomType,\n          link: [buildNewLink1D(link)],\n        });\n      }\n      editedCorrelations.push(_correlationDim1, newCorrelationDim1);\n      buildCorrelationDataOptions.skipDataUpdate = true;\n    } else if (linkDim === 2) {\n      // modify current cell correlations\n      const _correlationDim1 = cloneCorrelationAndEditLink(\n        correlationDim1,\n        link,\n        'x',\n        'remove',\n      );\n      editedCorrelations.push(_correlationDim1);\n      const _correlationDim2 = cloneCorrelationAndEditLink(\n        correlationDim2,\n        link,\n        'y',\n        'remove',\n      );\n      editedCorrelations.push(_correlationDim2);\n\n      // modify selected correlations\n      if (selectedCorrelationDim1 && selectedCorrelationDim2) {\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            hasChangedDim1 ? selectedCorrelationDim1 : _correlationDim1,\n            link,\n            'x',\n            'add',\n          ),\n        );\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            hasChangedDim2 ? selectedCorrelationDim2 : _correlationDim2,\n            link,\n            'y',\n            'add',\n          ),\n        );\n      } else if (\n        selectedCorrelationDim1 &&\n        selectedCorrelationIdDim2 === 'new'\n      ) {\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            hasChangedDim1 ? selectedCorrelationDim1 : _correlationDim1,\n            link,\n            'x',\n            'add',\n          ),\n        );\n        editedCorrelations.push(\n          buildCorrelation({\n            atomType: correlationDim2.atomType,\n            link: [buildNewLink2D(link, 'y')],\n          }),\n        );\n      } else if (\n        selectedCorrelationIdDim1 === 'new' &&\n        selectedCorrelationDim2\n      ) {\n        editedCorrelations.push(\n          buildCorrelation({\n            atomType: correlationDim1.atomType,\n            link: [buildNewLink2D(link, 'x')],\n          }),\n        );\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            hasChangedDim2 ? selectedCorrelationDim2 : _correlationDim2,\n            link,\n            'y',\n            'add',\n          ),\n        );\n      } else if (\n        selectedCorrelationIdDim1 === 'new' &&\n        selectedCorrelationIdDim2 === 'new'\n      ) {\n        editedCorrelations.push(\n          buildCorrelation({\n            atomType: correlationDim1.atomType,\n            link: [buildNewLink2D(link, 'x')],\n          }),\n        );\n        editedCorrelations.push(\n          buildCorrelation({\n            atomType: correlationDim2.atomType,\n            link: [buildNewLink2D(link, 'y')],\n          }),\n        );\n      }\n      buildCorrelationDataOptions.skipDataUpdate = true;\n    }\n  } else if (action === 'remove') {\n    const _correlationDim1 = cloneCorrelationAndEditLink(\n      correlationDim1,\n      link,\n      'x',\n      'remove',\n    );\n    editedCorrelations.push(_correlationDim1);\n    if (getLinkDim(link) === 2) {\n      const _correlationDim2 = cloneCorrelationAndEditLink(\n        correlationDim2,\n        link,\n        'y',\n        'remove',\n      );\n      editedCorrelations.push(_correlationDim2);\n    }\n  } else if (action === 'unmove') {\n    if (linkDim === 1) {\n      if (selectedCorrelationDim1) {\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            selectedCorrelationDim1,\n            link,\n            'x',\n            'unmove',\n          ),\n        );\n      }\n    } else if (linkDim === 2) {\n      if (selectedCorrelationDim1 && selectedCorrelationDim2) {\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            selectedCorrelationDim1,\n            link,\n            'x',\n            'unmove',\n          ),\n        );\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            selectedCorrelationDim2,\n            link,\n            'y',\n            'unmove',\n          ),\n        );\n      }\n    }\n  } else if (action === 'setPathLength') {\n    editedCorrelations.push(\n      cloneCorrelationAndSetPathLength(correlationDim1, link, 'x'),\n    );\n    editedCorrelations.push(\n      cloneCorrelationAndSetPathLength(correlationDim2, link, 'y'),\n    );\n  }\n\n  return { editedCorrelations, buildCorrelationDataOptions };\n}\n\nfunction cloneCorrelationAndSetPathLength(\n  correlation: Correlation,\n  editedLink: Link,\n  axis: 'x' | 'y',\n): Correlation {\n  const _correlation = lodashCloneDeep(correlation);\n  const linkDim = getLinkDim(editedLink);\n  if (linkDim === 2) {\n    const editedLinkID = editedLink.id.split('_')[axis === 'x' ? 0 : 1];\n    const _link = _correlation.link.find((link) => link.id === editedLinkID);\n    if (_link) {\n      const newPathLength: FromTo = editedLink.signal.j?.pathLength;\n      // remove (previous) pathLength if it is same as default\n      if (isDefaultPathLength(newPathLength, _link.experimentType)) {\n        delete _link.signal.j?.pathLength;\n        if (_link.signal.j && Object.keys(_link.signal.j).length === 0) {\n          delete _link.signal.j;\n        }\n        delete _link.edited.pathLength;\n      } else {\n        if (!_link.signal.j) {\n          _link.signal.j = { pathLength: newPathLength };\n        } else {\n          _link.signal.j.pathLength = newPathLength;\n        }\n        _link.edited.pathLength = true;\n      }\n    }\n  }\n\n  return _correlation;\n}\n\nfunction convertValuesString(\n  valuesString: string,\n  key: 'protonsCount' | 'hybridization',\n): number[] {\n  valuesString = valuesString\n    .toLowerCase()\n    .replace(/\\s+/g, '')\n    .split(',')\n    .map((token) => (token === 'sp' ? 'sp1' : token))\n    .join(',');\n  valuesString = valuesString.replaceAll('sp', '');\n\n  let values: number[] = [];\n  const regex = /^(?:[0-9],{0,1})+$/g;\n  if (regex.test(valuesString)) {\n    // allow digits followed by optional comma only\n    values = valuesString\n      .split(',')\n      .filter((char) => char.length > 0)\n      .map((char) => Number(char));\n  }\n\n  // allow key specific values only\n  // protonsCount: [0, 1, 2, 3, ...], hybridization: [1, 2, 3]\n  values = values.filter(\n    (value) =>\n      value >= (key === 'protonsCount' ? 0 : 1) &&\n      (key === 'protonsCount' || value <= 3),\n  );\n\n  // unique values\n  return values.filter((index, i, a) => a.indexOf(index) === i);\n}\n\nfunction isInView(\n  spectraData: Spectra,\n  activeTab: string,\n  activeSpectrum: ActiveSpectrum | null,\n  xDomain: number[],\n  yDomain: number[],\n  displayerMode: string,\n  correlation: Correlation,\n): boolean {\n  if (correlation.pseudo === true) {\n    return false;\n  }\n\n  if (\n    activeSpectrum === null ||\n    !correlation.link.some((link) => link.experimentID === activeSpectrum.id)\n  ) {\n    return false;\n  }\n\n  const atomTypesInView = activeTab.split(',').map((tab) => getAtomType(tab));\n\n  const factor = 10000;\n  const xDomain0 = xDomain[0] * factor;\n  const xDomain1 = xDomain[1] * factor;\n  const yDomain0 = yDomain[0] * factor;\n  const yDomain1 = yDomain[1] * factor;\n\n  if (displayerMode === DISPLAYER_MODE.DM_1D) {\n    const firstLink1D = correlation.link.find((link) => getLinkDim(link) === 1);\n    if (!firstLink1D) {\n      return false;\n    }\n    let delta = getLinkDelta(firstLink1D);\n    if (delta === undefined) {\n      return false;\n    }\n    delta *= factor;\n    const spectrum = findSpectrum(spectraData, firstLink1D.experimentID, true);\n    if (\n      spectrum &&\n      atomTypesInView[0] === correlation.atomType &&\n      delta >= xDomain0 &&\n      delta <= xDomain1\n    ) {\n      return true;\n    }\n    // try to find a link which contains the belonging 2D signal in the spectra in view\n    if (\n      correlation.link.some((link) => {\n        const spectrum = findSpectrum(\n          spectraData,\n          link.experimentID,\n          true,\n        ) as Datum2D;\n        return findSignalMatch1D(spectrum, link, factor, xDomain0, xDomain1);\n      })\n    ) {\n      return true;\n    }\n  } else if (displayerMode === DISPLAYER_MODE.DM_2D) {\n    if (!atomTypesInView.includes(correlation.atomType)) {\n      return false;\n    }\n    const firstLink2D = correlation.link.find((link) => getLinkDim(link) === 2);\n    if (!firstLink2D) {\n      return false;\n    }\n    const spectrum = findSpectrum(\n      spectraData,\n      firstLink2D.experimentID,\n      true,\n    ) as Datum2D;\n    // correlation is represented by a 2D signal\n    if (\n      findSignalMatch2D(\n        spectrum,\n        firstLink2D,\n        factor,\n        xDomain0,\n        xDomain1,\n        yDomain0,\n        yDomain1,\n      )\n    ) {\n      return true;\n    } else {\n      // try to find a link which contains the belonging 2D signal in the spectra in view\n      if (\n        correlation.link.some((link) => {\n          const spectrum = findSpectrum(\n            spectraData,\n            link.experimentID,\n            true,\n          ) as Datum2D;\n          return findSignalMatch2D(\n            spectrum,\n            link,\n            factor,\n            xDomain0,\n            xDomain1,\n            yDomain0,\n            yDomain1,\n          );\n        })\n      ) {\n        return true;\n      }\n    }\n  }\n  // do not show correlation\n  return false;\n}\n\nexport {\n  buildNewLink1D,\n  buildNewLink2D,\n  cloneCorrelationAndEditLink,\n  convertValuesString,\n  findSignalMatch1D,\n  findSignalMatch2D,\n  getAbbreviation,\n  getAtomType,\n  getEditedCorrelations,\n  getLabelColor,\n  isInView,\n};\n","import { Correlation } from 'nmr-correlation';\nimport { useMemo } from 'react';\n\nimport { useChartData } from '../../../context/ChartContext';\n\nimport { isInView } from './Utilities';\n\ninterface InputProps {\n  correlation: Correlation;\n}\n\nfunction IsInView({ correlation }: InputProps) {\n  const {\n    data: spectraData,\n    xDomain,\n    yDomain,\n    displayerMode,\n    activeTab,\n    activeSpectrum,\n  } = useChartData();\n\n  return useMemo(\n    () =>\n      isInView(\n        spectraData,\n        activeTab,\n        activeSpectrum,\n        xDomain,\n        yDomain,\n        displayerMode,\n        correlation,\n      ),\n    [\n      activeSpectrum,\n      activeTab,\n      correlation,\n      displayerMode,\n      spectraData,\n      xDomain,\n      yDomain,\n    ],\n  );\n}\n\nexport default IsInView;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback } from 'react';\n\nconst styles = css`\n  margin-top: 10px;\n  padding: 5px;\n  text-align: center;\n\n  p {\n    font-size: 14px;\n  }\n\n  button:focus {\n    outline: none;\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 90px;\n\n    color: white;\n    background-color: gray;\n  }\n`;\n\ninterface EditLinkConfirmationProps {\n  description: string;\n  onConfirm: () => void;\n}\n\nfunction EditLinkConfirmation({\n  description,\n  onConfirm,\n}: EditLinkConfirmationProps) {\n  const handleOnConfirm = useCallback(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      onConfirm();\n    },\n    [onConfirm],\n  );\n\n  return (\n    <div css={styles}>\n      <p>{description}</p>\n      <button type=\"button\" onClick={handleOnConfirm}>\n        Confirm\n      </button>\n    </div>\n  );\n}\n\nexport default EditLinkConfirmation;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FromTo } from 'cheminfo-types';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport DefaultPathLengths from '../../../../../data/constants/DefaultPathLengths';\nimport { Signal2D } from '../../../../../data/types/data2d';\nimport Button from '../../../../elements/Button';\nimport Input from '../../../../elements/Input';\nimport Label from '../../../../elements/Label';\n\nconst editPathLengthsStyles = css`\n  width: 100%;\n  height: 100%;\n  margin-top: 10px;\n  text-align: center;\n\n  .input-container {\n    width: 100%;\n    margin-top: 5px;\n    text-align: center;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 60px;\n\n    color: white;\n    background-color: gray;\n  }\n\n  .warning {\n    margin-top: 5px;\n    color: red;\n  }\n`;\n\ninterface InputProps {\n  signal: Signal2D;\n  experimentType: string;\n  onEdit: (editedSignal: Signal2D) => void;\n}\n\nfunction EditPathLength({ signal, experimentType, onEdit }: InputProps) {\n  const [from, setFrom] = useState<number>(\n    signal.j?.pathLength !== undefined\n      ? (signal.j.pathLength as FromTo).from\n      : DefaultPathLengths[experimentType]?.from || 0,\n  );\n  const [to, setTo] = useState<number>(\n    signal.j?.pathLength !== undefined\n      ? (signal.j.pathLength as FromTo).to\n      : DefaultPathLengths[experimentType]?.to || 0,\n  );\n  const [isError, setIsError] = useState<boolean>(false);\n\n  const handleOnEdit = useCallback(() => {\n    const pathLength: FromTo = {\n      from,\n      to,\n    };\n    const editedSignal: Signal2D = {\n      ...signal,\n      j: {\n        ...signal.j,\n        pathLength,\n      },\n    };\n\n    onEdit(editedSignal);\n  }, [to, from, onEdit, signal]);\n\n  useEffect(() => {\n    setIsError(from <= 0 || from > to);\n  }, [to, from]);\n\n  return (\n    <div css={editPathLengthsStyles}>\n      <p>Setting of the minimum and maximum path length (J coupling).</p>\n      <div className=\"input-container\">\n        <Label\n          title=\"Min:\"\n          style={{\n            label: {\n              marginRight: '5px',\n              fontSize: '14px',\n              fontWeight: 'normal',\n            },\n          }}\n        >\n          <Input\n            type=\"number\"\n            value={from}\n            onChange={(e) => {\n              setFrom(Number(e.target.value));\n            }}\n            style={{ input: { color: isError ? 'red' : 'black' } }}\n          />\n        </Label>\n        <Label\n          title=\"Max:\"\n          style={{\n            label: {\n              marginRight: '5px',\n              fontSize: '14px',\n              fontWeight: 'normal',\n            },\n          }}\n        >\n          <Input\n            type=\"number\"\n            value={to}\n            onChange={(e) => {\n              setTo(Number(e.target.value));\n            }}\n          />\n        </Label>\n      </div>\n      {isError ? (\n        <p className=\"warning\">\n          Minimum must not be 0 or higher than the maximum value.{' '}\n        </p>\n      ) : (\n        <Button type=\"button\" onClick={handleOnEdit} disabled={isError}>\n          Set\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default EditPathLength;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { getCorrelationDelta, Correlation, Link } from 'nmr-correlation';\nimport { useCallback, useState } from 'react';\n\nimport Select from '../../../../elements/Select';\n\nconst moveLinkStyles = css`\n  width: 100%;\n  height: 100%;\n  margin-top: 10px;\n  text-align: center;\n\n  p {\n    font-size: 14px;\n  }\n\n  .selection-container {\n    margin-top: 10px;\n    width: 100%;\n    text-align: center;\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 60px;\n\n    color: white;\n    background-color: gray;\n  }\n`;\n\ninterface MoveLinkProps {\n  correlationDim1: Correlation;\n  correlationDim2: Correlation;\n  link: Link;\n  correlations: Correlation[];\n  onEdit: (\n    correlationIdDim1: string,\n    correlationIdDim2: string | undefined,\n  ) => void;\n}\n\nfunction MoveLink({\n  correlationDim1,\n  correlationDim2,\n  link,\n  correlations,\n  onEdit,\n}: MoveLinkProps) {\n  const [selectedCorrelationIdDim1, setSelectedCorrelationIdDim1] =\n    useState<string>(correlationDim1.id);\n  const [selectedCorrelationIdDim2, setSelectedCorrelationIdDim2] =\n    useState<string>(correlationDim2?.id || undefined);\n\n  function getCorrelationLabel(correlation: Correlation) {\n    const delta = getCorrelationDelta(correlation);\n    return `${delta ? delta.toFixed(2) : '?'}`;\n  }\n\n  const getSelection = useCallback(\n    (correlation: Correlation, dim: 0 | 1) => {\n      const selectionData = correlations.reduce((arr, _correlation) => {\n        if (\n          _correlation.pseudo === false &&\n          _correlation.atomType === link.atomType[dim]\n        ) {\n          arr.push({\n            key: _correlation.id,\n            value: _correlation.id,\n            label: `${_correlation.label.origin}: ${getCorrelationLabel(\n              _correlation,\n            )}`,\n          });\n        }\n        return arr;\n      }, []);\n      selectionData.push({\n        key: 'new',\n        value: 'new',\n        label: `new -> ${(\n          (dim === 0\n            ? getCorrelationDelta(correlationDim1)\n            : getCorrelationDelta(correlationDim2)) as number\n        ).toFixed(2)}`,\n      });\n\n      return (\n        <Select\n          onChange={(selection: string) => {\n            if (dim === 0) {\n              setSelectedCorrelationIdDim1(selection);\n            } else {\n              setSelectedCorrelationIdDim2(selection);\n            }\n          }}\n          data={selectionData}\n          defaultValue={correlation.id}\n          style={{\n            width: 110,\n            height: 25,\n            margin: 0,\n            border: '1px solid grey',\n          }}\n        />\n      );\n    },\n    [correlationDim1, correlationDim2, correlations, link.atomType],\n  );\n\n  return (\n    <div css={moveLinkStyles}>\n      <p>Move of signals on either one or both axes.</p>\n      <p>&quot;New&quot; means to separate into a new row or column.</p>\n      <div className=\"selection-container\">\n        {getSelection(correlationDim1, 0)}\n        {correlationDim2 && getSelection(correlationDim2, 1)}\n      </div>\n      <button\n        type=\"button\"\n        onClick={() =>\n          onEdit(selectedCorrelationIdDim1, selectedCorrelationIdDim2)\n        }\n      >\n        Move\n      </button>\n    </div>\n  );\n}\n\nexport default MoveLink;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { getLinkDim, Link } from 'nmr-correlation';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport CloseButton from '../../../../elements/CloseButton';\nimport Tab from '../../../../elements/Tab/Tab';\nimport Tabs, { PositionsEnum } from '../../../../elements/Tab/Tabs';\nimport { getEditedCorrelations } from '../../utilities/Utilities';\n\nimport EditLinkConfirmation from './Confirmation';\nimport EditPathLength from './EditPathLength';\nimport MoveLink from './MoveLink';\n\nconst modalContainer = css`\n  width: 490px;\n  height: 220px;\n  padding: 5px;\n\n  button:focus {\n    outline: none;\n  }\n\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    align-items: center;\n\n    button {\n      height: 36px;\n      margin: 2px;\n      background-color: transparent;\n      border: none;\n      svg {\n        height: 16px;\n      }\n    }\n\n    p {\n      font-weight: bold;\n\n      margin-bottom: 5px;\n      margin-right: 30px;\n      padding: 0px 10px;\n      width: 100%;\n\n      text-align: center;\n    }\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 20%;\n\n    color: white;\n    background-color: gray;\n  }\n\n  .tabs-container {\n    width: 100%;\n    flex: 1;\n    overflow: auto;\n    border: none;\n  }\n`;\n\nexport default function EditLinkModal({\n  correlationDim1,\n  correlationDim2,\n  link,\n  correlations,\n  onClose,\n  onEdit,\n}) {\n  const [activeTab, setActiveTab] = useState<string>('move');\n\n  const getLinkLabel = useCallback(() => {\n    const linkDim = getLinkDim(link);\n    if (linkDim === 1) {\n      return ` 1D (${link.signal.delta.toFixed(3)})`;\n    } else if (linkDim === 2) {\n      return `${link.signal.x ? `${link.signal.x.delta.toFixed(2)}` : '?'} (${\n        correlationDim1.label.origin\n      }), ${link.signal.y ? link.signal.y.delta.toFixed(2) : '?'} (${\n        correlationDim2.label.origin\n      })`;\n    }\n\n    return '';\n  }, [correlationDim1.label.origin, link, correlationDim2]);\n\n  const handleOnEdit = useCallback(\n    (\n      action: 'move' | 'remove' | 'unmove' | 'setPathLength',\n      selectedCorrelationIdDim1: string | undefined,\n      selectedCorrelationIdDim2: string | undefined,\n      editedLink?: Link,\n    ) => {\n      const { editedCorrelations, buildCorrelationDataOptions } =\n        getEditedCorrelations({\n          correlationDim1,\n          correlationDim2,\n          selectedCorrelationIdDim1,\n          selectedCorrelationIdDim2,\n          action,\n          link: editedLink || link,\n          correlations,\n        });\n      onEdit(\n        editedCorrelations,\n        action,\n        editedLink || link,\n        buildCorrelationDataOptions,\n      );\n\n      onClose?.();\n    },\n    [correlationDim1, correlationDim2, correlations, link, onClose, onEdit],\n  );\n\n  const tabsContainer = useMemo(\n    () => (\n      <div className=\"tabs-container\">\n        <Tabs\n          position={PositionsEnum.TOP}\n          activeTab={activeTab}\n          onClick={(tab) => setActiveTab(tab.tabid)}\n        >\n          <Tab tablabel=\"Move\" tabid={'move'}>\n            <MoveLink\n              correlationDim1={correlationDim1}\n              correlationDim2={correlationDim2}\n              link={link}\n              correlations={correlations}\n              onEdit={(correlationIdDim1, correlationIdDim2) =>\n                handleOnEdit('move', correlationIdDim1, correlationIdDim2)\n              }\n            />\n          </Tab>\n          <Tab tablabel=\"Unmove\" tabid=\"unmove\">\n            <EditLinkConfirmation\n              description=\"Movement of signal to its original place.\"\n              onConfirm={() =>\n                handleOnEdit('unmove', correlationDim1.id, correlationDim2.id)\n              }\n            />\n          </Tab>\n          <Tab tablabel=\"Remove\" tabid={'remove'}>\n            <EditLinkConfirmation\n              description=\"Deletion of signal.\"\n              onConfirm={() => handleOnEdit('remove', undefined, undefined)}\n            />\n          </Tab>\n          <Tab tablabel=\"J Coupling\" tabid={'setPathLength'}>\n            <EditPathLength\n              signal={link.signal}\n              experimentType={link.experimentType}\n              onEdit={(editedSignal) => {\n                const editedLink = { ...link, signal: editedSignal };\n                handleOnEdit(\n                  'setPathLength',\n                  correlationDim1,\n                  correlationDim2,\n                  editedLink,\n                );\n              }}\n            />\n          </Tab>\n        </Tabs>\n      </div>\n    ),\n    [\n      activeTab,\n      correlationDim1,\n      correlationDim2,\n      correlations,\n      handleOnEdit,\n      link,\n    ],\n  );\n\n  return (\n    <div css={modalContainer}>\n      <div className=\"header handle\">\n        <CloseButton onClick={onClose} />\n        <p className=\"header-info\">{`${link.experimentType.toUpperCase()} signal at ${getLinkLabel()}`}</p>\n      </div>\n      {tabsContainer}\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { getCorrelationDelta, getLinkDim } from 'nmr-correlation';\nimport { useCallback, useMemo, useRef } from 'react';\n\nimport { buildID } from '../../../../data/utilities/Concatenation';\nimport { findRangeOrZoneID } from '../../../../data/utilities/FindUtilities';\nimport ContextMenu from '../../../elements/ContextMenu';\nimport { positions, useModal } from '../../../elements/popup/Modal';\nimport { useHighlight } from '../../../highlight';\nimport IsInView from '../utilities/IsInView';\nimport { getLabelColor } from '../utilities/Utilities';\n\nimport EditLinkModal from './editLink/EditLinkModal';\n\nfunction AdditionalColumnHeader({\n  spectraData,\n  correlationsData,\n  correlation,\n  onEdit,\n}) {\n  const contextRef = useRef<any>();\n  const modal = useModal();\n\n  const highlightIDsAdditionalColumn = useMemo(() => {\n    if (correlation.pseudo === true) {\n      return [];\n    }\n    const ids: string[] = [];\n    correlation.link.forEach((link) => {\n      if (link.pseudo === false) {\n        ids.push(link.signal.id);\n        ids.push(buildID(link.signal.id, 'Crosshair_X'));\n        const _id = findRangeOrZoneID(\n          spectraData,\n          link.experimentID,\n          link.signal.id,\n          true,\n        );\n        if (_id) {\n          ids.push(_id);\n        }\n      }\n    });\n\n    return ids;\n  }, [correlation, spectraData]);\n  const highlightAdditionalColumn = useHighlight(highlightIDsAdditionalColumn);\n\n  const mouseEnterHandler = useCallback(\n    (event) => {\n      event.currentTarget.focus();\n      highlightAdditionalColumn.show();\n    },\n    [highlightAdditionalColumn],\n  );\n  const mouseLeaveHandler = useCallback(\n    (event) => {\n      event.currentTarget.blur();\n      highlightAdditionalColumn.hide();\n    },\n    [highlightAdditionalColumn],\n  );\n\n  const isInView = IsInView({ correlation });\n\n  const tableHeaderProps = useMemo(() => {\n    return {\n      style: {\n        ...{ color: getLabelColor(correlationsData, correlation) || undefined },\n        backgroundColor: highlightAdditionalColumn.isActive\n          ? '#ff6f0057'\n          : isInView\n          ? '#f5f5dc'\n          : 'inherit',\n      },\n      title:\n        correlation.pseudo === false &&\n        correlation.link\n          .reduce((arr, link) => {\n            if (\n              link.pseudo === false &&\n              !arr.includes(link.experimentType.toUpperCase())\n            ) {\n              arr.push(link.experimentType.toUpperCase());\n            }\n            return arr;\n          }, [])\n          .sort()\n          .join('/'),\n      onMouseEnter: mouseEnterHandler,\n      onMouseLeave: mouseLeaveHandler,\n    };\n  }, [\n    correlation,\n    correlationsData,\n    highlightAdditionalColumn.isActive,\n    isInView,\n    mouseEnterHandler,\n    mouseLeaveHandler,\n  ]);\n\n  const equivalenceTextStyle = useMemo(() => {\n    return correlation.edited.equivalence\n      ? { backgroundColor: '#F7F2E0' }\n      : {\n          color: Number.isInteger(correlation.equivalence)\n            ? correlation.equivalence === 1\n              ? '#bebebe'\n              : 'black'\n            : 'red',\n        };\n  }, [correlation]);\n\n  const contextMenu = useMemo(() => {\n    return correlation.pseudo === false\n      ? correlation.link\n          .filter((link) => getLinkDim(link) === 1 && link.pseudo === false)\n          .map((link) => {\n            return {\n              label: `edit 1D (${link.signal.delta.toFixed(3)}${\n                link.edited?.moved === true ? '[MOVED]' : ''\n              })`,\n              onClick: () => {\n                highlightAdditionalColumn.hide();\n                modal.show(\n                  <EditLinkModal\n                    onClose={() => modal.close()}\n                    onEdit={onEdit}\n                    link={link}\n                    correlationDim1={correlation}\n                    correlationDim2={undefined}\n                    correlations={correlationsData.values}\n                  />,\n                  { position: positions.MIDDLE_RIGHT, isBackgroundBlur: false },\n                );\n              },\n            };\n          })\n          .concat([\n            {\n              label: `delete all (${correlation.label.origin})`,\n              onClick: () => {\n                modal.showConfirmDialog({\n                  message: `All signals of ${correlation.label.origin} (${(\n                    getCorrelationDelta(correlation) as number\n                  ).toFixed(2)}) will be deleted. Are you sure?`,\n                  buttons: [\n                    {\n                      text: 'Yes',\n                      handler: () => {\n                        onEdit([correlation], 'removeAll');\n                      },\n                    },\n                    { text: 'No' },\n                  ],\n                });\n                highlightAdditionalColumn.hide();\n              },\n            },\n          ])\n      : [];\n  }, [\n    correlation,\n    correlationsData.values,\n    highlightAdditionalColumn,\n    modal,\n    onEdit,\n  ]);\n\n  const contextMenuHandler = useCallback(\n    (e) => {\n      e.preventDefault();\n      contextRef.current.handleContextMenu(e);\n    },\n    [contextRef],\n  );\n\n  const { title, ...thProps } = tableHeaderProps;\n\n  return (\n    <th {...thProps} title={title === false ? undefined : title}>\n      <div\n        style={{ display: 'block' }}\n        onContextMenu={(e) => {\n          if (contextMenu.length > 0) {\n            contextMenuHandler(e);\n          }\n        }}\n      >\n        <p>{correlation.label.origin}</p>\n        <p>\n          {getCorrelationDelta(correlation)\n            ? getCorrelationDelta(correlation)?.toFixed(2)\n            : ''}\n        </p>\n        <p style={equivalenceTextStyle}>\n          {Number.isInteger(correlation.equivalence)\n            ? correlation.equivalence\n            : correlation.equivalence.toFixed(2)}\n        </p>\n        <ContextMenu ref={contextRef} context={contextMenu} />\n      </div>\n    </th>\n  );\n}\n\nexport default AdditionalColumnHeader;\n","import { buildLink, Correlation, Link } from 'nmr-correlation';\nimport { useCallback, useMemo, useRef } from 'react';\n\nimport { buildID } from '../../../../data/utilities/Concatenation';\nimport { findRangeOrZoneID } from '../../../../data/utilities/FindUtilities';\nimport generateID from '../../../../data/utilities/generateID';\nimport ContextMenu from '../../../elements/ContextMenu';\nimport { positions, useModal } from '../../../elements/popup/Modal';\nimport { useHighlight } from '../../../highlight';\nimport IsInView from '../utilities/IsInView';\nimport {\n  cloneCorrelationAndEditLink,\n  getAbbreviation,\n} from '../utilities/Utilities';\n\nimport EditLinkModal from './editLink/EditLinkModal';\n\nfunction AdditionalColumnField({\n  rowCorrelation,\n  columnCorrelation,\n  commonLinks,\n  correlations,\n  spectraData,\n  onEdit,\n}) {\n  const contextRef = useRef<any>();\n  const modal = useModal();\n\n  const highlightIDsCommonLinks = useMemo(() => {\n    const ids: Array<any> = [];\n    commonLinks.forEach((link: Link) => {\n      if (link.pseudo === false) {\n        ids.push(link.signal.id);\n        ids.push(buildID(link.signal.id, 'Crosshair'));\n        const _id = findRangeOrZoneID(\n          spectraData,\n          link.experimentID,\n          link.signal.id,\n          true,\n        );\n        if (_id) {\n          ids.push(_id);\n        }\n      }\n    });\n\n    return ids;\n  }, [commonLinks, spectraData]);\n  const highlightCommonLinks = useHighlight(highlightIDsCommonLinks);\n\n  const mouseEnterHandler = useCallback(\n    (event) => {\n      event.currentTarget.focus();\n      highlightCommonLinks.show();\n    },\n    [highlightCommonLinks],\n  );\n  const mouseLeaveHandler = useCallback(\n    (event) => {\n      event.currentTarget.blur();\n      highlightCommonLinks.hide();\n    },\n    [highlightCommonLinks],\n  );\n\n  const contextMenuHandler = useCallback(\n    (e) => {\n      e.preventDefault();\n      contextRef.current.handleContextMenu(e);\n    },\n    [contextRef],\n  );\n\n  const handleEditPseudoHSQC = useCallback(\n    (action: 'add' | 'remove', link?: Link) => {\n      const pseudoLinkCountHSQC = rowCorrelation.link.filter(\n        (_link) =>\n          (_link.experimentType === 'hsqc' ||\n            _link.experimentType === 'hmqc') &&\n          _link.pseudo === true,\n      ).length;\n\n      let _correlationDim1: Correlation;\n      let _correlationDim2: Correlation;\n      if (action === 'add') {\n        const commonPseudoLink = buildLink({\n          experimentType: 'hsqc',\n          experimentID: generateID(),\n          atomType: [columnCorrelation.atomType, rowCorrelation.atomType],\n          id: generateID(),\n          pseudo: true,\n          signal: { id: generateID(), sign: 0 }, // pseudo signal\n        });\n        _correlationDim1 = cloneCorrelationAndEditLink(\n          columnCorrelation,\n          commonPseudoLink,\n          'x',\n          'add',\n        );\n        _correlationDim2 = cloneCorrelationAndEditLink(\n          rowCorrelation,\n          commonPseudoLink,\n          'y',\n          'add',\n        );\n        // increase number of attached protons if no value was specified manually before\n        if (!_correlationDim2.edited.protonsCount) {\n          _correlationDim2.protonsCount = [pseudoLinkCountHSQC + 1];\n        }\n      } else {\n        _correlationDim1 = cloneCorrelationAndEditLink(\n          columnCorrelation,\n          link,\n          'x',\n          'remove',\n        );\n        _correlationDim2 = cloneCorrelationAndEditLink(\n          rowCorrelation,\n          link,\n          'y',\n          'remove',\n        );\n        // decrease number of attached protons if no value was specified manually before\n        if (!_correlationDim2.edited.protonsCount) {\n          _correlationDim2.protonsCount =\n            pseudoLinkCountHSQC - 1 > 0 ? [pseudoLinkCountHSQC - 1] : [];\n        }\n      }\n\n      onEdit([_correlationDim1, _correlationDim2], action, link, {\n        skipDataUpdate: true,\n      });\n    },\n    [columnCorrelation, onEdit, rowCorrelation],\n  );\n\n  const contextMenu = useMemo(() => {\n    // allow the edition of correlations\n    const commonLinksMenu = commonLinks\n      .map((commonLink) => {\n        const commonLinkContextMenuLabel = `${getAbbreviation(commonLink)} (${\n          commonLink.signal.x ? commonLink.signal.x.delta.toFixed(2) : '?'\n        }, ${\n          commonLink.signal.y ? commonLink.signal.y.delta.toFixed(2) : '?'\n        })${commonLink.edited?.moved === true ? '[MOVED]' : ''}`;\n\n        return commonLink.pseudo === false\n          ? [\n              {\n                label: `edit ${commonLinkContextMenuLabel}`,\n                onClick: () => {\n                  highlightCommonLinks.hide();\n                  modal.show(\n                    <EditLinkModal\n                      onClose={() => modal.close()}\n                      onEdit={onEdit}\n                      link={commonLink}\n                      correlationDim1={columnCorrelation}\n                      correlationDim2={rowCorrelation}\n                      correlations={correlations}\n                    />,\n                    {\n                      position: positions.MIDDLE_RIGHT,\n                      isBackgroundBlur: false,\n                    },\n                  );\n                },\n              },\n            ]\n          : [];\n      })\n      .flat();\n    // allow addition or removal of a pseudo HSQC link between pseudo heavy atom and proton\n    const commonPseudoLinkHSQC = commonLinks.find(\n      (commonLink) =>\n        commonLink.pseudo === true && commonLink.experimentType === 'hsqc',\n    );\n    if (rowCorrelation.pseudo === true) {\n      if (commonPseudoLinkHSQC) {\n        commonLinksMenu.push({\n          label: 'remove pseudo HSQC',\n          onClick: () => handleEditPseudoHSQC('remove', commonPseudoLinkHSQC),\n        });\n      } else {\n        commonLinksMenu.push({\n          label: 'add pseudo HSQC',\n          onClick: () => handleEditPseudoHSQC('add'),\n        });\n      }\n    }\n\n    return commonLinksMenu;\n  }, [\n    columnCorrelation,\n    commonLinks,\n    correlations,\n    handleEditPseudoHSQC,\n    highlightCommonLinks,\n    modal,\n    onEdit,\n    rowCorrelation,\n  ]);\n\n  const contentLabel = useMemo(\n    () =>\n      commonLinks.map((commonLink, i) => (\n        <label key={commonLink.id}>\n          <label\n            style={{\n              color:\n                commonLink.pseudo === true || commonLink.edited?.moved === true\n                  ? 'blue'\n                  : 'black',\n            }}\n          >\n            {getAbbreviation(commonLink)}\n          </label>\n          {i < commonLinks.length - 1 && <label>/</label>}\n        </label>\n      )),\n    [commonLinks],\n  );\n\n  const title = useMemo(\n    () =>\n      commonLinks\n        .reduce((arr, link) => {\n          if (!arr.includes(link.experimentType.toUpperCase())) {\n            arr.push(link.experimentType.toUpperCase());\n          }\n          return arr;\n        }, [])\n        .join('/'),\n    [commonLinks],\n  );\n\n  const isInViewRow = IsInView({ correlation: rowCorrelation });\n  const isInViewColumn = IsInView({ correlation: columnCorrelation });\n\n  return (\n    <td\n      onContextMenu={(e) => {\n        if (contextMenu.length > 0) {\n          contextMenuHandler(e);\n        }\n      }}\n      style={{\n        backgroundColor: highlightCommonLinks.isActive\n          ? '#ff6f0057'\n          : isInViewColumn || isInViewRow\n          ? '#f5f5dc'\n          : 'inherit',\n      }}\n      title={title}\n      onMouseEnter={mouseEnterHandler}\n      onMouseLeave={mouseLeaveHandler}\n    >\n      {contentLabel}\n      <ContextMenu ref={contextRef} context={contextMenu} />\n    </td>\n  );\n}\n\nexport default AdditionalColumnField;\n","import {\n  buildLink,\n  getCorrelationDelta,\n  getLabel,\n  getLinkDim,\n  Link,\n} from 'nmr-correlation';\nimport { useCallback, useMemo, useRef } from 'react';\n\nimport { buildID } from '../../../../data/utilities/Concatenation';\nimport { findRangeOrZoneID } from '../../../../data/utilities/FindUtilities';\nimport ContextMenu from '../../../elements/ContextMenu';\nimport EditableColumn from '../../../elements/EditableColumn';\nimport { positions, useModal } from '../../../elements/popup/Modal';\nimport { useHighlight } from '../../../highlight';\nimport IsInView from '../utilities/IsInView';\nimport { convertValuesString } from '../utilities/Utilities';\n\nimport AdditionalColumnField from './AdditionalColumnField';\nimport EditLinkModal from './editLink/EditLinkModal';\n\nfunction CorrelationTableRow({\n  additionalColumnData,\n  correlations,\n  correlation,\n  styleRow,\n  styleLabel,\n  onSaveEditEquivalences,\n  onSaveEditNumericValues,\n  onEditCorrelationTableCellHandler,\n  spectraData,\n}) {\n  const contextRef = useRef<any>();\n  const modal = useModal();\n\n  const highlightIDsRow = useMemo(() => {\n    if (correlation.pseudo === true) {\n      return [];\n    }\n    const ids: string[] = [];\n\n    correlation.link.forEach((link) => {\n      if (link.pseudo === false) {\n        ids.push(link.signal.id);\n        ids.push(buildID(link.signal.id, 'Crosshair_Y'));\n        const _id = findRangeOrZoneID(\n          spectraData,\n          link.experimentID,\n          link.signal.id,\n          true,\n        );\n        if (_id) {\n          ids.push(_id);\n        }\n      }\n    });\n\n    return ids;\n  }, [correlation, spectraData]);\n  const highlightRow = useHighlight(highlightIDsRow);\n\n  const onSaveEquivalencesHandler = useCallback(\n    (e) => {\n      onSaveEditEquivalences(correlation, e.target.value);\n    },\n    [correlation, onSaveEditEquivalences],\n  );\n\n  const onSaveEditNumericValuesHandler = useCallback(\n    (e, key: 'protonsCount' | 'hybridization') => {\n      onSaveEditNumericValues({\n        correlation,\n        values: convertValuesString(e.target.value, key),\n        key,\n      });\n    },\n    [correlation, onSaveEditNumericValues],\n  );\n\n  const additionalColumnFields = useMemo(() => {\n    return additionalColumnData.map((_correlation) => {\n      const commonLinks: Link[] = [];\n      correlation.link.forEach((link) => {\n        _correlation.link.forEach((_link) => {\n          if (\n            link.axis !== _link.axis &&\n            link.experimentID === _link.experimentID &&\n            link.signal.id === _link.signal.id &&\n            !commonLinks.some(\n              (_commonLink) => _commonLink.signal.id === link.signal.id,\n            )\n          ) {\n            let experimentLabel = link.experimentType;\n            if (link.signal && link.signal.sign !== 0) {\n              experimentLabel += link.signal.sign === 1 ? ' (+)' : ' (-)';\n            }\n            commonLinks.push(\n              buildLink({\n                ...link,\n                experimentLabel,\n                axis: undefined,\n                id: `${_link.id}_${link.id}`,\n              }),\n            );\n          }\n        });\n      });\n\n      return (\n        <AdditionalColumnField\n          key={`addColData_${correlation.id}_${_correlation.id}`}\n          rowCorrelation={correlation}\n          columnCorrelation={_correlation}\n          commonLinks={commonLinks}\n          correlations={correlations}\n          spectraData={spectraData}\n          onEdit={onEditCorrelationTableCellHandler}\n        />\n      );\n    });\n  }, [\n    additionalColumnData,\n    correlation,\n    correlations,\n    onEditCorrelationTableCellHandler,\n    spectraData,\n  ]);\n\n  const equivalenceCellStyle = useMemo(() => {\n    return correlation.edited.equivalence\n      ? { color: 'blue' }\n      : {\n          color: correlation.equivalence === 1 ? '#bebebe' : 'black',\n        };\n  }, [correlation]);\n\n  const mouseEnterHandler = useCallback(\n    (event) => {\n      event.currentTarget.focus();\n      highlightRow.show();\n    },\n    [highlightRow],\n  );\n  const mouseLeaveHandler = useCallback(\n    (event) => {\n      event.currentTarget.blur();\n      highlightRow.hide();\n    },\n    [highlightRow],\n  );\n\n  const isInView = IsInView({ correlation });\n\n  const tableDataProps = useMemo(() => {\n    return {\n      style: {\n        ...styleRow,\n        backgroundColor: highlightRow.isActive\n          ? '#ff6f0057'\n          : isInView\n          ? '#f5f5dc'\n          : 'inherit',\n      },\n      title:\n        correlation.pseudo === false &&\n        correlation.link\n          .reduce((arr, link) => {\n            if (\n              link.pseudo === false &&\n              !arr.includes(link.experimentType.toUpperCase())\n            ) {\n              arr.push(link.experimentType.toUpperCase());\n            }\n            return arr;\n          }, [])\n          .sort()\n          .join('/'),\n      onMouseEnter: mouseEnterHandler,\n      onMouseLeave: mouseLeaveHandler,\n    };\n  }, [\n    correlation.link,\n    correlation.pseudo,\n    highlightRow.isActive,\n    isInView,\n    mouseEnterHandler,\n    mouseLeaveHandler,\n    styleRow,\n  ]);\n\n  const contextMenu = useMemo(() => {\n    return correlation.pseudo === false\n      ? correlation.link\n          .filter((link) => getLinkDim(link) === 1 && link.pseudo === false)\n          .map((link) => {\n            return {\n              label: `edit 1D (${link.signal.delta.toFixed(3)})${\n                link.edited?.moved === true ? '[MOVED]' : ''\n              }`,\n              onClick: () => {\n                highlightRow.hide();\n                modal.show(\n                  <EditLinkModal\n                    onClose={() => modal.close()}\n                    onEdit={onEditCorrelationTableCellHandler}\n                    link={link}\n                    correlationDim1={correlation}\n                    correlationDim2={undefined}\n                    correlations={correlations}\n                  />,\n                  {\n                    position: positions.MIDDLE_RIGHT,\n                    isBackgroundBlur: false,\n                  },\n                );\n              },\n            };\n          })\n          .concat([\n            {\n              label: `delete ${correlation.label.origin}`,\n              onClick: () => {\n                modal.showConfirmDialog({\n                  message: `All signals of ${correlation.label.origin} (${(\n                    getCorrelationDelta(correlation) as number\n                  ).toFixed(2)}) will be deleted. Are you sure?`,\n                  buttons: [\n                    {\n                      text: 'Yes',\n                      handler: () => {\n                        onEditCorrelationTableCellHandler(\n                          [correlation],\n                          'removeAll',\n                        );\n                      },\n                    },\n                    { text: 'No' },\n                  ],\n                });\n                highlightRow.hide();\n              },\n            },\n          ])\n      : [];\n  }, [\n    correlation,\n    highlightRow,\n    modal,\n    onEditCorrelationTableCellHandler,\n    correlations,\n  ]);\n\n  const contextMenuHandler = useCallback(\n    (e) => {\n      e.preventDefault();\n      contextRef.current.handleContextMenu(e);\n    },\n    [contextRef],\n  );\n\n  const { title, ...otherTableDataProps } = tableDataProps;\n  const t = !title ? '' : title;\n\n  return (\n    <tr style={styleRow}>\n      <td\n        title={t}\n        {...{\n          ...otherTableDataProps,\n          style: { ...tableDataProps.style, styleLabel },\n        }}\n        onContextMenu={(e) => {\n          if (contextMenu.length > 0) {\n            contextMenuHandler(e);\n          }\n        }}\n      >\n        {getLabel(correlations, correlation)}\n        <ContextMenu ref={contextRef} context={contextMenu} />\n      </td>\n      <td title={t} {...otherTableDataProps}>\n        {getCorrelationDelta(correlation)\n          ? getCorrelationDelta(correlation)?.toFixed(2)\n          : ''}\n      </td>\n      <td title={t} {...otherTableDataProps}>\n        {correlation.pseudo === false ? (\n          correlation.atomType !== 'H' ? (\n            <EditableColumn\n              type=\"number\"\n              value={correlation.equivalence}\n              style={equivalenceCellStyle}\n              onSave={onSaveEquivalencesHandler}\n            />\n          ) : (\n            <text style={equivalenceCellStyle}>{correlation.equivalence}</text>\n          )\n        ) : (\n          ''\n        )}\n      </td>\n      <td title={t} {...otherTableDataProps}>\n        {correlation.atomType !== 'H' ? (\n          <EditableColumn\n            type=\"text\"\n            value={correlation.protonsCount.join(',')}\n            style={correlation.edited.protonsCount ? { color: 'blue' } : {}}\n            onSave={(e) => onSaveEditNumericValuesHandler(e, 'protonsCount')}\n          />\n        ) : (\n          ''\n        )}\n      </td>\n      <td\n        title={t}\n        {...{\n          ...otherTableDataProps,\n          style: { ...tableDataProps.style, borderRight: '1px solid' },\n        }}\n      >\n        {correlation.atomType !== 'H' ? (\n          <EditableColumn\n            type=\"text\"\n            value={correlation.hybridization\n              .map((hybrid) => `sp${hybrid}`)\n              .join(',')}\n            style={correlation.edited.hybridization ? { color: 'blue' } : {}}\n            onSave={(e) => onSaveEditNumericValuesHandler(e, 'hybridization')}\n          />\n        ) : (\n          ''\n        )}\n      </td>\n      {additionalColumnFields}\n    </tr>\n  );\n}\n\nexport default CorrelationTableRow;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Correlation } from 'nmr-correlation';\nimport { useMemo } from 'react';\n\nimport { getLabelColor } from '../utilities/Utilities';\n\nimport AdditionalColumnHeader from './AdditionalColumnHeader';\nimport CorrelationTableRow from './CorrelationTableRow';\n\nconst tableStyle = css`\n  overflow: auto;\n  height: 100%;\n  display: block;\n  table {\n    border-spacing: 0;\n    border: 1px solid #dedede;\n    width: 100%;\n    font-size: 12px;\n    height: 100%;\n  }\n  tr {\n    :last-child {\n      td {\n        border-bottom: 0;\n      }\n    }\n  }\n  thead tr {\n    background-color: white !important;\n  }\n  th {\n    position: sticky;\n    background-color: white;\n    top: 0;\n  }\n\n  th,\n  td {\n    white-space: nowrap;\n    text-align: center;\n    margin: 0;\n    padding: 0.4rem;\n    border-bottom: 1px solid #dedede;\n    border-right: 1px solid #dedede;\n\n    :last-child {\n      border-right: 0;\n    }\n    button {\n      background-color: transparent;\n      border: none;\n    }\n  }\n`;\n\nfunction CorrelationTable({\n  correlationsData,\n  filteredCorrelationsData,\n  additionalColumnData,\n  editEquivalencesSaveHandler,\n  onSaveEditNumericValues,\n  onEditCorrelationTableCellHandler,\n  showProtonsAsRows,\n  spectraData,\n}) {\n  const rows = useMemo(() => {\n    if (!filteredCorrelationsData) {\n      return [];\n    }\n\n    return filteredCorrelationsData.values\n      .filter((correlation: Correlation) =>\n        showProtonsAsRows\n          ? correlation.atomType === 'H'\n          : correlation.atomType !== 'H',\n      )\n      .map((correlation: Correlation) => (\n        <CorrelationTableRow\n          additionalColumnData={additionalColumnData}\n          correlations={correlationsData.values}\n          correlation={correlation}\n          key={`correlation${correlation.atomType}${correlation.id}`}\n          styleRow={{ backgroundColor: 'mintcream' }}\n          styleLabel={\n            correlation.atomType === 'H'\n              ? {\n                  color: getLabelColor(correlationsData, correlation),\n                }\n              : {}\n          }\n          onSaveEditEquivalences={editEquivalencesSaveHandler}\n          onSaveEditNumericValues={onSaveEditNumericValues}\n          onEditCorrelationTableCellHandler={onEditCorrelationTableCellHandler}\n          spectraData={spectraData}\n        />\n      ));\n  }, [\n    filteredCorrelationsData,\n    showProtonsAsRows,\n    additionalColumnData,\n    correlationsData,\n    editEquivalencesSaveHandler,\n    onSaveEditNumericValues,\n    onEditCorrelationTableCellHandler,\n    spectraData,\n  ]);\n\n  const additionalColumnHeader = useMemo(\n    () =>\n      additionalColumnData.map((correlation: Correlation) => (\n        <AdditionalColumnHeader\n          key={`additionalCorrelationHeader_${correlation.id}`}\n          spectraData={spectraData}\n          correlationsData={correlationsData}\n          correlation={correlation}\n          onEdit={onEditCorrelationTableCellHandler}\n        />\n      )),\n    [\n      additionalColumnData,\n      correlationsData,\n      onEditCorrelationTableCellHandler,\n      spectraData,\n    ],\n  );\n\n  return (\n    <div css={tableStyle}>\n      <table>\n        <thead>\n          <tr>\n            <th>Atom</th>\n            <th>δ (ppm)</th>\n            <th>Equiv</th>\n            <th>#H</th>\n            <th style={{ borderRight: '1px solid' }}>Hybrid</th>\n            {additionalColumnHeader}\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default CorrelationTable;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { getAtomCounts } from 'nmr-correlation';\nimport { memo } from 'react';\n\nimport { ErrorColors, Errors } from './CorrelationTable/Constants';\n\nconst styles = css`\n  display: flex;\n  width: 100%;\n  font-size: 15px;\n  font-weight: 300;\n  white-space: nowrap;\n  span {\n    margin-left: 8px;\n  }\n`;\n\ninterface OverviewProps {\n  correlationsData?: {\n    options: {\n      mf: string;\n    };\n    state: any;\n  };\n}\n\nfunction Overview({ correlationsData }: OverviewProps) {\n  if (!correlationsData) {\n    return null;\n  }\n\n  const atoms = getAtomCounts(correlationsData.options.mf);\n\n  const elements =\n    Object.keys(atoms).length > 0 ? (\n      Object.keys(atoms).map((atomType, i) => {\n        const stateAtomType = correlationsData.state[atomType];\n        const error = stateAtomType ? stateAtomType.error : undefined;\n        const errorColorIndex = error\n          ? Errors.findIndex((_error) => error[_error] !== undefined)\n          : 'black';\n\n        return (\n          <span\n            // eslint-disable-next-line react/no-array-index-key\n            key={`molFormulaView_${i}`}\n            style={{\n              color: stateAtomType\n                ? stateAtomType.complete === true &&\n                  (!error || Object.keys(error).length === 0)\n                  ? 'green'\n                  : errorColorIndex >= 0\n                  ? ErrorColors[errorColorIndex].color\n                  : 'black'\n                : 'black',\n            }}\n          >\n            {`${atomType}: ${stateAtomType ? stateAtomType.current : '-'}/${\n              atoms[atomType]\n            }   `}\n          </span>\n        );\n      })\n    ) : (\n      <p style={{ fontStyle: 'italic', color: 'orange' }}>\n        Molecular formula is not set\n      </p>\n    );\n\n  return <div css={styles}>{elements}</div>;\n}\n\nexport default memo(Overview);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useState } from 'react';\n\nimport getAtomsFromMF from '../../data/utilities/getAtomsFromMF';\n\nconst inputStyle = css`\n  text-align: center;\n\n  input {\n    height: 100%;\n    width: 200px;\n    border-radius: 5px;\n    border: 0.55px solid #c7c7c7;\n    margin: 0px 5px 0px 5px;\n    text-align: center;\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 36px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 20%;\n\n    color: white;\n    background-color: gray;\n  }\n`;\n\ninterface MolecularFormulaInputProps {\n  onSave?: (element: string) => void;\n  previousMF: string;\n}\n\nfunction MolecularFormulaInput({\n  onSave = () => null,\n  previousMF,\n}: MolecularFormulaInputProps) {\n  const [mf, setMF] = useState('');\n  const [isValidMF, setIsValidMF] = useState(true);\n  const [hasChanged, setHasChanged] = useState(false);\n\n  const checkMF = useCallback((mf: string) => {\n    if (mf.trim().length === 0) {\n      return false;\n    }\n    try {\n      getAtomsFromMF(mf);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }, []);\n\n  const onChangeHandler = useCallback(\n    (e) => {\n      setHasChanged(true);\n      if (checkMF(e.target.value)) {\n        setIsValidMF(true);\n        setMF(e.target.value);\n      } else {\n        setIsValidMF(false);\n        setMF('');\n      }\n    },\n    [checkMF],\n  );\n\n  const onSaveHandler = useCallback(() => {\n    onSave(hasChanged ? mf.trim() : previousMF);\n  }, [hasChanged, mf, onSave, previousMF]);\n\n  return (\n    <div css={inputStyle}>\n      <input type=\"text\" onChange={onChangeHandler} defaultValue={previousMF} />\n      <button type=\"button\" onClick={onSaveHandler} disabled={!isValidMF}>\n        {isValidMF ? 'Set' : 'Invalid'}\n      </button>\n    </div>\n  );\n}\n\nexport default MolecularFormulaInput;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport CloseButton from '../../elements/CloseButton';\nimport MolecularFormulaInput from '../../elements/MolecularFormulaInput';\nimport MoleculeSelection from '../../elements/MoleculeSelection';\n\nconst modalContainer = css`\n  overflow: auto;\n  width: 400px;\n  height: 550px;\n  padding: 5px;\n  button:focus {\n    outline: none;\n  }\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    align-items: center;\n\n    button {\n      height: 36px;\n      margin: 2px;\n      background-color: transparent;\n      border: none;\n      svg {\n        height: 16px;\n      }\n    }\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 20%;\n\n    color: white;\n    background-color: gray;\n  }\n\n  .info {\n    margin-top: 0;\n    margin-bottom: 10px;\n    padding: 0px 10px;\n    width: 100%;\n\n    text-align: center;\n  }\n\n  .optional {\n    margin-top: 20px;\n    margin-bottom: 5px;\n    padding: 0px 10px;\n\n    text-align: center;\n    font-size: 18px;\n    font-weight: bold;\n  }\n  .optional2 {\n    margin-top: 5px;\n    margin-bottom: 25px;\n    padding: 0px 10px;\n    width: 100%;\n\n    text-align: center;\n  }\n`;\n\ninterface SetMolecularFormulaModalProps {\n  onClose: () => void;\n  onSave?: (element: any) => void;\n  molecules: any;\n  previousMF: any;\n}\n\nexport default function SetMolecularFormulaModal({\n  onClose,\n  onSave,\n  molecules,\n  previousMF,\n}: SetMolecularFormulaModalProps) {\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  useEffect(() => {\n    if (molecules && molecules.length > 0) {\n      setCurrentIndex(0);\n    }\n  }, [molecules]);\n\n  const onSaveHandlerMolecularFormulaInput = useCallback(\n    (mf) => {\n      onSave?.(mf);\n      onClose?.();\n    },\n    [onClose, onSave],\n  );\n\n  const onSaveHandlerMoleculeSelection = useCallback(() => {\n    onSave?.(molecules[currentIndex].mf);\n    onClose?.();\n  }, [currentIndex, molecules, onClose, onSave]);\n\n  const onChangeHandlerMoleculeSelection = useCallback((index) => {\n    setCurrentIndex(index);\n  }, []);\n\n  return (\n    <div css={modalContainer}>\n      <div className=\"header handle\">\n        <CloseButton onClick={onClose} />\n      </div>\n      <div>\n        <p className=\"info\">Please type in a molecular formula!</p>\n      </div>\n      <MolecularFormulaInput\n        onSave={onSaveHandlerMolecularFormulaInput}\n        previousMF={previousMF}\n      />\n      <div>\n        <p className=\"optional\">OR</p>\n        <p className=\"optional2\">Select a molecule as reference!</p>\n      </div>\n      <MoleculeSelection\n        molecules={molecules}\n        onChange={onChangeHandlerMoleculeSelection}\n      />\n      <button type=\"button\" onClick={onSaveHandlerMoleculeSelection}>\n        Set\n      </button>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport CloseButton from '../../elements/CloseButton';\n\nconst modalContainer = css`\n  width: 220px;\n  height: 270px;\n  padding: 5px;\n  text-align: center;\n\n  button:focus {\n    outline: none;\n  }\n\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    align-items: center;\n\n    span {\n      color: #464646;\n      font-size: 15px;\n      flex: 1;\n      user-select: none;\n    }\n\n    button {\n      height: 36px;\n      margin: 2px;\n      background-color: transparent;\n      border: none;\n      svg {\n        height: 16px;\n      }\n    }\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 20%;\n\n    color: white;\n    background-color: gray;\n  }\n\n  table {\n    margin-top: 10px;\n    width: 100%;\n\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n    }\n\n    input {\n      width: 100px;\n      text-align: center;\n      border-radius: 5px;\n      border: 0.55px solid #c7c7c7;\n    }\n  }\n`;\n\ninterface SetShiftToleranceModalProps {\n  onClose: () => void;\n  onSave?: (element: any) => void;\n  previousTolerance: any;\n}\n\nexport default function SetShiftToleranceModal({\n  onClose,\n  onSave,\n  previousTolerance,\n}: SetShiftToleranceModalProps) {\n  const [tolerance, setTolerance] = useState<any>();\n  const [isValid, setIsValid] = useState<{ [atomType: string]: boolean }>({});\n\n  useEffect(() => {\n    if (previousTolerance) {\n      setTolerance(previousTolerance);\n      const _isValid = {};\n      Object.keys(previousTolerance).forEach((atomType) => {\n        _isValid[atomType] = true;\n      });\n      setIsValid(_isValid);\n    } else {\n      setTolerance(undefined);\n    }\n  }, [previousTolerance]);\n\n  const onSaveHandler = useCallback(() => {\n    onSave?.(tolerance);\n    onClose?.();\n  }, [onClose, onSave, tolerance]);\n\n  const onChangeHandler = useCallback(\n    (e, atomType: string) => {\n      const value: string = e.target.value;\n      if (value.trim().length > 0) {\n        setTolerance({ ...tolerance, [atomType]: Number(value) });\n        setIsValid({ ...isValid, [atomType]: true });\n      } else {\n        setIsValid({ ...isValid, [atomType]: false });\n      }\n    },\n    [isValid, tolerance],\n  );\n\n  const rows = useMemo(() => {\n    return tolerance\n      ? Object.keys(tolerance).map((atomType) => {\n          return (\n            <tr key={`tolerance_${atomType}`}>\n              <td>{atomType}</td>\n              <td>\n                <input\n                  type=\"number\"\n                  onChange={(e) => onChangeHandler(e, atomType)}\n                  defaultValue={tolerance[atomType]}\n                  style={\n                    !isValid[atomType] ? { backgroundColor: 'orange' } : {}\n                  }\n                />\n              </td>\n            </tr>\n          );\n        })\n      : undefined;\n  }, [isValid, onChangeHandler, tolerance]);\n\n  return (\n    <div css={modalContainer}>\n      <div className=\"header handle\">\n        <span>Set Shift Tolerances</span>\n        <CloseButton onClick={onClose} />\n      </div>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Atom</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n      <button\n        type=\"button\"\n        onClick={onSaveHandler}\n        disabled={Object.keys(isValid).some((atomType) => !isValid[atomType])}\n      >\n        Set\n      </button>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  getLinkDelta,\n  getLinkDim,\n  Correlation,\n  Values as CorrelationValues,\n  Options as CorrelationOptions,\n  Link,\n} from 'nmr-correlation';\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport { FaFlask, FaSlidersH } from 'react-icons/fa';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport {\n  findRange,\n  findSignal1D,\n  findSignal2D,\n  findSpectrum,\n  findZone,\n} from '../../../data/utilities/FindUtilities';\nimport { useAssignmentData } from '../../assignment';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport Select from '../../elements/Select';\nimport ToolTip from '../../elements/ToolTip/ToolTip';\nimport { useModal } from '../../elements/popup/Modal';\nimport { DISPLAYER_MODE } from '../../reducer/core/Constants';\nimport {\n  DELETE_1D_SIGNAL,\n  DELETE_2D_SIGNAL,\n  DELETE_CORRELATION,\n  SET_2D_SIGNAL_PATH_LENGTH,\n  SET_CORRELATION,\n  SET_CORRELATIONS,\n  SET_CORRELATIONS_MF,\n  SET_CORRELATIONS_TOLERANCE,\n} from '../../reducer/types/Types';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\n\nimport CorrelationTable from './CorrelationTable/CorrelationTable';\nimport Overview from './Overview';\nimport SetMolecularFormulaModal from './SetMolecularFormulaModal';\nimport SetShiftToleranceModal from './SetShiftTolerancesModal';\nimport {\n  findSignalMatch1D,\n  findSignalMatch2D,\n  getAtomType,\n} from './utilities/Utilities';\n\nconst panelStyle = css`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  height: 100%;\n  width: 100%;\n\n  .extra-header-content {\n    display: flex;\n    width: 100%;\n\n    .overview-container {\n      width: 100%;\n      display: flex;\n      align-items: center;\n      margin-left: 10px;\n    }\n\n    .table-view-selection {\n      width: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: flex-end;\n      margin-right: 2px;\n\n      white-space: nowrap;\n\n      label {\n        font-size: 13px;\n      }\n    }\n  }\n`;\n\nfunction SummaryPanel() {\n  const {\n    molecules,\n    correlations: correlationsData,\n    data: spectraData,\n    xDomain,\n    yDomain,\n    displayerMode,\n    activeTab,\n  } = useChartData();\n\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const assignmentData = useAssignmentData();\n\n  const [additionalColumnData, setAdditionalColumnData] = useState([]);\n  const [\n    selectedAdditionalColumnsAtomType,\n    setSelectedAdditionalColumnsAtomType,\n  ] = useState<string>('H');\n  const [showProtonsAsRows, setShowProtonsAsRows] = useState(false);\n  const [filterIsActive, setFilterIsActive] = useState(false);\n\n  const filteredCorrelationsData = useMemo(() => {\n    const isInView = (correlation: Correlation): boolean => {\n      if (correlation.pseudo === true) {\n        return false;\n      }\n      const atomTypesInView = activeTab\n        .split(',')\n        .map((tab) => getAtomType(tab));\n\n      const factor = 10000;\n      const xDomain0 = xDomain[0] * factor;\n      const xDomain1 = xDomain[1] * factor;\n      const yDomain0 = yDomain[0] * factor;\n      const yDomain1 = yDomain[1] * factor;\n\n      if (displayerMode === DISPLAYER_MODE.DM_1D) {\n        const firstLink1D = correlation.link.find(\n          (link: Link) => getLinkDim(link) === 1,\n        );\n        if (!firstLink1D) {\n          return false;\n        }\n        let delta = getLinkDelta(firstLink1D);\n        if (delta === undefined) {\n          return false;\n        }\n        delta *= factor;\n        const spectrum = findSpectrum(\n          spectraData,\n          firstLink1D.experimentID,\n          true,\n        );\n        if (\n          spectrum &&\n          atomTypesInView[0] === correlation.atomType &&\n          delta >= xDomain0 &&\n          delta <= xDomain1\n        ) {\n          return true;\n        }\n        // try to find a link which contains the belonging 2D signal in the spectra in view\n        if (\n          correlation.link.some((link: Link) => {\n            const spectrum = findSpectrum(\n              spectraData,\n              link.experimentID,\n              true,\n            ) as Datum2D;\n            return findSignalMatch1D(\n              spectrum,\n              link,\n              factor,\n              xDomain0,\n              xDomain1,\n            );\n          })\n        ) {\n          return true;\n        }\n      } else if (displayerMode === DISPLAYER_MODE.DM_2D) {\n        if (!atomTypesInView.includes(correlation.atomType)) {\n          return false;\n        }\n        const firstLink2D = correlation.link.find(\n          (link: Link) => getLinkDim(link) === 2,\n        );\n        if (!firstLink2D) {\n          return false;\n        }\n        const spectrum = findSpectrum(\n          spectraData,\n          firstLink2D.experimentID,\n          true,\n        ) as Datum2D;\n        // correlation is represented by a 2D signal\n        if (\n          findSignalMatch2D(\n            spectrum,\n            firstLink2D,\n            factor,\n            xDomain0,\n            xDomain1,\n            yDomain0,\n            yDomain1,\n          )\n        ) {\n          return true;\n        } else {\n          // try to find a link which contains the belonging 2D signal in the spectra in view\n          if (\n            correlation.link.some((link) => {\n              const spectrum = findSpectrum(\n                spectraData,\n                link.experimentID,\n                true,\n              ) as Datum2D;\n              return findSignalMatch2D(\n                spectrum,\n                link,\n                factor,\n                xDomain0,\n                xDomain1,\n                yDomain0,\n                yDomain1,\n              );\n            })\n          ) {\n            return true;\n          }\n        }\n      }\n      // do not show correlation\n      return false;\n    };\n\n    if (correlationsData) {\n      const _values = filterIsActive\n        ? correlationsData.values.filter((correlation) => isInView(correlation))\n        : correlationsData.values;\n\n      return { ...correlationsData, values: _values };\n    }\n  }, [\n    activeTab,\n    correlationsData,\n    displayerMode,\n    filterIsActive,\n    spectraData,\n    xDomain,\n    yDomain,\n  ]);\n\n  const handleOnSetMolecularFormula = useCallback(\n    (mf) => {\n      dispatch({\n        type: SET_CORRELATIONS_MF,\n        payload: {\n          mf,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const handleOnSetShiftTolerance = useCallback(\n    (tolerance) => {\n      dispatch({\n        type: SET_CORRELATIONS_TOLERANCE,\n        payload: {\n          tolerance,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const showSetMolecularFormulaModal = useCallback(() => {\n    modal.show(\n      <SetMolecularFormulaModal\n        onClose={() => modal.close()}\n        onSave={handleOnSetMolecularFormula}\n        molecules={molecules}\n        previousMF={correlationsData.options.mf}\n      />,\n    );\n  }, [correlationsData, handleOnSetMolecularFormula, modal, molecules]);\n\n  const showSetShiftToleranceModal = useCallback(() => {\n    modal.show(\n      <SetShiftToleranceModal\n        onClose={() => modal.close()}\n        onSave={handleOnSetShiftTolerance}\n        previousTolerance={correlationsData.options.tolerance}\n      />,\n    );\n  }, [correlationsData, handleOnSetShiftTolerance, modal]);\n\n  const additionalColumnTypes = useMemo(() => {\n    const columnTypes = ['H', 'H-H'].concat(\n      correlationsData\n        ? correlationsData.values\n            .map((correlation) => correlation.atomType)\n            .filter(\n              (atomType, i, array) =>\n                atomType !== 'H' && array.indexOf(atomType) === i,\n            )\n        : [],\n    );\n\n    return columnTypes.map((columnType) => {\n      return {\n        key: columnType,\n        label: columnType,\n        value: columnType,\n      };\n    });\n  }, [correlationsData]);\n\n  useEffect(() => {\n    const _selectedAdditionalColumnsAtomType =\n      selectedAdditionalColumnsAtomType.split('-')[0];\n\n    setAdditionalColumnData(\n      filteredCorrelationsData\n        ? filteredCorrelationsData.values\n            .filter(\n              (correlation) =>\n                correlation.atomType === _selectedAdditionalColumnsAtomType,\n            )\n            .reverse()\n        : [],\n    );\n  }, [filteredCorrelationsData, selectedAdditionalColumnsAtomType]);\n\n  const editEquivalencesSaveHandler = useCallback(\n    (correlation: Correlation, value: number) => {\n      dispatch({\n        type: SET_CORRELATION,\n        payload: {\n          id: correlation.id,\n          correlation: {\n            ...correlation,\n            equivalence: value,\n            edited: { ...correlation.edited, equivalence: value !== 1 },\n          },\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const editNumericValuesSaveHandler = useCallback(\n    ({\n      correlation,\n      values,\n      key,\n    }: {\n      correlation: Correlation;\n      values: number[];\n      key: 'hybridization' | 'protonsCount';\n    }) => {\n      dispatch({\n        type: SET_CORRELATION,\n        payload: {\n          id: correlation.id,\n          correlation: {\n            ...correlation,\n            [key]: values,\n            edited: { ...correlation.edited, [key]: true },\n          },\n          options: {\n            skipDataUpdate: true,\n          },\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const setCorrelationsHandler = useCallback(\n    (correlations: CorrelationValues, options?: CorrelationOptions) => {\n      dispatch({\n        type: SET_CORRELATIONS,\n        payload: {\n          correlations,\n          options,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const deleteCorrelationHandler = useCallback(\n    (correlation: Correlation) => {\n      dispatch({\n        type: DELETE_CORRELATION,\n        payload: {\n          correlation,\n          assignmentData,\n        },\n      });\n    },\n    [assignmentData, dispatch],\n  );\n\n  const deleteSignalHandler = useCallback(\n    (link: Link) => {\n      // remove linking signal in spectrum\n      const linkDim = getLinkDim(link);\n      if (linkDim === 1) {\n        const spectrum = findSpectrum(\n          spectraData,\n          link.experimentID,\n          false,\n        ) as Datum1D;\n        const range = findRange(spectrum, link.signal.id);\n        const signal = findSignal1D(spectrum, link.signal.id);\n\n        dispatch({\n          type: DELETE_1D_SIGNAL,\n          payload: {\n            spectrum,\n            range,\n            signal,\n            assignmentData,\n          },\n        });\n      } else if (linkDim === 2) {\n        const spectrum = findSpectrum(\n          spectraData,\n          link.experimentID,\n          false,\n        ) as Datum2D;\n        const zone = findZone(spectrum, link.signal.id);\n        const signal = findSignal2D(spectrum, link.signal.id);\n\n        dispatch({\n          type: DELETE_2D_SIGNAL,\n          payload: {\n            spectrum,\n            zone,\n            signal,\n            assignmentData,\n          },\n        });\n      }\n    },\n    [assignmentData, dispatch, spectraData],\n  );\n\n  const changeSignalPathLengthHandler = useCallback(\n    (link: Link) => {\n      const linkDim = getLinkDim(link);\n      if (linkDim === 2) {\n        const spectrum = findSpectrum(\n          spectraData,\n          link.experimentID,\n          false,\n        ) as Datum2D;\n        const zone = findZone(spectrum, link.signal.id);\n        const signal = findSignal2D(spectrum, link.signal.id);\n\n        dispatch({\n          type: SET_2D_SIGNAL_PATH_LENGTH,\n          payload: {\n            spectrum,\n            zone,\n            signal,\n            pathLength: link.signal.j?.pathLength,\n          },\n        });\n      }\n    },\n    [dispatch, spectraData],\n  );\n\n  const editCorrelationTableCellHandler = useCallback(\n    (\n      editedCorrelations: Correlation[],\n      action: string,\n      link?: Link,\n      options?: CorrelationOptions,\n    ) => {\n      if (\n        action === 'add' ||\n        action === 'move' ||\n        action === 'remove' ||\n        action === 'unmove' ||\n        action === 'setPathLength'\n      ) {\n        if (link && link.pseudo === false) {\n          if (action === 'remove') {\n            deleteSignalHandler(link);\n          } else if (action === 'setPathLength') {\n            changeSignalPathLengthHandler(link);\n          }\n        }\n        setCorrelationsHandler(editedCorrelations, options);\n      } else if (action === 'removeAll') {\n        deleteCorrelationHandler(editedCorrelations[0]);\n      }\n    },\n    [\n      changeSignalPathLengthHandler,\n      deleteCorrelationHandler,\n      deleteSignalHandler,\n      setCorrelationsHandler,\n    ],\n  );\n\n  const handleOnFilter = useCallback(() => {\n    setFilterIsActive(!filterIsActive);\n  }, [filterIsActive]);\n\n  return (\n    <div css={panelStyle}>\n      <DefaultPanelHeader\n        canDelete={false}\n        counter={correlationsData ? correlationsData.values.length : 0}\n        onFilter={handleOnFilter}\n        filterToolTip={\n          filterIsActive\n            ? 'Show all correlations'\n            : 'Hide correlations out of view'\n        }\n        filterIsActive={filterIsActive}\n        counterFiltered={filteredCorrelationsData?.values.length}\n      >\n        <ToolTip\n          title={`Set molecular formula (${correlationsData.options.mf})`}\n          popupPlacement=\"right\"\n        >\n          <button type=\"button\" onClick={showSetMolecularFormulaModal}>\n            <FaFlask />\n          </button>\n        </ToolTip>\n        <ToolTip title={`Set shift tolerance`} popupPlacement=\"right\">\n          <button type=\"button\" onClick={showSetShiftToleranceModal}>\n            <FaSlidersH />\n          </button>\n        </ToolTip>\n        <div className=\"extra-header-content\">\n          <div className=\"overview-container\">\n            <Overview correlationsData={correlationsData} />\n          </div>\n          <div className=\"table-view-selection\">\n            <span>\n              <label>View:</label>\n              <Select\n                onChange={(selection) => {\n                  setSelectedAdditionalColumnsAtomType(selection);\n                  if (selection === 'H-H') {\n                    setShowProtonsAsRows(true);\n                  } else {\n                    setShowProtonsAsRows(false);\n                  }\n                }}\n                data={additionalColumnTypes}\n                defaultValue={selectedAdditionalColumnsAtomType}\n                style={{\n                  fontSize: '12px',\n                  width: '70px',\n                  height: '18px',\n                  border: '1px solid grey',\n                }}\n              />\n            </span>\n          </div>\n        </div>\n      </DefaultPanelHeader>\n      <CorrelationTable\n        correlationsData={correlationsData}\n        filteredCorrelationsData={filteredCorrelationsData}\n        additionalColumnData={additionalColumnData}\n        editEquivalencesSaveHandler={editEquivalencesSaveHandler}\n        onSaveEditNumericValues={editNumericValuesSaveHandler}\n        onEditCorrelationTableCellHandler={editCorrelationTableCellHandler}\n        showProtonsAsRows={showProtonsAsRows}\n        spectraData={spectraData}\n      />\n    </div>\n  );\n}\n\nexport default memo(SummaryPanel);\n","import {\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  memo,\n  CSSProperties,\n  forwardRef,\n} from 'react';\n\nimport { usePreferences } from '../../context/PreferencesContext';\nimport IsotopesViewer from '../../elements/IsotopesViewer';\nimport FormikColumnFormatField from '../../elements/formik/FormikColumnFormatField';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport { useAlert } from '../../elements/popup/Alert';\nimport useNucleus from '../../hooks/useNucleus';\nimport { getValue as getValueByKeyPath } from '../../utility/LocalStorage';\nimport { zoneDefaultValues } from '../extra/preferences/defaultValues';\n\nconst styles: Record<\n  'container' | 'groupContainer' | 'row' | 'header' | 'inputLabel' | 'input',\n  CSSProperties\n> = {\n  container: {\n    padding: 10,\n    backgroundColor: '#f1f1f1',\n    height: '100%',\n    overflowY: 'auto',\n  },\n  groupContainer: {\n    padding: '5px',\n    borderRadius: '5px',\n    margin: '10px 0px',\n    backgroundColor: 'white',\n  },\n  row: {\n    display: 'flex',\n    margin: '5px 0px',\n  },\n  header: {\n    borderBottom: '1px solid #e8e8e8',\n    paddingBottom: '5px',\n    fontWeight: 'bold',\n    color: '#4a4a4a',\n  },\n  inputLabel: {\n    flex: 2,\n    fontSize: '11px',\n    fontWeight: 'bold',\n    color: '#232323',\n  },\n  input: {\n    width: '30%',\n    textAlign: 'center',\n  },\n};\n\nconst formatFields: Array<{\n  id: number;\n  label: string;\n  checkController: string;\n  formatController: string;\n}> = [\n  {\n    id: 1,\n    label: 'From :',\n    checkController: 'showFrom',\n    formatController: 'fromFormat',\n  },\n  {\n    id: 2,\n    label: 'To :',\n    checkController: 'showTo',\n    formatController: 'toFormat',\n  },\n  {\n    id: 3,\n    label: 'Absolute :',\n    checkController: 'showAbsolute',\n    formatController: 'absoluteFormat',\n  },\n  {\n    id: 4,\n    label: 'Relative :',\n    checkController: 'showRelative',\n    formatController: 'relativeFormat',\n  },\n];\n\ninterface ZonesPreferencesInnerProps {\n  nucleus: Array<string>;\n  innerRef: any;\n}\n\nfunction ZonesPreferencesInner({\n  nucleus,\n  innerRef,\n}: ZonesPreferencesInnerProps) {\n  const alert = useAlert();\n  const preferences = usePreferences();\n  const formRef = useRef<any>();\n\n  const updateValues = useCallback(() => {\n    if (nucleus) {\n      const defaultValues = nucleus.reduce((acc, nucleusLabel) => {\n        acc[nucleusLabel] = zoneDefaultValues;\n        return acc;\n      }, {});\n      const zonesPreferences = getValueByKeyPath(\n        preferences.current,\n        `formatting.panels.zones`,\n      );\n      formRef.current.setValues(\n        zonesPreferences ? zonesPreferences : defaultValues,\n      );\n    }\n  }, [nucleus, preferences]);\n\n  useEffect(() => {\n    updateValues();\n  }, [updateValues]);\n\n  const saveHandler = useCallback(\n    (values) => {\n      preferences.dispatch({\n        type: 'SET_PANELS_PREFERENCES',\n        payload: { key: 'zones', value: values },\n      });\n      alert.success('zones preferences saved successfully');\n    },\n    [alert, preferences],\n  );\n\n  useImperativeHandle(\n    innerRef,\n    () => ({\n      saveSetting: () => {\n        formRef.current.submitForm();\n      },\n    }),\n    [],\n  );\n\n  return (\n    <div style={styles.container}>\n      <FormikForm onSubmit={saveHandler} ref={formRef}>\n        {nucleus?.map((nucleusLabel) => (\n          <div key={nucleusLabel} style={styles.groupContainer}>\n            <IsotopesViewer style={styles.header} value={nucleusLabel} />\n            {formatFields.map((field) => (\n              <FormikColumnFormatField\n                key={field.id}\n                label={field.label}\n                checkControllerName={`${nucleusLabel}.${field.checkController}`}\n                formatControllerName={`${nucleusLabel}.${field.formatController}`}\n              />\n            ))}\n          </div>\n        ))}\n      </FormikForm>\n    </div>\n  );\n}\n\nconst MemoizedZonesPreferences = memo(ZonesPreferencesInner);\n\n// TODO: remove this hacky use of ref.\nfunction ZonesPreferences(props, ref: any) {\n  const nucleus = useNucleus();\n  return <MemoizedZonesPreferences innerRef={ref} {...{ nucleus }} />;\n}\n\nexport default forwardRef(ZonesPreferences);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\n\nimport DefaultPathLengths from '../../../data/constants/DefaultPathLengths';\nimport FormikNumberInput from '../../elements/formik/FormikNumberInput';\n\nconst editPathLengthsStyles = css`\n  width: 100%;\n  height: 100%;\n  margin-top: 10px;\n  text-align: center;\n\n  .input-container {\n    width: 100%;\n    margin-top: 5px;\n    text-align: center;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n    }\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 60px;\n\n    color: white;\n    background-color: gray;\n  }\n\n  .warning {\n    margin-top: 5px;\n    color: red;\n  }\n`;\n\ninterface InputProps {\n  signalIndex: number;\n}\n\nfunction EditPathLengthFormik({ signalIndex }: InputProps) {\n  const {\n    errors,\n    values,\n  }: {\n    values: any;\n    setFieldValue: (\n      field: string,\n      value: any,\n      shouldValidate?: boolean | undefined,\n    ) => void;\n    errors: any;\n  } = useFormikContext();\n\n  return (\n    <div css={editPathLengthsStyles}>\n      <p>Setting of the minimum and maximum path length (J coupling).</p>\n      <div className=\"input-container\">\n        <FormikNumberInput\n          name={`signals[${signalIndex}].j.pathLength.from`}\n          defaultValue={\n            values.signals[signalIndex].j?.pathLength?.from ||\n            DefaultPathLengths[values.experimentType]?.from ||\n            1\n          }\n          label=\"Min: \"\n          style={{\n            input: {\n              color: errors.signals?.[signalIndex].j?.pathLength?.from\n                ? 'red'\n                : 'black',\n            },\n          }}\n          min={1}\n          max={\n            values.signals[signalIndex].j?.pathLength?.to ||\n            DefaultPathLengths[values.experimentType]?.to\n          }\n          pattern=\"[1-9]+\"\n        />\n        <FormikNumberInput\n          name={`signals[${signalIndex}].j.pathLength.to`}\n          defaultValue={\n            values.signals[signalIndex].j?.pathLength?.to ||\n            DefaultPathLengths[values.experimentType]?.to ||\n            1\n          }\n          label=\"Max: \"\n          style={{\n            input: {\n              color: errors.signals?.[signalIndex].j?.pathLength?.to\n                ? 'red'\n                : 'black',\n            },\n          }}\n          min={\n            values.signals[signalIndex].j?.pathLength?.from ||\n            DefaultPathLengths[values.experimentType]?.from ||\n            1\n          }\n          pattern=\"[1-9]+\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default EditPathLengthFormik;\n","import EditPathLengthFormik from './EditPathLengthFormik';\n\ninterface SignalFormTabProps {\n  signalIndex: number;\n}\n\nfunction SignalFormTab({ signalIndex }: SignalFormTabProps) {\n  return <EditPathLengthFormik signalIndex={signalIndex} />;\n}\n\nexport default SignalFormTab;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport { useCallback, useMemo } from 'react';\n\nimport Tab from '../../elements/Tab/Tab';\nimport Tabs from '../../elements/Tab/Tabs';\n\nimport SignalFormTab from './SignalFormTab';\n\nconst textStyles = css`\n  text-align: center;\n  width: 100%;\n\n  .errorText {\n    color: red;\n  }\n\n  .infoText {\n    padding: 10px;\n    margin: 10px 0;\n    font-size: 14px;\n    text-align: left;\n    color: white;\n    background-color: #5f5f5f;\n    border-radius: 5px;\n  }\n`;\n\nconst tabStylesAddition = css`\n  color: red;\n`;\nconst tabStyles = css`\n  display: inline-grid;\n  list-style: none;\n  padding: 0.5rem 1.5rem;\n`;\n\nfunction SignalsForm() {\n  const {\n    values,\n    setFieldValue,\n    errors,\n  }: {\n    values: any;\n    setFieldValue: (\n      field: string,\n      value: any,\n      shouldValidate?: boolean | undefined,\n    ) => void;\n    errors: any;\n  } = useFormikContext<any>();\n\n  const tabContainsErrors = useCallback(\n    (i) => {\n      return errors?.signals && errors?.signals[i] ? true : false;\n    },\n    [errors],\n  );\n\n  const signalFormTabs = useMemo(() => {\n    const signalTabs =\n      values.signals.length > 0\n        ? values.signals.map((signal, i) => (\n            <Tab\n              // eslint-disable-next-line react/no-array-index-key\n              key={`signalForm_zone${i}`}\n              tabid={`${i}`}\n              tabstyles={tabContainsErrors(i) ? tabStylesAddition : tabStyles}\n              render={() => (\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    fontSize: '11px',\n                  }}\n                >\n                  <span>\n                    𝛅<sub>{signal.x.nucleus}</sub>: {signal.x.delta.toFixed(2)}\n                  </span>\n                  <span>\n                    𝛅<sub>{signal.y.nucleus}</sub>: {signal.y.delta.toFixed(2)}\n                  </span>\n                </div>\n              )}\n            >\n              <SignalFormTab signalIndex={i} />\n            </Tab>\n          ))\n        : [];\n\n    return signalTabs;\n  }, [tabContainsErrors, values.signals]);\n\n  const tapClickHandler = useCallback(\n    ({ tabid }) => {\n      setFieldValue('activeTab', tabid);\n    },\n    [setFieldValue],\n  );\n\n  const handleDeleteSignal = useCallback(\n    ({ tabid }) => {\n      const _signals = values.signals.filter(\n        (_signal, i) => i !== Number(tabid),\n      );\n      setFieldValue('signals', _signals);\n    },\n    [setFieldValue, values.signals],\n  );\n\n  return (\n    <div>\n      <div css={textStyles} />\n      <Tabs\n        activeTab={values.activeTab}\n        onClick={tapClickHandler}\n        onDelete={handleDeleteSignal}\n      >\n        {signalFormTabs}\n      </Tabs>\n    </div>\n  );\n}\n\nexport default SignalsForm;\n","import { useMemo } from 'react';\nimport * as Yup from 'yup';\n\nconst useValidation = () =>\n  useMemo(() => {\n    return Yup.object().shape({\n      signals: Yup.array()\n        .of(\n          Yup.object().shape({\n            j: Yup.object().shape({\n              pathLength: Yup.object().shape({\n                from: Yup.number().required().positive().integer(),\n                to: Yup.number().required().positive().integer(),\n              }),\n            }),\n          }),\n        )\n        .min(1, 'There must be at least one signal in a zone!'),\n    });\n  }, []);\n\nexport default useValidation;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FromTo } from 'cheminfo-types';\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { FaSearchPlus } from 'react-icons/fa';\n\nimport DefaultPathLengths from '../../../data/constants/DefaultPathLengths';\nimport { Signal2D } from '../../../data/types/data2d';\nimport Button from '../../elements/Button';\nimport CloseButton from '../../elements/CloseButton';\nimport SaveButton from '../../elements/SaveButton';\nimport FormikForm from '../../elements/formik/FormikForm';\n\nimport SignalsForm from './SignalsForm';\nimport useRangeFormValidation from './validation/EditZoneValidation';\nimport isDefaultPathLength from './validation/isDefaultPathLength';\n\nconst styles = css`\n  width: 500px;\n  height: 250px;\n  padding: 5px;\n  button:focus {\n    outline: none;\n  }\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    align-items: center;\n    span {\n      color: #464646;\n      font-size: 15px;\n      flex: 1;\n      border-left: 1px solid #ececec;\n      padding-left: 6px;\n    }\n\n    button {\n      background-color: transparent;\n      border: none;\n      padding: 5px;\n\n      svg {\n        height: 16px;\n      }\n    }\n  }\n  .container {\n    display: flex;\n    margin: 30px 5px;\n  }\n`;\n\ninterface EditZoneModalProps {\n  onSaveEditZoneModal: (value: any) => Promise<void> | null | void;\n  onCloseEditZoneModal: () => void;\n  onZoomEditZoneModal: (value: any) => void;\n  rowData: any;\n}\n\nfunction EditZoneModal({\n  onSaveEditZoneModal = () => null,\n  onCloseEditZoneModal = () => null,\n  onZoomEditZoneModal = () => null,\n  rowData,\n}: EditZoneModalProps) {\n  const formRef = useRef<any>(null);\n  const validation = useRangeFormValidation();\n\n  const handleOnZoom = useCallback(() => {\n    onZoomEditZoneModal(rowData);\n  }, [onZoomEditZoneModal, rowData]);\n\n  useEffect(() => {\n    handleOnZoom();\n  }, [handleOnZoom]);\n\n  const handleOnClose = useCallback(() => {\n    onCloseEditZoneModal();\n  }, [onCloseEditZoneModal]);\n\n  const handleOnSave = useCallback(\n    (formValues) => {\n      void (async () => {\n        const _rowData = {\n          ...rowData,\n          signals: formValues.signals.map((signal: Signal2D) => {\n            if (\n              isDefaultPathLength(\n                signal.j?.pathLength as FromTo,\n                rowData.tableMetaInfo.experiment,\n              )\n            ) {\n              delete signal.j?.pathLength;\n              if (signal.j && Object.keys(signal.j).length === 0) {\n                delete signal.j;\n              }\n            }\n\n            return signal;\n          }),\n        };\n\n        await onSaveEditZoneModal(_rowData);\n        handleOnClose();\n      })();\n    },\n    [handleOnClose, onSaveEditZoneModal, rowData],\n  );\n\n  const data = useMemo(() => {\n    return {\n      activeTab: '0',\n      signals: rowData.signals.map((signal: Signal2D): Signal2D => {\n        return {\n          ...signal,\n          j: {\n            pathLength: {\n              from:\n                DefaultPathLengths[rowData.tableMetaInfo.experiment]?.from || 1,\n              to: DefaultPathLengths[rowData.tableMetaInfo.experiment]?.to || 1,\n            },\n            ...signal.j,\n          },\n        };\n      }),\n    };\n  }, [rowData.signals, rowData.tableMetaInfo.experiment]);\n\n  return (\n    <div css={styles}>\n      <FormikForm\n        ref={formRef}\n        initialValues={data}\n        validationSchema={validation}\n        onSubmit={handleOnSave}\n      >\n        <div className=\"header handle\">\n          <Button onClick={handleOnZoom} className=\"zoom-button\">\n            <FaSearchPlus title=\"Set to default view on range in spectrum\" />\n          </Button>\n          <span>{`Zone and Signal edition`}</span>\n          <SaveButton\n            onClick={() => formRef.current.submitForm()}\n            popupTitle=\"Save and exit\"\n          />\n          <CloseButton onClick={handleOnClose} />\n        </div>\n        <SignalsForm />\n      </FormikForm>\n    </div>\n  );\n}\n\nexport default EditZoneModal;\n","import { CSSProperties, Fragment, useCallback } from 'react';\nimport { FaEdit, FaRegTrashAlt, FaSearchPlus } from 'react-icons/fa';\n\nimport { SignalKinds } from '../../../../data/constants/SignalsKinds';\nimport { useAssignmentData } from '../../../assignment';\nimport { useDispatch } from '../../../context/DispatchContext';\nimport Select from '../../../elements/Select';\nimport {\n  useModal,\n  positions,\n  transitions,\n} from '../../../elements/popup/Modal';\nimport EditZoneModal from '../../../modal/editZone/EditZoneModal';\nimport {\n  CHANGE_ZONE_SIGNAL_KIND,\n  DELETE_2D_ZONE,\n  SAVE_EDITED_ZONE,\n  SET_SELECTED_TOOL,\n  SET_X_DOMAIN,\n  SET_Y_DOMAIN,\n} from '../../../reducer/types/Types';\nimport { options } from '../../../toolbar/ToolTypes';\n\nconst selectBoxStyle: CSSProperties = {\n  marginLeft: 2,\n  marginRight: 2,\n  border: 'none',\n  height: '20px',\n};\n\nexport interface RowDataProps {\n  id: number;\n  tableMetaInfo: {\n    id: number;\n    signalIndex: number;\n    rowSpan: any;\n    signal: {\n      kind: any;\n    };\n    experiment: string;\n  };\n  x: {\n    from: number;\n    to: number;\n  };\n  y: {\n    from: number;\n    to: number;\n  };\n}\n\ninterface ActionsColumnProps {\n  rowData: RowDataProps;\n  rowSpanTags: any;\n}\n\nfunction ActionsColumn({ rowData, rowSpanTags }: ActionsColumnProps) {\n  const dispatch = useDispatch();\n  const assignmentData = useAssignmentData();\n  const modal = useModal();\n\n  const changeSignalKindHandler = useCallback(\n    (value) => {\n      dispatch({\n        type: CHANGE_ZONE_SIGNAL_KIND,\n        payload: {\n          rowData,\n          value,\n        },\n      });\n    },\n    [dispatch, rowData],\n  );\n\n  const deleteZoneHandler = useCallback(() => {\n    dispatch({\n      type: DELETE_2D_ZONE,\n      payload: {\n        id: rowData.id,\n        assignmentData,\n      },\n    });\n  }, [assignmentData, dispatch, rowData]);\n\n  const zoomZoneHandler = useCallback(() => {\n    const xMargin = Math.abs(rowData.x.from - rowData.x.to) * 10;\n    dispatch({\n      type: SET_X_DOMAIN,\n      xDomain:\n        rowData.x.from <= rowData.x.to\n          ? [rowData.x.from - xMargin, rowData.x.to + xMargin]\n          : [rowData.x.to - xMargin, rowData.x.from + xMargin],\n    });\n    const yMargin = Math.abs(rowData.y.from - rowData.y.to) * 10;\n    dispatch({\n      type: SET_Y_DOMAIN,\n      yDomain:\n        rowData.y.from <= rowData.y.to\n          ? [rowData.y.from - yMargin, rowData.y.to + yMargin]\n          : [rowData.y.to - yMargin, rowData.y.from + yMargin],\n    });\n  }, [dispatch, rowData.x.from, rowData.x.to, rowData.y.from, rowData.y.to]);\n\n  const saveEditZoneHandler = useCallback(\n    (editedRowData) => {\n      dispatch({\n        type: SAVE_EDITED_ZONE,\n        payload: {\n          editedRowData,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const openEditZoneHandler = useCallback(() => {\n    dispatch({\n      type: SET_SELECTED_TOOL,\n      payload: { selectedTool: options.editRange.id, tempRange: rowData },\n    });\n    modal.show(\n      <EditZoneModal\n        onCloseEditZoneModal={() => modal.close()}\n        onSaveEditZoneModal={saveEditZoneHandler}\n        onZoomEditZoneModal={() => zoomZoneHandler()}\n        rowData={rowData}\n      />,\n      {\n        position: positions.MIDDLE_RIGHT,\n        transition: transitions.SCALE,\n        isBackgroundBlur: false,\n      },\n    );\n  }, [dispatch, modal, rowData, saveEditZoneHandler, zoomZoneHandler]);\n\n  return (\n    <Fragment>\n      <td>\n        <Select\n          onChange={(value) => {\n            changeSignalKindHandler(value);\n          }}\n          data={SignalKinds}\n          defaultValue={rowData.tableMetaInfo.signal.kind}\n          style={selectBoxStyle}\n        />\n      </td>\n      <td {...rowSpanTags}>\n        <button\n          type=\"button\"\n          className=\"delete-button\"\n          onClick={deleteZoneHandler}\n        >\n          <FaRegTrashAlt />\n        </button>\n        <button type=\"button\" className=\"zoom-button\" onClick={zoomZoneHandler}>\n          <FaSearchPlus title=\"Zoom to zone in spectrum\" />\n        </button>\n        <button\n          type=\"button\"\n          className=\"edit-button\"\n          onClick={openEditZoneHandler}\n        >\n          <FaEdit color=\"blue\" />\n        </button>\n      </td>\n    </Fragment>\n  );\n}\n\nexport default ActionsColumn;\n","import lodashGet from 'lodash/get';\nimport { FaMinusCircle } from 'react-icons/fa';\n\nimport { RowDataProps } from './ActionsColumn';\n\nexport interface SignalAssignmentsColumnProps {\n  rowData: RowDataProps;\n  assignment: {\n    isActive: any;\n    activeAxis: any;\n  };\n  highlight: {\n    isActive: any;\n  };\n  onHover: () => void;\n  onClick: (a: any, b: any, c: any) => void;\n  onUnlink: (a: any, b: any, c: any) => void;\n  showUnlinkButton: boolean;\n  axis: any;\n  setShowUnlinkButton: (element: boolean) => void;\n}\n\nfunction SignalAssignmentsColumn({\n  rowData,\n  assignment,\n  highlight,\n  onHover,\n  onClick,\n  onUnlink,\n  axis,\n  showUnlinkButton,\n  setShowUnlinkButton,\n}: SignalAssignmentsColumnProps) {\n  return (\n    <td\n      {...onHover}\n      {...{ onClick: (e) => onClick(e, assignment, axis) }}\n      style={\n        highlight.isActive ||\n        (assignment.isActive && assignment.activeAxis === axis)\n          ? {\n              color: 'red',\n              fontWeight: 'bold',\n            }\n          : undefined\n      }\n    >\n      {lodashGet(rowData, `tableMetaInfo.signal.${axis}.diaIDs`, []).length >\n      0 ? (\n        <div\n          onMouseEnter={() => setShowUnlinkButton(true)}\n          onMouseLeave={() => setShowUnlinkButton(false)}\n        >\n          {rowData.tableMetaInfo.signal[axis].diaIDs.length}{' '}\n          <sup>\n            <button\n              type=\"button\"\n              style={{\n                visibility: showUnlinkButton ? 'visible' : 'hidden',\n                padding: 0,\n                margin: 0,\n              }}\n              onClick={(e) => onUnlink(e, false, axis)}\n            >\n              <FaMinusCircle color=\"red\" />\n            </button>\n          </sup>\n        </div>\n      ) : assignment.isActive && assignment.activeAxis === axis ? (\n        '0'\n      ) : (\n        ''\n      )}\n    </td>\n  );\n}\n\nexport default SignalAssignmentsColumn;\n","import { Fragment } from 'react';\n\nimport { RowDataProps } from './ActionsColumn';\nimport SignalAssignmentsColumn from './SignalAssignmentsColumn';\n\ninterface SignalAssignmentsColumnsProps {\n  rowData: RowDataProps;\n  onHoverSignalX: any;\n  onHoverSignalY: any;\n  showUnlinkButtonSignalX: boolean;\n  showUnlinkButtonSignalY: boolean;\n  setShowUnlinkButtonSignalX: (element: boolean) => void;\n  setShowUnlinkButtonSignalY: (element: boolean) => void;\n  onClick: (a: any, b: any, c: any) => void;\n  onUnlink: (a: any, b: any, c: any) => void;\n  highlightSignalX: {\n    isActive: any;\n  };\n  highlightSignalY: {\n    isActive: any;\n  };\n  assignmentSignal: {\n    activeAxis: any;\n    onHoverAxis: any;\n    isActive: boolean;\n    isOnHover: boolean;\n  };\n}\n\nfunction SignalAssignmentsColumns({\n  rowData,\n  assignmentSignal,\n  onHoverSignalX,\n  onHoverSignalY,\n  showUnlinkButtonSignalX,\n  showUnlinkButtonSignalY,\n  setShowUnlinkButtonSignalX,\n  setShowUnlinkButtonSignalY,\n  onClick,\n  onUnlink,\n  highlightSignalX,\n  highlightSignalY,\n}: SignalAssignmentsColumnsProps) {\n  return (\n    <Fragment>\n      <SignalAssignmentsColumn\n        rowData={rowData}\n        assignment={assignmentSignal}\n        highlight={highlightSignalX}\n        onHover={onHoverSignalX}\n        onClick={onClick}\n        onUnlink={onUnlink}\n        axis={'x'}\n        showUnlinkButton={showUnlinkButtonSignalX}\n        setShowUnlinkButton={setShowUnlinkButtonSignalX}\n      />\n      <SignalAssignmentsColumn\n        rowData={rowData}\n        assignment={assignmentSignal}\n        highlight={highlightSignalY}\n        onHover={onHoverSignalY}\n        onClick={onClick}\n        onUnlink={onUnlink}\n        axis={'y'}\n        showUnlinkButton={showUnlinkButtonSignalY}\n        setShowUnlinkButton={setShowUnlinkButtonSignalY}\n      />\n    </Fragment>\n  );\n}\n\nexport default SignalAssignmentsColumns;\n","import lodashGet from 'lodash/get';\nimport { Fragment, useCallback } from 'react';\n\nimport { useDispatch } from '../../../context/DispatchContext';\nimport EditableColumn from '../../../elements/EditableColumn';\nimport { CHANGE_ZONE_SIGNAL_VALUE } from '../../../reducer/types/Types';\n\nimport { RowDataProps } from './ActionsColumn';\n\ninterface SignalDeltaColumnProps {\n  rowData: RowDataProps;\n  onHoverSignalX: any;\n  onHoverSignalY: any;\n}\n\nfunction SignalDeltaColumn({\n  rowData,\n  onHoverSignalX,\n  onHoverSignalY,\n}: SignalDeltaColumnProps) {\n  const dispatch = useDispatch();\n\n  const signalDeltaX = lodashGet(rowData, 'tableMetaInfo.signal.x.delta', null);\n  const signalDeltaY = lodashGet(rowData, 'tableMetaInfo.signal.y.delta', null);\n  const id = lodashGet(rowData, 'tableMetaInfo.signal.id', undefined);\n\n  const saveXHandler = useCallback(\n    (event) => {\n      const value = event.target.value;\n      dispatch({\n        type: CHANGE_ZONE_SIGNAL_VALUE,\n        payload: {\n          zoneID: rowData.id,\n          signal: { id, x: value },\n        },\n      });\n    },\n    [dispatch, id, rowData.id],\n  );\n  const saveYHandler = useCallback(\n    (event) => {\n      const value = event.target.value;\n      dispatch({\n        type: CHANGE_ZONE_SIGNAL_VALUE,\n        payload: {\n          zoneID: rowData.id,\n          signal: { id, y: value },\n        },\n      });\n    },\n    [dispatch, id, rowData.id],\n  );\n\n  return (\n    <Fragment>\n      <td {...onHoverSignalX}>\n        {signalDeltaX !== null ? (\n          <EditableColumn\n            value={signalDeltaX.toFixed(2)}\n            onSave={saveXHandler}\n            type=\"number\"\n            style={{ padding: '0.1rem 0.4rem' }}\n          />\n        ) : (\n          ''\n        )}\n      </td>\n      <td {...onHoverSignalY}>\n        {signalDeltaY !== null ? (\n          <EditableColumn\n            value={signalDeltaY.toFixed(2)}\n            onSave={saveYHandler}\n            type=\"number\"\n            style={{ padding: '0.1rem 0.4rem' }}\n          />\n        ) : (\n          ''\n        )}\n      </td>\n    </Fragment>\n  );\n}\n\nexport default SignalDeltaColumn;\n","import lodashGet from 'lodash/get';\nimport { FaMinusCircle } from 'react-icons/fa';\n\nimport { RowDataProps } from './ActionsColumn';\n\nexport interface ZoneAssignmentColumnProps {\n  rowData: RowDataProps;\n  axis: any;\n  onHover: () => void;\n  onClick: (a: any, b: any, c: any) => void;\n  onUnlink: (a: any, b: any, c: any) => void;\n  highlight: {\n    isActive: any;\n  };\n  assignment: {\n    activeAxis: any;\n    onHoverAxis: any;\n    isActive: boolean;\n    isOnHover: boolean;\n  };\n  showUnlinkButton: boolean;\n  setShowUnlinkButton: (element: boolean) => void;\n  rowSpanTags: any;\n}\n\nfunction ZoneAssignmentColumn({\n  rowData,\n  assignment,\n  highlight,\n  onHover,\n  onClick,\n  onUnlink,\n  axis,\n  showUnlinkButton,\n  setShowUnlinkButton,\n  rowSpanTags,\n}: ZoneAssignmentColumnProps) {\n  return (\n    <td\n      {...rowSpanTags}\n      {...onHover}\n      {...{ onClick: (e) => onClick(e, assignment, axis) }}\n    >\n      {lodashGet(rowData, `${axis}.nbAtoms`, 0) > 0 ? (\n        lodashGet(rowData, `${axis}.diaIDs`, 0).length > 0 ? (\n          <div\n            onMouseEnter={() => setShowUnlinkButton(true)}\n            onMouseLeave={() => setShowUnlinkButton(false)}\n          >\n            {rowData[axis].nbAtoms} {`(`}\n            <span\n              style={\n                (assignment.isActive && assignment.activeAxis === axis) ||\n                (assignment.isOnHover && assignment.onHoverAxis === axis) ||\n                highlight.isActive\n                  ? {\n                      color: 'red',\n                      fontWeight: 'bold',\n                    }\n                  : { color: 'black', fontWeight: 'normal' }\n              }\n            >\n              {lodashGet(rowData, `${axis}.diaIDs`, []).length}\n            </span>\n            {`)`}{' '}\n            <sup>\n              <button\n                type=\"button\"\n                style={{\n                  visibility: showUnlinkButton ? 'visible' : 'hidden',\n                  padding: 0,\n                  margin: 0,\n                }}\n                onClick={(e) => onUnlink(e, true, axis)}\n              >\n                <FaMinusCircle color=\"red\" />\n              </button>\n            </sup>\n          </div>\n        ) : assignment.isActive && assignment.activeAxis === axis ? (\n          <div>\n            {`${lodashGet(rowData, `${axis}.nbAtoms`, '')} (`}\n            <span\n              style={{\n                color: 'red',\n                fontWeight: 'bold',\n              }}\n            >\n              0\n            </span>\n            {')'}\n          </div>\n        ) : (\n          rowData[axis].nbAtoms\n        )\n      ) : assignment.isActive && assignment.activeAxis === axis ? (\n        <div>\n          {'0 ('}\n          <span style={{ color: 'red', fontWeight: 'bold' }}>0</span>\n          {')'}\n        </div>\n      ) : (\n        ''\n      )}\n    </td>\n  );\n}\n\nexport default ZoneAssignmentColumn;\n","import { Fragment } from 'react';\n\nimport { RowDataProps } from './ActionsColumn';\nimport ZoneAssignmentColumn from './ZoneAssignmentsColumn';\n\ninterface ZoneAssignmentsColumnsProps {\n  rowData: RowDataProps;\n  onHoverZoneX: any;\n  onHoverZoneY: any;\n  onClick: (a: any, b: any, c: any) => void;\n  onUnlink: (a: any, b: any, c: any) => void;\n  rowSpanTags: any;\n  showUnlinkButtonZoneX: boolean;\n  showUnlinkButtonZoneY: boolean;\n  setShowUnlinkButtonZoneX: (element: boolean) => void;\n  setShowUnlinkButtonZoneY: (element: boolean) => void;\n  assignmentZone: {\n    activeAxis: any;\n    onHoverAxis: any;\n    isActive: boolean;\n    isOnHover: boolean;\n  };\n  highlightZoneX: {\n    isActive: any;\n  };\n  highlightZoneY: {\n    isActive: any;\n  };\n}\n\nfunction ZoneAssignmentsColumns({\n  rowData,\n  assignmentZone,\n  onHoverZoneX,\n  onHoverZoneY,\n  showUnlinkButtonZoneX,\n  showUnlinkButtonZoneY,\n  setShowUnlinkButtonZoneX,\n  setShowUnlinkButtonZoneY,\n  rowSpanTags,\n  onClick,\n  onUnlink,\n  highlightZoneX,\n  highlightZoneY,\n}: ZoneAssignmentsColumnsProps) {\n  return (\n    <Fragment>\n      <ZoneAssignmentColumn\n        rowData={rowData}\n        assignment={assignmentZone}\n        highlight={highlightZoneX}\n        onHover={onHoverZoneX}\n        onClick={onClick}\n        onUnlink={onUnlink}\n        axis={'x'}\n        showUnlinkButton={showUnlinkButtonZoneX}\n        setShowUnlinkButton={setShowUnlinkButtonZoneX}\n        rowSpanTags={rowSpanTags}\n      />\n      <ZoneAssignmentColumn\n        rowData={rowData}\n        assignment={assignmentZone}\n        highlight={highlightZoneY}\n        onHover={onHoverZoneY}\n        onClick={onClick}\n        onUnlink={onUnlink}\n        axis={'y'}\n        showUnlinkButton={showUnlinkButtonZoneY}\n        setShowUnlinkButton={setShowUnlinkButtonZoneY}\n        rowSpanTags={rowSpanTags}\n      />\n    </Fragment>\n  );\n}\n\nexport default ZoneAssignmentsColumns;\n","/** @jsxImportSource @emotion/react */\n\nimport lodashGet from 'lodash/get';\nimport { CSSProperties, useMemo, useCallback, useState } from 'react';\n\nimport { buildID } from '../../../data/utilities/Concatenation';\nimport { useAssignment } from '../../assignment';\nimport { useHighlight } from '../../highlight';\n\nimport ActionsColumn, { RowDataProps } from './TableColumns/ActionsColumn';\nimport SignalAssignmentsColumns from './TableColumns/SignalAssignmentsColumns';\nimport SignalDeltaColumn from './TableColumns/SignalDeltaColumn';\nimport ZoneAssignmentsColumns from './TableColumns/ZoneAssignmentsColumns';\n\nconst HighlightedRowStyle: CSSProperties = { backgroundColor: '#ff6f0057' };\n\nconst ConstantlyHighlightedRowStyle = { backgroundColor: '#f5f5dc' };\n\ninterface ZonesTableRowProps {\n  rowData: RowDataProps;\n  onUnlink: (a: any, b: any, c: any, d: any) => void;\n  onContextMenu: (a: any, rowData: RowDataProps) => void;\n  rowIndex: number;\n}\n\nfunction ZonesTableRow({\n  rowData,\n  onUnlink,\n  onContextMenu,\n  rowIndex,\n}: ZonesTableRowProps) {\n  const assignmentZone = useAssignment(rowData.id);\n  const highlightZone = useHighlight([assignmentZone.id]);\n  const highlightZoneX = useHighlight(\n    [buildID(assignmentZone.id, 'X')].concat(assignmentZone.assigned.x || []),\n  );\n\n  const highlightZoneY = useHighlight(\n    [buildID(assignmentZone.id, 'Y')].concat(assignmentZone.assigned.y || []),\n  );\n\n  const assignmentSignal = useAssignment(rowData.tableMetaInfo.id);\n  const highlightSignalX = useHighlight(\n    [buildID(assignmentSignal.id, 'X')].concat(\n      assignmentSignal.assigned.x || [],\n      buildID(assignmentSignal.id, 'Crosshair'),\n    ),\n  );\n  const highlightSignalY = useHighlight(\n    [buildID(assignmentSignal.id, 'Y')].concat(\n      assignmentSignal.assigned.y || [],\n      buildID(assignmentSignal.id, 'Crosshair'),\n    ),\n  );\n\n  const [showUnlinkButtonZoneX, setShowUnlinkButtonZoneX] = useState(false);\n  const [showUnlinkButtonZoneY, setShowUnlinkButtonZoneY] = useState(false);\n  const [showUnlinkButtonSignalX, setShowUnlinkButtonSignalX] = useState(false);\n  const [showUnlinkButtonSignalY, setShowUnlinkButtonSignalY] = useState(false);\n\n  const rowSpanTags = useMemo(() => {\n    return {\n      rowSpan: rowData.tableMetaInfo.rowSpan,\n      style:\n        lodashGet(rowData, 'tableMetaInfo.hide', false) === true\n          ? { display: 'none' }\n          : null,\n    };\n  }, [rowData]);\n\n  const unlinkHandler = useCallback(\n    (e, isOnZoneLevel, axis) => {\n      // event handling here in case of unlink button clicked\n      if (e) {\n        e.stopPropagation();\n      }\n      onUnlink(rowData, isOnZoneLevel, rowData.tableMetaInfo.signalIndex, axis);\n      if (axis === 'x') {\n        if (isOnZoneLevel !== undefined) {\n          if (isOnZoneLevel) {\n            setShowUnlinkButtonZoneX(false);\n            assignmentZone.removeAll('x');\n          } else {\n            setShowUnlinkButtonSignalX(false);\n            assignmentSignal.removeAll('x');\n          }\n        } else {\n          setShowUnlinkButtonZoneX(false);\n          setShowUnlinkButtonSignalX(false);\n        }\n      } else if (axis === 'y') {\n        if (isOnZoneLevel !== undefined) {\n          if (isOnZoneLevel) {\n            setShowUnlinkButtonZoneY(false);\n            assignmentZone.removeAll('y');\n          } else {\n            setShowUnlinkButtonSignalY(false);\n            assignmentSignal.removeAll('y');\n          }\n        } else {\n          setShowUnlinkButtonZoneY(false);\n          setShowUnlinkButtonSignalY(false);\n        }\n      } else {\n        setShowUnlinkButtonZoneX(false);\n        assignmentZone.removeAll('x');\n        setShowUnlinkButtonSignalX(false);\n        assignmentSignal.removeAll('x');\n        setShowUnlinkButtonZoneY(false);\n        assignmentZone.removeAll('y');\n        setShowUnlinkButtonSignalY(false);\n        assignmentSignal.removeAll('y');\n      }\n    },\n    [assignmentSignal, assignmentZone, onUnlink, rowData],\n  );\n\n  const clickHandler = useCallback((e, assignment, axis) => {\n    e.stopPropagation();\n    assignment.onClick(axis);\n  }, []);\n\n  const onHoverZoneX = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentZone.onMouseEnter('x');\n        highlightZoneX.show();\n      },\n      onMouseLeave: () => {\n        assignmentZone.onMouseLeave('x');\n        highlightZoneX.hide();\n      },\n    };\n  }, [assignmentZone, highlightZoneX]);\n\n  const onHoverZoneY = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentZone.onMouseEnter('y');\n        highlightZoneY.show();\n      },\n      onMouseLeave: () => {\n        assignmentZone.onMouseLeave('y');\n        highlightZoneY.hide();\n      },\n    };\n  }, [assignmentZone, highlightZoneY]);\n\n  const onHoverSignalX = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentSignal.onMouseEnter('x');\n        highlightSignalX.show();\n      },\n      onMouseLeave: () => {\n        assignmentSignal.onMouseLeave('x');\n        highlightSignalX.hide();\n      },\n    };\n  }, [assignmentSignal, highlightSignalX]);\n\n  const onHoverSignalY = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentSignal.onMouseEnter('y');\n        highlightSignalY.show();\n      },\n      onMouseLeave: () => {\n        assignmentSignal.onMouseLeave('y');\n        highlightSignalY.hide();\n      },\n    };\n  }, [assignmentSignal, highlightSignalY]);\n\n  return (\n    <tr\n      onContextMenu={(e) => onContextMenu(e, rowData)}\n      style={\n        highlightZone.isActive || assignmentZone.isActive\n          ? (HighlightedRowStyle as any)\n          : lodashGet(\n              rowData,\n              'tableMetaInfo.isConstantlyHighlighted',\n              false,\n            ) === true\n          ? ConstantlyHighlightedRowStyle\n          : null\n      }\n      {...highlightZone.onHover}\n    >\n      <td {...(rowSpanTags as any)}>{rowIndex + 1}</td>\n      <SignalDeltaColumn\n        rowData={rowData}\n        onHoverSignalX={onHoverSignalX}\n        onHoverSignalY={onHoverSignalY}\n      />\n      <SignalAssignmentsColumns\n        rowData={rowData}\n        assignmentSignal={assignmentSignal}\n        onHoverSignalX={onHoverSignalX}\n        onHoverSignalY={onHoverSignalY}\n        showUnlinkButtonSignalX={showUnlinkButtonSignalX}\n        showUnlinkButtonSignalY={showUnlinkButtonSignalY}\n        setShowUnlinkButtonSignalX={(show) => setShowUnlinkButtonSignalX(show)}\n        setShowUnlinkButtonSignalY={(show) => setShowUnlinkButtonSignalY(show)}\n        onClick={clickHandler}\n        onUnlink={unlinkHandler}\n        highlightSignalX={highlightSignalX}\n        highlightSignalY={highlightSignalY}\n      />\n      <ZoneAssignmentsColumns\n        rowData={rowData}\n        assignmentZone={assignmentZone}\n        onHoverZoneX={onHoverZoneX}\n        onHoverZoneY={onHoverZoneY}\n        showUnlinkButtonZoneX={showUnlinkButtonZoneX}\n        showUnlinkButtonZoneY={showUnlinkButtonZoneY}\n        setShowUnlinkButtonZoneX={(show) => setShowUnlinkButtonZoneX(show)}\n        setShowUnlinkButtonZoneY={(show) => setShowUnlinkButtonZoneY(show)}\n        rowSpanTags={rowSpanTags}\n        onClick={clickHandler}\n        onUnlink={unlinkHandler}\n        highlightZoneX={highlightZoneX}\n        highlightZoneY={highlightZoneY}\n      />\n      <ActionsColumn rowData={rowData} rowSpanTags={rowSpanTags} />\n    </tr>\n  );\n}\n\nexport default ZonesTableRow;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useMemo, useCallback, useRef, ReactNode } from 'react';\nimport { FaLink } from 'react-icons/fa';\n\nimport checkModifierKeyActivated from '../../../data/utilities/checkModifierKeyActivated';\nimport ContextMenu from '../../elements/ContextMenu';\nimport useTableSortBy from '../../hooks/useTableSortBy';\n\nimport ZonesTableRow from './ZonesTableRow';\n\nconst tableStyle = css`\n  border-spacing: 0;\n  border: 1px solid #dedede;\n  width: 100%;\n  font-size: 12px;\n  .react-contextmenu-wrapper {\n    display: contents;\n  }\n  tr {\n    :last-child {\n      td {\n        border-bottom: 0;\n      }\n    }\n  }\n  thead tr:nth-of-type(1) th {\n    top: 0;\n  }\n  thead tr:nth-of-type(2) th {\n    top: 21px;\n  }\n  th {\n    position: sticky;\n    background-color: white;\n    z-index: 2;\n  }\n  th,\n  td {\n    white-space: nowrap;\n    text-align: center;\n    margin: 0;\n    padding: 0.1rem 0.4rem;\n    border-bottom: 1px solid #dedede;\n    border-right: 1px solid #dedede;\n\n    :last-child {\n      border-right: 0;\n    }\n    button {\n      background-color: transparent;\n      border: none;\n      padding: 0 5px;\n    }\n  }\n`;\n\ninterface ZonesTableProps {\n  tableData: Array<{\n    signals: Array<any>;\n    tableMetaInfo: any;\n    rowIndex: number;\n    signalIndex: number;\n    id: number;\n  }>;\n  onUnlink: (\n    zoneData: any,\n    isOnZoneLevel: any,\n    signalIndex: any,\n    axis: any,\n  ) => void;\n  context?: any;\n  nuclei: string[];\n  experiment: string;\n}\n\nfunction ZonesTable({\n  tableData,\n  onUnlink,\n  context,\n  nuclei,\n  experiment,\n}: ZonesTableProps) {\n  const contextRef = useRef<any>(null);\n\n  const contextMenuHandler = useCallback(\n    (e, rowData) => {\n      if (!checkModifierKeyActivated(e)) {\n        e.preventDefault();\n        contextRef.current.handleContextMenu(e, rowData);\n      }\n    },\n    [contextRef],\n  );\n\n  const data = useMemo(() => {\n    const _data: Array<any> = [];\n    tableData.forEach((zone, i) => {\n      if (zone.signals.length === 1) {\n        _data.push({\n          ...zone,\n          tableMetaInfo: {\n            ...zone.tableMetaInfo,\n            signal: zone.signals[0],\n            rowIndex: i,\n            signalIndex: 0,\n            id: zone.signals[0].id,\n            experiment,\n            nuclei,\n          },\n        });\n      } else if (zone.signals.length > 1) {\n        zone.signals.forEach((signal, j) => {\n          let hide = false;\n          let rowSpan: number | null = null;\n          if (j < zone.signals.length - 1) {\n            if (j === 0) {\n              rowSpan = zone.signals.length;\n            } else {\n              hide = true;\n            }\n          } else {\n            hide = true;\n          }\n          _data.push({\n            ...zone,\n            tableMetaInfo: {\n              ...zone.tableMetaInfo,\n              signal,\n              rowSpan,\n              hide,\n              rowIndex: i,\n              signalIndex: j,\n              id: signal.id,\n              experiment,\n            },\n          });\n        });\n      }\n    });\n\n    return _data;\n  }, [experiment, nuclei, tableData]);\n\n  const { items: sortedData, isSortedDesc, onSort } = useTableSortBy(data);\n\n  const rows = useMemo(\n    () =>\n      sortedData.map((rowData, index) => (\n        <ZonesTableRow\n          rowIndex={index}\n          key={`${rowData.tableMetaInfo.id}`}\n          rowData={rowData}\n          onUnlink={onUnlink}\n          onContextMenu={(e, rowData) => contextMenuHandler(e, rowData)}\n        />\n      )),\n    [contextMenuHandler, sortedData, onUnlink],\n  );\n\n  return (\n    <div>\n      <table css={tableStyle}>\n        <thead>\n          <tr>\n            <th rowSpan={2}>#</th>\n            <th colSpan={2}>δ (ppm)</th>\n            <th colSpan={2}>\n              <FaLink />\n            </th>\n            <th colSpan={2}>Σ</th>\n            <th rowSpan={2}>Kind</th>\n            <th rowSpan={2}>{''}</th>\n          </tr>\n          <tr>\n            <th id=\"tableMetaInfo.signal.x.delta\" {...onSort}>\n              <SurroundedText text=\"F2\">\n                {nuclei[0]}{' '}\n                {isSortedDesc('tableMetaInfo.signal.x.delta').content}\n              </SurroundedText>\n            </th>\n            <th id=\"tableMetaInfo.signal.y.delta\" {...onSort}>\n              <SurroundedText text=\"F1\">\n                {nuclei[1]}{' '}\n                {isSortedDesc('tableMetaInfo.signal.y.delta').content}\n              </SurroundedText>\n            </th>\n            <th>\n              <SurroundedText text=\"F2\">{nuclei[0]}</SurroundedText>\n            </th>\n            <th>\n              <SurroundedText text=\"F1\">{nuclei[1]}</SurroundedText>\n            </th>\n            <th>\n              <SurroundedText text=\"F2\">{nuclei[0]}</SurroundedText>\n            </th>\n            <th>\n              <SurroundedText text=\"F1\">{nuclei[1]}</SurroundedText>\n            </th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n      <ContextMenu ref={contextRef} context={context} />\n    </div>\n  );\n}\n\nfunction SurroundedText(props: { text: 'F1' | 'F2'; children: ReactNode }) {\n  return (\n    <>\n      <div\n        style={{\n          position: 'absolute',\n          fontSize: 8,\n          color: '#3539E6',\n        }}\n      >\n        {props.text}\n      </div>\n      <div style={{ marginLeft: 5 }}>{props.children}</div>\n    </>\n  );\n}\n\nexport default ZonesTable;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState, useMemo, useCallback, useRef, memo } from 'react';\nimport { FaUnlink } from 'react-icons/fa';\n\nimport { Datum2D } from '../../../data/types/data2d';\nimport { useAssignmentData } from '../../assignment';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport ToggleButton from '../../elements/ToggleButton';\nimport ToolTip from '../../elements/ToolTip/ToolTip';\nimport { useModal } from '../../elements/popup/Modal';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport { DELETE_2D_ZONE, UNLINK_ZONE } from '../../reducer/types/Types';\nimport Events from '../../utility/Events';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport NoTableData from '../extra/placeholder/NoTableData';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\nimport PreferencesHeader from '../header/PreferencesHeader';\n\nimport ZonesPreferences from './ZonesPreferences';\nimport ZonesTable from './ZonesTable';\n\nconst style = css`\n  .remove-assignments-btn {\n    border-radius: 5px;\n    margin-top: 3px;\n    margin-left: 2px;\n    border: none;\n    height: 16px;\n    width: 18px;\n    font-size: 12px;\n    padding: 0;\n    background-color: transparent;\n  }\n  .toggle {\n    width: 22px;\n    height: 22px;\n    margin-left: 2px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nfunction ZonesPanelInner({ zones, activeTab, xDomain, yDomain, experiment }) {\n  const [filterIsActive, setFilterIsActive] = useState(false);\n\n  const assignmentData = useAssignmentData();\n\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const [isFlipped, setFlipStatus] = useState(false);\n  const settingRef = useRef<any>();\n\n  const tableData = useMemo(() => {\n    const isInView = (xFrom, xTo, yFrom, yTo) => {\n      const factor = 10000;\n      xFrom = xFrom * factor;\n      xTo = xTo * factor;\n      yFrom = yFrom * factor;\n      yTo = yTo * factor;\n      return (\n        ((xTo >= xDomain[0] * factor && xFrom <= xDomain[1] * factor) ||\n          (xFrom <= xDomain[0] * factor && xTo >= xDomain[1] * factor)) &&\n        ((yTo >= yDomain[0] * factor && yFrom <= yDomain[1] * factor) ||\n          (yFrom <= yDomain[0] * factor && yTo >= yDomain[1] * factor))\n      );\n    };\n\n    const getFilteredZones = (zones) => {\n      return zones.filter((zone) => {\n        return isInView(zone.x.from, zone.x.to, zone.y.from, zone.y.to);\n      });\n    };\n    if (zones.values) {\n      const _zones = filterIsActive\n        ? getFilteredZones(zones.values)\n        : zones.values;\n\n      return _zones.map((zone) => {\n        return {\n          ...zone,\n          tableMetaInfo: {\n            isConstantlyHighlighted: isInView(\n              zone.x.from,\n              zone.x.to,\n              zone.y.from,\n              zone.y.to,\n            ),\n          },\n        };\n      });\n    }\n  }, [zones, filterIsActive, xDomain, yDomain]);\n\n  const handleOnFilter = useCallback(() => {\n    setFilterIsActive(!filterIsActive);\n  }, [filterIsActive]);\n\n  const unlinkZoneHandler = useCallback(\n    (\n      zoneData = null,\n      isOnZoneLevel = undefined,\n      signalIndex = -1,\n      axis = undefined,\n    ) => {\n      dispatch({\n        type: UNLINK_ZONE,\n        payload: {\n          zoneData,\n          assignmentData,\n          isOnZoneLevel,\n          signalIndex,\n          axis,\n        },\n      });\n    },\n    [assignmentData, dispatch],\n  );\n\n  const removeAssignments = useCallback(() => {\n    unlinkZoneHandler();\n  }, [unlinkZoneHandler]);\n\n  const handleOnRemoveAssignments = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All assignments will be removed. Are you sure?',\n      buttons: [{ text: 'Yes', handler: removeAssignments }, { text: 'No' }],\n    });\n  }, [removeAssignments, modal]);\n\n  const handleDeleteAll = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All zones will be deleted. Are You sure?',\n      buttons: [\n        {\n          text: 'Yes',\n          handler: () => {\n            dispatch({ type: DELETE_2D_ZONE, payload: { assignmentData } });\n          },\n        },\n        { text: 'No' },\n      ],\n    });\n  }, [assignmentData, dispatch, modal]);\n\n  const settingsPanelHandler = useCallback(() => {\n    setFlipStatus(!isFlipped);\n  }, [isFlipped]);\n\n  const saveSettingHandler = useCallback(() => {\n    settingRef.current.saveSetting();\n    setFlipStatus(false);\n  }, []);\n\n  const visibilityHandler = useCallback((key) => {\n    Events.emit('onZonesVisibilityChange', { key });\n  }, []);\n\n  return (\n    <>\n      <div\n        css={[\n          tablePanelStyle,\n          style,\n          isFlipped &&\n            css`\n              th {\n                position: relative;\n              }\n            `,\n        ]}\n      >\n        {!isFlipped && (\n          <DefaultPanelHeader\n            counter={zones.values ? zones.values.length : 0}\n            onDelete={handleDeleteAll}\n            deleteToolTip=\"Delete All Zones\"\n            onFilter={handleOnFilter}\n            filterToolTip={\n              filterIsActive ? 'Show all zones' : 'Hide zones out of view'\n            }\n            filterIsActive={filterIsActive}\n            counterFiltered={tableData?.length}\n            showSettingButton\n            onSettingClick={settingsPanelHandler}\n          >\n            <ToolTip title={`Remove all Assignments`} popupPlacement=\"right\">\n              <button\n                className=\"remove-assignments-btn\"\n                type=\"button\"\n                onClick={handleOnRemoveAssignments}\n                disabled={!zones.values || zones.values.length === 0}\n              >\n                <FaUnlink />\n              </button>\n            </ToolTip>\n            <ToggleButton\n              popupTitle=\"show/hide zones\"\n              popupPlacement=\"right\"\n              defaultValue\n              onClick={() => visibilityHandler('zones')}\n            >\n              <span style={{ fontSize: '12px', pointerEvents: 'none' }}>z</span>\n            </ToggleButton>\n            <ToggleButton\n              popupTitle=\"show/hide signals\"\n              popupPlacement=\"right\"\n              defaultValue\n              onClick={() => visibilityHandler('signals')}\n            >\n              <span style={{ fontSize: '12px', pointerEvents: 'none' }}>s</span>\n            </ToggleButton>\n            <ToggleButton\n              popupTitle=\"show/hide peaks\"\n              popupPlacement=\"right\"\n              defaultValue\n              onClick={() => visibilityHandler('peaks')}\n            >\n              <span style={{ fontSize: '12px', pointerEvents: 'none' }}>p</span>\n            </ToggleButton>\n          </DefaultPanelHeader>\n        )}\n        {isFlipped && (\n          <PreferencesHeader\n            onSave={saveSettingHandler}\n            onClose={settingsPanelHandler}\n          />\n        )}\n        <div className=\"inner-container\">\n          {!isFlipped ? (\n            <div className=\"table-container\">\n              {tableData && tableData.length > 0 ? (\n                <ZonesTable\n                  tableData={tableData}\n                  onUnlink={unlinkZoneHandler}\n                  nuclei={\n                    activeTab && activeTab.split(',').length === 2\n                      ? activeTab.split(',')\n                      : ['?', '?']\n                  }\n                  experiment={experiment}\n                />\n              ) : (\n                <NoTableData />\n              )}\n            </div>\n          ) : (\n            <ZonesPreferences ref={settingRef} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst MemoizedZonesPanel = memo(ZonesPanelInner);\n\nconst emptyData = { zones: {}, info: {} };\n\nexport default function ZonesPanel() {\n  const { displayerKey, xDomain, yDomain, activeTab } = useChartData();\n  const { zones, info } = useSpectrum(emptyData) as Datum2D;\n\n  return (\n    <MemoizedZonesPanel\n      {...{\n        xDomain,\n        yDomain,\n        activeTab,\n        displayerKey,\n        zones,\n        experiment: info.experiment,\n      }}\n    />\n  );\n}\n","import { protonImpurities, carbonImpurities, Jcoupling } from 'nmr-processing';\nimport { DatabaseNMREntry } from 'nmr-processing/lib/databases/DatabaseNMREntry';\nimport { filter } from 'smart-array-filter';\n\nimport generateID from '../utilities/generateID';\n\nexport interface DataBaseSignal {\n  assignment: string;\n  delta: number;\n}\n\nexport interface DataBaseRange {\n  from: number;\n  to: number;\n  signals: Array<DataBaseSignal>;\n}\n\nexport interface DataBase {\n  data: Record<\n    string,\n    {\n      description: string;\n      value: Array<DatabaseNMREntry>;\n    }\n  >;\n}\n\nexport const database: DataBase = {\n  data: {\n    solvent: {\n      description: 'Solvent database',\n      value: prepareDataBase([...protonImpurities, ...carbonImpurities]),\n    },\n  },\n};\n\nexport interface InitiateDatabaseResult {\n  data: DatabaseNMREntry[];\n  getSolvents: () => string[];\n  search: (keywords?: string[]) => DatabaseNMREntry[];\n}\n\nexport function initiateDatabase(\n  databaseKey: string,\n  nucleus: string,\n): InitiateDatabaseResult {\n  const databaseData = database.data[databaseKey]\n    ? database.data[databaseKey].value\n    : [];\n\n  const data = databaseData.filter((datum) => datum.nucleus === nucleus);\n\n  const getSolvents = () => prepareGetSolvents(data);\n  const search = (keywords: string | string[] = []) =>\n    filter(data, { keywords });\n\n  return { data, getSolvents, search };\n}\n\nfunction prepareGetSolvents(data) {\n  const result: string[] = [];\n  const map = new Map();\n  for (const item of data) {\n    if (!map.has(item.solvent)) {\n      map.set(item.solvent, true);\n      result.push(item.solvent);\n    }\n  }\n  return result;\n}\n\nexport function getDatabasesNames() {\n  return Object.keys(database.data).map((key) => {\n    const { description } = database.data[key];\n    return { id: key, name: description };\n  });\n}\n\nfunction prepareDataBase(array: Array<DatabaseNMREntry>) {\n  return array.map((item) => {\n    item.ranges = item.ranges.map((range) => ({\n      id: generateID(),\n      ...range,\n    }));\n    return item;\n  }, []);\n}\n\nexport type PrepareDataResult = Partial<\n  DataBaseRange | DataBaseSignal | Jcoupling\n>;\n\nexport function prepareData(\n  data: Array<DatabaseNMREntry>,\n): PrepareDataResult[] {\n  const result: PrepareDataResult[] = [];\n  let index = 0;\n  for (const item of data) {\n    let ids: string[] = [];\n    const { ranges, ...restItemKeys } = item;\n\n    for (const range of ranges) {\n      ids.push(range.id || generateID());\n      const { signals = [], ...restRangKeys } = range;\n      for (const signal of signals) {\n        const { js = [], ...restSignalKeys } = signal;\n        const jsResult = mapJs(js);\n\n        const data = {\n          ...restItemKeys,\n          ...restRangKeys,\n          ...restSignalKeys,\n          ...jsResult,\n          index,\n          id: ids,\n          ranges,\n        };\n        result.push(data);\n      }\n    }\n    index++;\n  }\n  return result;\n}\n\nfunction mapJs(js: Jcoupling[]) {\n  if (js && js.length > 0) {\n    const { coupling, multiplicity } = js.reduce<any>(\n      (acc, { coupling, multiplicity }) => {\n        acc.coupling.push(coupling.toFixed(1));\n        acc.multiplicity += multiplicity;\n        return acc;\n      },\n      { coupling: [], multiplicity: '' },\n    );\n    return { multiplicity, coupling: coupling.join(',') };\n  } else {\n    return { multiplicity: 's', coupling: '' };\n  }\n}\n","import {\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  CSSProperties,\n  forwardRef,\n} from 'react';\n\nimport { usePreferences } from '../../context/PreferencesContext';\nimport FormikColumnFormatField from '../../elements/formik/FormikColumnFormatField';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { getValue as getValueByKeyPath } from '../../utility/LocalStorage';\nimport { databaseDefaultValues } from '../extra/preferences/defaultValues';\n\nconst styles: Record<\n  | 'container'\n  | 'groupContainer'\n  | 'header'\n  | 'inputContainer'\n  | 'input'\n  | 'inputLabel',\n  CSSProperties\n> = {\n  container: {\n    padding: 10,\n    backgroundColor: '#f1f1f1',\n    height: '100%',\n    overflowY: 'auto',\n  },\n  groupContainer: {\n    padding: '5px',\n    borderRadius: '5px',\n    margin: '10px 0px',\n    backgroundColor: 'white',\n  },\n\n  header: {\n    borderBottom: '1px solid #e8e8e8',\n    paddingBottom: '5px',\n    fontWeight: 'bold',\n    color: '#4a4a4a',\n  },\n  inputContainer: {\n    flex: 4,\n    borderRadius: '5px',\n  },\n  inputLabel: {\n    flex: 2,\n    fontSize: '11px',\n    fontWeight: 'bold',\n    color: '#232323',\n  },\n  input: {\n    width: '100px',\n  },\n};\n\nfunction DatabasePreferences(props, ref) {\n  const preferences = usePreferences();\n  const alert = useAlert();\n\n  const formRef = useRef<any>();\n\n  const updateValues = useCallback(() => {\n    const databasePreferences = getValueByKeyPath(\n      preferences.current,\n      `formatting.panels.database`,\n    );\n\n    formRef.current.setValues(\n      databasePreferences ? databasePreferences : databaseDefaultValues,\n    );\n  }, [preferences]);\n\n  useEffect(() => {\n    updateValues();\n  }, [updateValues]);\n\n  const saveHandler = useCallback(\n    (values) => {\n      preferences.dispatch({\n        type: 'SET_PANELS_PREFERENCES',\n        payload: { key: 'database', value: values },\n      });\n      alert.success('database preferences saved successfully');\n    },\n    [alert, preferences],\n  );\n\n  useImperativeHandle(ref, () => ({\n    saveSetting: () => {\n      formRef.current.submitForm();\n    },\n  }));\n\n  return (\n    <div style={styles.container}>\n      <FormikForm onSubmit={saveHandler} ref={formRef}>\n        <div style={styles.groupContainer}>\n          <FormikColumnFormatField\n            label=\"Smiles\"\n            checkControllerName=\"showSmiles\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"Solvent\"\n            checkControllerName=\"showSolvent\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"Names\"\n            checkControllerName=\"showNames\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"Range\"\n            checkControllerName=\"showRange\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"δ (ppm)\"\n            checkControllerName=\"showDelta\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"Assignment\"\n            checkControllerName=\"showAssignment\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"J (Hz)\"\n            checkControllerName=\"showCoupling\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"Multiplicity\"\n            checkControllerName=\"showMultiplicity\"\n            hideFormat\n          />\n        </div>\n      </FormikForm>\n    </div>\n  );\n}\n\nexport default forwardRef(DatabasePreferences);\n","/** @jsxImportSource @emotion/react */\nimport { useMemo, memo, CSSProperties } from 'react';\nimport { FaPlus } from 'react-icons/fa';\nimport { SmilesSvgRenderer } from 'react-ocl/full';\n\nimport { usePreferences } from '../../context/PreferencesContext';\nimport ReactTable from '../../elements/ReactTable/ReactTable';\nimport addCustomColumn, {\n  CustomColumn,\n} from '../../elements/ReactTable/utility/addCustomColumn';\nimport { HighlightedSource } from '../../highlight';\nimport { getValue } from '../../utility/LocalStorage';\nimport NoTableData from '../extra/placeholder/NoTableData';\nimport { databaseDefaultValues } from '../extra/preferences/defaultValues';\n\ninterface DatabaseTableProps {\n  data: any;\n  onAdd: (row: any) => void;\n}\n\nconst overFlowStyle: CSSProperties = {\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n};\n\nconst COLUMNS: (CustomColumn & { showWhen: string })[] = [\n  {\n    showWhen: 'showNames',\n    index: 1,\n    Header: 'names',\n    accessor: (row) => (row.names ? row.names.join(',') : ''),\n    enableRowSpan: true,\n    style: {\n      width: '100px',\n      minWidth: '100px',\n      maxWidth: '100px',\n      ...overFlowStyle,\n    },\n  },\n  {\n    showWhen: 'showRange',\n    index: 2,\n    Header: 'From - To',\n    accessor: (row) => `${row.from.toFixed(2)} - ${row.to.toFixed(2)}`,\n    enableRowSpan: true,\n  },\n  {\n    showWhen: 'showDelta',\n    index: 3,\n    Header: 'δ (ppm)',\n    accessor: 'delta',\n  },\n  {\n    showWhen: 'showAssignment',\n    index: 4,\n    Header: 'Assignment',\n    accessor: 'assignment',\n  },\n  {\n    showWhen: 'showMultiplicity',\n    index: 5,\n    Header: 'Multi.',\n    accessor: 'multiplicity',\n  },\n  {\n    showWhen: 'showCoupling',\n    index: 6,\n    Header: 'J (Hz)',\n    accessor: 'coupling',\n    style: {\n      width: '60px',\n      minWidth: '60px',\n      ...overFlowStyle,\n    },\n  },\n  {\n    showWhen: 'showSolvent',\n    index: 7,\n    Header: 'Solvent',\n    accessor: 'solvent',\n    style: {\n      width: '80px',\n      minWidth: '80px',\n      ...overFlowStyle,\n    },\n  },\n  {\n    showWhen: 'showSmiles',\n    index: 8,\n    Header: 'Smiles',\n    accessor: 'index',\n    enableRowSpan: true,\n    Cell: ({ row }) => (\n      <div\n        className=\"smiles-container\"\n        style={{ width: '100px', display: 'block', overflow: 'hidden' }}\n      >\n        {row?.original.smiles && (\n          <SmilesSvgRenderer\n            height={60}\n            width={60}\n            smiles={row.original.smiles}\n          />\n        )}\n      </div>\n    ),\n  },\n];\n\nfunction DatabaseTable({ data, onAdd }: DatabaseTableProps) {\n  const preferences = usePreferences();\n\n  const initialColumns = useMemo(\n    () => [\n      {\n        index: 10,\n        Header: '',\n        width: '1%',\n        maxWidth: '24px',\n        minWidth: '24px',\n        id: 'add-button',\n        accessor: 'index',\n        enableRowSpan: true,\n        Cell: ({ row }) => (\n          <button\n            type=\"button\"\n            className=\"add-button\"\n            onClick={() => onAdd(row)}\n          >\n            <FaPlus />\n          </button>\n        ),\n      },\n    ],\n    [onAdd],\n  );\n\n  const tableColumns = useMemo(() => {\n    const databasePreferences = getValue(\n      preferences.current,\n      'formatting.panels.database',\n      databaseDefaultValues,\n    );\n\n    let columns = [...initialColumns];\n    for (const col of COLUMNS) {\n      const { showWhen, ...colParams } = col;\n      if (databasePreferences[showWhen]) {\n        addCustomColumn(columns, colParams);\n      }\n    }\n\n    return columns.sort((object1, object2) => object1.index - object2.index);\n  }, [initialColumns, preferences]);\n\n  return data && data.length > 0 ? (\n    <ReactTable\n      data={data}\n      columns={tableColumns}\n      highlightedSource={HighlightedSource.DATABASE}\n      groupKey=\"index\"\n      approxItemHeight={30}\n      enableVirtualScroll\n    />\n  ) : (\n    <NoTableData />\n  );\n}\n\nexport default memo(DatabaseTable);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useAccordionContext } from 'analysis-ui-components';\nimport { DatabaseNMREntry } from 'nmr-processing/lib/databases/DatabaseNMREntry';\nimport { useCallback, useState, useRef, memo, useEffect, useMemo } from 'react';\nimport { FaICursor } from 'react-icons/fa';\nimport { IoSearchOutline } from 'react-icons/io5';\n\nimport {\n  initiateDatabase,\n  getDatabasesNames,\n  InitiateDatabaseResult,\n  prepareData,\n} from '../../../data/data1d/database';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport Input from '../../elements/Input';\nimport Select, { SelectEntry } from '../../elements/Select';\nimport ToggleButton from '../../elements/ToggleButton';\nimport useToolsFunctions from '../../hooks/useToolsFunctions';\nimport { RESURRECTING_SPECTRUM_FROM_RANGES } from '../../reducer/types/Types';\nimport { options } from '../../toolbar/ToolTypes';\nimport Events from '../../utility/Events';\nimport { useFormatNumberByNucleus } from '../../utility/FormatNumber';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\nimport PreferencesHeader from '../header/PreferencesHeader';\n\nimport DatabasePreferences from './DatabasePreferences';\nimport DatabaseTable from './DatabaseTable';\n\nconst style = css`\n  .header {\n    height: 30px;\n    padding: 2px 0px 2px 5px;\n  }\n  .input-container {\n    width: 100%;\n  }\n  .search-input {\n    width: 100% !important;\n    border-radius: 5px;\n    border: 0.55px solid gray;\n    padding: 0 5px;\n    outline: none;\n  }\n  .smiles-container svg {\n    display: block;\n    margin: 0 auto;\n  }\n`;\n\nexport interface DatabaseInnerProps {\n  nucleus: string;\n  selectedTool: string;\n}\n\ninterface ResultEntry {\n  data: DatabaseNMREntry[];\n  databases: SelectEntry[];\n  solvents: SelectEntry[];\n}\n\nconst emptyKeywords = {\n  solvent: '',\n  searchKeywords: '',\n};\n\nfunction DatabasePanelInner({ nucleus, selectedTool }: DatabaseInnerProps) {\n  const dispatch = useDispatch();\n  const { handleChangeOption } = useToolsFunctions();\n  const format = useFormatNumberByNucleus(nucleus);\n\n  const [isFlipped, setFlipStatus] = useState(false);\n  const settingRef = useRef<any>();\n  const [keywords, setKeywords] = useState<{\n    solvent: string;\n    searchKeywords: string;\n  }>(emptyKeywords);\n  const databaseInstance = useRef<InitiateDatabaseResult | null>(null);\n  const [result, setResult] = useState<ResultEntry>({\n    data: [],\n    databases: [],\n    solvents: [],\n  });\n  const { item } = useAccordionContext('Database');\n\n  const settingsPanelHandler = useCallback(() => {\n    setFlipStatus(!isFlipped);\n  }, [isFlipped]);\n\n  const saveSettingHandler = useCallback(() => {\n    settingRef.current.saveSetting();\n    setFlipStatus(false);\n  }, []);\n\n  const handleSearch = useCallback((input) => {\n    if (typeof input === 'string' || input === -1) {\n      const solvent = String(input);\n      setKeywords((prevState) => ({ ...prevState, solvent }));\n    } else {\n      setKeywords((prevState) => ({\n        ...prevState,\n        searchKeywords: input.target.value,\n      }));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (item?.isOpen) {\n      setTimeout(() => {\n        const databases = mapDatabasesToSelect(getDatabasesNames());\n        databaseInstance.current = initiateDatabase(databases[0].key, nucleus);\n        const data = databaseInstance.current.data;\n        const solvents = mapSolventsToSelect(\n          databaseInstance.current.getSolvents(),\n        );\n\n        setResult({ data, databases, solvents });\n      });\n    }\n  }, [item?.isOpen, nucleus]);\n\n  useEffect(() => {\n    const { solvent, searchKeywords } = keywords;\n    setTimeout(() => {\n      if (databaseInstance.current) {\n        if (!solvent && !searchKeywords) {\n          const data = databaseInstance.current.data;\n          const solvents = mapSolventsToSelect(\n            databaseInstance.current.getSolvents(),\n          );\n          setResult((prevResult) => ({ ...prevResult, data, solvents }));\n        } else {\n          const values = [...searchKeywords.split(',')];\n          if (solvent !== '-1') {\n            values.unshift(`solvent:${solvent}`);\n          }\n\n          const data = databaseInstance.current.search(values);\n          setResult((prevResult) => ({ ...prevResult, data }));\n        }\n      }\n    });\n  }, [keywords]);\n\n  useEffect(() => {\n    function handle(event) {\n      if (selectedTool === options.databaseRangesSelection.id) {\n        setKeywords((prevState) => {\n          const oldKeywords = prevState.searchKeywords\n            ? prevState.searchKeywords.split(',')\n            : [];\n          const [from, to] = event.range;\n          const searchKeywords = [\n            ...oldKeywords,\n            `delta:${format(from)}..${format(to)}`,\n          ].join(',');\n          return { ...prevState, searchKeywords };\n        });\n      }\n    }\n\n    Events.on('brushEnd', handle);\n\n    return () => {\n      Events.off('brushEnd', handle);\n    };\n  }, [format, selectedTool]);\n\n  const handleChangeDatabase = useCallback(\n    (databaseKey) => {\n      databaseInstance.current = initiateDatabase(databaseKey, nucleus);\n      setKeywords(emptyKeywords);\n    },\n    [nucleus],\n  );\n\n  const tableData = useMemo(() => {\n    return prepareData(result.data);\n  }, [result.data]);\n\n  const resurrectHandler = useCallback(\n    (row) => {\n      const { index } = row.original;\n      const { ranges, solvent, names = [] } = result.data[index];\n      dispatch({\n        type: RESURRECTING_SPECTRUM_FROM_RANGES,\n        payload: { ranges, info: { solvent, nucleus, name: names[0] } },\n      });\n    },\n    [dispatch, nucleus, result.data],\n  );\n\n  const clearHandler = useCallback(() => {\n    setKeywords((prevState) => ({ ...prevState, searchKeywords: '' }));\n  }, []);\n\n  const enableFilterHandler = useCallback(\n    (flag) => {\n      const tool = !flag ? options.zoom.id : options.databaseRangesSelection.id;\n      handleChangeOption(tool);\n    },\n    [handleChangeOption],\n  );\n\n  return (\n    <div\n      css={[\n        tablePanelStyle,\n        style,\n        isFlipped &&\n          css`\n            .table-container {\n              table,\n              th {\n                position: relative !important;\n              }\n            }\n          `,\n      ]}\n    >\n      {!isFlipped && (\n        <DefaultPanelHeader\n          showSettingButton\n          onSettingClick={settingsPanelHandler}\n          canDelete={false}\n          className=\"header\"\n        >\n          <ToggleButton\n            key={`${selectedTool}`}\n            defaultValue={selectedTool === options.databaseRangesSelection.id}\n            popupTitle=\"Filter by select ranges\"\n            popupPlacement=\"right\"\n            onClick={enableFilterHandler}\n          >\n            <FaICursor\n              style={{\n                pointerEvents: 'none',\n                fontSize: '12px',\n                transform: 'rotate(90deg)',\n              }}\n            />\n          </ToggleButton>\n          <Select\n            style={{ flex: 2 }}\n            data={result.databases}\n            onChange={handleChangeDatabase}\n          />\n          <Select\n            style={{ flex: 1 }}\n            data={result.solvents}\n            onChange={handleSearch}\n          />\n          <Input\n            value={keywords.searchKeywords}\n            renderIcon={() => <IoSearchOutline />}\n            style={{ inputWrapper: { flex: 3 } }}\n            className=\"search-input\"\n            type=\"text\"\n            debounceTime={250}\n            placeholder=\"Search for parameter...\"\n            onChange={handleSearch}\n            onClear={clearHandler}\n            canClear\n          />\n        </DefaultPanelHeader>\n      )}\n      {isFlipped && (\n        <PreferencesHeader\n          onSave={saveSettingHandler}\n          onClose={settingsPanelHandler}\n        />\n      )}\n      <div className=\"inner-container\">\n        {!isFlipped ? (\n          <DatabaseTable data={tableData} onAdd={resurrectHandler} />\n        ) : (\n          <DatabasePreferences ref={settingRef} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst MemoizedDatabasePanel = memo(DatabasePanelInner);\n\nexport default function PeaksPanel() {\n  const {\n    activeTab,\n    toolOptions: { selectedTool },\n  } = useChartData();\n  if (!activeTab) return <div />;\n  return (\n    <MemoizedDatabasePanel nucleus={activeTab} selectedTool={selectedTool} />\n  );\n}\n\nfunction mapSolventsToSelect(solvents: string[]) {\n  const result = solvents.map((key) => {\n    return {\n      key,\n      label: key,\n      value: key,\n    };\n  }, []);\n  result.unshift({ key: '-1', label: 'All', value: '-1' });\n  return result;\n}\n\nfunction mapDatabasesToSelect(databases) {\n  return databases.map(({ id, name }) => ({\n    key: id,\n    value: id,\n    label: name,\n  }));\n}\n","import { CSSProperties, memo, ReactNode } from 'react';\n\nconst styles: CSSProperties = {\n  width: '100%',\n  height: '100%',\n  padding: '0px',\n  display: 'flex',\n  flexDirection: 'column',\n};\n\ninterface TableProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  testID?: string;\n}\n\nfunction Table({ children, className, style, testID }: TableProps) {\n  return (\n    <div\n      className={className}\n      style={{ ...styles, ...style }}\n      data-test-id={testID}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default memo(Table);\n","import {\n  useMemo,\n  memo,\n  Children,\n  cloneElement,\n  ReactNode,\n  CSSProperties,\n} from 'react';\n\nconst styles: CSSProperties = {\n  width: '100%',\n  overflowY: 'auto',\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '5px 0px',\n  color: 'gray',\n};\n\ninterface TableBodyProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n}\n\nfunction TableBody({ children, className, style }: TableBodyProps) {\n  const mappedChildren = useMemo(() => {\n    return Children.map(children, (child: any) =>\n      cloneElement(child, {\n        style: { borderBottom: '0.55px solid #d8d8d8', ...child.props.style },\n      }),\n    );\n  }, [children]);\n\n  return (\n    <div className={className} style={{ ...styles, ...style }}>\n      {mappedChildren}\n    </div>\n  );\n}\n\nexport default memo(TableBody);\n","import { CSSProperties, memo, ReactNode } from 'react';\n\nconst styles = {\n  width: '100%',\n  display: 'flex',\n  alignItems: 'flex-start',\n};\n\nfunction getVAlign(align) {\n  if (align.toLowerCase() === 'top') {\n    return 'flex-start';\n  } else if (align.toLowerCase() === 'bottom') {\n    return 'flex-end';\n  }\n  return 'center';\n}\n\ninterface TableHeaderProps {\n  className?: string;\n  style?: CSSProperties;\n  children: ReactNode;\n  align?: CSSProperties['textAlign'];\n  vAlign?: 'center' | 'top' | 'bottom';\n  size?: number;\n  onClick?: () => void;\n}\n\nfunction TableHeader({\n  children,\n  className,\n  style,\n  align = 'center',\n  vAlign = 'center',\n  size = 1,\n  onClick = () => null,\n}: TableHeaderProps) {\n  return (\n    <div\n      className={className}\n      style={{\n        ...styles,\n        alignItems: getVAlign(vAlign),\n        textAlign: align,\n        flex: size,\n        ...style,\n      }}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default memo(TableHeader);\n","import { CSSProperties, memo, ReactNode } from 'react';\n\nconst styles: CSSProperties = {\n  width: '100%',\n  display: 'flex',\n  padding: '0px 5px',\n  color: '#424242',\n  backgroundColor: '#d8d8d8',\n  borderBottom: '0.55px solid #d8d8d8',\n  fontSize: 11,\n  fontWeight: 'bold',\n};\n\ninterface TableHeadProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n}\n\nfunction TableHead({ children, className, style }: TableHeadProps) {\n  return (\n    <div className={className} style={{ ...styles, ...style }}>\n      {children}\n    </div>\n  );\n}\n\nexport default memo(TableHead);\n","import { CSSProperties, memo, ReactNode } from 'react';\n\nconst styles = {\n  width: '100%',\n  display: 'flex',\n  padding: '5px 0px',\n};\n\ninterface TableHeaderProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  onClick?: () => void;\n}\n\nfunction TableHeader({\n  children,\n  className,\n  style,\n  onClick = () => null,\n}: TableHeaderProps) {\n  return (\n    <div\n      className={className}\n      style={{ ...styles, ...style }}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default memo(TableHeader);\n","import { useMemo, useCallback, memo, useRef } from 'react';\nimport { FaRegTrashAlt } from 'react-icons/fa';\nimport { ObjectInspector } from 'react-inspector';\n\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport CheckBox from '../../elements/CheckBox';\nimport TableCell from '../../elements/Table/TableCell';\nimport TableRow from '../../elements/Table/TableRow';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { useModal } from '../../elements/popup/Modal';\nimport useSpectraByActiveNucleus from '../../hooks/useSpectraPerNucleus';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport {\n  ENABLE_FILTER,\n  DELETE_FILTER,\n  SET_FILTER_SNAPSHOT,\n  DELETE_SPECTRA_FILTER,\n} from '../../reducer/types/Types';\n\nimport { FiltersProps } from './FilterPanel';\n\ninterface FiltersTableInnerProps {\n  filters: Array<FiltersProps>;\n  spectraCounter: number;\n  selectedTool: string | null;\n  activeFilterID: string | null;\n}\n\nfunction FiltersTableInner({\n  filters,\n  spectraCounter,\n  selectedTool,\n  activeFilterID,\n}: FiltersTableInnerProps) {\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const alert = useAlert();\n  const selectedFilterRef = useRef<{ index: string | number | null }>({\n    index: null,\n  });\n\n  const handelFilterCheck = useCallback(\n    (id, checked) => {\n      void (async () => {\n        const hideLoading = await alert.showLoading(\n          `${checked ? 'Enable' : 'Disable'} filter in progress`,\n        );\n        setTimeout(() => {\n          dispatch({ type: ENABLE_FILTER, id, checked });\n          hideLoading();\n        }, 0);\n      })();\n    },\n    [alert, dispatch],\n  );\n  const handelDeleteFilter = useCallback(\n    ({ id, name }) => {\n      const buttons = [\n        {\n          text: 'Yes',\n          handler: async () => {\n            const hideLoading = await alert.showLoading(\n              'Delete filter process in progress',\n            );\n            dispatch({ type: DELETE_FILTER, payload: { id } });\n            hideLoading();\n          },\n        },\n        { text: 'No' },\n      ];\n\n      if (spectraCounter > 1) {\n        buttons.unshift({\n          text: 'Yes, for all spectra',\n          handler: async () => {\n            const hideLoading = await alert.showLoading(\n              'Delete all spectra filter process in progress',\n            );\n            dispatch({\n              type: DELETE_SPECTRA_FILTER,\n              payload: { filterType: name },\n            });\n            hideLoading();\n          },\n        });\n      }\n\n      modal.showConfirmDialog({\n        message: 'Are you sure you want to delete the spectrum?',\n        buttons,\n      });\n    },\n    [alert, dispatch, modal, spectraCounter],\n  );\n  const filterSnapShotHandler = useCallback(\n    (newID) => {\n      void (async () => {\n        const hideLoading = await alert.showLoading(\n          'Filter snapshot process in progress',\n        );\n        setTimeout(() => {\n          dispatch({ type: SET_FILTER_SNAPSHOT, id: newID });\n          hideLoading();\n        }, 0);\n      })();\n    },\n    [alert, dispatch],\n  );\n\n  const getStyle = useCallback(\n    (filter, index) => {\n      const { id, name } = filter;\n\n      if (activeFilterID && activeFilterID === id) {\n        selectedFilterRef.current.index = index;\n      } else if (!activeFilterID) {\n        selectedFilterRef.current.index = null;\n      }\n\n      const classes: string[] = ['filter-row'];\n      if (activeFilterID === id) {\n        classes.push('filter-active');\n      } else if (selectedTool === name) {\n        classes.push('filter-current');\n      } else if (\n        selectedFilterRef.current.index != null &&\n        index > selectedFilterRef.current.index\n      ) {\n        classes.push('filter-deactive');\n      }\n\n      return classes.join(' ');\n    },\n    [activeFilterID, selectedTool],\n  );\n\n  const filtersTableRow = useMemo(() => {\n    return filters?.map((d, index) => {\n      return (\n        <TableRow key={d.id} className={getStyle(d, index)}>\n          <TableCell\n            align=\"center\"\n            size={2}\n            onClick={() => filterSnapShotHandler(d.id)}\n          >\n            {d.label}\n          </TableCell>\n          <TableCell align=\"left\" size={3}>\n            <div onClick={(e) => e.stopPropagation()}>\n              <ObjectInspector data={d.error ? d.error : d.value} />\n            </div>\n          </TableCell>\n          <TableCell align=\"center\" vAlign=\"center\" size={1}>\n            <CheckBox\n              checked={d.flag}\n              onChange={(event) =>\n                handelFilterCheck(d.id, event.target.checked)\n              }\n            />\n            {d.isDeleteAllow && (\n              <button\n                className=\"btn\"\n                type=\"button\"\n                onClick={() => handelDeleteFilter(d)}\n              >\n                <FaRegTrashAlt />\n              </button>\n            )}\n          </TableCell>\n        </TableRow>\n      );\n    });\n  }, [\n    filterSnapShotHandler,\n    filters,\n    getStyle,\n    handelDeleteFilter,\n    handelFilterCheck,\n  ]);\n\n  return <>{filtersTableRow}</>;\n}\n\nconst emptyData = { filters: [] };\n\nconst MemoizedFiltersTable = memo(FiltersTableInner);\n\nexport default function FilterTable() {\n  const {\n    toolOptions: {\n      selectedTool,\n      data: { activeFilterID },\n    },\n  } = useChartData();\n  const { filters } = useSpectrum(emptyData);\n  const spectraCounter = useSpectraByActiveNucleus().length;\n\n  return (\n    <MemoizedFiltersTable\n      {...{ selectedTool, filters, spectraCounter, activeFilterID }}\n    />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useMemo, memo } from 'react';\n\nimport { Filter } from '../../../data/FiltersManager';\nimport Table from '../../elements/Table/Table';\nimport TableBody from '../../elements/Table/TableBody';\nimport TableCell from '../../elements/Table/TableCell';\nimport TableHead from '../../elements/Table/TableHead';\nimport TableRow from '../../elements/Table/TableRow';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport NoTableData from '../extra/placeholder/NoTableData';\n\nimport FiltersTable from './FiltersTable';\n\nconst styles = css`\n  .btn {\n    background-color: transparent;\n    border: none;\n    height: 25;\n    width: 25;\n    padding: 5px;\n  }\n  .filter-row {\n    padding: 5px !important;\n  }\n  .filter-active {\n    background-color: #f7f7f7;\n    div,\n    span,\n    .btn {\n      color: black !important;\n    }\n\n    li {\n      background-color: transparent !important;\n    }\n  }\n  .filter-current {\n    background-color: #707070;\n    div,\n    span,\n    .btn {\n      color: white !important;\n    }\n\n    li {\n      background-color: transparent !important;\n    }\n  }\n\n  .filter-deactive {\n    opacity: 0.3;\n  }\n`;\n\nexport interface FiltersProps extends Filter {\n  error?: any;\n}\n\ninterface FiltersPanelInnerProps {\n  filters: Array<FiltersProps>;\n}\n\nfunction FilterPanelInner({ filters }: FiltersPanelInnerProps) {\n  const filtersTable = useMemo(() => {\n    return filters ? (\n      <Table testID=\"filters-table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\" size={1}>\n              Label\n            </TableCell>\n            <TableCell align=\"center\" size={2}>\n              Properties\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody css={styles}>\n          <FiltersTable />\n        </TableBody>\n      </Table>\n    ) : (\n      <NoTableData />\n    );\n  }, [filters]);\n\n  return filtersTable;\n}\n\nconst emptyData = { filters: [] };\n\nconst MemoizedFilterPanel = memo(FilterPanelInner);\n\nexport default function FilterPanel() {\n  const { filters } = useSpectrum(emptyData);\n\n  return <MemoizedFilterPanel filters={filters} />;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useRef } from 'react';\nimport * as Yup from 'yup';\n\nimport {\n  PredictionOptions as PredictionOptionsInterface,\n  defaultPredictionOptions,\n  FREQUENCIES,\n} from '../../../data/PredictionManager';\nimport IsotopesViewer from '../../elements/IsotopesViewer';\nimport Label from '../../elements/Label';\nimport FormikErrorsSummary from '../../elements/formik/FormikErrorsSummary';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikInput from '../../elements/formik/FormikInput';\nimport FormikSelect from '../../elements/formik/FormikSelect';\n\nconst styles = css`\n  padding: 10px;\n  border-top: solid #f2f2f2 1px;\n\n  .row {\n    flex: row;\n    display: flex;\n    padding-bottom: 10px;\n  }\n\n  .inner-content {\n    flex: 1;\n  }\n\n  .custom-label {\n    width: 160px;\n  }\n\n  .footer-container {\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: flex-end;\n  }\n\n  .btn:not([disabled]):hover {\n    background-color: #ffffff;\n  }\n  .btn:hover {\n    background-color: #f2f2f2 !important;\n  }\n  .btn:disabled {\n    opacity: 0.5;\n  }\n  .btn {\n    border: none;\n    padding: 0 15px;\n    background-color: #ffffff;\n    border-radius: 5px;\n    height: 25px;\n  }\n\n  .input {\n    font-size: 14px;\n    border-radius: 5px;\n    border: 1px solid #cccccc;\n    padding: 5px;\n    width: 100px;\n    margin-right: 10px;\n    height: initial !important;\n  }\n`;\n\nconst predictionFormValidation = Yup.object().shape({\n  frequency: Yup.number().integer().required().label('Frequency'),\n  '1d': Yup.object({\n    '1H': Yup.object({\n      from: Yup.number().integer().required().label(\"1H ' From ' \"),\n      to: Yup.number().integer().required().label(\"1H ' To ' \"),\n    }),\n    '13C': Yup.object().shape({\n      from: Yup.number().integer().required().label(\"13C ' From ' \"),\n      to: Yup.number().integer().required().label(\"13C ' To ' \"),\n    }),\n    lineWidth: Yup.number().integer().min(1).required().label('Line Width'),\n  }),\n});\n\ninterface PredictionOptionsProps {\n  onPredict?: (options?: PredictionOptionsInterface) => void;\n}\n\nfunction PredictionOptions({ onPredict = () => null }: PredictionOptionsProps) {\n  const refForm = useRef<any>();\n\n  const handleSave = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n\n  const submitHandler = useCallback(\n    (values) => {\n      void (async () => {\n        onPredict(values);\n      })();\n    },\n    [onPredict],\n  );\n\n  return (\n    <div css={styles}>\n      <div>\n        <FormikForm\n          ref={refForm}\n          initialValues={defaultPredictionOptions}\n          validationSchema={predictionFormValidation}\n          onSubmit={submitHandler}\n        >\n          <FormikErrorsSummary />\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Frequency : </span>\n            <FormikSelect\n              data={FREQUENCIES}\n              style={{ width: 290, height: 30, margin: 0 }}\n              name=\"frequency\"\n            />\n          </div>\n\n          <div className=\"row\">\n            <IsotopesViewer value=\"1H\" className=\"custom-label\" />\n            <Label title=\"From\">\n              <FormikInput name=\"1d.1H.from\" type=\"number\" />\n            </Label>\n            <Label title=\"To\" style={{ label: { padding: '0 10px' } }}>\n              <FormikInput name=\"1d.1H.to\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\"row\">\n            <IsotopesViewer value=\"13C\" className=\"custom-label\" />\n            <Label title=\"From\">\n              <FormikInput name=\"1d.13C.from\" type=\"number\" />\n            </Label>\n            <Label title=\"To\" style={{ label: { padding: '0 10px' } }}>\n              <FormikInput name=\"1d.13C.to\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\"row margin-10 padding-h-10\">\n            <span className=\"custom-label\">Line Width : </span>\n            <FormikInput\n              name=\"1d.lineWidth\"\n              type=\"number\"\n              style={{ input: { margin: 0 } }}\n            />\n            <span style={{ paddingLeft: '0.4rem' }}> Hz </span>\n          </div>\n        </FormikForm>\n      </div>\n      <div>\n        <button type=\"button\" onClick={handleSave} className=\"btn\">\n          Predict spectrum\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default PredictionOptions;\n","import { useState, useCallback } from 'react';\n\nimport { Molecule } from '../../../data/molecules/Molecule';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { PREDICT_SPECTRA, SET_LOADING_FLAG } from '../../reducer/types/Types';\nimport MoleculePanel from '../MoleculesPanel/MoleculePanel';\n\nimport PredictionPreferences from './PredictionOptions';\n\nexport default function PredictionPane() {\n  const [molecule, setMolecule] = useState<Molecule | null>();\n\n  const changeHandler = useCallback((molecule) => {\n    setMolecule(molecule);\n  }, []);\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const predictHandler = useCallback(\n    (values) => {\n      void (async () => {\n        if (molecule) {\n          dispatch({\n            type: SET_LOADING_FLAG,\n            isLoading: true,\n          });\n\n          const hideLoading = await alert.showLoading(\n            `Predict 1H, 13C, COSY, HSQC, and HMBC in progress`,\n          );\n\n          dispatch({\n            type: PREDICT_SPECTRA,\n            payload: { mol: molecule, options: values },\n          });\n\n          hideLoading();\n        } else {\n          alert.error('No Molecule selected');\n        }\n      })();\n    },\n    [alert, dispatch, molecule],\n  );\n\n  return (\n    <MoleculePanel\n      onMoleculeChange={changeHandler}\n      actionsOptions={{ hidePredict: true, hideDelete: true, hideExport: true }}\n    >\n      <PredictionPreferences onPredict={predictHandler} />\n    </MoleculePanel>\n  );\n}\n","import { Accordion } from 'analysis-ui-components';\nimport lodashGet from 'lodash/get';\nimport { useCallback, memo, ReactElement, CSSProperties } from 'react';\n\nimport { PanelPreferencesType } from '../../types/PanelPreferencesType';\nimport { useChartData } from '../context/ChartContext';\nimport { usePreferences } from '../context/PreferencesContext';\nimport useCheckExperimentalFeature from '../hooks/useCheckExperimentalFeature';\nimport { DISPLAYER_MODE } from '../reducer/core/Constants';\n\nimport AutomaticAssignment from './AutomaticAssignment/AutomaticAssignment';\nimport InformationPanel from './InformationPanel';\nimport IntegralPanel from './IntegralsPanel/IntegralPanel';\nimport MatrixGenerationPanel from './MatrixGenerationPanel/MatrixGenerationPanel';\nimport MoleculePanel from './MoleculesPanel/MoleculePanel';\nimport MultipleSpectraAnalysisPanel from './MultipleSpectraAnalysisPanel/MultipleSpectraAnalysisPanel';\nimport PeaksPanel from './PeaksPanel/PeaksPanel';\nimport RangesPanel from './RangesPanel/RangesPanel';\nimport SpectrumListPanel from './SpectrumsPanel/SpectrumListPanel';\nimport SummaryPanel from './SummaryPanel/SummaryPanel';\nimport ZonesPanel from './ZonesPanel/ZonesPanel';\nimport DatabasePanel from './databasePanel/DatabasePanel';\nimport FilterPanel from './filtersPanel/FilterPanel';\nimport PredictionPane from './predictionPanel/PredictionPanel';\n\ninterface AccordionItem {\n  title: string;\n  component: ReactElement;\n  style?: CSSProperties;\n  hidePreferenceKey: string;\n  mode: '1D' | '2D' | null;\n  isExperimental?: boolean;\n}\n\nconst accordionItems: AccordionItem[] = [\n  {\n    title: 'Spectra',\n    component: <SpectrumListPanel />,\n    hidePreferenceKey: 'spectraPanel',\n    mode: null,\n  },\n  {\n    title: 'Information',\n    component: <InformationPanel />,\n    style: { overflow: 'hidden' },\n    hidePreferenceKey: 'informationPanel',\n    mode: null,\n  },\n  {\n    title: 'Peaks',\n    component: <PeaksPanel />,\n    hidePreferenceKey: 'peaksPanel',\n    mode: null,\n  },\n  {\n    title: 'Filters',\n    component: <FilterPanel />,\n    hidePreferenceKey: 'filtersPanel',\n    mode: null,\n  },\n  {\n    title: 'Integrals',\n    component: <IntegralPanel />,\n    hidePreferenceKey: 'integralsPanel',\n    mode: null,\n  },\n  {\n    title: 'Ranges',\n    component: <RangesPanel />,\n    hidePreferenceKey: 'rangesPanel',\n    mode: DISPLAYER_MODE.DM_1D,\n  },\n  {\n    title: 'Multiple Spectra Analysis',\n    component: <MultipleSpectraAnalysisPanel />,\n    hidePreferenceKey: 'multipleSpectraAnalysisPanel',\n    mode: null,\n  },\n  {\n    title: 'Matrix Generation',\n    component: <MatrixGenerationPanel />,\n    hidePreferenceKey: '',\n    mode: null,\n    isExperimental: true,\n  },\n  {\n    title: 'Zones',\n    component: <ZonesPanel />,\n    hidePreferenceKey: 'zonesPanel',\n    mode: DISPLAYER_MODE.DM_2D,\n  },\n  {\n    title: 'Summary',\n    component: <SummaryPanel />,\n    hidePreferenceKey: 'summaryPanel',\n    mode: null,\n  },\n  {\n    title: 'Structures',\n    component: <MoleculePanel />,\n    hidePreferenceKey: 'structuresPanel',\n    mode: null,\n  },\n  {\n    title: 'Database',\n    component: <DatabasePanel />,\n    hidePreferenceKey: 'databasePanel',\n    mode: null,\n  },\n  {\n    title: 'Automatic Assignment',\n    component: <AutomaticAssignment />,\n    hidePreferenceKey: '',\n    mode: null,\n    isExperimental: true,\n  },\n  {\n    title: 'Prediction',\n    component: <PredictionPane />,\n    hidePreferenceKey: 'predictionPanel',\n    mode: null,\n  },\n];\n\nexport const TOOLS_PANELS_ACCORDION: Record<string, string> = {\n  null: 'Spectra',\n  peakPicking: 'Peaks',\n  integral: 'Integrals',\n  rangesPicking: 'Ranges',\n  zone2D: 'Zones',\n  multipleSpectraAnalysis: 'Multiple Spectra Analysis',\n};\n\nfunction usePanelPreferences(): (item: AccordionItem) => PanelPreferencesType {\n  const preferences = usePreferences();\n\n  return useCallback(\n    (item: AccordionItem) => {\n      return lodashGet(\n        preferences.current,\n        `display.panels.${item.hidePreferenceKey}`,\n      );\n    },\n    [preferences],\n  );\n}\n\nfunction PanelsInner({ displayerMode: displayedMode }) {\n  const getPanelPreferences = usePanelPreferences();\n  const isExperimental = useCheckExperimentalFeature();\n  const check = useCallback(\n    (item) => {\n      const panelOptions = getPanelPreferences(item);\n      return (\n        (panelOptions?.hidden !== true &&\n          panelOptions?.display === true &&\n          item.isExperimental === undefined &&\n          (item.mode == null || item.mode === displayedMode)) ||\n        (item.isExperimental && isExperimental)\n      );\n    },\n    [displayedMode, getPanelPreferences, isExperimental],\n  );\n\n  const isOpened = useCallback(\n    (item: AccordionItem) => {\n      const panelOptions = getPanelPreferences(item);\n      return panelOptions?.hidden !== true && panelOptions?.open;\n    },\n    [getPanelPreferences],\n  );\n\n  return (\n    <div style={{ width: '100%', height: '100%', flex: '1 1 0%' }}>\n      <Accordion>\n        {accordionItems.map((item) => {\n          return (\n            check(item) && (\n              <Accordion.Item\n                key={item.title}\n                title={item.title}\n                defaultOpened={isOpened(item)}\n              >\n                {item.component}\n              </Accordion.Item>\n            )\n          );\n        })}\n      </Accordion>\n    </div>\n  );\n}\n\nconst MemoizedPanels = memo(PanelsInner);\n\nexport default function Panels() {\n  const {\n    displayerMode,\n    toolOptions: { selectedTool },\n  } = useChartData();\n\n  return <MemoizedPanels {...{ displayerMode, selectedTool }} />;\n}\n","import { useToggleAccordion } from 'analysis-ui-components';\nimport lodashDebounce from 'lodash/debounce';\nimport lodashMap from 'lodash/map';\nimport { useCallback, useRef, useState } from 'react';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport { useAlert } from '../elements/popup/Alert';\nimport { TOOLS_PANELS_ACCORDION } from '../panels/Panels';\nimport { ZoomType } from '../reducer/helper/Zoom1DManager';\nimport {\n  CHANGE_SPECTRUM_DISPLAY_VIEW_MODE,\n  FULL_ZOOM_OUT,\n  SET_SELECTED_TOOL,\n  SET_SPECTRUMS_VERTICAL_ALIGN,\n  TOGGLE_REAL_IMAGINARY_VISIBILITY,\n} from '../reducer/types/Types';\nimport { options } from '../toolbar/ToolTypes';\n\nexport default function useToolsFunctions() {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { open: openPanel } = useToggleAccordion();\n  const [isRealSpectrumShown, setIsRealSpectrumShown] = useState(false);\n\n  const debounceClickEventsRef = useRef<{ clicks: Array<any> }>({ clicks: [] });\n  const handleChangeOption = useCallback(\n    (selectedTool) => {\n      if (\n        [\n          options.peakPicking.id,\n          options.integral.id,\n          options.zone2D.id,\n          options.exclusionZones.id,\n        ].includes(selectedTool)\n      ) {\n        alert.show('Press Shift + Left Mouse button to select zone');\n      }\n\n      if (Object.keys(TOOLS_PANELS_ACCORDION).includes(selectedTool)) {\n        openPanel(TOOLS_PANELS_ACCORDION[selectedTool]);\n      }\n\n      dispatch({\n        type: SET_SELECTED_TOOL,\n        payload: { selectedTool },\n      });\n    },\n    [alert, dispatch, openPanel],\n  );\n\n  const handleFullZoomOut = useCallback(() => {\n    if (debounceClickEventsRef.current.clicks.length === 0) {\n      dispatch({\n        type: FULL_ZOOM_OUT,\n        zoomType: ZoomType.HORIZONTAL,\n      });\n    }\n    const callback = lodashDebounce(() => {\n      debounceClickEventsRef.current.clicks = [];\n    }, 500);\n    debounceClickEventsRef.current.clicks.push(callback);\n\n    callback();\n\n    if (debounceClickEventsRef.current.clicks.length > 1) {\n      lodashMap(debounceClickEventsRef.current.clicks, (debounce) =>\n        debounce.cancel(),\n      );\n      debounceClickEventsRef.current.clicks = [];\n      dispatch({\n        type: FULL_ZOOM_OUT,\n      });\n    }\n  }, [dispatch, debounceClickEventsRef]);\n\n  const changeDisplayViewModeHandler = useCallback(() => {\n    dispatch({\n      type: CHANGE_SPECTRUM_DISPLAY_VIEW_MODE,\n    });\n  }, [dispatch]);\n\n  const changeSpectrumViewHandler = useCallback(() => {\n    dispatch({\n      type: TOGGLE_REAL_IMAGINARY_VISIBILITY,\n      isRealSpectrumVisible: !isRealSpectrumShown,\n    });\n    setIsRealSpectrumShown(!isRealSpectrumShown);\n  }, [dispatch, isRealSpectrumShown]);\n\n  const alignSpectrumsVerticallyHandler = useCallback(() => {\n    dispatch({\n      type: SET_SPECTRUMS_VERTICAL_ALIGN,\n    });\n  }, [dispatch]);\n\n  return {\n    handleChangeOption,\n    handleFullZoomOut,\n    changeDisplayViewModeHandler,\n    changeSpectrumViewHandler,\n    alignSpectrumsVerticallyHandler,\n    isRealSpectrumShown,\n  };\n}\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport checkModifierKeyActivated from '../../data/utilities/checkModifierKeyActivated';\nimport { useAssignmentData } from '../assignment';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport { useLoader } from '../context/LoaderContext';\nimport { useAlert } from '../elements/popup/Alert';\nimport { HighlightedSource, useHighlightData } from '../highlight/index';\nimport useExport from '../hooks/useExport';\nimport useToolsFunctions from '../hooks/useToolsFunctions';\nimport { DISPLAYER_MODE } from '../reducer/core/Constants';\nimport {\n  SET_KEY_PREFERENCES,\n  APPLY_KEY_PREFERENCES,\n  DELETE_INTEGRAL,\n  DELETE_PEAK_NOTATION,\n  DELETE_RANGE,\n  DELETE_2D_ZONE,\n  DELETE_EXCLUSION_ZONE,\n} from '../reducer/types/Types';\nimport { options } from '../toolbar/ToolTypes';\n\nfunction KeysListenerTracker() {\n  const {\n    keysPreferences,\n    displayerMode,\n    overDisplayer,\n    data,\n    activeSpectrum,\n  } = useChartData();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const openLoader = useLoader();\n\n  const {\n    handleChangeOption,\n    handleFullZoomOut,\n    alignSpectrumsVerticallyHandler,\n    changeDisplayViewModeHandler,\n  } = useToolsFunctions();\n\n  const { saveToClipboardHandler, saveAsJSONHandler, saveAsHandler } =\n    useExport();\n\n  const { highlight, remove } = useHighlightData();\n\n  const assignmentData = useAssignmentData();\n  const allow1DTool = useMemo(() => {\n    return displayerMode === DISPLAYER_MODE.DM_1D && data && data.length > 0;\n  }, [data, displayerMode]);\n\n  const deleteHandler = useCallback(\n    async (sourceData) => {\n      const {\n        type,\n        extra: { id },\n      } = sourceData;\n\n      switch (type) {\n        case HighlightedSource.INTEGRAL: {\n          dispatch({\n            type: DELETE_INTEGRAL,\n            integralID: id,\n          });\n          // remove keys from the highlighted list after delete\n          remove();\n\n          break;\n        }\n        case HighlightedSource.PEAK: {\n          dispatch({\n            type: DELETE_PEAK_NOTATION,\n            data: { id },\n          });\n          // remove keys from the highlighted list after delete\n          remove();\n\n          break;\n        }\n        case HighlightedSource.RANGE: {\n          dispatch({\n            type: DELETE_RANGE,\n            payload: {\n              data: {\n                id,\n                assignmentData,\n              },\n            },\n          });\n          // remove keys from the highlighted list after delete\n          remove();\n\n          break;\n        }\n        case HighlightedSource.ZONE: {\n          dispatch({\n            type: DELETE_2D_ZONE,\n            payload: {\n              id,\n              assignmentData,\n            },\n          });\n          // remove keys from the highlighted list after delete\n          remove();\n\n          break;\n        }\n        case HighlightedSource.EXCLUSION_ZONE: {\n          const hideLoading = await alert.showLoading(\n            `Exclusion filter in progress`,\n          );\n          dispatch({\n            type: DELETE_EXCLUSION_ZONE,\n            payload: {\n              id,\n              spectrumID: sourceData.extra.spectrumID,\n            },\n          });\n          hideLoading();\n          // remove keys from the highlighted list after delete\n          remove();\n\n          break;\n        }\n\n        default:\n          break;\n      }\n    },\n    [assignmentData, dispatch, remove, alert],\n  );\n\n  const keysPreferencesListenerHandler = useCallback(\n    (e, num) => {\n      if (data && data.length > 0 && num >= 1 && num <= 9) {\n        if (e.shiftKey) {\n          dispatch({\n            type: SET_KEY_PREFERENCES,\n            keyCode: num,\n          });\n          alert.show(`Configuration Reset, press '${num}' again to reload it.`);\n        } else {\n          if (!checkModifierKeyActivated(e)) {\n            if (keysPreferences?.[num]) {\n              dispatch({\n                type: APPLY_KEY_PREFERENCES,\n                keyCode: num,\n              });\n            } else {\n              dispatch({\n                type: SET_KEY_PREFERENCES,\n                keyCode: num,\n              });\n              alert.show(\n                `Configuration saved, press '${num}' again to reload it.`,\n              );\n            }\n          }\n        }\n      }\n    },\n    [alert, data, dispatch, keysPreferences],\n  );\n\n  const toolsListenerHandler = useCallback(\n    (e) => {\n      function check1DModeWithActiveSpectrum(\n        label: string,\n        checkSwitch = true,\n      ) {\n        if (displayerMode === DISPLAYER_MODE.DM_1D && !activeSpectrum) {\n          throw new Error(`Select a spectrum to proceed with ${label}`);\n        } else if (checkSwitch && displayerMode === DISPLAYER_MODE.DM_2D) {\n          throw new Error(\n            `Switch to 1D Mode and select a spectrum to proceed with ${label}`,\n          );\n        }\n      }\n      function check2DModeWithActiveSpectrum(\n        label: string,\n        checkSwitch = true,\n      ) {\n        if (displayerMode === DISPLAYER_MODE.DM_2D && !activeSpectrum) {\n          throw new Error(`Select a spectrum to proceed with ${label}`);\n        } else if (checkSwitch && displayerMode === DISPLAYER_MODE.DM_1D) {\n          throw new Error(\n            `Switch to 2D Mode and select a spectrum to proceed with ${label}`,\n          );\n        }\n      }\n\n      try {\n        if (!e.shiftKey && !e.metaKey) {\n          switch (e.key) {\n            case 'f':\n              handleFullZoomOut();\n              break;\n            case 'z':\n            case 'Escape':\n              handleChangeOption(options.zoom.id);\n              break;\n            case 'r': {\n              if (displayerMode === DISPLAYER_MODE.DM_2D) {\n                check2DModeWithActiveSpectrum(options.zone2D.label, false);\n                handleChangeOption(options.zone2D.id);\n              } else {\n                check1DModeWithActiveSpectrum(\n                  options.rangesPicking.label,\n                  false,\n                );\n                handleChangeOption(options.rangesPicking.id);\n              }\n              break;\n            }\n            case 'a': {\n              check1DModeWithActiveSpectrum(options.phaseCorrection.label);\n              handleChangeOption(options.phaseCorrection.id);\n\n              break;\n            }\n            case 'b': {\n              check1DModeWithActiveSpectrum(options.baseLineCorrection.label);\n              handleChangeOption(options.baseLineCorrection.id);\n\n              break;\n            }\n            case 'p': {\n              check1DModeWithActiveSpectrum(options.peakPicking.label);\n              handleChangeOption(options.peakPicking.id);\n\n              break;\n            }\n            case 'i': {\n              check1DModeWithActiveSpectrum(options.integral.label);\n              handleChangeOption(options.integral.id);\n\n              break;\n            }\n            case 'e': {\n              check1DModeWithActiveSpectrum(options.exclusionZones.label);\n              handleChangeOption(options.exclusionZones.id);\n\n              break;\n            }\n            default:\n          }\n        }\n\n        if (!e.shiftKey && !e.metaKey && !e.ctrlKey) {\n          switch (e.key) {\n            case 'c': {\n              if (allow1DTool) {\n                alignSpectrumsVerticallyHandler();\n              }\n              break;\n            }\n            case 's': {\n              if (allow1DTool) {\n                changeDisplayViewModeHandler();\n              }\n              break;\n            }\n            default:\n          }\n        }\n\n        if (!e.shiftKey && (e.metaKey || e.ctrlKey)) {\n          switch (e.key) {\n            case 'c':\n              void saveToClipboardHandler();\n              e.preventDefault();\n              break;\n            case 's':\n              void saveAsJSONHandler();\n              e.preventDefault();\n              break;\n            case 'o':\n              openLoader();\n              e.preventDefault();\n              break;\n            default:\n          }\n        }\n        if (e.shiftKey && (e.metaKey || e.ctrlKey)) {\n          switch (e.key) {\n            case 's':\n            case 'S':\n              void saveAsHandler();\n              e.preventDefault();\n              break;\n            default:\n          }\n        }\n      } catch (e: any) {\n        alert.error(e.message);\n      }\n    },\n    [\n      activeSpectrum,\n      alert,\n      alignSpectrumsVerticallyHandler,\n      allow1DTool,\n      changeDisplayViewModeHandler,\n      displayerMode,\n      handleChangeOption,\n      handleFullZoomOut,\n      openLoader,\n      saveAsHandler,\n      saveAsJSONHandler,\n      saveToClipboardHandler,\n    ],\n  );\n  const handleOnKeyDown = useCallback(\n    (e) => {\n      if (\n        !['input', 'textarea'].includes(e.target.localName) &&\n        overDisplayer\n      ) {\n        const num = Number(e.code.substr(e.code.length - 1)) || 0;\n        if (num > 0) {\n          keysPreferencesListenerHandler(e, num);\n        } else {\n          if (['Delete', 'Backspace'].includes(e.key) && highlight.sourceData) {\n            e.preventDefault();\n            void deleteHandler(highlight.sourceData);\n          } else {\n            toolsListenerHandler(e);\n          }\n        }\n      }\n    },\n    [\n      deleteHandler,\n      highlight,\n      keysPreferencesListenerHandler,\n      overDisplayer,\n      toolsListenerHandler,\n    ],\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleOnKeyDown, true);\n\n    return () => document.removeEventListener('keydown', handleOnKeyDown, true);\n  }, [handleOnKeyDown]);\n\n  return null;\n}\n\nexport default KeysListenerTracker;\n","export const docsBaseUrl = 'https://docs.nmrium.org';\n\nexport const helpList: Record<string, { text: string; url: string }> = {\n  zoomIn: {\n    text: 'Zoom Tool',\n    url: `${docsBaseUrl}/help/zoom-and-scale`,\n  },\n  peakPicking: {\n    text: 'peak picking tool',\n    url: `${docsBaseUrl}/help/peaks`,\n  },\n  integralPicking: {\n    text: 'integral tool',\n    url: `${docsBaseUrl}/help/integrations`,\n  },\n  fullScreen: {\n    text: 'Full Screen mode',\n    url: `${docsBaseUrl}/help/general`,\n  },\n  loadSpectrum: {\n    text: 'load spectrums',\n    url: `${docsBaseUrl}/help/loading-a-spectrum`,\n  },\n};\n","export default { version: 'git-39e077549f41bce94e63444f35b7bd943fb15ece' };\n","interface LogoProps {\n  width?: number;\n  height?: number;\n}\n\nexport default function Logo({ width = 100, height = 100 }: LogoProps) {\n  return (\n    <svg\n      style={{ width: width, height: height }}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 752.34 221.73\"\n    >\n      <path\n        fill=\"#ea580c\"\n        fillRule=\"evenodd\"\n        d=\"M.64,31.7A31.67,31.67,0,0,1,54.72,9.29l0,0A31.66,31.66,0,0,1,64,31.7V190a13.39,13.39,0,0,0,26.77,0V54a31.7,31.7,0,0,1,31.7-31.7V40.58A13.38,13.38,0,0,0,109.13,54V190a31.71,31.71,0,0,1-63.41,0V31.7a13.29,13.29,0,0,0-3.88-9.46l0,0A13.41,13.41,0,0,0,19,31.7V164.82H.64Z\"\n      />\n      <path\n        fill=\"#2b143e\"\n        fillRule=\"evenodd\"\n        d=\"M154.21,54v68.17a13.34,13.34,0,0,0,3.89,9.47h0A13.39,13.39,0,0,0,181,122.14V99.32h-.06a31.63,31.63,0,0,1,9.29-22.38l0,0a31.65,31.65,0,0,1,44.8,0l0,0a31.58,31.58,0,0,1,9.3,22.39V118H226V99.32a13.3,13.3,0,0,0-3.89-9.46h0a13.44,13.44,0,0,0-18.93,0l0,0a13.3,13.3,0,0,0-3.83,8.19v24.09a31.7,31.7,0,0,1-54.11,22.42v0a31.66,31.66,0,0,1-9.3-22.4V54Z\"\n      />\n      <path\n        fill=\"#2b143e\"\n        fillRule=\"evenodd\"\n        d=\"M729.19,96.34c-8.65,0-14.26,3.17-17.67,8-3.41-5.12-8.78-8-16-8-8.16,0-13.52,3.17-16.32,7.31v-5.6H661V159h18.28V124.62c0-7.19,3.41-11.46,9.5-11.46,5.85,0,8.78,3.9,8.78,10V159h18.27V124.62c0-7.19,3.42-11.46,9.51-11.46,5.85,0,8.77,3.9,8.77,10V159h18.28V121.57C752.34,106.33,743.2,96.34,729.19,96.34Z\"\n      />\n      <path\n        fill=\"#2b143e\"\n        fillRule=\"evenodd\"\n        d=\"M629.26,98.05v33.26c0,8.66-4.63,12.56-11.33,12.56-5.85,0-10.6-3.54-10.6-11.09V98.05H589.05v37.41c0,16.45,10.48,25.22,22.79,25.22,8,0,14.13-2.92,17.42-7.43V159h18.28V98.05Z\"\n      />\n      <rect fill=\"#2b143e\" x=\"558.22\" y=\"98.05\" width=\"18.28\" height=\"60.93\" />\n      <path\n        fill=\"#2b143e\"\n        fillRule=\"evenodd\"\n        d=\"M567.36,92.68a11,11,0,1,0-11-11A11.08,11.08,0,0,0,567.36,92.68Z\"\n      />\n      <path\n        fill=\"#ea580c\"\n        fillRule=\"evenodd\"\n        d=\"M478.77,159H498V116.57L525.66,159H549.2l-22.3-34.75c5.45-2.13,8.12-4.14,11.48-8.86a31.07,31.07,0,0,0,6.07-18.26V94.62c0-10.61-3.45-15.93-9.28-21.78S520.75,63.09,510,63.09H478.71l.06,95.89Zm33.1-50.27h-6.46v-.06H498V82.19h10.87c4.67,0,9.44,1.38,11.94,3.81a12.84,12.84,0,0,1,3.81,9.2C524.58,102.52,518.92,108.71,511.87,108.71Z\"\n      />\n      <polygon\n        fill=\"#ea580c\"\n        fillRule=\"evenodd\"\n        points=\"372.91 60.8 372.91 158.98 392.16 158.98 392.16 119.23 419.91 157.41 447.61 119.23 447.61 158.98 466.87 158.98 466.87 60.8 419.91 125.22 372.91 60.8\"\n      />\n      <polygon\n        fill=\"#ea580c\"\n        fillRule=\"evenodd\"\n        points=\"283.89 61.04 283.89 159.1 303.14 159.1 303.14 105.85 361.01 160.93 361.01 62.83 341.67 62.83 341.67 116.08 283.89 61.04\"\n      />\n    </svg>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nimport versionInfo from '../../versionInfo';\nimport CloseButton from '../elements/CloseButton';\nimport Logo from '../elements/Logo';\n\nconst styles = css`\n  display: flex;\n  flex-direction: column;\n  user-select:\n  button:focus {\n    outline: none;\n  }\n  .header {\n    height: 34px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    padding: 5px;\n\n    span {\n      color: #464646;\n      font-size: 15px;\n      flex: 1;\n      user-select: none;\n\n    }\n\n    button {\n      background-color: transparent;\n      border: none;\n      svg {\n        height: 16px;\n      }\n    }\n  }\n  .container {\n    width: 100%;\n    height: 100%;\n    padding: 20px;\n  }\n\n  .center-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  ul {\n    list-style-type: disc;\n    margin-left:20px;\n    }\n  span,li{\n    user-select: text;\n  }\n  span.title {\n    font-weight: bold;\n    color: #ea580c;\n  }\n  span.content {\n    color: #2b143e;\n    font-size: 14px;\n    text-align: left;\n  }\n\n  img {\n    width: 100px;\n  }\n\n  a {\n    color: #969696;\n  }\n\n  a:hover,\n  a:focus {\n    color: #00bcd4;\n  }\n\n  .separator {\n    border-bottom: 1px solid gray;\n    width: 15px;\n    height: 1px;\n    margin: 10px 0px;\n  }\n`;\n\ninterface AboutUsModalProps {\n  onClose?: () => null;\n}\n\nfunction AboutUsModal({ onClose = () => null }: AboutUsModalProps) {\n  return (\n    <div css={styles}>\n      <div className=\"header handle\">\n        <span>About NMRium</span>\n\n        <CloseButton onClick={onClose} />\n      </div>\n      <div className=\"container\">\n        <div className=\"center-container\">\n          <Logo width={160} height={50} />\n          Version <VersionInfo />\n          <span className=\"separator\" />\n          <a href=\"https://git.nmrium.org\" target=\"_blank\" rel=\"noreferrer\">\n            GitHub ( https://git.nmrium.org )\n          </a>\n        </div>\n        <div className=\"center-container\">\n          <span className=\"separator\" />\n        </div>\n\n        <span className=\"content\">\n          This project is developed by Zakodium Sàrl (Switzerland), the\n          University of Cologne (Germany), Johannes Gutenberg University Mainz\n          (Germany) and Universidad del Valle (Colombia).\n        </span>\n        <div className=\"center-container\">\n          <span className=\"separator\" />\n          <span className=\"title\">Funding is provided by</span>\n          <span className=\"separator\" />\n        </div>\n\n        <div className=\"content\">\n          <ul>\n            <li>\n              IDNMR grant, which part of the Scientific Library Services and\n              Information Systems (LIS) initiative of the DFG.\n            </li>\n            <li>Zakodium Sàrl (Switzerland).</li>\n            <li>Universidad del Valle (Cali, Colombia).</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutUsModal;\n\nfunction VersionInfo() {\n  const { version } = versionInfo;\n  if (version === 'HEAD') {\n    return <>HEAD</>;\n  } else if (version.startsWith('git-')) {\n    return (\n      <a\n        href={`https://github.com/cheminfo/nmrium/tree/${version.slice(4)}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        git-{version.slice(4, 14)}\n      </a>\n    );\n  } else {\n    return (\n      <a\n        href={`https://github.com/cheminfo/nmrium/tree/${version}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {version}\n      </a>\n    );\n  }\n}\n","import Label from '../../elements/Label';\nimport FormikInput from '../../elements/formik/FormikInput';\n\nfunction ControllersTabContent() {\n  return (\n    <>\n      <p className=\"section-header\">Spectra</p>\n      <Label\n        title=\"Transparency of Dimmed Spectra [ 0 - 1 ]\"\n        // style={{ label: styles.inputLabel, wrapper: styles.inputWrapper }}\n      >\n        <FormikInput\n          name=\"controllers.dimmedSpectraTransparency\"\n          checkValue={(value) => value >= 0 && value <= 1}\n          type=\"number\"\n        />\n      </Label>\n    </>\n  );\n}\n\nexport default ControllersTabContent;\n","import lodashGet from 'lodash/get';\nimport { useMemo } from 'react';\n\nimport { NMRiumPreferences } from '../../NMRium';\nimport ReactTable from '../../elements/ReactTable/ReactTable';\nimport { CustomColumn } from '../../elements/ReactTable/utility/addCustomColumn';\nimport FormikCheckBox from '../../elements/formik/FormikCheckBox';\n\ninterface ListItem {\n  label: string;\n  name: string;\n  hideOpenOption?: boolean;\n}\nconst LIST: ListItem[] = [\n  {\n    label: 'Spectra selection panel',\n    name: 'panels.spectraPanel',\n  },\n  {\n    label: 'Spectra information Panel',\n    name: 'panels.informationPanel',\n  },\n  {\n    label: 'Peaks and peak picking',\n    name: 'panels.peaksPanel',\n  },\n  {\n    label: 'Integration and integrals',\n    name: 'panels.integralsPanel',\n  },\n  {\n    label: '1D ranges peak picking',\n    name: 'panels.rangesPanel',\n  },\n  {\n    label: 'Chemical structure panel',\n    name: 'panels.structuresPanel',\n  },\n  {\n    label: 'Filters Panel',\n    name: 'panels.filtersPanel',\n  },\n  {\n    label: '2D zones peak picking',\n    name: 'panels.zonesPanel',\n  },\n  {\n    label: 'Assignment summary Panel',\n    name: 'panels.summaryPanel',\n  },\n  {\n    label: 'Multiple Spectra Analysis Panel',\n    name: 'panels.multipleSpectraAnalysisPanel',\n  },\n  {\n    label: 'Database Panel',\n    name: 'panels.databasePanel',\n  },\n  {\n    label: 'Prediction Panel',\n    name: 'panels.predictionPanel',\n  },\n  {\n    label: 'Experimental Features',\n    name: 'general.experimentalFeatures',\n    hideOpenOption: true,\n  },\n];\n\ninterface DisplayTabContentProps {\n  preferences: NMRiumPreferences;\n}\n\nfunction CheckBoxCell(props) {\n  return (\n    <FormikCheckBox\n      style={{\n        container: { display: 'block', margin: '0 auto', width: 'fit-content' },\n      }}\n      key={props.name}\n      className=\"checkbox-element\"\n      name={props.name}\n    />\n  );\n}\n\nfunction DisplayTabContent({ preferences }: DisplayTabContentProps) {\n  const COLUMNS: CustomColumn[] = useMemo(\n    () => [\n      {\n        index: 1,\n        Header: '#',\n        Cell: ({ row }) => row.index + 1,\n      },\n      {\n        index: 1,\n        Header: 'Feature',\n        accessor: 'label',\n        style: { width: '60%' },\n      },\n      {\n        index: 2,\n        Header: 'Active',\n        Cell: ({ row }) => (\n          <CheckBoxCell name={`display.${row.original.name}.display`} />\n        ),\n      },\n      {\n        index: 3,\n        Header: 'Open on load',\n        Cell: ({ row }) =>\n          !row.original.hideOpenOption ? (\n            <CheckBoxCell name={`display.${row.original.name}.open`} />\n          ) : (\n            <div />\n          ),\n      },\n    ],\n    [],\n  );\n\n  const data = useMemo(() => {\n    return LIST.filter(\n      (item) => lodashGet(preferences, `${item.name}.hidden`) !== true,\n    );\n  }, [preferences]);\n\n  return (\n    <div style={{ width: '100%', overflow: 'hidden' }}>\n      <ReactTable columns={COLUMNS} data={data} />\n    </div>\n  );\n}\n\nexport default DisplayTabContent;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { Fragment, useCallback, useMemo } from 'react';\nimport { FaPlus } from 'react-icons/fa';\n\nimport generateID from '../../../data/utilities/generateID';\nimport CloseButton from '../../elements/CloseButton';\nimport FormikInput from '../../elements/formik/FormikInput';\n\nconst styles = css`\n  .counter-col {\n    width: 30px;\n  }\n  .nucleus-label-col {\n    display: flex;\n    justify-content: center;\n    width: 80px;\n  }\n\n  .width-100 {\n    width: 100% !important;\n    margin: 0px !important;\n  }\n\n  .nucleus-format-input-col {\n    text-align: center;\n    width: 100px;\n  }\n\n  th {\n    font-size: 11px;\n    font-weight: 600;\n  }\n  .operation-container {\n    display: flex;\n  }\n  .add {\n    background-color: transparent;\n    border: 0;\n    outline: none;\n    svg {\n      font-szie: 14px;\n      fill: green;\n    }\n  }\n`;\n\nfunction FormattingTabContent() {\n  const { values, setFieldValue } = useFormikContext();\n  const nucleuses = useMemo(\n    () => lodashGet(values, 'formatting.nucleus', []),\n    [values],\n  );\n\n  const deleteHandler = useCallback(\n    (index) => {\n      const nucleusesObject = nucleuses.splice(0, index);\n      setFieldValue('formatting.nucleus', nucleusesObject);\n    },\n    [nucleuses, setFieldValue],\n  );\n\n  const addNewNucleusFormatHandler = useCallback(() => {\n    const newFormat = {\n      key: generateID(),\n      name: '',\n      ppm: '0.00',\n      hz: '0.00',\n    };\n    const newNucleuses = [...nucleuses, newFormat];\n    setFieldValue('formatting.nucleus', newNucleuses);\n  }, [nucleuses, setFieldValue]);\n\n  return (\n    <Fragment>\n      <p className=\"section-header\">Formating according to Nucleus</p>\n      <div css={styles}>\n        <table>\n          <thead>\n            <tr>\n              <th className=\"counter-col\">#</th>\n              <th className=\"nucleus-label-col\">Nucleus </th>\n              <th className=\"nucleus-format-input-col\">δ (ppm)</th>\n              <th className=\"nucleus-format-input-col\">Coupling (Hz)</th>\n              <th className=\"nucleus-format-input-col\" />\n            </tr>\n          </thead>\n          <tbody>\n            {nucleuses?.map((nucleus, index) => {\n              const num = index + 1;\n              return (\n                <tr key={`${nucleus.key}`}>\n                  <td className=\"counter-col\">\n                    <span>{num} - </span>{' '}\n                  </td>\n                  <td className=\"nucleus-label-col\">\n                    <FormikInput\n                      name={`formatting.nucleus.${index}.name`}\n                      className=\"width-100\"\n                    />\n                  </td>\n                  <td className=\"nucleus-format-input-col\">\n                    <FormikInput\n                      name={`formatting.nucleus.${index}.ppm`}\n                      className=\"width-100\"\n                    />\n                  </td>\n                  <td className=\"nucleus-format-input-col\">\n                    <FormikInput\n                      name={`formatting.nucleus.${index}.hz`}\n                      className=\"width-100\"\n                    />\n                  </td>\n                  <td className=\"operation-container\">\n                    <CloseButton\n                      onClick={() => deleteHandler(index)}\n                      popupTitle={`remove ${nucleus.name}`}\n                      popupPlacement=\"right\"\n                    />\n                    {nucleuses.length === index + 1 && (\n                      <button\n                        className=\"add\"\n                        type=\"button\"\n                        onClick={addNewNucleusFormatHandler}\n                      >\n                        <FaPlus />\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default FormattingTabContent;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useState } from 'react';\n\nimport workspaces from '../../workspaces';\n\nconst styles = css`\n  .container {\n    display: flex;\n    span {\n      padding: 5px !important;\n    }\n    span {\n      flex: 1;\n      text-align: left !important;\n    }\n  }\n\n  .new-container {\n    background-color: #f6f6f6;\n    display: flex;\n    padding: 0.3em;\n\n    input {\n      padding: 0.5em;\n      color: black;\n      outline: none;\n      background-color: transparent !important;\n    }\n  }\n\n  .delete-button:hover {\n    color: white;\n  }\n\n  .save-button:hover {\n    color: green;\n  }\n  .delete-button,\n  .save-button {\n    padding: 5px;\n  }\n`;\n\nconst WorkspaceItem = ({ item, onSave, onDelete }) => {\n  const [name, setName] = useState<string>('');\n  const addWorkspaceHandler = useCallback(\n    (e) => {\n      e.stopPropagation();\n      setName('');\n      onSave(name);\n    },\n    [name, onSave],\n  );\n\n  const deleteWorkspaceHandler = useCallback(\n    (e) => {\n      e.stopPropagation();\n      onDelete(item.key);\n    },\n    [item.key, onDelete],\n  );\n\n  const onTextChange = useCallback((e) => {\n    setName(e.target.value);\n  }, []);\n\n  return (\n    <div css={styles}>\n      {item.key === 'new' ? (\n        <div className=\"new-container\">\n          <input\n            value={name}\n            placeholder=\"Custom workspace\"\n            onClick={(e) => e.stopPropagation()}\n            onChange={onTextChange}\n          />\n          <button\n            type=\"button\"\n            className=\"save-button\"\n            onClick={addWorkspaceHandler}\n            disabled={!name}\n          >\n            save\n          </button>\n        </div>\n      ) : (\n        <div className=\"container\">\n          <span>{item.label}</span>\n          {!workspaces[item.key] && (\n            <button\n              type=\"button\"\n              className=\"delete-button\"\n              onClick={deleteWorkspaceHandler}\n            >\n              Delete\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WorkspaceItem;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\n\nimport {\n  usePreferences,\n  useWorkspacesList,\n} from '../../context/PreferencesContext';\nimport CloseButton from '../../elements/CloseButton';\nimport Tab from '../../elements/Tab/Tab';\nimport Tabs, { PositionsEnum } from '../../elements/Tab/Tabs';\nimport DropDownButton, {\n  DropDownListItem,\n} from '../../elements/dropDownButton/DropDownButton';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { ModalStyles } from '../ModalStyle';\n\nimport ControllersTabContent from './ControllersTabContent';\nimport DisplayTabContent from './DisplayTabContent';\nimport FormattingTabContent from './FormattingTabContent';\nimport WorkspaceItem from './WorkspaceItem';\n\nconst styles = css`\n  .main-content {\n    width: 100%;\n    flex: 1;\n    overflow: auto;\n    border: none;\n  }\n\n  .tab-content {\n    width: 100%;\n  }\n\n  .section-header {\n    font-size: 13px;\n    color: #2ca8ff;\n    margin-bottom: 10px;\n    border-bottom: 0.55px solid #f9f9f9;\n    padding: 6px 2px;\n  }\n\n  .label {\n    font-size: 12px;\n    font-weight: bold;\n    margin-right: 10px;\n  }\n\n  .input {\n    font-size: 14px;\n    border-radius: 5px;\n    border: 1px solid #cccccc;\n    padding: 5px;\n    width: 100px;\n    margin-right: 10px;\n    height: initial !important;\n  }\n\n  .close-bt {\n    border: none;\n    color: red;\n    background-color: transparent;\n    outline: none;\n    position: absolute;\n    right: 10px;\n    top: 2px;\n    width: 30px;\n    height: 30px;\n  }\n\n  .checkbox-label {\n    min-width: 300px;\n    display: inline-block;\n  }\n\n  .help-checkbox-element {\n    .checkbox-label {\n      width: 260px;\n    }\n  }\n\n  .workspace-container {\n    display: flex;\n    background-color: #f4f4f4;\n    align-items: center;\n    cursor: default;\n    padding: 0.5em;\n    .dropdown {\n      padding: 0.4em 1em;\n    }\n    & .label {\n      font-size: 0.8em;\n    }\n  }\n`;\n\ninterface GeneralSettingsProps {\n  onClose?: () => void;\n}\n\nfunction GeneralSettings({ onClose }: GeneralSettingsProps) {\n  const [activeTab, setActiveTab] = useState('controllers');\n  const { dispatch, ...preferences } = usePreferences();\n  const alert = useAlert();\n  const refForm = useRef<any>();\n  const workspaces = useWorkspacesList();\n\n  const workspacesList = useMemo(() => {\n    return workspaces.concat([\n      {\n        key: 'new',\n        label: 'Custom workspace',\n      },\n    ]);\n  }, [workspaces]);\n\n  const handleSave = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n  const handleReset = useCallback(() => {\n    dispatch({ type: 'RESET_PREFERENCES' });\n    alert.success('Settings saved successfully');\n    onClose?.();\n  }, [alert, dispatch, onClose]);\n\n  const submitHandler = useCallback(\n    (values) => {\n      dispatch({ type: 'SET_PREFERENCES', payload: values });\n      alert.success('Settings saved successfully');\n\n      onClose?.();\n    },\n    [alert, dispatch, onClose],\n  );\n\n  const tabChangeHandler = useCallback((tab) => {\n    setActiveTab(tab.tabid);\n  }, []);\n\n  const addWorkSpaceHandler = useCallback(\n    (name) => {\n      dispatch({\n        type: 'ADD_WORKSPACE',\n        payload: {\n          workspace: name,\n          data: refForm.current.values,\n        },\n      });\n    },\n    [dispatch],\n  );\n  const deleteWorkSpaceHandler = useCallback(\n    (key) => {\n      dispatch({\n        type: 'REMOVE_WORKSPACE',\n        payload: {\n          workspace: key,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const ChangeWorkspaceHandler = useCallback(\n    (option: DropDownListItem) => {\n      dispatch({\n        type: 'SET_WORKSPACE',\n        payload: {\n          workspace: option.key,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const renderItem = useCallback(\n    (item) => {\n      return (\n        <WorkspaceItem\n          item={item}\n          onSave={addWorkSpaceHandler}\n          onDelete={deleteWorkSpaceHandler}\n        />\n      );\n    },\n    [addWorkSpaceHandler, deleteWorkSpaceHandler],\n  );\n\n  return (\n    <div css={[ModalStyles, styles]}>\n      <div className=\"header handle\">\n        <span>General Settings</span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"workspace-container\">\n        <span className=\"label\">Workspace : </span>\n\n        <DropDownButton\n          data={workspacesList}\n          renderItem={renderItem}\n          selectedKey={preferences?.workspace.current}\n          onSelect={ChangeWorkspaceHandler}\n        />\n      </div>\n      <div className=\"main-content\">\n        <FormikForm\n          key={JSON.stringify(preferences.current)}\n          ref={refForm}\n          initialValues={preferences.current}\n          onSubmit={submitHandler}\n        >\n          <Tabs\n            position={PositionsEnum.LEFT}\n            activeTab={activeTab}\n            onClick={tabChangeHandler}\n          >\n            <Tab tablabel=\"Controllers\" tabid=\"controllers\">\n              <div className=\"inner-content\">\n                <ControllersTabContent />\n              </div>\n            </Tab>\n\n            <Tab tablabel=\"Formatting\" tabid=\"formatting\">\n              <div className=\"inner-content\">\n                <FormattingTabContent />\n              </div>\n            </Tab>\n\n            <Tab tablabel=\"Display\" tabid=\"display\">\n              <div className=\"inner-content\">\n                <DisplayTabContent preferences={preferences.current.display} />\n              </div>\n            </Tab>\n          </Tabs>\n        </FormikForm>\n      </div>\n      <div className=\"footer-container\">\n        <button type=\"button\" onClick={handleSave} className=\"btn\">\n          Save\n        </button>\n        <button type=\"button\" onClick={handleReset} className=\"btn\">\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default GeneralSettings;\n","import { CSSProperties, useCallback, useRef } from 'react';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport CheckBox from '../elements/CheckBox';\nimport NumberInput from '../elements/NumberInput';\nimport { AUTO_PEAK_PICKING, RESET_SELECTED_TOOL } from '../reducer/types/Types';\n\nconst styles: Record<\n  'container' | 'input' | 'inputContainer' | 'label' | 'actionButton',\n  CSSProperties\n> = {\n  container: {\n    height: '100%',\n    display: 'flex',\n    fontSize: '12px',\n  },\n  input: {\n    width: '50px',\n  },\n  inputContainer: {\n    flex: '2',\n  },\n  label: {\n    flex: '5',\n  },\n  actionButton: {\n    height: '100%',\n    width: '60px',\n    borderRadius: '5px',\n    border: '0.55px solid #c7c7c7',\n    margin: '0px 5px',\n    userSelect: 'none',\n  },\n};\n\nfunction AutoPeakPickingOptionPanel() {\n  const dispatch = useDispatch();\n  const minMaxRatioRef = useRef<any>();\n  const maxNumberOfPeaksRef = useRef<any>();\n  const noiseFactor = useRef<any>();\n  const lookNegativeRef = useRef<any>();\n\n  const handleApplyFilter = useCallback(() => {\n    dispatch({\n      type: AUTO_PEAK_PICKING,\n      options: {\n        maxNumberOfPeaks: maxNumberOfPeaksRef.current.value,\n        minMaxRatio: minMaxRatioRef.current.value,\n        noiseFactor: noiseFactor.current.value,\n        lookNegative: lookNegativeRef.current.checked,\n      },\n    });\n  }, [dispatch]);\n\n  const handleCancelFilter = useCallback(() => {\n    dispatch({\n      type: RESET_SELECTED_TOOL,\n    });\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <NumberInput\n        ref={maxNumberOfPeaksRef}\n        label=\"Max Number Of Peaks:\"\n        name=\"maxNumberOfPeaks\"\n        style={{\n          input: styles.input,\n          inputContainer: styles.inputContainer,\n          label: styles.label,\n        }}\n        defaultValue={50}\n      />\n      <NumberInput\n        ref={noiseFactor}\n        label=\"Noise factor\"\n        name=\"noiseFactor\"\n        style={{\n          input: styles.input,\n          inputContainer: styles.inputContainer,\n          label: styles.label,\n        }}\n        defaultValue={3}\n      />\n      <NumberInput\n        ref={minMaxRatioRef}\n        label=\"Min Max Ratio:\"\n        name=\"minMaxRatio\"\n        style={{\n          input: styles.input,\n          inputContainer: styles.inputContainer,\n          label: styles.label,\n        }}\n        defaultValue={0.1}\n        step=\"0.01\"\n      />\n\n      <div style={{ justifyItems: 'baseline', marginRight: '3px' }}>\n        <label\n          style={{ marginRight: '2px', lineHeight: 2, userSelect: 'none' }}\n          htmlFor=\"lookNegative\"\n        >\n          Detect Negative:\n        </label>\n        <CheckBox name=\"lookNegative\" ref={lookNegativeRef} />\n      </div>\n\n      <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={handleApplyFilter}\n      >\n        Apply\n      </button>\n      <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={handleCancelFilter}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default AutoPeakPickingOptionPanel;\n","import { useCallback, useRef, useState, CSSProperties, useMemo } from 'react';\nimport * as Yup from 'yup';\n\nimport { baselineAlgorithms } from '../../data/data1d/filter1d/baselineCorrection';\nimport { useDispatch } from '../context/DispatchContext';\nimport Label from '../elements/Label';\nimport Select from '../elements/Select';\nimport FormikForm from '../elements/formik/FormikForm';\nimport FormikInput from '../elements/formik/FormikInput';\nimport {\n  RESET_SELECTED_TOOL,\n  APPLY_BASE_LINE_CORRECTION_FILTER,\n} from '../reducer/types/Types';\n\nconst styles: Record<'container' | 'label' | 'actionButton', CSSProperties> = {\n  container: {\n    padding: '5px',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  label: {\n    lineHeight: 2,\n    userSelect: 'none',\n  },\n  actionButton: {\n    height: '100%',\n    width: '60px',\n    borderRadius: '5px',\n    border: '0.55px solid #c7c7c7',\n    margin: '0px 5px',\n    userSelect: 'none',\n  },\n};\n\nfunction BaseLineCorrectionPanel() {\n  const dispatch = useDispatch();\n  const formRef = useRef<any>();\n  const algorithmRef = useRef<any>();\n\n  const [algorithm, setAlgorithm] = useState('polynomial');\n\n  const handleApplyFilter = useCallback(\n    (values) => {\n      let options = {};\n      switch (algorithm) {\n        case 'airpls':\n          options = {\n            algorithm: algorithmRef.current.value,\n            ...values,\n          };\n          break;\n        case 'polynomial':\n          options = {\n            algorithm: algorithmRef.current.value,\n            ...values,\n          };\n          break;\n        default:\n          break;\n      }\n      dispatch({\n        type: APPLY_BASE_LINE_CORRECTION_FILTER,\n        options,\n      });\n    },\n    [algorithm, dispatch],\n  );\n\n  const handleCancelFilter = useCallback(() => {\n    dispatch({\n      type: RESET_SELECTED_TOOL,\n    });\n  }, [dispatch]);\n\n  const getAlgorithmsList = useCallback(() => {\n    return Object.keys(baselineAlgorithms).map((val) => {\n      return { key: val, label: baselineAlgorithms[val], value: val };\n    });\n  }, []);\n\n  const changeAlgorithmHandler = useCallback((val) => {\n    setAlgorithm(val);\n  }, []);\n\n  const formData = useMemo(() => {\n    switch (algorithm) {\n      case 'airpls': {\n        const validation = Yup.object().shape({\n          maxIterations: Yup.number().integer().min(1).required(),\n          tolerance: Yup.number().moreThan(0).required(),\n        });\n        return {\n          validation,\n          initialValue: { maxIterations: 100, tolerance: 0.001 },\n        };\n      }\n      case 'autoPolynomial':\n      case 'polynomial': {\n        const validation = Yup.object().shape({\n          degree: Yup.number().integer().min(1).max(6).required(),\n        });\n\n        return { validation, initialValue: { degree: 3 } };\n      }\n      default:\n        return { validation: {}, initialValue: {} };\n    }\n  }, [algorithm]);\n\n  return (\n    <div style={styles.container}>\n      <span style={styles.label}>Algorithm: </span>\n      <Select\n        ref={algorithmRef}\n        data={getAlgorithmsList()}\n        style={{ marginLeft: 10, marginRight: 10 }}\n        onChange={changeAlgorithmHandler}\n        defaultValue=\"polynomial\"\n      />\n\n      <FormikForm\n        ref={formRef}\n        onSubmit={handleApplyFilter}\n        key={JSON.stringify(formData.initialValue)}\n        initialValues={formData.initialValue}\n        validationSchema={formData.validation}\n      >\n        {algorithm && algorithm === 'airpls' && (\n          <div style={{ display: 'flex' }}>\n            <Label title=\"maxIterations:\">\n              <FormikInput type=\"number\" name=\"maxIterations\" />\n            </Label>\n            <Label title=\"tolerance:\" style={{ label: { padding: '0 5px' } }}>\n              <FormikInput type=\"number\" name=\"tolerance\" />\n            </Label>\n          </div>\n        )}\n\n        {algorithm && ['autoPolynomial', 'polynomial'].includes(algorithm) && (\n          <Label title=\"degree [ 1 - 6 ]:\">\n            <FormikInput\n              type=\"number\"\n              name=\"degree\"\n              min={1}\n              max={6}\n              style={{ inputWrapper: { height: '100%' } }}\n            />\n          </Label>\n        )}\n      </FormikForm>\n      <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={() => formRef.current.submitForm()}\n      >\n        Apply\n      </button>\n\n      <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={handleCancelFilter}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default BaseLineCorrectionPanel;\n","import {\n  CSSProperties,\n  forwardRef,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n} from 'react';\n\nconst styles: Record<'container' | 'label', CSSProperties> = {\n  container: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0.55px solid #c7c7c7',\n    borderRadius: '5px',\n    userSelect: 'none',\n    backgroundColor: '#18ce0f14',\n    fontSize: '10px',\n    color: '#00801d',\n    margin: '0px 5px',\n    cursor: 'ew-resize',\n  },\n  label: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    maxWidth: '100%',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n  },\n};\n\ninterface InputRangeProps {\n  name: string;\n  value?: number;\n  onChange: (element: any) => void;\n  label?: string;\n  style?: CSSProperties;\n  className?: string;\n}\n\n// TODO: remove this hacky ref usage.\nfunction InputRange(props: InputRangeProps, ref: any) {\n  const { name, value = 0, onChange, label, style, className } = props;\n  const previousPosition = useRef(0);\n  const valueRef = useRef(value);\n\n  useImperativeHandle(ref, () => ({\n    setValue: (value) => {\n      valueRef.current = value;\n    },\n  }));\n\n  const mouseDownCallback = useCallback(\n    (event) => {\n      function mouseMoveCallback(event) {\n        let diff = event.clientX - previousPosition.current;\n        previousPosition.current = event.clientX;\n        if (event.buttons === 1) {\n          const step = diff / (event.shiftKey ? 10 : 1);\n          valueRef.current = valueRef.current + step;\n          onChange({\n            value: valueRef.current,\n            name,\n          });\n        }\n      }\n\n      function mouseUpCallback() {\n        window.removeEventListener('mousemove', mouseMoveCallback);\n        window.removeEventListener('mouseup', mouseUpCallback);\n      }\n\n      previousPosition.current = event.clientX;\n      window.addEventListener('mousemove', mouseMoveCallback);\n      window.addEventListener('mouseup', mouseUpCallback);\n    },\n    [name, onChange],\n  );\n\n  return (\n    <div\n      style={{ ...styles.container, ...style }}\n      className={className}\n      onMouseDown={mouseDownCallback}\n    >\n      <span style={styles.label}>{label}</span>\n    </div>\n  );\n}\n\nexport default forwardRef(InputRange);\n","import {\n  useMemo,\n  CSSProperties,\n  memo,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport * as Filters from '../../data/Filters';\nimport { Filter } from '../../data/FiltersManager';\nimport { Data1D, Datum1D } from '../../data/types/data1d';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport Input from '../elements/Input';\nimport InputRange from '../elements/InputRange';\nimport Label from '../elements/Label';\nimport Select from '../elements/Select';\nimport useSpectrum from '../hooks/useSpectrum';\nimport {\n  APPLY_MANUAL_PHASE_CORRECTION_FILTER,\n  APPLY_AUTO_PHASE_CORRECTION_FILTER,\n  CALCULATE_MANUAL_PHASE_CORRECTION_FILTER,\n  RESET_SELECTED_TOOL,\n  APPLY_ABSOLUTE_FILTER,\n} from '../reducer/types/Types';\n\nconst styles: Record<\n  'container' | 'input' | 'actionButton' | 'select',\n  CSSProperties\n> = {\n  container: {\n    padding: '5px',\n    height: '100%',\n    display: 'flex',\n  },\n  input: {\n    width: '100px',\n  },\n  actionButton: {\n    height: '100%',\n    width: '60px',\n    borderRadius: '5px',\n    border: '0.55px solid #c7c7c7',\n    margin: '0px 5px',\n    userSelect: 'none',\n  },\n  select: {\n    marginLeft: '5px',\n    marginRight: '10px',\n    border: 'none',\n    height: '20px',\n  },\n};\n\nconst phaseCorrectionTypes = {\n  manual: 'manual',\n  automatic: 'automatic',\n  absolute: 'absolute',\n};\n\nconst algorithms = [\n  {\n    key: phaseCorrectionTypes.manual,\n    label: 'Manual',\n    value: phaseCorrectionTypes.manual,\n  },\n  {\n    key: phaseCorrectionTypes.automatic,\n    label: 'Automatic',\n    value: phaseCorrectionTypes.automatic,\n  },\n  {\n    key: phaseCorrectionTypes.absolute,\n    label: 'Absolute',\n    value: phaseCorrectionTypes.absolute,\n  },\n];\n\ninterface ManualPhaseCorrectionPanelInnerProps {\n  data: Data1D;\n  pivot: { index: number };\n  filter: Filter | null;\n}\n\nfunction ManualPhaseCorrectionPanelInner({\n  data,\n  pivot,\n  filter,\n}: ManualPhaseCorrectionPanelInnerProps) {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState({ ph0: 0, ph1: 0 });\n  const valueRef = useRef({ ph0: 0, ph1: 0 });\n\n  const ph0Ref = useRef<any>();\n  const ph1Ref = useRef<any>();\n\n  const [phaseCorrectionType, setPhaseCorrectionType] = useState(\n    phaseCorrectionTypes.manual,\n  );\n\n  useEffect(() => {\n    if (filter) {\n      valueRef.current = filter.value;\n      setValue(filter.value);\n      ph0Ref.current.setValue(filter.value.ph0);\n      ph1Ref.current.setValue(filter.value.ph1);\n    } else {\n      ph0Ref.current.setValue(valueRef.current.ph0);\n      ph1Ref.current.setValue(valueRef.current.ph1);\n    }\n  }, [filter]);\n\n  const handleApplyFilter = useCallback(() => {\n    switch (phaseCorrectionType) {\n      case phaseCorrectionTypes.automatic: {\n        dispatch({\n          type: APPLY_AUTO_PHASE_CORRECTION_FILTER,\n        });\n        break;\n      }\n\n      case phaseCorrectionTypes.manual: {\n        dispatch({\n          type: APPLY_MANUAL_PHASE_CORRECTION_FILTER,\n          value,\n        });\n        break;\n      }\n      case phaseCorrectionTypes.absolute: {\n        dispatch({\n          type: APPLY_ABSOLUTE_FILTER,\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }, [dispatch, phaseCorrectionType, value]);\n\n  const calcPhaseCorrectionHandler = useCallback(\n    (newValues, filedName) => {\n      if (filedName === 'ph1' && data.re) {\n        const diff0 = newValues.ph0 - valueRef.current.ph0;\n        const diff1 = newValues.ph1 - valueRef.current.ph1;\n        newValues.ph0 += diff0 - (diff1 * pivot?.index) / data.re.length;\n      }\n\n      dispatch({\n        type: CALCULATE_MANUAL_PHASE_CORRECTION_FILTER,\n        value: newValues,\n      });\n    },\n    [data.re, dispatch, pivot?.index],\n  );\n\n  const handleInput = useCallback(\n    (e) => {\n      const { name, value } = e.target;\n      if (e.target) {\n        const newValue = { ...valueRef.current, [name]: value };\n        if (String(value).trim() !== '-') {\n          calcPhaseCorrectionHandler(newValue, name);\n        }\n        valueRef.current = newValue;\n        setValue(valueRef.current);\n      }\n    },\n    [calcPhaseCorrectionHandler],\n  );\n\n  const handleRangeChange = useCallback(\n    (e) => {\n      const newValue = { ...valueRef.current, [e.name]: e.value };\n      calcPhaseCorrectionHandler(newValue, e.name);\n      valueRef.current = newValue;\n      setValue(valueRef.current);\n    },\n    [calcPhaseCorrectionHandler],\n  );\n\n  const handleCancelFilter = useCallback(() => {\n    dispatch({\n      type: RESET_SELECTED_TOOL,\n    });\n  }, [dispatch]);\n\n  const onChangeHandler = useCallback((val) => {\n    setPhaseCorrectionType(val);\n  }, []);\n\n  return (\n    <div style={styles.container}>\n      <Select\n        onChange={onChangeHandler}\n        data={algorithms}\n        defaultValue={phaseCorrectionTypes.manual}\n        style={styles.select}\n      />\n\n      {phaseCorrectionType === phaseCorrectionTypes.manual && (\n        <>\n          <Label title=\"PH0 :\" style={{ wrapper: { marginRight: '5px' } }}>\n            <Input\n              name=\"ph0\"\n              style={{ input: styles.input }}\n              onChange={handleInput}\n              value={value.ph0}\n              type=\"number\"\n              debounceTime={250}\n            />\n          </Label>\n          <Label title=\"PH1 :\">\n            <Input\n              name=\"ph1\"\n              style={{ input: styles.input }}\n              onChange={handleInput}\n              value={value.ph1}\n              type=\"number\"\n              debounceTime={250}\n            />\n          </Label>\n          <InputRange\n            ref={ph0Ref}\n            name=\"ph0\"\n            label=\"Change Ph0 By mouse click and drag\"\n            style={{ width: '20%' }}\n            onChange={handleRangeChange}\n          />\n          <InputRange\n            ref={ph1Ref}\n            name=\"ph1\"\n            label=\"Change Ph1 By mouse click and drag\"\n            style={{ width: '20%' }}\n            onChange={handleRangeChange}\n          />\n        </>\n      )}\n\n      <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={handleApplyFilter}\n      >\n        Apply\n      </button>\n      <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={handleCancelFilter}\n      >\n        Cancel\n      </button>\n      {/* <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={handleAutoFilter}\n      >\n        Auto\n      </button> */}\n    </div>\n  );\n}\n\nconst MemoizedManualPhaseCorrectionPanel = memo(\n  ManualPhaseCorrectionPanelInner,\n);\n\nconst emptyData = { datum: {}, filter: null };\nexport default function ManualPhaseCorrectionPanel() {\n  const {\n    toolOptions: {\n      data: { pivot },\n    },\n  } = useChartData();\n\n  const { data, filters } = useSpectrum(emptyData) as Datum1D;\n\n  const filter = useMemo(() => {\n    return (\n      filters.find((filter) => filter.name === Filters.phaseCorrection.id) ||\n      null\n    );\n  }, [filters]);\n\n  return <MemoizedManualPhaseCorrectionPanel {...{ data, filter, pivot }} />;\n}\n","import { CSSProperties, useCallback, useRef } from 'react';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport CheckBox from '../elements/CheckBox';\nimport NumberInput from '../elements/NumberInput';\nimport {\n  AUTO_RANGES_DETECTION,\n  RESET_SELECTED_TOOL,\n} from '../reducer/types/Types';\n\nconst styles: Record<\n  'container' | 'input' | 'inputContainer' | 'label' | 'actionButton' | 'hint',\n  CSSProperties\n> = {\n  container: {\n    padding: '5px',\n    height: '100%',\n    display: 'flex',\n    fontSize: '12px',\n    alignItems: 'baseline',\n  },\n  input: {\n    height: '100%',\n    width: '50px',\n    borderRadius: '5px',\n    border: '0.55px solid #c7c7c7',\n    margin: '0px 5px 0px 5px',\n    textAlign: 'center',\n  },\n  inputContainer: {\n    flex: 2,\n  },\n  label: {\n    flex: 5,\n  },\n  actionButton: {\n    height: '100%',\n    minWidth: '60px',\n    borderRadius: '5px',\n    border: '0.55px solid #c7c7c7',\n    margin: '0px 5px',\n    userSelect: 'none',\n    padding: '3px',\n  },\n  hint: {\n    lineHeight: 2,\n    userSelect: 'none',\n    fontSize: '11px',\n  },\n};\n\nfunction RangesPickingOptionPanel() {\n  const dispatch = useDispatch();\n  const lookNegativeRef = useRef<any>();\n  const minMaxRatioRef = useRef<any>();\n\n  const handleApplyFilter = useCallback(() => {\n    dispatch({\n      type: AUTO_RANGES_DETECTION,\n      options: {\n        peakPicking: {\n          minMaxRatio: Number(minMaxRatioRef.current.value) || 0.05,\n          lookNegative: lookNegativeRef.current.checked,\n        },\n      },\n    });\n  }, [dispatch]);\n\n  const handleCancelFilter = useCallback(() => {\n    dispatch({\n      type: RESET_SELECTED_TOOL,\n    });\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <div style={{ justifyItems: 'baseline', margin: '0 10px' }}>\n        <label\n          style={{ marginRight: '2px', lineHeight: 2, userSelect: 'none' }}\n          htmlFor=\"lookNegative\"\n        >\n          Detect negative:\n        </label>\n        <CheckBox name=\"lookNegative\" ref={lookNegativeRef} />\n      </div>\n      <NumberInput\n        ref={minMaxRatioRef}\n        label=\"Min Max Ratio:\"\n        name=\"minMaxRatio\"\n        style={{\n          input: styles.input,\n          inputContainer: styles.inputContainer,\n          label: styles.label,\n        }}\n        defaultValue={0.05}\n        step=\"0.01\"\n      />\n      <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={handleApplyFilter}\n        data-test-id=\"auto-ranges-detection-btn\"\n      >\n        Auto ranges picking\n      </button>\n      <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={handleCancelFilter}\n      >\n        Cancel\n      </button>\n      <span style={styles.hint}>\n        Manual selection using SHIFT + select zone or click on Auto peak picking\n      </span>\n    </div>\n  );\n}\n\nexport default RangesPickingOptionPanel;\n","import { CSSProperties, useCallback, useRef, useState } from 'react';\n\nimport { Data1D } from '../../data/types/data1d';\nimport generateNumbersPowerOfX from '../../data/utilities/generateNumbersPowerOfX';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport Select from '../elements/Select';\nimport {\n  APPLY_ZERO_FILLING_FILTER,\n  RESET_SELECTED_TOOL,\n} from '../reducer/types/Types';\n\nconst styles: Record<\n  'container' | 'input' | 'actionButton' | 'label',\n  CSSProperties\n> = {\n  container: {\n    padding: '5px',\n    height: '100%',\n    display: 'flex',\n  },\n\n  input: {\n    height: '100%',\n    width: '80px',\n    borderRadius: '5px',\n    border: '0.55px solid #c7c7c7',\n    margin: '0px 5px 0px 5px',\n    textAlign: 'center',\n  },\n  actionButton: {\n    height: '100%',\n    width: '60px',\n    borderRadius: '5px',\n    border: '0.55px solid #c7c7c7',\n    margin: '0px 5px',\n    userSelect: 'none',\n  },\n  label: {\n    lineHeight: 2,\n    userSelect: 'none',\n  },\n};\n\nconst Sizes = generateNumbersPowerOfX(8, 21);\n\nfunction ZeroFillingOptionsPanel() {\n  const dispatch = useDispatch();\n  const { data, activeSpectrum } = useChartData();\n  const sizeTextInputRef = useRef<any>();\n  const [lineBroadeningValue, setLineBroadeningValue] = useState(1);\n\n  const handleApplyFilter = useCallback(() => {\n    dispatch({\n      type: APPLY_ZERO_FILLING_FILTER,\n      value: {\n        zeroFillingSize: Number(sizeTextInputRef.current.value),\n        lineBroadeningValue: lineBroadeningValue,\n      },\n    });\n  }, [dispatch, lineBroadeningValue]);\n\n  const getDefaultValue = useCallback(() => {\n    if (data && activeSpectrum?.id) {\n      return (\n        2 **\n        Math.round(\n          Math.log2((data[activeSpectrum.index].data as Data1D).x.length),\n        )\n      );\n    }\n    return '';\n  }, [activeSpectrum, data]);\n\n  const handleInput = useCallback(\n    (e) => {\n      if (e.target) {\n        const _value = e.target.validity.valid\n          ? Number(e.target.value)\n          : lineBroadeningValue;\n        setLineBroadeningValue(_value);\n      }\n    },\n    [lineBroadeningValue],\n  );\n\n  const handleCancelFilter = useCallback(() => {\n    dispatch({\n      type: RESET_SELECTED_TOOL,\n    });\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <span style={styles.label}>Size: </span>\n      <Select\n        ref={sizeTextInputRef}\n        data={Sizes}\n        style={{ marginLeft: 10, marginRight: 10 }}\n        defaultValue={getDefaultValue()}\n      />\n      <span style={styles.label}>Line Broadening: </span>\n      <input\n        name=\"line-broadening\"\n        style={styles.input}\n        type=\"number\"\n        defaultValue={lineBroadeningValue}\n        onInput={handleInput}\n        pattern=\"^\\d*(\\.\\d{0,2})?$\"\n        step=\"any\"\n      />\n\n      <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={handleApplyFilter}\n      >\n        Apply\n      </button>\n\n      <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={handleCancelFilter}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default ZeroFillingOptionsPanel;\n","import { CSSProperties, useCallback, useRef } from 'react';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport NumberInput from '../elements/NumberInput';\nimport {\n  RESET_SELECTED_TOOL,\n  AUTO_ZONES_DETECTION,\n  CHANGE_ZONES_NOISE_FACTOR,\n} from '../reducer/types/Types';\n\nconst styles: Record<\n  'container' | 'input' | 'inputContainer' | 'label' | 'actionButton',\n  CSSProperties\n> = {\n  container: {\n    padding: '5px',\n    height: '100%',\n    display: 'flex',\n    fontSize: '12px',\n  },\n  input: {\n    width: '50px',\n  },\n  inputContainer: {\n    flex: '2',\n  },\n  label: {\n    flex: '5',\n  },\n  actionButton: {\n    height: '100%',\n    borderRadius: '5px',\n    border: '0.55px solid #c7c7c7',\n    margin: '0px 5px',\n    userSelect: 'none',\n  },\n};\n\nfunction Zones2DOptionPanel() {\n  const dispatch = useDispatch();\n  const thresholdFactor = useRef<any>();\n\n  const handleApplyFilter = useCallback(() => {\n    dispatch({\n      type: AUTO_ZONES_DETECTION,\n      options: {\n        thresholdFactor: thresholdFactor.current.value,\n      },\n    });\n  }, [dispatch]);\n\n  const handleCancelFilter = useCallback(() => {\n    dispatch({\n      type: RESET_SELECTED_TOOL,\n    });\n  }, [dispatch]);\n\n  const handleInput = useCallback(\n    (e) => {\n      if (e.target) {\n        dispatch({ type: CHANGE_ZONES_NOISE_FACTOR, payload: e.target.value });\n      }\n    },\n    [dispatch],\n  );\n\n  return (\n    <div style={styles.container}>\n      <NumberInput\n        ref={thresholdFactor}\n        label=\"NoiseFactor\"\n        name=\"noiseFactor\"\n        style={{\n          input: styles.input,\n          inputContainer: styles.inputContainer,\n          label: styles.label,\n        }}\n        defaultValue={1}\n        onChange={handleInput}\n      />\n      <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={handleApplyFilter}\n      >\n        Auto Zones Picking\n      </button>\n      <button\n        type=\"button\"\n        style={styles.actionButton}\n        onClick={handleCancelFilter}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default Zones2DOptionPanel;\n","import { Header, Toolbar } from 'analysis-ui-components';\nimport { SvgLogoNmrium } from 'cheminfo-font';\nimport { useMemo, useCallback, memo } from 'react';\nimport {\n  FaRegWindowMaximize,\n  FaWrench,\n  FaQuestionCircle,\n} from 'react-icons/fa';\n\nimport { docsBaseUrl } from '../../constants';\nimport { useChartData } from '../context/ChartContext';\nimport {\n  usePreferences,\n  useWorkspacesList,\n} from '../context/PreferencesContext';\nimport DropDownButton, {\n  DropDownListItem,\n} from '../elements/dropDownButton/DropDownButton';\nimport { useModal, positions } from '../elements/popup/Modal';\nimport AboutUsModal from '../modal/AboutUsModal';\nimport GeneralSettings from '../modal/setting/GeneralSettings';\nimport { options } from '../toolbar/ToolTypes';\n\nimport AutoPeakPickingOptionPanel from './AutoPeakPickingOptionPanel';\nimport BaseLineCorrectionPanel from './BaseLineCorrectionPanel';\nimport ManualPhaseCorrectionPanel from './ManualPhaseCorrectionPanel';\nimport RangesPickingOptionPanel from './RangesPickingOptionPanel';\nimport ZeroFillingOptionsPanel from './ZeroFillingOptionsPanel';\nimport Zones2DOptionPanel from './Zones2DOptionPanel';\n\ninterface HeaderInnerProps {\n  onMaximize?: () => void;\n  isFullscreen: boolean;\n  selectedOptionPanel: string | null;\n}\n\nfunction HeaderInner(props: HeaderInnerProps) {\n  const { isFullscreen, onMaximize = () => null, selectedOptionPanel } = props;\n\n  const modal = useModal();\n  const {\n    current: {\n      display: { general },\n    },\n    workspace,\n    dispatch,\n  } = usePreferences();\n\n  const workspacesList = useWorkspacesList();\n  const hideGeneralSettings =\n    general?.hideGeneralSettings && workspace.base ? true : false;\n\n  const selectedPanel = useMemo(() => {\n    switch (selectedOptionPanel) {\n      case options.zeroFilling.id:\n        return <ZeroFillingOptionsPanel />;\n      case options.phaseCorrection.id:\n        return <ManualPhaseCorrectionPanel />;\n      case options.peakPicking.id:\n        return <AutoPeakPickingOptionPanel />;\n      case options.rangesPicking.id:\n        return <RangesPickingOptionPanel />;\n      case options.baseLineCorrection.id:\n        return <BaseLineCorrectionPanel />;\n      case options.zone2D.id:\n        return <Zones2DOptionPanel />;\n      default:\n        break;\n    }\n  }, [selectedOptionPanel]);\n\n  const openGeneralSettingsHandler = useCallback(() => {\n    modal.show(<GeneralSettings />, {\n      position: positions.TOP_CENTER,\n      enableResizing: true,\n      width: 600,\n      height: 400,\n    });\n  }, [modal]);\n\n  const openAboutUs = useCallback(() => {\n    modal.show(<AboutUsModal />, {\n      isBackgroundBlur: false,\n      position: positions.MIDDLE,\n      width: 500,\n      height: 480,\n    });\n  }, [modal]);\n\n  const changeWorkspaceHandler = useCallback(\n    (option: DropDownListItem) => {\n      dispatch({\n        type: 'SET_WORKSPACE',\n        payload: {\n          workspace: option.key,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  return (\n    <Header>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n        }}\n      >\n        <div>\n          <Toolbar orientation=\"horizontal\">\n            <Toolbar.Item\n              onClick={openAboutUs}\n              titleOrientation=\"horizontal\"\n              id=\"logo\"\n              title=\"About NMRium\"\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <SvgLogoNmrium />\n              </div>\n            </Toolbar.Item>\n          </Toolbar>\n        </div>\n        <div className=\"toolOptionsPanel\">{selectedPanel}</div>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n        }}\n      >\n        {!hideGeneralSettings && (\n          <DropDownButton\n            data={workspacesList}\n            selectedKey={workspace.current}\n            onSelect={changeWorkspaceHandler}\n          />\n        )}\n        <div>\n          <Toolbar orientation=\"horizontal\">\n            <Toolbar.Item\n              id=\"user-manual\"\n              title=\"User manual\"\n              onClick={() => window.open(docsBaseUrl, '_blank')}\n            >\n              <FaQuestionCircle />\n            </Toolbar.Item>\n            {!hideGeneralSettings && (\n              <Toolbar.Item\n                id=\"general-settings\"\n                onClick={openGeneralSettingsHandler}\n                title=\"General settings\"\n              >\n                <FaWrench />\n              </Toolbar.Item>\n            )}\n\n            {!isFullscreen && (\n              <Toolbar.Item\n                id=\"full-screen\"\n                onClick={onMaximize}\n                title=\"Full Screen\"\n                className=\"windowButton\"\n              >\n                <FaRegWindowMaximize />\n              </Toolbar.Item>\n            )}\n          </Toolbar>\n        </div>\n      </div>\n    </Header>\n  );\n}\n\nconst MemoizedHeader = memo(HeaderInner);\n\nexport default function HeaderWrapper({ isFullscreen, onMaximize }) {\n  const {\n    toolOptions: { selectedOptionPanel },\n  } = useChartData();\n  return (\n    <MemoizedHeader\n      {...{\n        selectedOptionPanel,\n        isFullscreen,\n        onMaximize,\n      }}\n    />\n  );\n}\n","export const FILES_TYPES = {\n  MOL: 'mol',\n  NMRIUM: 'nmrium',\n  JSON: 'json',\n  DX: 'dx',\n  JDX: 'jdx',\n  JDF: 'jdf',\n  ZIP: 'zip',\n  NMREDATA: 'nmredata',\n};\nexport const FILES_SIGNATURES = {\n  ZIP: '504b0304',\n};\n\nfunction getFileSignature(fileArrayBuffer) {\n  return new Uint8Array(fileArrayBuffer)\n    .slice(0, 4)\n    .reduce((acc, byte) => (acc += byte.toString(16).padStart(2, '0')), '');\n}\n\nasync function loadFile(file, options = { asBuffer: false }) {\n  const response = await fetch(file);\n  checkStatus(response);\n  const data = options.asBuffer ? response.arrayBuffer() : response.text();\n  return data;\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nfunction getFileExtension(name) {\n  return name.replace(/^.*\\./, '').toLowerCase();\n}\n\nfunction getFileName(name) {\n  return name.substr(0, name.lastIndexOf('.'));\n}\n\nfunction extractFileMetaFromPath(path) {\n  const meta = path.replace(/^.*[\\\\/]/, '').split('.');\n\n  return { name: meta[0].toLowerCase(), extension: meta[1].toLowerCase() };\n}\n/**\n *\n * @param {Array<File>} acceptedFiles\n * @param {object} options\n * @param {boolean} options.asBuffer\n * @returns\n */\nfunction loadFiles<T = unknown>(\n  acceptedFiles,\n  options: { asBuffer?: boolean } = {},\n) {\n  return Promise.all(\n    ([] as Array<T>).map.call(acceptedFiles, (file: any) => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onabort = (e) => reject(e);\n        reader.onerror = (e) => reject(e);\n        reader.onload = () => {\n          if (reader.result) {\n            const binary = reader.result;\n            const name = getFileName(file.name);\n            const extension = getFileExtension(file.name);\n            resolve({ binary, name, extension });\n          }\n        };\n        if (options.asBuffer) {\n          reader.readAsArrayBuffer(file);\n        } else {\n          reader.readAsBinaryString(file);\n        }\n      });\n    }),\n  ) as Promise<Array<T>>;\n}\n\nasync function loadFilesFromZip(files, options: { asBuffer?: boolean } = {}) {\n  const result: Array<{ binary: any; name: string; extension: string }> = [];\n  for (const file of files) {\n    try {\n      const binary = await file.async(options.asBuffer ? 'uint8array' : 'text');\n      const name = getFileName(file.name);\n      const extension = getFileExtension(file.name);\n      result.push({ binary, name, extension });\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(e);\n    }\n  }\n  return result;\n}\n\nexport {\n  loadFiles,\n  loadFilesFromZip,\n  loadFile,\n  getFileExtension,\n  getFileName,\n  extractFileMetaFromPath,\n  getFileSignature,\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Zip from 'jszip';\nimport { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FaUpload } from 'react-icons/fa';\n\nimport { File } from '../../data/types/common/File';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport { LoaderProvider } from '../context/LoaderContext';\nimport { useAlert } from '../elements/popup/Alert';\nimport {\n  LOAD_MOL_FILE,\n  LOAD_JSON_FILE,\n  LOAD_JCAMP_FILE,\n  SET_LOADING_FLAG,\n  LOAD_ZIP_FILE,\n  LOAD_JDF_FILE,\n  LOAD_NMREDATA_FILE,\n} from '../reducer/types/Types';\nimport {\n  FILES_TYPES,\n  FILES_SIGNATURES,\n  getFileExtension,\n  getFileSignature,\n  loadFiles,\n  loadFilesFromZip,\n} from '../utility/FileUtility';\n\nconst style = css`\n  height: 100%;\n  background-color: #b5b5b599;\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-flow: column;\n  z-index: 99999;\n\n  p {\n    color: white;\n    background-color: rgb(104, 104, 104);\n    padding: 1.5%;\n    border-radius: 30px;\n    margin: 0px;\n  }\n\n  svg {\n    stroke-width: 0;\n    font-size: 3rem !important;\n    fill: white;\n  }\n`;\n\nconst containerStyle = css`\n  border: 0.55px #e6e6e6 solid;\n  display: flex;\n  flex: 1;\n  flex-direction: 'column';\n  height: 100%;\n`;\n\nfunction DropZone(props) {\n  const { width, height } = useChartData();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const loadSubFilesFromZip = useCallback(\n    async (extractedfiles, uniqueFileExtensions) => {\n      for (let extension of uniqueFileExtensions) {\n        const selectedFilesByExtensions = extractedfiles.filter(\n          (file) => getFileExtension(file.name) === extension,\n        );\n\n        switch (extension) {\n          case FILES_TYPES.MOL: {\n            const files = await loadFilesFromZip(selectedFilesByExtensions);\n            dispatch({ type: LOAD_MOL_FILE, files });\n            break;\n          }\n          case FILES_TYPES.NMRIUM:\n          case FILES_TYPES.JSON: {\n            const files = await loadFilesFromZip(selectedFilesByExtensions, {\n              asBuffer: true,\n            });\n            if (selectedFilesByExtensions.length === 1) {\n              const decoder = new TextDecoder('utf8');\n              files[0].binary = decoder.decode(files[0].binary);\n\n              dispatch({ type: LOAD_JSON_FILE, files });\n            } else {\n              throw new Error('You can add only one json file');\n            }\n\n            break;\n          }\n          case FILES_TYPES.JDX:\n          case FILES_TYPES.DX: {\n            const files = await loadFilesFromZip(selectedFilesByExtensions, {\n              asBuffer: true,\n            });\n            dispatch({ type: LOAD_JCAMP_FILE, files });\n\n            break;\n          }\n          case FILES_TYPES.JDF: {\n            const files = await loadFilesFromZip(selectedFilesByExtensions, {\n              asBuffer: true,\n            });\n            dispatch({ type: LOAD_JDF_FILE, files });\n            break;\n          }\n          default:\n            break;\n        }\n      }\n    },\n    [dispatch],\n  );\n\n  const loadFilesHandler = useCallback(\n    async (files) => {\n      const uniqueFileExtensions = [\n        ...new Set(files.map((file) => getFileExtension(file.name))),\n      ];\n\n      for (let extension of uniqueFileExtensions) {\n        const selectedFilesByExtensions = files.filter(\n          (file) => getFileExtension(file.name) === extension,\n        );\n        try {\n          switch (extension) {\n            case FILES_TYPES.MOL: {\n              const files = await loadFiles(selectedFilesByExtensions);\n              dispatch({ type: LOAD_MOL_FILE, files });\n\n              break;\n            }\n            case FILES_TYPES.NMRIUM:\n            case FILES_TYPES.JSON:\n              if (selectedFilesByExtensions.length === 1) {\n                const files = await loadFiles<{ binary: any }>(\n                  selectedFilesByExtensions,\n                  {\n                    asBuffer: true,\n                  },\n                );\n                // InputFileFormat\n                const fileSignature = getFileSignature(files[0].binary);\n                if (fileSignature === FILES_SIGNATURES.ZIP) {\n                  const unzipResult = await Zip.loadAsync(files[0].binary);\n                  await loadSubFilesFromZip(Object.values(unzipResult.files), [\n                    FILES_TYPES.NMRIUM,\n                  ]);\n                } else {\n                  const decoder = new TextDecoder('utf8');\n                  files[0].binary = decoder.decode(files[0].binary);\n                  dispatch({ type: LOAD_JSON_FILE, files });\n                }\n              } else {\n                throw new Error('You can add only one json file');\n              }\n\n              break;\n            case FILES_TYPES.JDX:\n            case FILES_TYPES.DX: {\n              const files = await loadFiles(selectedFilesByExtensions, {\n                asBuffer: true,\n              });\n              dispatch({ type: LOAD_JCAMP_FILE, files });\n\n              break;\n            }\n            case FILES_TYPES.JDF: {\n              const files = await loadFiles(selectedFilesByExtensions, {\n                asBuffer: true,\n              });\n              dispatch({ type: LOAD_JDF_FILE, files });\n\n              break;\n            }\n            case FILES_TYPES.ZIP: {\n              const files: File[] = await loadFiles(selectedFilesByExtensions, {\n                asBuffer: true,\n              });\n              for (const zipFile of files) {\n                const unzipResult = await Zip.loadAsync(zipFile.binary);\n\n                const uniqueFileExtensions = [\n                  ...new Set(\n                    Object.values(unzipResult.files).map((file) =>\n                      getFileExtension(file.name),\n                    ),\n                  ),\n                ];\n                const isNotZip = uniqueFileExtensions.some(\n                  (ex) =>\n                    FILES_TYPES[ex.toUpperCase()] && ex !== FILES_TYPES.ZIP,\n                );\n                if (isNotZip) {\n                  const hasBruker = Object.keys(unzipResult.files).some(\n                    (path) => {\n                      return ['2rr', 'fid', '1r'].some((brukerFile) =>\n                        path.endsWith(brukerFile),\n                      );\n                    },\n                  );\n                  if (hasBruker) dispatch({ type: LOAD_ZIP_FILE, files });\n                  await loadSubFilesFromZip(\n                    Object.values(unzipResult.files),\n                    uniqueFileExtensions,\n                  );\n                } else {\n                  dispatch({ type: LOAD_ZIP_FILE, files });\n                }\n              }\n\n              break;\n            }\n            case FILES_TYPES.NMREDATA:\n              void loadFiles(selectedFilesByExtensions, {\n                asBuffer: true,\n              }).then(async (files) => {\n                for (const zipFile of files) {\n                  dispatch({\n                    type: LOAD_NMREDATA_FILE,\n                    file: zipFile,\n                  });\n                }\n              });\n              break;\n            default:\n              throw new Error(\n                'The file extension must be zip, dx, jdx, json, mol, nmredata or nmrium.',\n              );\n          }\n        } catch (e: any) {\n          dispatch({ type: SET_LOADING_FLAG, isLoading: false });\n          alert.error(e.message);\n        }\n      }\n    },\n    [alert, dispatch, loadSubFilesFromZip],\n  );\n\n  const onDrop = useCallback(\n    (droppedFiles) => {\n      dispatch({ type: SET_LOADING_FLAG, isLoading: true });\n      void loadFilesHandler(droppedFiles);\n    },\n    [dispatch, loadFilesHandler],\n  );\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    open: openImportDialog,\n  } = useDropzone({\n    onDrop,\n    noClick: true,\n  });\n\n  const open = useCallback(() => {\n    openImportDialog();\n  }, [openImportDialog]);\n\n  return (\n    <LoaderProvider value={open}>\n      <div {...getRootProps()} role=\"none\" css={containerStyle}>\n        <input data-test-id=\"dropzone-input\" {...getInputProps()} />\n        {isDragActive && (\n          <div\n            css={style}\n            style={{\n              width: `${width}px`,\n              height: `${height}px`,\n              marginTop: '30px',\n              marginLeft: '30px',\n            }}\n          >\n            <FaUpload />\n            <p>Drop your files here</p>\n          </div>\n        )}\n        {props.children}\n      </div>\n    </LoaderProvider>\n  );\n}\n\nexport default DropZone;\n","import * as types from './types/Types';\n\nconst ignoreActions = [\n  types.APPLY_KEY_PREFERENCES,\n  types.BRUSH_END,\n  types.RESET_DOMAIN,\n  types.RESET_SELECTED_TOOL,\n  types.SET_KEY_PREFERENCES,\n  types.SET_LOADING_FLAG,\n  types.SET_ORIGINAL_DOMAIN,\n  types.SET_SELECTED_FILTER,\n  types.SET_SELECTED_OPTIONS_PANEL,\n  types.SET_SELECTED_TOOL,\n  types.SET_SPECTRUMS_VERTICAL_ALIGN,\n  types.SET_VERTICAL_INDICATOR_X_POSITION,\n  types.SET_WIDTH,\n  types.SET_DIMENSIONS,\n  types.SET_X_DOMAIN,\n  types.SET_Y_DOMAIN,\n  types.SET_ZOOM,\n  types.TOGGLE_REAL_IMAGINARY_VISIBILITY,\n  types.CALCULATE_MANUAL_PHASE_CORRECTION_FILTER,\n  types.CHANGE_SPECTRUM_DISPLAY_VIEW_MODE,\n  types.FULL_ZOOM_OUT,\n  types.SAVE_AS_SVG,\n  types.SAVE_DATA_AS_JSON,\n  types.SET_ACTIVE_TAB,\n  types.CHANGE_VISIBILITY,\n  types.CHANGE_PEAKS_MARKERS_VISIBILITY,\n  types.CHANGE_ACTIVE_SPECTRUM,\n  types.CHANGE_SPECTRUM_COLOR,\n  types.SET_MOUSE_OVER_DISPLAYER,\n];\n\nfunction checkActionType(type: string): boolean {\n  if (!ignoreActions.includes(type)) return true;\n  return false;\n}\n\nexport default checkActionType;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Toolbar } from 'analysis-ui-components';\nimport {\n  ReactNode,\n  useState,\n  useCallback,\n  useRef,\n  useLayoutEffect,\n} from 'react';\n\nconst menuStyles = css`\n  .menu {\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n    padding: 0px;\n    margin: 0px;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    z-index: 99999;\n    padding: 2px;\n    background-color: white;\n\n    button:hover {\n      background-color: #fafafa;\n    }\n  }\n\n  .menu-cover {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n\n  .menu-item {\n    background-color: transparent;\n    border: none;\n    border-bottom: 0.55px solid whitesmoke;\n    height: 35px;\n    outline: outline;\n    display: table-cell;\n    vertical-align: middle;\n    text-align: left;\n    padding: 0 10px;\n\n    svg {\n      display: inline-block;\n    }\n\n    :focus {\n      outline: none !important;\n    }\n    span {\n      font-size: 10px;\n      padding: 0px 10px;\n    }\n  }\n`;\n\ninterface MenuItemProps {\n  icon: ReactNode;\n  label: string;\n  onClick: () => void;\n}\n\nfunction MenuItem({ icon, label, onClick }: MenuItemProps) {\n  return (\n    <button type=\"button\" className=\"menu-item\" onClick={onClick}>\n      {icon}\n      <span>{label}</span>\n    </button>\n  );\n}\n\ninterface MenuListProps {\n  items: Array<MenuItemProps & { id: string }>;\n  onClick: (element: MenuItemProps & { id: string }) => void;\n  boxBounding: any;\n}\n\nfunction MenuList({ items, boxBounding, onClick }: MenuListProps) {\n  const listRef = useRef<any>();\n  const [translate, setTranslate] = useState({\n    x: boxBounding.width,\n    y: boxBounding.height,\n  });\n\n  useLayoutEffect(() => {\n    const boxSize = listRef.current.getBoundingClientRect();\n    setTranslate((oldTransform) => {\n      let y = boxBounding.height;\n      if (boxSize.bottom > window.innerHeight) {\n        y = boxBounding.height * 2 + (boxSize.bottom - window.innerHeight);\n      }\n      return {\n        ...oldTransform,\n        y,\n      };\n    });\n  }, [boxBounding.height]);\n\n  return (\n    <div\n      ref={listRef}\n      className=\"menu\"\n      style={{\n        transform: `translate(${translate.x}px, -${translate.y}px) `,\n      }}\n    >\n      {items?.map((item) => {\n        return (\n          <MenuItem key={item.id} {...item} onClick={() => onClick(item)} />\n        );\n      })}\n    </div>\n  );\n}\n\ninterface MenuButtonProps {\n  component: any;\n  toolTip: string;\n  items: Array<any>;\n  onClick: (element: any) => void;\n}\n\nexport default function ToolbarMenu({\n  component,\n  toolTip = '',\n  items = [],\n  onClick = () => null,\n}: MenuButtonProps) {\n  const menuButtonRef = useRef<HTMLDivElement>(null);\n  const [isShown, showMenu] = useState(false);\n\n  const closeMenuButton = useCallback(() => {\n    showMenu(false);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    showMenu((flag) => !flag);\n  }, []);\n\n  const clickHandler = useCallback(\n    (e) => {\n      showMenu(false);\n      onClick(e);\n    },\n    [onClick],\n  );\n\n  const boxBounding = useCallback(() => {\n    return menuButtonRef.current?.getBoundingClientRect();\n  }, []);\n\n  return (\n    <div style={{ height: 'auto' }} css={menuStyles}>\n      <div ref={menuButtonRef}>\n        <Toolbar.Item\n          id={`menu-${toolTip}`}\n          title={toolTip}\n          active={isShown}\n          onClick={handleClick}\n        >\n          {component}\n        </Toolbar.Item>\n      </div>\n      {isShown && (\n        <MenuList\n          items={items}\n          boxBounding={boxBounding()}\n          onClick={clickHandler}\n        />\n      )}\n\n      {isShown && <div className=\"menu-cover\" onClick={closeMenuButton} />}\n    </div>\n  );\n}\n","import { useMemo } from 'react';\n\nimport { Info1D as Datum1DInfo, Data1D } from '../../data/types/data1d';\nimport { Info2D as Datum2DInfo, Data2D } from '../../data/types/data2d';\nimport { useChartData } from '../context/ChartContext';\nimport nucleusToString from '../utility/nucleusToString';\n\ninterface SpectrumWithStatisticsProps {\n  info: Datum1DInfo | Datum2DInfo;\n  datum: Data1D | Data2D;\n  ftCounter: number;\n  fidCounter: number;\n}\n\nconst emptyData = { info: {}, datum: {}, ftCounter: 0, fidCounter: 0 };\n\nexport default function useDatumWithSpectraStatistics(): SpectrumWithStatisticsProps {\n  const { data, activeSpectrum, activeTab } = useChartData();\n\n  return useMemo(() => {\n    if (data) {\n      let info: any = {};\n      let datum: any = {};\n      let ftCounter = 0;\n      let fidCounter = 0;\n\n      for (const dataInfo of data) {\n        const { isFid, isFt, nucleus } = dataInfo.info;\n\n        if (activeTab === nucleusToString(nucleus)) {\n          if (isFid) {\n            fidCounter++;\n          }\n          if (isFt) {\n            ftCounter++;\n          }\n          if (activeSpectrum && dataInfo.id === activeSpectrum.id) {\n            info = dataInfo.info;\n            datum = dataInfo.data;\n          }\n        }\n      }\n\n      return {\n        info,\n        datum,\n        ftCounter,\n        fidCounter,\n      };\n    }\n    return emptyData;\n  }, [activeSpectrum, data, activeTab]);\n}\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, useEffect, useMemo, CSSProperties } from 'react';\n\ninterface FormikTextareaProps\n  extends Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, 'style'> {\n  name: string;\n  style?: CSSProperties;\n  value?: string;\n  className?: string;\n}\n\nfunction FormikTextarea(props: FormikTextareaProps) {\n  const {\n    name,\n    style = {},\n    onChange = () => null,\n    className = '',\n    value,\n    placeholder = '',\n    ...resProps\n  } = props;\n\n  const { values, handleChange, setFieldValue, errors } = useFormikContext();\n\n  const changeHandler = useCallback(\n    (e) => {\n      onChange(e);\n      handleChange(e);\n    },\n    [handleChange, onChange],\n  );\n\n  useEffect(() => {\n    if (value) {\n      setFieldValue(name, value);\n    }\n  }, [name, setFieldValue, value]);\n\n  const isInvalid = useMemo(() => {\n    return lodashGet(errors, name);\n  }, [errors, name]);\n\n  return (\n    <textarea\n      {...{ name, className, placeholder }}\n      value={value ? value : lodashGet(values, name)}\n      onChange={changeHandler}\n      style={{\n        ...style,\n        ...(isInvalid && {\n          borderColor: 'red',\n          borderWidth: '1px',\n          outline: 'none',\n        }),\n      }}\n      {...resProps}\n    />\n  );\n}\n\nexport default FormikTextarea;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useRef } from 'react';\nimport * as yup from 'yup';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport CloseButton from '../elements/CloseButton';\nimport FormikForm from '../elements/formik/FormikForm';\nimport FormikTextarea from '../elements/formik/FormikTextarea';\nimport { useAlert } from '../elements/popup/Alert';\nimport { GENERATE_SPECTRUM_FROM_PUBLICATION_STRING } from '../reducer/types/Types';\n\nimport { ModalStyles } from './ModalStyle';\n\nconst styles = css`\n  width: 600px;\n  height: 300px;\n\n  .inner-content {\n    flex: 1;\n    border: none;\n    overflow: hidden;\n    padding: 0px;\n  }\n\n  .text-area {\n    width: 100%;\n    height: 100%;\n    outline: none;\n    resize: none;\n    padding: 0 0 0 15px;\n  }\n`;\n\nconst validationSchema = yup.object({\n  publicationText: yup.string().required(),\n});\n\ninterface ImportPublicationStringModalProps {\n  onClose: () => void;\n}\n\nfunction ImportPublicationStringModal({\n  onClose,\n}: ImportPublicationStringModalProps) {\n  const formRef = useRef<any>();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const publicationStringHandler = useCallback(\n    (values) => {\n      void (async () => {\n        const hideLoading = await alert.showLoading(\n          'Generate spectrum from publication string in progress',\n        );\n        setTimeout(() => {\n          dispatch({\n            type: GENERATE_SPECTRUM_FROM_PUBLICATION_STRING,\n            payload: values,\n          });\n          hideLoading();\n        });\n        onClose();\n      })();\n    },\n    [alert, dispatch, onClose],\n  );\n\n  return (\n    <div css={[ModalStyles, styles]}>\n      <div className=\"header handle\">\n        <span>Import from publication string</span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"inner-content\">\n        <FormikForm\n          ref={formRef}\n          initialValues={{\n            publicationText:\n              '1H NMR (CDCl3, 400MHz) δ 10.58 (b, 1H), 7.40 (d, 1H, J = 8.0 Hz), 6.19 (d, 1H, J = 7.6 Hz), 4.88 (s, 1H), 2.17 (s, 3H), 1.02 (s, 9H), 1.01 (s, 9H), 0.89 (s, 9H)',\n          }}\n          validationSchema={validationSchema}\n          onSubmit={publicationStringHandler}\n        >\n          <FormikTextarea\n            name=\"publicationText\"\n            className=\"text-area\"\n            placeholder=\"Enter publication string\"\n          />\n        </FormikForm>\n      </div>\n      <div className=\"footer-container\">\n        <button\n          type=\"button\"\n          onClick={() => formRef.current.submitForm()}\n          className=\"btn primary\"\n        >\n          Import\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImportPublicationStringModal;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useRef, useCallback } from 'react';\n\nimport CloseButton from '../elements/CloseButton';\nimport { loadFile, extractFileMetaFromPath } from '../utility/FileUtility';\n\nconst styles = css`\n  display: flex;\n  flex-direction: column;\n  width: 450px;\n  padding: 5px;\n  button:focus {\n    outline: none;\n  }\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    span {\n      color: #464646;\n      font-size: 15px;\n      flex: 1;\n    }\n\n    button {\n      background-color: transparent;\n      border: none;\n      svg {\n        height: 16px;\n      }\n    }\n  }\n  .container {\n    display: flex;\n    margin: 30px 5px;\n    input,\n    button {\n      padding: 5px;\n      border: 1px solid gray;\n      border-radius: 5px;\n      height: 36px;\n      margin: 2px;\n    }\n    input {\n      flex: 10;\n    }\n    button {\n      flex: 2;\n      color: white;\n      background-color: gray;\n    }\n  }\n`;\nconst allowedExtensions = ['dx', 'jdx'];\n\ninterface LoadJCAMPModalProps {\n  onLoadClick: (element: any) => void;\n  startLoading: () => void;\n  onClose: (element?: string) => void;\n}\n\nexport default function LoadJCAMPModal({\n  onLoadClick,\n  onClose,\n  startLoading,\n}: LoadJCAMPModalProps) {\n  const pathReft = useRef<any>();\n\n  const loadJCAMPHandler = useCallback(() => {\n    const path = pathReft.current.value;\n    const { name, extension } = extractFileMetaFromPath(path);\n    if (allowedExtensions.includes(extension)) {\n      startLoading?.();\n      void loadFile(path, { asBuffer: true }).then((data) => {\n        const file = {\n          binary: data,\n          name,\n          extension,\n          jcampURL: path,\n        };\n        onLoadClick(file);\n      });\n    } else {\n      onLoadClick(null);\n    }\n  }, [onLoadClick, startLoading]);\n  return (\n    <div css={styles}>\n      <div className=\"header handle\">\n        <span>Load JCAMP Dialog</span>\n\n        <CloseButton onClick={onClose} />\n      </div>\n      <div className=\"container\">\n        <input\n          ref={pathReft}\n          type=\"text\"\n          placeholder=\"Enter URL to JCAMP-DX file\"\n        />\n        <button type=\"button\" onClick={loadJCAMPHandler}>\n          Load\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { Toolbar } from 'analysis-ui-components';\nimport {\n  SvgNmrRealImag,\n  SvgNmrOverlay3,\n  SvgNmrOverlay3Aligned,\n  SvgNmrAlignBottom,\n  SvgNmrAlignCenter,\n} from 'cheminfo-font';\nimport { Fragment, useCallback, memo, useMemo } from 'react';\nimport {\n  FaDownload,\n  FaFileDownload,\n  FaFileImage,\n  FaCopy,\n  FaFileExport,\n  FaFile,\n  FaFileImport,\n} from 'react-icons/fa';\n\nimport { Info1D } from '../../data/types/data1d';\nimport { Info2D } from '../../data/types/data2d';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport { useLoader } from '../context/LoaderContext';\nimport ToolbarMenu from '../elements/ToolbarMenu';\nimport { useAlert } from '../elements/popup/Alert';\nimport { useModal } from '../elements/popup/Modal';\nimport useCheckExperimentalFeature from '../hooks/useCheckExperimentalFeature';\nimport { useCheckToolsVisibility } from '../hooks/useCheckToolsVisibility';\nimport useDatumWithSpectraStatistics from '../hooks/useDatumWithSpectraStatistics';\nimport useExport from '../hooks/useExport';\nimport useToolsFunctions from '../hooks/useToolsFunctions';\nimport ImportPublicationStringModal from '../modal/ImportPublicationStringModal';\nimport LoadJCAMPModal from '../modal/LoadJCAMPModal';\nimport { ActiveSpectrum, VerticalAlignment } from '../reducer/Reducer';\nimport { DISPLAYER_MODE } from '../reducer/core/Constants';\nimport { LOAD_JCAMP_FILE, SET_LOADING_FLAG } from '../reducer/types/Types';\n\nconst IMPORT_MENU = [\n  {\n    id: 'importFile',\n    icon: <FaFile />,\n    label: 'Import from file system (Press Ctrl + O)',\n  },\n  {\n    id: 'importJDX',\n    icon: <FaFile />,\n    label: 'Add JCAMP-DX from URL',\n  },\n  {\n    id: 'importPublicationString',\n    icon: <FaFile />,\n    label: 'Import from publication string',\n  },\n];\n\nconst EXPORT_MENU = [\n  {\n    id: 'svg',\n    icon: <FaDownload />,\n    label: 'Export as SVG',\n  },\n  {\n    id: 'png',\n    icon: <FaFileImage />,\n    label: 'Export as PNG',\n  },\n  {\n    id: 'json',\n    icon: <FaFileDownload />,\n    label: 'Save data ( Press Ctrl + S )',\n  },\n  {\n    id: 'advance_save',\n    icon: <FaFileDownload />,\n    label: 'Save data as  ( Press Ctrl + Shift + S )',\n  },\n  {\n    id: 'nmre',\n    icon: <FaFileDownload />,\n    label: 'Save NMRE data',\n  },\n  {\n    id: 'copy',\n    icon: <FaCopy />,\n    label: 'Copy image to Clipboard ( Press Ctrl + C )',\n  },\n];\n\ninterface BasicToolBarInnerProps {\n  activeSpectrum: ActiveSpectrum | null;\n  fidCounter: number;\n  ftCounter: number;\n  displayerMode: DISPLAYER_MODE;\n  info: Info1D | Info2D;\n  verticalAlign: {\n    align: VerticalAlignment;\n  };\n}\n\nfunction BasicToolBarInner({\n  info,\n  verticalAlign,\n  displayerMode,\n  ftCounter,\n  fidCounter,\n  activeSpectrum,\n}: BasicToolBarInnerProps) {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const modal = useModal();\n  const openLoader = useLoader();\n\n  const isExperimentalFeature = useCheckExperimentalFeature();\n  const isButtonVisible = useCheckToolsVisibility();\n\n  const importMenu = useMemo(() => {\n    return isExperimentalFeature\n      ? IMPORT_MENU\n      : IMPORT_MENU.filter((item) => item.id !== 'importPublicationString');\n  }, [isExperimentalFeature]);\n\n  const {\n    isRealSpectrumShown,\n    changeSpectrumViewHandler,\n    changeDisplayViewModeHandler,\n    alignSpectrumsVerticallyHandler,\n  } = useToolsFunctions();\n\n  const {\n    saveAsSVGHandler,\n    saveAsPNGHandler,\n    saveAsJSONHandler,\n    saveAsNMREHandler,\n    saveToClipboardHandler,\n    saveAsHandler,\n  } = useExport();\n\n  const LoadJacmpHandler = useCallback(\n    (file) => {\n      if (file) {\n        dispatch({ type: LOAD_JCAMP_FILE, files: [file] });\n        modal.close();\n      } else {\n        alert.error('you file must be one of those extensions [ .jdx, dx ] ');\n      }\n    },\n    [alert, dispatch, modal],\n  );\n\n  const startLoadingHandler = useCallback(() => {\n    modal.close();\n    dispatch({ type: SET_LOADING_FLAG, isLoading: true });\n  }, [dispatch, modal]);\n\n  const importJCAMPFile = useCallback(() => {\n    modal.show(\n      <LoadJCAMPModal\n        onLoadClick={LoadJacmpHandler}\n        onClose={() => modal.close()}\n        startLoading={startLoadingHandler}\n      />,\n      {},\n    );\n  }, [LoadJacmpHandler, modal, startLoadingHandler]);\n\n  const openImportPublicationStringModal = useCallback(() => {\n    modal.show(\n      <ImportPublicationStringModal onClose={() => modal.close()} />,\n      {},\n    );\n  }, [modal]);\n\n  const importHandler = useCallback(\n    ({ id }) => {\n      switch (id) {\n        case 'importFile':\n          openLoader();\n          break;\n        case 'importJDX':\n          importJCAMPFile();\n          break;\n        case 'importPublicationString':\n          openImportPublicationStringModal();\n          break;\n        default:\n          return;\n      }\n    },\n    [openLoader, importJCAMPFile, openImportPublicationStringModal],\n  );\n\n  const exportHandler = useCallback(\n    ({ id }) => {\n      switch (id) {\n        case 'svg':\n          void saveAsSVGHandler();\n          break;\n        case 'png':\n          void saveAsPNGHandler();\n          break;\n        case 'json':\n          void saveAsJSONHandler();\n          break;\n        case 'advance_save':\n          void saveAsHandler();\n          break;\n        case 'nmre':\n          void saveAsNMREHandler();\n          break;\n        case 'copy':\n          void saveToClipboardHandler();\n          break;\n\n        default:\n          break;\n      }\n    },\n    [\n      saveAsSVGHandler,\n      saveAsPNGHandler,\n      saveAsJSONHandler,\n      saveAsHandler,\n      saveAsNMREHandler,\n      saveToClipboardHandler,\n    ],\n  );\n\n  return (\n    <Fragment>\n      {isButtonVisible('import') && (\n        <ToolbarMenu\n          component={<FaFileImport />}\n          toolTip=\"Import\"\n          onClick={(element) => {\n            importHandler(element);\n            return null;\n          }}\n          items={importMenu}\n        />\n      )}\n      {isButtonVisible('exportAs') && (\n        <ToolbarMenu\n          component={<FaFileExport />}\n          toolTip=\"Export As\"\n          onClick={(element) => {\n            exportHandler(element);\n            return null;\n          }}\n          items={EXPORT_MENU}\n        />\n      )}\n\n      {displayerMode === DISPLAYER_MODE.DM_1D &&\n        isButtonVisible('spectraStackAlignments') &&\n        ftCounter > 1 &&\n        (info?.isFt || !activeSpectrum) && (\n          <Toolbar.Item\n            id=\"spectra-alignment\"\n            className=\"cheminfo\"\n            title=\"Spectra alignment ( Press s )\"\n            onClick={changeDisplayViewModeHandler}\n          >\n            {verticalAlign.align === 'stack' ? (\n              <SvgNmrOverlay3Aligned />\n            ) : (\n              <SvgNmrOverlay3 />\n            )}\n          </Toolbar.Item>\n        )}\n      {displayerMode === DISPLAYER_MODE.DM_1D &&\n        isButtonVisible('realImaginary') &&\n        info.isComplex && (\n          <Toolbar.Item\n            id=\"display\"\n            title={isRealSpectrumShown ? 'Display Real ' : 'Display Imaginary'}\n            onClick={changeSpectrumViewHandler}\n            className=\"cheminfo\"\n          >\n            <SvgNmrRealImag />\n          </Toolbar.Item>\n        )}\n      {displayerMode === DISPLAYER_MODE.DM_1D &&\n        isButtonVisible('spectraCenterAlignments') &&\n        (ftCounter > 0 || fidCounter > 0) && (\n          <Toolbar.Item\n            id=\"baseline-position\"\n            title={\n              verticalAlign.align === 'bottom'\n                ? 'Baseline  Center ( Press c )'\n                : 'Baseline  Bottom ( Press c )'\n            }\n            onClick={alignSpectrumsVerticallyHandler}\n            className=\"cheminfo\"\n          >\n            <div style={{ fontSize: 24 }}>\n              {verticalAlign.align === 'bottom' ? (\n                <SvgNmrAlignCenter />\n              ) : (\n                <SvgNmrAlignBottom />\n              )}\n            </div>\n          </Toolbar.Item>\n        )}\n    </Fragment>\n  );\n}\n\nconst MemoizedBasicToolBar = memo(BasicToolBarInner);\n\nexport default function BasicToolBar() {\n  const { activeSpectrum, verticalAlign, displayerMode, activeTab } =\n    useChartData();\n\n  const { info, fidCounter, ftCounter } = useDatumWithSpectraStatistics();\n  return (\n    <MemoizedBasicToolBar\n      {...{\n        info,\n        fidCounter,\n        ftCounter,\n        activeSpectrum,\n        verticalAlign,\n        displayerMode,\n        activeTab,\n      }}\n    />\n  );\n}\n","import { Toolbar } from 'analysis-ui-components';\nimport {\n  useCallback,\n  useState,\n  useEffect,\n  ReactElement,\n  JSXElementConstructor,\n} from 'react';\n\ninterface ToggleButtonProps {\n  isActive?: boolean;\n  value?: any;\n  onChange?: (value: any) => null;\n  children: ReactElement<any, string | JSXElementConstructor<any>>;\n  isVisible?: boolean;\n}\n\nexport default function ToggleButton(\n  props: ToggleButtonProps & { title: string; id: string },\n) {\n  const {\n    children,\n    value = null,\n    isActive = false,\n    onChange = () => null,\n    isVisible = true,\n    id,\n    title,\n  } = props;\n\n  const [active, setActive] = useState(props.isActive);\n\n  const toggleButton = useCallback(() => {\n    const _isActive = !active;\n    setActive(_isActive);\n\n    if (_isActive) {\n      onChange(value);\n    } else {\n      onChange(null);\n    }\n  }, [active, onChange, value]);\n\n  useEffect(() => {\n    setActive(isActive);\n  }, [isActive]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <Toolbar.Item onClick={toggleButton} title={title} id={id} active={active}>\n      {children}\n    </Toolbar.Item>\n  );\n}\n","import {\n  useCallback,\n  useState,\n  useMemo,\n  useEffect,\n  Children,\n  cloneElement,\n  ReactNode,\n} from 'react';\n\nimport ToggleButton from './ToggleButton';\n\ninterface ToggleButtonGroupProps {\n  children: ReactNode;\n  value: string;\n  onChange?: (value: any) => void;\n}\n\nexport default function ToggleButtonGroup({\n  children,\n  value,\n  onChange = () => null,\n}: ToggleButtonGroupProps) {\n  const [toggleButtons, setToggleButtons] = useState<any>([]);\n  const handleOnChange = useCallback(\n    (val) => {\n      const _toggles: Array<any> = [...toggleButtons];\n      const toggles = _toggles.map((toggle) => {\n        return {\n          value: toggle.value,\n          isActive: toggle.value === val ? true : false,\n        };\n      });\n\n      setToggleButtons(toggles);\n      onChange(val);\n    },\n    [onChange, toggleButtons],\n  );\n\n  const mappedChildren = useMemo(() => {\n    let index = 0;\n    return Children.map(children, (child: any) => {\n      if (child) {\n        if (child.type === ToggleButton) {\n          const _child = cloneElement(child, {\n            onChange: handleOnChange,\n            isActive: toggleButtons[index]?.isActive,\n            index,\n          });\n          index++;\n          return _child;\n        } else {\n          return cloneElement(child);\n        }\n      }\n    });\n  }, [children, handleOnChange, toggleButtons]);\n\n  useEffect(() => {\n    const val = Children.map(children, (child: any) => {\n      if (child && child.type === ToggleButton) {\n        return {\n          value: child.props.value,\n          isActive: child.props.value === value ? true : false,\n        };\n      }\n    });\n    setToggleButtons(val);\n  }, [children, value]);\n\n  return <>{mappedChildren}</>;\n}\n","import { Toolbar } from 'analysis-ui-components';\nimport {\n  SvgNmrBaselineCorrection,\n  SvgNmrFourierTransform,\n  SvgNmrIntegrate,\n  SvgNmrMultipleAnalysis,\n  SvgNmrPeakPicking,\n  SvgNmrPhaseCorrection,\n  SvgNmrRangePicking,\n  SvgNmrZeroFilling,\n} from 'cheminfo-font';\nimport { useState, useEffect, useCallback, memo } from 'react';\nimport { FaSearchPlus, FaExpand, FaDiceFour } from 'react-icons/fa';\n\nimport * as Filters from '../../data/Filters';\nimport { Info1D, Data1D } from '../../data/types/data1d';\nimport { Info2D, Data2D } from '../../data/types/data2d';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport ToggleButton from '../elements/toggle/ToggleButton';\nimport ToggleButtonGroup from '../elements/toggle/ToggleButtonGroup';\nimport { useCheckToolsVisibility } from '../hooks/useCheckToolsVisibility';\nimport useDatumWithSpectraStatistics from '../hooks/useDatumWithSpectraStatistics';\nimport useToolsFunctions from '../hooks/useToolsFunctions';\nimport { ActiveSpectrum } from '../reducer/Reducer';\nimport { DISPLAYER_MODE } from '../reducer/core/Constants';\nimport { APPLY_FFT_FILTER, SET_SELECTED_FILTER } from '../reducer/types/Types';\n\nimport { options } from './ToolTypes';\n\ninterface FunctionToolBarInnerProps {\n  defaultValue: string;\n  activeSpectrum: ActiveSpectrum | null;\n  ftCounter: number;\n  displayerMode: DISPLAYER_MODE;\n  info: Info1D | Info2D;\n  datum: Data1D | Data2D;\n  mode: string;\n}\n\nfunction FunctionToolBarInner({\n  defaultValue,\n  activeSpectrum,\n  info,\n  datum,\n  displayerMode,\n  ftCounter,\n  mode,\n}: FunctionToolBarInnerProps) {\n  const [option, setOption] = useState<string>('');\n  const isButtonVisible = useCheckToolsVisibility();\n\n  const dispatch = useDispatch();\n\n  const { handleChangeOption, handleFullZoomOut } = useToolsFunctions();\n\n  const handleChange = useCallback(\n    (selectedOption) => {\n      setOption(selectedOption);\n      handleChangeOption(selectedOption);\n    },\n    [handleChangeOption],\n  );\n\n  useEffect(() => {\n    setOption(defaultValue);\n  }, [defaultValue]);\n\n  const handleOnFFTFilter = useCallback(() => {\n    dispatch({\n      type: APPLY_FFT_FILTER,\n      value: '',\n    });\n    dispatch({ type: SET_SELECTED_FILTER, selectedFilter: null });\n  }, [dispatch]);\n\n  return (\n    <>\n      <ToggleButtonGroup value={option} onChange={handleChange}>\n        {isButtonVisible('zoomTool') && (\n          <ToggleButton\n            key={options.zoom.id}\n            value={options.zoom.id}\n            id=\"zoomIn\"\n            title={`${options.zoom.label} ( Press z )`}\n          >\n            <div style={{ fontSize: 14 }}>\n              <FaSearchPlus />\n            </div>\n          </ToggleButton>\n        )}\n\n        {isButtonVisible('zoomOutTool') && (\n          <Toolbar.Item\n            id=\"zoom-out\"\n            onClick={handleFullZoomOut}\n            title=\"Horizontal zoom out ( Press f ), Horizontal and Vertical zoom out, double click ( Press ff )\"\n          >\n            <div style={{ fontSize: 14 }}>\n              <FaExpand />\n            </div>\n          </Toolbar.Item>\n        )}\n\n        {displayerMode === DISPLAYER_MODE.DM_1D && isButtonVisible('peakTool') && (\n          <ToggleButton\n            key={options.peakPicking.id}\n            value={options.peakPicking.id}\n            title={`${options.peakPicking.label} ( Press p )`}\n            isVisible={activeSpectrum && !info?.isFid ? true : false}\n            id=\"peakPicking\"\n          >\n            <SvgNmrPeakPicking />\n          </ToggleButton>\n        )}\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('integralTool') && (\n            <ToggleButton\n              key={options.integral.id}\n              value={options.integral.id}\n              isVisible={activeSpectrum && !info?.isFid ? true : false}\n              id=\"integralPicking\"\n              title={`${options.integral.label} ( Press i )`}\n            >\n              <SvgNmrIntegrate />\n            </ToggleButton>\n          )}\n        {displayerMode === DISPLAYER_MODE.DM_2D &&\n          isButtonVisible('zonePickingTool') && (\n            <ToggleButton\n              key={options.zone2D.id}\n              value={options.zone2D.id}\n              id=\"zone2d\"\n              isVisible={activeSpectrum && !info?.isFid ? true : false}\n              title={`${options.zone2D.label} ( Press r )`}\n            >\n              <FaDiceFour />\n            </ToggleButton>\n          )}\n        {displayerMode === DISPLAYER_MODE.DM_2D &&\n          isButtonVisible('slicingTool') && (\n            <ToggleButton\n              key={options.slicingTool.id}\n              value={options.slicingTool.id}\n              isVisible={activeSpectrum && !info?.isFid ? true : false}\n              id=\"slic\"\n              title={`${options.slicingTool.label}`}\n            >\n              <p>Slic</p>\n            </ToggleButton>\n          )}\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('autoRangesTool') && (\n            <ToggleButton\n              key={options.rangesPicking.id}\n              value={options.rangesPicking.id}\n              isVisible={activeSpectrum && !info?.isFid ? true : false}\n              title={`${options.rangesPicking.label} ( Press r )`}\n              id=\"ranges-pick\"\n            >\n              <SvgNmrRangePicking />\n            </ToggleButton>\n          )}\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('multipleSpectraAnalysisTool') &&\n          ftCounter > 1 &&\n          mode === 'RTL' && (\n            <ToggleButton\n              key={options.multipleSpectraAnalysis.id}\n              value={options.multipleSpectraAnalysis.id}\n              id=\"multipleSpectraAnalysis\"\n              title={options.multipleSpectraAnalysis.label}\n            >\n              <SvgNmrMultipleAnalysis />\n            </ToggleButton>\n          )}\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('zeroFillingTool') && (\n            <ToggleButton\n              key={options.zeroFilling.id}\n              value={options.zeroFilling.id}\n              isVisible={Filters.zeroFilling.isApplicable({ info })}\n              id=\"zeroFilling\"\n              title={options.zeroFilling.label}\n            >\n              <SvgNmrZeroFilling />\n            </ToggleButton>\n          )}\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('phaseCorrectionTool') && (\n            <ToggleButton\n              key={options.phaseCorrection.id}\n              value={options.phaseCorrection.id}\n              id=\"phaseCorrection\"\n              title={`${options.phaseCorrection.label} ( Press a )`}\n              isVisible={\n                activeSpectrum &&\n                info &&\n                Filters.phaseCorrection.isApplicable({ info }) &&\n                (datum as Data1D).im\n                  ? true\n                  : false\n              }\n            >\n              <SvgNmrPhaseCorrection />\n            </ToggleButton>\n          )}\n\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('baseLineCorrectionTool') && (\n            <ToggleButton\n              key={options.baseLineCorrection.id}\n              value={options.baseLineCorrection.id}\n              id=\"baseLineCorrection\"\n              title={`${options.baseLineCorrection.label} ( Press b )`}\n              isVisible={\n                activeSpectrum &&\n                info &&\n                Filters.baselineCorrection.isApplicable({ info })\n                  ? true\n                  : false\n              }\n            >\n              <SvgNmrBaselineCorrection />\n            </ToggleButton>\n          )}\n\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('exclusionZonesTool') &&\n          !info?.isFid &&\n          ftCounter > 0 && (\n            <ToggleButton\n              key={options.exclusionZones.id}\n              value={options.exclusionZones.id}\n              title={`${options.exclusionZones.label} ( Press e )`}\n              id=\"exclusionZones\"\n            >\n              <div style={{ fontSize: 18 }}>\n                <SvgNmrMultipleAnalysis />\n              </div>\n            </ToggleButton>\n          )}\n      </ToggleButtonGroup>\n\n      {displayerMode === DISPLAYER_MODE.DM_1D &&\n        isButtonVisible('FFTTool') &&\n        info &&\n        Filters.fft.isApplicable({ info }) && (\n          <Toolbar.Item\n            id=\"fft-filter\"\n            className=\"cheminfo\"\n            title=\"FFT Filter\"\n            onClick={handleOnFFTFilter}\n          >\n            <SvgNmrFourierTransform />\n          </Toolbar.Item>\n        )}\n    </>\n  );\n}\n\nconst MemoizedFunctionToolBar = memo(FunctionToolBarInner);\n\nexport default function FunctionToolBar({\n  defaultValue = options.zoom.id,\n}: {\n  defaultValue?: string;\n}) {\n  const { activeSpectrum, displayerMode, activeTab, mode } = useChartData();\n\n  const data = useDatumWithSpectraStatistics();\n\n  return (\n    <MemoizedFunctionToolBar\n      {...{\n        ...data,\n        activeSpectrum,\n        displayerMode,\n        activeTab,\n        defaultValue,\n        mode,\n      }}\n    />\n  );\n}\n","import { Toolbar } from 'analysis-ui-components';\nimport { memo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nimport BasicToolBar from './BasicToolBar';\nimport FunctionToolBar from './FunctionToolBar';\n\ninterface ToolBarInnerProps {\n  selectedTool: string;\n}\n\nfunction ToolBarInner({ selectedTool }: ToolBarInnerProps) {\n  return (\n    <div style={{ fontSize: 18 }}>\n      <Toolbar orientation=\"vertical\">\n        <FunctionToolBar defaultValue={selectedTool} />\n        {/* <HistoryToolBar /> */}\n        <BasicToolBar />\n      </Toolbar>\n    </div>\n  );\n}\n\nconst MemoizedToolBar = memo(ToolBarInner);\n\nexport default function ToolBar() {\n  const {\n    toolOptions: { selectedTool },\n  } = useChartData();\n\n  return <MemoizedToolBar {...{ selectedTool }} />;\n}\n","/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport { RootLayout, SplitPane } from 'analysis-ui-components';\nimport { CorrelationData } from 'nmr-correlation';\nimport {\n  useEffect,\n  useCallback,\n  useReducer,\n  useMemo,\n  useRef,\n  memo,\n  Reducer,\n  ReactElement,\n  ReactNode,\n} from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { useToggle, useFullscreen } from 'react-use';\n\nimport { Datum1D } from '../data/types/data1d';\nimport { Datum2D } from '../data/types/data2d';\nimport checkModifierKeyActivated from '../data/utilities/checkModifierKeyActivated';\nimport { PanelPreferencesType } from '../types/PanelPreferencesType';\n\nimport Viewer1D from './1d/Viewer1D';\nimport Viewer2D from './2d/Viewer2D';\nimport ErrorOverlay from './ErrorOverlay';\nimport KeysListenerTracker from './EventsTrackers/KeysListenerTracker';\nimport { AssignmentProvider } from './assignment';\nimport { ChartDataProvider } from './context/ChartContext';\nimport { DispatchProvider } from './context/DispatchContext';\nimport { GlobalProvider } from './context/GlobalContext';\nimport { PreferencesProvider } from './context/PreferencesContext';\nimport { AlertProvider } from './elements/popup/Alert';\nimport { ModalProvider } from './elements/popup/Modal';\nimport Header from './header/Header';\nimport { HighlightProvider } from './highlight';\nimport DropZone from './loader/DropZone';\nimport { defaultGetSpinner, SpinnerProvider } from './loader/SpinnerContext';\nimport Panels from './panels/Panels';\nimport checkActionType from './reducer/IgnoreActions';\nimport {\n  spectrumReducer,\n  initialState,\n  dispatchMiddleware,\n  initState,\n  State,\n} from './reducer/Reducer';\nimport { DISPLAYER_MODE } from './reducer/core/Constants';\nimport preferencesReducer, {\n  preferencesInitialState,\n  PreferencesState,\n  initPreferencesState,\n} from './reducer/preferencesReducer';\nimport {\n  INITIATE,\n  SET_LOADING_FLAG,\n  SET_MOUSE_OVER_DISPLAYER,\n} from './reducer/types/Types';\nimport ToolBar from './toolbar/ToolBar';\n\nconst viewerContainerStyle = css`\n  border: 0.55px #e6e6e6 solid;\n  display: flex;\n  flex: 1;\n  flex-direction: 'column';\n  height: 100%;\n  margin-left: -1px;\n`;\n\nconst containerStyles = css`\n  background-color: white;\n  width: 100%;\n  display: block;\n  height: 100%;\n  font-size: 14px;\n\n  div:focus {\n    outline: none !important;\n  }\n\n  button {\n    cursor: pointer;\n    color: black;\n    &:disabled {\n      cursor: default;\n    }\n  }\n\n  button:active,\n  button:hover,\n  button:focus,\n  [type='button']:focus,\n  button {\n    outline: none !important;\n  }\n  * {\n    -webkit-user-drag: none;\n    -moz-user-drag: none;\n    -o-user-drag: none;\n    user-drag: none;\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n\n  .SplitPane {\n    height: 100%;\n  }\n\n  .Resizer.vertical:after {\n    content: '\\\\22EE';\n    top: 50%;\n    color: black;\n    position: absolute;\n    font-size: 14px;\n  }\n\n  .Resizer.vertical {\n    padding: 2px;\n  }\n\n  .Resizer.vertical:hover {\n    background-color: #dfdfdf !important;\n    border-left: 0.55px #bbbbbb;\n solid;\n    border-right: 0.55px #bbbbbb solid;\n  }\n`;\n\nexport type NMRiumWorkspace =\n  | 'exercise'\n  | 'process1D'\n  | 'default'\n  | 'prediction';\n\nexport interface NMRiumProps {\n  data?: NMRiumData;\n  onDataChange?: (data: State) => void;\n  workspace?: NMRiumWorkspace;\n  preferences?: NMRiumPreferences;\n  emptyText?: ReactNode;\n  /**\n   * Returns a custom spinner that will be rendered while loading data.\n   */\n  getSpinner?: () => ReactElement;\n}\n\nexport type NMRiumPreferences = Partial<{\n  general: Partial<{\n    disableMultipletAnalysis: boolean;\n    hideSetSumFromMolecule: boolean;\n    hideGeneralSettings: boolean;\n    experimentalFeatures: PanelPreferencesType;\n  }>;\n  panels: Partial<{\n    spectraPanel: PanelPreferencesType;\n    informationPanel: PanelPreferencesType;\n    peaksPanel: PanelPreferencesType;\n    integralsPanel: PanelPreferencesType;\n    rangesPanel: PanelPreferencesType;\n    structuresPanel: PanelPreferencesType;\n    filtersPanel: PanelPreferencesType;\n    zonesPanel: PanelPreferencesType;\n    summaryPanel: PanelPreferencesType;\n    multipleSpectraAnalysisPanel: PanelPreferencesType;\n    databasePanel: PanelPreferencesType;\n    predictionPanel: PanelPreferencesType;\n  }>;\n  toolBarButtons: Partial<{\n    zoomTool: boolean;\n    zoomOutTool: boolean;\n    import: boolean;\n    exportAs: boolean;\n    spectraStackAlignments: boolean;\n    spectraCenterAlignments: boolean;\n    realImaginary: boolean;\n    peakTool: boolean;\n    integralTool: boolean;\n    zonePickingTool: boolean;\n    slicingTool: boolean;\n    autoRangesTool: boolean;\n    zeroFillingTool: boolean;\n    phaseCorrectionTool: boolean;\n    baseLineCorrectionTool: boolean;\n    FFTTool: boolean;\n    multipleSpectraAnalysisTool: boolean;\n    exclusionZonesTool: boolean;\n  }>;\n}>;\n\nexport type Molecules = Array<{ molfile: string }>;\nexport type Spectra = Array<Datum1D | Datum2D>;\n\ntype DeepPartial<T> = {\n  [P in keyof T]?: DeepPartial<T[P]>;\n};\n\nexport interface NMRiumData {\n  molecules?: Molecules;\n  spectra: DeepPartial<Spectra>;\n  correlations?: CorrelationData;\n}\n\nconst defaultPreferences = {};\nconst defaultData: NMRiumData = {\n  spectra: [],\n};\n\nfunction NMRium(props: NMRiumProps) {\n  return (\n    <RootLayout style={{ width: '100%' }}>\n      <ErrorBoundary FallbackComponent={ErrorOverlay}>\n        <InnerNMRium {...props} />\n      </ErrorBoundary>\n    </RootLayout>\n  );\n}\n\nfunction InnerNMRium({\n  data: dataProp = defaultData,\n  workspace,\n  preferences = defaultPreferences,\n  getSpinner = defaultGetSpinner,\n  onDataChange,\n  emptyText,\n}: NMRiumProps) {\n  const rootRef = useRef<HTMLDivElement>(null);\n  const elementsWraperRef = useRef<HTMLDivElement>(null);\n  const [show, toggle] = useToggle(false);\n\n  const isFullscreen = useFullscreen(rootRef, show, {\n    onClose: () => {\n      toggle(false);\n    },\n  });\n\n  const [state, dispatch] = useReducer<Reducer<State, any>, State>(\n    spectrumReducer,\n    initialState,\n    initState,\n  );\n\n  const [preferencesState, dispatchPreferences] = useReducer<\n    Reducer<PreferencesState, any>,\n    PreferencesState\n  >(preferencesReducer, preferencesInitialState, initPreferencesState);\n\n  const { displayerMode, data: spectraData } = state;\n\n  useEffect(() => {\n    if (checkActionType(state.actionType)) {\n      onDataChange?.(state);\n    }\n  }, [onDataChange, state]);\n\n  const dispatchMiddleWare = useMemo(() => {\n    return dispatchMiddleware(dispatch);\n  }, []);\n\n  useEffect(() => {\n    rootRef.current?.focus();\n  }, [isFullscreen]);\n\n  useEffect(() => {\n    dispatchPreferences({\n      type: 'INIT_PREFERENCES',\n      payload: {\n        display: preferences,\n        workspace,\n        dispatch: dispatchPreferences,\n      },\n    });\n  }, [preferences, workspace]);\n\n  useEffect(() => {\n    dispatchMiddleWare({ type: SET_LOADING_FLAG, isLoading: true });\n    if (dataProp) {\n      dispatchMiddleWare({ type: INITIATE, payload: dataProp });\n    }\n  }, [dataProp, dispatchMiddleWare]);\n\n  const preventContextMenuHandler = useCallback((e) => {\n    if (!checkModifierKeyActivated(e)) {\n      e.preventDefault();\n    }\n  }, []);\n  const mouseEnterHandler = useCallback(() => {\n    dispatchMiddleWare({ type: SET_MOUSE_OVER_DISPLAYER, payload: true });\n  }, [dispatchMiddleWare]);\n  const mouseLeaveHandler = useCallback(() => {\n    dispatchMiddleWare({ type: SET_MOUSE_OVER_DISPLAYER, payload: false });\n  }, [dispatchMiddleWare]);\n\n  return (\n    <GlobalProvider\n      value={{\n        rootRef: rootRef.current,\n        elementsWraperRef: elementsWraperRef.current,\n      }}\n    >\n      <PreferencesProvider value={preferencesState}>\n        <div\n          onMouseEnter={mouseEnterHandler}\n          onMouseLeave={mouseLeaveHandler}\n          style={{ height: '100%', position: 'relative' }}\n        >\n          <AlertProvider wrapperRef={elementsWraperRef.current}>\n            <DispatchProvider value={dispatchMiddleWare}>\n              <ChartDataProvider value={state}>\n                <ModalProvider wrapperRef={elementsWraperRef.current}>\n                  <HighlightProvider>\n                    <AssignmentProvider spectraData={spectraData}>\n                      <SpinnerProvider value={getSpinner}>\n                        <div\n                          className=\"nmrium-container\"\n                          ref={rootRef}\n                          css={containerStyles}\n                          onContextMenu={preventContextMenuHandler}\n                          style={{ height: '100%', width: '100%' }}\n                        >\n                          <DropZone>\n                            <div\n                              style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                backgroundColor: 'white',\n                                width: '100%',\n                              }}\n                            >\n                              <Header\n                                isFullscreen={isFullscreen}\n                                onMaximize={toggle}\n                              />\n\n                              <div\n                                style={{\n                                  display: 'flex',\n                                  flexDirection: 'row',\n                                  height: '100%',\n                                }}\n                              >\n                                <ToolBar />\n                                <SplitPane\n                                  initialSeparation=\"590px\"\n                                  orientation=\"horizontal\"\n                                  sideSeparation=\"end\"\n                                >\n                                  <div css={viewerContainerStyle}>\n                                    <KeysListenerTracker />\n                                    <div\n                                      data-test-id=\"viewer\"\n                                      style={{\n                                        width: '100%',\n                                        height: '100%',\n                                      }}\n                                    >\n                                      {displayerMode ===\n                                      DISPLAYER_MODE.DM_1D ? (\n                                        <Viewer1D emptyText={emptyText} />\n                                      ) : (\n                                        <Viewer2D emptyText={emptyText} />\n                                      )}\n                                    </div>\n                                  </div>\n                                  <Panels />\n                                </SplitPane>\n\n                                <div\n                                  ref={elementsWraperRef}\n                                  key={String(isFullscreen)}\n                                  id=\"main-wrapper\"\n                                  style={{\n                                    position: 'absolute',\n                                    pointerEvents: 'none',\n                                    zIndex: 0,\n                                    left: 0,\n                                    right: 0,\n                                    top: 0,\n                                    bottom: 0,\n                                  }}\n                                />\n                              </div>\n                            </div>\n                          </DropZone>\n                        </div>\n                      </SpinnerProvider>\n                    </AssignmentProvider>\n                  </HighlightProvider>\n                </ModalProvider>\n              </ChartDataProvider>\n            </DispatchProvider>\n          </AlertProvider>\n        </div>\n      </PreferencesProvider>\n    </GlobalProvider>\n  );\n}\nexport default memo(NMRium);\n","import { DropZone } from 'analysis-ui-components';\nimport debounce from 'lodash/debounce';\nimport { useState, useEffect, useCallback } from 'react';\nimport { ObjectInspector } from 'react-inspector';\n\nimport NMRium from '../../component/NMRium';\nimport { loadFiles } from '../../component/utility/FileUtility';\n\nfunction searchDeep(obj, searchKey) {\n  let result: any = [];\n  function objectHelper(obj) {\n    Object.keys(obj).forEach((key) => {\n      if (searchKey === key) {\n        result.push({ [key]: obj[key] });\n      }\n      if (Array.isArray(obj[key])) {\n        obj[key].forEach((object) => {\n          objectHelper(object);\n        });\n      } else if (typeof obj[key] === 'object' && obj[key] !== null) {\n        objectHelper(obj[key]);\n      }\n    });\n  }\n\n  objectHelper(obj);\n  return result;\n}\n\nfunction Inspector(data: any) {\n  const [filteredData, seData] = useState<any>();\n  const [key, setKey] = useState<string>('');\n  useEffect(() => {\n    const result = searchDeep(data, key);\n    seData(key ? result : data);\n  }, [data, key]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleSearch = useCallback(\n    debounce((e) => {\n      const key = e.target.value;\n      setKey(key);\n    }, 500),\n    [data],\n  );\n\n  return (\n    <div\n      style={{ display: 'flex', flexDirection: 'column', paddingTop: '10px' }}\n    >\n      <input\n        style={{ border: '1px solid gray', padding: '5px' }}\n        type=\"text\"\n        placeholder=\"Search for key...\"\n        onChange={handleSearch}\n      />\n      <ObjectInspector data={filteredData} />;\n    </div>\n  );\n}\n\nexport default function Test() {\n  const [data, setData] = useState<any>();\n  const [callBackData, setCallBackData] = useState<any>({});\n\n  const dropFileHandler = useCallback((dropfiles) => {\n    void (async () => {\n      try {\n        const files = await loadFiles<{ binary: any }>(dropfiles, {\n          asBuffer: true,\n        });\n\n        const decoder = new TextDecoder('utf8');\n        const data = JSON.parse(decoder.decode(files[0].binary));\n        setData(data);\n      } catch (e) {\n        // eslint-disable-next-line no-alert\n        alert('Invalid JSON file');\n      }\n    })();\n  }, []);\n  const dataChangeHandler = useCallback((data) => {\n    setCallBackData(data);\n  }, []);\n\n  return (\n    <div style={{ display: 'flex', height: '100vh', padding: '20px' }}>\n      <div style={{ flex: 9 }}>\n        <NMRium data={data} onDataChange={dataChangeHandler} />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '10px',\n          flex: 3,\n        }}\n      >\n        <div style={{ flex: 3 }}>\n          <DropZone onDrop={dropFileHandler} color=\"gray\" />\n        </div>\n        <div style={{ flex: 9 }}>\n          <Inspector data={callBackData} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { lazy, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Test from '../views/Test';\n\nconst TestHighlight = lazy(() => import('./TestHighlight'));\n\nexport default function TestRoutes() {\n  return (\n    <Suspense fallback={null}>\n      <Switch>\n        <Route path=\"/test/highlight\" component={TestHighlight} />\n        <Route path=\"/\" component={Test} />\n        <Route render={() => <div>Page not found</div>} />\n      </Switch>\n    </Suspense>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Main from './demo/layouts/Main';\nimport TestRoutes from './demo/test/TestRoutes';\n\n// Reset styles so they do not affect development of the React component.\nimport 'modern-normalize/modern-normalize.css';\nimport './demo/preflight.css';\n\nimport './demo/index.css';\n\nReactDOM.render(\n  <HashRouter>\n    <Switch>\n      <Route path=\"/test\" component={TestRoutes} />\n      <Route path=\"/\" render={(props) => <Main {...props} />} />\n    </Switch>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"names":["createElement","MenuItem","cloneElement","sidebarCss","css","sidebarOpenCss","sidebarClosedCss","menuBtCss","logoCss","simpleTextCss","logoNormalCss","sidebarWrapperCss","props","routes","useMemo","buildMenu","subDisplay","menuIsClosed","_jsxs","_jsx","display","padding","onMenuToggle","Menu","e","history","push","Math","random","toString","replace","item","view","getKey","file","withRouter","memo","Sidebar","lazy","mainPanelCss","mainPanelOpenCss","mainPanelClosedCss","baseURL","routesList","mapTreeToFlatArray","setMenuIsClosed","useState","toggleMenu","useCallback","position","top","height","StrictMode","Suspense","map","prop","length","routeProp","viewName","RenderedView","possibleViews","match","params","id","width","marginLeft","marginRight","backgroundColor","routeProps","patrh","path","styles","bodyContainer","justifyContent","alignItems","container","borderRadius","fontSize","textAlign","normal","color","error","errorHeader","normalHeader","loadButton","border","fontWeight","cursor","url","response","fetch","json","ok","Error","status","statusText","Main","data","setRoutes","isLoaded","dashBoardType","setDashBoardType","loadHandler","getFileExtension","substring","lastIndexOf","href","window","location","qs","URL","searchParams","has","sampleURL","get","toLowerCase","loadData","then","remoteRoutes","_remoteRoutes","JSON","parse","stringify","AdminLayout","initialState","step","brush","start","end","startX","endX","startY","endY","BrushContext","createContext","children","className","style","onBrush","onZoom","onDoubleClick","onClick","noPropagation","state","dispatch","useReducer","reducer","mouseDownTime","setMouseDownTime","debounceClickEventsRef","useRef","mouseDownHandler","event","button","stopPropagation","type","shiftKey","altKey","screenX","screenY","clientX","clientY","boundingRect","currentTarget","getBoundingClientRect","timeStamp","clickHandler","persist","x","y","callback","lodashDebounce","current","debounce","cancel","handleMouseWheel","deltaY","deltaX","deltaMode","hypot","moveCallback","upCallback","action","startScreenX","startScreenY","startClientX","startClientY","MouseContext","MouseaProvider","Provider","useContext","mouseTrackerState","setMouseTrackerState","mouseMoveHandler","mouseLeaveHandler","name","isApplicable","equallySpaced","baselineRegression","mean","standardDeviation","getColor","merge","FiltersTypes.shiftX.id","get1dColor","FiltersTypes.digitalFilter.id","getRange","getSum","getNbAtoms","Filters.shift2DX.id","Filters.shift2DY.id","mapZones","OCLMolecule","Data1DManager.fromParsedJcamp","Data2DManager.fromParsedJcamp","Datum1D.initiateDatum1D","Datum2D.initiateDatum2D","Data1DManager.fromCSD","Data2DManager.fromCSD","fromBruker","Data1DManager.fromBruker","Data2DManager.fromBruker","Datum1D.toJSON","Datum2D.toJSON","Molecule.toJSON","OCL","Filters.zeroFilling.id","Filters.zeroFilling.name","Filters.phaseCorrection.id","Filters.phaseCorrection.name","Jszip","scaleLinear","original","unlink","cloneDeep","Filters.shiftX.id","lodashCloneDeep","zoomIdentity","max","getYScale","Filters.lineBroadening.id","Filters.fft.id","Filters.absolute.id","autoPhaseCorrection","Filters.baselineCorrection.id","Filters.exclusionZones.id","Filters.equallySpaced.id","MoleculeManager.fromJSON","calculate","lodashGet","types.INITIATE","SpectraManager.fromJSON","types.LOAD_JSON_FILE","types.LOAD_ZIP_FILE","SpectraManager.addBruker","types.LOAD_NMREDATA_FILE","types.PREDICT_SPECTRA","LoadActions.initiate","types.SET_LOADING_FLAG","LoadActions.setIsLoading","LoadActions.handleLoadJsonFile","types.LOAD_JCAMP_FILE","LoadActions.loadJcampFile","types.LOAD_JDF_FILE","LoadActions.loadJDFFile","types.LOAD_MOL_FILE","LoadActions.handleLoadMOLFile","LoadActions.handleLoadZIPFile","LoadActions.handleLoadNmredata","types.ADD_PEAK","PeaksActions.addPeak","types.ADD_PEAKS","PeaksActions.addPeaks","types.DELETE_PEAK_NOTATION","PeaksActions.deletePeak","types.ADD_INTEGRAL","IntegralsActions.addIntegral","types.DELETE_INTEGRAL","IntegralsActions.deleteIntegral","types.CHANGE_INTEGRAL_DATA","IntegralsActions.changeIntegral","types.RESIZE_INTEGRAL","types.CHANGE_INTEGRAL_SUM","IntegralsActions.handleChangeIntegralSum","types.CHANGE_INTEGRALS_SUM_FLAG","IntegralsActions.handleChangeIntegralsSumFlag","types.CHANGE_INTEGRAL_RELATIVE","IntegralsActions.handleChangeIntegralsRelativeValue","types.SET_ORIGINAL_DOMAIN","DomainActions.setOriginalDomain","types.SET_X_DOMAIN","DomainActions.setXDomain","types.SET_Y_DOMAIN","DomainActions.setYDomain","types.SET_WIDTH","types.SET_DIMENSIONS","types.SET_SELECTED_TOOL","ToolsActions.setSelectedTool","types.RESET_SELECTED_TOOL","ToolsActions.resetSelectedTool","types.SET_SELECTED_OPTIONS_PANEL","ToolsActions.setSelectedOptionPanel","types.FULL_ZOOM_OUT","ToolsActions.zoomOut","types.SHIFT_SPECTRUM","FiltersActions.shiftSpectrumAlongXAxis","types.APPLY_ZERO_FILLING_FILTER","FiltersActions.applyZeroFillingFilter","types.APPLY_FFT_FILTER","FiltersActions.applyFFTFilter","types.APPLY_MANUAL_PHASE_CORRECTION_FILTER","FiltersActions.applyManualPhaseCorrectionFilter","types.APPLY_AUTO_PHASE_CORRECTION_FILTER","FiltersActions.applyAutoPhaseCorrectionFilter","types.APPLY_ABSOLUTE_FILTER","FiltersActions.applyAbsoluteFilter","types.CALCULATE_MANUAL_PHASE_CORRECTION_FILTER","FiltersActions.calculateManualPhaseCorrection","types.ENABLE_FILTER","FiltersActions.enableFilter","types.DELETE_FILTER","FiltersActions.deleteFilter","types.DELETE_SPECTRA_FILTER","FiltersActions.deleteSpectraFilter","types.SET_FILTER_SNAPSHOT","FiltersActions.filterSnapshotHandler","types.APPLY_MULTIPLE_SPECTRA_FILTER","FiltersActions.handleMultipleSpectraFilter","types.ADD_EXCLUSION_ZONE","FiltersActions.handleAddExclusionZone","types.DELETE_EXCLUSION_ZONE","FiltersActions.handleDeleteExclusionZone","types.CHANGE_VISIBILITY","SpectrumsActions.handleSpectrumVisibility","types.CHANGE_PEAKS_MARKERS_VISIBILITY","SpectrumsActions.handleChangePeaksMarkersVisibility","types.CHANGE_ACTIVE_SPECTRUM","SpectrumsActions.handleChangeActiveSpectrum","types.CHANGE_SPECTRUM_COLOR","SpectrumsActions.handleChangeSpectrumColor","types.CHANGE_SPECTRUM_SETTING","SpectrumsActions.changeSpectrumSetting","types.ALIGN_SPECTRA","SpectrumsActions.alignSpectraHandler","types.DELETE_SPECTRA","SpectrumsActions.handleDeleteSpectra","types.ADD_MISSING_PROJECTION","SpectrumsActions.addMissingProjectionHandler","types.GENERATE_SPECTRUM_FROM_PUBLICATION_STRING","SpectrumsActions.generateSpectrumFromPublicationStringHandler","types.TOGGLE_REAL_IMAGINARY_VISIBILITY","ToolsActions.handleToggleRealImaginaryVisibility","types.SET_ZOOM","ToolsActions.handleZoom","types.SET_SPECTRA_SAME_TOP","ToolsActions.setSpectraSameTopHandler","types.RESET_SPECTRA_SCALE","ToolsActions.resetSpectraScale","types.CHANGE_SPECTRUM_DISPLAY_VIEW_MODE","ToolsActions.handleChangeSpectrumDisplayMode","types.ADD_MOLECULE","MoleculeActions.addMoleculeHandler","types.SET_MOLECULE","MoleculeActions.setMoleculeHandler","types.DELETE_MOLECULE","MoleculeActions.deleteMoleculeHandler","MoleculeActions.predictSpectraFromMoleculeHandler","types.SET_CORRELATIONS_MF","CorrelationsActions.handleSetMF","types.SET_CORRELATIONS_TOLERANCE","CorrelationsActions.handleSetTolerance","types.SET_CORRELATION","CorrelationsActions.handleSetCorrelation","types.SET_CORRELATIONS","CorrelationsActions.handleSetCorrelations","types.DELETE_CORRELATION","CorrelationsActions.handleDeleteCorrelation","types.BRUSH_END","ToolsActions.handleBrushEnd","types.SET_VERTICAL_INDICATOR_X_POSITION","ToolsActions.setVerticalIndicatorXPosition","types.SET_SPECTRUMS_VERTICAL_ALIGN","ToolsActions.setSpectrumsVerticalAlign","types.AUTO_PEAK_PICKING","PeaksActions.handleAutoPeakPicking","types.AUTO_ZONES_DETECTION","ZonesActions.handleAutoZonesDetection","types.CHANGE_ZONES_NOISE_FACTOR","ZonesActions.changeZonesFactorHandler","types.AUTO_RANGES_DETECTION","RangesActions.handleAutoRangesDetection","types.ADD_RANGE","RangesActions.handleAddRange","types.DELETE_RANGE","RangesActions.handleDeleteRange","types.DELETE_1D_SIGNAL","RangesActions.handleDeleteSignal","types.RESIZE_RANGE","RangesActions.handleResizeRange","types.CHANGE_RANGE_SUM","RangesActions.handleChangeRangeSum","types.CHANGE_RANGES_SUM_FLAG","RangesActions.handleChangeRangesSumFlag","types.CHANGE_RANGE_RELATIVE","RangesActions.handleChangeRangeRelativeValue","types.CHANGE_RANGE_SIGNAL_VALUE","RangesActions.handleChangeRangeSignalValue","types.CHANGE_RANGE_SIGNAL_KIND","RangesActions.handleChangeRangeSignalKind","types.SAVE_EDITED_RANGE","RangesActions.handleSaveEditedRange","types.UNLINK_RANGE","RangesActions.handleUnlinkRange","types.SET_DIAID_RANGE","RangesActions.handleSetDiaIDRange","types.CHANGE_TEMP_RANGE","RangesActions.handleChangeTempRange","types.SHOW_MULTIPLICTY_TREES","RangesActions.handleShowMultiplicityTrees","types.SHOW_RANGES_INTEGRALS","RangesActions.handleShowRangesIntegrals","types.AUTO_RANGES_SPECTRA_PICKING","RangesActions.handleAutoSpectraRangesDetection","types.SHOW_J_GRAPH","RangesActions.handleShowJGraph","types.SET_ACTIVE_TAB","ToolsActions.handelSetActiveTab","types.ADD_BASE_LINE_ZONE","ToolsActions.handleAddBaseLineZone","types.DELETE_BASE_LINE_ZONE","ToolsActions.handleDeleteBaseLineZone","types.APPLY_BASE_LINE_CORRECTION_FILTER","FiltersActions.handleBaseLineCorrectionFilter","types.SET_KEY_PREFERENCES","types.APPLY_KEY_PREFERENCES","types.SET_2D_LEVEL","ToolsActions.levelChangeHandler","types.ADD_2D_ZONE","ZonesActions.add2dZoneHandler","types.DELETE_2D_ZONE","ZonesActions.handleDeleteZone","types.DELETE_2D_SIGNAL","ZonesActions.handleDeleteSignal","types.SET_2D_SIGNAL_PATH_LENGTH","ZonesActions.handleSetSignalPathLength","types.RESET_DOMAIN","DomainActions.handelResetDomain","types.CHANGE_ZONE_SIGNAL_VALUE","ZonesActions.changeZoneSignalDelta","types.CHANGE_ZONE_SIGNAL_KIND","ZonesActions.handleChangeZoneSignalKind","types.UNLINK_ZONE","ZonesActions.handleUnlinkZone","types.SET_DIAID_ZONE","ZonesActions.handleSetDiaIDZone","types.AUTO_ZONES_SPECTRA_PICKING","ZonesActions.handleAutoSpectraZonesDetection","types.SAVE_EDITED_ZONE","ZonesActions.handleSaveEditedZone","types.ANALYZE_SPECTRA","SpectraAnalysisActions.analyzeSpectra","types.DELETE_ANALYZE_SPECTRA_RANGE","SpectraAnalysisActions.handleDeleteSpectraRanges","types.RESIZE_ANALYZE_SPECTRA_RANGE","SpectraAnalysisActions.handleResizeSpectraRange","types.SET_ANALYZE_SPECTRA_COLUMNS","SpectraAnalysisActions.handleSetColumns","types.FILTER_SPECTRA_COLUMN","SpectraAnalysisActions.handleFilterColumn","types.RESURRECTING_SPECTRUM_FROM_RANGES","DatabaseActions.handleRangeResurrecting","types.SET_MOUSE_OVER_DISPLAYER","GlobalActions.setIsOverDisplayer","produce","ChartContext","ChartDataProvider","dispatchContext","DispatchProvider","LoaderContext","defaultLoader","LoaderProvider","isEmpty","emptyText","canOpenLoader","openLoader","useLoader","spinnerContext","defaultGetSpinner","SpinnerProvider","isLoading","undefined","useChartData","checkEmpty","startCheckEmpty","timeout","setTimeout","getSpinner","Fragment","transformOrigin","left","zoom","allowTools","options","zeroFilling","peakPicking","integral","phaseCorrection","baseLineCorrection","rangesPicking","zone2D","slicingTool","editRange","multipleSpectraAnalysis","exclusionZones","databaseRangesSelection","BRUSH_TYPE","X","Y","XY","defaultDimensionBorder","brushType","dimensionBorder","widthProps","heightProps","toolOptions","selectedTool","includes","sign","scaleX","scaleY","transform","willChange","line","stroke","strokeOpacity","shapeRendering","strokeWidth","equalizerTool","margin","brushState","right","bottom","pointerEvents","overflow","Workspaces","lodashMerge","PreferencesContext","preferencesInitialState","PreferencesProvider","context","workspace","workspaces","usePreferences","currentWorkspaces","Object","keys","reduce","acc","key","label","WORKSPACES","spectrumID","datum","xDomain","yDomain","contours","activeSpectrum","preferences","xShift","yShift","getShift","isActive","_scaleX","get2DXScale","_scaleY","get2DYScale","PathBuilder","element","lines","i","moveTo","lineTo","j","closePath","opacity","buildContourPath","displayerKey","index","isPositiveVisible","positiveColor","isNegativeVisible","negativeColor","MemoizedContours","ContoursInner","spectra","filter","info","dimension","isFt","marignValue","spectrum","originHeight","yDomains","xyReduce","useXYReduce","XYReducerDomainAxis","YAxis","paths","get1DYScale","re","pathPoints","pathBuilder","mainHeight","Left1DChart","marginProps","originMargin","XAxis","Top1DChart","axisStyles","defaultMargin","show","tabActiveSpectrum","activeTab","refAxis","xAxis","d3","ticks","tickFormat","call","axis","lineStyle","displayerMode","deltas1D","setDeltas1D","split","nucleus","deltas","ranges","_datum","isVisible","isSpectrum1D","values","flat","_range","signals","_signal","SignalKindsToInclude","some","_kind","kind","delta","indicationLines","_delta","assignmentContext","newState","assignment","payload","_id","forEach","activeID","activeAxis","isOnHover","onHoverID","onHoverAxis","emptyState","spectraData","assignmentReducer","contextValue","range","_contextValue","diaIDs","_diaID","signal","zone","initAssignmentDataRanges","zones","initAssignmentDataZones","useAssignmentData","String","assigned","add","remove","removeAll","toggle","deleteRecord","setIsOnHover","onMouseEnter","onMouseLeave","assignmentData","ids","HighlightedSource","highlight","highlights","highlighted","highlightedPermanently","sourceData","highlightContext","convertedHighlights","extra","value","highlightReducer","Array","isArray","useHighlightData","newHighlights","isActivePermanently","hide","click","preventDefault","onHover","highlightIDsX","buildID","highlightIDsY","highlightX","useHighlight","highlightY","Signal","buildIDs","concat","useAssignment","highlightData","isHighlighted","setIsHighlighted","_highlighted","peaks","peak","stylesOnHover","stylesHighlighted","Zone","zoneData","assignmentZone","highlightZone","ZONE","from","x1","to","x2","y1","y2","reduceOpacity","setReduceOpacity","checkZoneKind","setVisibility","on","prevVisiblity","MemoizedZones","ZonesInner","emptyData","useSpectrum","MemoizedChart2D","chart2DInner","layout","data1D","trackID","getLayoutID","nucleuses","formatX","formatY","useFormatNumberByNucleus","LAYOUT","TOP_1D","CENTER_2D","LEFT_1D","getRealYValue","cordinate","get1DDataXY","xIndex","xFindClosestIndex","invert","getXValue","getYValue","getRation","Number","MIN_VALUE","toFixed","getDeltaX","toPrecision","getLabel","label2d","labelld","getZValue","maxX","maxY","minX","minY","z","xStep","yStep","floor","yIndex","userSelect","HorizontalSliceChart","VerticalSliceChart","useMouseTracker","chart2d","scale2dX","scale2dY","getSlice","horizontal","vertical","useDispatch","spectrumData","n","find","isFid","DIMENSION","get2DDimensionLayout","handelBrushEnd","brushData","ADD_2D_ZONE","BRUSH_END","handelOnDoubleClick","FULL_ZOOM_OUT","handleZoom","SET_2D_LEVEL","SET_ZOOM","mouseClick","FooterBanner","SET_DIMENSIONS","scaleContext","scaleInitialState","ScaleProvider","scale","useScale","AlertProvider","duration","defaultStyle","transitions","FADE","transition","SCALE","defaultTransitionStyles","entering","entered","exiting","exited","transitionStyles","ref","default","containerStyle","initialStyles","flexDirection","positions","TOP_LEFT","TOP_CENTER","TOP_RIGHT","MIDDLE_LEFT","MIDDLE","MIDDLE_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","getStyles","wrapperRef","offset","root","timersId","alerts","setAlerts","document","timersIdRef","appendChild","clearTimeout","removeChild","alert","currentAlerts","lengthBeforeRemove","filteredAlerts","a","onClose","message","substr","alertOptions","close","timerId","splice","indexOf","onOpen","success","types","SUCCESS","ERROR","INFO","showLoading","PROGRESS_INDICATOR","Promise","resolve","closeHandler","alertsByPosition","groupBy","parentStyle","innerWidth","innerHeight","alertContextValue","createPortal","zIndex","Wrapper","Transition","minHeight","buttons","optionsHandler","handler","option","text","ModalContent","modal","onLayout","contentSize","Content","useSize","component","isFinite","modalRef","setModal","_modal","isBackgroundBlur","enableResizing","showConfirmDialog","dialogOptions","ConfirmDialog","addEventListener","keyHandler","removeEventListener","outerStyle","modalContextValue","contentLayoutHandler","updateSize","GlobalConetxt","GlobalProvider","popup","whiteSpace","fontFamily","textShadow","mainContainer","popupPlacement","title","refChild","refContent","placement","setPlacement","showToolTip","elementsWraperRef","useGlobal","getPopupPlacement","childBounding","contentBounding","pl","mouseOverHandler","ToolTip","svg","fill","popupTitle","CloseButton","loaderStyles","analysisData","setAnalysisData","calcStart","setCalcStartStatus","isCalcFinished","setCalcFinished","isSpectrum2D","fromIndex","toIndex","xGetFromToIndex","analysesProps","slice","result","analyseMultiplet","frequency","originFrequency","takeBestPartMultiplet","symmetrizeEachStep","debug","err","log","steps","d","xyToXYObject","multiplet","js","multiplicity","coupling","errorFunction","vAlign","useScaleChecked","EXCLUSION_ZONE","useActiveSpectrumStyleOptions","ExclusionZoneAnnotation","xDomains","verticalAlign","getExclusionZones","getVerticalShift","MemoizedPeakAnnotations","ExclusionZonesAnnotationsInner","useSpectraByActiveNucleus","DISPLAYER_MODE","DM_1D","filters","Filters","flag","onDrag","onDrop","mode","rightDragVisibility","setRightDragVisibility","leftDragVisibility","setLeftDragVisibility","enable","setEnable","draggableRightRef","draggableLeftRef","handleRightStart","handleRightDrag","layerX","handleRightStop","resized","handleLeftStart","handleLeftDrag","handleLeftStop","mouseDownCaptureHandler","mouseUpCaptureHandler","target","fillOpacity","integralData","setIntegral","INTEGRAL","handleOnStopResizing","RESIZE_INTEGRAL","handleOnEnterNotation","handleOnMouseLeaveNotation","dragHandler","boundary","x0","useIntegralPath","integralSettings","integralDefaultValues","getValue","Integrals","integrals","tempData","_data","refText","isSelected","setIsSelected","_value","setValue","containerSize","setContainerSize","format","PEAK","handleOnPeakChange","SHIFT_SPECTRUM","shiftValue","textBox","getBBox","handleKeyDown","newValue","valueAsNumber","isNaN","oldValue","blur","handleChange","handleSelectPeakAnnotation","outline","paddingRight","Peaks","getVerticalAlign","findIndex","reSortData","sort","isPeaksMarkersVisible","DATABASE","fullHeight","blockHight","diff","abs","newForm","newTo","rangesToXY","nbPoints","domain","extent","accumulator","point","gridStyles","showGrid","labelProp","refGrid","grid","tickSize","JGraphContext","maxValue","JGraphContextProvider","jGraphState","VerticalAxis","forwardRef","other","useLinearPrimaryTicks","useJGraph","links","generatePath","link","couplings","join","isOver","setOver","marginTop","JCouplingLinks","MemoizedJGraph","InnerJGraph","showJGraph","graphHeight","jGraphTolerance","_preferences","getRangeDefaultValues","jCouplingMax","generateJGraphData","maxRange","JGraphState","onDelete","rangeData","columnKey","deleteHandler","DELETE_ANALYZE_SPECTRA_RANGE","colKey","RESIZE_ANALYZE_SPECTRA_RANGE","DeleteButton","spectraAnalysis","columns","MemoizedMultiAnalysisRanges","MultiAnalysisRangesInner","levelHeight","TREE_LEVEL_COLORS","showLabels","nodesData","signalID","labelOptions","buildTreeNodeAndEdge","_startX","ratio","multiplicityIndex","edgeLevel","_startYEdge","_startYNode","distance","node","rangeFrom","rangeTo","extractID","SIGNAL","xRange","setXRange","treeProps","setTreeProps","drawInFullRange","setDrawInFullRange","setShowLabels","_drawInFullRange","checkMultiplicity","_treeWidth","_treeHeight","_treeLevelHeight","yMax","_x","treeNodesData","buildTreeNodesData","createTreeNodes","jIndices","_mult","hasCouplingConstant","_i","_xRange","_treeNodeData","multiplicityTree","firstLevelStartY","_startY","secondLevelStartY","_rangeFrom","_rangeTo","pathData","MemoizedTempMultiplicityTree","TempMultiplicityTreeInner","tempRange","showMultiplicityTrees","startEditMode","integration","assignmentRange","highlightRange","filterForIDsWithAssignment","RANGE","rangeBoundary","setRangeBoundary","isBlockedByEditing","setIsBlockedByEditing","checkRangeKind","RESIZE_RANGE","mouseEnterHandler","assignHandler","editRangeID","showRangesIntegrals","MemoizedRanges","RangesInner","empyData","deleteRangeHandler","DELETE_BASE_LINE_ZONE","baseLineZones","xPosition","MemoizedFooterBanner","FooterBannerInner","colorIndicator","borderBottom","marginBottom","ToggleVisibility","off","trackers","borderColor","radius","SVGPadding","closePeakPosition","setPosition","vShift","align","candidatePeakPosition","getClosePeak","mouseCoordinates","b","maxIndex","number","minIndex","yDataRange","yValue","xValue","pivot","activeSpectrumData","xVal","xInvert","general","widthProp","heightProp","useModal","useAlert","scaleState","dispatchScale","scaleReducer","SET_SCALE","propagateEvent","startXPPM","endXPPM","emit","disableMultipletAnalysis","ADD_INTEGRAL","MAX_LENGTH","ADD_RANGE","ANALYZE_SPECTRA","ADD_PEAKS","ADD_BASE_LINE_ZONE","ADD_EXCLUSION_ZONE","zoomType","ZoomType","STEP_HORIZONTAL","xPPM","ADD_PEAK","SET_VERTICAL_INDICATOR_X_POSITION","header","textDecoration","body","stack","CheckBox","checked","checkProps","disabled","onChange","setCheck","handleCheck","reverse","checkbox","resProps","setFieldValue","useFormikContext","changeHandler","FormikForm","onSubmit","initialValues","validationSchema","lineHeight","inputWrapper","borderWidth","borderStyle","input","flex","clearButton","aspectRatio","Input","debounceTime","onKeyDown","checkValue","enableAutoSelect","onBlur","onFocus","renderIcon","canClear","onClear","val","setVal","localRef","combinedRef","useCombinedRefs","debounceOnChange","select","formatValue","trim","onChangeHandler","pattern","test","check","preventPropagate","clearHandler","checkErrorAfterInputTouched","errors","touched","isInvalid","INITIAL_VALUE","compressed","pretty","dataExportOption","DataExportOptions","ROW_DATA","onSave","refForm","handleSave","submitForm","submitHandler","ModalStyles","DATA_SOURCE","JSZip","jszip","saveToClipboardHandler","hideLoading","saveAsJSONHandler","spaceIndent","isCompressed","fileName","exportedData","toJSON","exportAsJSON","handle","saveAsNMREHandler","nmriumToNmredata","saveAsSVGHandler","saveAsPNGHandler","saveHandler","saveAsHandler","defaultValue","Toggle","toggleHandler","ToggleButton","counter","deleteToolTip","onFilter","filterToolTip","filterIsActive","counterFiltered","onSettingClick","showSettingButton","canDelete","DefaultPanelHeader","automaticAssignmentHandler","tablePanelStyle","Button","SvgNmrAssignment2","HighlightedRowStyle","ConstantlyHighlightedRowStyle","onMouseDown","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","useSortBy","useFlexLayout","ReactTableStyle","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","overflowY","row","getRowProps","cells","cell","getCellProps","ReactTableFlexLayout","tableContainer","searchInput","meta","information","setInformation","matches","setMatchesData","searchRef","handleSearch","Header","sortType","minWidth","maxWidth","Cell","resizable","MemoizedInformationPanel","InformationPanelInner","tabid","tablabel","tabstyles","topStyles","leftStyles","PositionsEnum","onClickTabHandler","tab","contentChild","tabs","Children","child","isValidElement","Tabs","direction","loop","defaultIndex","useMeasure","activeIndex","setActiveIndex","Sliders","nextHandler","preActiveIndex","nextIndex","prevHandler","prevIndex","NextPrev","toolbarStyle","moleculeContainerStyle","molecules","currentIndex","setCurrentIndex","_index","slideIndex","mol","molfile","MF","mf","mw","getAtom","newSum","atoms","molecule","onChangeMoleculeSelectionHandler","sumOptions","panels","setOption","setActiveOption","SumSetOptions","formRef","onTabChangeHandler","sumAuto","hideSetSumFromMolecule","structuresPanel","hidden","moleculeKey","setValues","sum","Yup","required","SaveButton","PreferencesHeader","onEditStart","editStatus","enabled","enableEdit","startEdit","closeEdit","mouseClickCallback","classList","contains","editModeHandler","EditableColumn","rootRef","setData","sourceElement","setSourceElement","contextMenuHandler","parentElement","clickX","clickY","screenW","screenH","rootW","rootH","handleContextMenu","_handleGlobalClick","wasOutside","isSameNode","c","ContextMenu","ReactTableHeader","highlightedSource","UNKNOWN","onContextMenu","getIDs","prototype","hasOwnProperty","isConstantlyHighlighted","isRowSpanned","rowSpan","ReactTableRow","table","enableVirtualScroll","ReactTableInner","onScroll","approxItemHeight","groupKey","contextRef","indexBoundary","useReactTableContext","rowSpanHeaders","useRowSpan","checkModifierKeyActivated","rowsData","mRef","combineRef","tableVirtualConfig","setTableVirtualConfig","offsetHeight","scrollHeight","numberOfVisibleRows","ceil","prev","lookForGroupIndex","side","currentItem","findStartIndex","newIndex","currentIndx","findEndIndex","scrollHandler","scrollTop","ReactTable","arrowDownIcon","Select","handleOnChanged","selectStyle","deleteIntegralHandler","DELETE_INTEGRAL","integralID","changeIntegralDataHandler","CHANGE_INTEGRAL_DATA","initialColumns","accessor","SignalKinds","saveRelativeHandler","CHANGE_INTEGRAL_RELATIVE","integralsPreferences","COLUMNS","showWhen","formatNumber","absolute","absoluteFormat","relativeFormat","checkIntegralKind","tableColumns","col","colParams","object1","object2","IntegralTable","onColorChange","displayColorPicker","showColorPicker","selectedColor","setColor","handleClick","handleClose","handleOnColorChanged","colorEvent","hex","round","rgb","ChromePicker","ColorInput","colorPickerProps","colorChangeHandler","FormikColorPicker","inputLabel","checkControllerName","formatControllerName","disableFormat","hideFormat","checkChangeHandler","FormikColumnFormatField","inputContainer","NumberInput","onInput","min","changeHander","checkValidity","_ref","groupContainer","paddingBottom","formatFields","checkController","formatController","innerRef","updateValues","restProps","integralPreferences","getValueByKeyPath","defaultValues","nucleusLabel","assign","saveSetting","field","MemoizedIntegralsPreferences","IntegralsPreferencesInner","useNucleus","IntegralsPreferences","setFilterIsActive","isFlipped","setFlipStatus","settingRef","yesHandler","handleDeleteAll","changeIntegralSumHandler","CHANGE_INTEGRAL_SUM","currentSum","showChangeIntegralSumModal","settingsPanelHandler","saveSettingHandler","handleOnFilter","toggleConstantSumHandler","CHANGE_INTEGRALS_SUM_FLAG","filteredData","factor","_integrals","isInRange","SvgNmrSum","MemoizedIntegralPanel","IntegralPanelInner","wrapper","numberOfPoints","EquallySpacedFilter","FromToFilter","baseList","setFilter","List","list","REFERENCES","entries","APPLY_MULTIPLE_SPECTRA_FILTER","filterChangeHandler","filterOptions","openFiltersModal","RESET_SELECTED_TOOL","openExportAsMatrixModal","SvgNmrAddFilter","SvgNmrExportAsMatrix","selectedMolecule","setMolfile","cb","newMolfile","molText","exec","groups","SET_MOLECULE","ADD_MOLECULE","menuStyles","icon","items","boxBounding","toolTip","menuButtonRef","isShown","showMenu","closeMenuButton","boxSizing","MenuList","othersProps","__html","listStyle","getErrors","errorObj","obj","isValid","errorList","errorText","FormikSelect","NUMBER_OF_POINTS_1D","generateNumbersPowerOfX","NUMBER_OF_POINTS_2D","predictionFormValidation","shape","integer","lineWidth","proton","carbon","cosy","hsqc","hmbc","isApproved","setApproved","predictionPreferences","setPredictionPreferences","useStateWithLocalStorage","predictionIndex","initValues","isAgree","defaultPredictionOptions","SET_LOADING_FLAG","predictedSpectra","PREDICT_SPECTRA","approveCheckHandler","FREQUENCIES","paddingLeft","MOL_EXPORT_MENU","onMoleculeIndexChange","onOpenMoleculeEditor","actionsOptions","saveAsMolHandler","copyTextToClipboard","exportHandler","handlePaste","navigator","clipboard","readText","handleDelete","DELETE_MOLECULE","openPredictSpectraModal","hideExport","hidePast","hideAdd","hideDelete","hidePredict","SvgNmrFt","activeAssignment","ConcatenationString","onAtomHoverHighlights","setOnAtomHoverHighlights","onAtomHoverAction","setOnAtomHoverAction","elements","setElements","DM_2D","assignedDiaIDs","assignedDiaID","assignedDiaIDsMerged","currentDiaIDsToHighlight","highlightID","findDatumAndSignalIndex","getCurrentDiaIDsToHighlight","toggleAssignment","diaID","atomInformation","toggleDiaIDs","handleOnClickAtom","atom","extractFromAtom","nbAtoms","oclIDs","_oclID","signalIndex","SET_DIAID_RANGE","SET_DIAID_ZONE","handleOnAtomHover","getHighlightsOnHover","panel","flexGrow","innerPanel","toolbar","slider","moleculesProp","onMoleculeChange","setMolecules","useAtomAssignment","prevMolecules","handleReplaceMolecule","openMoleculeEditorHandler","moleclue","moleculeIndexHandler","MemoizedMoleculePanel","MoleculePanelInner","ALIGN_SPECTRA","optionChangeHandler","resValues","targetX","nbPeaks","initCode","code","setCode","setResult","evalResult","Eval","maxHeight","MultipleAnalysisCodeEditor","onAfterSave","setColumns","tempKey","columnsKeys","preferncesSchema","colmnName","formData","COLUMNS_TYPES","FORMULA","formula","columnSchema","SET_ANALYZE_SPECTRA_COLUMNS","addNewColumn","prevData","valueKey","MultipleSpectraAnalysisPreferences","ul","li","onSelect","renderItem","containerRect","selectedKey","formatSelectedValue","open","setOpen","setItem","drop","selectHandler","columnsFilters","COLUMNS_VALUES_KEYS","RELATIVE","ABSOLUTE","MIN","MAX","charLabel","rangeLabel","onColumnFilter","NORMAL","codeEvaluation","columnFilterHandler","FILTER_SPECTRA_COLUMN","columnData","columnIndex","cellHandler","headerHandler","MultipleSpectraAnalysisTable","afterSaveHandler","showTrackerHandler","openAlignSpectra","copyToClipboardHandler","getDataAsString","SvgNmrOverlay","MemoizedMultipleSpectraAnalysisPanel","MultipleSpectraAnalysisPanelInner","peaksDefaultValues","peaksPreferences","MemoizedPeaksPreferences","PeaksPreferencesInner","PeaksPreferences","deletePeakHandler","DELETE_PEAK_NOTATION","saveDeltaPPMRefsHandler","parseFloat","peakIndexFormat","valueHz","deltaHzFormat","intensity","intensityFormat","peakWidth","peakWidthFormat","PeaksTable","filteredPeaks","_peaks","next","MemoizedPeaksPanel","PeaksPanelInner","onCopyClick","onUnlink","onFilterActivated","isFilterActive","filterCounter","changeRangesSumHandler","CHANGE_RANGE_SUM","showChangeRangesSumModal","removeAssignments","handleOnRemoveAssignments","DELETE_RANGE","handleSetShowMultiplicityTrees","SHOW_MULTIPLICTY_TREES","handleShowIntegrals","SHOW_RANGES_INTEGRALS","handleShowJGraph","SHOW_J_GRAPH","copyHTMLToClipboard","saveAsHTMLHandler","observedFrequency","nbDecimalDelta","getNumberOfDecimals","ppm","nbDecimalJ","hz","rangesToACS","changeSumConstantFlagHandler","CHANGE_RANGES_SUM_FLAG","SvgNmrIntegrate","rangesPreferences","MemoizedRangesPreferences","RangesPreferencesInner","RangesPreferences","config","sortConfig","setSortConfig","sortedItems","sortableItems","SortType","sortHandler","columnName","defaultContent","content","onSort","rowSpanTags","onHoverRange","FormatNumber","FormikOnChange","enableValidation","inputInfo","infoText","signalContainer","addSignalBtn","newSignal","newSignalDelta","translateMultiplet","_signals","validation","createError","errorMessage","triggerSubmitHandler","AddSignalFormTab","_coupling","CouplingsTableStyle","multiplicityChangeHandler","multipletsList","Multiplets","CouplingsTable","SignalFormTabStyle","SignalFormTab","textStyles","tabStylesAddition","tabStyles","newSignalFormRef","activeField","setActiveField","handleOnFocus","tapClickHandler","handleDeleteSignal","tabContainsErrors","signalFormTabs","signalTabs","addSignalTab","editSignalInfoText","addSignalInfoText","noSignals","noCouplings","SignalsForm","useValidation","Yup.object","Yup.array","Yup.string","Yup.mixed","onSaveEditRangeModal","onCloseEditRangeModal","onZoomEditRangeModal","automaticZoom","useRangeFormValidation","handleOnZoom","handleOnClose","getCouplings","getSignals","generateID","handleOnSave","formValues","counterJ","_multiplicity","CHANGE_TEMP_RANGE","zoomRange","SET_X_DOMAIN","deleteRange","changeRangeSignalKind","CHANGE_RANGE_SIGNAL_KIND","rowData","saveEditRangeHandler","editedRowData","SAVE_EDITED_RANGE","closeEditRangeHandler","SET_SELECTED_TOOL","selectBoxStyle","onHoverSignal","useEditRangeModal","tableMetaInfo","spanStyle","onUnlinkVisibilityChange","unlinkVisibility","onLink","visibilityChangeHandler","spanCss","visibility","RangeAssignmentsColumn","RangeColumn","integralVal","formattedValue","CHANGE_RANGE_RELATIVE","tdCss","SignalAssignmentsColumn","useFormat","CHANGE_RANGE_SIGNAL_VALUE","rangeID","highlightRangeAssignmentsColumn","assignmentSignal","highlightSignal","unlinkRangeButtonVisibility","showUnlinkRangeButton","unlinkSignalButtonVisibility","showUnlinkSignalButton","getFormat","unlinkHandler","isOnRangeLevel","linkHandler","onHoverRangeAssignmentsColumn","trCss","rowIndex","isColumnVisible","SignalDeltaColumn","ActionsColumn","tableStyle","tableData","sortedData","useTableSortBy","useMapRanges","rowKey","rangesData","isInView","getFilteredRanges","_ranges","unlinkRangeHandler","UNLINK_RANGE","saveJSONToClipboardHandler","dataToClipboard","contextMenu","filterHandler","MemoizedRangesTablePanel","RangesTablePanelInner","spectrums","isAutomaticPickingVisible","DELETE_SPECTRA","showAllSpectrumsHandler","spectrumsPerTab","CHANGE_VISIBILITY","hideAllSpectrumsHandler","addMissingProjectionHandler","SpectrumsData","missingNucleus","hasSpectrums","getMissingProjection","ADD_MISSING_PROJECTION","setSameTopHandler","SET_SPECTRA_SAME_TOP","resetScaleHandler","RESET_SPECTRA_SCALE","automaticPickingHandler","AUTO_RANGES_SPECTRA_PICKING","AUTO_ZONES_SPECTRA_PICKING","SvgNmrResetScale","SvgNmrSameTop","SvgNmrRangePicking","MemoizedSpectraPanelHeader","SpectraPanelHeaderInner","isToolVisible","useCheckToolsVisibility","activated","ColorIndicator","onChangeMarkersVisibility","markersVisible","isMarkerVisible","v","SvgNmrPeaks","onChangeVisibility","alignContent","textOverflow","onChangeActiveSpectrum","onOpenSettingModal","formatValueAsHTML","SvgNmrFid","SvgNmr2D","solvent","borderLeft","experiment","pulse","SpectrumListItem","colorchangeHandler","SketchPicker","COLORS","jump","array","Float64Array","log10","yLogBase","first","last","inLogScale","processedData","prepareData","sanResult","xNoiseSanPlot","sanPlot","plotKey","sanplot","getLine","positive","strokeDasharray","negative","Spectrum1DHistogram","SpectrumData","gap","onAfterChange","sliderProps","valueNow","FormikSlider","matrix","cols","paddingTop","borderTop","Spectrum2DHistogram","CHANGE_SPECTRUM_SETTING","SpectrumSetting","arePropsEqual","onTabChange","setMarkersVisible","selectedSpectrumData","setSelectedSpectrum","settingModalPosition","setSettingModalPosition","isSettingModalDisplayed","setIsSettingModalDisplayed","visibleMarkers","spectrumsGroupByNucleus","groupByNucleus","GroupByInfoKey","handleChangeMarkersVisibility","newChecked","CHANGE_PEAKS_MARKERS_VISIBILITY","SET_ACTIVE_TAB","openSettingHandler","selectedSpectrum","nativeEvent","handleChangeVisibility","handleChangeActiveSpectrum","CHANGE_ACTIVE_SPECTRUM","group","MemoizedSpectra","SpectrumsTabsInner","setSpectrums","tabChangeHandler","SpectraPanelHeader","SpectrumListPanel","description","onConfirm","handleOnConfirm","editPathLengthsStyles","experimentType","onEdit","setFrom","pathLength","DefaultPathLengths","setTo","isError","setIsError","handleOnEdit","editedSignal","moveLinkStyles","correlationDim1","correlationDim2","correlations","selectedCorrelationIdDim1","setSelectedCorrelationIdDim1","selectedCorrelationIdDim2","setSelectedCorrelationIdDim2","correlation","getCorrelationDelta","getSelection","dim","selectionData","arr","_correlation","pseudo","atomType","origin","getCorrelationLabel","selection","modalContainer","setActiveTab","getLinkLabel","linkDim","getLinkDim","editedLink","editedCorrelations","buildCorrelationDataOptions","getEditedCorrelations","tabsContainer","TOP","correlationIdDim1","correlationIdDim2","toUpperCase","correlationsData","highlightIDsAdditionalColumn","findRangeOrZoneID","experimentID","highlightAdditionalColumn","focus","IsInView","tableHeaderProps","getLabelColor","equivalenceTextStyle","edited","equivalence","isInteger","moved","thProps","rowCorrelation","columnCorrelation","commonLinks","highlightIDsCommonLinks","highlightCommonLinks","handleEditPseudoHSQC","pseudoLinkCountHSQC","_link","_correlationDim1","_correlationDim2","commonPseudoLink","buildLink","cloneCorrelationAndEditLink","protonsCount","skipDataUpdate","commonLinksMenu","commonLink","commonLinkContextMenuLabel","getAbbreviation","commonPseudoLinkHSQC","contentLabel","isInViewRow","isInViewColumn","additionalColumnData","styleRow","styleLabel","onSaveEditEquivalences","onSaveEditNumericValues","onEditCorrelationTableCellHandler","highlightIDsRow","highlightRow","onSaveEquivalencesHandler","onSaveEditNumericValuesHandler","convertValuesString","additionalColumnFields","_commonLink","experimentLabel","equivalenceCellStyle","tableDataProps","otherTableDataProps","t","borderRight","hybridization","hybrid","filteredCorrelationsData","editEquivalencesSaveHandler","showProtonsAsRows","additionalColumnHeader","getAtomCounts","stateAtomType","errorColorIndex","Errors","_error","complete","ErrorColors","fontStyle","Overview","inputStyle","previousMF","setMF","isValidMF","setIsValidMF","hasChanged","setHasChanged","checkMF","onSaveHandler","onSaveHandlerMolecularFormulaInput","onSaveHandlerMoleculeSelection","onChangeHandlerMoleculeSelection","previousTolerance","tolerance","setTolerance","setIsValid","_isValid","panelStyle","setAdditionalColumnData","selectedAdditionalColumnsAtomType","setSelectedAdditionalColumnsAtomType","setShowProtonsAsRows","atomTypesInView","getAtomType","xDomain0","xDomain1","yDomain0","yDomain1","firstLink1D","getLinkDelta","findSpectrum","findSignalMatch1D","firstLink2D","findSignalMatch2D","_values","handleOnSetMolecularFormula","SET_CORRELATIONS_MF","handleOnSetShiftTolerance","SET_CORRELATIONS_TOLERANCE","showSetMolecularFormulaModal","showSetShiftToleranceModal","additionalColumnTypes","columnTypes","columnType","_selectedAdditionalColumnsAtomType","SET_CORRELATION","editNumericValuesSaveHandler","setCorrelationsHandler","SET_CORRELATIONS","deleteCorrelationHandler","DELETE_CORRELATION","deleteSignalHandler","findRange","findSignal1D","DELETE_1D_SIGNAL","findZone","findSignal2D","DELETE_2D_SIGNAL","changeSignalPathLengthHandler","SET_2D_SIGNAL_PATH_LENGTH","editCorrelationTableCellHandler","SummaryPanel","zoneDefaultValues","zonesPreferences","MemoizedZonesPreferences","ZonesPreferencesInner","ZonesPreferences","Yup.number","onSaveEditZoneModal","onCloseEditZoneModal","onZoomEditZoneModal","_rowData","isDefaultPathLength","changeSignalKindHandler","CHANGE_ZONE_SIGNAL_KIND","deleteZoneHandler","DELETE_2D_ZONE","zoomZoneHandler","xMargin","yMargin","SET_Y_DOMAIN","saveEditZoneHandler","SAVE_EDITED_ZONE","openEditZoneHandler","showUnlinkButton","setShowUnlinkButton","onHoverSignalX","onHoverSignalY","showUnlinkButtonSignalX","showUnlinkButtonSignalY","setShowUnlinkButtonSignalX","setShowUnlinkButtonSignalY","highlightSignalX","highlightSignalY","signalDeltaX","signalDeltaY","saveXHandler","CHANGE_ZONE_SIGNAL_VALUE","zoneID","saveYHandler","onHoverZoneX","onHoverZoneY","showUnlinkButtonZoneX","showUnlinkButtonZoneY","setShowUnlinkButtonZoneX","setShowUnlinkButtonZoneY","highlightZoneX","highlightZoneY","isOnZoneLevel","nuclei","xFrom","xTo","yFrom","yTo","getFilteredZones","_zones","unlinkZoneHandler","UNLINK_ZONE","visibilityHandler","MemoizedZonesPanel","ZonesPanelInner","databasePreferences","databaseDefaultValues","DatabasePreferences","overFlowStyle","names","enableRowSpan","smiles","onAdd","DatabaseTable","emptyKeywords","searchKeywords","handleChangeOption","useToolsFunctions","keywords","setKeywords","databaseInstance","databases","solvents","useAccordionContext","prevState","isOpen","mapDatabasesToSelect","getDatabasesNames","initiateDatabase","mapSolventsToSelect","getSolvents","prevResult","unshift","search","oldKeywords","handleChangeDatabase","databaseKey","resurrectHandler","RESURRECTING_SPECTRUM_FROM_RANGES","enableFilterHandler","tool","MemoizedDatabasePanel","DatabasePanelInner","testID","Table","mappedChildren","TableBody","size","getVAlign","TableHeader","TableHead","spectraCounter","activeFilterID","selectedFilterRef","handelFilterCheck","ENABLE_FILTER","handelDeleteFilter","DELETE_FILTER","DELETE_SPECTRA_FILTER","filterType","filterSnapShotHandler","newID","SET_FILTER_SNAPSHOT","getStyle","classes","filtersTableRow","ObjectInspector","isDeleteAllow","MemoizedFiltersTable","FiltersTableInner","FiltersTable","MemoizedFilterPanel","FilterPanelInner","onPredict","setMolecule","predictHandler","PredictionPreferences","accordionItems","hidePreferenceKey","PeaksPanel","RangesPanel","isExperimental","DatabasePanel","TOOLS_PANELS_ACCORDION","null","displayedMode","getPanelPreferences","usePanelPreferences","useCheckExperimentalFeature","panelOptions","isOpened","MemoizedPanels","PanelsInner","keysPreferences","overDisplayer","handleFullZoomOut","alignSpectrumsVerticallyHandler","changeDisplayViewModeHandler","useExport","allow1DTool","DELETE_EXCLUSION_ZONE","keysPreferencesListenerHandler","num","SET_KEY_PREFERENCES","keyCode","APPLY_KEY_PREFERENCES","toolsListenerHandler","checkSwitch","metaKey","ctrlKey","handleOnKeyDown","localName","version","versionInfo","startsWith","LIST","hideOpenOption","nucleusesObject","addNewNucleusFormatHandler","newFormat","newNucleuses","WorkspaceItem","setName","addWorkspaceHandler","deleteWorkspaceHandler","onTextChange","useWorkspacesList","workspacesList","handleReset","addWorkSpaceHandler","deleteWorkSpaceHandler","ChangeWorkspaceHandler","LEFT","actionButton","minMaxRatioRef","maxNumberOfPeaksRef","noiseFactor","lookNegativeRef","handleApplyFilter","AUTO_PEAK_PICKING","maxNumberOfPeaks","minMaxRatio","lookNegative","handleCancelFilter","justifyItems","algorithmRef","algorithm","setAlgorithm","APPLY_BASE_LINE_CORRECTION_FILTER","getAlgorithmsList","baselineAlgorithms","changeAlgorithmHandler","maxIterations","moreThan","initialValue","degree","previousPosition","valueRef","mouseDownCallback","mouseMoveCallback","mouseUpCallback","InputRange","phaseCorrectionTypes","manual","automatic","algorithms","ph0","ph1","ph0Ref","ph1Ref","phaseCorrectionType","setPhaseCorrectionType","APPLY_AUTO_PHASE_CORRECTION_FILTER","APPLY_MANUAL_PHASE_CORRECTION_FILTER","APPLY_ABSOLUTE_FILTER","calcPhaseCorrectionHandler","newValues","filedName","diff0","diff1","CALCULATE_MANUAL_PHASE_CORRECTION_FILTER","handleInput","handleRangeChange","MemoizedManualPhaseCorrectionPanel","ManualPhaseCorrectionPanelInner","hint","AUTO_RANGES_DETECTION","Sizes","sizeTextInputRef","lineBroadeningValue","setLineBroadeningValue","APPLY_ZERO_FILLING_FILTER","zeroFillingSize","getDefaultValue","log2","validity","valid","thresholdFactor","AUTO_ZONES_DETECTION","CHANGE_ZONES_NOISE_FACTOR","isFullscreen","onMaximize","selectedOptionPanel","hideGeneralSettings","base","selectedPanel","openGeneralSettingsHandler","openAboutUs","changeWorkspaceHandler","SvgLogoNmrium","docsBaseUrl","MemoizedHeader","HeaderInner","loadSubFilesFromZip","extractedfiles","uniqueFileExtensions","extension","selectedFilesByExtensions","FILES_TYPES","MOL","files","loadFilesFromZip","LOAD_MOL_FILE","NMRIUM","asBuffer","decoder","TextDecoder","binary","decode","LOAD_JSON_FILE","JDX","DX","LOAD_JCAMP_FILE","JDF","LOAD_JDF_FILE","loadFilesHandler","Set","loadFiles","fileSignature","getFileSignature","FILES_SIGNATURES","ZIP","unzipResult","Zip","loadAsync","zipFile","ex","hasBruker","brukerFile","endsWith","LOAD_ZIP_FILE","NMREDATA","LOAD_NMREDATA_FILE","droppedFiles","getRootProps","getInputProps","isDragActive","openImportDialog","useDropzone","noClick","types.SET_SELECTED_FILTER","types.SAVE_AS_SVG","types.SAVE_DATA_AS_JSON","listRef","translate","setTranslate","boxSize","oldTransform","placeholder","yup","publicationText","publicationStringHandler","GENERATE_SPECTRUM_FROM_PUBLICATION_STRING","allowedExtensions","onLoadClick","startLoading","pathReft","loadJCAMPHandler","extractFileMetaFromPath","loadFile","jcampURL","IMPORT_MENU","EXPORT_MENU","ftCounter","fidCounter","isExperimentalFeature","isButtonVisible","importMenu","isRealSpectrumShown","changeSpectrumViewHandler","LoadJacmpHandler","startLoadingHandler","importJCAMPFile","openImportPublicationStringModal","importHandler","SvgNmrOverlay3Aligned","SvgNmrOverlay3","isComplex","SvgNmrRealImag","SvgNmrAlignCenter","SvgNmrAlignBottom","MemoizedBasicToolBar","BasicToolBarInner","useDatumWithSpectraStatistics","active","setActive","toggleButton","_isActive","toggleButtons","setToggleButtons","handleOnChange","toggles","_toggles","_child","selectedOption","handleOnFFTFilter","APPLY_FFT_FILTER","SET_SELECTED_FILTER","selectedFilter","SvgNmrPeakPicking","SvgNmrMultipleAnalysis","SvgNmrZeroFilling","im","SvgNmrPhaseCorrection","SvgNmrBaselineCorrection","SvgNmrFourierTransform","MemoizedFunctionToolBar","FunctionToolBarInner","MemoizedToolBar","ToolBarInner","viewerContainerStyle","containerStyles","defaultPreferences","defaultData","ErrorOverlay","dataProp","onDataChange","useToggle","useFullscreen","spectrumReducer","initState","preferencesState","dispatchPreferences","preferencesReducer","initPreferencesState","checkActionType","actionType","dispatchMiddleWare","dispatchMiddleware","INITIATE","preventContextMenuHandler","SET_MOUSE_OVER_DISPLAYER","ModalProvider","NMRium","searchKey","object","seData","setKey","searchDeep","callBackData","setCallBackData","dropFileHandler","dropfiles","dataChangeHandler","DropZone","TestHighlight","Test","ReactDOM","TestRoutes","getElementById"],"mappings":"i8EAAA,KAAM,IAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,0uFCvCtB,YAAmB,EAAoB,GAAI,IACrC,GAAmB,YACZ,KAAQ,GACb,EAAK,UAAY,MAAM,QAAQ,EAAK,YACjC,KAAK,GAAQ,EAAK,UAAW,CAAC,GAAO,OAErC,KACHA,wBAAcC,GAAU,GAAE,IAAK,EAAK,OAAU,GAAQ,EAAK,cAI1D,GAGT,YACE,EACA,EAAoB,GACpB,EAAoB,GACpB,EAAc,EACd,IACI,GAAS,EACT,EAAuB,GAEvB,IAAgB,IAAM,EAAO,OACxB,GAAeC,uBAAa,EAAO,GAAc,GAAI,aAInD,KAAS,MACd,EAAM,GAAO,UAAY,MAAM,QAAQ,EAAM,GAAO,UAAW,MAC3D,GAAOF,wBAAc,GAAS,CAClC,IAAK,EAAQ,EACb,MAAO,EAAM,GAAO,qBAEf,KAAK,GACL,GAAQ,EAAQ,EAAK,EAAM,GAAO,SAAU,EAAQ,UAElD,KACPA,wBACEC,GACA,GAAE,IAAK,EAAQ,GAAQ,EAAM,IAC7B,EAAM,GAAO,cAKd,GAGT,YAA4B,EAAoB,GAAI,IAC9C,GAAqB,YACd,KAAQ,GACb,EAAK,UAAY,MAAM,QAAQ,EAAK,YAC7B,EAAO,OAAO,GAAa,CAAC,GAAO,OAErC,KAAK,SAGT,GAGT,YAAsB,EAAyB,GAAI,EAAuB,GAAI,IACxE,GAAY,WAEL,KAAQ,GAAY,IACzB,EAAK,UAAY,MAAM,QAAQ,EAAK,gBAC/B,IAAa,EAAK,SAAU,KAE1B,KAAK,SAGX,GAGT,YAAgB,EAAW,GAAI,MACvB,GAAQ,GAAI,QAAO,kCAAkC,KAAK,MAC5D,GAAmB,MACnB,EAAO,MACH,GAAa,EAAM,GAAG,MAAM,OAEhC,EAAW,OAAS,EAChB,EAAW,EAAW,OAAS,GAAK,EAAW,EAAW,OAAS,GACnE,EAAW,EAAW,OAAS,SAEhC,GAAmB,EAAS,QAAQ,YAAa,IC5E1D,KAAME,IAAaC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAUbC,GAAiBD;AAAAA;AAAAA,EAIjBE,GAAmBF;AAAAA;AAAAA,EAInBG,GAAYH;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA+BZI,GAAUJ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQVK,GAAgBL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAahBM,GAAgBN;AAAAA;AAAAA;AAAAA;AAAAA,EAMhBO,GAAoBP;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAU1B,YAAiBQ,EAAO,MAChBC,GAASC,kBAAQ,IACdC,GAAUH,EAAMC,QACtB,CAACD,EAAMC,SAEJG,EAAaJ,EAAMK,aAAe,OAAS,cAG/CC,UACE,IAAKd,EACHD,GACAS,EAAMK,aAAeX,GAAmBD,cAG1Ca,SAAK,IAAKV,aACRW,SAAK,MAAO,CAAEC,QAASJ,EAAYK,QAAS,0BAC1CF,OAAG,IAAKf,EAAIK,GAAeC,0BAE7BS,YAAQ,KAAK,SAAS,IAAKZ,GAAW,QAASK,EAAMU,sBACnDH,EAAC,YAGLA,SAAK,IAAKR,GAAmB,MAAO,CAAES,QAASJ,YAC7CG,EAACI,IACC,QAAUC,GAAM,GAERC,QAAQC,KACX,qBAAoBC,KAAKC,SACvBC,SAAS,IACTC,QAAQ,KAAM,UAEZC,KAAKnB,MAAMoB,MAAQ,QAAUC,GAAOT,EAAEO,KAAKnB,MAAMsB,UAI1D,KAAK,kBAEJrB,SAOX,OAAesB,GAAWC,eAAKC,KC7I/B,KAAM,IAAY,gBAAsB,GAAO,GAAS,GAAO,KAAkB,GAAgB,SAAiB,EAAY,EAAM,CAEhI,MAAI,AAAuB,CAAC,GAAQ,EAAK,SAAW,EACzC,IAEJ,QAAQ,IAAI,EAAK,IAAI,AAAC,GAAQ,CAIjC,GAFA,EAAM,GAAG,KAAO,IAEZ,IAAO,IACP,OAEJ,GAAK,GAAO,GACZ,KAAM,GAAQ,EAAI,SAAS,QACrB,EAAc,EAAQ,qBAAuB,GAEnD,GAAI,SAAS,cAAc,cAAc,MAAQ,KAC7C,OAGJ,KAAM,GAAO,SAAS,cAAc,QAUpC,GARA,EAAK,IAAM,EAAQ,aAAe,GAC7B,GACD,GAAK,GAAK,SACV,EAAK,YAAc,IAEvB,EAAK,KAAO,EAEZ,SAAS,KAAK,YAAY,GACtB,EACA,MAAO,IAAI,SAAQ,CAAC,EAAK,IAAQ,CAC7B,EAAK,iBAAiB,OAAQ,GAC9B,EAAK,iBAAiB,QAAS,IAAM,EAAI,GAAI,OAAM,6BAA6B,YAGxF,KAAK,IAAM,MClCN,GAAgB,CAC3B,KAAMD,eAAKE,eAAK,IAAM,0DACtB,SAAUF,eAAKE,eAAK,IAAM,8DAC1B,WAAYF,eAAKE,eAAK,IAAM,gEAC5B,KAAMF,eAAKE,eAAK,IAAM,2EACtB,KAAMF,eAAKE,eAAK,IAAM,0DACtB,aAAcF,eAAKE,eAAK,IAAM,kEAC9B,SAAUF,eAAKE,eAAK,IAAM,8DAC1B,WAAYF,eAAKE,eAAK,IAAM,iECAxBC,GAAenC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAOfoC,GAAmBpC;AAAAA;AAAAA,EAInBqC,GAAqBrC;AAAAA;AAAAA;AAAAA,cAUDQ,EAAuB,MACzC,CAAEC,SAAS,GAAI6B,WAAY9B,EAC3B+B,EAAa7B,kBAAQ,IAAM8B,GAAmB/B,GAAS,CAACA,IACxD,CAACI,EAAc4B,GAAmBC,mBAAS,IAC3CC,EAAaC,sBACjB,IAAMH,EAAgB,CAAC5B,GACvB,CAACA,UAIDC,UACE,MAAO,CACL+B,SAAU,WACVC,IAAK,EACLC,OAAQ,mBAGVhC,EAACkB,UACKzB,IACJ,SACA,eACA,aAAcmC,KAEhB5B,SACE,IAAKf,EACHmC,GACAtB,EAAewB,GAAqBD,aAGtCrB,EAACiC,+BACCjC,EAACkC,oBAAS,SAAUlC,0CAClBD,EAAC,cACEyB,EAAWW,IAAKC,GAEbpC,EAAC,IACC,KAAO,4BACCa,MAAQ,QAAUC,GAAOsB,EAAKrB,QAEtC,OAAStB,GACPO,EAAC,UAAeP,IAAO,OAAY,cAEhCqB,GAAOsB,EAAKrB,QAKtBS,EAAWa,OAAS,GACnBrC,EAAC,IACC,KAAK,IACL,OAAQ,IAAM,MACNsC,GAAYd,EAAW,GACvBe,EAAWD,EAAUzB,KAAOyB,EAAUzB,KAAO,OAC7C2B,EAAeC,GAAcF,SAC5BvC,GAAC,OAAiBsC,EAAU,OAEhCxB,GAAOU,EAAW,GAAGT,mBAW5C,YAAoBtB,EAAO,MACnB,CACJiD,MAAO,CACLC,OAAQ,CAAEC,OAEZR,OACAb,WACE9B,EACE8C,EAAWH,EAAKvB,KAAOuB,EAAKvB,KAAO,OACnC2B,EAAeC,GAAcF,SAEjCvC,GAAC,SAA0BoC,IAAM,GAAItB,GAAOsB,EAAKrB,MAAO,YAArC6B,eC/FrBnD,EACA,iBAGI,MAAO,CACLqC,SAAU,WACVC,IAAK,EACLC,OAAQ,2BAIR,MAAO,CACLF,SAAU,WACV7B,QAAS,QACT4C,MAAO,MACPC,WAAY,OACZC,YAAa,OACbf,OAAQ,OACRgB,gBAAiB,qBAGlBd,oBAAS,qDACP,eACE,IACC,KAAK,IACL,OAAQ,AAACe,GAAoB,MACrB,CACJP,MAAO,CACLC,OAAQ,CAAEC,QAEVK,EACEV,EAAW9C,EAAMoB,KAAOpB,EAAMoB,KAAO,aAErC2B,EAAeC,GAAcF,YAGhC,SAA0B9C,IAAO,GAAIqB,GAAOrB,EAAMyD,SAAhCN,KAGlB9B,GAAOrB,EAAM0D,eC7ChC,KAAMC,IASF,CACFC,cAAe,CACbpD,QAAS,OACTqD,eAAgB,SAChBC,WAAY,SACZvB,OAAQ,QACRa,MAAO,QACPG,gBAAiB,WAEnBQ,UAAW,CACTX,MAAO,MACPb,OAAQ,MACR/B,QAAS,OACTsD,WAAY,SACZD,eAAgB,SAChBG,aAAc,OACdC,SAAU,OACVC,UAAW,UAEbC,OAAQ,CACNZ,gBAAiB,QACjBa,MAAO,SAETC,MAAO,CACLd,gBAAiB,MACjBa,MAAO,SAETE,YAAa,CACXL,SAAU,SAEZM,aAAc,CACZN,SAAU,QAEZO,WAAY,CACVP,SAAU,OACVxD,QAAS,YACTuD,aAAc,OACdS,OAAQ,oBACRC,WAAY,OACZC,OAAQ,YAIZ,kBAAwBC,EAAK,MACrBC,GAAW,KAAMC,OAAMF,MACzB,WACUC,GACC,KAAMA,GAASE,aAErBnE,kBAECyD,MAAMzD,GACP,MAIX,YAAqBiE,EAAU,IACzB,CAACA,EAASG,QACN,IAAIC,OAAO,QAAOJ,EAASK,YAAYL,EAASM,oBAEjDN,GAGT,KAAMO,IAAQpF,GAAU,MAChB,CAACqF,EAAMC,GAAapD,mBAMvB,CACDqD,SAAU,GACVL,OAAQ,IACRjF,OAAQ,KAGJ,CAACuF,EAAeC,GAAoBvD,mBAAS,IAE7CwD,EAActD,sBAAY,IAAM,GAC1B,CAAEmD,SAAU,GAAML,OAAQ,IAAKjF,aACxC,IAEG0F,EAAmB,CAACf,EAAM,KACvBA,EAAIgB,UAAUhB,EAAIiB,YAAY,KAAO,GAGxCC,EAAOC,OAAOC,SAASF,gCACnB,IAAM,MACRG,GAAK,GAAIC,KAAIJ,GAAMK,gBACrBF,EAAGG,IAAI,aAAc,MACjBC,GAAYJ,EAAGK,IAAI,gBACrB,CAACD,gBAEaV,EAAiBU,GAAWE,mBAEvC,UACc,SACZC,GAASH,GAAWI,KAAMC,GAAiB,IAC1CA,EAAc,MACV5E,GAAUuE,EAAUnF,QACxB,+CACA,MAGIyF,EAAgBC,KAAKC,MACzBD,KAAKE,UAAUJ,GAAcxF,QAAQ,UAAWY,MAExC,CACRyD,SAAU,GACVL,OAAQ,IACRjF,OAAQ0G,EACR7E,mBAGQ,CAAEyD,SAAU,GAAOL,OAAQ,IAAKjF,OAAQ,iBAKnD,SACA,SACc,YACP,CACRsF,SAAU,GACVL,OAAQ,IACRxB,KAAM2C,mBAUK,WACP,CAAEd,SAAU,GAAML,OAAQ,IAAKjF,UAAgB6B,QAAS,QAEnE,CAACgE,IAEG,AAACT,EAAKE,SA4BTC,GAAiBA,IAAkB,WACpC,UAA0BxF,IAAO,KAAMqF,EAAK3B,UAE5CqD,UAAgB/G,IAAO,OAAQqF,EAAKpF,OAAQ,QAASoF,EAAKvD,oBA9BtD,MAAO6B,GAAOC,gCAEf,MAAO,OACFD,GAAOI,WACNsB,EAAKH,SAAW,IAAMvB,GAAOQ,OAASR,GAAOU,gBAGlDgB,EAAKH,SAAW,8BAEV,MAAOvB,GAAOY,wHAKd,MAAOZ,GAAOW,iFAGf,MAAOX,GAAOa,WACd,KAAK,SACL,QAASkB,sDC7KrB,EACS,MACH,GAAgB,CACpB,MACA,WACA,WACA,UACA,OACA,UACA,aACA,QACA,eAES,KAAO,MACZ,EAAM,iBAAiB,SAClB,SAGJ,QClBI,IAAa,iBAGxB,EACA,EACA,EACA,EACA,EACA,MACM,CAAE,YAAW,WAAY,GAAgB,EAAG,CAChD,OACA,UAGE,EAAU,GAAa,GAAY,MAC/B,GAAO,CACX,EAAG,EAAE,SAAS,EAAW,GACzB,EAAG,EAAG,SAAS,EAAW,IAGtB,EAAS,GAAiB,EAAM,CACpC,YACA,sBAAuB,GACvB,mBAAoB,WAElB,IAAU,EAAO,YAAc,cAC5B,CACL,aAAc,EAAO,GAAG,IAAI,AAAC,GAAM,EAAE,cAAc,KAAK,IACxD,KAAM,SACN,MAAO,EAAO,UACd,GAAI,EAAO,cAGP,IAAI,OAAM,sCAAsC,aCvB1D,KAAMsB,IAAe,CACnBC,KAAM,UACNC,MAAO,CACLC,MAAO,KACPC,IAAK,MAEPC,OAAQ,EACRC,KAAM,EACNC,OAAQ,EACRC,KAAM,GAGKC,GAAeC,wBAAcV,gBAab,CAC3BW,WACAC,YACAC,QACAC,UAAU,IAAM,KAChBC,SAAS,IAAM,KACfC,gBAAgB,IAAM,KACtBC,UAAU,IAAM,KAChBC,iBACoB,MACd,CAACC,EAAOC,GAAYC,qBAAWC,GAAStB,IACxC,CAACuB,EAAeC,GAAoBtG,mBAAiB,GACrDuG,EAAyBC,iBAAmB,IAE5CC,EAAmBvG,sBACtBwG,GACKA,GAAMC,SAAW,GACfX,MACIY,oBAEC,CACPC,KAAM,OACNC,SAAUJ,EAAMI,SAChBC,OAAQL,EAAMK,OACdC,QAASN,EAAMM,QACfC,QAASP,EAAMO,QACfC,QAASR,EAAMQ,QACfC,QAAST,EAAMS,QACfC,aAAcV,EAAMW,cAAcC,4BAGnBZ,EAAMa,YAElB,IAET,CAACvB,IAGGwB,EAAetH,sBAClBxB,GAAM,GACH+I,eACIF,GAAY7I,EAAE6I,UACdH,EAAe1I,EAAE2I,cAAcC,wBAC/BI,EAAIhJ,EAAEwI,QAAUE,EAAaM,EAC7BC,EAAIjJ,EAAEyI,QAAUC,EAAaO,EAE7BC,EAAWC,GAAe,IAAM,CAElCN,EAAYlB,GAAiB,KAC7BE,EAAuBuB,QAAQpH,SAAW,KAElC,OAAKhC,GAAL,CAAQgJ,IAAGC,SAEEG,QAAU,IAChC,OAEoBA,QAAQlJ,KAAKgJ,OAIhCrB,EAAuBuB,QAAQpH,OAAS,OAChC6F,EAAuBuB,QAAUC,GACzCA,EAASC,YAEYF,QAAU,KACnB,OAAKpJ,GAAL,CAAQgJ,IAAGC,SAG7B,CAACtB,EAAeN,EAASD,IAGrBmC,EAAmB/H,sBACtBwG,GAAU,MACHU,GAAeV,EAAMW,cAAcC,wBACnCI,EAAIhB,EAAMQ,QAAUE,EAAaM,EACjCC,EAAIjB,EAAMS,QAAUC,EAAaO,EAEjC,CAAEO,SAAQC,SAAQrB,WAAUsB,aAAc1B,IACzC,CAAEwB,OAAQA,GAAUC,EAAQrB,WAAUsB,YAAWV,IAAGC,OAE7D,CAAC9B,wBAGO,IAAM,MACR,CAAEd,OAAMI,SAAQC,OAAMC,SAAQC,QAASW,EAEzClB,IAAS,OAASlG,KAAKwJ,MAAMjD,EAAOD,EAAQG,EAAOD,GAAU,MACvDY,KACC,CACPY,KAAM,WAGT,CAACjB,EAASK,SAEPqC,GAAepI,sBAAawG,GAAU,GACjC,CACPG,KAAM,OACNG,QAASN,EAAMM,QACfC,QAASP,EAAMO,QACfC,QAASR,EAAMQ,QACfC,QAAST,EAAMS,WAEhB,IAEGoB,EAAarI,sBAAawG,MACrB,CACPG,KAAM,KACNK,QAASR,EAAMQ,QACfC,QAAST,EAAMS,UAEV,IACN,aAGA,GAAa,UAAS,MAAOlB,oBAE1B,YACA,QACA,YAAaQ,EACb,UAAW8B,EACX,YAAaD,EACb,QAASd,EACT,QAASS,iBAQjB,YAAiBhC,EAAOuC,EAAQ,QACtBA,EAAO3B,UACR,QACCZ,EAAMlB,OAAS,YAAckB,EAAMlB,OAAS,QAAS,MACjD,CAAEmC,UAASC,WAAYqB,QAEtB,QACFvC,GADE,CAELb,KAAM8B,EAAUjB,EAAMmB,aAAaM,EACnCpC,KAAM6B,EAAUlB,EAAMmB,aAAaO,EAEnC5C,KAAMkB,EAAMlB,OAAS,QAAU,UAAY,cAGxCkB,OACJ,UACCA,EAAMlB,OAAS,WAAakB,EAAMlB,OAAS,MAAO,MAC9C,CACJiC,UACAC,UACAC,UACAC,UACAC,eACAN,WACAC,UACEyB,EACEd,EAAIR,EAAUE,EAAaM,EAC3BC,EAAIR,EAAUC,EAAaO,QAE1B,QACF1B,GADE,CAELa,WACAC,SACA5B,OAAQuC,EACRrC,OAAQsC,EACRc,aAAczB,EACd0B,aAAczB,EACd0B,aAAczB,EACd0B,aAAczB,EACdC,eACArC,KAAM,gBAGHkB,OACJ,UACCA,EAAMlB,OAAS,SAAWkB,EAAMlB,OAAS,WAAY,MACjD,CAAEmC,UAASC,WAAYqB,QAEtB,QACFvC,GADE,CAELlB,KAAM,WACNK,KAAM8B,EAAUjB,EAAMmB,aAAaM,EACnCpC,KAAM6B,EAAUlB,EAAMmB,aAAaO,UAGhC1B,OACJ,UACCA,EAAMlB,OAAS,YACV,QACFkB,GADE,CAELlB,KAAM,gCAKHkB,SChOA4C,IAAerD,wBAAmB,IACzCsD,GAAiBD,GAAaE,sBAEF,OACzBC,sBAAWH,gBAUS,CAC3BpD,WACAC,YACAC,QACAK,iBACoB,MACd,CAACiD,EAAmBC,GAAwBlJ,mBAGxC,MACJmJ,EAAmBjJ,sBACtBxB,GAAM,MACC0I,GAAe1I,EAAE2I,cAAcC,wBAC/BI,EAAIhJ,EAAEwI,QAAUE,EAAaM,EAC7BC,EAAIjJ,EAAEyI,QAAUC,EAAaO,IACd,CAAED,IAAGC,MACtB3B,KACAY,mBAGN,CAACZ,IAGGoD,EAAoBlJ,sBACvBxB,GAAM,GACgB,MACjBsH,KACAY,mBAGN,CAACZ,aAIA,IAAe,MAAOiD,oBAEnB,YACA,QACA,YAAaE,EACb,aAAcC,sBC9DT,IAA+D,CAC1E,CACE,IAAK,SACL,MAAO,SACP,MAAO,UAET,CACE,IAAK,YACL,MAAO,YACP,MAAO,aAET,CACE,IAAK,UACL,MAAO,UACP,MAAO,WAET,CACE,IAAK,WACL,MAAO,WACP,MAAO,YAET,CACE,IAAK,WACL,MAAO,WACP,MAAO,YAET,CACE,IAAK,KACL,MAAO,KACP,MAAO,MAET,CACE,IAAK,KACL,MAAO,KACP,MAAO,MAET,CACE,IAAK,KACL,MAAO,KACP,MAAO,OAIE,GAAuB,CAAC,UACxB,GAAY,CAAE,OAAQ,SAAU,MAAO,SC1CvCnI,GAAK,WACLoI,GAAO,uBAOE,EAAS,IACzB,CAACC,GAAa,QACV,IAAI,OAAM,0CAGV,KAAK,GAAK,GAAa,EAAQ,QAC/B,KAAK,GAAK,GAAI,cAAa,KAC3B,KAAO,OAAK,EAAQ,MAAb,CAAmB,UAAW,iBAGlB,EAAS,OAChC,KAAQ,KAAK,WAAa,CAAC,EAAQ,KAAK,oBAIrB,OAChB,CACL,KAAM,GACN,OAAQ,iIC1BCrI,IAAK,sBACLoI,GAAO,6BAUd,GAAiB,CACrB,WAAY,EACZ,kBAAmB,IACnB,cAAe,GACf,YAAa,eAGO,EAAS,EAAU,GAAI,IACvC,CAACC,GAAa,QACV,IAAI,OAAM,qDAEX,IAAwB,EAAQ,KAAM,OACxC,IACA,gBAIsB,EAAS,OAChC,KAAQ,KAAK,WAAa,CAAC,EAAQ,KAAK,mBAIvB,EAAe,EAAU,IAC1C,GAAU,OAAO,OAAO,GAAI,YACrB,KAAK,KACN,IAAM,EAAS,SAElB,CACL,KAAM,GACN,OAAQ,8HCtCCrI,IAAK,qBACLoI,GAAO,sBAOP,GAAqB,CAChC,OAAQ,SACR,WAAY,0BAGQ,EAAS,EAAe,GAAI,IAC5C,CAACC,GAAa,QACV,IAAI,OAAM,uDAEZ,CAAE,YAAW,QAAQ,IAAO,KAC9B,CAAE,IAAG,MAAO,EAAQ,KAEpB,SACI,OACD,WACS,GAAO,EAAG,EAAI,GAAS,oBAEhC,mBAEK,GAAkB,CACtB,kBAAmB,EAAQ,WAEzB,GAAUC,GACZ,CAAE,IAAG,EAAG,GACR,CAAE,eAAgB,KAAM,UAEtB,EAASC,GAAmB,EAAQ,EAAG,EAAQ,EAAG,GAClD,CAAE,cAAe,IACT,GAAI,cAAa,EAAE,eACtB,GAAI,EAAG,EAAI,EAAG,OAAQ,MACnB,GAAK,EAAG,GAAK,EAAW,QAAQ,EAAE,uBAM1C,IAAI,OAAM,0CAA0C,YAGvD,OAAO,EAAQ,KAAM,CAAE,GAAI,gBAGP,EAAS,OAC/B,GAAQ,KAAK,mBAIK,OAChB,CACL,KAAM,GACN,OAAQ,uJC5DCvI,IAAK,aACLoI,GAAO,0BAOE,EAAS,UACzB,CAACC,GAAa,QACV,IAAI,OAAM,mDAGZ,GAAK,EAAQ,KAAK,GAAG,MAAM,GAC3B,EAAK,KAAQ,KAAK,KAAb,cAAiB,MAAM,GAE5B,EAASG,QAAK,GACd,EAASA,QAAK,GAAM,WAEjB,GAAI,EAAG,EAAI,EAAG,OAAQ,MAC1B,IAAM,EACL,MACC,IAAM,KAIL,KAAK,GAAK,EAEd,MACM,KAAK,GAAK,eAIO,EAAS,OAChC,KAAQ,KAAK,WAAa,CAAC,EAAQ,KAAK,oBAIrB,OAChB,CACL,KAAM,GACN,OAAQ,iIC3CCxI,IAAK,gBACLoI,GAAO,6BAOE,EAAS,EAAe,GAAI,IAC5C,CAACC,GAAa,QACV,IAAI,OAAM,oDAGd,CAAE,qBAAqB,GAAM,EAC7B,EAAK,GAAI,cAAa,EAAQ,KAAK,IACnC,EAAK,GAAI,cAAa,EAAQ,KAAK,IAEnC,EAAgB,KAAK,MAAM,QAEzB,GAAO,KACI,OAEX,GAAQ,GAAI,cAAa,EAAG,QAC5B,EAAQ,GAAI,cAAa,EAAG,UAC5B,IAAI,EAAG,MAAM,MACb,IAAI,EAAG,MAAM,EAAM,GAAgB,EAAG,OAAS,KAC/C,IAAI,EAAG,MAAM,MACb,IAAI,EAAG,MAAM,EAAM,GAAgB,EAAG,OAAS,KAE7C,KAAK,GAAK,IACV,KAAK,GAAK,cAGS,EAAS,OAChC,KAAQ,KAAK,WAAa,EAAQ,KAAK,oBAIpB,OAChB,CACL,KAAM,GACN,OAAQ,mICvCCrI,IAAK,gBACLoI,GAAO,6BA2BE,EAAS,EAAe,GAAI,IAC5C,CAACC,GAAa,QACV,IAAI,OAAM,sDAEZ,CAAE,OAAM,KAAI,iBAAgB,cAAe,EAC3C,CAAE,IAAG,KAAI,MAAO,EAAQ,KACxB,EAAUC,GACd,CAAE,IAAG,EAAG,GACR,CAAE,OAAM,KAAI,iBAAgB,oBAGtB,KAAK,EAAI,EAAQ,IACjB,KAAK,GAAK,EAAQ,EACtB,EAAI,MACA,GAAUA,GACd,CAAE,IAAG,EAAG,GACR,CAAE,OAAM,KAAI,iBAAgB,iBAEtB,KAAK,GAAK,EAAQ,eAID,EAAS,OAChC,KAAQ,KAAK,WAAa,CAAC,EAAQ,KAAK,oBAIrB,OAChB,CACL,KAAM,GACN,OAAQ,iICxDCtI,IAAK,iBACLoI,GAAO,8BAOE,EAAkB,EAAQ,GAAI,IAC9C,CAACC,GAAa,QACV,IAAI,OAAM,2DAEZ,CAAE,IAAG,KAAI,MAAO,EAAQ,OACtB,KAAK,GAAK,GAAY,CAAE,IAAG,EAAG,GAAM,CAAE,UAAS,IAC/C,KAAK,GAAM,GACf,GAAY,CAAE,IAAG,EAAG,GAAM,CAAE,sBAIL,EAAkB,OACzC,KAAQ,KAAK,WAAa,EAAQ,KAAK,kBAItB,EAAe,EAAU,OACvC,CACL,KAAM,GACN,OAAQ,GAAe,EAAc,OAAO,gIC7BnCrI,IAAK,MACLoI,GAAO,kBAOE,EAAS,IACzB,CAACC,GAAa,QACV,IAAI,OAAM,sCAGd,GAAuB,EAAQ,QAAQ,KACzC,AAAC,GAAM,EAAE,OAAS,iBAAmB,EAAE,gBAGlC,OAAO,EAAQ,KAAM,GAAQ,EAAQ,KAAM,CAAE,eAAgB,MAEhE,EAAsB,IACpB,CAAE,iBAAkB,EAAQ,KAC5B,KAAuB,KAAK,MAAM,IAAkB,KAAK,GAAK,SAC3D,OAAO,EAAQ,KAAM,GAAoB,EAAQ,KAAM,EAAG,MAG3D,KAAK,EAAI,GAAc,KACvB,KAAO,OAAK,EAAQ,MAAb,CAAmB,MAAO,GAAO,KAAM,iBAG3B,EAAS,OAChC,KAAQ,KAAK,WAAa,EAAQ,KAAK,oBAIpB,OAChB,CACL,KAAM,GACN,OAAQ,QAIZ,YAAuB,EAAS,MACxB,GAAO,EAAQ,KACf,EAAgB,WAAW,EAAK,eAChC,EAAkB,WAAW,EAAK,iBAClC,EAAgB,WAAW,EAAK,eAChC,EAAS,EAAkB,KAC7B,GAAoB,GAAM,EAC1B,EAAW,EAAQ,KAAK,EAAE,OAC1B,EAAa,EAAS,EACtB,EAAK,KAA4B,QAC/B,GAAQ,GAAI,OAAM,UACf,GAAI,EAAG,EAAI,EAAU,MACtB,GAAK,KACG,QAET,8HCxDIrI,IAAK,SACLoI,GAAO,sBAOE,EAAS,EAAe,GAAI,IAC5C,CAACC,GAAa,QACV,IAAI,OAAM,mDAEZ,CAAE,IAAG,KAAI,MAAO,EAAQ,KACxB,CAAE,OAAM,MAAO,EACf,CAAE,YAAW,WAAY,GAAgB,EAAG,CAAE,OAAM,SAElD,KAAK,EAAI,EAAE,MAAM,EAAW,KAC5B,KAAK,GAAK,EAAG,MAAM,EAAW,GAClC,MACM,KAAK,GAAK,EAAG,MAAM,EAAW,gBAIb,EAAS,OAChC,KAAQ,KAAK,WAAa,CAAC,EAAQ,KAAK,mBAIvB,EAAe,EAAU,OACvC,CACL,KAAM,GACN,OAAQ,8HCjCCrI,IAAK,iBACLoI,GAAO,8BAQE,EAAS,EAAO,IAChC,CAACC,GAAa,QACV,IAAI,OAAM,iDAGd,GAAS,EAAQ,KAAK,cACtB,EACA,EAAS,IACK,KAAK,MAAM,KAEX,OAGZ,GAAK,EAAQ,KAAK,GAClB,EAAK,EAAQ,KAAK,GAClB,EAAI,EAAQ,KAAK,EAEjB,EAAS,EAAG,OAEZ,EAAQ,GAAI,cAAa,GACzB,EAAQ,GAAI,cAAa,GAGzB,KAAQ,EAAS,GAAK,EAAE,OAAgB,GAExC,EAAK,CAAC,EAAQ,KAAK,IAAI,GAEvB,EAAU,KAAK,IAAI,EAAK,MAC1B,GAAY,KAAK,IAAI,EAAK,EAAE,WACvB,GAAI,EAAG,EAAI,EAAS,EAAe,MACpC,GAAK,EAAG,GAAK,IACb,GAAK,EAAG,GAAK,IACP,EAAY,IAEd,KAAK,IAAI,EAAK,EAAE,WACnB,GAAI,EAAQ,EAAI,EAAS,EAAe,MACzC,GAAK,EAAG,GAAK,IACb,GAAK,EAAG,GAAK,IACP,EAAY,IAElB,KAAO,OAAK,EAAQ,MAAb,CAAwB,GAAI,EAAO,GAAI,gBAG3B,EAAS,OAChC,KAAQ,KAAK,WAAa,EAAQ,KAAK,mBAItB,EAAe,EAAU,OACvC,CACL,KAAM,GACN,OAAQ,EAAgB,8HC1DfrI,IAAK,SACLoI,GAAO,qBAOE,EAAS,UACzB,CAACC,GAAa,QACV,IAAI,OAAM,8CAGZ,GAAK,EAAQ,KAAK,GAAG,MAAM,GAC3B,EAAK,KAAQ,KAAK,KAAb,cAAiB,MAAM,KAE1B,KAAK,GAAK,GAAqB,GACnC,MACM,KAAK,GAAK,GAAqB,gBAId,EAAS,OAChC,KAAQ,KAAK,WAAa,CAAC,EAAQ,KAAK,oBAIrB,OAChB,CACL,KAAM,GACN,OAAQ,iIC9BCrI,IAAK,kBACLoI,GAAO,+BAUE,EAAS,EAAe,GAAI,IAC5C,CAACC,GAAa,QACV,IAAI,OAAM,kDAEd,CAAE,MAAK,OAAQ,KACZ,KAAK,GAAK,OACV,KAAK,GAAK,WACV,OAAO,EAAQ,KAAM,GAAoB,EAAQ,KAAM,EAAK,gBAGxC,EAAS,OAChC,KAAQ,KAAK,WAAa,CAAC,EAAQ,KAAK,mBAIvB,EAAe,EAAU,OACvC,CACL,KAAM,GACN,OAAQ,8HCzBCrI,IAAK,SACLoI,GAAO,sBAEE,EAAS,EAAa,EAAG,GACrC,KAAK,EAAI,EAAQ,KAAK,EAAE,IAAI,AAAC,GAAQ,EAAM,gBAGtB,OACtB,eAGc,EAAe,EAAU,OACvC,CACL,KAAM,GACN,OAAQ,EAAgB,8HClBfpI,IAAK,oBACLoI,GAAO,iCAOE,EAAS,UACzB,CAACC,GAAa,QACV,IAAI,OAAM,0DAGZ,GAAK,EAAQ,KAAK,GAAG,MAAM,GAC3B,EAAK,KAAQ,KAAK,KAAb,cAAiB,MAAM,GAE5B,EAAQI,qBAAkB,GAC1B,EAAQA,qBAAkB,GAAM,WAE7B,GAAI,EAAG,EAAI,EAAG,OAAQ,MAC1B,IAAM,EACL,MACC,IAAM,KAIL,KAAK,GAAK,EAEd,MACM,KAAK,GAAK,eAIO,EAAS,OAChC,KAAQ,KAAK,WAAa,CAAC,EAAQ,KAAK,oBAIrB,OAChB,CACL,KAAM,GACN,OAAQ,iIC3CCzI,IAAK,cACLoI,GAAO,2BAME,EAAS,EAAM,IAC/B,CAACC,GAAa,QACV,IAAI,OAAM,8CAGd,GAAuB,EAAQ,QAAQ,KACzC,AAAC,GAAM,EAAE,OAAS,iBAAmB,EAAE,MAGrC,EAAS,EAAQ,KAAK,cACtB,EACA,EAAS,GAAK,IACA,KAAK,MAAM,KAEX,OAGZ,CAAE,KAAI,KAAI,KAAM,EAAQ,QAE1B,GAAQ,GAAI,cAAa,GACzB,EAAQ,GAAI,cAAa,GACzB,EAAO,GAAI,cAAa,QAEtB,GAAS,KAAK,IAAI,EAAM,EAAG,UAE3B,IAAI,EAAG,MAAM,EAAG,EAAS,MACzB,IAAI,EAAG,MAAM,EAAG,EAAS,MAC1B,IAAI,EAAE,MAAM,EAAG,EAAS,OAEzB,GAAO,EAAE,GAAK,EAAE,GAChB,EAAW,EAAE,EAAS,EAAgB,UACjC,GAAI,EAAS,EAAe,EAAI,EAAM,OACjC,IACP,GAAK,EAGR,EAAgB,GAAK,EAAgB,MACjC,IAAI,EAAG,MAAM,EAAG,OAAS,GAAgB,EAAO,KAChD,IAAI,EAAG,MAAM,EAAG,OAAS,GAAgB,EAAO,MAGhD,KAAO,OAAK,EAAQ,MAAb,CAAwB,GAAI,EAAO,GAAI,EAAO,EAAG,gBAGrC,EAAS,OAChC,KAAQ,KAAK,WAAa,EAAQ,KAAK,mBAItB,EAAgB,EAAU,OACxC,CACL,KAAM,GACN,OAAQ,8HCrDCrI,IAAK,WACLoI,GAAO,yBAEE,EAAS,EAAa,EAAG,GACrC,KAAK,MAAQ,IACb,KAAK,MAAQ,eAGQ,OACtB,eAGc,EAAe,EAAU,OACvC,CACL,KAAM,GACN,OAAQ,EAAgB,8HCff,IAAK,WACL,GAAO,yBAEE,EAAS,EAAa,EAAG,GACrC,KAAK,MAAQ,IACb,KAAK,MAAQ,eAGQ,OACtB,eAGc,EAAe,EAAU,OACvC,CACL,KAAM,GACN,OAAQ,EAAgB,2bCrB5B,KAAM,IAAS,iEAET,GAAS,cAE8B,IACvC,GAAK,UACA,GAAI,EAAG,EAAI,GAAQ,OACpB,GAAO,OAAO,KAAK,MAAM,KAAK,SAAW,WAE1C,GCOT,YAAqB,EAAO,EAAiB,GAAI,IAC3C,GAAY,UACP,KAAU,GAAS,MACpB,GAAe,CACnB,KAAM,EAAO,KACb,MAAO,GAAQ,EAAO,MAAM,KAC5B,MAAO,EAAO,SAEV,EAAiB,GAAgB,EAAO,EAAO,SACjD,EAAgB,MACZ,GAAe,GAAQ,EAAO,MAAM,OACxC,EAAe,MACf,EAAa,OAEX,EAAa,KACV,OACS,IAEV,EAAa,QAAU,MAAQ,EAAa,SAAW,WAC3C,EAAO,EAAe,GAAI,EAAa,YAIrD,EACA,EACA,OAAO,UAAU,eAAe,KAAK,EAAQ,iBACzC,EAAO,cACP,YAKN,EACA,EACA,OAAO,UAAU,eAAe,KAAK,EAAQ,iBACzC,EAAO,cACP,OAIN,EACE,EAAQ,SAAW,GAAK,GAAa,EAAO,EAAQ,GAAG,SACjD,EAAQ,GAAG,MAAM,MAAM,EAAO,EAAQ,GAAG,YAElC,eAGR,KAAU,MACT,EAAO,MAAM,MAAM,EAAO,EAAO,SAK/C,YAAsB,EAAO,EAAI,MACzB,GAAQ,EAAM,QAAQ,UAAU,AAAC,GAAM,EAAE,OAAS,SACpD,GAAM,QAAQ,SAAW,EAAQ,EAMvC,YAAyB,EAAO,EAAY,OACnC,GAAM,QAAQ,KAAK,AAAC,GAAM,EAAE,OAAS,GAG9C,YAAwB,EAAO,EAAe,KAAM,MAC5C,GAAW,GAAoB,EAAM,WAC9B,EAAO,KAAM,KAAM,GAIlC,YAAsB,EAAO,EAAI,EAAS,EAAU,KAAM,GAClD,QAAU,EAAM,QAAQ,MAAM,GAChC,MACI,QAAU,EAAM,QAAQ,IAAI,AAAC,GAC1B,OAAK,GAAL,CAAa,KAAM,EAAO,KAAO,EAAK,EAAU,EAAO,OAC7D,OAEC,KAAO,OAAK,EAAM,MAAS,EAAM,gBACjC,KAAO,OAAK,EAAM,MAAS,EAAM,mBACjC,GAAW,GAAoB,EAAM,eAClC,KAAe,GAAU,MAC1B,GAAS,EAAM,QAAQ,QACvB,QAAQ,GAAe,OACxB,EAAM,QAAQ,IADU,CAE3B,MAAO,OAGL,EAAO,QACL,IACM,EAAO,MAAM,MAAM,EAAO,EAAO,aAClC,KACD,QAAQ,GAAe,OACxB,EAAM,QAAQ,IADU,CAE3B,MAAO,EAAM,YAMvB,YAAsB,EAAO,EAAI,GACzB,QAAU,EAAM,QAAQ,MAAM,KAC9B,QAAU,EAAM,QAAQ,OAAO,AAAC,GAAW,EAAO,KAAO,KACzD,KAAO,OAAK,EAAM,MAAS,EAAM,gBACjC,KAAO,OAAK,EAAM,MAAS,EAAM,qBAE9B,KAAe,GAAM,QAAS,MAC/B,GAAS,EAAM,QAAQ,QACvB,QAAQ,GAAe,OACxB,EAAM,QAAQ,IADU,CAE3B,MAAO,OAGL,EAAO,QACL,IACM,EAAO,MAAM,MAAM,EAAO,EAAO,aAClC,KACD,QAAQ,GAAe,OACxB,EAAM,QAAQ,IADU,CAE3B,MAAO,EAAM,YAOvB,YAAmB,EAAO,EAAQ,EAAgB,GAAM,MAChD,GAAK,MACL,QAAU,EAAM,QAAQ,MAAM,SAC7B,GAAO,aACR,QAAQ,KAAK,OACd,GADc,CAEjB,KACA,KAAM,GACN,mBAIJ,YAAuB,EAAO,EAAU,EAAO,GACvC,QAAU,EAAM,QAAQ,MAAM,QAC9B,GAAQ,EAAM,QAAQ,UAAU,AAAC,GAAM,EAAE,KAAO,SAC/C,GAAM,QAAQ,GAAO,aACtB,QAAQ,GAAS,OAClB,EAAM,QAAQ,IADI,CAErB,eChKS,IAAmB,CAC9B,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAQI,GAAsC,CAC1C,KAAM,CAAE,cAAe,WAAY,cAAe,QAClD,MAAO,CAAE,cAAe,UAAW,cAAe,UAClD,MAAO,CAAE,cAAe,UAAW,cAAe,UAClD,MAAO,CAAE,cAAe,QAAS,cAAe,UAChD,KAAM,CAAE,cAAe,QAAS,cAAe,UAC/C,KAAM,CAAE,cAAe,aAAc,cAAe,uBAG3B,EAAoB,EAAS,GAAgB,IAClE,CAAC,GAAQ,GAAa,MAClB,GAAgBM,GAAS,GAAO,GAChC,EAAgB,GAAY,EAAe,UAC1C,CAAE,gBAAe,uBAEnB,IAAQ,GAGjB,YAAsB,EAAmB,MACjC,GAAU,KAAK,IAAI,EAAG,KAAK,IAAI,IAAK,IAEpC,EAAW,AADA,KAAK,MAAO,EAAU,IAAO,KACpB,SAAS,UAC5B,KAAY,IAAM,GAAK,EAAS,SAAS,EAAG,iBAGzB,EAAe,EAAwB,OAC1D,GAAQ,GAAa,eAI5B,EAAW,GACX,EAAuB,GACvB,EAAU,IACV,MACM,GAAc,GAAO,OAAO,AAAC,GAAM,CAAC,EAAW,SAAS,OAC1D,EAAY,OAAS,GAAK,CAAC,QACtB,GAAY,GAAK,GAAa,GAChC,IAED,GAAM,OACR,IAAI,KAAK,SAAS,SAAS,IAAI,MAAM,EAAG,GAAG,iBAC3C,QAAQ,cAAe,IACrB,EAAI,OAAS,MACT,EAAI,GAAK,EAAI,GAAK,EAAI,GAAK,EAAI,GAAK,EAAI,GAAK,EAAI,OAErD,GAAM,IACN,SACK,GAAI,EAAG,EAAI,EAAG,MACjB,SAAS,EAAI,OAAO,EAAI,EAAG,GAAI,MAC/B,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,EAAG,EAAI,EAAI,MAAM,MAAM,SAAS,OAC1D,KAAK,IAAI,OAAO,EAAE,cAGpB,GAAM,GAAa,gBC7EI,EAA4C,OACrEC,IACL,CACE,OAAQ,GACR,QAAS,CACP,IAAK,OACL,cAAe,GACf,QAAS,KAGb,EAAQ,uBCZ0B,EAAgB,MAC9C,CAAE,KAAM,EAAM,cACV,EAAE,OAAS,GAAK,EAAE,IAAM,gBCDV,EAAwB,MAC1C,GACJ,kBAAO,UACP,kBAAO,QAAQ,KAAK,AAAC,GAAW,EAAO,OAASC,WAE3C,kBAAQ,MAAO,EAAO,MAAQ,ECHvC,YAAmB,EAAY,EAAgB,EAAO,gBAEzC,CAAE,MAAO,MAAM,QAAN,cAAa,SAAU,MACrC,KAAK,IAAI,EAAK,EAAI,GAAK,QAClB,SAGJ,eAGgB,EAAe,EAAgB,MAChD,GAAS,GAAU,GAEnB,EAAQ,GAAsB,SAE7B,GAAM,OAAe,CAAC,EAAK,IAE5B,IAAU,EAAS,EAAO,MAE1B,KAAK,CACP,GAAI,kBAAS,KAAM,IACnB,UAAW,EAAQ,EAAI,EACvB,EAAG,EAAQ,EACX,EAAG,EAAQ,EACX,MAAO,EAAQ,QAGV,GACN,gBC1BH,EACA,EACA,aACOD,IAAM,CAAE,OAAQ,GAAI,QAAS,IAAM,EAAQ,MAAO,CACvD,OAAQ,GAAS,qBAAS,QAAT,cAAgB,SAAU,GAAI,KCHnD,YAAoB,EAAc,EAAgB,EAAO,gBAE5C,CAAE,OAAM,OAAQ,MAAM,SAAN,cAAc,SAAU,MAE/C,KAAK,IAAI,EAAM,KAAO,GAAQ,GAC9B,KAAK,IAAI,EAAM,GAAK,GAAM,QAEnB,eAKa,EAAiB,EAAgB,MACnD,CAAE,IAAG,MAAO,EAAM,KAClB,EAAS,GAAU,GACnB,EAAQ,GAAsB,SAC7B,GAAO,OAAqB,CAAC,EAAK,IAAa,IAChD,GAAW,EAAU,EAAO,SAAe,QAEzC,GAAW,GACf,CAAE,IAAG,EAAG,GACR,CAAE,KAAM,EAAS,KAAM,GAAI,EAAS,GAAI,QAAS,KAE7C,EAAU,EAAS,QAAQ,IAAI,AAAC,GAAW,MACL,KAAlC,QAAO,KAAM,MAAqB,EAAd,IAAc,EAAd,CAApB,OAAa,aACd,IACL,KAAM,GAAQ,SACd,GAAI,GAAM,IACV,YAAa,EAAO,MAAQ,GACzB,cAIH,KAAK,OACJ,GADI,CAEP,KAAM,kBAAU,GAAG,OAAQ,GAAU,OACrC,WAAY,EAAS,KAAO,EAC5B,SAAU,EAAS,GAAK,EACxB,GAAI,EAAS,IAAM,IACnB,WACA,aAGK,GACN,gBC7CH,EACA,EACA,aACOA,IACL,CACE,OAAQ,GACR,QAAS,CACP,IAAK,OACL,cAAe,GACf,QAAS,KAGb,EAAQ,OACR,CACE,OAAQ,GAAU,qBAAS,SAAT,cAAiB,SAAU,GAAI,iBCXvB,EAAc,EAAa,GAAa,YAChE,GAA0B,YAC1B,GAAK,EAAQ,IAAM,MACnB,OAAS,OAAO,OACpB,CACE,SAAU,KACV,KAAM,CACJ,OAAQ,KACR,KAAM,GACN,UAAW,KAGf,EAAQ,UAGJ,QAAU,OAAO,OACrB,KACE,KAAM,MAAQ,UAAR,cAAiB,MAAO,EAAQ,QAAQ,KAAO,KAClDD,GAAS,EAAS,IAFvB,CAGE,UAAW,GACX,sBAAuB,GACvB,sBAAuB,KAEzB,EAAQ,WAGJ,KAAO,OAAO,OAClB,CACE,QAAS,KACT,MAAO,GACP,UAAW,GACX,UAAW,GAEb,EAAQ,QAGJ,aAAe,EAAM,OAErB,KAAO,OAAO,OAAO,GAAI,EAAQ,QACjC,KAAO,OAAO,OAClB,CACE,EAAG,GACH,GAAI,GACJ,GAAI,IAEN,EAAQ,QAEJ,aAAe,EAAM,OAErB,QAAU,OAAO,OAAO,GAAI,EAAQ,WAEpC,MAAQ,GAAc,EAAS,KAK/B,UAAY,GAAkB,KAC9B,OAAS,GAAe,EAAS,MAGT,MAEhB,GACP,EAGT,YAAkB,EAAS,EAAY,UACjC,GAAQ,cACR,qBAAS,UAAT,cAAkB,SAAU,SACtBG,GAAW,GAAO,EAAW,OAAS,MAEtC,EAAQ,QAAQ,MAGtB,EAAW,SACF,MAAM,KAAK,GAGjB,CAAE,SAGX,YAAuB,EAAO,CAE1B,EAAM,KAAK,OACX,EAAM,QAAQ,UAAU,AAAC,GAAM,EAAE,OAASC,MACxC,IACF,EAAM,KAAK,kBAEgB,EAAO,CAChC,CACE,KAAMA,GACN,QAAS,CACP,mBAAoB,EAAM,KAAK,eAEjC,cAAe,kBC/FrB,EACA,EAOA,EACS,MACH,CAAE,UAAS,UAAS,OAAO,KAAM,YAAY,KAAQ,EACrD,CAAE,IAAG,KAAM,GAAW,EAAQ,CAClC,YACA,SAAU,SAGN,EAAQ,GACZ,CACE,KAAM,CAAE,IAAG,GAAI,KAAM,GAAI,GACzB,QAAS,CAAE,QACX,KAAM,CACJ,UACA,gBAAiB,EACjB,cAAe,EACf,cAAe,GACf,UACA,KAAM,KAGV,YAEI,OAAO,OAAS,GAAU,EAAQ,GAEjC,cClCP,EACA,EACS,MACH,CACJ,SACA,WAAY,CAAE,UAAS,WACvB,SACE,GAAU,SACP,IACL,EACA,CAAE,UAAS,UAAS,KAAM,EAAM,IAChC,eCLwB,EAG1B,MACM,CACJ,QAAS,CAAE,yBACX,KAAM,CAAE,IAAG,KAAI,OACb,QAEG,CAAE,IAAG,EAAG,EAAwB,EAAK,QChBjC,IAA4D,CACvE,KAAM,CACJ,IAAK,CACH,KAAM,IACN,GAAI,GACJ,QAAS,EACT,MAAO,GAET,IAAK,CACH,KAAM,IACN,GAAI,GACJ,QAAS,EACT,MAAO,GAET,QAAS,CACP,KAAM,KACN,GAAI,KACJ,QAAS,EACT,MAAO,OAGX,MAAO,gBAIP,EAAoD,GACrC,MACT,CAAE,UAAU,KAAM,YAAY,OAAU,KAE1C,CAAC,GAAW,QACR,IAAI,OAAM,sBAAsB,UAGlC,GAAO,GAAW,GAAS,EAAU,kBAEvC,CAAC,OACG,IAAI,OAAM,wBAAwB,WAGnC,CACL,KAAM,EAAK,MAAQ,IACnB,GAAI,EAAK,MAAQ,IACjB,MAAO,EAAK,MACZ,QAAS,EAAK,qBChCgB,EAAS,EAAS,IAC9C,CAAE,OAAM,KAAI,UAAS,UAAS,aAAc,KAC5C,EAAW,IACT,GAAOC,GAAS,CAAE,YAAsB,QAAS,EAAQ,YACtD,EAAK,OACP,EAAK,KACA,EAAK,UACL,EAAK,WAGX,CAAE,KAAI,KAAM,EAAQ,WACnB,IAAY,CAAE,IAAG,EAAG,GAAM,CAAE,OAAM,MAAM,CAAE,UAAS,YAI5D,YACE,EACA,EAAwC,GACxC,EAYI,GACI,MACF,CACJ,UAAU,EACV,UAAU,EACV,IAAK,EAAa,CAChB,YAAa,GACb,iBAAkB,GAClB,QAAS,GACT,UAAW,CACT,WAAY,EACZ,WAAY,KAGd,KACA,CAAE,OAAM,MAAO,KACf,IAAS,QAAa,IAAO,aAAkB,QAE7C,GAAY,GAAkB,EAAK,EAAG,GACtC,EAAU,GAAkB,EAAK,EAAG,GACpC,EAAa,CACjB,EAAG,EAAK,EAAE,MAAM,EAAW,GAC3B,EAAG,EAAK,EAAE,MAAM,EAAW,OAGzB,GAAQ,GAAI,EAAY,GACzB,KAAK,CAAC,EAAG,IAAM,EAAE,EAAI,EAAE,GACvB,MAAM,EAAG,MAER,EAAM,SAAW,QAAU,QAEzB,GAAS,GAAK,EAAM,IAAI,AAAC,GAAS,EAAK,UAEtC,GAAU,cC9EjB,EACA,EACA,MACM,GAAQ,EAAM,UAAU,OAAO,UACnC,AAAC,GAAa,EAAS,KAAO,EAAY,OAExC,IAAU,GAAI,MACV,GAAQ,EAAM,UAAU,OAAO,GAAO,SAAW,EAAY,MAC7D,CAAE,SAAQ,OAAQ,EAAM,UAAU,OAAO,OAI7C,CAAC,EAAK,EAAU,IAAU,MAClB,GAAmB,EAAS,SAAW,WACzC,KAAO,IACP,OAAO,GAAS,OACf,GADe,CAElB,SAAU,IAGL,GAET,CAAE,OAAQ,GAAI,IAAK,MAGf,UAAU,OAAS,IACnB,UAAU,QAAU,OACrB,EAAM,UAAU,SADK,CAExB,GAAI,OACJ,YAAa,OACb,QAAS,GACT,qBC1B4B,EAA6B,OACtD,IAAqB,SAAS,EAAS,kBCA9C,EACA,EACA,EAA2C,KAC3C,OACO,GAAO,OAAO,CAAC,EAAK,IAClB,GAAS,EAAM,KAAa,GAC9B,GAAO,KAAK,IAAI,EAAQ,IACzB,EACH,eCbH,EACA,EACA,EACA,EAAyB,GACnB,YACA,CAAE,SAAQ,WAAY,EAEtB,EAAaC,GAAa,EAAkB,WAAY,MAE1D,GAAS,KACT,EAAQ,QACN,EAAK,QAAQ,eAAiB,IACvB,EAAa,EAAI,EAAQ,IAAM,EAAa,UAEjD,KAAK,SAAL,cAAc,GAAI,MACd,GAAO,EAAK,OAAO,QAEjB,GAAiB,EAAK,GAAiB,EAAQ,KACrD,EAAK,YAIR,OAAS,EAAK,OAAO,IAAI,AAAC,GACtB,OACF,GACC,EAAM,IAAU,EACjB,GAAgB,EAAM,SAAW,KAKpC,CAAC,EAAK,QAAQ,eAAiB,CAAC,MAC7B,QAAQ,IAAMA,GAAa,EAAK,OAAkB,EAAK,gBC9B9D,EACA,EAAyB,GACzB,IAEE,EAAM,UACN,WACA,GACA,eCVyB,EAAkD,OACtE,GAAS,KAAK,YAAc,cCGL,EAAkB,EAAS,MACnD,CACJ,cACA,mBACA,cACA,eACA,kBACA,iBACE,EAEE,EAAQ,GAAO,EAAQ,KAAK,GAAG,IAAI,AAAC,GAAM,KAAK,IAAI,QAErD,CAAE,KAAI,KAAM,EAAQ,KAEpB,IAAoB,QAAa,IAAkB,WACjD,EAAE,MAAM,EAAiB,KACxB,EAAG,MAAM,EAAiB,OAG7B,GAAQ,GACV,CAAE,IAAG,EAAG,GACR,CACE,eACA,WAAY,EAAQ,EACpB,cACA,iBAAkB,GAClB,QAAS,GACT,UAAW,CAAE,WAAY,GAAI,WAAY,cAGvC,KAAK,CAAC,EAAG,IAAM,EAAE,EAAI,EAAE,GACzB,EAAmB,EAAM,WAAgB,EAAM,MAAM,EAAG,IAErD,GAAS,EAAiB,eClBjC,EACA,EACyB,MACnB,CAAE,OAAM,MAAO,KACjB,GAAW,EAAK,EAAE,UAAU,AAAC,GAAW,GAAU,GAClD,EAAW,EAAK,EAAE,UAAU,AAAC,GAAW,GAAU,GAAM,EAExD,EAAW,MACF,IACA,QAEP,GAAY,EAAK,GAAG,MAAM,EAAU,MACtC,GAAa,EAAU,OAAS,EAAG,MAC/B,GAAS,GAAI,GACb,EAAS,EAAU,UAAU,AAAC,GAAU,IAAU,SAGjD,CAAE,EAFM,EAAK,EAAE,EAAW,GAEb,EAAG,EAAQ,OAAQ,EAAW,SAE7C,kBCzCuB,EAAyB,OAChD,kBAAS,QAAQ,SAAU,MAAO,eCoBZ,EAAqB,EAAmB,IACjE,GAAa,KAAK,QAChB,CAAE,YAAW,WAAY,KAE3B,EAAQ,SAAW,MAAM,QAAQ,IAAc,EAAU,OAAS,EAAG,MACjE,CAAE,KAAI,OAAQ,EAAU,KACjB,OAAK,GAAL,CAAiB,QAAS,GAAM,KAAI,YAAa,QACzD,MACsC,KAAnC,MAAI,eAA+B,EAAf,IAAe,EAAf,CAApB,KAAI,kBACC,OAAK,GAAL,CAAiB,QAAS,WAEpC,GAAW,QACH,IAAM,GAAO,EAAW,IAAM,KAAM,IAG1C,cAGc,EAA+B,EAAiB,IAGjE,CAAC,GAAM,CAAC,QAAgB,UAEtB,GAAO,GAAQ,GACf,EAAQ,GAAS,SAEhB,GAAM,GAAQ,EAAM,GAAQ,gBAInC,EACA,EACA,MACM,CAAE,UAAS,WAAY,KACzB,EAAQ,QAAS,MACb,CAAE,KAAI,eAAgB,EACtB,EAAM,GAAO,EAAI,KAClB,QAAU,OAAK,EAAK,SAAV,CAAmB,QAAS,GAAM,cAAa,KAAI,YAC7D,MACsC,KAAK,QAAxC,MAAI,eAA+B,EAAf,IAAe,EAAf,CAApB,KAAI,kBACP,QAAU,OAAK,GAAL,CAAiB,QAAS,GAAO,IAAK,EAAQ,mBAIxC,EAAoC,MACrD,GAAS,GAET,EAAO,EAAG,MAAM,gBACb,GAAI,EAAG,EAAI,EAAK,OAAS,EAAG,EAAI,EAAI,IACpC,EAAK,IAAM,OAAO,EAAK,EAAI,UAE7B,eAcP,EACA,EACA,EACA,MACM,GAA0B,CAAC,SAAU,sBAEhC,KAAY,GAAM,QACvB,GAAa,YACJ,KAAO,GAAM,MAChB,CAAE,cAAa,KAAI,WAAY,EAAS,GAAK,gBAEnC,GAAgB,CAAC,GAAe,CAAC,IAAQ,EAAS,MAC1D,GAAkC,EACpC,CACE,GAAI,EAAS,GACb,YAAa,EAAS,KAExB,CACE,GAAI,OACJ,YAAa,WAGL,EAAS,GAAM,CAC3B,QAAS,EAAS,KAAK,QACvB,QAAS,OAAK,GAAL,CAAc,QAAS,GAAM,IAAK,cAElB,EAAU,OACP,EAAU,kBCrGvB,EAAc,EAA8B,OACjE,KAAgB,OACX,EAAM,QACT,EAAM,QAAQ,OACZ,CAAC,EAAK,IAAY,EAAO,QAAU,EAAO,QAAU,EAAM,EAC1D,GAEF,EAGC,EAAM,QAAQ,GAAa,SAAW,cAGpB,EAAc,EAA4B,GAC7D,QAAUC,GAAW,EAAO,GAC9B,EAAM,UAAY,SACb,GAAM,oBAIW,EAAoB,OACvC,GAAM,aACN,GAAM,UACP,QAAQ,QAAQ,AAAC,GAAY,OAC1B,GAAQ,aACR,GAAQ,gBAEV,GAAM,oBAYb,EACA,EAAa,OACb,EAAe,GACR,QACC,OACD,UACS,aAET,cACI,GAAM,aACN,GAAM,kBAEV,eACI,GAAM,QAAQ,EAAQ,aAAa,aACnC,GAAM,QAAQ,EAAQ,aAAa,wBAMnC,GAEJ,cAWsB,EAAO,OAC7B,GAAM,OAAS,GAAU,mBAGD,EAAO,EAAO,OACtC,CAAC,EAAM,QAAQ,KACpB,AAAC,GAAY,EAAQ,OAAS,QAAa,CAAC,EAAM,SAAS,EAAQ,mBAKrE,EACA,EACA,MACM,GAAM,EAAO,OAAO,CAAC,EAAe,IACpC,GAAM,MACJ,KAAK,EAAM,IAEb,EAAM,YACF,EAAI,OAAO,EAAM,QAAQ,IAAI,AAAC,GAAW,EAAO,GAAI,MAErD,GACN,MACY,SAAS,CACtB,KAAM,aACN,QAAS,CAAE,GAAI,EAAK,KAAM,mBCzGC,EAAuB,OAC7C,GAAM,SAAW,GAAiB,EAAO,gBCChD,EACA,EAAyB,GACzB,IAEE,EAAM,OACN,cACA,GACA,eCGqB,EAAgB,EAAsC,MACvE,CAAE,OAAM,KAAI,YAAW,WAAY,EACnC,CAAE,IAAG,MAAO,EAAM,KAClB,EAAW,GAAc,CAAE,IAAG,EAAG,GAAM,CAAE,OAAM,KAAI,QAAS,KAG5D,EAAS,GACb,EACA,EACA,EACA,EACA,EAAM,KAAK,oBAET,EAAC,KACD,MACI,GAAQ,CACZ,GAAI,IACJ,OACA,KACA,WACA,QAAS,CAAC,GAAE,GAAI,KAAiB,IACjC,KAAM,GAAU,OAChB,YAAa,KAGT,OAAO,QAAU,GAAe,EAAM,OAAO,QAAS,CAC1D,YACA,cAGI,OAAO,OAAS,EAAM,OAAO,OAAO,OAAO,GAAU,CAAC,GAAQ,OACzC,cAErB,IAAI,OAAM,qDC3CQ,EAAgB,EAAc,MAClD,CAAE,OAAM,MAAO,EACf,CAAE,IAAG,MAAO,EAAM,KAElB,EAAQ,EAAM,OAAO,OAAO,UAAU,AAAC,GAAM,EAAE,KAAO,EAAM,IAC5D,EAAW,GAAc,CAAE,IAAG,EAAG,GAAM,CAAE,OAAM,KAAI,QAAS,KAE9D,IAAU,OACN,OAAO,OAAO,GAAS,WACxB,EAAM,OAAO,OAAO,IADI,CAE3B,WAAY,EACZ,SAAU,IACP,GAJwB,CAK3B,gBAEyB,gBCTU,EAAgB,EAAsB,MACvE,GAAQ,EAAM,OAAO,OAAO,UAChC,AAAC,GAAU,EAAM,KAAO,EAAS,OAE/B,IAAU,IAAM,EAAM,OAAO,QAAQ,IAAK,MACtC,CAAE,WAAU,eAAgB,EAAM,OAAO,OAAO,GAChD,EAAQ,EAAW,EAAS,MAC5B,EAAO,EAAS,MAAQ,EAAe,EAAM,OAAO,QAAQ,MAC5D,OAAO,QAAU,OAClB,EAAM,OAAO,SADK,CAErB,GAAI,OACJ,YAAa,OACb,QAAS,GACT,UAGI,OAAO,OAAS,EAAM,OAAO,OAAO,IAAI,AAAC,GACtC,OACF,GADE,CAEL,YAAa,EAAM,SAAW,kBCvBJ,EAAgB,EAA4B,MACtE,CAAE,UAAS,WAAU,kBAAmB,KAE1C,GAAa,OACX,GAAa,EAAM,OAAO,OAAO,UACrC,AAAC,GAAU,EAAM,KAAO,MAEtB,IAAe,GAAI,MACf,GAAc,EAAM,OAAO,OAAO,GAAY,QAAQ,UAC1D,AAAC,GAAW,EAAO,KAAO,KAG1B,EACA,EAAM,OAAO,OAAO,GAAY,QAAQ,GAAa,QACjD,OAAO,OAAO,GAAY,QAAQ,GAAa,MAAQ,QAExD,eCZP,EACA,EACsB,MAChB,CAAE,OAAM,MAAO,EACf,CAAE,IAAG,GAAI,GAAM,EAAM,KAErB,EAAW,GAAc,CAAE,IAAG,KAAK,CAAE,OAAM,KAAI,QAAS,KACxD,EAAM,GAAY,CAAE,IAAG,KAAK,CAAE,OAAM,OAAM,EAC1C,EAAM,GAAY,CAAE,IAAG,KAAK,CAAE,OAAM,OAAM,EAE1C,EAAS,GAAU,SAElB,CACL,GAAI,IACJ,WAAY,EAAO,EACnB,SAAU,EAAK,EACf,OACA,KACA,WACA,MACA,OC5BJ,KAAM,IAA4B,CAChC,YAAa,EACb,iBAAkB,GAClB,YAAa,GACb,QAAS,GACT,eAAgB,IAChB,UAAW,EACX,MAAO,GACP,UAAW,CAAE,WAAY,EAAG,WAAY,gBAIxC,EACA,EAAe,GACN,IAGL,CAAE,KAAI,KAAM,EAAQ,UAElB,CAAE,kBAAiB,WAAY,EAAQ,KAEvC,CAAE,kBAAiB,gBAAe,eAAgB,EAElD,EAAqB,OACtB,IACA,GAGC,EAAgB,CACpB,UAAW,EACX,UACA,QAAS,GACT,iBAAkB,GAClB,UAAW,OAGT,IAAoB,QAAa,IAAkB,WACjD,EAAE,MAAM,EAAiB,KACxB,EAAG,MAAM,EAAiB,IAG7B,EAAiB,IAEf,GAAc,EAAI,KAAqB,GAAK,EAAE,IAE9C,EAAK,KAAK,IAAI,KAAK,MAAM,EAAc,GAAI,KAC5B,UAAY,CAC7B,WAAY,EAAM,EAAK,EAAK,EAC5B,WAAY,YAGG,QAAU,SACV,UAAY,OAEhB,GACb,CAAE,IAAG,EAAG,GACR,CACE,YAAa,EACb,OAAQ,gBCrCZ,EACA,EACA,MACiD,KAAzC,aAAW,WAA8B,EAAlB,IAAkB,EAAlB,CAAvB,YAAW,cACL,WAAa,CAAE,QAAS,EAAM,KAAK,SAAW,SACtD,GAAS,GAAoB,EAAO,KACpC,OAAO,QAAU,GAAe,EAAM,OAAO,QAAS,CAC1D,YACA,cAEI,OAAO,OAAS,EAAM,OAAO,OAAO,OAAO,GAAU,EAAQ,OACxC,eClCQ,EAAgB,EAAoB,GACjE,UAAU,OAAS,EAAM,UAAU,OAAO,IAAI,AAAC,UAChD,IACH,KAAM,EAAS,WAAa,EAC5B,GAAI,EAAS,SAAW,iBCFM,EAAgB,EAAoB,GAC9D,MAAM,OAAS,EAAM,MAAM,OAAO,IAAU,AAAC,GAAS,MACpD,GAAQ,EAAK,UAAY,EACzB,EAAS,GAAkB,EAAM,KAAK,EAAG,SACxC,QACF,GADE,CAEL,EAAG,EAAM,KAAK,GAAG,GACjB,EAAG,EAAK,UAAY,kBCTS,EAAgB,EAAoB,GAC/D,OAAO,OAAS,EAAM,OAAO,OAAO,IAAI,AAAC,UAC1C,IACH,QAAa,YAAc,GAAK,EAChC,MAAW,UAAY,GAAK,EAC5B,QACE,kBAAO,UACP,EAAM,QAAQ,IAAI,AAAC,UACd,IACH,SAAU,aAAe,GAAK,oBCJT,EAAgB,MACrC,GAAS,GAAU,MACP,EAAO,MACN,EAAO,MACL,EAAO,QCXjB,IAA4B,MAE7B,IAAA,YACF,aACA,qBAGG,IAAS,CACpB,KAAM,CAAE,IAAK,IAAK,MAAO,GAAI,OAAQ,GAAI,KAAM,KAC/C,KAAM,CACJ,IAAK,GACL,MAAO,GACP,OAAQ,GACR,KAAM,iBCXiB,EAAQ,EAAU,GAAI,EAAa,GAAI,MAC1D,CAAE,qBAAoB,OAAM,OAAM,UAAW,KAC/C,GAAO,GAAQ,EAAmB,GAAG,kBACrC,GAAK,OAAS,UAAY,IAE1B,MAAM,QAAQ,EAAK,aAAe,QAAU,EAAK,QAAQ,IAE7C,GACd,OACK,GADL,CAEE,SACA,OACA,OACA,SAEF,eAMoB,EAAQ,EAAU,GAAI,EAAa,GAAI,IACzD,GAAY,EAAO,WAAW,GAC9B,EAAqB,EAAO,mBAE5B,EAAe,EAAU,aACzB,EAAI,EAAU,MACd,EAAO,EAAU,UAAU,UAC3B,EAAS,EAAU,aAAa,UAChC,EAAS,EAAU,kBAAkB,UAErC,EAAS,EAAmB,GAAG,WAAW,GAC1C,EAAe,GACf,EAAe,UACV,GAAI,EAAO,OAAS,EAAG,EAAI,EAAG,GAAK,IACvC,KAAK,EAAO,EAAI,MAChB,KAAK,EAAO,OAGb,GAAY,GACZ,EAAG,SACC,OACD,cACE,EAAK,EAAS,EAAU,MACxB,EAAO,EAAU,MACjB,GAAK,IACL,GAAK,YAEP,SACE,IACD,IACC,GAAK,EAAG,YACR,GAAK,EAAG,UAAU,IAAI,AAAC,GAAM,CAAC,YAMnC,GAAkB,UACb,GAAI,EAAG,EAAI,EAAG,MACf,KAAK,EAAK,EAAI,YAGjB,EAAI,EAEO,GACd,OACK,GADL,CAEE,SAEF,eAK4B,EAAa,EAAS,EAAY,MAC1D,CAAE,qBAAoB,OAAM,QAAS,KACvC,GAAO,GAAQ,EAAmB,GAAG,kBACrC,OAAM,QAAQ,EAAK,aAAe,QAAU,EAAK,QAAQ,IAE7C,GACd,OACK,GADL,CAEE,OACA,OACA,SAEF,GAMJ,YAAiB,EAAS,oBACpB,GAAI,SAAQ,KAAR,cAAY,OAAZ,cAAkB,GAAI,EAAQ,GAAG,KAAK,EAAI,GAC9C,EAAK,SAAQ,KAAR,cAAY,OAAZ,cAAkB,GAAI,EAAQ,GAAG,KAAK,EAAI,GAC/C,EAAK,SAAQ,KAAR,cAAY,OAAZ,cAAkB,GAAI,EAAQ,GAAG,KAAK,EAAI,WAE/C,GAAE,GAAK,EAAE,OACT,YACC,UACC,KAAO,WAEN,CAAE,IAAG,KAAI,kBC9FhB,EACA,EACA,EACA,IACI,GAAQ,EAAM,KAAK,QAAQ,QAAQ,GAEnC,IAAU,OAAY,MAEtB,GAAO,CACT,QAAS,EAAM,KAAK,QAAQ,GAC5B,MAAO,GACP,UAAW,GACX,UAAW,GAGT,EAAO,IAAU,EAAI,EAAM,KAAK,KAAO,EAAM,KAAK,KAClD,EAAK,IAAU,EAAI,EAAM,KAAK,KAAO,EAAM,KAAK,KAChD,EAAW,IAAU,EAAI,EAAM,KAAK,EAAE,GAAG,OAAS,EAAM,KAAK,EAAE,OAC/D,EAAa,GAAI,cAAa,MAC9B,IAAU,SACH,GAAI,EAAG,EAAI,EAAM,KAAK,EAAE,OAAQ,WAC9B,GAAI,EAAG,EAAI,EAAM,KAAK,EAAE,GAAG,OAAQ,MAC/B,IAAM,EAAM,KAAK,EAAE,GAAG,eAI5B,GAAI,EAAG,EAAI,EAAM,KAAK,EAAE,GAAG,OAAQ,aAC/B,KAAK,GAAM,KAAK,IACd,IAAM,EAAE,MAKrB,GAAO,CACT,EAAG,GAAQ,CAAE,OAAM,MAAM,GACzB,GAAI,SAEC,IAAgB,CAAE,OAAM,QAAQ,eCjChB,EAAmB,EAAyB,MAC7D,GAAO,EAAS,KAChB,KAAc,KAAO,EAAK,SAAc,EAAE,GAAG,OAAS,GACtD,KAAc,KAAO,EAAK,SAAc,EAAE,OAAS,GACnD,EAAS,KAAK,SAAgB,EAAI,EAAK,MAAQ,GAC/C,EAAS,KAAK,SAAgB,EAAI,EAAK,MAAQ,MAEjD,EAAS,GAAK,GAAU,EAAK,EAAE,GAAG,QAClC,EAAS,GAAK,GAAU,EAAK,EAAE,iBAE/B,GAAQ,CACV,QAAS,EAAS,KAAK,QAAQ,GAC/B,MAAO,GACP,UAAW,GACX,UAAW,GAGT,EAAQ,CACV,EAAG,GACD,CAAE,KAAM,EAAS,KAAK,KAAM,GAAI,EAAS,KAAK,MAC9C,EAAS,KAAK,EAAE,GAAG,QAErB,GAAI,GAAI,cAAa,EAAS,KAAK,EAAE,GAAG,gBAGjC,GAAI,EAAG,EAAI,EAAS,KAAK,EAAE,GAAG,OAAQ,MACvC,GAAG,IAAM,EAAS,KAAK,EAAE,GAAQ,MAGrC,GAAQ,CACV,QAAS,EAAS,KAAK,QAAQ,GAC/B,MAAO,GACP,UAAW,GACX,UAAW,GAGT,EAAQ,CACV,EAAG,GACD,CAAE,KAAM,EAAS,KAAK,KAAM,GAAI,EAAS,KAAK,MAC9C,EAAS,KAAK,EAAE,QAElB,GAAI,GAAI,cAAa,EAAS,KAAK,EAAE,SAGnC,EAAQ,EAAS,KAAK,EAAE,OAAS,SAC5B,GAAI,EAAG,EAAI,EAAS,KAAK,EAAE,OAAQ,MACpC,GAAG,IAAM,EAAS,KAAK,EAAE,KAAS,QAGpC,GAAa,GAAgB,CAAE,KAAM,EAAO,KAAM,GAAS,IAC3D,EAAW,GAAgB,CAAE,KAAM,EAAO,KAAM,GAAS,UACxD,CAAE,aAAY,iBChEV,IAAwB,CACnC,SAAU,CACR,cAAe,CAAC,EAAG,IACnB,eAAgB,IAElB,SAAU,CACR,cAAe,CAAC,EAAG,IACnB,eAAgB,aAIc,CAQzB,YACL,EACA,EAAe,GACf,EAAoB,CAClB,SAAU,GACV,SAAU,IAEZ,MACK,QAAU,OACT,CAAE,WAAU,YAAa,OAE1B,qBAAuB,OACvB,qBAAuB,OAEtB,GAAKF,GAAS,EAAO,KAAM,EAAO,KAAM,EAAO,EAAE,GAAG,QAEpD,EAAKA,GAAS,EAAO,KAAM,EAAO,KAAM,EAAO,EAAE,aAElD,OAAS,GAAI,IAAO,EAAO,EAAG,CAAE,KAAI,KAAI,SAAU,UAElD,OAAS,EAAO,WAEhB,OAAS,EAGT,UAAW,OACT,CACL,cAAe,KAAK,qBACpB,cAAe,KAAK,sBAIjB,SAAS,EAAe,EAAe,MACvC,qBAAuB,OACvB,qBAAuB,EAGvB,WAAW,EAAS,MACnB,GAAmB,EAAQ,SAAS,cACpC,EAAmB,EAAQ,SAAS,cAEtC,KAAK,sBAAwB,EAAiB,QAC3C,qBAAuB,EAAiB,GACpC,KAAK,sBAAwB,EAAiB,UAClD,qBAAuB,EAAiB,IAG3C,KAAK,sBAAwB,EAAiB,QAC3C,qBAAuB,EAAiB,GACpC,KAAK,sBAAwB,EAAiB,UAClD,qBAAuB,EAAiB,SAG1C,QAAU,EAGV,MAAM,EAAO,MACZ,GAAO,KAAK,KAAK,GACjB,EAAmB,KAAK,QAAQ,SAAS,cACzC,EAAmB,KAAK,QAAQ,SAAS,cAG5C,MAAK,qBAAuB,EAAiB,IAAM,IAAS,IAC5D,KAAK,qBAAuB,EAAiB,IAAM,IAAS,UAExD,sBAAwB,GAI5B,MAAK,qBAAuB,EAAiB,IAAM,IAAS,IAC5D,KAAK,qBAAuB,EAAiB,IAAM,IAAS,UAExD,sBAAwB,GAI1B,WAAW,EAAO,MACjB,GAAO,KAAK,KAAK,GACjB,CAAC,EAAK,GAAO,KAAK,QAAQ,SAAS,iBAEtC,OAAK,uBAAyB,GAAO,IAAS,IAC9C,KAAK,sBAAwB,GAAO,IAAS,eAK3C,sBAAwB,EACtB,GAGF,cAAe,MACd,GAAe,KAAK,qBAAuB,EAAI,EAC/C,EAAe,KAAK,qBAAuB,EAAI,EAC/C,CACJ,SAAU,CAAE,eAAgB,GAC5B,SAAU,CAAE,eAAgB,IAC1B,KAAK,cACF,CACL,SAAU,KAAK,YAAY,EAAc,CACvC,SAAU,IAEZ,SAAU,KAAK,YAAY,EAAc,CACvC,SAAU,GACV,SAAU,KAKT,YAAY,EAAW,EAAe,GAAI,MACzC,CAAE,WAAW,GAAO,UAAU,IAAM,WAAW,IAAO,EAEtD,EAAM,KAAK,IACf,KAAK,IAAI,KAAK,OAAO,MACrB,KAAK,IAAI,KAAK,OAAO,UAGnB,GAASA,GACX,KAAK,OAAS,EAAI,KAAK,IAAI,EAAG,GAC9B,EACA,EACA,GAGE,MACO,EAAO,IAAI,AAAC,GAAU,CAAC,OAE9B,GAAW,MACX,GACS,KAAK,OAAO,YAAY,CACjC,cAAe,QACf,OAAQ,EACR,kBAEK,iBAEC,IAAI,GACN,QAGD,IAIX,YAAkB,EAAa,EAAa,EAAgB,EAAc,IACpE,IAAQ,OAAW,MACf,GAAoB,KAElB,GAAK,SAEJ,GAAI,EAAG,GAAK,EAAQ,MACnB,GAAK,EAAQ,EAAI,MAAY,GAAK,KAAK,IAAI,EAAK,QAGpD,GAAa,EAAQ,GAErB,EAAS,GAAI,OAAM,UAEhB,GAAI,EAAG,EAAI,EAAQ,MACnB,MAAY,MAAY,EAAQ,EAAI,GAAK,GAAc,QAGzD,OACF,MACC,MAAc,MAAiB,SAE9B,IAAM,EAAK,EAAM,EAAO,EAAG,IAItC,YAAe,EAAc,EAAY,EAAc,MAC/C,GAAmB,UAEhB,GAAI,EAAM,EAAI,EAAI,GAAK,IACvB,KAAK,SAGP,eC/LuB,EAAc,EAAa,GAAa,YAChE,GAAa,YAEb,GAAK,EAAQ,IAAM,MACnB,OAAS,OAAO,OACpB,CACE,SAAU,MAEZ,EAAQ,UAEJ,QAAU,OAAO,OACrB,KACE,KAAM,MAAQ,UAAR,cAAiB,MAAO,EAAQ,QAAQ,KAAO,KAClD,GAAS,EAAS,IAFvB,CAGE,kBAAmB,GACnB,kBAAmB,GACnB,UAAW,GACX,eAAgB,GAChB,UAAW,IAEb,EAAQ,WAGJ,KAAO,OAAO,OAClB,CACE,QAAS,CAAC,KAAM,MAChB,KAAM,GACN,MAAO,GACP,UAAW,GACX,UAAW,GAEb,EAAQ,QAGJ,aAAe,EAAM,OACrB,KAAO,OAAO,OAAO,GAAI,EAAQ,QACjC,KAAO,OAAO,OAClB,CACE,EAAG,GACH,KAAM,EACN,KAAM,EACN,KAAM,EACN,KAAM,GAER,EAAQ,QAEJ,aAAe,EAAM,OACrB,QAAU,OAAO,OAAO,GAAI,EAAQ,WAEpC,MAAQ,OAAO,OAAO,CAAE,OAAQ,GAAI,QAAS,IAAM,EAAQ,SAE3D,qBAAuB,GAAI,IAC/B,EAAM,KACN,EAAM,QAAQ,mBAIc,GAEvB,EAGT,YAAkB,EAAS,EAAY,UACjC,GAAQ,CAAE,cAAe,MAAO,cAAe,cAEjD,mBAAS,QAAQ,iBAAkB,QACnC,qBAAS,UAAT,cAAkB,iBAAkB,YAE5B,GAAW,EAAQ,KAAK,WAAY,EAAW,OAAS,KAG9D,EAAW,SACF,MAAM,KAAK,EAAM,eAEvB,cC7EoB,EAAkD,OACtE,GAAS,KAAK,YAAc,cCDZ,EAAoD,IACvE,GAAa,CAAE,OAAQ,EAAG,OAAQ,SAClC,kBAAO,aACD,EAAM,QAAQ,OACpB,CAAC,EAAK,IACA,GAAO,OAASG,OACd,OAAS,kBAAQ,MAAO,EAAO,MAAQ,GAEzC,EAAO,OAASC,OACd,OAAS,kBAAQ,MAAO,EAAO,MAAQ,GAEtC,GAET,CAAE,OAAQ,EAAG,OAAQ,KAIlB,cChBmB,EAAgB,MACpC,CAAE,SAAQ,UAAW,GAAS,MACnB,EAAO,CACtB,SACA,WAIJ,YAA0B,EAAgB,CAAE,SAAQ,UAAU,GACtD,MAAM,OAAS,EAAM,MAAM,OAAO,IAAI,AAAC,wBACxC,IACH,QAAS,KAAK,UAAL,cAAc,IAAI,AAAC,UACvB,IACH,EAAG,OAAK,EAAO,GAAZ,CAAe,MAAO,EAAO,EAAE,YAAc,IAChD,EAAG,OAAK,EAAO,GAAZ,CAAe,MAAO,EAAO,EAAE,YAAc,uBCdpD,EACA,EACA,OACO,MACL,GAAI,EAAM,IAEN,IAAqB,GAAkB,UAC1C,IAAqB,GAAkB,aACtC,CAAC,EAAM,OAAO,SACZ,CACE,KAAM,EAAM,aACZ,KAAM,EAAM,aACZ,KAAM,EAAM,KACZ,OAAQ,CACN,SAAU,OAGd,CACE,OAAQ,CACN,SAAU,EAAM,OAAO,YAhB1B,CAmBL,MAAO,EAAM,MACb,QAAS,EAAM,QACf,QAAS,EAAM,sBCjBjB,EACA,EACA,EACoC,YAC9B,GAAY,EAAM,MAAM,OAAO,UAAU,AAAC,GAAS,EAAK,KAAO,MACjE,IAAc,GAAI,MACd,GAAc,EAAM,MAAM,OAAO,GAAW,QAAQ,UACxD,AAAC,GAAM,EAAE,KAAO,EAAU,IAGtB,EAAO,EAAM,MAAM,OAAO,MAC5B,IAAgB,GAAI,MAChB,GAAsB,EAAK,QAAQ,GACnC,EACJ,kBAAW,IAAK,kBAAW,KAAM,EAC7B,EAAU,EAAI,EAAe,EAAE,MAC/B,EACA,EACJ,kBAAW,IAAK,kBAAW,KAAM,EAC7B,EAAU,EAAI,MAAe,IAAf,cAAkB,OAChC,QAEC,CAAE,SAAQ,iBAGd,CAAE,OAAQ,EAAG,OAAQ,eCR5B,EACA,EACA,IACI,GAAa,SACb,GAAQ,gBACF,gBAAkB,KACb,GAAa,EAAO,EAAQ,iBAE5B,EAAM,KAEd,GAAmB,EAAY,OAAK,GAAL,CAAc,KAAM,EAAM,QAGlE,YAA4B,EAAM,EAAS,MACnC,CAAE,kBAAiB,QAAO,mBAAkB,oBAChD,EAEI,CAAE,QAAS,EAAQ,mBAAoB,EAAQ,KAC/C,CAAE,kBAAkB,EAAO,KAAO,EAAO,IAAO,QAE1C,IAAoB,EAAM,CACpC,SACA,oBAAqB,EACrB,kBACA,QACA,mBACA,kBACA,qBAMJ,YAAsB,EAAO,EAAc,MACnC,CAAE,QAAO,MAAK,QAAO,OAAQ,EAC7B,EAAO,EAAM,KACb,KAAc,KAAO,EAAK,SAAc,EAAE,GAAG,OAAS,GACtD,KAAc,KAAO,EAAK,SAAc,EAAE,OAAS,MACrD,GAAa,KAAK,IAAI,KAAK,SAAe,EAAK,MAAQ,GAAQ,GAC/D,EAAa,KAAK,IAAI,KAAK,SAAe,EAAK,MAAQ,GAAQ,GAC/D,EAAW,KAAK,IAClB,KAAK,SAAa,EAAK,MAAQ,GAC/B,EAAK,EAAE,GAAG,OAAS,GAEjB,EAAW,KAAK,IAClB,KAAK,SAAa,EAAK,MAAQ,GAC/B,EAAK,EAAE,OAAS,GAGd,EAAa,KAAW,EAAY,GAAY,CAAC,EAAU,IAC3D,EAAa,KAAW,EAAY,GAAY,CAAC,EAAU,OAE3D,GAAkB,CACpB,EAAG,GACH,KAAM,EAAK,KAAO,EAAW,EAC7B,KAAM,EAAK,KAAO,EAAa,EAC/B,KAAM,EAAK,KAAO,EAAW,EAC7B,KAAM,EAAK,KAAO,EAAa,GAE7B,EAAO,OAAO,iBACd,EAAO,OAAO,iBAEd,EAAY,EAAW,EAAa,SAE/B,GAAI,EAAY,EAAI,EAAU,IAAK,IACtC,GAAM,GAAI,cAAa,GACvB,EAAS,SACJ,GAAI,EAAG,EAAI,EAAW,MACzB,GAAK,EAAK,EAAE,GAAG,YAEZ,KAAY,GACf,EAAO,MAAiB,GACxB,EAAO,MAAiB,KAEnB,EAAE,KAAK,MAAM,KAAK,aAEpB,KAAO,IACP,KAAO,EACX,cCjGmB,EAAO,EAAwC,MACnE,GAAQ,GAAkB,EAAO,GACjC,CAAE,SAAQ,UAAW,GAAS,GAE9B,CAAE,OAAM,OAAM,OAAM,QAAS,EAAM,KACnC,EAAS,KAAK,IAAI,EAAO,GAAQ,IACjC,EAAS,KAAK,IAAI,EAAO,GAAQ,UAEhB,GAAM,OAAO,CAAC,EAAa,IAAkB,MAC5D,GAAY,EAAK,GAAK,CAAE,KAAM,EAAG,GAAI,GACrC,EAAY,EAAK,GAAK,CAAE,KAAM,EAAG,GAAI,YAGhC,CAAE,IAAG,MAAO,GAAM,MAAM,UAE/B,KAAK,IAAI,EAAU,KAAO,EAAE,MAAQ,GACpC,KAAK,IAAI,EAAU,GAAK,EAAE,IAAM,GAChC,KAAK,IAAI,EAAU,KAAO,EAAE,MAAQ,GACpC,KAAK,IAAI,EAAU,GAAK,EAAE,IAAM,QAEzB,QAIL,GAAU,EAAK,QAAQ,IAAI,AAAC,GACzB,EACL,GAAI,IACJ,MAAO,EAAO,MACd,EAAG,GACD,YAAa,EAAO,EAAE,MAAQ,GAC3B,EAAO,GAEZ,EAAG,GACD,YAAa,EAAO,EAAE,MAAQ,GAC3B,EAAO,GAEZ,KAAM,qBAIN,KAAK,CACP,GAAI,IACJ,EAAG,CAAE,KAAM,EAAU,KAAM,GAAI,EAAU,IACzC,EAAG,CAAE,KAAM,EAAU,KAAM,GAAI,EAAU,IACzC,UACA,KAAM,GAAU,SAGX,GACN,gBCxC6B,EAAO,EAAgC,MACjE,GAAQ,GAAkB,EAAO,GACjC,CAAE,SAAQ,UAAW,GAAS,SACL,GAAM,IAAI,AAAC,GAAS,MAC3C,GAAU,EAAK,QAAQ,IAAI,AAAC,GACzB,EACL,GAAI,IACJ,MAAO,EAAO,MACd,EAAG,GACD,YAAa,EAAO,EAAE,MAAQ,GAC3B,EAAO,GAEZ,EAAG,GACD,YAAa,EAAO,EAAE,MAAQ,GAC3B,EAAO,GAEZ,KAAM,EAAO,MAAQ,kBAGlB,CACL,GAAI,IACJ,EAAG,EAAK,EACR,EAAG,EAAK,EACR,UACA,KAAM,GAAU,SAEjB,gBC1C2B,EAAa,EAAS,EAAY,MAC1D,CAAE,qBAAoB,OAAM,QAAS,KACvC,GAAO,EAAmB,GAAG,iBACtB,IACT,OACK,GADL,CAEE,OACA,OACA,SAEF,eAKuB,EAAQ,EAAU,GAAI,EAAa,GAAI,MAC1D,CAAE,qBAAoB,OAAM,UAAW,KACzC,GAAO,EAAmB,GAAG,iBACjB,IACd,OACK,GADL,CAEE,SACA,OACA,SAEF,eAQoB,EAAQ,EAAU,GAAI,EAAa,GAAI,OAC7C,IAAgB,GAAI,eCpCX,EAAM,EAAa,OACrC,MAAK,MAAM,KAAK,UAAU,GAAO,SAAiB,EAAK,EAAO,IAC/D,IAAO,GAAa,MACjB,EAAY,IAAQ,eAGpB,iBCO+B,EAAgB,IACpD,kBAAM,WAAY,QAAU,QAE1B,GAAU,OAAK,GAAL,CAAW,QAAS,IAC9B,EAAc,CAClB,EAAG,KACH,OAAQ,UACR,SAAU,cACV,KAAM,QACN,MAAO,mBAGE,KAAY,GAAQ,QACzB,EAAS,SACF,OAAS,GAAW,EAAS,OAAQ,GACrC,EAAS,UACT,MAAQ,GAAW,EAAS,MAAO,UAIzC,eCciC,EAAgB,IACpD,kBAAM,WAAY,QAAU,QAE1B,GAAU,OAAK,GAAL,CAAW,QAAS,IAE9B,EAAc,CAClB,MAAO,CACL,MAAO,IACP,YAAa,YACb,UAAW,KAEb,OAAQ,CACN,QAAS,QACT,UAAW,eAIJ,KAAY,GAAQ,QACzB,EAAS,QACF,MAAQ,GAAW,EAAS,MAAO,EAAY,OAC/C,EAAS,SACT,OAAS,GAAW,EAAS,OAAQ,EAAY,QACjD,EAAS,UACT,MAAM,OAASC,GAAS,EAAS,MAAM,eAI7C,GAGT,YAAkB,EAAO,OAChB,GAAM,IAAI,AAAC,GACZ,GAAK,YACF,QAAU,EAAK,QAAQ,IAAI,AAAC,GAAW,IACtC,EAAO,GAAK,EAAO,EAAG,MAIpB,KAFC,CAAH,EAAG,GAED,EAFC,IAAE,QAAQ,GAAV,EAAsB,IAAtB,EAAsB,CAApB,WACF,CAAH,EAAG,GACD,EADC,IAAE,QAAQ,GAAV,EAAsB,IAAtB,EAAsB,CAApB,aAEE,OACJ,GADI,CAEP,EAAG,OAAK,GAAS,GACjB,EAAG,OAAK,GAAS,SAEd,MAaD,KAXF,UACA,SACA,cACA,WACA,SACA,cACA,WAEA,SACA,UAEE,EADC,IACD,EADC,CAVH,SACA,SACA,cACA,WACA,SACA,cACA,WAEA,SACA,aAGO,OACJ,GADI,CAEP,EAAG,CACD,KAAM,EAAO,GAAG,KAChB,GAAI,EAAO,GAAG,GACd,MAAO,EACP,WAAY,EACZ,QAAS,GAEX,EAAG,CACD,KAAM,EAAO,GAAG,KAChB,GAAI,EAAO,GAAG,GACd,MAAO,EACP,WAAY,EACZ,QAAS,WAIR,IACN,KAEE,GACN,SC5HQ,IAAyB,EAEtC,YAAuB,EAAmC,OACjD,AAAC,IAAe,EAAU,OAAO,CAAC,EAAO,IAAS,EAAK,GAAQ,eAGhD,EAAgB,IAClC,GAA0C,CAC5C,GACA,IAEE,EAAQ,kBAAM,UAAW,KAEzB,EAAQ,QACJ,IAAI,OACR,yGAIG,IAAc,EAAgB,MAAM,IAAQ,GCtBrD,KAAM,IAAU,sCAEuB,EAAoC,IACrE,CAAC,GAAQ,KAAK,QACV,OAAM,yBAAyB,UAEjC,GAAQ,GACR,EAAQ,EAAG,SAAS,mDACf,KAAQ,GAAO,MAClB,CAAE,OAAM,UAAW,EAAK,OACzB,EAAM,OACH,GAAQ,KAEV,IAAS,IAAW,GAAK,EAAI,OAAO,SAGrC,eCEP,EAAuC,GAC7B,MACJ,GAAM,EAAQ,KAAO,IACrB,EAAU,EAAQ,SAAW,GAE7B,EAAMC,YAAY,YAAY,GAC9B,EAAS,EAAI,4BAEZ,CACL,MACA,UACA,GAAI,EAAO,QACX,GAAI,EAAO,eACX,GAAI,EAAO,eACX,IAAK,EAAI,MAAM,GAAI,IACnB,MAAO,GAAe,EAAO,sBAIV,EAAyC,OACvD,CACL,QAAS,EAAS,YC5BV,KAAA,eACC,yBACG,sCAKgB,EAAS,EAAU,EAAS,EAAY,OAC/D,OAAM,GACV,KAAK,AAAC,GAAa,EAAS,eAC5B,KAAK,AAAC,GAAU,IACN,EAAS,EAAO,EAAS,iBAIf,EAAS,EAAO,EAAS,EAAY,GAClD,GAAW,QACf,GAAU,GAAU,EAAO,CAC/B,UAAW,GACX,GAAI,GACJ,kBAAmB,KACnB,UAAW,QAET,EAAQ,SAAW,SAEd,KAAS,GAAS,IACrB,CAAE,sBAAuB,EAE3B,EAAmB,GAAG,eACF,GAAG,WAAW,OAAS,GACzC,EAAmB,GAAG,WAAW,EAAE,YAE1B,EAAS,EAAO,EAAS,IAK1C,YAAoB,EAAS,EAAO,EAAS,EAAY,MACjD,GAAY,EAAM,KAAK,UACzB,IAAc,KACR,KAAKC,GAA8B,EAAO,EAAS,IAEzD,IAAc,KACR,KAAKC,GAA8B,EAAO,EAAS,IAI/D,YAAiB,EAAS,EAAO,EAAY,MACrC,GAAY,EAAM,KAAK,UACzB,IAAc,KACR,KAAKC,GAAwB,EAAO,IAE1C,IAAc,KACR,KAAKC,GAAwB,EAAO,gBAIzB,EAAS,EAAK,EAAe,GAAI,EAAkB,GAAI,IAExE,GAAY,GAAS,KACb,EAAU,MAClB,GAAO,EAAU,YACjB,EAAW,EAAK,eACb,GAAK,WACP,gBAAkB,IAClB,WAAa,EAAK,YAAc,EAAI,KAAO,OAC3C,KAAO,iBACP,QAAU,EAAK,QAAQ,KACvB,eAAiB,EAAK,eAAe,KACrC,gBAAkB,EAAK,gBAAgB,KAEvC,cAAgB,EAAK,cAAc,KACnC,gBAAkB,EAAK,gBAAgB,KAEvC,qBAAuB,EAAU,YAAY,qBAE9C,EAAK,YAAc,GACjB,EAAU,sBACJ,KACNC,GACE,EACA,OACK,GADL,CAEE,QAAS,KAAK,EAAQ,SACtB,OACA,KAAM,IAER,IAKJ,EAAK,YAAc,GAAK,EAAK,QACvB,KACNC,GACE,EACA,OACK,GADL,CAEE,QAAS,KAAK,EAAQ,SACtB,SAEF,sBAMuB,EAAc,GAAI,EAAkB,GAAI,YAC/D,GAAiB,MACnB,GAAkB,UAEb,KAAS,GACZ,qBAAO,SAAP,cAAe,WAAY,OACpB,KACP,GAAgB,EAAS,EAAM,OAAO,SAAU,EAAO,OAGjD,EAAS,EAAO,eAGtB,SAAQ,IAAI,GACX,oBAGuB,EAAS,EAAM,EAAY,MACnD,GAAiB,MAMnB,GALS,KAAMC,IAAW,EAAM,CAClC,GAAI,GACJ,WAAY,GACZ,aAAc,YAGP,KAAS,GAAS,IACrB,CAAE,OAAM,sBAAuB,EAC/B,EAAK,YAAc,EACjB,EAAmB,GAAG,cAChB,KACNC,GACE,EACA,OACK,GADL,CAEE,QAAS,KAAK,EAAQ,WAExB,IAIG,EAAK,YAAc,GACxB,EAAK,QACC,KACNC,GACE,EACA,OACK,GADL,CAEE,OACA,QAAS,KAAK,EAAQ,WAExB,UAQH,eAgBe,EAAO,EAAY,MACnC,GAAU,YACL,KAAQ,MAEf,EACA,EAAK,OACL,CACE,QAAS,CACP,KAAM,EAAK,MAEb,OAAQ,CACN,SAAU,EAAK,SAAW,EAAK,SAAW,KAC1C,SAGJ,SAGG,eAGiB,EAAO,EAAY,MACrC,GAAU,YACL,KAAQ,MAEf,EACA,EAAK,OACL,CACE,QAAS,CACP,KAAM,EAAK,MAEb,OAAQ,CACN,SAAU,EAAK,SAAW,EAAK,SAAW,KAC1C,SAGJ,SAGG,GAGT,YAAwB,EAAO,MACvB,CACJ,YACA,cAAe,CAAE,UACf,QACG,IACL,aACI,EAAM,gBAAkB,EAAe,MACvC,CAAE,cAAe,GACjB,gBASN,EACA,EAA0C,cAC1C,MACM,CACJ,OACA,UAAW,EACX,eACA,mBACA,YAAa,CACX,KAAM,CAAE,oBAER,GAAS,CACX,KAAM,GACN,UAAW,GACX,aAAc,GACd,iBAAkB,GAClB,eAAgB,IAEZ,EAAU,EAAK,IAAI,AAAC,GACjB,EAAG,KAAK,YAAc,EACzBC,GAAe,EAAI,GACnBC,GAAe,EAAI,IAGnB,EAAc,GAAe,GAC7B,EAAY,EAAK,IAAI,AAAC,GAAQC,GAAgB,UAE7C,CACL,UACA,YACA,eACA,mBACA,iBACA,QAAS,GACT,2BC1RF,EACA,EACA,OACO,MACL,GAAI,EAAQ,GACZ,QAAS,EAAQ,SACb,IAAqB,GAAkB,UAC1C,IAAqB,GAAkB,aACtC,CAAC,EAAQ,OAAO,SACd,CACE,KAAM,EAAQ,aACd,KAAM,EAAQ,aACd,KAAM,EAAQ,KACd,OAAQ,CACN,SAAU,OAGd,CACE,OAAQ,CACN,SAAU,EAAQ,OAAO,YAhB5B,CAmBL,MAAO,EAAQ,MACf,UAAW,EAAQ,UACnB,OAAQ,EAAQ,OAChB,QAAS,EAAQ,eCYR,IAA8C,CACzD,KAAM,GACN,UAAW,IACX,KAAM,CACJ,KAAM,CAAE,KAAM,GAAI,GAAI,IACtB,MAAO,CAAE,KAAM,GAAI,GAAI,KACvB,SAAU,GAAK,GACf,UAAW,GAEb,KAAM,CACJ,SAAU,CAAE,EAAG,KAAM,EAAG,OAE1B,QAAS,CACP,OAAQ,GACR,OAAQ,GACR,KAAM,GACN,KAAM,GACN,KAAM,KAIG,GACX,CACE,CAAE,IAAK,EAAG,MAAO,GAAI,MAAO,UAC5B,CAAE,IAAK,EAAG,MAAO,IAAK,MAAO,WAC7B,CAAE,IAAK,EAAG,MAAO,IAAK,MAAO,WAC7B,CAAE,IAAK,EAAG,MAAO,IAAK,MAAO,WAC7B,CAAE,IAAK,EAAG,MAAO,IAAK,MAAO,WAC7B,CAAE,IAAK,EAAG,MAAO,IAAK,MAAO,WAC7B,CAAE,IAAK,EAAG,MAAO,IAAK,MAAO,WAC7B,CAAE,IAAK,EAAG,MAAO,IAAK,MAAO,WAC7B,CAAE,IAAK,EAAG,MAAO,IAAM,MAAO,YAC9B,CAAE,IAAK,GAAI,MAAO,KAAM,MAAO,aAG7B,GAAU,gEAEqB,EAA+B,MAC5D,GAAWC,GAAI,SAAS,YAAY,SAEnC,IAAW,EAAU,CAC1B,eAAgB,CACd,EAAG,CACD,cAAe,GAAG,uCAOxB,EACA,EACA,EAC0B,MACpB,GAAoC,YAC/B,KAAc,MACnB,EAAa,QAAQ,GAAa,MAC9B,GAAW,EAAK,UACd,OACD,aACA,SAAU,MACP,GAAQ,GAAoB,CAChC,WACA,eACA,aACA,YAEM,KAAK,aAIV,WACA,WACA,OAAQ,MACL,GAAQ,GAAoB,CAChC,WACA,eACA,aACA,YAEM,KAAK,iBASd,GAGT,YAA6B,EAK1B,MACK,CAAE,WAAU,eAAc,aAAY,SAAU,EAEhD,CAAE,UAAS,SAAQ,WAAY,EAE/B,CACJ,OACA,KAAM,CAAE,YACR,UAAW,GACT,EACE,EAAY,GAAmB,EAAS,GACxC,CAAE,IAAG,KAAM,GAAY,EAAS,OACjC,EAAa,MAAM,IADc,CAEpC,YACA,cAEI,EAAQ,GACZ,CACE,KAAM,CAAE,IAAG,GAAI,KAAM,GAAI,GACzB,QAAS,CACP,OACA,SAEF,KAAM,CACJ,UACA,gBAAiB,EACjB,cAAe,EACf,cAAe,aACf,QAAS,GACT,aACA,KAAM,KAGV,aAEI,OAAO,OAAS,GAAU,EAAQ,MACV,GACvB,EAGT,YAAkB,EAA6B,OACtC,GAAM,OAAoB,CAAC,EAAU,IAAc,MACxB,KAAxB,YAAwB,EAAZ,IAAY,EAAZ,CAAZ,YACF,EAAa,EAAQ,OACzB,CAAC,EAAwB,IAAqB,MACT,KAA3B,KAAG,IAAG,MAAqB,EAAd,IAAc,EAAd,CAAb,IAAG,IAAG,gBACH,KAAK,GACd,GAAI,GAAM,IACV,KAAM,SACN,EAAG,OAAK,GAAL,CAAQ,YAAa,EAAE,OAAS,IACnC,EAAG,OAAK,GAAL,CAAQ,YAAa,EAAE,OAAS,KAChC,IAEE,GAET,aAGO,KAAK,KACZ,GAAI,KACD,GAFS,CAGZ,QAAS,EACT,KAAM,GAAU,UAEX,GACN,IAGL,YAA6B,EAK1B,MACK,CAAE,WAAU,eAAc,aAAY,SAAU,EAChD,CAAE,UAAS,QAAO,UAAW,EAE7B,EAAU,EAAa,MAAM,EAAO,IACpC,EAAU,EAAa,MAAM,EAAO,IAEpC,EAAQ,GAAW,GACnB,EAAY,GAAmB,EAAQ,EAAa,WAEpD,EAAe,GAAa,EAAS,CACzC,KAAM,CAAE,EAAG,EAAQ,KAAM,EAAG,EAAQ,MACpC,GAAI,CAAE,EAAG,EAAQ,GAAI,EAAG,EAAQ,IAChC,SAAU,CACR,EAAG,EAAa,MAAM,SAAS,EAC/B,EAAG,EAAa,MAAM,SAAS,GAEjC,QACA,OAAQ,IAGJ,EAAQ,GACZ,CACE,KAAM,OAAK,GAAL,CAAmB,MAAO,MAChC,QAAS,CACP,KAAM,EAAa,KACnB,cAAe,EACf,cAAe,GAAY,EAAO,KAEpC,KAAM,CACJ,QAAS,EACT,gBAAiB,EACjB,cAAe,EACf,cAAe,EACf,WAAY,OAGhB,aAEI,MAAM,OAAS,GAAS,GACvB,EAGT,YAAoB,EAAmB,OAC9B,GAAQ,KAAO,EAAQ,GAAK,IAAO,CAAE,EAAG,IAAM,EAAG,OAG1D,YACE,EACA,EACiB,OACb,OAAO,IAAY,SACd,GAAa,EAAS,CAAE,QAAS,KAAM,cAE1C,EAAQ,KAAO,EAAQ,GAClB,GAAG,KAAa,IAEhB,GAAG,KAAa,GAAa,EAAQ,GAAI,CAC9C,QAAS,EAAQ,GACjB,gBC7QR,KAAM,IAAqD,CACzD,CAAE,IAAK,aAAc,MAAO,OAC5B,CAAE,IAAK,sBAAuB,MAAO,UACrC,CAAE,IAAK,cAAe,MAAO,QAC7B,CAAE,IAAK,aAAc,MAAO,QAGxB,GAAS,GAAY,IAAI,AAAC,GAAe,EAAW,KAyBpD,GAAmB,CACvB,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,GAAI,IACJ,EAAG,KCVQ,EAAyB,CACpC,KAAM,CACJ,GAAI,OACJ,MAAO,OACP,eAAgB,GAChB,SAAU,IAEZ,YAAa,CACX,GAAI,cACJ,MAAO,gBACP,eAAgB,GAChB,SAAU,IAEZ,SAAU,CACR,GAAI,WACJ,MAAO,gBACP,eAAgB,GAChB,SAAU,IAEZ,OAAQ,CACN,GAAI,SACJ,MAAO,YACP,eAAgB,GAChB,SAAU,IAEZ,YAAa,CACX,GAAI,cACJ,MAAO,eACP,eAAgB,GAChB,SAAU,IAEZ,MAAO,CACL,GAAI,QACJ,MAAO,6BACP,eAAgB,GAChB,SAAU,IAEZ,cAAe,CACb,GAAI,gBACJ,MAAO,iBACP,eAAgB,GAChB,SAAU,IAEZ,cAAe,CACb,GAAI,gBACJ,MAAO,iBACP,eAAgB,GAChB,SAAU,IAEZ,YAAa,CACX,GAAIC,GACJ,MAAOC,GACP,eAAgB,GAChB,SAAU,IAEZ,gBAAiB,CACf,GAAIC,GACJ,MAAOC,GACP,eAAgB,GAChB,SAAU,IAEZ,mBAAoB,CAClB,GAAI,qBACJ,MAAO,sBACP,eAAgB,GAChB,SAAU,IAEZ,gBAAiB,CACf,GAAI,kBACJ,MAAO,yBACP,eAAgB,GAChB,SAAU,IAGZ,UAAW,CACT,GAAI,YACJ,MAAO,aACP,eAAgB,GAChB,SAAU,IAGZ,wBAAyB,CACvB,GAAI,0BACJ,MAAO,4BACP,eAAgB,GAChB,SAAU,IAEZ,eAAgB,CACd,GAAI,iBACJ,MAAO,kBACP,eAAgB,GAChB,SAAU,IAEZ,wBAAyB,CACvB,GAAI,0BACJ,MAAO,kBACP,eAAgB,GAChB,SAAU,iBC5HY,EAAS,EAAO,IACpC,GAAqB,QACnB,CAAE,cAAe,EAAY,KAAQ,WAChC,KAAU,GAAS,MACtB,CACJ,UAAW,EACX,QACA,SAAS,GACT,eACA,eACE,EACE,EAAS,GAAc,CAAE,QAAO,KAAI,iBACtC,GAAM,GACJ,EAAG,SAAW,EAAa,OAAQ,GAClC,KAAK,CAAC,EAAG,IAAM,EAAI,UACb,GAAI,EAAG,EAAI,EAAG,OAAQ,MAC1B,GAAG,aAAe,EAAa,KAKjC,KAAK,OACP,GADO,CAEV,cACA,QAAS,CACP,CACE,KACA,QACA,SACA,sBAKF,OAAO,OAAS,GAAU,GAAW,GAAS,GAUtD,YAAuB,EAAgC,GAAI,MACnD,CAAE,QAAO,GAAI,EAAY,GAAI,aAAc,KAC7C,GAAQ,UACH,KAAK,MACH,EAAE,mBAEJ,EACF,CAAE,KAAM,EAAQ,EAAO,GAAI,EAAQ,GAG5C,YAAoB,EAAQ,GACnB,KAAK,CAAC,EAAG,IAAM,EAAE,KAAO,EAAE,aACxB,GAAI,EAAG,EAAI,EAAO,OAAS,EAAG,IACjC,EAAO,GAAG,GAAK,EAAO,EAAI,GAAG,SACxB,GAAG,GAAK,KAAK,IAAI,EAAO,EAAI,GAAG,GAAI,EAAO,GAAG,MAC7C,GAAG,QAAU,EAAO,GAAG,QAAQ,OAAO,EAAO,EAAI,GAAG,WACpD,GAAG,aAAe,EAAO,EAAI,GAAG,cAChC,OAAO,EAAI,EAAG,cAIlB,GChET,KAAM,IAAa,CAAC,IAAK,iBAEA,EAAS,EAAO,IACnC,GAAoB,QAClB,GAAQ,GAAS,GACjB,CAAE,iBAAkB,EAAM,KAC1B,EAAY,CAAE,EAAG,EAAc,GAAI,EAAG,EAAc,aAE/C,KAAU,GAAS,IACxB,GAAO,CAAE,EAAG,GAAI,EAAG,GAAI,GAAI,IAAc,KAAM,UAC/C,EAAiB,CAAE,GAAI,IAAc,KAAM,SAAU,MAAO,IAC5D,EAAQ,CAAE,EAAG,GAAI,EAAG,WACf,KAAQ,IAAY,IACvB,CAAE,WAAW,GAAI,QAAO,SAAS,IAAO,EAAO,UAC1C,KAAK,KACN,IAAS,EAAE,YAEf,EAAO,eAAgB,MACnB,CAAE,iBAAiB,IAAO,SACvB,KAAK,KACN,IAAS,EAAE,WAGf,IAAS,EAAU,KAEpB,GAAQ,CACX,KAAM,EAAQ,EAAM,GACpB,GAAI,EAAQ,EAAM,MAGL,GAAQ,CACrB,QACA,SACA,YAAa,EAAQ,EAAM,GAAG,aAG5B,KAAK,OACN,GADM,CAET,QAAS,CAAC,QAGR,MAAM,OAAS,oBCpCgB,EAAM,EAAY,MAEjD,GAAM,KAAM,AADJ,IAAIC,MACM,UAAU,EAAK,QACjC,EAAW,KAAM,IAAO,EAAI,OAC5B,EAAW,KAAM,IAAU,OAAO,CACtC,IAAK,EAAS,GACd,SAAU,EAAI,WAGZ,CAAE,UAAS,YAAY,IAAO,EAE9B,EAA+C,CACjD,QAAS,GACT,sBAGS,KAAQ,GAAS,MACpB,CAAE,OAAM,YAAa,EAAK,UAE5B,GAAY,KAAM,IAAW,EAAM,CAAE,YAAY,IAAgB,YAE1D,KAAgB,GAAU,MAC7B,CAAE,QAAS,EAEb,EAAK,QAEL,EAAK,UAAY,KACV,EAAK,QAAS,MAEb,EAAK,QAAS,MAIrB,QAAQ,KAAK,GAAG,SAGlB,GAUT,kBACE,EACA,EAA6B,GAC7B,EAAa,GACb,MACM,CACJ,KAAK,GACL,aAAa,GACb,eAAe,GACf,YACE,SACI,EAAK,eACN,UACA,WACI,IAAU,CAAC,GAAO,OACtB,YACI,IACL,CAAE,KAAI,aAAY,gBAClB,EAAK,OACL,cAGE,CAAC,UAOX,kBAAsB,EAAU,IAC1B,GAAgB,YACT,KAAQ,GAAU,MACrB,GAAW,EAAK,MAAM,QACxB,cAAc,KAAK,EAAS,EAAS,OAAS,IAAK,MAC/C,GAAW,EAAS,EAAS,OAAS,GAAG,QAAQ,QAAS,IAC1D,EAAO,EAAS,MAAM,EAAG,EAAS,OAAS,GAAG,KAAK,KACnD,EAAM,KAAM,GAAS,GAAM,MAAM,aACnC,GAAe,GAAS,GAAG,IAAO,CAAE,SAAU,OACrC,SAAW,IACX,KAAO,IAAS,GAAK,GAAG,KAAU,KACxC,KAAK,UAGT,GC7FT,YACE,EACA,EACA,EAC+B,MACzB,GAAW,EAAY,KAAK,AAAC,GAAc,EAAU,KAAO,MAEhE,KACA,IAAmB,IACnB,EAAS,QAAQ,YAAc,UAK1B,GAGT,YACE,EACA,EACsB,QACb,KAAS,GAAS,OAAO,OAAQ,MAClC,GAAc,EAAM,QAAQ,UAChC,AAAC,GAAY,EAAQ,KAAO,MAE1B,GAAe,QACV,GAAM,QAAQ,IAK3B,YACE,EACA,EACsB,QACb,KAAQ,GAAS,MAAM,OAAQ,MAChC,GAAc,EAAK,QAAQ,UAC/B,AAAC,GAAY,EAAQ,KAAO,MAE1B,GAAe,QACV,GAAK,QAAQ,IAK1B,YAAmB,EAAmB,EAAqC,QAChE,KAAS,GAAS,OAAO,UAI5B,AAHgB,EAAM,QAAQ,UAChC,AAAC,GAAY,EAAQ,KAAO,IAEX,QACV,GAKb,YAAkB,EAAmB,EAAoC,QAC9D,KAAQ,GAAS,MAAM,UAI1B,AAHgB,EAAK,QAAQ,UAC/B,AAAC,GAAY,EAAQ,KAAO,IAEX,QACV,GAKb,YACE,EACA,EACA,EACA,EACA,MACM,GAAW,GAAa,EAAa,EAAc,MACrD,MACE,EAAS,KAAK,YAAc,EAAG,MAC3B,GAAQ,GAAU,EAAqB,MACzC,QAAc,GAAM,WACf,EAAS,KAAK,YAAc,EAAG,MAClC,GAAO,GAAS,EAAqB,MACvC,QAAa,GAAK,KClF5B,YAAmB,EAAO,EAAqC,KAAM,MAC7D,CAAE,QAAO,SAAQ,WAAU,UAAS,QAAS,EAC7C,EACJ,IAAS,MACL,CAAC,EAAQ,EAAO,MAAO,EAAO,MAC9B,CAAC,EAAO,KAAM,EAAQ,EAAO,aAC5BC,IAAY,EAAa,EAAS,GAAc,EAAS,GAGlE,YAAmB,EAAO,EAAqC,KAAM,MAC7D,CAAE,SAAQ,SAAQ,gBAAe,UAAS,YAAa,EACvD,EACJ,EAAc,QAAU,YACV,IAAM,EAChB,EAAS,EAAO,OAAS,MAC3B,GAAiC,SACjC,KAAe,MAAQ,EAAS,KAAgB,SACxC,CAAC,EAAG,EAAQ,MAEZ,CAAC,EAAG,EAAS,GAAY,IAE9BA,GAAY,EAAS,CAAC,EAAS,EAAO,MAG/C,YAA2B,EAAO,MAC1B,CAAE,SAAQ,SAAQ,gBAAe,oBAAmB,kBACxD,EACI,EAAU,EAAc,QAAU,SAAW,EAAS,EAAI,QACzDA,IACL,kBAAgB,KACd,GACA,EAAkB,iBAAgB,IAChC,EAAkB,iBAAgB,IAClC,CAAC,EAAG,GACR,CAAC,EAAU,GAAK,EAAO,IAAM,EAAU,iBC5BzC,EACA,EACkB,MACZ,CAAE,SAAQ,QAAS,EACnB,EAAS,GAAU,GAEnB,EAAQ,EAAO,OAAO,GACtB,EAAM,EAAO,OAAO,GACpB,EAA0B,CAAC,EAAG,SAChC,GAAQ,KACJ,GAAK,IACL,GAAK,MAEL,GAAK,IACL,GAAK,GAEN,cCxB+B,EAAS,OACxC,OAAO,IAAY,SAAW,EAAU,EAAQ,KAAK,KCU9D,YAAuB,EAAqC,IACtD,GAAO,EAAM,KAAK,OACpB,AAAC,GACC,GAAgB,EAAM,KAAK,WAAa,EAAM,WAC9C,EAAM,KAAK,YAAc,MAGzB,EAAM,eAAgB,MAClB,GAAsB,EAAK,UAC/B,AAAC,UAAU,SAAM,KAAO,MAAM,iBAAN,cAAsB,SAE5C,IAAwB,GAAI,MACxB,GAAQ,EAAK,GAAqB,KAAK,OAAS,KAC/C,EAAK,OAAO,AAAC,GAAU,EAAM,KAAK,QAAU,WAG9C,EAAK,OAAO,AAAC,GAAU,EAAM,KAAK,QAAU,UAG9C,GAGT,YAAmB,EAAqB,IAClC,GAAwB,GACxB,EAAwB,GACxB,EAAW,GACX,EAAW,QAET,GAAO,GAAc,MACvB,GACO,EAAK,OAAsB,CAAC,EAAK,IAAe,MACjD,CAAE,UAAS,QAAS,EACpB,EAAS,CAAC,EAAK,EAAE,GAAI,EAAK,EAAE,EAAK,EAAE,OAAS,aACzC,EAAE,IAAM,EACb,EAAQ,cACJ,EAAI,OAAO,IAEZ,GACN,MAEM,EAAK,OAAsB,CAAC,EAAK,IAAe,MACjD,CAAE,WAAY,EACd,EAAO,GAAY,GAEnB,EAAU,GAAO,EAAK,YACnB,EAAE,IAAM,EAEb,EAAQ,cACJ,EAAI,OAAO,IAEZ,GACN,UACI,WAEC,IAAI,SAGP,CACL,QAAS,GAAO,GAChB,QAAS,GAAO,GAChB,WACA,YAGJ,YAAqB,EAAO,IACtB,GAAS,GACT,EAAS,GACT,EAAW,GACX,EAAW,QAET,CAAE,YAAW,oBAAmB,QAAS,EAEzC,EAAU,EAAU,MAAM,QAE5B,GACO,EAAK,OAAO,CAAC,EAAK,IAA6B,aAEpD,IAAa,IACb,MAAM,KAAK,UAAX,cAAoB,KAAK,QAAS,GAClC,EAAM,KAAK,SAEL,EAAI,OAAO,CAAC,EAAM,KAAK,KAAM,EAAM,KAAK,QAEzC,GACN,MAEM,EAAK,OAAO,CAAC,EAAK,IAA6B,aAEpD,IAAa,IACb,MAAM,KAAK,UAAX,cAAoB,KAAK,QAAS,GAClC,EAAM,KAAK,SAEL,EAAI,OAAO,CAAC,EAAM,KAAK,KAAM,EAAM,KAAK,QAEzC,GACN,UACI,WAEC,IAAI,QAGR,GAAe,EAAQ,IAAI,AAAC,UAAM,WAAkB,KAAlB,cAAsB,KAExD,EAAe,EAAK,OAAO,CAAC,EAAK,IAC9B,EAAa,SAAS,EAAM,KAAO,EAAM,KAAK,YAAc,EAC/D,EAAI,OAAO,GACX,EAAI,OAAO,IACd,OACC,GACS,EAAa,OAAO,CAAC,EAAK,IAAe,MAC5C,CAAE,KAAM,EAAE,KACV,EAAS,CAAC,EAAE,GAAI,EAAE,EAAE,OAAS,aAC/B,EAAE,IAAM,EACL,GACN,MAEQ,EAAa,OAAO,CAAC,EAAK,IAAe,MAC5C,GAAU,GAAO,EAAE,KAAK,aAC1B,EAAE,IAAM,EACL,GACN,UACI,WAEC,IAAI,SAGP,CACL,QAAS,GAAO,GAChB,QAAS,GAAO,GAChB,WACA,YAWJ,YAAmB,EAAqB,EAA4B,MAC5D,CAAE,UAAU,CAAE,UAAW,GAAM,SAAU,KAAW,GAAW,MACjE,GAEA,EAAM,YACJ,EAAM,gBAAkB,EAAe,QAChC,GAAU,KAEV,GAAY,KAEjB,QAAU,EAAO,UACjB,SAAW,EAAO,WAClB,aAAe,EAEjB,EAAQ,aACJ,QAAU,EAAO,QACnB,EAAM,gBAAkB,EAAe,OAAS,EAAQ,WACpD,SAAW,OAAO,KAAK,EAAO,UAAU,OAAO,CAAC,EAAK,OACrD,GAAO,EAAO,QACX,GACN,MAEG,SAAW,EAAO,YAGpB,aAAe,OAChB,EAAM,cADU,CAEnB,QAAS,EAAO,QAChB,SAAU,EAAO,YAMzB,YAAoC,EAAgB,MAC5C,CAAE,YAAW,UAAW,KAC1B,GAAM,OAAO,2BACN,KAAY,GAAU,SACzB,KAAK,IAAI,EAAK,EAAS,mBAEpB,KAAS,GAAO,SACnB,KAAK,IAAI,EAAK,EAAM,gBAErB,CAAC,EAAG,GAEb,YAA6B,EAAqB,EAA2B,gBAChE,KAAY,OAAM,QAAQ,GAAQ,EAAO,CAAC,GAC/C,qBAAU,OAAV,cAAgB,aAAc,MAC1B,kBAAkB,EAAS,IAC/B,GAA2B,IAKnC,YAA2B,EAAqB,EAAc,GACtD,aAAe,EAGvB,YAAoB,EAAqB,EAAS,GAC1C,QAAU,EAGlB,YAAoB,EAAqB,EAAS,GAC1C,QAAU,EAGlB,YAA2B,EAAqB,MACxC,CAAE,UAAS,UAAS,WAAU,YAAa,EAAM,eACjD,QAAU,IACV,QAAU,IACV,SAAW,IACX,SAAW,EAGnB,YAAiB,EAAqB,YAC9B,GAAO,EAAM,KAAK,OACtB,AAAC,GACC,EAAM,SAAS,EAAM,KACrB,GAAgB,EAAM,KAAK,WAAa,EAAM,aAE5C,KAAQ,MAAK,KAAL,cAAqB,KAAK,OAAQ,MAAQ,MCzM1D,YAAmC,EAAqB,EAAS,MACzD,CACJ,iBACA,OACA,UACA,YACA,UAAW,GACT,KACA,iBAAgB,GAAI,MAChB,CAAE,SAAU,EACZ,EAAQ,EAAK,GAEb,CAAC,EAAM,GAAM,EACb,EAAkB,GAAkB,EAAM,KAAK,EAAG,GAClD,EAAgB,GAAkB,EAAM,KAAK,EAAG,GAEhD,EAAmB,GACvB,UAAW,EACX,eAAgB,IAChB,QAAS,GACT,iBAAkB,GAClB,MAAO,GACP,UAAW,IACR,MAGQ,EAAO,OACf,GADe,CAElB,kBACA,gBACA,YACA,gBAEuB,MACL,EAAO,IAI/B,YAA0C,EAAqB,MACvD,GAAc,CAClB,UAAW,EACX,YAAa,IACb,eAAgB,IAChB,QAAS,GACT,iBAAkB,GAClB,MAAO,GACP,UAAW,IAEP,CAAE,OAAM,UAAW,EAAS,aAAc,WACrC,KAAS,GACd,EAAM,KAAK,YAAc,OACd,EAAkB,CAAE,cAAa,YAAW,eAChC,IAK/B,YAAuB,EAAqB,EAAe,EAAS,OAC1D,GAAM,KAAK,GAA2B,OAAO,OAAO,UAC1D,AAAC,GAAU,EAAM,KAAO,GAI5B,YAA2B,EAAqB,EAAQ,UAClD,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,CAAE,KAAK,KAAM,kBAAmB,EAAO,QAAQ,KAC/C,EAAQ,EAAM,KAAK,MACrB,EAAI,MACA,GAAa,GAAc,EAAO,EAAO,MACxB,EAAgB,CAAC,EAAM,OAAO,OAAO,OACtD,OAAO,OAAO,OAAO,EAAY,WAEhB,EAAgB,EAAM,OAAO,UAC9C,OAAO,OAAS,MAEG,MACF,IAI7B,YAAqC,EAAqB,EAAQ,YAC1D,GAAQC,GAAS,MACnB,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,CAAE,UAAS,SAAU,EAAO,QAAQ,KACpC,EAAa,GAAc,EAAO,EAAO,EAAQ,IACjD,EAAU,EAAM,KAAK,GAAmB,OAAO,OAAO,GACxD,kBAAQ,aACH,QAAQ,EAAQ,cAAc,aAAa,KAAO,IAClD,KAAO,GAAqB,SAAS,GACxC,GAAU,OACV,GAAU,SACa,EAAM,KAAK,OACb,KAK/B,YAA+B,EAAqB,EAAQ,YACpD,GAAQA,GAAS,MACnB,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,CAAE,gBAAe,kBAAmB,EAAO,UAG3C,YAAY,KAAK,UAAY,UAI7B,GAAsBC,GAAO,SAE5B,GAAe,oBACf,GAAe,UAGC,EAAgB,CAAC,SAClC,GAAa,GAAc,EAAO,EAAO,EAAe,IAC7D,EAAM,KAAK,GAAmB,OAAO,OAAO,GAAc,KAChC,EAAM,KAAK,OACb,IAI7B,YAA4B,EAAqB,EAAQ,MACjD,CACJ,WACA,QACA,SACA,iBACA,+BAA+B,IAC7B,EAAO,WAEP,GAAY,EAAO,MACf,GAAU,EAAM,KAAK,KACzB,AAAC,GAAU,EAAM,KAAO,EAAS,IAE7B,EAAa,EAAQ,OAAO,OAAO,UACvC,AAAC,GAAW,EAAO,KAAO,EAAM,IAE5B,EAAc,EAAM,QAAQ,UAChC,AAAC,GAAY,EAAQ,KAAO,EAAO,IAG/B,EAASA,GAAOC,GAAU,GAAQ,SAAU,CAAE,gBAChD,IAAiC,OACZ,EAAgB,CAAC,CAAE,QAAS,CAAC,QAE/C,QAAQ,OAAO,EAAa,KAC3B,OAAO,OAAO,GAAc,EAEhC,EAAO,QAAQ,SAAW,OACL,EAAgB,CAAC,MAChC,OAAO,OAAO,OAAO,EAAY,OAGlB,IAI7B,YAA2B,EAAqB,EAAQ,UAClD,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,CACJ,iBACA,YAAY,KACZ,cAAc,IACZ,EAAO,WAGP,EAAW,MACP,GAAa,GAAc,EAAO,EAAO,EAAU,IACnD,EAAQA,GACX,EAAM,KAAK,GAAmB,OAAO,OAAO,OAG3C,GAAgB,GAChB,EAAK,EAAU,GACf,GAAa,IAAgB,KACpBD,GAAO,EAAO,YAEdA,GAAO,EAAO,SAAU,CAAE,kBAChC,EAAU,QAAQ,GAAa,OAGf,EAAgB,CACrC,CACE,QAGH,EAAM,KAAK,GAAmB,OAAO,OAAO,GAAc,MACtD,MACC,GAAU,EAAM,KAAK,GAAmB,OAAO,OAAO,IAC1D,AAAC,GACQA,GAAO,IAGjB,EAAM,KAAK,GAAmB,OAAO,OAAS,KAExB,EAAgB,KAK7C,YAA6B,EAAqB,EAAQ,UACpD,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,CAAE,YAAW,SAAQ,cAAa,WAAY,EAAO,QACrD,EAAa,CAAC,EAAO,EAAU,IAAM,EAAQ,EAC7C,EAAa,GAAc,EAAO,EAAO,EAAU,IACnD,EAAU,EAAM,KAAK,GAAmB,OAAO,OAAO,GACxD,IAAgB,UACX,OAAS,IACT,QAAU,EAAW,EAAS,EAAO,aAErC,QAAQ,GAAa,OAAS,IAC9B,QAAQ,GAAa,QAAU,EACpC,EACA,EAAO,QAAQ,GAAa,WAOpC,YAA2B,EAAqB,EAAQ,UAClD,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,kBACZ,EAAM,KAAK,GAAmB,EAAO,OAIrD,YAA8B,EAAqB,EAAS,MACpD,CAAE,OAAM,iBAAgB,UAAW,GAAY,KACjD,iBAAgB,GAAI,MAChB,CAAE,SAAU,EACZ,EAAQ,EAAK,MACL,EAAM,OAAQ,CAAE,UAAS,eACZ,EAAO,KAItC,YAAwB,EAAqB,EAAQ,MAC7C,CAAE,SAAQ,QAAS,EAAO,QAC1B,CAAE,iBAAgB,UAAW,EAAS,aAAc,EACpD,EAAQ,GAAS,EAAO,CAAE,SAAQ,YAEpC,iBAAgB,GAAI,MAChB,CAAE,SAAU,EACZ,CAAC,EAAM,GAAM,KACV,EAAM,KAAK,GAAmB,CAAE,OAAM,KAAI,UAAS,iBACnC,MACL,EAAO,EAAM,KAAK,KAI1C,YAAwC,EAAO,EAAQ,YAC/C,GAAO,EAAO,QAAQ,QACxB,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,kBACC,EAAM,KAAK,GAAQ,IAIhD,YAAsC,EAAO,EAAQ,YAC7C,CAAE,UAAS,WAAU,SAAU,EAAO,WACxC,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAElB,EAAQ,GAAkB,EAAM,KAAK,GAAQ,CACjD,UACA,WACA,eAAgB,OAES,EAAM,KAAK,GAAQ,CAC5C,CAAE,KAAME,GAAmB,QAAS,QAGzB,EAAM,KAAK,OAEC,MACf,IAId,YAAkC,EAAO,IACd,GAG3B,YAAmC,EAAO,EAAQ,YAC1C,GAAO,EAAO,WAChB,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,iBAClB,KAAK,GAAO,OAAO,QAAQ,cAAgB,CAAC,GAItD,YAA+B,EAAqB,EAAQ,GACpD,YAAY,KAAK,UAAY,EAAO,QAAQ,UAGpD,YAAqC,EAAqB,GAClD,YAAY,KAAK,sBACrB,CAAC,EAAM,YAAY,KAAK,sBAG5B,YAAmC,EAAqB,GAChD,YAAY,KAAK,oBACrB,CAAC,EAAM,YAAY,KAAK,oBAG5B,YAA0B,EAAqB,GACvC,YAAY,KAAK,WAAa,CAAC,EAAM,YAAY,KAAK,uBC3UnC,EAAY,EAAc,OAC5C,GAAK,QACR,EAAK,QAAQ,OACX,CAAC,EAAK,IACJ,EAAO,GAAM,QAAU,EAAM,EAAO,GAAM,QAAU,EACtD,GAEF,cAGqB,EAAY,EAAoB,GACpD,GAAM,QAAU,GAAW,EAAM,GAClC,EAAK,GAAM,UAAY,SAClB,GAAK,GAAM,oBAIM,EAAY,EAAc,cAC7C,GAAK,GAAM,aACX,GAAK,GAAM,UACb,QAAQ,QAAQ,AAAC,GAAW,OACxB,GAAO,GAAM,aACb,GAAO,GAAM,UAEf,cAGqB,EAAqB,OAC1C,GAAK,OAAS,GAAU,mBAU/B,EACA,EACA,EACA,EACM,OACF,KAAkB,QAAa,IAAS,QACtC,IAAkB,UACb,GAAK,GAAM,aACX,GAAK,GAAM,SAElB,MAAO,IAAgB,UACvB,IAAgB,IAChB,EAAK,QAAQ,WAEN,GAAK,QAAQ,GAAa,GAAM,aAChC,GAAK,QAAQ,GAAa,GAAM,YAE9B,EAAM,IACR,IAAS,WACN,EAAM,MACP,EAAM,KAEhB,IAAK,KAAK,QAAQ,AAAC,GAAQ,IACd,EAAM,MACP,EAAM,KAGd,cAIP,EACA,EACA,EACM,MACA,GAAM,EAAM,OAAO,CAAC,EAAe,IACnC,GAAK,MACH,KAAK,EAAK,IAEZ,EAAK,YACD,EAAI,OAAO,EAAK,QAAQ,IAAI,AAAC,GAAW,EAAO,GAAI,MAEpD,GACN,IAEC,IACa,SAAS,CACtB,KAAM,aACN,QAAS,CAAE,GAAI,EAAK,aAGP,SAAS,CACtB,KAAM,aACN,QAAS,CAAE,GAAI,EAAK,KAAM,SAEb,SAAS,CACtB,KAAM,aACN,QAAS,CAAE,GAAI,EAAK,KAAM,QC3GhC,KAAM,GAAS,CACb,OAAQ,SACR,QAAS,UACT,UAAW,aAUb,YAA8B,CAC5B,QACA,SACA,UAKC,OACM,CACL,UAAW,CACT,OAAQ,EAAO,KACf,OAAQ,EAAO,IACf,KAAM,EAAQ,EAAO,MACrB,KAAM,EAAS,EAAO,QAExB,OAAQ,CACN,OAAQ,EAAO,KACf,OAAQ,EACR,KAAM,EAAQ,EAAO,MACrB,KAAM,EAAO,KAEf,QAAS,CACP,OAAQ,EACR,OAAQ,EAAO,IACf,KAAM,EAAO,KACb,KAAM,EAAS,EAAO,SAiC5B,YAAqB,EAA0B,EAA0B,UAC5D,KAAO,QAAO,KAAK,MAE1B,EAAU,QAAU,EAAU,GAAK,QACnC,EAAU,QAAU,EAAU,GAAK,MACnC,EAAU,QAAU,EAAU,GAAK,QACnC,EAAU,QAAU,EAAU,GAAK,WAE5B,SAGJ,MC/ET,YAAqB,EAIlB,MACK,CAAE,QAAO,SAAQ,WAAY,QAC5BJ,IAAY,EAAS,CAAC,EAAQ,EAAO,MAAO,EAAO,OAG5D,YACE,EAKA,EAAU,GACV,MACM,CAAE,SAAQ,SAAQ,WAAY,QAC7BA,IACL,EACA,EACI,CAAC,EAAS,EAAO,OAAQ,EAAO,KAChC,CAAC,EAAO,IAAK,EAAS,EAAO,SAqCrC,YAAqB,EAAwB,EAAgB,EAAS,GAAI,OACjEA,IAAY,EAAS,CAAC,EAAS,EAAQ,gBC9Db,EAAO,EAAS,MAC3C,CAAE,SAAQ,SAAQ,OAAM,QAAS,EACjC,EAAS,GAAY,GACrB,EAAS,GAAY,GACrB,EAAK,EAAS,IAAU,EAAO,IAAU,EAAO,EAChD,EAAK,EAAS,IAAU,EAAO,IAAU,EAAS,EAClD,EAAK,EAAS,IAAU,EAAO,IAAU,EAAO,EAChD,EAAK,EAAS,IAAU,EAAO,IAAU,EAAS,EAElD,EAAQ,EAAO,OAAO,GACtB,EAAQ,EAAO,OAAO,GACtB,EAAM,EAAO,OAAO,GACpB,EAAM,EAAO,OAAO,SACnB,CAAE,QAAO,QAAO,MAAK,OCa9B,YAAkC,EAAqB,EAAQ,GACvD,YAAY,KAAK,iBAAmB,EAAO,QAGnD,YAA0B,EAAqB,EAAQ,UACjD,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,EAAY,GAAW,EAAO,GAC9B,EAAQ,EAAM,KAAK,GAEnB,EAAQ,GAAkBC,GAAS,GAAQ,CAC/C,aAAc,EACd,gBAAiB,EAAM,YAAY,KAAK,iBACxC,iBAAkB,OAGd,MAAM,OAAS,EAAM,MAAM,OAAO,OAAO,MAEvB,IAG5B,YAAkC,EAAqB,EAAkB,UACnE,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAElB,CAAC,EAAO,GAAO,EAAM,QACrB,CAAC,EAAO,GAAO,EAAM,UACV,aAAe,CAAE,QAAO,MAAK,QAAO,YAC/C,GAAQ,EAAM,KAAK,GACnB,EAAQ,GAAYA,GAAS,GAAQ,KACrC,MAAM,OAAS,EAAM,MAAM,OAAO,OAAO,MACvB,IAG5B,YAAyC,EAAqB,UACjD,KAAS,GAAM,QACpB,EAAM,KAAK,YAAc,EAAG,MACxB,CAAE,OAAM,OAAM,OAAM,QAAU,EAAkB,KAChD,EAAmB,CACvB,aAAc,CAAE,MAAO,EAAM,IAAK,EAAM,MAAO,EAAM,IAAK,GAC1D,gBAAiB,GAGb,EAAQ,GAAYA,GAAS,GAAQ,GAC1C,EAAkB,MAAM,OAAU,EAAkB,MAAM,OAAO,OAChE,MAGsB,IAK9B,YAA+B,EAAqB,EAAQ,YACpD,CAAE,SAAQ,UAAW,EAAO,WAC9B,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,CAAE,SAAQ,UAAW,GACzB,EAAM,KAAK,GACX,EACA,MAEE,GAAe,GACf,IAAW,KACL,KAAK,CAAE,KAAMvB,GAAqB,QAAS,IAEjD,IAAW,KACL,KAAK,CAAE,KAAMC,GAAqB,QAAS,OAG1B,EAAM,KAAK,GAAQ,MAElC,EAAM,KAAK,OAEb,MACc,IAI5B,YAAsB,EAAO,EAAe,EAAQ,OAC3C,GAAM,KAAK,GAAe,MAAM,OAAO,UAC5C,AAAC,GAAS,EAAK,KAAO,GAI1B,YAAoC,EAAqB,EAAQ,YACzD,GAAQsB,GAAS,MACnB,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,CAAE,UAAS,SAAU,EAAO,QAC5B,EAAY,GAAa,EAAO,EAAO,EAAQ,IAC/C,EAAS,EAAM,KAAK,GAAmB,MAAM,OAAO,KACpD,QAAQ,EAAQ,cAAc,aAAa,KAAO,IAClD,KAAO,GAAqB,SAAS,GACvC,GAAU,OACV,GAAU,SACU,IAI5B,YAA0B,EAAqB,EAAQ,YAC/C,GAAQA,GAAS,MACnB,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,CAAE,KAAI,kBAAmB,EAAO,WAClC,EAAI,MACA,GAAQ,EAAM,KAAK,GAAmB,MAAM,OAAO,KACvD,AAAC,GAAS,EAAK,KAAO,MAED,EAAgB,CAAC,GAAQ,UAC1C,GAAY,GAAa,EAAO,EAAO,GAC5C,EAAM,KAAK,GAAmB,MAAM,OAAO,OAAO,EAAW,WAG5D,EACC,EAAM,KAAK,GAAmB,MAAM,QAEtC,EAAM,KAAK,GAAmB,MAAM,OAAS,MAExB,IAI5B,YAA4B,EAAqB,EAAQ,MACjD,CACJ,WACA,OACA,SACA,iBACA,+BAA+B,IAC7B,EAAO,WAEP,GAAY,EAAM,MACd,GAAU,EAAM,KAAK,KACzB,AAAC,GAAU,EAAM,KAAO,EAAS,IAE7B,EAAY,EAAQ,MAAM,OAAO,UACrC,AAAC,GAAU,EAAM,KAAO,EAAK,IAEzB,EAAc,EAAK,QAAQ,UAC/B,AAAC,GAAY,EAAQ,KAAO,EAAO,IAG/B,EAAQ,GAAOI,GAAgB,GAAO,GAAO,EAAa,QAC5D,IAAiC,OAEjC,EACA,CAAC,CAAE,QAAS,CAAC,KACb,UAGE,QAAQ,OAAO,EAAa,KAC1B,MAAM,OAAO,GAAa,EAE9B,EAAM,QAAQ,SAAW,OACJ,EAAgB,CAAC,MAChC,MAAM,OAAO,OAAO,EAAW,OAGjB,IAI5B,YAAmC,EAAqB,EAAQ,MACxD,CAAE,WAAU,OAAM,SAAQ,cAAe,EAAO,WAClD,GAAY,EAAM,MACd,GAAU,EAAM,KAAK,KACzB,AAAC,GAAU,EAAM,KAAO,EAAS,IAE7B,EAAY,EAAQ,MAAM,OAAO,UACrC,AAAC,GAAU,EAAM,KAAO,EAAK,IAEzB,EAAc,EAAK,QAAQ,UAC/B,AAAC,GAAY,EAAQ,KAAO,EAAO,IAE/B,EAAQ,GAAOA,GAAgB,GAAO,GAAO,EAAa,UAC1D,QAAQ,GAAa,EAAI,OAC1B,EAAM,QAAQ,GAAa,GADD,CAE7B,iBAEM,MAAM,OAAO,GAAa,KAEV,IAI5B,YAA0B,EAAqB,EAAQ,YAC/C,GAAQJ,GAAS,MACnB,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,CACJ,WAAW,KACX,iBACA,gBAAgB,OAChB,cAAc,GACd,OAAO,QACL,EAAO,WAEP,EAAU,MAGN,GAAY,GAAa,EAAO,EAAO,EAAS,IAEhD,EAAOI,GACV,EAAM,KAAK,GAAmB,MAAM,OAAO,IAExC,EAAY,GAAO,EAAM,EAAe,EAAa,MAGzD,EACA,CAAC,CAAE,GAAI,EAAS,QAAQ,GAAa,KACrC,GAED,EAAM,KAAK,GAAmB,MAAM,OAAO,GAAa,MACpD,MACC,GAAS,EAAM,KAAK,GAAmB,MAAM,OAAO,IAAI,AAAC,GACtD,GAAO,IAEf,EAAM,KAAK,GAAmB,MAAM,OAAS,KAEvB,EAAgB,KAK7C,YAA4B,EAAqB,EAAQ,YACjD,GAAQJ,GAAS,MACnB,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,CAAE,WAAU,SAAQ,OAAM,cAAa,WAAY,EAAO,QAC1D,EAAa,CAAC,EAAO,EAAU,IAAM,EAAQ,EAC7C,EAAY,GAAa,EAAO,EAAO,EAAS,IAChD,EAAS,EAAM,KAAK,GAAmB,MAAM,OAAO,GACtD,IAAgB,UACZ,GAAM,OAAS,IACf,GAAM,QAAU,EAAW,EAAS,EAAM,GAAM,aAEhD,QAAQ,GAAa,GAAM,OAAS,IACpC,QAAQ,GAAa,GAAM,QAAU,EACzC,EACA,EAAM,QAAQ,GAAa,GAAM,WAMzC,YAA8B,EAAqB,EAAQ,YACnD,GAAQA,GAAS,MACnB,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,CAAE,iBAAkB,EAAO,cAE1B,GAAc,mBAEf,GAAY,GAAa,EAAO,EAAO,EAAc,IAC1D,EAAM,KAAK,GAAmB,MAAM,OAAO,GAAa,EAErD,EAAc,WACF,QAAQ,QAAQ,AAAC,GAAqB,UAEhD,EAAM,aAAa,OACnB,EAAO,GACP,KAAO,IAAP,cAAU,iBAKQ,IAI5B,YAAiC,EAAO,IACb,GClR3B,YAAkC,EAAqB,MAC/C,CAAE,KAAM,EAAS,gBAAiB,IAClC,aAAe,GAAqB,EAAoB,OACzD,EAAa,SAD4C,CAE5D,OAAQI,GAAgB,EAAa,WAIzC,YAAqB,EAAqB,EAAyB,MAC3D,GAAQJ,GAAS,GACjB,CAAE,KAAM,EAAS,gBAAiB,EAClC,CAAE,MAAO,EAEX,GAAa,QAAQ,KAAO,IAAM,EAAa,QAAQ,KAAO,OAC1D,aAAe,GAAqB,EAAoB,OACzD,EAAa,SAD4C,CAE5D,KACA,OAAQI,GAAgB,EAAa,YAK3C,YACE,EACA,EACA,MACM,GAAQJ,GAAS,GACjB,CAAE,KAAM,EAAS,gBAAiB,EAClC,CAAE,aAAc,IAChB,aAAe,GAAqB,EAAoB,OACzD,EAAa,SAD4C,CAE5D,YACA,OAAQI,GAAgB,EAAa,WAIzC,YACE,EACA,EAKA,MACM,GAAQJ,GAAS,GACjB,CAAE,gBAAiB,EACnB,CAAE,KAAI,cAAa,WAAY,IAC/B,aAAe,GAAe,EAAc,EAAI,GAClD,MACI,aAAe,OAChB,EAAM,cADU,CAEnB,QAAS,OAAK,EAAM,aAAa,SAAY,SAGxB,GAG3B,YACE,EACA,EAIA,MACM,CAAE,eAAc,WAAY,EAC5B,EAAQA,GAAS,MACnB,GAAmBI,GAAgB,EAAM,gBAChC,QAAQ,AAAC,GAAgB,GACjB,GACjB,EACA,EAAY,GACZ,OAGE,aAAe,EACjB,MACI,aAAe,OAChB,EAAM,cADU,CAEnB,QAAS,OAAK,EAAM,aAAa,SAAY,SAGxB,GAG3B,YACE,EACA,EACA,MACM,CAAE,cAAa,kBAAmB,IAE5B,KAAK,QAAQ,AAAC,GAAS,MAC3B,GAAW,GAAa,EAAM,KAAM,EAAK,aAAc,OACzD,MACE,EAAS,KAAK,YAAc,EAAG,MAC3B,GAAQ,GAAU,EAAqB,EAAK,OAAO,IACnD,EAAS,GAAa,EAAqB,EAAK,OAAO,OACxC,EAAO,CAC1B,QAAS,CACP,WACA,QACA,SACA,4BAGK,EAAS,KAAK,YAAc,EAAG,MAClC,GAAO,GAAS,EAAqB,EAAK,OAAO,IACjD,EAAS,GAAa,EAAqB,EAAK,OAAO,OACxC,EAAO,CAC1B,QAAS,CACP,WACA,OACA,SACA,6BCrIC,IAAW,CACtB,WAAY,aACZ,SAAU,WACV,gBAAiB,kBACjB,KAAM,QAMR,YACE,EACA,EACA,EAA2B,GACjB,MACJ,CAAE,SAAS,EAAG,SAAS,IAAU,EAGjC,EAAQ,AADZ,MAAK,IAAI,EAAM,QAAU,IAAM,EAAM,OAAS,IAAM,EAAM,WAC3B,MAAS,MAAS,EAC7C,EAAQ,EAAQ,EAAI,MAAc,GAAK,EAAI,EAE3C,CAAC,EAAK,GAAO,QAEZ,CAAC,EAAM,EAAO,EAAM,GAG7B,YACE,EACA,EAGI,GACJ,MACM,CAAE,SAAQ,SAAQ,kBAAmB,EACrC,CAAE,QAAQ,EAAG,aAAa,MAAS,KAErC,IAAmB,MAAQ,IAAe,KAAM,MAC5C,CAAE,eAAc,UAAS,YAAa,EAAM,eAC5C,SAAW,OAAO,KAAK,EAAM,UAAU,OAAO,CAAC,EAAK,IAAO,MACzD,GAASL,GAAY,EAAe,EAAU,EAAS,GAAK,CAChE,EAAS,EAAO,OAChB,EAAO,MAEH,CAAC,EAAK,GAAO,EAAe,EAAU,EAAS,GAE/C,EAAa,AADF,KAAK,IAAI,KAAK,IAAI,GAAM,KAAK,IAAI,MAClB,EAAM,EAAI,EAQpC,EAAa,AAPTM,GACP,UACC,EACA,MAAK,KAAK,IAAe,EAAI,EAAO,KAErC,MAAM,GACN,UAAU,EAAG,CAAC,EAAO,IACH,SAAS,GAAQ,kBAClC,GAAM,EACH,GACN,QACE,MACC,GAAa,GAAc,kBAAgB,OAC7C,EAAY,MACR,GAASN,GAAY,EAAM,aAAa,SAAS,GAAa,CAClE,EAAS,EAAO,OAChB,EAAO,MAMH,EAAU,AAJNM,GACP,UAAU,EAAG,EAAO,IACpB,MAAM,GACN,UAAU,EAAG,CAAC,EAAO,IACN,SAAS,GAAQ,WAE7B,SAAW,OACZ,EAAM,UADM,EAEd,GAAa,MCrEtB,YAAiC,EAAqB,EAAQ,MACtD,CAAE,SAAQ,QAAS,EAAO,QAE1B,EAAQ,GAA2B,EAAQ,EAAM,EAAM,cACvD,KAAK,KAAK,MACN,EAAO,CAAE,QAAS,CAAE,SAAU,SAChC,EAAO,CAAE,MAAO,GAAK,WAAY,EAAM,KCVjD,YAAkB,EAAqB,EAAO,GACtC,MAAQ,EAGhB,YAA6B,EAAqB,EAAO,EAAQ,GACzD,MAAQ,IACR,OAAS,cCJf,EACA,EACA,OACO,GAAK,OACV,AAAC,GAAa,GAAgB,EAAS,KAAK,WAAa,eCO3D,EACA,EACoB,CAChB,CAAC,EAAY,IAAY,CAAC,MAAM,QAAQ,EAAY,QAC1C,GAAW,SAGnB,GAAO,GAAY,EAAY,IAC/B,EAAM,GAAW,EAAY,IAC7B,EAAU,GAAe,EAAY,IACrC,EAAQ,IAAO,EAAY,GAAW,SACrC,CAAE,aAAc,EAAY,GAAU,OAAM,MAAK,UAAS,SAGnE,YAAqB,EAAc,OAC1B,AAAC,IAAqB,GACd,KAAK,IAItB,YAAoB,EAAc,OACzB,IAEE,AADK,EAAa,MACZ,EAAa,EAAa,OAAS,GAAK,KAIzD,YAAwB,EAAc,OAC7B,IACD,EAAa,SAAW,EAAU,KAC/B,EAAa,EAAa,OAAS,GC/C9C,YAAuB,EAAO,MACtB,GAAU,EAAM,MAAM,WACrB,GAAQ,OAAO,CAAC,EAAK,IAAM,MAC1B,GAAY,EAAQ,SAAW,EAAI,IAAM,YACxC,OAAO,EAAE,QAAQ,MAAO,KAAO,EAC/B,GACN,eAGkC,EAAK,OACnC,CAAC,EAAO,EAAiB,KAAU,MAClC,GAAiB,EAAM,OAAO,CAAC,EAAmB,IAAQ,MACxD,GAAQ,EAAI,KAAK,YACL,MAA4B,IAAU,IAAI,OAAO,GAC5D,GACN,UAEE,GAGI,OAAO,KAAK,GAChB,KAAK,CAAC,EAAG,IAAM,GAAc,GAAK,GAAc,IAChD,OAAO,CAAC,EAAK,OACR,GAAO,EAAe,GACnB,GACN,IAPE,GCAb,YACE,EACA,EACA,UACI,EAAM,MAAQ,EAAM,KAAK,OAAS,EAAG,IACnC,GAA4B,UAC5B,CAAC,aAAc,SAAS,SAAS,EAAQ,OAAS,QAClC,EAAM,KAAmB,OAAO,AAAC,GACjD,EAAM,KAAK,UAAY,kBAAS,WAC5B,EAAQ,UACR,EAAM,WAAa,EAAM,KAAK,YAAc,IAI5C,EAAQ,WACT,iBACA,aACA,SAAU,IAEX,EAAQ,QAAU,UACjB,EAAQ,QAAU,cACjB,MAAe,KAAf,cAAmB,KAAK,QACxB,CAAC,EAAe,KAAK,AAAC,GAAM,EAAE,KAAK,QAAU,IAC/C,MACM,GAAa,EAAM,OAAS,IAC5B,cAAc,MAAQ,WACtB,cAAc,cAAgB,SAE9B,cAAc,MAAQ,WACtB,cAAc,cAAgB,aAKnC,QAAS,GACN,cAAc,MAAQ,aACtB,GAAiB,EAAe,OACpC,AAAC,GAAU,EAAM,QAAQ,YAAc,MAEnC,cAAc,cAAgB,KAAK,SAChC,OAAS,EAAM,OAAO,WAA0B,OAAS,2BAW1E,YAAkC,EAAqB,EAAS,MACxD,CACJ,YACA,OACA,iBACA,OACA,UACA,WACA,UACA,WACA,eACA,SACA,gBACA,qBACE,KAEA,EAAW,MAGP,GAAsB,AAFL,GAAe,WAEK,GAErC,EACJ,IAAkB,EAAe,MAC7B,EAAoB,GAAW,OAAO,CAAC,EAAK,OACtC,EAAM,IAAM,EAAM,qBAAqB,WACpC,GACN,IACH,OAEA,gBAAgB,GAAW,CAC/B,YACA,iBACA,gBACA,oBACA,OACA,UACA,WACA,UACA,WACA,eACA,QACA,SACA,KAAM,EAAoB,GAAW,OAAO,CAAC,EAAK,OAC5C,EAAM,IAAM,CACd,QAAS,CACP,MAAO,EAAM,QAAQ,MACrB,UAAW,EAAM,QAAQ,UACzB,sBAAuB,EAAM,QAAQ,wBAGlC,GACN,MAKT,YAAoC,EAAqB,EAAS,MAC1D,GAAc,EAAM,gBAAgB,MACtC,OACI,UAAY,EAAY,UAC7B,EAAM,KAA+B,QAAQ,CAAC,EAAO,IAAU,CAC1D,GAAgB,EAAM,KAAK,WAAa,EAAY,cAChD,KAAK,GAAO,QAAU,OAAO,OACjCH,GAAU,EAAM,SAChB,EAAY,KAAK,EAAM,IAAI,cAI3B,cAAgB,EAAY,gBAC5B,kBAAoB,EAAY,oBAChC,eAAiB,EAAY,iBAE7B,OAAS,EAAY,UAEjB,KAEJ,QAAU,EAAY,UACtB,SAAW,EAAY,WACvB,QAAU,EAAY,UACtB,aAAe,EAAY,eAC3B,SAAW,EAAY,SAEzB,EAAM,gBAAkB,EAAe,eAC9B,KAAW,QAAO,KAAK,EAAY,OAAQ,MAC9C,CAAE,gBAAe,iBAAkB,EAAY,MAAM,GACrD,EAAQ,EAAM,KAAK,UAAU,AAAC,GAAU,EAAM,KAAO,GACrD,EAAqB,EAAM,KAAK,GACnC,uBACe,SAAS,EAAe,KAEpC,SAAS,GAAW,EAAkB,sBAGxC,KAAO,EAAY,KCtI/B,YAA0B,EAAqB,MACvC,CAAE,iBAAgB,QAAS,KAC7B,EAAgB,MACZ,GAAa,EAAK,iBAAgB,OAAO,KACzC,EAAqBI,GAAI,EAAW,IACpC,EAAQ,EAAW,GAAG,UAAU,AAAC,GAAQ,IAAQ,SAChD,CACL,OAAQ,EAAW,EAAE,GACrB,OAAQ,EACR,UAKN,YAA0B,EAAqB,EAAgB,YACvD,GAAmB,KAAM,iBAAN,cAAsB,MAI3C,IAAmBV,GAA4B,MAC3C,GAA4B,GAChC,EACAA,GACA,CACE,SAAU,GACV,SAAU,OACV,mBAAoB,OAGlB,SAAWxD,GAAQ,GAAO,KAC5B,MACI,SAAS,iBAA2B,OACxC,iBAA2B,YAEzB,CAAE,SAAQ,SAAU,GAAiB,IAAU,CACnD,OAAQ,EACR,MAAO,KAGH,YAAY,KAAK,MAAQ,CAAE,MAAO,EAAQ,iBAE5C,EAAM,YAAY,eAAiB,EAAQ,gBAAgB,GAAI,GAC3D,YAAY,KAAK,eAAiB,UAClC,GAAgB,EAAM,KAAK,UAC/B,AAAC,GAAa,EAAS,KAAO,KAG1B,KAAK,GAAe,KAAO,EAAM,SAAS,GAAe,MAKrE,YAAmB,EAAqB,EAAiB,GAAM,GAEvD,YAAY,KAAK,UAAY,QAEZ,EAAO,MAC1B,MACI,YAAY,aAAe,EAAQ,KAAK,MAE1C,YAAY,KAAK,cAAgB,GAEnC,EAAM,YAAY,KAAK,mBACH,GAGpB,EAAM,aACF,SAAW,QACP,IAId,YAA2B,EAAqB,EAAa,GAAO,CAE/D,GAAM,YAAY,cACjB,EAAQ,EAAM,YAAY,cAAc,UAC1C,CAAC,OAES,GAId,YAAyB,EAAqB,EAAQ,MAC9C,CAAE,gBAAiB,EAAO,QAE5B,kBAAO,KAAK,QAAS,IACnB,GAEE,IAAiB,EAAQ,UAAU,KAC/B,YAAY,KAAK,UAAY,EAAO,QAAQ,YAE5C,YAAY,KAAK,UAAY,KAGjC,IAAiB,EAAM,YAAY,iBAC3B,EAAO,MAGb,YAAY,aAAe,EAE7B,EAAQ,GAAc,mBACD,EAAO,GAG5B,EAAQ,GAAc,aACP,EAAO,OAGhB,EAAO,OAET,IAId,YAAgC,EAAqB,EAAqB,GAClE,YAAY,oBAAsB,EAG1C,YAAmC,EAAqB,MAChD,GAAQ,CAAC,QAAS,UAAU,SAAS,EAAM,cAAc,OAC3D,SACA,YAC4B,EAAO,CAAE,UAG3C,YAAyC,EAAqB,MACtD,GAAQ,EAAM,cAAc,QAAU,QAAU,SAAW,WACjC,EAAO,CAAE,UAG3C,YAA+B,EAAqB,CAAE,OAAM,MAAM,MAC1D,GAAS,GAAU,MAErB,GAAQ,EAAO,OAAO,QACpB,GAAM,EAAO,OAAO,MAEtB,GAAY,GACZ,EAAQ,IACH,CAAC,EAAK,KAEN,CAAC,EAAO,QAGX,GAAQ,EAAM,YAAY,KAAK,cAAc,UAC7C,KAAK,CACT,GAAI,IACJ,KAAM,EAAK,GACX,GAAI,EAAK,OAEL,YAAY,KAAK,cAAgB,EAGzC,YAAkC,EAAqB,EAAI,MACnD,GAAQ4D,GAAS,KACjB,YAAY,KAAK,cACrB,EAAM,YAAY,KAAK,cAAc,cAAc,OACjD,AAAC,GAAS,EAAK,KAAO,GAI5B,YAA6C,EAAO,IAC9C,EAAM,gBAAkB,KAAM,MAC1B,CAAE,SAAU,EAAM,iBAElB,KAAK,GAAO,QAAQ,sBACxB,CAAC,EAAM,KAAK,GAAO,QAAQ,yBAEnB,IAId,YAAwB,EAAqB,EAAQ,MAC7C,GAAO,EAAM,gBAAkB,EAAe,MAC9C,EAAS,GAAU,GAEnB,EAAS,EAAO,GAAY,GAASO,GAAU,GAE/C,EAAS,EAAO,OAAO,EAAO,QAC9B,EAAO,EAAO,OAAO,EAAO,MAC5B,EAAS,EAAO,OAAO,EAAO,QAC9B,EAAO,EAAO,OAAO,EAAO,MAC5B,EAAU,EAAS,EAAO,CAAC,EAAM,GAAU,CAAC,EAAQ,GACpD,EAAU,EAAS,EAAO,CAAC,EAAM,GAAU,CAAC,EAAQ,GACpD,EAAe,GAAmB,EAAM,KAAK,QAAS,EAAM,cAC9D,EAAM,gBAAkB,EAAe,MAAO,QACxC,EAAO,aACR,GAAO,YACJ,QAAU,IACV,QAAU,YAEb,GAAO,SACJ,QAAU,YAEb,GAAO,UACJ,QAAU,QAKhB,KACW,KAAK,CAAE,QAAS,EAAM,QAAS,QAAS,EAAM,iBAGvD,QAAU,EACZ,KACW,KAAK,CAAE,QAAS,EAAS,QAAS,IAIrD,YAAuC,EAAqB,EAAU,UAChE,KAAM,iBAAN,cAAsB,GAAI,MAEtB,GAAQ,AADC,GAAU,GACJ,OAAO,GACtB,EAAQ,EAAM,KAAK,EAAM,eAAe,OACxC,EAAQ,GAAkB,EAAM,KAAK,EAAG,KACxC,YAAY,KAAK,MAAQ,CAAE,QAAO,UAI5C,YAAuB,EAAqB,EAAsB,MAC1D,GAAW,EAAM,kBAAkB,EAAM,UAAU,MAAM,KAAK,UAC7D,kBAAU,IAAK,EAAS,GAAK,KAGtC,YAAoB,EAAqB,EAAQ,MACzC,CAAE,QAAO,UAAS,gBAAiB,EACnC,CACJ,iBACA,YAAa,CACX,KAAM,CAAE,wBAEV,iBACE,KACA,IAAkB,EAAe,MAAO,MACpC,GACJ,IAAY,EAAO,OAAS,EAAI,IAAY,EAAO,QAAU,EAAI,QAC/D,IAAU,KAAM,MACZ,GAAK,GAAc,EAAO,MAC5B,EAAI,MACA,GAAS,EAAM,SAAS,KACxB,SAAS,GAAM,GAAU,EAAO,aAItC,iBAAgB,UAEQ,IAAiB,EAAQ,SAAS,KAC1D,EAAM,SACN,MACM,GAAS,EAAM,kBAAkB,iBAAgB,MACjD,kBAAkB,iBAAgB,IAAM,GAAU,EAAO,OAC1D,MACC,GAAS,EAAM,SAAS,iBAAgB,MACxC,SAAS,iBAAgB,IAAM,GAAU,EAAO,OAEnD,MACC,GAAU,GACd,EAAM,UACN,EAAM,eAEG,KAAY,GAAS,MACxB,GAAS,EAAM,SAAS,EAAS,MACjC,SAAS,EAAS,IAAM,GAAU,EAAO,KAMvD,YAAiB,EAAqB,EAAQ,IACxC,kBAAO,KAAK,QAAS,EAAG,MACpB,CAAE,WAAU,WAAY,EACxB,EAAc,GAAmB,EAAM,KAAK,QAAS,EAAM,cAE7D,EAAM,gBAAkB,EAAe,aACjC,OACD,IAAS,WAAY,GAClB,QAAU,EAAM,aAAa,UACvB,kBAGT,IAAS,YACJ,EAAO,CAAE,MAAO,eAErB,IAAS,gBAAiB,MACvB,GAAY,EAAY,QACxB,QAAU,EACZ,EAAU,QACV,EAAM,aAAa,WACf,EAAO,CAAE,MAAO,mBAGjB,GACD,QAAU,EAAM,aAAa,WAC3B,EAAO,CAAE,MAAO,gBAIvB,MACC,CAAE,UAAS,UAAS,YAAa,EAAM,gBAEzC,CAAC,EAAO,OAAQ,EAAO,QAAS,EAAO,WAAW,SAAS,GAAU,MACjE,GAAY,EAAY,QACxB,QAAU,EAAY,EAAU,QAAU,IAC1C,QAAU,EAAY,EAAU,QAAU,SAEpC,UACN,QAAU,IACV,QAAU,IACV,SAAW,IAMzB,YAA6B,EAAqB,EAAO,MACjD,GAAY,EAAM,UAAU,MAAM,KAClC,EAAiB,EAAM,kBAAkB,EAAU,UAEvD,kBAAgB,KAChB,CAAE,EAAM,KAAK,EAAe,OAAmB,KAAK,MAIxD,YAAmB,EAAqB,IAEpC,EAAM,gBAAkB,EAAe,OACvC,EAAM,YAAY,eAAiB,EAAQ,YAAY,GACvD,MACM,GAAM,GAAoB,EAAO,GACnC,GAAO,MAAM,IACb,GAAO,MAAM,IACX,EAAO,GAAoB,EAAO,GACpC,GAAO,MAAM,KACb,GAAO,MAAM,OACX,OAAS,OAAK,GAAO,OAAZ,CAAmB,MAAK,aAC9B,GAAM,YAAY,eAAiB,EAAQ,YAAY,KAC1D,OAAS,GAAO,MACb,EAAM,gBAAkB,EAAe,UAC1C,OAAS,GAAO,OAI1B,YAA0B,EAAqB,EAAM,IAC/C,EAAM,gBAAkB,EAAe,MAAO,IAC5C,GAAQ,YACD,KAAS,GAAK,EAAM,aACvB,EAAM,IAAM,EAAM,qBAAqB,iBAEzC,SAAW,GAIrB,YAA0B,EAAqB,EAAM,GAC7C,cACJ,GAAS,EAA+B,KAAK,AAAC,GAAM,EAAE,KAAK,YAAc,GACrE,EAAe,MACf,EAAe,MAGvB,YAA8B,EAAqB,EAAgB,IAC7D,GAAgB,QACd,GAAoB,GAEpB,EAAU,OAAO,KAAK,GAAgB,KAAK,CAAC,EAAG,IACnD,EAAE,MAAM,KAAK,OAAS,EAAE,MAAM,KAAK,OAAS,GAAK,UAE1C,KAAU,GAAS,MACpB,GAAO,EAAe,GACtB,EAAgB,EAAO,MAAM,KAAK,UACpC,IAAkB,KACb,KAAK,GAGV,EAAK,SAAW,EAAG,MACf,GAAQ,EAAM,KAAK,UAAU,AAAC,GAAU,EAAM,KAAO,EAAK,GAAG,MACjD,GAAU,CAAE,GAAI,EAAK,GAAG,GAAI,aACzC,MACC,GAAa,EAAe,GAC5B,EAAmB,EAAW,UAChC,GAAoB,EAAG,MACnB,GAAc,EAAW,OAAO,AAAC,GAAM,CAAC,EAAE,KAAK,UAEnD,EAAY,OAAS,QACF,GAChB,IAAkB,GAAK,IAAqB,EAAY,QAC3D,MACM,GAAQ,EAAM,KAAK,UACvB,AAAC,GAAU,EAAM,KAAO,EAAY,GAAG,MAEvB,GAAU,CAAE,GAAI,EAAY,GAAG,GAAI,gBAEnC,GAAU,YAGZ,GAAU,eAI5B,kBAAoB,EACnB,EAGT,YAAgB,EAAqB,EAAgB,EAAK,EAAU,GAAO,MACnE,GAAa,OAAO,KAAK,GAAgB,KAAK,CAAC,EAAG,IACtD,EAAE,MAAM,KAAK,OAAS,EAAE,MAAM,KAAK,OAAS,GAAK,MAIjD,KAAK,UAAU,KACb,KAAK,UAAU,OAAO,KAAK,EAAM,qBACnC,EACA,MACM,GAAS,GAAqB,EAAO,GAEvC,EAAO,OAAS,GAAK,GAAO,QACxB,eAAiB,EAAM,kBAAkB,EAAO,MAChD,UAAY,EAAO,OAEnB,eAAiB,GAAM,EAAM,kBAAkB,KAC/C,UAAY,UAGd,UAAY,IACZ,eAAiB,EAAM,kBAAkB,MAGhC,EAAO,EAAe,EAAM,eACnC,GASZ,YAAsB,EAAqB,EAA+B,MAClE,CACJ,MAAM,KACN,mBAAmB,GACnB,gBAAgB,IACd,GAAW,GAGT,EAAqB,AADJ,GAAe,WACI,EAAM,MAC1C,EAAO,OAAO,KAAK,GACnB,EAAa,CAAC,GAAO,CAAC,EAAK,SAAS,GAAO,IAAM,EAAK,GAAK,KAC1D,EAAO,EAAoB,EAAY,MACpC,MAEO,EAAO,MAEd,EAAO,MACG,EAAO,EAAmB,SAGxC,GAAY,AADE,GAAmB,EAAM,KAAK,QAAS,EAAM,WACnC,UAC1B,MACI,QAAU,EAAU,UACpB,QAAU,EAAU,YAEpB,GAGV,YAA4B,EAAqB,EAAK,CAChD,MACW,EAAO,CAAE,QAI1B,YAA4B,EAAqB,CAAE,SAAQ,YAAY,UACjE,IACE,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,QAAO,MAAO,EAAM,eACtB,EAAwB,EAAM,KAAK,GACtC,qBACC,IACmB,WAAW,KAEX,MAAM,QAEvB,GAAW,OAAO,OAAO,EAAqB,kBAC9C,SAAS,GAAM,SAEhB,WAEC,IAAI,IAIhB,YAAkC,EAAqB,CACjD,EAAM,gBAAkB,EAAe,UACnC,aAAa,aAAe,MAC1B,EAAO,CAAE,MAAO,MAG5B,YAA2B,EAAqB,GACxC,aAAa,aAAe,KAC5B,SAAW,EAAM,aAAa,WAC9B,QAAU,EAAM,aAAa,WAC3B,EAAO,CAAE,MAAO,KC3f1B,YAAiC,EAAqB,EAAY,YAE5D,KAAM,iBAAN,cAAsB,GAAI,MACtB,GAAQ,KAAM,iBAAN,cAAsB,SAET,EAAM,KAAK,GAAQ,CAC5C,CAAE,KAAMJ,GAAmB,QAAS,QAEzB,EAAM,KAAK,OACN,MACR,IAId,YAAgC,EAAqB,EAAe,UAC9D,KAAM,iBAAN,cAAsB,GAAI,MACtB,GAAQ,EAAM,eAAe,MAC7B,EAAU,CACd,CAAE,KAAMT,GAAwB,QAAS,EAAc,iBACvD,CACE,KAAMc,GACN,QAAS,EAAc,yBAGA,EAAM,KAAK,GAAQ,MAC5B,MACR,MACF,IAGZ,YAAwB,EAAqB,UACvC,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,kBAGG,EAAM,KAAK,GAAQ,CAC5C,CAAE,KAAMC,GAAgB,QAAS,SAEjB,MACc,EAAO,CAAE,MAAO,cAEtC,EAAO,CAAE,QAAS,CAAE,UAAW,SACjC,IAGZ,YAA0C,EAAqB,EAAe,UACxE,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAClB,CAAE,MAAK,OAAQ,KAEM,EAAM,KAAK,GAAQ,CAC5C,CAAE,KAAMb,GAA4B,QAAS,CAAE,MAAK,aAGpC,KACZ,SAAW,QACP,IAGd,YAA6B,EAAqB,UAC5C,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,kBACG,EAAM,KAAK,GAAQ,CAC5C,CAAE,KAAMc,GAAqB,QAAS,SAGtB,KACZ,SAAW,QACP,IAId,YAAwC,EAAqB,UACvD,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAElB,CAAE,MAAK,OAAQC,GAAoB,EAAM,KAAK,OAEzB,EAAM,KAAK,GAAQ,CAC5C,CAAE,KAAMf,GAA4B,QAAS,CAAE,MAAK,aAGpC,KACZ,SAAW,QACP,IAId,YAAwC,EAAqB,EAAe,IACtE,EAAM,eAAgB,MAClB,CAAE,SAAU,EAAM,eAClB,CACJ,KAAM,CAAE,IAAG,KAAI,MACf,QACE,EAAM,KAAK,GAET,CAAE,MAAK,OAAQ,KACjB,GAAQ,CAAE,KAAM,CAAE,IAAM,KAAQ,MAAM,WAC1B,EAAO,CAAE,MAAK,aACxB,CAAE,GAAI,EAAO,GAAI,GAAU,EAAM,OACjC,SAAS,GAAO,KAAK,GAAK,IAC1B,SAAS,GAAO,KAAK,GAAK,GAIpC,YAAsB,EAAqB,EAAU,EAAS,cACxD,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,kBAGI,EAAM,KAAK,GAAQ,EAAU,GAErD,MAAM,KAAK,GAAO,OAAlB,cAAwB,aAAc,KAC3B,EAAM,KAAK,IACf,MAAM,KAAK,GAAO,OAAlB,cAAwB,aAAc,MACjC,EAAM,KAAK,OAGT,MACR,MACF,QAGF,GAAY,AADE,GAAmB,EAAM,KAAK,QAAS,EAAM,WACnC,UAC1B,MACI,QAAU,EAAU,UACpB,QAAU,EAAU,UAKhC,YAAsB,EAAqB,EAAS,gBAC5C,GAAW,EAAQ,QAAQ,MAC7B,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,kBAEI,EAAM,KAAK,GAAQ,GAE3C,MAAM,KAAK,GAAO,OAAlB,cAAwB,aAAc,KAC3B,EAAM,KAAK,IACf,MAAM,KAAK,GAAO,OAAlB,cAAwB,aAAc,MACjC,EAAM,KAAK,OAGT,MACR,MACF,IAGZ,YAA6B,EAAqB,EAAS,cACnD,GAAa,EAAQ,QAAQ,cAE/B,EAAM,UAAW,UACR,KAAS,GAAM,KACpB,GAAgB,oBAAO,OAAP,cAAa,WAAa,EAAM,WAEhD,OAAM,UAAN,cAAe,OAAO,AAAC,GAAW,EAAO,OAAS,KAAe,IAErD,QAAQ,AAAC,GAAW,YACJ,EAAO,EAAO,IAEtC,MAAM,OAAN,cAAY,aAAc,KACf,GACJ,MAAM,OAAN,cAAY,aAAc,MACrB,QAMJ,MACR,MACF,IAIZ,YAAwC,EAAqB,EAAQ,UAC/D,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,kBAEG,EAAM,KAAK,GAAQ,CAC5C,CACE,KAAMgB,GACN,QAAS,GACP,MAAO,EAAM,YAAY,KAAK,eAC3B,EAAO,cAKV,YAAY,KAAK,cAAgB,QACjC,GAAkB,EAAM,QAAQ,WAEpB,MACR,KACJ,QAAU,GAapB,YACE,EACA,EAAoB,KACpB,EAMI,GACJ,EAAwC,KACxC,kBACM,CACJ,eAAe,GACf,WAAW,GACX,WAAW,KACX,qBAAqB,IACnB,KAEA,GAAoB,UAElB,GAAwB,GAE1B,EAAM,kBAEN,iBAAuB,GAAI,MACvB,GAAQ,EAAsB,MAC9B,EAAQ,EAAM,KAAK,MAErB,GAAM,EAAM,YAAY,KAAK,iBAAmB,EAAI,MAChD,GAAc,EAAM,QAAQ,UAAU,AAAC,GAAM,EAAE,KAAc,MAC/D,GAAiB,MACjB,IAAgB,OACR,EAAM,QAAQ,MACtB,EACA,EAAW,EAAc,EAAc,GAGrC,EAAQ,OAAS,IACb,YAAY,KAAK,eACrB,KAAM,QAAQ,EAAW,EAAc,EAAI,KAA3C,cAAyD,KAErD,YAAY,KAAK,eAAiB,QAGZ,EAAO,GAEjC,GAAoB,MAChB,CAAE,OAAM,MAAO,GAAY,EAAM,QAAQ,GACzC,EAAWxE,GAAQ,GAAO,KAAK,GACjC,MAAS,OAAT,cAAe,aAAc,MACJ,EAAU,CAAC,CAAE,OAAM,eAGjC,CAAE,MAAO,EAAU,iBAKhC,YAAY,KAAK,eAAiB,QACV,GAG5B,MAAM,OAAN,cAAY,aAAc,KACf,GACJ,MAAM,OAAN,cAAY,aAAc,MACrB,GAGZ,OACQ,MACF,OAGR,QACK,GAIX,YAA+B,EAAqB,EAAQ,IACpC,EAAO,EAAO,IAGtC,YAAqC,EAAqB,EAAQ,YAC1D,GAAU,GAAoB,EAAM,UAAW,EAAM,SAEvD,GAAW,EAAQ,OAAS,GAAK,MAAM,QAAQ,EAAO,SAAU,MAC5D,GACJ,MAAQ,GAAG,QAAQ,KAAK,AAAC,GAAM,EAAE,OAASyE,MAA1C,cACI,QAAS,YAEJ,KAAY,GAAS,MACxB,GAAU,EAAO,QAAQ,IAAI,AAAC,GAC9B,EAAO,OAASC,GACX,OACF,GADE,CAEL,QAAS,OAAK,EAAO,SAAZ,CAAqB,iBAG3B,MAGkB,EAAU,OAG/B,GAGZ,YAAgC,EAAqB,EAAQ,cACrD,CAAE,KAAM,EAAQ,GAAI,GAAS,EAAO,QACpC,EAAQ,GAAS,EAAO,CAAE,SAAQ,YAEpC,MAEA,KAAM,iBAAN,cAAsB,GAAI,MACtB,GAAQ,KAAM,iBAAN,cAAsB,QAC1B,CAAC,EAAM,KAAK,WAEZ,GAAoB,EAAM,UAAW,EAAM,eAG5C,KAAY,MACM,EAAU,CACnC,CACE,KAAMD,GACN,QAAS,CACP,CACE,GAAI,IACJ,KAAM,EAAM,GACZ,GAAI,EAAM,WAOV,GAGZ,YAAmC,EAAqB,EAAQ,MACxD,CAAE,KAAI,cAAe,EAAO,QAC5B,EAAgB,EAAM,KAAK,UAC/B,AAAC,GAAa,EAAS,KAAO,GAE1B,EAAuB,EAAM,KAAK,GAAe,QAAQ,KAC7D,AAAC,GAAW,EAAO,OAASA,IAE1B,IACE,EAAqB,MAAM,SAAW,KAEtC,EAAM,KAAK,GACX,EAAqB,OAGF,MAAQ,EAAqB,MAAM,OACtD,AAAC,GAAS,EAAK,KAAO,MAEM,EAAM,KAAK,MC9X/C,YAA4B,EAAqB,EAAS,GAClD,cAAgB,EAAQ,QCHhC,YAA2B,EAAO,MAC1B,CAAE,OAAM,UAAS,UAAW,EAAM,QAClC,EAAW,EAAK,EAAK,OAAS,GAC9B,EAAU,EAAK,MAAM,EAAG,EAAK,OAAS,GACtC,EAAY,CAAC,EAAS,GAAG,GAEzB,EAAU,EAAU,SAAW,EAC/B,EAAU,EAAK,SAAW,EAE1B,EAAS,GAAU,EAAM,MACzB,EAAU,CACd,KAAM,EACN,QAAS,EACT,OAAQ,EACR,UACA,aAGI,QAAU,EAAO,UACjB,QAAU,EAAO,UACjB,aAAe,IACf,QAAU,EAGlB,YAA2B,EAAO,MAC1B,CAAE,WAAY,EACd,EAAa,EAAQ,OAAO,UAC1B,KAAK,KAAK,EAAQ,WAClB,QAAU,IACV,QAAU,KACV,QAAU,EAAQ,OAAO,OAAS,KAEhC,EAAM,MAGlB,YAA4B,EAAO,EAAQ,GACnC,QAAU,CACd,KAAM,GACN,QAAS,EACT,OAAQ,GACR,QAAS,GACT,QAAS,ICxBb,YAAiC,EAAqB,EAAS,MACvD,CAAE,OAAM,iBAAgB,UAAW,GAAY,KACjD,iBAAgB,GAAI,MAChB,CAAE,SAAU,EACZ,EAAQ,EAAK,MACL,EAAM,UAAW,CAAE,UAAS,eACZ,EAAO,KAIzC,YAAqB,EAAqB,EAAQ,MAC1C,CAAE,SAAQ,QAAS,EACnB,CAAE,OAAM,YAAW,UAAW,EAAS,kBAAmB,EAC1D,CAAC,EAAM,GAAM,GAAS,EAAO,CAAE,SAAQ,YAEzC,iBAAgB,GAAI,MAChB,GAAQ,EAAK,EAAe,OAE5B,CAAE,IAAG,MAAO,EAAM,KAElB,EAAS,GAAU,GAEnB,EAAW,CACf,GAAI,IACJ,WAAY,EAAO,EACnB,SAAU,EAAK,EACf,OACA,KACA,SAAU,GAAc,CAAE,IAAG,EAAG,GAAM,CAAE,OAAM,KAAI,QAAS,KAC3D,KAAM,YAEF,UAAU,OAAO,KAAK,KACtB,UAAU,QAAU,GAAe,EAAM,UAAU,QAAS,CAChE,YACA,eAE4B,MACV,EAAO,IAI/B,YAAwB,EAAqB,EAAQ,IAC/C,EAAM,eAAgB,MAClB,GAAQb,GAAS,GACjB,CAAE,SAAU,EAAM,eAClB,CAAE,cAAe,EAEjB,EAAQ,EAAM,KAAK,MAErB,GAAc,OACV,UAAU,OAAS,OACpB,MACC,GACJ,EAAM,KAAK,GACX,UAAU,OAAO,UAAU,AAAC,GAAM,EAAE,KAAO,KACvC,UAAU,OAAO,OAAO,EAAW,MACX,KAKpC,YAAwB,EAAqB,EAAQ,YAC7C,GAAQA,GAAS,GACjB,EAAW,EAAO,QAAQ,QAE5B,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,eAElB,EAAgB,EAAM,KAAK,GAC3B,EAAQ,EAAM,KAAK,GAEnB,CAAE,IAAG,MAAO,EAAc,KAC1B,EAAgB,EAAc,UAAU,OAAO,UACnD,AAAC,GAAM,EAAE,KAAO,EAAS,IAGvB,IAAkB,OACd,UAAU,OAAO,GAAiB,KACtC,WAAY,EAAS,KACrB,SAAU,EAAS,IAChB,GAHmC,CAItC,SAAU,GACR,CAAE,IAAG,EAAG,GACR,CAAE,KAAM,EAAS,KAAM,GAAI,EAAS,GAAI,QAAS,UAGvB,KAKpC,YAA4C,EAAqB,EAAQ,YACjE,GAAO,EAAO,QAAQ,QACxB,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,kBACA,EAAM,KAAK,GAAmB,IAI1D,YAAsC,EAAO,EAAQ,YAC7C,GAAO,EAAO,WAChB,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,iBAClB,KAAK,GAAO,UAAU,QAAQ,cAAgB,CAAC,eCtHhC,EAAc,GAAI,MACnC,GAAwB,YACnB,KAAO,GAAM,MAEhB,GAAY,AADDpB,YAAY,YAAY,EAAI,SAClB,sBAClB,KAAY,KACT,KACR,GAAa,CACX,QAAS,EAAS,uBAMnB,eAGkB,EAAW,EAAS,IAIzC,GAAY,AADCA,YAAY,YAAY,GAChB,sBAChB,KAAY,KACT,KACR,GAAa,CACX,QAAS,EAAS,6BAOC,EAAW,EAAS,EAAK,IAI9C,GAAY,AADDA,YAAY,YAAY,GACd,kBAErB,EAAU,OAAS,EAAG,GACZ,EAAU,OAAO,AAAC,GAAM,EAAE,MAAQ,UAErC,KAAY,KACT,KACR,GAAa,CACX,QAAS,EAAS,yBAIf,EAAU,SAAW,EAAG,MAC3B,GAAW,EAAU,GACrB,EAAO,GAAa,CACxB,QAAS,EAAS,cAClB,WAEE,GAAW,EAAU,UAAU,AAAC,GAAM,EAAE,MAAQ,KAC1C,OAAO,EAAU,EAAG,SCvDrB,IAAW,WACX,GAAoB,oBACpB,GAAiB,iBACjB,GAAkB,kBAClB,GAAqB,qBACrB,GAAgB,gBAChB,GAAgB,gBAChB,GAAgB,gBAChB,GAAW,WACX,GAAY,YACZ,GAAuB,uBACvB,GAAiB,iBACjB,GAAe,eACf,GAAe,eACf,GAAsB,sBACtB,GAAY,YACZ,GAAiB,iBACjB,GAAoB,oBACpB,GAAsB,sBACtB,GAA0B,0BAE1B,GAAgB,gBAChB,GAAoB,oBACpB,GACX,kCACW,GAAyB,yBACzB,GAAwB,wBACxB,GAAe,eACf,GAAkB,kBAClB,GACX,mCACW,GAAW,WACX,GAAe,eACf,GAAe,eACf,GAAkB,kBAClB,GAAkB,kBAClB,GAAmB,mBACnB,GAAqB,qBACrB,GAAsB,sBACtB,GAA6B,6BAC7B,GAAiB,iBACjB,GACX,oCACW,GAAkB,kBAClB,GAAY,YACZ,GAAe,iBACf,GAAgB,gBAChB,GAAgB,gBAChB,GAAwB,wBACxB,GAA4B,4BAC5B,GAAmB,mBACnB,GACX,2CACW,GACX,uCACW,GACX,qCACW,GAAwB,wBACxB,GACX,oCACW,GAAoB,oBACpB,GAAwB,wBACxB,GAAuB,uBACvB,GAAe,eACf,GAAmB,mBACnB,GAA6B,6BAC7B,GAAmB,mBACnB,GAAsB,sBACtB,GAA+B,+BAC/B,GAAc,cACd,GAAuB,uBACvB,GAAiB,iBACjB,GAAsB,sBACtB,GAAqB,qBACrB,GAAwB,wBACxB,GACX,oCACW,GAAsB,sBACtB,GAAwB,wBACxB,GAAe,eACf,GAAmB,mBACnB,GAAY,YACZ,GAAe,eACf,GAAc,cACd,GAAiB,iBACjB,GAAmB,mBACnB,GAA4B,4BAC5B,GAAyB,yBACzB,GAAsB,sBACtB,GAAwB,wBACxB,GAA4B,4BAC5B,GAA2B,2BAC3B,GAAoB,oBACpB,GAAe,eACf,GAAkB,kBAClB,GAA2B,2BAC3B,GAAkB,kBAClB,GAA+B,+BAC/B,GAA+B,+BAC/B,GAA8B,8BAC9B,GAAwB,wBACxB,GAAgB,gBAChB,GAA2B,2BAC3B,GAA0B,0BAC1B,GAAmB,mBACnB,GAAc,cACd,GAAiB,iBACjB,GAAkB,kBAClB,GAAuB,uBACvB,GAAsB,sBACtB,GAA2B,2BAC3B,GAAgC,gCAChC,GAAqB,qBACrB,GAAwB,wBACxB,GAAyB,yBACzB,GAA4B,4BAC5B,GAA4B,4BAC5B,GAAoB,oBACpB,GAAyB,yBACzB,GAAwB,wBACxB,GAA8B,8BAC9B,GAA6B,6BAC7B,GACX,4CACW,GACX,oCACW,GAAe,eCpH5B,YAAsB,EAAqB,EAAoB,GACvD,UAAY,EAGpB,YAAmB,EAAqB,EAAoB,GACpD,WAAW,MAAQ,EAAM,WAAW,MAAM,OAAO,EAAO,SACxD,WAAW,MAAQ,EAAM,WAAW,MAAM,OAAO,EAAO,OAGhE,YACE,EACA,EAOA,MACM,CAAE,UAAS,YAAW,eAAc,cAAe,GAAQ,CAC/D,QAAS,GACT,UAAW,GACX,aAAc,GACd,iBAAkB,GAClB,eAAgB,OAER,EAAO,KACX,KAAO,IACP,UAAYmC,GAAyB,GAEvC,CAAC,GAAgB,OAAO,KAAK,GAAc,SAAW,IAClD,aAAe,GAAqB,GAAI,CAC5C,UAAW,OAKP,aACJ,GAA+C,GAMrD,YACE,EACiB,OACV,QACF,GADE,CAEL,OAAQ,EAAa,OAAO,IAAI,AAAC,GAAgB,IAC3C,MAAO,GAAY,eAAkB,SAAU,IAC7C,GAAmB,MACnB,EAAY,cAAc,OAAS,EAAG,MAClC,GACJ,EAAY,cAAc,WAAW,KAAM,IACvC,EAAQ,OAAO,KACd,KAAK,KAEF,cAAgB,QAEvB,OAKb,YAAwB,EAAqB,EAAM,MAC3C,GAAmB,CACvB,cAAe,MAGX,CAAE,gBAAgB,MAAS,GAAQ,EAErC,KAC8B,EAAO,CACrC,MAAO,OAGuB,EAAO,CAAE,MAAO,eAIpD,YAAkB,EAAqB,EAAQ,UACrC,EAAO,EAAO,cAChB,GAAc,MAAO,UAAP,cAAgB,cAAe,MACtC,EAAO,CAAE,IAAK,kBAAa,YAAa,QACtC,EAAO,EAAO,WACvB,UAAY,GAGpB,YAAqB,EAAqB,EAAS,MAC3C,CAAE,SAAU,EACZ,EAAU,GAAQ,EAAO,EAAM,qBAC1B,KAAY,KACf,KAAK,KAAK,MAGL,KAEP,UAAY,GAGpB,YAAuB,EAAqB,EAAS,MAC7C,CAAE,SAAU,EACZ,EAAU,GAAU,EAAO,EAAM,qBAC5B,KAAY,KACf,KAAK,KAAK,MAEL,MACmB,EAAO,CAAE,MAAO,iBAE1C,UAAY,GAGpB,YAA4B,EAAqB,EAAQ,YACjD,GAAQ,QAEN,EAAO,EAAO,cAChB,GAAc,MAAO,UAAP,cAAgB,cAAe,aACtC,EAAO,CAAE,IAAK,kBAAa,YAAa,QACtC,EAAO,KAEhB,MAAQ,EAAM,QACd,OAAS,EAAM,SACf,UAAY,KACZ,WAAa,GACZ,EAGT,YAA2B,EAAqB,EAAS,MACjD,CAAE,SAAU,SACT,KAAQ,MACY,EAAM,UAAW,EAAK,OAAO,cAEpD,UAAY,GAGpB,YAA2B,EAAqB,EAAQ,MAChD,CAAE,OAAM,cAAe,EAAO,UAC9B,KAAO,EAAM,KAAK,OAAO,MACrB,EAAO,MAEJ,MACmB,EAAO,CAAE,MAAO,iBAE1C,UAAY,GAGpB,YAA4B,EAAqB,EAAQ,MACjD,GAAQ,eAEN,EAAO,EAAO,YACT,MACmB,EAAO,CAAE,MAAO,iBAC1C,UAAY,KACZ,MAAQ,EAAM,QACd,OAAS,EAAM,SACf,WAAa,GAEZ,EC9JT,YAA4B,EAAqB,EAAS,MAClD,GAAU,EAAM,UAAU,SAAW,KAChB,EAAM,UAAW,QAMtC,GAAW,EAAM,UAAU,IAAM,KAEnC,GAAW,MACY,EAAO,EAAS,IAAK,GAIlD,YAA4B,EAAqB,EAAS,EAAK,IAClC,EAAM,UAAW,EAAS,QAK/C,GAAQ,EAAM,UAAU,UAAU,AAAC,GAAa,EAAS,MAAQ,MAGrE,EACA,EACA,IAAU,GAAK,EAAM,UAAU,GAAS,EAAM,UAAU,IAAM,MAIlE,YAA2B,EAAqB,EAAqB,CAC/D,EAAM,gBAAkB,EAAe,UACvB,EAAO,CAAE,QAAS,CAAE,iBAAgB,UAAW,QAE/D,EAAM,gBAAkB,EAAe,UACxB,EAAO,CAAE,QAAS,CAAE,iBAAgB,SAAU,QAInE,YAA+B,EAAqB,EAAQ,MACpD,CAAE,MAAK,kBAAmB,EAAO,WAErB,EAAO,QAEnB,GAAgB,EAAM,UAAU,UACpC,AAAC,GAAa,EAAS,MAAQ,KAE3B,UAAU,OAAO,EAAe,MAKb,EAAO,EAAK,EAAM,UAAU,IAAM,MAG7D,YAA2C,EAAqB,EAAQ,MAChE,CAAE,OAAM,WAAY,EAAO,WAC7B,CAAC,IACG,UAAY,OACb,MACC,GAAQ9C,GAAS,GAAO,EAAM,WAAW,gBACpC,KAAY,IAAgB,EAAM,EAAS,KAC9C,KAAK,KAAK,KACV,kBAAkB,GAAgB,EAAS,KAAK,UAAY,CAChE,GAAI,EAAS,GACb,MAAO,EAAM,KAAK,OAAS,KAGzB,WAAW,MAAM,KAAK,KAExB,YAAY,KAAK,qBACV,KACP,UAAY,GCtEpB,YAAiB,EAAqB,EAAkB,YAChD,GAAQ+B,GAAS,MACnB,MAAM,iBAAN,cAAsB,KAAM,EAAO,MAC/B,CAAE,SAAU,EAAM,eAClB,EAAS,GACT,EAAS,EAAiB,EAAI,EAC9B,EAAO,EAAiB,EAAI,EAC5B,CAAC,EAAM,GAAM,GAAS,EAAO,CAAE,SAAQ,SACvC,EAAgB,GAAW,EAAM,KAAK,GAAO,KAAgB,CACjE,OACA,OAGI,EAAS,GAAU,EAAM,KAAK,OAEhC,EAAe,MACX,GAAa,CACjB,GAAI,IACJ,UAAW,EAAc,EAAI,EAC7B,EAAG,EAAc,EACjB,EAAG,EAAc,EACjB,MAAO,GAER,EAAM,KAAK,GAAmB,MAAM,OAAO,KAAK,KAKvD,YAAkB,EAAqB,EAAQ,MACvC,GAAQA,GAAS,MAEnB,EAAM,eAAgB,MAClB,CAAE,SAAU,EAAM,eAClB,EAAgB,EAAM,KAAK,GAE3B,CAAE,SAAQ,QAAS,EACnB,CAAC,EAAM,GAAM,GAAS,EAAO,CAAE,SAAQ,YAEzC,IAAS,EAAI,MACT,GAAO,GAAW,EAAc,KAAM,CAAE,OAAM,OAE9C,EAAS,GAAU,EAAM,KAAK,OAEhC,GAAQ,CAAC,EAAc,MAAM,OAAO,KAAK,AAAC,GAAM,EAAE,IAAM,EAAK,GAAI,MAC7D,GAAgB,CACpB,GAAI,IACJ,UAAW,EAAK,EAAI,EACpB,EAAG,EAAK,EACR,EAAG,EAAK,EACR,MAAO,GAER,EAAM,KAAK,GAAmB,MAAM,OAAO,KAAK,MAMzD,YAAoB,EAAqB,EAAU,IAC7C,EAAM,eAAgB,MAClB,CAAE,SAAU,EAAM,eAClB,EAAQA,GAAS,MAEnB,GAAY,KACb,EAAM,KAAK,GAAmB,MAAM,OAAS,OACzC,MACC,GAAa,EAAM,KAAK,GAAmB,MAAM,OAAO,UAC5D,AAAC,GAAM,EAAE,KAAO,EAAS,IAE1B,EAAM,KAAK,GAAmB,MAAM,OAAO,OAAO,EAAW,KAKpE,YAA+B,EAAqB,EAAY,UAC1D,KAAM,iBAAN,cAAsB,GAAI,GACtB,YAAY,aAAe,EAAQ,KAAK,KACxC,YAAY,oBAAsB,UAClC,CAAE,SAAU,EAAM,eAClB,EAAQ,EAAM,KAAK,GAEnB,CAAC,EAAM,GAAM,EAAM,QACnB,EAAkB,GAAkB,EAAM,KAAK,EAAG,GAClD,EAAgB,GAAkB,EAAM,KAAK,EAAG,GAEhD,EAAQ,GAAgB,EAAM,KAAK,GAAmB,OACvD,GADuD,CAE1D,kBACA,qBAGI,MAAM,OAAS,EAAM,MAAM,OAAO,OAAO,gBC1Gd,EAAuB,MACpD,GAAW,IAAI,WAAW,GAE1B,EAAM,AADK,IAAI,WAAW,GACT,EAAW,KAE9B,GAAc,QACX,GAAS,KACA,OAAO,aAAc,EAAQ,EAAO,GAAY,IACtD,KAAK,MAAM,EAAQ,GAAO,QAE7B,MCFG,KAAA,aACD,mBACC,sBAEA,IAAA,eACC,sBACA,iBACL,YACA,kBAoCR,YACE,EACA,EACA,EACA,EACA,MACM,GAAM,GAER,GAAa,EAAgB,GAAS,QAAQ,aAAa,uBAC/C,GAAS,QAAQ,QAAQ,GAAO,IAChC,GAAS,QAAQ,cAC1B,cAYP,EACA,EAC6C,MACvC,CAAE,OAAM,KAAI,WAAY,QACvB,GAAQ,OACb,CAAC,EAAK,IAAU,IAEZ,GAAa,IACb,EAAM,KAAK,UAAY,GACvB,CAAC,EAAM,KAAK,MACZ,MACM,GAAQ,GAAY,EAAO,CAAE,OAAM,SACrC,KAAO,EAAM,WACb,OAAO,KAAK,GAAE,IAAK,EAAM,IAAO,UAE/B,IAET,CAAE,OAAQ,GAAI,IAAK,IAIvB,YAAc,EAAkC,EAAiB,CAC3D,EAAgB,KAAa,WACf,GAAW,CACzB,QAAS,CACP,IAAK,IACL,KAAM,KACN,QAAS,GACT,YAAa,GAEf,OAAQ,iBAMZ,EACA,EACA,EACA,EACA,GACgB,GAAS,QAAQ,QAAQ,GAAW,SAAW,IAE/C,GAAS,OAAS,GAChC,EACA,eAKF,EACA,EACA,CAAE,QAAS,EAAc,QACzB,IACK,EAAiB,KACN,GAAS,QAAQ,KAAO,IACxB,GAAS,QAAQ,QAAU,OAAO,OAChD,GACA,OAAY,CAAC,EAAK,IAAe,MAC3B,GAAO,KAAK,gBACX,GAAK,UACR,EAAM,SAAW,EACd,GACN,SAEG,CAAE,QAAS,GAAe,EAAgB,GAAS,WAErD,GAAO,OAAO,QAAQ,EAAgB,GAAS,QAAQ,OACzD,CAAC,EAAU,CAAC,EAAY,QACb,GAAc,OAAO,KAAK,GAAc,OAAO,CAAC,EAAK,IAAQ,MAC9D,GAAS,EAAa,GAAK,cAC7B,GAAQ,OACN,GAAU,EAAQ,IAEjB,GACN,IACI,GAET,MAGK,OAAO,QAAQ,GAAM,OAAO,CAAC,EAAK,OACnC,EAAQ,IAAM,OAAO,KAAK,GAAY,OAAO,CAAC,EAAK,IAAQ,MACvD,GAAY,EAAW,GAAK,OAAS,mBACvC,GAAO,EACP,CACE,OAAQ,EACR,MAAOgB,GACL,EACA,EAAK,EAAQ,IACb,EAAW,GAAK,UAGpB,OAAK,EAAQ,GAAG,IAAhB,CAAsB,OAAQ,IAE3B,GACN,IAEI,GACN,MACa,GAAS,OAAS,EAGpC,YAAsB,EAAK,EAAS,OAC3B,QAAO,KAAK,GAAS,OAAO,CAAC,EAAK,IACnC,GAAQ,GAAK,OAAS,cACpB,GAAO,KACT,OAAQ,GACL,GAFM,CAGT,MAAOA,GAAU,EAAS,EAAK,EAAQ,GAAK,YAIzC,GACN,IAGL,YAA4B,EAAkC,EAAiB,MACvE,CAAE,WAAY,EAAgB,GAAS,cAEhC,QAAO,QAAQ,EAAgB,GAAS,QAAQ,OAC3D,CAAC,EAAK,IAAY,MACV,CAAC,EAAI,GAAO,WACd,GAAM,OACL,GACA,GAAa,EAAK,IAEhB,GAET,gBAOF,EACA,EACA,EACA,MACM,CAAE,OAAM,KAAI,UAAS,YAAY,MAAS,KAC3C,EAAiB,QAChB,GAAS,GACb,EACA,EACA,CACE,KAAM,SACN,SAAU,WACV,OACA,KACA,MAAO,GAET,GAGI,CAAE,OAAQ,EAAgB,GAAS,QAEnC,CAAE,OAAQ,EAAQ,IAAK,GAAe,GAAmB,EAAS,CACtE,OACA,KACA,YAGI,EAAkBC,EAAU,EAAiB,GAAG,WAAkB,OAEpE,GAAO,EAAO,OAAO,CAAC,EAAK,IAAQ,MAC/B,GAAS,EAAa,EAAI,EAAM,EAAa,WAE/C,EAAI,KAAO,OACV,EAAgB,EAAI,MADV,EAEZ,GAAS,KACR,UACG,GAFK,CAGR,SAAU,KAAK,IAAI,EAAI,UAAY,MAGhC,GACN,MAEa,GAAS,OAAS,IAClB,GAAS,OAAS,GAChC,EACA,eAKF,EACA,EACA,EACA,MACM,GAAS,OAAO,QAAQ,EAAgB,GAAS,QAAQ,OAC7D,CAAC,EAAK,WAEG,GAAK,GAAG,GACX,EAAK,IAAM,OAAO,KAAK,EAAK,IAAI,OAAS,MACvC,EAAK,IAAM,EAAK,IACb,GAIX,IAIA,IAAgB,GAAS,QAAQ,QAD1B,KAAS,GAChB,EADqC,IACrC,EADqC,CAA9B,QAKL,AAFmB,OAAO,KAAK,EAAgB,GAAS,QAAQ,SAEjD,SAAW,MACZ,GAAS,QAAQ,YAAc,KAGjC,GAAS,QAAQ,QAAU,IAC3B,GAAS,OAAS,IAClB,GAAS,OAAS,GAChC,EACA,GAIJ,YAAmB,EAAkB,EAAmB,EAAU,GAAI,MAC9D,GAAQ,EAAQ,MAAM,sBAEtB,EAAsB,YAEjB,KAAO,GAAO,MACjB,GAAS,EAAI,OACf,EAAQ,MACA,KAAK,QAIb,GAAS,EAAU,IAAI,AAAC,GAC5B,EAAK,GAAO,EAAK,GAAK,EAAQ,GAAK,UAAY,SAG7C,MACA,GACO,GAAI,UAAS,GAAG,EAAW,UAAU,KAAW,GAAG,SACrD,WAEC,MAAM,KACL,GAAI,OAAM,qBAAqB,cAEnC,eAIP,EACA,EACA,IACI,iBAAkB,GAAU,MACxB,CACJ,SACA,QAAS,CAAE,YACT,EAAgB,MAEhB,GAAS,YAEF,KAAU,MACT,GAAG,QAEL;AAAA,WAEC,KAAY,QAAO,OAAO,GAAS,UACjC,KAAU,MACT,GAAG,EAAS,GAAQ,EAAQ,GAAQ,gBAEtC;AAAA,QAEL,SAEF,MCtVT,YAAwB,EAAqB,EAAQ,MAC7C,CAAC,EAAM,GAAM,GAAS,EAAO,MACH,EAAM,KAAM,EAAM,gBAAiB,CACjE,OACA,KACA,QAAS,EAAM,YAInB,YAAmC,EAAqB,EAAQ,MACxD,CAAE,UAAW,KAGjB,EAAM,gBACN,EACA,EAAM,WAGV,YAAkC,EAAqB,EAAQ,MACvD,CAAE,YAAW,OAAM,MAAO,EAAO,WACP,EAAM,KAAM,EAAM,gBAAiB,CACjE,OACA,KACA,QAAS,EAAM,UACf,cAGJ,YAA0B,EAAqB,EAAQ,MAC/C,GAAO,EAAO,WAEO,EAAM,gBAAiB,EAAM,UAAW,GAErE,YAA4B,EAAqB,EAAQ,MACjD,CAAE,YAAW,YAAa,EAAO,WAGrC,EAAM,gBACN,EAAM,UACN,EACA,GCzBJ,YAA0B,EAAyB,OAE/C,IAAM,QAAQ,oBAAsB,IACpC,EAAM,QAAQ,oBAAsB,IAOxC,YAAoB,EAAO,EAAM,CAC3B,EAAM,KAAK,YAAc,EAC1B,GAAkB,QAAQ,kBAAoB,EAC9C,EAAkB,QAAQ,kBAAoB,EAC9C,EAAkB,QAAQ,UAAY,GAAiB,IAEvD,EAAkB,QAAQ,UAAY,EAI3C,YAAkC,EAAqB,EAAQ,IACzD,MAAM,QAAQ,EAAO,IAAK,MACtB,GAAM,EAAO,MACf,EAAI,SAAW,WACN,KAAS,GAAM,QACb,EAAO,kBAGT,KAAS,GAAM,KACpB,EAAI,SAAS,EAAM,OACV,EAAO,OAEP,EAAO,QAInB,MACC,GAAQ,EAAM,KAAK,UAAU,AAAC,GAAM,EAAE,KAAO,EAAO,IACzD,EAAM,KAAK,GAA6B,QAAQ,EAAO,KAAO,EAAO,MAEjE,EAAM,KAAK,GAA6B,KAAK,YAAc,GAC7D,GAAM,KAAK,GAAmB,QAAQ,UAAY,GACjD,EAAM,KAAK,MAMnB,YAA4C,EAAqB,EAAM,cAC5D,KAAS,GAAM,KAEpB,MAAM,OAAN,cAAY,aAAc,GAC1B,EAAK,KAAK,AAAC,GAAe,EAAW,KAAO,EAAM,IAEjD,EAAkB,QAAQ,sBAAwB,GAElD,EAAkB,QAAQ,sBAAwB,GAKzD,YAAoC,EAAqB,EAAgB,IACnE,GAAgB,QAEd,GAAwB,EAAM,kBAChC,EAAgB,MACZ,GAAW,EAAM,KAAK,UAAU,AAAC,GAAM,EAAE,KAAO,EAAe,IAC/D,EAAW,EAAM,KAAK,UAC1B,AAAC,UAAM,SAAE,KAAO,MAAM,iBAAN,cAAsB,SAEpC,IAAa,GAAI,MACb,GAAoB,EAAM,KAAK,KAEnB,QAAQ,UAAY,GAElC,IAAa,KAEZ,EAAM,KAAK,GAAgC,KAAK,QACjD,EAAkB,KAAK,QAIT,EAAkB,KAAK,OAAS,KAGnC,OAAK,GAAL,CAAqB,MAAO,MACvC,eAAiB,IACjB,kBAAkB,EAAM,WAAa,MACtC,IACD,EAAuB,MACnB,GAAQ,EAAM,KAAK,UACvB,AAAC,GAAM,EAAE,KAAO,EAAsB,MAExB,EAAM,KAAK,GAAO,KAAK,aAEvB,KAEZ,eAAiB,OACjB,kBAAkB,EAAM,WAAa,KAGzC,EAAQ,EAAM,YAAY,cAAc,aACpC,YAAY,aAAe,EAAQ,KAAK,KACxC,YAAY,KAAK,cAAgB,KACjC,YAAY,oBAAsB,OAClC,SAAW,MAOf,EAAM,YAAY,KAAK,kBACH,EAAO,KAAM,GAAI,GAC9B,OACC,MACF,IAIZ,YAA+B,EAAqB,CAAE,KAAI,WAAW,MAE7D,GAAQ,AADAjB,GAAS,GACH,KAAK,UAAU,AAAC,GAAM,EAAE,KAAO,GAC/C,IAAU,OACN,KAAK,GAAO,QAAU,GAGhC,YAAmC,EAAqB,CAAE,KAAI,QAAO,OAAO,MAEpE,GAAQ,AADAA,GAAS,GACH,KAAK,UAAU,AAAC,GAAM,EAAE,KAAO,GAC/C,IAAU,IACX,GAAM,KAAK,GAA6B,QAAQ,GAAO,GAI5D,YAA6B,EAAqB,EAAQ,MAClD,GAAQA,GAAS,MACnB,EAAO,GAAI,MACP,GAAQ,EAAM,KAAK,UAAU,AAAC,GAAM,EAAE,KAAO,EAAO,MACpD,KAAK,OAAO,EAAO,UAEnB,KAAO,MAEF,EAAO,CAAE,IAAK,EAAM,UAAW,iBAAkB,KAEhE,YAAqC,EAAO,EAAQ,YAC5C,GAAQA,GAAS,GACjB,CAAE,WAAY,KAChB,KAAM,iBAAN,cAAsB,GAAI,MACtB,CAAE,SAAU,EAAM,sBACf,KAAK,GAAS,MACf,GAAU,GACd,EAAM,KAAK,GACX,EACA,EAAM,cAEF,KAAK,KAAK,QAGZ,GAAqB,AADJ,GAAe,WACI,EAAM,SACzC,EAAO,EAAoB,EAAM,UAAW,OACzC,MACF,IAGZ,YAA6B,EAAqB,EAAQ,YACpD,EAAM,MAAQ,EAAM,KAAK,OAAS,UAC3B,KAAS,GAAM,QAEpB,MAAM,OAAN,cAAY,aAAc,GAC1B,EAAM,KAAK,UAAY,EAAM,WAC7B,CAAC,MAAM,OAAN,cAAY,OACb,MACM,GAAQ,GAAkB,EAAO,KAAK,EAAO,aACvC,EAAO,CACjB,CACE,KAAMG,GACN,QAAS,SAOT,MACF,GAGV,YACE,EACA,EACA,MACM,GAAoB,EAAO,QAAQ,gBAEnC,EAAW,GACf,EACA,EAAM,cAEF,KAAK,KAAK,MACH,MACL,EAAO,CAAE,MAAO,GAAK,WAAY,EAAS,UC5NvC,IAAO,OACP,GAAO,OAEP,GAAQ,QCsDR,GAAkB,MAC7B,WAAY,GACZ,KAAM,GACN,SAAU,GACV,SAAU,KACV,QAAS,GACT,QAAS,GACT,SAAU,GACV,SAAU,GACV,aAAc,CACZ,QAAS,GACT,QAAS,GACT,SAAU,GACV,SAAU,GACV,aAAc,IAEhB,kBAAmB,GACnB,UAAW,GACX,MAAO,EACP,OAAQ,EACR,OAAQ,CACN,IAAK,GACL,MAAO,GACP,OAAQ,GACR,KAAM,GAER,eAAgB,KAChB,KAAM,MACN,UAAW,GACX,cAAe,CACb,MAAO,SACP,cAAe,IAEjB,QAAS,CACP,KAAM,GACN,QAAS,KACT,OAAQ,GACR,QAAS,GACT,QAAS,IAEX,UAAW,GACX,gBAAiB,GACjB,cAAe,EAAe,MAC9B,kBAAmB,GACnB,gBAAiB,GACjB,aAAc,GACd,aAAc,GACd,KAAM,CACJ,QAAS,IAEX,cAAe,GACf,YAAa,CACX,aAAc,EAAQ,KAAK,GAC3B,oBAAqB,KACrB,KAAM,CACJ,cAAe,GACf,MAAO,CAAE,MAAO,EAAG,MAAO,GAC1B,iBAAkB,EAClB,eAAgB,KAChB,UAAW,KACX,sBAAuB,GACvB,oBAAqB,GACrB,WAAY,GACZ,gBAAiB,IAGrB,WAAY,CAAE,KAAM,GAAI,KAAM,MAGnB,GAAe,iBAuPF,EAAqB,MACvC,GAAe,IACf,EAAe,GAAqB,GAAI,CAC5C,UAAW,WAGN,QACF,GADE,CAEL,eACA,eACA,QAAS,iBAIsB,EAAU,MACrC,GAAyB,CAAE,KAAM,GAAI,KAAM,UAE1C,AAAC,IAAW,QACT,EAAO,UACRe,IAAgB,IACf,EAAO,QAAS,MACU,MAAQ,EAAO,SAAnC,YAAoB,EAAR,IAAQ,EAAR,CAAZ,YACHC,GAAwB,EAAS,GAAY,KAAK,AAAC,GAAS,GACxD,QAAU,KAAE,QAAS,GAAS,GAApB,CAAyB,iBACjC,eAMVC,IAAsB,MACnB,GAAa,KAAK,MAAM,EAAO,MAAM,GAAG,OAAO,YAC/C,EAAO,GAAQ,GAChBD,GAAwB,EAAK,QAAS,GAAY,KACrD,AAAC,GAAY,GACJ,QAAU,OAAO,OAAO,EAAM,CAAE,UAAS,iBACvC,eAKVE,IAAqB,QACf,KAAW,GAAO,MACpBC,GACH,CAAE,QAAS,CAAE,KAAM,EAAQ,OAC3B,EAAQ,OACR,GACA,KAAK,AAAC,GAAS,GACR,QAAU,CAAE,OAAM,gBAChB,eAKVC,IAA0B,CACxB,GAAiB,EAAO,KAAM,GAAY,KAAK,AAAC,GAAS,GACrD,QAAU,OAAO,OAAO,EAAM,CAAE,iBAC9B,eAIRC,IAAuB,MACpB,CACJ,IAAK,CAAE,WACP,WACE,EAAO,QACN,GAAe,GAAS,KAC3B,AAAC,GAAS,GACD,QAAU,CAAE,OAAM,aAChB,IAEX,IAAM,GACK,qBAQN,WAAa,IACX,WAOjB,YAA8B,EAAqB,EAAQ,QACpD,CAACJ,GAAsBG,IAA0B,SAAS,EAAO,UAC9D,WAAa,EAAO,MAGpB,EAAO,UACRL,UACIO,IAAqB,EAAO,OAChCC,UACIC,IAAyB,EAAO,EAAO,eAC3CP,UACIQ,IAA+B,EAAO,OAC1CC,UACIC,IAA0B,EAAO,OACrCC,UACIC,IAAwB,EAAO,OACnCC,UACIC,IAA8B,EAAO,OACzCb,UACIc,IAA8B,EAAO,OACzCZ,UACIa,IAA+B,EAAO,OAC1CC,UACIC,IAAqB,EAAO,EAAO,sBACvCC,UACIC,IAAsB,EAAO,OAEjCC,UACIC,IAAwB,EAAO,EAAO,UAE1CC,UACIC,IAA6B,EAAO,OACxCC,UACIC,IAAgC,EAAO,OAC3CC,UACIC,IAAgC,EAAO,OAC3CC,UACID,IAAgC,EAAO,OAC3CE,UACIC,IAAyC,EAAO,EAAO,WAC3DC,UACIC,IAA8C,EAAO,OACzDC,UACIC,IAAoD,EAAO,OAE/DC,UACIC,IAAgC,EAAO,EAAO,YAElDC,UACIC,IAAyB,EAAO,EAAO,aAE3CC,UACIC,IAAyB,EAAO,EAAO,aAE3CC,UACI,IAAS,EAAO,EAAO,WAE3BC,UACI,IAAoB,EAAO,EAAO,MAAO,EAAO,YAEpDC,UACIC,IAA6B,EAAO,OACxCC,UACIC,IAA+B,OACnCC,UACIC,IACL,EACA,EAAO,yBAENC,UACIC,IAAqB,EAAO,OAChCC,UACIC,IAAuC,EAAO,EAAO,gBACzDC,UACIC,IAAsC,EAAO,EAAO,WACxDC,UACIC,IAA8B,OAClCC,UACIC,IACL,EACA,EAAO,WAENC,UACIC,IAA8C,OAClDC,UACIC,IAAmC,OACvCC,UACIC,IAA8C,EAAO,EAAO,WAChEC,UACIC,IAA4B,EAAO,EAAO,GAAI,EAAO,aACzDC,UACIC,IAA4B,EAAO,OACvCC,UACIC,IAAmC,EAAO,OAC9CC,UACIC,IAAqC,EAAO,OAChDC,UACIC,IAA2C,EAAO,OACtDC,UACIC,IAAsC,EAAO,OACjDC,UACIC,IAAyC,EAAO,OAEpDC,UACIC,IAA0C,EAAO,OAErDC,UACIC,IACL,EACA,EAAO,UAENC,UACIC,IAA4C,EAAO,EAAO,UAC9DC,UACIC,IAA2C,EAAO,EAAO,UAC7DC,UACIC,IAAuC,EAAO,OAClDC,UACIC,IAAqC,EAAO,OAChDC,UACIC,IAAqC,EAAO,OAChDC,UACIC,IAA6C,EAAO,OACxDC,UACIC,IACL,EACA,OAGCC,UACIC,IAAiD,OACrDC,UACIC,IAAwB,EAAO,OACnCC,UACIC,IAAsC,OAC1CC,UACIC,IAA+B,OAEnCC,UACIC,IAA6C,OAEjDC,UACIC,IAAmC,EAAO,EAAO,aAErDC,UACIC,IACL,EACA,EAAO,QACP,EAAO,SAGNC,UACIC,IAAsC,EAAO,OAEjD7G,UACI8G,IAAkD,EAAO,OAE7DC,UACIC,IAAgC,EAAO,EAAO,aAElDC,UACIC,IAAuC,EAAO,EAAO,aAEzDC,UACIC,IAAyC,EAAO,EAAO,aAE3DC,UACIC,IAA0C,EAAO,EAAO,aAE5DC,UACIC,IAA4C,EAAO,EAAO,aAE9DC,UACIC,IAA4B,EAAO,OAEvCC,UACIC,IAA2C,EAAO,EAAO,cAC7DC,UACIC,IAAuC,OAE3CC,UACIC,IAAmC,EAAO,EAAO,aAErDC,UACIC,IAAsC,EAAO,EAAO,aACxDC,UACIC,IAAsC,EAAO,OACjDC,UACIC,IAAwC,EAAO,EAAO,aAC1DC,UACIC,IAA6B,EAAO,OACxCC,UACIC,IAAgC,EAAO,OAC3CC,UACIC,IAAiC,EAAO,OAC5CC,UACIC,IAAgC,EAAO,OAC3CC,UACIC,IAAmC,EAAO,EAAO,WACrDC,UACIC,IAAwC,EAAO,OACnDC,UACIC,IAA6C,EAAO,OACxDC,UACIC,IAA2C,EAAO,OACtDC,UACIC,IAA0C,EAAO,OACrDC,UACIC,IAAoC,EAAO,OAC/CC,UACIC,IAAgC,EAAO,OAC3CC,UACIC,IAAkC,EAAO,OAC7CC,UACIC,IAAoC,EAAO,OAC/CC,UACIC,IAA0C,OAC9CC,UACIC,IAAwC,OAC5CC,UACIC,IAA+C,OACnDC,UACIC,IAA+B,OAEnCC,UACIC,IAAgC,EAAO,EAAO,SAClDC,UACIC,IAAmC,EAAO,EAAO,UACrDC,UACIC,IAAsC,EAAO,EAAO,QAExDC,UACIC,IAA8C,EAAO,OACzDC,UACI,IAAyB,EAAO,EAAO,aAC3CC,UACI,IAA2B,EAAO,EAAO,aAC7CC,UACIC,IAAgC,EAAO,OAC3CC,UACIC,IAA8B,EAAO,OACzCC,UACIC,IAA8B,EAAO,OACzCC,UACIC,IAAgC,EAAO,OAC3CC,UACIC,IAAuC,EAAO,OAClDC,UACIC,IAAgC,OACpCC,UACIC,IAAmC,EAAO,OAC9CC,UACIC,IAAwC,EAAO,OACnDC,UACIC,IAA8B,EAAO,OACzCC,UACIC,IAAgC,EAAO,OAC3CC,UACIC,IAA6C,OACjDC,UACIC,IAAkC,EAAO,OAE7CC,UACIC,IAAsC,EAAO,OACjDC,UACIC,IAAiD,EAAO,OAC5DC,UACIC,IAAgD,EAAO,OAC3DC,UACIC,IAAwC,EAAO,OACnDC,UACIC,IAA0C,EAAO,OAErDC,UACIC,IAAwC,EAAO,OAEnD,UACI,IAAkB,OAEtB,UACI,IAAkB,OAEtB,UACI,IAAmB,EAAO,OAE9BC,UACIC,IAAiC,EAAO,wBAOxC,IAAkBC,GAAQ,IC9uB1BC,GAAepV,wBAAqBV,IACpC+V,GAAoBD,GAAa7R,qBAEf,OACtBC,sBAAW4R,SCNPE,IAAkBtV,wBAAmB,IAErCuV,GAAmBD,GAAgB/R,qBAElB,OACrBC,sBAAW8R,gBCDgB,EAAmB,MAC/C,CAAE,OAAM,kBAAmB,UAE1B9c,mBAA2B,IAC5B,GAAQ,GAAkB,EAAe,IAEzC,EAAK,KAAK,AAAC,GAAU,EAAM,KAAO,EAAe,KAAO,EAI3D,CAAC,EAAgB,EAAM,ICd5B,aAAyB,EAIzB,KAAMgd,IAAgBxV,wBAA0ByV,IAEnCC,GAAiBF,GAAcjS,sBAEhB,OACnBC,sBAAWgS,ICLpB,KAAMvZ,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAgCf,YAAgB,CACd6d,UAAU,GACVC,YAAY,+EACZC,gBAAgB,IACF,MACRC,GAAaC,WAEdJ,GAKH9c,aAAK,IAAKoD,IAAa4Z,GAAiB,CAAEtV,QAASuV,cACjDjd,gBAAI+c,OALC,KC3CX,KAAM3Z,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,eAkCmC,OAE9Cc,UAAK,IAAKqD,aACRpD,SAAK,MAAM,6BAA6B,QAAQ,2BAC9CD,OAAG,KAAK,oBACNC,UAAM,EAAE,m6EACRA,UAAM,EAAE,sBAGZA,gDC1C8B,UAC1B,YAGGmd,IACXhW,wBAAkCiW,IAEvBC,GAAkBF,GAAezS,SCC9C,YAAiB,CAAE4S,YAAY,GAAMP,YAAYQ,QAA2B,MACpE,CAAEzY,QAAS0Y,IACX,CAACC,EAAYC,GAAmB/b,mBAAS,wBAErC,IAAM,IACVgc,GAAe,WACdL,OACOM,WAAW,IAAM,GACT,KACf,MAEE,IAAM,cACED,KAEd,CAACL,SAEEO,GAAalT,qBAAWwS,aAG3BW,8BACER,GAAaO,IACbJ,GAAc,CAACH,KACb,IAAO,QAASxY,GAAQA,EAAKzC,SAAW,EAAG,iBC5BpD,KAAMe,IAA6C,CACjDI,UAAW,CACTua,gBAAiB,WACjBjc,SAAU,WACVC,IAAK,MACLic,KAAM,MACNC,KAAM,SAIJC,GAAqC,CACzCC,EAAQF,KAAKrb,GACbub,EAAQC,YAAYxb,GACpBub,EAAQE,YAAYzb,GACpBub,EAAQG,SAAS1b,GACjBub,EAAQI,gBAAgB3b,GACxBub,EAAQK,mBAAmB5b,GAC3Bub,EAAQM,cAAc7b,GACtBub,EAAQO,OAAO9b,GACfub,EAAQQ,YAAY/b,GACpBub,EAAQS,UAAUhc,GAClBub,EAAQU,wBAAwBjc,GAChCub,EAAQW,eAAelc,GACvBub,EAAQY,wBAAwBnc,IAGrBoc,GAAa,CACxBC,EAAG,EACHC,EAAG,EACHC,GAAI,GAGAC,GAKF,CACFtY,OAAQ,EACRE,OAAQ,eAesB,CAC9BqY,YAAYL,GAAWG,GACvBG,kBAAkBF,GAClBvc,MAAO0c,EACPvd,OAAQwd,GACO,IACX,CACF3c,QACAb,SACAyd,YAAa,CAAEC,iBACblC,IACA,CAAE1W,SAAQC,OAAMC,SAAQC,OAAMP,QAASiE,qBAAWzD,OAGpD,CAACgX,GAAWyB,SAASD,IACrBhZ,IAAS,YACT,CAAC4Y,GACAA,EAAgBxY,QAAUA,EAASwY,EAAgBxY,QACnDwY,EAAgBtY,QAAUA,EAASsY,EAAgBtY,WAClCD,MAAQvG,KAAKof,KAAK7Y,EAAOD,KAAY,EACnDC,EAAOuY,EAAgBvY,KACvBA,EAAOuY,EAAgBxY,YACRC,MACjBuY,EAAgBrY,MAChBzG,KAAKof,KAAK3Y,EAAOD,KAAY,EACzBC,EAAOqY,EAAgBrY,KACvBA,EAAOqY,EAAgBtY,cAEtB,QAGDuY,GAA0B1c,IAEzB2c,GAA4Bxd,IAGnCsd,EAAgBvY,MAAQA,EAAOuY,EAAgBvY,KAC3CuY,EAAgBvY,KAChBuY,EAAgBxY,QAAUC,EAAOuY,EAAgBxY,OACjDwY,EAAgBxY,OAChBC,IAEJuY,EAAgBrY,MAAQA,EAAOqY,EAAgBrY,KAC3CqY,EAAgBrY,KAChBqY,EAAgBtY,QAAUC,EAAOqY,EAAgBtY,OACjDsY,EAAgBtY,OAChBC,OAEA4Y,GACJR,IAAcL,GAAWC,GAAKI,IAAcL,GAAWG,MAC3CrY,GAAUjE,EAClB,IAEJwc,IAAcL,GAAWC,GAAKI,IAAcL,GAAWG,GAAKrY,EAAS,OAEjEgZ,GACJT,IAAcL,GAAWE,GAAKG,IAAcL,GAAWG,MAC3CnY,GAAUhF,EAClB,WAEJqd,IAAcL,GAAWE,GAAKG,IAAcL,GAAWG,GAAKnY,EAAS,WAGnE,MAAO,OACF5D,GAAOI,WADL,CAELuc,UAAY,aAAYjZ,QAAaE,cAAmB6Y,KAAUC,KAClEE,WAAY,gCAGT,QAAc,4BAEf,EAAE,IACF,EAAE,IACF,QACA,SACA,KAAK,OACL,QAAQ,YCjIlB,KAAM5c,IAAwC,CAC5C6c,KAAM,CACJC,OAAQ,QACRC,cAAe,EACfC,eAAgB,aAChBC,YAAa,IACbL,WAAY,cAIV9B,GAAqC,CACzCC,EAAQF,KAAKrb,GACbub,EAAQmC,cAAc1d,GACtBub,EAAQK,mBAAmB5b,GAC3Bub,EAAQO,OAAO9b,GACfub,EAAQQ,YAAY/b,GACpBub,EAAQG,SAAS1b,GACjBub,EAAQM,cAAc7b,GACtBub,EAAQS,UAAUhc,GAClBub,EAAQU,wBAAwBjc,GAChCub,EAAQW,eAAelc,GACvBub,EAAQY,wBAAwBnc,IAGlC,aAA4B,MACpB,CACJZ,SACAa,QACA0d,SACAd,YAAa,CAAEC,iBACblC,OACA1b,GAAW6I,qBAAWH,SACpBgW,GAAa7V,qBAAWzD,UAG5B,CAACgX,GAAWyB,SAASD,IACrBc,EAAW9Z,OAAS,YACpB,CAAC5E,GACDA,EAASuH,EAAIxG,EAAQ0d,EAAOE,OAC5B3e,EAASwH,EAAItH,EAASue,EAAOG,QAC7B,CAAC7d,GACD,CAACb,EAEM,cAKL,MAAO,CACLge,WAAY,YACZ5b,OAAQ,YACR2b,UAAY,aAAY,CAACld,EAAQf,EAASuH,QACxC,CAACrH,EAASF,EAASwH,OAErBxH,SAAU,WACVC,IAAK,EACLic,KAAM,EACN2C,cAAe,OACfC,SAAU,UACV/d,MAAO,EAAIA,EACXb,OAAQ,EAAIA,qBAGT,MAAO,EAAIa,EAAO,OAAQ,EAAIb,sBAE/B,MAAOoB,GAAO6c,KACd,GAAIpd,EACJ,GAAG,IACH,GAAIA,EACJ,GAAIb,EAAS,GACT,2BAGJ,MAAOoB,GAAO6c,KACd,GAAG,IACH,GAAIje,EACJ,GAAIa,EAAQ,EACZ,GAAIb,GACA,uBA/BJ,yBClD+B,EAAiB,EAAc,MAChE,CAAC,EAAO,GAAYL,mBACxB,aAAa,QAAQ,IAAoB,0BAEjC,IAAM,cACD,QAAQ,EAAiB,IACrC,CAAC,EAAiB,SAEf,GAAUE,sBACd,CAAC,EAAM,EAAM,OAAS,IAChB,GAAW,KAAK,MAAM,GACtB,KACQ,EAAU,EAAK,KAEd,OAAK,GAAa,KAEtB,KAAK,UAAU,KAE1B,CAAC,UAGIlC,mBAAQ,IACN,CACL,EAAM2O,EAAU,KAAK,MAAM,GAAQ,EAAK,IAAM,KAAK,MAAM,GACzD,GAED,CAAC,EAAK,EAAS,gBAGY,EAAiB,EAAS,GAAM,MACxD,GAAW,aAAa,QAAQ,SAC/B,IAAY,EAAS,KAAK,MAAM,GAAY,cAG3B,EAAiB,EAAO,cACnC,QAAQ,EAAiB,eAGb,EAAiB,cAC7B,WAAW,eAGD,EAAQ,EAAS,EAAoB,KAAM,OAC3DA,GAAU,EAAQ,EAAS,QC7CvB,IAAmB,CAC9B,QAAS,EACT,MAAO,oBACP,QAAS,CACP,QAAS,CACP,yBAA0B,GAC1B,uBAAwB,GACxB,oBAAqB,GACrB,qBAAsB,CAAE,QAAS,KAGnC,OAAQ,CACN,aAAc,CAAE,QAAS,GAAM,KAAM,IACrC,iBAAkB,CAAE,QAAS,GAAM,KAAM,IACzC,WAAY,CAAE,QAAS,GAAM,KAAM,IACnC,eAAgB,CAAE,QAAS,GAAM,KAAM,IACvC,YAAa,CAAE,QAAS,GAAM,KAAM,IACpC,gBAAiB,CAAE,QAAS,GAAM,KAAM,IACxC,aAAc,CAAE,QAAS,GAAM,KAAM,IACrC,WAAY,CAAE,QAAS,GAAM,KAAM,IACnC,aAAc,CAAE,QAAS,GAAO,KAAM,IACtC,6BAA8B,CAAE,QAAS,GAAO,KAAM,IACtD,cAAe,CAAE,QAAS,GAAO,KAAM,IACvC,gBAAiB,CAAE,QAAS,GAAO,KAAM,MAI7C,YAAa,CACX,0BAA2B,IAE7B,WAAY,CACV,QAAS,CACP,CAAE,IAAK,KAAM,KAAM,KAAM,IAAK,OAAQ,GAAI,QAC1C,CAAE,IAAK,MAAO,KAAM,MAAO,IAAK,OAAQ,GAAI,QAC5C,CAAE,IAAK,MAAO,KAAM,MAAO,IAAK,OAAQ,GAAI,QAC5C,CAAE,IAAK,MAAO,KAAM,MAAO,IAAK,OAAQ,GAAI,QAC5C,CAAE,IAAK,OAAQ,KAAM,OAAQ,IAAK,OAAQ,GAAI,QAC9C,CAAE,IAAK,MAAO,KAAM,MAAO,IAAK,OAAQ,GAAI,SAE9C,aAAc,GACd,OAAQ,KCvCC,GAAsB,CACjC,QAAS,EACT,MAAO,qBACP,QAAS,CACP,QAAS,CACP,yBAA0B,GAC1B,uBAAwB,GACxB,oBAAqB,GACrB,qBAAsB,CAAE,OAAQ,KAGlC,OAAQ,CACN,aAAc,CAAE,QAAS,GAAM,KAAM,IACrC,iBAAkB,CAAE,OAAQ,IAC5B,WAAY,CAAE,OAAQ,IACtB,eAAgB,CAAE,QAAS,IAC3B,YAAa,CAAE,OAAQ,IACvB,gBAAiB,CAAE,OAAQ,IAC3B,aAAc,CAAE,OAAQ,IACxB,WAAY,CAAE,OAAQ,IACtB,aAAc,CAAE,OAAQ,IACxB,6BAA8B,CAAE,OAAQ,IACxC,cAAe,CAAE,OAAQ,IACzB,gBAAiB,CAAE,OAAQ,KAG7B,eAAgB,CACd,SAAU,GACV,YAAa,GACb,OAAQ,GACR,SAAU,GACV,uBAAwB,GACxB,wBAAyB,GACzB,cAAe,GACf,SAAU,GACV,aAAc,GACd,gBAAiB,GACjB,YAAa,GACb,eAAgB,GAChB,gBAAiB,GACjB,oBAAqB,GACrB,uBAAwB,GACxB,QAAS,GACT,4BAA6B,GAC7B,mBAAoB,KAGxB,YAAa,GAAM,YACnB,WAAY,GAAM,YChDP,GAAwB,CACnC,QAAS,EACT,MAAO,uBACP,QAAS,CACP,QAAS,CACP,qBAAsB,CAAE,QAAS,KAEnC,OAAQ,CACN,aAAc,CAAE,QAAS,IACzB,YAAa,CAAE,QAAS,IACxB,WAAY,CAAE,QAAS,IACvB,gBAAiB,CAAE,QAAS,GAAM,KAAM,IACxC,iBAAkB,CAAE,QAAS,IAC7B,WAAY,CAAE,QAAS,IACvB,eAAgB,CAAE,QAAS,IAC3B,gBAAiB,CAAE,QAAS,IAC5B,aAAc,CAAE,QAAS,IACzB,aAAc,CAAE,QAAS,IACzB,6BAA8B,CAAE,QAAS,IACzC,cAAe,CAAE,QAAS,MAG9B,YAAa,GAAM,YACnB,WAAY,GAAM,YCvBP,GAAuB,CAClC,QAAS,EACT,MAAO,uBACP,QAAS,CACP,QAAS,CACP,yBAA0B,IAG5B,OAAQ,CACN,WAAY,CAAE,QAAS,IACvB,aAAc,CAAE,QAAS,IACzB,6BAA8B,CAAE,QAAS,GAAM,KAAM,IACrD,aAAc,CAAE,QAAS,GAAM,KAAM,IACrC,iBAAkB,CAAE,OAAQ,IAC5B,WAAY,CAAE,OAAQ,IACtB,eAAgB,CAAE,OAAQ,IAC1B,YAAa,CAAE,OAAQ,IACvB,gBAAiB,CAAE,OAAQ,IAC3B,aAAc,CAAE,OAAQ,IACxB,cAAe,CAAE,OAAQ,IACzB,gBAAiB,CAAE,OAAQ,KAG7B,eAAgB,CACd,OAAQ,GACR,SAAU,GACV,eAAgB,GAChB,4BAA6B,GAC7B,mBAAoB,KAGxB,YAAa,GAAM,YACnB,WAAY,GAAM,YC9BpB,OAAe,CAAE,YAAU,QAAS,GAAO,aAAW,eCwCtD,KAAM,IAAwB,EAEjB,GAGR,CACH,CACE,IAAK,UACL,MAAOuS,GAAW,QAAQ,OAE5B,CACE,IAAK,YACL,MAAOA,GAAW,UAAU,OAE9B,CACE,IAAK,WACL,MAAOA,GAAW,SAAS,OAE7B,CACE,IAAK,aACL,MAAOA,GAAW,WAAW,QAIjC,YAAmC,EAA4B,QACrD,OACD,iBACIA,IAAW,aACf,kBACIA,IAAW,cACf,mBACIA,IAAW,eACf,gBACIA,IAAW,sBAEX,IAcb,YAA4B,EAAgC,OACnD,GAAM,WAAW,EAAM,UAAU,SAAW,gBAGxC,IAA4C,CACvD,QAAS,GACT,WAAY,GACZ,SAAU,IAAM,KAChB,UAAW,CACT,QAAS,UACT,KAAM,OAIV,YAAsB,EAAW,OACxB,MAAK,MAAM,KAAK,UAAU,GAAO,CAAC,EAAK,IAAU,IAClD,kBAAO,UAAW,SACb,KAIb,YAAoB,EAAW,IACzB,GAAS,eACR,MAAM,KAAK,UAAU,GAAO,CAAC,EAAK,IAAU,CAC3C,kBAAO,UAAW,IAAQ,MACrB,GAAO,EAAO,MAAU,KAG5B,EAGT,YAAyB,EAAc,EAAc,MAC7C,GAAS,GAAW,GACpB,EAAS,GAAW,MAEtB,OAAO,KAAK,GAAQ,SAAW,QAC1B,YAGE,CAAC,EAAK,IAAU,QAAO,QAAQ,MACpC,CAAC,EAAO,IAAQ,EAAO,KAAS,QAC3B,SAIJ,GAGT,YAAoB,EAAgC,MAC5C,GAA8B,GAAmB,GAGrD,EAA4B,WAAW,SACvC,MAAM,QAAQ,EAA4B,WAAW,aAEzB,WAAW,aACrC,EAA4B,WAAW,QAAQ,OAAO,CAAC,EAAK,OACtD,EAAK,KAAK,eAAiB,EACxB,KAAK,IACX,iBAKP,EACkB,MACZ,GAAyB,GAC7B,4BACA,OAGE,GAAY,GAAgB,8BAG5B,IAA0B,kBAAW,aAC5B,6BAIT,EAAC,kBAAW,UAAW,kBAAW,WAAY,QACrC,wBAEN,OACF,GADE,CAEL,WAAY,kBAAW,aAAc,CAAE,QAASA,GAAW,WAI/D,YAAoB,EAAgC,EAAQ,IACtD,EAAO,QAAS,MACZ,GAAY,GAAgB,wBAEW,IAAO,QAA5C,YAAU,aAA2B,EAAb,IAAa,EAAb,CAAxB,WAAU,gBAMZ,UACJ,CAAC,GAAa,kBAAW,kBACrB,CAAE,QAAS,EAAU,iBAAkB,KAAM,MAC7C,CAAE,QAAS,GAAa,UAAW,KAAM,QAEzC,GAAuBC,GAC3B,GACA,GAA0B,EAAM,UAAU,SAC1C,GAEI,EAA8B,GAAmB,MAWpDD,GAAW,EAAM,UAAU,YACxB,GACA,kBAAsB,WACpB,kBAA6B,UAC/B,CAAC,GACC,EAAqB,QACrB,iBAA6B,WAEnC,CAAC,EACD,MACM,CACJ,aACA,UACA,UAAW,CAAE,YACX,GAAS,GACP,EAAU,GAAa,EAAqB,SAE5C,EAAO,KACX,WACI,kBAAW,mBAAoB,CACjC,iBAAkB,iBAAW,mBAHpB,CAKX,WAAY,OACP,GADO,EAET,GAAU,OACN,GADM,CAET,kBAKA,WAAW,GAAWC,GAC1B,GACA,EACA,MAEQ,uBAAwB,KAAK,UAAU,WAErB,QAAUA,GACpC,GACA,EAAqB,QACrB,EAA4B,WAI1B,SAAW,GAIrB,YAA8B,EAAgC,EAAQ,IAChE,EAAO,QAAS,MACZ,GAA8B,GAAmB,GAEjD,CAAE,cAAa,aAAY,WAAY,EAAO,WAEhD,GAAY,GAAgB,0BACtB,iBAAmB,EAAM,UAAU,UACnC,WAAa,OAClB,EAAU,YADQ,EAEpB,EAAM,UAAU,SAAU,OACtB,EAAU,WAAW,EAAM,UAAU,UADf,CAEzB,cACA,aACA,iBAIM,uBAAwB,KAAK,UAAU,MAErB,YAAc,IACd,WAAa,IACb,QAAU,OACjC,EAA4B,SADK,CAEpC,OAAQ,EAAQ,OAChB,QAAS,OACH,EAA4B,QAAQ,SAAW,IAD5C,CAEP,qBAAsB,EAAQ,QAAQ,4BAG/B,IAGf,YAAoC,EAAgC,EAAQ,IACtE,EAAO,QAAS,MACZ,GAA8B,GAAmB,GAEjD,CAAE,MAAK,SAAU,EAAO,WAC1B,GAAY,GAAgB,0BACtB,WAAW,EAAM,UAAU,SAAS,WAAW,OAAO,GAC9D,KACQ,uBAAwB,KAAK,UAAU,MACrB,WAAW,OAAO,GAAO,GAGzD,YAAgC,EAAgC,MACxD,GAA8B,GAAmB,MACnD,GAAY,GAAgB,6BAC1B,GAA8B,GAClC,EAAM,UAAU,SAChB,QAEE,EAAU,WAAW,EAAM,UAAU,aAC7B,WAAW,EAAM,UAAU,SAAS,QAC5C,KACQ,uBAAwB,KAAK,UAAU,OAEvB,QAAU,EAExC,YACE,EACA,EACA,MACM,GAAe,EAAO,QAAQ,UAC/B,EAAM,WAAW,OACd,WAAW,GAAgB,GAC/B,MAGE,UAAU,QAAU,EAE5B,YACE,EACA,EACA,MACM,CACJ,UAAW,EACX,KAAM,CAAE,UAAS,cAAa,eAC5B,EAAO,QACL,EAAe,CACnB,QAAS,EACT,MAAO,EACP,UACA,cACA,cAEI,EAAkB,IAClB,EAAY,GAAgB,0BAExB,WAAW,GAAmB,KAC9B,uBAAwB,KAAK,UAAU,MAC3C,WAAW,GAAmB,IAC9B,UAAU,QAAU,EAE5B,YACE,EACA,EACA,YACM,CAAE,aAAc,EAAO,QAEzB,IAAc,EAAM,UAAU,YAC1B,UAAU,QAAU,cAGxB,GAAY,GAAgB,6BAC1B,GAAmBzT,OAAS,KAATA,cAAiB,aAAc,GAClD,EAAa,OAAO,KAAK,GAAkB,OAAO,CAAC,EAAK,IACxD,KAAQ,MACN,GAAO,EAAiB,IAEvB,GACN,MACG,WAAa,IACT,WAAa,GAAa,MAC1B,uBAAwB,KAAK,UAAU,IAGnD,YACE,EACA,EACA,QACQ,EAAO,UACR,yBACI,IAAW,EAAO,OACtB,wBACI,IAAqB,EAAO,OAChC,+BACI,IAA2B,EAAO,OACtC,0BACI,IAAuB,OAC3B,sBACI,IAAmB,EAAO,OAC9B,sBACI,IAAmB,EAAO,OAC9B,yBACI,IAAsB,EAAO,iBAE7B,IAGb,KAAM,IAAqBiP,GAAQ,ICzYtByE,GAAqB5Z,wBAChC6Z,IAEWC,GAAsBF,GAAmBrW,sBAErB,MACzBwW,GAAUvW,qBAAWoW,OACvB,CAACG,OACG,IAAIxc,OAAM,0CAGZ,CAAEyc,YAAWC,aAAYvZ,YAAaqZ,QAErCvhB,mBAAQ,IACN,EACL8J,QAAS2X,EAAWD,EAAU1X,UAAY,GAC1C0X,YACAC,aACAvZ,aAED,CAACA,EAAUsZ,EAAWC,iBAGS,MAC5B,YAAEA,GAAeC,WAChB1hB,mBAAQ,IAAM,MACb2hB,GAAoBC,OAAOC,KAAKJ,GAAYK,OAEhD,CAACC,EAAKC,IACDd,IAAWc,MACVphB,KAAK,CAAEohB,MAAKC,MAAOR,EAAWO,GAAKC,QAElCF,GACN,UAEI,CAAC,GAAGG,GAAY,GAAGP,IACzB,CAACF,YC7CmB,CAAlB,aAAP,YACiC,GAExB,OAAO,EAAW,EAAW,MAC7B,MAAM,KAAK,KAAK,KAAK,KAGrB,OAAO,EAAW,EAAW,MAC7B,MAAM,KAAK,KAAK,KAAK,KAGrB,WAAY,MACZ,MAAM,KAAK,KAGX,UAAW,OACT,MAAK,MAAM,KAAK,MCE3B,YAAuB,CACrBxe,GAAIkf,EACJlC,OACA/b,QACAke,SACqB,MACf,CAAExB,SAAQ1d,QAAOb,SAAQggB,UAASC,UAASC,WAAUC,kBACzD3E,IAEI4E,EAAcf,KACd,CAAEgB,SAAQC,UAAWC,GAASR,GAE9BS,EAAW7iB,kBAAQ,IAChBwiB,IAAmB,KACtB,GACAL,IAAeK,EAAevf,GAGjC,CAACuf,EAAgBL,eAEMhd,EAAM,MACxB2d,GAAUC,GAAY,CAAEnC,SAAQ1d,QAAOmf,YACvCW,EAAUC,GAAY,CAAErC,SAAQve,SAAQigB,YACxC9e,EAAO,GAAI0f,aAENC,KAAWhe,MAChBge,EAAQC,MAAO,MACXA,GAAQD,EAAQC,SAClBA,EAAM1gB,OAAS,WACR2gB,GAAI,EAAGA,EAAID,EAAM1gB,OAAQ2gB,GAAK,IAChCC,OACHR,EAAQM,EAAMC,GAAKX,GACnBM,EAAQI,EAAMC,EAAI,GAAKV,MAEpBY,OACHT,EAAQM,EAAMC,EAAI,GAAKX,GACvBM,EAAQI,EAAMC,EAAI,GAAKV,QAIxB,GACAW,OACHR,EAAQK,EAAQ,GAAGzZ,EAAIgZ,GACvBM,EAAQG,EAAQ,GAAGxZ,EAAIgZ,WAGhBa,GAAI,EAAGA,EAAIL,EAAQzgB,OAAQ8gB,MAC7BD,OACHT,EAAQK,EAAQK,GAAG9Z,EAAIgZ,GACvBM,EAAQG,EAAQK,GAAG7Z,EAAIgZ,aAM1Bc,YACEjgB,EAAKzC,gBAGRoE,GAAOnF,kBAAQ,IACZoG,EAAImc,EAAW,GAAEJ,KAAclC,IAAQ,IAC7C,CAACsC,EAAUtC,EAAMkC,qBAIhB,KAAK,sBACQ,gBACb,OAAQje,EACR,YAAY,IACZ,MAAO,CACLwf,QAASb,EACL,EACAzc,EACEqc,EAAY3Y,QACZ,wCACA,KAGR,EAAG6Z,EAAiBxe,KAU1B,YAAuB,CAAEA,OAAMye,gBAAoC,eAE5D,SAAW,QAAOA,kBAA8B,UAAU,oBAC1Dze,iBAAM3C,IAAI,CAAC4f,EAAOyB,qBAEdzB,EAAM9hB,QAAQwjB,qBACZ,IACC,GAAI1B,EAAMnf,GACV,KAAK,WACL,QACA,MAAOmf,EAAM9hB,QAAQyjB,gBAGxB3B,EAAM9hB,QAAQ0jB,qBACZ,IACC,GAAI5B,EAAMnf,GACV,KAAK,WACL,QACA,MAAOmf,EAAM9hB,QAAQ2jB,kBAdlB,GAAE7B,EAAMnf,GAAK4gB,QAuB9B,KAAMK,IAAmB5iB,eAAK6iB,iBAEK,MAC3B,CAAEhf,KAAMif,EAASR,gBAAiB/F,IAClC1Y,EAAOnF,kBAAwB,IAC5BokB,EAAQC,OACZjC,GAAUA,EAAMkC,KAAKC,YAAc,GAAKnC,EAAMkC,KAAKE,MAErD,CAACJ,aAEI,IAAuBjf,OAAMye,oBCzI3B,KAAA,YACF,gBACA,gCAMR,EAC6D,MACvD,CAAE,QAAO,UAAS,WAAY,UAE7B1hB,uBACL,AAAC,GAAuC,MAChC,CAAE,IAAG,KAAM,EACX,CAAC,EAAM,GACX,IAAe,QAA4B,EAAU,QAChD,IACL,CAAE,IAAG,KACL,CAAE,OAAM,KAAI,SAAU,EAAQ,EAAG,SAAU,MAG/C,CAAC,EAAY,EAAO,EAAS,ICdjC,YAAqB,CACnB0e,OAAQ6D,EAAc,GACtBtf,KAAMuf,GACa,MACb,CACJriB,OAAQsiB,EACR/D,SACA0B,UACAsC,WACAhB,gBACE/F,IACEgH,EAAWC,GAAYC,GAAoBC,OAE3C3iB,EAASue,EAAOvC,KAEhB4G,EAAQjlB,kBAAQ,IAAM,IACtB0kB,EAAU,MACNxE,GAAS+C,GAAY,CACzB5gB,OAAQsiB,EACRrC,QAAS,CAACA,EAAQ,GAAIA,EAAQ,IAC9B1B,WAEIT,EAAS+E,GAAYN,EAASF,EAASzhB,IAAKZ,EAAQoiB,GAEpD,CAAE/a,IAAGyb,GAAIxb,GAAM+a,EAASvf,KACxBigB,EAAaP,EAAS,CAAEnb,IAAGC,MAE3B0b,EAAc,GAAInC,MAEZI,OACVnD,EAAOiF,EAAWzb,EAAEyb,EAAWzb,EAAEjH,OAAS,IAC1Cwd,EAAOkF,EAAW1b,EAAEhH,OAAS,WAGtB2gB,GAAI+B,EAAW1b,EAAEhH,OAAS,EAAG2gB,GAAK,EAAGA,MAChCE,OAAOpD,EAAOiF,EAAWzb,EAAE0Z,IAAKnD,EAAOkF,EAAW1b,EAAE2Z,WAG3DgC,GAAYtkB,wBAIpB,CACDsB,EACAue,EACA6D,EACAE,EACAD,EACAG,EACAvC,EACAsC,IAGIU,EAAaX,EAAe/D,EAAOG,OAASH,EAAOxe,UAErD,CAACkjB,GAAc,CAACjjB,EAAe,cAI/B,QAAU,OAAMA,KAAUijB,EAAa1E,EAAOxe,MAC9C,MAAOC,EACP,OAAQijB,EAAa1E,EAAOxe,+CAGhB,GAAK,GAAEwhB,gCACT,MAAOvhB,EAAQ,OAAQijB,EAAY,EAAE,IAAI,EAAG1E,EAAOxe,iBAG1D,SAAW,QAAOwhB,iCACb,UAAU,OAAO,OAAO,QAAQ,KAAK,OAAO,EAAGqB,SAM7D,OAAe3jB,eAAKikB,IC3EpB,YAAoB,CAClB3E,OAAQ4E,EAAc,GACtBrgB,KAAMuf,GACY,MACZ,CACJxhB,QACA0d,OAAQ6E,EACRpD,UACAuC,WACAhB,gBACE/F,IACEgH,EAAWC,GAAYC,GAAoBW,OAC3CrjB,EAASojB,EAAarjB,IAEtB6iB,EAAQjlB,kBAAQ,IAAM,IACtB0kB,EAAU,MACNxE,GAAS6C,GAAY,CAAE7f,QAAOmf,UAASzB,OAAQ6E,IAC/CtF,EAAS+E,GAAYN,EAASF,EAASzhB,IAAKZ,EAAQmjB,GACpD,CAAE9b,IAAGyb,GAAIxb,GAAM+a,EAASvf,KACxBigB,EAAaP,EAAS,CAAEnb,IAAGC,MAE3B0b,EAAc,GAAInC,MACZI,OAAOpD,EAAOkF,EAAW1b,EAAE,IAAKyW,EAAOiF,EAAWzb,EAAE,YACvD0Z,GAAI,EAAGA,EAAI+B,EAAW1b,EAAEhH,OAAQ2gB,MAC3BE,OAAOrD,EAAOkF,EAAW1b,EAAE2Z,IAAKlD,EAAOiF,EAAWzb,EAAE0Z,WAG3DgC,GAAYtkB,wBAIpB,CACDsB,EACAmjB,EACAC,EACAf,EACAxhB,EACAmf,EACAwC,EACAD,UAGE,CAAC1hB,GAAS,CAACb,EACN,cAIF,QAAU,OAAMa,KAASb,IAAU,QAAc,oDAExC,GAAK,GAAEuhB,+BAEb,MAAO1gB,EAAQuiB,EAAapH,KAAOoH,EAAa3E,MAChD,SACA,EAAG2E,EAAapH,KAChB,EAAI,GAAE,iBAIT,SAAW,QAAOuF,gCAEjB,UAAU,OACV,OAAO,MACP,KAAK,OACL,YAAY,MACZ,EAAGqB,SAOb,OAAe3jB,eAAKqkB,IC5EpB,KAAMC,IAAatmB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAabumB,GAAgB,CAAE/E,MAAO,IAAK1e,IAAK,EAAGic,KAAM,EAAG0C,OAAQ,GAa7D,YAAejhB,EAAmB,MAC1B,CACJgmB,OAAO,GACP7D,QAAQ,eACRrB,OAAQ4E,EAAcK,IACpB/lB,EAEEmI,EAAQ4V,IACR,CAAEwE,UAAShgB,SAAQa,QAAO0d,SAAQmF,oBAAmBC,aACzD/d,EAEIge,EAAUzd,iBAAoB,iCAE1B,IAAM,IACV,CAACsd,cACC5F,GAAS6C,GAAY,CAAE7f,QAAO0d,SAAQyB,YACtC6D,EAAQC,GAAcjG,GAAQkG,MAAM,GAAGC,WAAWF,GAAU,SAGxDF,EAAQnc,SAASwc,KAAKJ,IAC/B,CACDF,EACA3jB,EACAue,EACAA,EAAOG,OACPH,EAAOvC,KACPuC,EAAOE,MACPF,EAAOxe,IACP0jB,EACAC,EACA7iB,EACAmf,IAGE,CAACnf,GAAS,CAACb,EACN,KAIPhC,eACGylB,GACCzlB,OACE,UAAU,IACV,IAAKulB,GACL,UAAY,eACVvjB,KAAiB0e,OAASyE,EAAYzE,WAExC,IAAKkF,WAEL5lB,UAAM,KAAK,OAAO,EAAG6C,EAAQ,GAAI,EAAE,KAAK,GAAG,SAAS,WAAW,eAC5D+e,QAQb,OAAe3gB,eAAKokB,ICpFpB,KAAME,IAAatmB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAiBbumB,GAAgB,CAAE/E,MAAO,GAAI1e,IAAK,EAAG2e,OAAQ,EAAG1C,KAAM,GAa5D,YAAeve,EAAmB,MAC1B,CACJgmB,OAAO,GACP7D,QAAQ,GACRrB,OAAQ4E,EAAcK,IACpB/lB,EAEEmmB,EAAUzd,iBAAoB,MAE9BP,EAAQ4V,IACR,CAAEyE,UAASpf,QAAOb,SAAQ2jB,YAAWD,oBAAmBnF,UAC5D3Y,6BAEQ,IAAM,IACV,CAAC6d,GAAQ,CAACxD,cACRnC,GAAS8C,GAAY,CAAE5gB,SAAQigB,UAAS1B,WAExC2F,EAAOJ,GAAahG,GAAQiG,MAAM,GAAGC,WAAWF,GAAU,SAGtDF,EAAQnc,SAASwc,KAAKC,IAC/B,CAACT,EAAMxD,EAAS0D,EAAWD,EAAmB1jB,EAAQue,IAErD,CAAC1d,GAAS,CAACb,EACN,KAIPhC,eACEA,OACE,UAAU,IACV,IAAKulB,GACL,UAAY,aAAY1iB,EAAQsiB,EAAY1E,SAC5C,IAAKmF,WAEL5lB,UACE,KAAK,OACL,EAAG,CAACmlB,EAAYpjB,IAChB,EAAG,IAAc0e,MAAQ,GACzB,GAAG,SACH,UAAU,cACV,WAAW,eAEVmB,QAOX,OAAe3gB,eAAK0jB,IChFpB,KAAMwB,IAAYlnB;AAAAA;AAAAA;AAAAA,EAUlB,YAAyB,CAAEinB,OAAMT,QAA8B,MACvD,CACJ3gB,OACA6gB,YACApF,SACA1d,QACAb,SACAggB,UACAC,UACAmE,iBACE5I,IACE,CAAC6I,EAAUC,GAAe3kB,mBAAwB,IAElDke,EAAS6C,GAAY,CAAEnC,SAAQ1d,QAAOmf,YACtClC,EAAS8C,GAAY,CAAErC,SAAQve,SAAQigB,gCAEnC,IAAM,MACRsE,GAAQZ,EAAUY,MAAM,KAExBC,EAAUN,IAAS,IAAMK,EAAM,GAAKL,IAAS,IAAMK,EAAM,GAAK,QAChEC,IAAY,KAAM,MAWdC,GAASC,AAVA5hB,EACZkf,OACE2C,GACCA,EAAO1mB,QAAQ2mB,YAAc,IAC7BD,EAAO1C,KAAKuC,UAAYA,GAE3BxC,OAAO6C,IACP1kB,IAAKwkB,GAAWA,EAAOD,OAAOI,QAC9BC,OAGA5kB,IAAK6kB,GACJA,EAAOC,QACJjD,OAAQkD,GACPC,GAAqBC,KAAMC,GAAUH,EAAQI,OAASD,IAEvDllB,IAAK+kB,GAAYA,EAAQK,QAE7BR,SACSN,UAEA,KAEb,CAACd,EAAWO,EAAMphB,EAAMshB,SAErBoB,GAAkB7nB,kBAAQ,IAAM,IAChC8lB,IAAS,IAAQY,EAAShkB,OAAS,QACvBgkB,GAASlkB,IAAI,CAACslB,EAAQzE,IAC3BkD,IAAS,IACdlmB,UACE,IAAKmmB,GAGL,GAAItG,EAAO4H,GACX,GAAI5H,EAAO4H,GACX,GAAI3H,EAAOmC,EAAQ,IACnB,GAAInC,EAAOmC,EAAQ,KAJb,iBAAgBiE,IAAOlD,KAM7BkD,IAAS,IACXlmB,UACE,IAAKmmB,GAGL,GAAItG,EAAOmC,EAAQ,IACnB,GAAInC,EAAOmC,EAAQ,IACnB,GAAIlC,EAAO2H,GACX,GAAI3H,EAAO2H,IAJL,iBAAgBvB,IAAOlD,KAM7B,OAIP,CAACkD,EAAMG,EAAUxG,EAAQC,EAAQ2F,EAAMzD,EAASC,UAE5CjiB,iBAAIwnB,IC5Fb,KAAM,IAAe,GAAI,IAEnB,GAAU,CACd,GAAI,CAAC,EAAO,IAAO,GAAa,GAAG,EAAO,GAC1C,KAAM,CAAC,EAAO,IAAO,GAAa,KAAK,EAAO,GAC9C,IAAK,CAAC,EAAO,IAAO,GAAa,IAAI,EAAO,GAC5C,KAAM,CAAC,EAAO,IAAY,GAAa,KAAK,EAAO,IAGrD,OAAO,OAAO,ICDd,KAAME,IAAoBvgB,wBAAmB,IAE7C,YAA2BS,EAAOuC,EAAQ,cAChCA,EAAO3B,UACR,YACGmf,GAAW,OACZ/f,GADY,CAEfggB,WAAY,KAAKhgB,EAAMggB,oBAErBD,GAASC,WAAWzd,EAAO0d,QAAQjlB,GAAG,MAAQ2a,WACvCqK,WAAWzd,EAAO0d,QAAQjlB,GAAG,IAAM,IAG5C+kB,EAASC,WAAWzd,EAAO0d,QAAQjlB,GAAG,IAAIuH,EAAO0d,QAAQ3B,QACzD3I,WAESqK,WAAWzd,EAAO0d,QAAQjlB,GAAG,IAAIuH,EAAO0d,QAAQ3B,MAAQ,IAIhEyB,EAASC,WAAWzd,EAAO0d,QAAQjlB,GAAG,IACrCuH,EAAO0d,QAAQ3B,MACfvG,SAASxV,EAAO0d,QAAQjlB,GAAG,OAEpBglB,WAAWzd,EAAO0d,QAAQjlB,GAAG,IAAIuH,EAAO0d,QAAQ3B,MAAM3lB,KAC7D4J,EAAO0d,QAAQjlB,GAAG,IAIf+kB,MAEJ,eACGA,GAAW,OACZ/f,GADY,CAEfggB,WAAY,KAAKhgB,EAAMggB,oBAGvBD,MAASC,WAAWzd,EAAO0d,QAAQjlB,GAAG,MAAtC+kB,cAA4Cxd,EAAO0d,QAAQ3B,SAC3D3I,WAESqK,WAAWzd,EAAO0d,QAAQjlB,GAAG,IAAIuH,EAAO0d,QAAQ3B,MACvDyB,EAASC,WAAWzd,EAAO0d,QAAQjlB,GAAG,IAAIuH,EAAO0d,QAAQ3B,MAAMlC,OAC5D8D,GAAQA,IAAQ3d,EAAO0d,QAAQjlB,GAAG,IAIrC+kB,EAASC,WAAWzd,EAAO0d,QAAQjlB,GAAG,IAAIuH,EAAO0d,QAAQ3B,MACtD7jB,SAAW,SAEPslB,GAASC,WAAWzd,EAAO0d,QAAQjlB,GAAG,IAAIuH,EAAO0d,QAAQ3B,MAGhE3E,OAAOC,KAAKmG,EAASC,WAAWzd,EAAO0d,QAAQjlB,GAAG,KAAKP,SAAW,SAE3DslB,GAASC,WAAWzd,EAAO0d,QAAQjlB,GAAG,KAI1C+kB,MAEJ,mBACGA,GAAW,OACZ/f,GADY,CAEfggB,WAAY,KAAKhgB,EAAMggB,uBAGlBC,QAAQjlB,GAAGmlB,QAASD,GAAQ,OAC7BH,MAASC,WAAWE,KAApBH,cAA2Bxd,EAAO0d,QAAQ3B,SAAU3I,eAC/CoK,GAASC,WAAWE,GAAK3d,EAAO0d,QAAQ3B,MAC3C3E,OAAOC,KAAKmG,EAASC,WAAWE,IAAMzlB,SAAW,SAC5CslB,GAASC,WAAWE,MAK1BH,MAEJ,sBACI,QACF/f,GADE,CAEL4a,SACErY,EAAO0d,QAAQjlB,KAAO2a,QAAapT,EAAO0d,QAAQ3B,OAAS3I,OAC7DyK,SAAU7d,EAAO0d,QAAQjlB,GACzBqlB,WAAY9d,EAAO0d,QAAQ3B,WAG1B,wBACI,QACFte,GADE,CAELsgB,UAAW/d,EAAO0d,QAAQjlB,KAAO2a,OACjC4K,UAAWhe,EAAO0d,QAAQjlB,GAC1BwlB,YAAaje,EAAO0d,QAAQ3B,WAG3B,sBACGyB,GAAW,OACZ/f,GADY,CAEfggB,WAAY,KAAKhgB,EAAMggB,2BAGlBD,GAASC,WAAWzd,EAAO0d,QAAQjlB,IAEtC+kB,EAASnF,UAAYmF,EAASK,WAAa7d,EAAO0d,QAAQjlB,OACnD4f,SAAW,KACXwF,SAAWzK,SACX0K,WAAa1K,QAEpBoK,EAASO,WAAaP,EAASQ,YAAche,EAAO0d,QAAQjlB,OACrDslB,UAAY,KACZC,UAAY5K,SACZ6K,YAAc7K,QAGlBoK,eAGD,IAAIjjB,OAAO,wBAAuByF,EAAO3B,SAKrD,KAAM6f,IAAa,CACjBT,WAAY,GACZpF,SAAU,GACVwF,SAAUzK,OACV0K,WAAY1K,OACZ2K,UAAW,GACXC,UAAW5K,OACX6K,YAAa7K,oBAGoB9d,EAAO,MAClC,CAAE6oB,eAAgB7oB,EAClB,CAACmoB,EAAY/f,GAAYC,qBAAWygB,GAAmBF,IACvDG,EAAe7oB,kBAAQ,MAASioB,aAAY/f,aAAa,CAAC+f,eAE9Ba,EAAOC,EAAe,GACxC7gB,SAAS,CACrBW,KAAM,gBACNqf,QAAS,CAAEjlB,GAAI6lB,EAAM7lB,SAEhB+lB,QAAU,IAAIZ,QAASa,GAC5BF,EAAc7gB,SAAS,CACrBW,KAAM,MACNqf,QAAS,CAAEjlB,GAAI,CAAC6lB,EAAM7lB,GAAIgmB,GAAS1C,KAAM,UAGvCe,QAAQc,QAASc,MACbF,QAAU,IAAIZ,QAASa,GAC7BF,EAAc7gB,SAAS,CACrBW,KAAM,MACNqf,QAAS,CAAEjlB,GAAI,CAACimB,EAAOjmB,GAAIgmB,GAAS1C,KAAM,oBAMjB4C,EAAMJ,EAAe,GACtC7gB,SAAS,CACrBW,KAAM,gBACNqf,QAAS,CAAEjlB,GAAIkmB,EAAKlmB,SAEhB0G,EAAEqf,QAAU,IAAIZ,QAASa,GAC7BF,EAAc7gB,SAAS,CACrBW,KAAM,MACNqf,QAAS,CAAEjlB,GAAI,CAACkmB,EAAKlmB,GAAIgmB,GAAS1C,KAAM,WAGtC7c,EAAEsf,QAAU,IAAIZ,QAASa,GAC7BF,EAAc7gB,SAAS,CACrBW,KAAM,MACNqf,QAAS,CAAEjlB,GAAI,CAACkmB,EAAKlmB,GAAIgmB,GAAS1C,KAAM,UAGvCe,QAAQc,QAASc,GAAW,CAC9BA,GAAOxf,EAAEsf,QAAU,IAAIZ,QAASa,GAC/BF,EAAc7gB,SAAS,CACrBW,KAAM,MACNqf,QAAS,CAAEjlB,GAAI,CAACimB,EAAOjmB,GAAIgmB,GAAS1C,KAAM,WAGtC5c,EAAEqf,QAAU,IAAIZ,QAASa,GAC/BF,EAAc7gB,SAAS,CACrBW,KAAM,MACNqf,QAAS,CAAEjlB,GAAI,CAACimB,EAAOjmB,GAAIgmB,GAAS1C,KAAM,qCAMxC,IAAM,CACVoC,KACUP,QAAS1D,GAAa,CAC5BA,EAASJ,KAAKC,YAAc,IACrBwC,OAAOI,OAAOiB,QAASU,GAC9BM,EAAyBN,EAAOD,IAEzBnE,EAASJ,KAAKC,YAAc,KAC5B8E,MAAMlC,OAAOiB,QAASe,GAC7BG,EAAwBH,EAAMN,OAMrC,CAACF,MAGD,GAAkB,UAAS,MAAOE,WAChC/oB,EAAM2H,wBAKuB,OAC3BuD,sBAAW+c,gBAGU/F,EAAK,MAC3BT,GAAUgI,QAEX,MAAOvH,IAAQ,UAAY,MAAOA,IAAQ,UAAaA,IAAQ,QAC5D,IAAIjd,OAAO,4DAEb9B,GAAKumB,OAAOxH,GAEZa,EAAW7iB,kBAAQ,IAChBuhB,EAAQ0G,WAAWpF,UAAYtB,EAAQ0G,WAAWI,WAAaplB,EACrE,CAACse,EAAQ0G,WAAWI,SAAU9G,EAAQ0G,WAAWpF,SAAU5f,IAExDqlB,EAAatoB,kBAAQ,IAClB6iB,EAAWtB,EAAQ0G,WAAWK,WAAa1K,OACjD,CAAC2D,EAAQ0G,WAAWK,WAAYzF,IAE7B4G,EAAWzpB,kBAAQ,IAChBuhB,EAAQ0G,WAAWA,WAAWhlB,GACjCse,EAAQ0G,WAAWA,WAAWhlB,GAC9B,GACH,CAACse,EAAQ0G,WAAWA,WAAYhlB,IAE7BslB,EAAYvoB,kBAAQ,IACjBuhB,EAAQ0G,WAAWM,WAAahH,EAAQ0G,WAAWO,YAAcvlB,EACvE,CAACse,EAAQ0G,WAAWM,UAAWhH,EAAQ0G,WAAWO,UAAWvlB,IAE1DwlB,EAAczoB,kBAAQ,IACnBuoB,EAAYhH,EAAQ0G,WAAWQ,YAAc7K,OACnD,CAAC2D,EAAQ0G,WAAWQ,YAAaF,IAE9BmB,EAAMxnB,sBACTimB,GAAQ,GACCjgB,SAAS,CACfW,KAAM,MACNqf,QAAS,CAAEjlB,GAAI,CAACA,EAAIklB,GAAM5B,KAAM+B,MAGpC,CAACA,EAAY/G,EAASte,IAGlB0mB,EAASznB,sBACZimB,GAAQ,GACCjgB,SAAS,CACfW,KAAM,SACNqf,QAAS,CAAEjlB,GAAI,CAACA,EAAIklB,GAAM5B,KAAM+B,MAGpC,CAACA,EAAY/G,EAASte,IAGlB2mB,EAAY1nB,sBACfqkB,GAAS,GACAre,SAAS,CACfW,KAAM,aACNqf,QAAS,CAAEjlB,GAAI,CAACA,GAAKsjB,WAGzB,CAAChF,EAASte,IAGN4mB,EAAS3nB,sBACZimB,GAAQ,CAELsB,EAASnB,KAAgB1K,QACzB,CAAC6L,EAASnB,GAAYtI,SAASmI,KAE3BA,KAEGA,IAGX,CAACG,EAAYoB,EAAKD,EAAUE,IAIxBG,EAAe5nB,sBAAY,IAAM,GAC7BgG,SAAS,CACfW,KAAM,gBACNqf,QAAS,CAAEjlB,SAEZ,CAACse,EAASte,IAEP8E,EAAU7F,sBACbqkB,GAAS,GACAre,SAAS,CACfW,KAAM,gBACNqf,QAAS,CACPjlB,GAAI,AAAC4f,EAAgBjF,OAAL3a,EAChBsjB,KAAM,CAAC1D,GAAY5f,IAAO2a,OAAY2I,EAAO3I,WAInD,CAAC2D,EAASte,EAAI4f,IAGVkH,EAAe7nB,sBACnB,CAACsI,EAAQ+b,IAAS,CACZ/b,IAAW,UACLtC,SAAS,CACfW,KAAM,kBACNqf,QAAS,CACPjlB,KACAsjB,KAAMtjB,IAAO2a,OAAY2I,EAAO3I,UAG3BpT,IAAW,WACZtC,SAAS,CACfW,KAAM,kBACNqf,QAAS,MAIf,CAAC3G,EAASte,IAGN+mB,EAAe9nB,sBAClBqkB,GAASwD,EAAa,QAASxD,GAChC,CAACwD,IAGGE,EAAe/nB,sBAClBqkB,GAASwD,EAAa,QAASxD,GAChC,CAACwD,UAGI,CACL9mB,KACA4f,WACAyF,aACAmB,WACAC,MACAC,SACAC,YACAC,SACAC,eACA/hB,UACAwgB,YACAE,cACAuB,eACAC,4BAIuCC,EAAgBC,EAAK,OACvDA,GAAI9F,OAAQphB,GACjB2e,OAAOC,KAAKqI,EAAejC,YAAY5D,OAAQ8D,GAAQA,IAAQllB,OC5WvDmnB,KAAAA,WACH,kBACI,oBACF,iBACD,eACD,wBACU,4BACN,qBACD,sBAyBZ,KAAM1B,IAAa,CACjB2B,UAAW,CACTC,WAAY,GACZC,YAAa,GACbC,uBAAwB,GACxBC,WAAY,MAEdviB,SAAU,IAAM,KAChByhB,OAAQ,IAAM,MAGVe,GAAmBljB,wBAAqCkhB,IAE9D,YAA0BzgB,EAAOuC,EAAQ,QAC/BA,EAAO3B,UACR,aACG,CAAE8hB,sBAAqBF,cAAejgB,EAAO0d,QAC7C,CAAErf,OAAOuhB,UAA2BQ,QAAQ,MAChDH,GAAc,GAEVzC,EAAW,OACZ/f,GADY,CAEfqiB,WAAY,KAAKriB,EAAMqiB,YACvBG,WAAY,CAAE5hB,OAAM+hB,oBAEXC,KAASF,OACH3C,GAASsC,eACbA,WAAWO,GAAS,YAGxBN,YAAc3I,OAAOC,KAAKmG,EAASsC,YAErCtC,MAEJ,aACG,CAAE2C,uBAAwBngB,EAAO0d,QAEjCF,EAAW,OACZ/f,GADY,CAEfqiB,WAAY,KAAKriB,EAAMqiB,YACvBG,WAAY,gBAEHI,KAASF,GACdE,IAAS7C,GAASsC,kBAEbtC,GAASsC,WAAWO,YAGtBN,YAAc3I,OAAOC,KAAKmG,EAASsC,YACrCtC,MAEJ,sBACc,QACZ/f,GADY,CAGfuiB,uBAAwBhgB,EAAO0d,cAK9B,wBACc,QACZjgB,GADY,CAEfuiB,uBAAwB,kBAMpB,IAAIzlB,OAAO,wBAAuByF,EAAO3B,qBAKnB/I,EAAO,MACjC,CAACuqB,EAAWniB,GAAYC,qBAC5B2iB,GACApC,GAAW2B,WAGPxB,EAAe7oB,kBAAQ,IAAM,aACf,GACP,CACP6I,KAAM,OACNqf,QAAS,CAAEyC,oBAAqBN,EAAUE,qBAGvC,CAAEF,YAAWniB,WAAUyhB,WAC7B,CAACU,aAGD,GAAiB,UAAS,MAAOxB,WAC/B/oB,EAAM2H,wBAKsB,OAC1BuD,sBAAW0f,gBAQlBJ,EACAG,EAAgC,KAChC,IACI,CAACM,MAAMC,QAAQV,QACX,IAAIvlB,OAAM,oCAEZ,CAAEmD,WAAUmiB,aAAcY,KAE1BN,EAAsB3qB,kBAAQ,IAAM,MAClCkrB,GAA4B,YACvBb,KAAaC,GAAY,IAC9B,MAAOD,IAAc,UAAY,MAAOA,IAAc,cAClD,IAAItlB,OAAO,4CAEfslB,IAAc,MACFzpB,KAAK4oB,OAAOa,UAGvBa,IACN,CAACZ,wBAEM,IAED,IAAM,GACF,CACPzhB,KAAM,OACNqf,QAAS,CAAEyC,oBAAqB,QAEzB,CACP9hB,KAAM,qBAGT,CAACX,SAEE2a,GAAW7iB,kBAAQ,IAChBqqB,EAAUE,YAAY9C,KAAMzF,GACjC2I,EAAoB3K,SAASgC,IAE9B,CAAC2I,EAAqBN,EAAUE,cAE7BY,EAAsBnrB,kBAAQ,IAC3BqqB,EAAUG,uBAAuB/C,KAAMzF,GAC5C2I,EAAoB3K,SAASgC,IAE9B,CAAC2I,EAAqBN,EAAUG,yBAE7B1E,EAAO5jB,sBAAY,IAAM,GACpB,CACP2G,KAAM,OACNqf,QAAS,CACPyC,sBACAF,iBAGH,CAACviB,EAAUyiB,EAAqBF,IAE7BW,EAAOlpB,sBAAY,IAAM,GACpB,CACP2G,KAAM,OACNqf,QAAS,CACPyC,0BAGH,CAACA,EAAqBziB,IAEnBwhB,EAAMxnB,sBACTe,GAAO,GACG,CACP4F,KAAM,OACNqf,QAAS,CAAEyC,oBAAqB,GAAI1nB,SAGxC,CAACiF,IAGGyhB,EAASznB,sBACZe,GAAO,GACG,CACP4F,KAAM,OACNqf,QAAS,CAAEyC,oBAAqB,GAAI1nB,SAGxC,CAACiF,IAGGmjB,EAAQnpB,sBACXxB,GAAM,CACDA,MACA4qB,mBACA1iB,qBAGCuiB,EAMM,CACPtiB,KAAM,mBANC,CACPA,KAAM,gBACNqf,QAASyC,KAQf,CAACA,EAAqBziB,EAAUijB,UAG3BnrB,mBAAQ,IACN,EACL6iB,WACA0I,QAAS,CACPvB,aAAclE,EACdmE,aAAcmB,GAEhBrjB,QAASsjB,EACTvF,OACAsF,OACAD,sBACAE,QACA3B,MACAC,WAED,CAACD,EAAK2B,EAAOD,EAAMvI,EAAUsI,EAAqBxB,EAAQ7D,SC7QlD,IAAsB,kBAEX,EAAgB,EAAwB,OACvD,GAAG,IAAS,KAAsB,ICK3C,KAAMU,IAAYlnB;AAAAA;AAAAA;AAAAA;AAAAA,EAYlB,YAAyB,CAAEsoB,QAAOrB,OAAMT,QAA8B,MAC9D,CAAElF,SAAQ1d,QAAOb,SAAQggB,UAASC,WAAYzE,IAC9CqC,EAAS6C,GAAY,CAAEnC,SAAQ1d,QAAOmf,YACtClC,EAAS8C,GAAY,CAAErC,SAAQve,SAAQigB,YAEvChC,EAAOtgB,kBAAQ,IACZ8lB,IAAS,GACdS,IAAS,IACPlmB,UACE,IAAKmmB,GAEL,GAAItG,EAAO0H,GACX,GAAI1H,EAAO0H,GACX,GAAIzH,EAAOmC,EAAQ,IACnB,GAAInC,EAAOmC,EAAQ,KAJb,cAAasF,OAMnBrB,IAAS,IACXlmB,UACE,IAAKmmB,GAEL,GAAItG,EAAOmC,EAAQ,IACnB,GAAInC,EAAOmC,EAAQ,IACnB,GAAIlC,EAAOyH,GACX,GAAIzH,EAAOyH,IAJL,cAAaA,OAMnB,KACF,KACH,CAACrB,EAAMqB,EAAO1H,EAAQC,EAAQ2F,EAAMzD,EAASC,UAEzCjiB,iBAAIigB,ICpCb,YAAyB,CAAE4I,UAAgC,cACnDsC,GAAgBxrB,kBAAQ,IACrB,CAACyrB,GAAQvC,EAAOjmB,GAAI,aAAcwoB,GAAQvC,EAAOjmB,GAAI,gBAC3D,CAACimB,EAAOjmB,KAELyoB,EAAgB1rB,kBAAQ,IACrB,CAACyrB,GAAQvC,EAAOjmB,GAAI,aAAcwoB,GAAQvC,EAAOjmB,GAAI,gBAC3D,CAACimB,EAAOjmB,KAEL0oB,EAAaC,GAAaJ,GAC1BK,EAAaD,GAAaF,GAC1BrB,EAAYuB,GAAa,CAAC1C,EAAOjmB,WAEnC,CAACimB,qBAAQxf,IAARwf,cAAWtB,QAAS,CAACsB,qBAAQvf,IAARuf,cAAWtB,OAAc,KAGjDxnB,iBACEC,EAAC,IACC,MAAO6oB,EAAOxf,EAAEke,MAChB,KAAK,IACL,KAAM+D,EAAW9I,UAAYwH,EAAUxH,WAEzCxiB,EAAC,IACC,MAAO6oB,EAAOvf,EAAEie,MAChB,KAAK,IACL,KAAMiE,EAAWhJ,UAAYwH,EAAUxH,cChB/C,KAAMiJ,IAASxqB,eAAK,CAAC,CAAE4nB,SAAQjC,eAA6B,MACpD,CAAErG,SAAQ1d,QAAOb,SAAQggB,UAASC,WAAYzE,IAC9CqC,EAAS6C,GAAY,CAAEnC,SAAQ1d,QAAOmf,YACtClC,EAAS8C,GAAY,CAAErC,SAAQve,SAAQigB,YAEvCyJ,EAAW7pB,sBAAae,GACrB,CAACA,GAAI+oB,OAAOP,GAAQxoB,EAAI,KAAMwoB,GAAQxoB,EAAI,MAChD,IAEGglB,EAAagE,GAAc/C,EAAOjmB,IAClConB,EAAYuB,GAAaG,EAAS9D,EAAWhlB,KAC7CipB,EAAgBjB,KAEhB,CAACkB,EAAeC,GAAoBpqB,mBAAS,+BAEzC,IAAM,CAEZkqB,EAAc7B,UAAUE,YAAY9C,KAAM4E,GACxCN,EAAS7C,EAAOjmB,IAAI+c,SAASqM,KAE/BpE,EAAWpF,WAEM,MAEA,KAElB,CACDoF,EAAWpF,SACXkJ,EACAG,EAAc7B,UAAUE,YACxBrB,EAAOjmB,KAGL,AAACimB,EAGH9oB,OACE,UAAU,cACV,aAAc,IAAM,GACP4pB,aAAapM,UACdkI,QAEZ,aAAc,IAAM,GACPmE,aAAarM,UACdwN,kBAGXnE,EAAUK,SACTlnB,iBACEC,YAEE,GAAI6f,EAAOgJ,EAAOxf,EAAEke,OAAS,GAC7B,GAAIzH,EAAO+I,EAAOvf,EAAEie,OAAS,GAC7B,EAAGuE,EAAgB,EAAI,EACvB,KAAMA,EAAgB,QAAU,aAJ3BjD,EAAOjmB,IAMd5C,EAAC,IAAgB,cAGrBA,OAAG,UAAU,4BACV4mB,EAAUqF,OACTpD,EAAOoD,OACPpD,EAAOoD,MAAM9pB,IAAI,CAAC+pB,EAAMlJ,IACtBhjB,YAEE,GAAI6f,EAAOqM,EAAK7iB,GAChB,GAAIyW,EAAOoM,EAAK5iB,GAChB,EAAG,EACH,KAAK,SAJC,GAAEuf,EAAOjmB,GAAKogB,WA/BZ,OC1ChBmJ,GAAgBltB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAchBmtB,GAAoBntB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAsBpBotB,GAAO,CAAC,CAAEC,WAAU1F,eAA2B,MAC7C,CAAEvd,IAAGC,IAAG1G,KAAIqkB,WAAYqF,EACxBC,EAAiBX,GAAchpB,GAC/B4pB,EAAgBjB,GAAa,CAACgB,EAAe3pB,IAAK,CACtD4F,KAAMuhB,GAAkB0C,KACxBlC,MAAO,CAAE3nB,GAAI2pB,EAAe3pB,MAExB,CAAE2d,SAAQ1d,QAAOb,SAAQggB,UAASC,WAAYzE,IAC9CqC,EAAS6C,GAAY,CAAEnC,SAAQ1d,QAAOmf,YACtClC,EAAS8C,GAAY,CAAErC,SAAQve,SAAQigB,YAEvC,CAAEyK,KAAMC,EAAK,EAAGC,GAAIC,EAAK,GAAMxjB,EAC/B,CAAEqjB,KAAMI,EAAK,EAAGF,GAAIG,EAAK,GAAMzjB,EAE/B,CAAC0jB,EAAeC,GAAoBtrB,mBAAS,+BAEzC,IAAM,GACG,CAACurB,GAAcZ,KAC/B,CAACA,IAGFvsB,OACE,IACEysB,EAAchK,UAAY+J,EAAe/J,SACrC4J,GACAD,GAGN,aAAc,IAAM,GACHxC,aAAapM,UACdkI,QAEhB,aAAc,IAAM,GACHmE,aAAarM,UACdwN,kBAGfnE,EAAUoC,OACThpB,OAAG,UAAY,aAAY6f,EAAOgN,MAAO/M,EAAOgN,eAC9C9sB,UACE,EAAE,IACF,MAAO6f,EAAO8M,GAAM9M,EAAOgN,GAC3B,OAAQ/M,EAAOiN,GAAMjN,EAAOgN,GAC5B,UAAU,gBACV,KAAK,YACL,OAAQE,EAAgB,UAAY,YACpC,YAAaA,EAAgB,IAAM,QAIxC/F,EAAQ9kB,IAAI,CAAC+kB,EAASlE,IACrBhjB,EAAC,IAAyB,OAAQknB,EAAS,aAA7B,GAAEtkB,EAAKogB,QAxBlBpgB,ICzDX,YAAoB,CAAEomB,QAAO/oB,UAASsjB,gBAAiC,MAC/D,CAACqD,EAAWuG,GAAiBxrB,mBAAS,CAC1CqnB,MAAO,GACP/B,QAAS,GACTgF,MAAO,gCAGC,IAAM,IACPmB,GAAG,0BAA2B,CAAC,CAAEzL,SAAU,GACjC0L,UACVA,KACF1L,GAAM,CAAC0L,EAAc1L,SAGzB,WAGE,SAAW,QAAO4B,kBAA8B,UAAU,oBAC1DtjB,EAAQ2mB,WACPoC,EAAMlC,OAAO3kB,IAAK2mB,UACb,UAAU,kBACV,IAAK,SAAUA,EAAM,eADCA,EAAKlmB,OAQxC,KAAM0qB,IAAgBrsB,eAAKssB,IAErBC,GAAY,CAAExE,MAAO,GAAI/oB,QAAS,iBAER,MACxB,CAAEsjB,gBAAiB/F,IAEnB,CAAEwL,QAAO/oB,WAAYwtB,GAAYD,aAE/B,IAAoBxE,QAAO/oB,UAASsjB,iBC/B9C,YAAsB,CACpBQ,UACAlhB,QACAb,SACAue,SACAgD,gBACoB,iBAGhB,QAAU,OAAM1gB,KAASb,IACzB,QACA,SACA,GAAG,oDAGS,GAAK,GAAEuhB,oCAEb,MAAO1gB,EAAQ0d,EAAOvC,KAAOuC,EAAOE,MACpC,OAAQze,EAASue,EAAOxe,IAAMwe,EAAOG,OACrC,EAAGH,EAAOvC,KACV,EAAGuC,EAAOxe,oBAKd,MAAOc,EAAQ0d,EAAOvC,KAAOuC,EAAOE,MACpC,OAAQze,EAASue,EAAOxe,IAAMwe,EAAOG,OACrC,EAAGH,EAAOvC,KACV,EAAGuC,EAAOxe,IACV,OAAO,QACP,YAAY,IACZ,KAAK,gBAENgiB,kBAAU,OAAOuB,IAAW,KAAMvB,EAAQ,KAC1CA,kBAAU,OAAOmB,IAAY,KAAMnB,EAAQ,OAC3C,SACA,SACA,IAAgB,KAAK,IAAI,YACzB,IAAgB,KAAK,IAAI,iBAEvB,UAAU,YAAY,MAAO,CAAEpD,cAAe,oBAC9C0E,SACAV,aAMT,KAAM+I,IAAkBzsB,eAAK0sB,gBAEG,CAAE5J,WAAyB,MACnD,CAAElhB,QAAOb,SAAQue,SAAQgD,gBAAiB/F,aAG7C,IAAsBuG,UAASlhB,QAAOb,SAAQue,SAAQgD,iBCzE3D,YAAsB,EAAO,EAAQ,EAAS,GAAI,EAAS,GAAI,OACtD,GAAS,GAAQ,GAAO,OAAO,GAAU,cAcT,EAAkC,MACnE,GAAc,KACd,EAAejV,EACnB,EAAY,QACZ,0BACA,CACE,IAAK,MACL,GAAI,cAID3O,mBAAQ,IAAM,YACA,EAAW,OACrB,CAAC,EAAY,EAAY,MAAO,EAAS,GAAI,EAAS,KAEzD,EACA,GAAQ,OAAO,IAAQ,OACrB2O,EAAU,EAAc,GAAG,EAAE,iBAAiB,IAAa,QAE7D,KAKF,CAAC,QACI,UAGL,MAAO,IAAY,eACd,GAAU,MACR,MAAM,QAAQ,SAChB,GAAQ,IAAI,AAAC,GAAM,EAAU,SAE9B,OAAM,6CAEb,CAAC,EAAS,gBAGqB,EAAwB,GAClD,OAAO,GAAO,YAChB,GAAY,EAAM,YAAY,WAC7B,GAAY,EAAI,EAAM,OAAO,GAAW,MAAM,IAAI,OAAS,EAAI,EC9CxE,KAAMlL,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAmCf,YAAsB,CAAE2uB,SAAQC,UAAU,MAClC/rB,GAAW6I,qBAAWH,IACtB,CAAE1D,SAAQC,OAAMC,SAAQC,OAAMP,QAASiE,qBAAWzD,IAClD,CACJqZ,SACA1d,QACAb,SACAmgB,iBACAH,UACAC,UACAsC,WACAoB,YACA7gB,OACA2a,YAAa,CAAEC,iBACblC,IAEEsQ,EACJhsB,GACAisB,GAAYH,EAAQ,CAClB9mB,OAAQhF,EAASuH,EACjBrC,OAAQlF,EAASwH,IAGf0kB,EAAYrI,EAAUY,MAAM,KAC5B,CAAC0H,EAASC,GAAWC,GAAyBH,GAE9CnO,EAASlgB,kBAAQ,IAAM,IACvB,CAACkuB,GAAUA,EAAOxrB,SAAW,QACxBqgB,IAAY,CAAE7f,QAAO0d,SAAQyB,eAElCtC,IAAiBvB,EAAQQ,YAAY/b,UAC/BkrB,OACDM,GAAOC,WACPD,GAAOE,gBACH5L,IAAY,CAAE7f,QAAO0d,SAAQyB,gBAEjCoM,GAAOG,cACH3L,IAAY,CAAE5gB,SAAQue,SAAQ0B,0BAG9B,YAGN,OACN,CAAC4L,EAAQ7rB,EAAQue,EAAQb,EAAcoO,EAASjrB,EAAOmf,EAASC,IAE7DnC,EAASngB,kBAAQ,IAAM,IACvB,CAACkuB,GAAUA,EAAOxrB,SAAW,QACxBugB,IAAY,CAAE5gB,SAAQue,SAAQ0B,eAEnCvC,IAAiBvB,EAAQQ,YAAY/b,UAC/BkrB,OACDM,GAAOE,gBACH1L,IAAY,CAAE5gB,SAAQue,SAAQ0B,gBAElCmM,GAAOC,aACHR,GAAO,GACVhJ,GAAYN,EAASsJ,EAAO,GAAGjrB,IAAK2d,EAAOxe,KAC3C,SAEDqsB,GAAOG,cACHV,GAAO,GACVhJ,GAAYN,EAASsJ,EAAO,GAAGjrB,IAAK2d,EAAOvC,MAC3C,mBAGG,YAGN,OACN,CAAC6P,EAAQ7rB,EAAQue,EAAQb,EAAcoO,EAAS7L,EAASsC,OAG1D,CAACpC,GACD,CAACrgB,GACDA,EAASwH,EAAI,IACbxH,EAASuH,EAAI,IACbvH,EAASuH,EAAIxG,EAAQ0d,EAAOE,OAC5B3e,EAASwH,EAAItH,EAASue,EAAOG,aAEtB1gB,UAAK,IAAKoD,UAEborB,GAAiBC,GAAc,IAC/BjL,GAAuB,QACvBsK,IAAYM,EAAOC,SACb,EACCP,IAAYM,EAAOG,YACpB,GAEN/K,GAAS,MAAQ3D,GAAU,KAAM,MAC7BkC,GAAQ2M,GAAYb,EAAOrK,IAC3BmL,EAASC,GAAkB7M,EAAM1Y,EAAGwW,EAAOgP,OAAOJ,UACjD1M,GAAMzY,EAAEqlB,SAEV,IAGHG,EAAY,CAACzlB,EAAmB,OAAS,IACzCwW,GAAU,YACJiO,OACDM,GAAOE,cACPF,GAAOC,aACHxO,GAAOgP,OAAOxlB,GAAQvH,EAASuH,OAEnC+kB,GAAOG,cACH1O,GAAOgP,OAAOxlB,GAAQvH,EAASwH,iBAG/B,SAGN,IAGHylB,EAAY,IAAM,IAClBjP,GAAU,YACJgO,OACDM,GAAOE,cACPF,GAAOC,aACHvO,GAAO+O,OAAO/sB,EAASwH,OAE3B8kB,GAAOG,cACHzO,GAAO+O,OAAO/sB,EAASuH,iBAGvB,SAGN,IAGH2lB,EAAY,IAAM,QACdlB,OACDM,GAAOC,gBAEOvnB,MAAyBC,IAASkoB,OAAOC,WACxD,KACAC,QAAQ,OAEPf,GAAOG,iBAEOvnB,MAAyBC,IAASgoB,OAAOC,WACxD,KACAC,QAAQ,iBAGH,KAIPC,EAAY,IAAM,QACdtB,OACDM,GAAOC,gBACQvnB,GAAUgoB,EAAU/nB,IAAOsoB,YAAY,OAEtDjB,GAAOG,iBACQvnB,GAAU8nB,EAAU7nB,IAAOooB,YAAY,iBAGlD,KAIPC,EAAW,CAACC,EAASC,EAAShJ,IAC3BsH,IAAYM,EAAOE,UACxBvuB,EAAC+d,8BACEyR,QAAWvvB,EAAC,IAAG,GAAIwmB,YAGtBgJ,EAIEC,EAAY,IAAM,IAClB3B,IAAYM,EAAOE,UAAW,MAC1B,CAAEoB,OAAMC,OAAMC,OAAMC,OAAMC,MAAMhrB,EAAKqd,EAAeqB,OACvD1e,KAEGirB,MAAgBH,OAAW,GAAGvtB,OAAS,GACvC2tB,MAAgBH,OAAWxtB,OAAS,GACpCssB,GAASnuB,KAAKyvB,WAAqBL,GAAQG,IAC3CG,GAAS1vB,KAAKyvB,WAAqBJ,GAAQG,UAE7CrB,IAAS,GAAKA,IAAUmB,GAAE,GAAGztB,QAC7B6tB,GAAS,GAAKA,IAAUJ,GAAEztB,OAAe,EAEtCytB,GAAEI,IAAQvB,UAEZ,UAIP5uB,UAAK,IAAKqD,aACRrD,mBACEA,UAAM,UAAU,kBAASuvB,EAAS,KAAM,IAAKtB,EAAU,YACvDhuB,UAAM,UAAU,iBAASiuB,EAAQa,OACjC9uB,UAAM,UAAU,2BAGlBD,mBACEA,UAAM,UAAU,kBAASuvB,EAAS,KAAM,IAAKtB,EAAU,YACvDhuB,UAAM,UAAU,iBAASkuB,EAAQa,OACjC/uB,UAAM,UAAU,2BAElBD,mBACEC,UAAM,UAAU,iCAChBA,UAAM,UAAU,iBAASyvB,SAE1B/oB,IAAS,YACR3G,mBACEC,UAAM,UAAU,kCAChBA,UAAM,UAAU,iBAASovB,SAI5B1oB,IAAS,YACR3G,mBACEC,UAAM,UAAU,8BAChBD,UAAM,UAAU,kBAASivB,iBCpQnC,KAAM1nB,IAAuB,CAC3BlD,OAAQ,YACR2Z,gBAAiB,eACjBjc,SAAU,WACVC,IAAK,QACLic,KAAM,QACN7Z,WAAY,OACZwc,cAAe,OACfC,SAAU,UACVuP,WAAY,OACZttB,MAAO,OACPc,UAAW,SAGb,YAAwB,CAAEiqB,SAAQC,UAAU,MACpC/rB,GAAW6I,qBAAWH,IACtB,CAAE9D,QAASiE,qBAAWzD,IACtB,CACJqZ,SACA1d,QACAb,SACAggB,UACAC,UACAsC,WACAoB,YACAxD,kBACE3E,IAEEsQ,EACJhsB,GACAisB,GAAYH,EAAQ,CAClB9mB,OAAQhF,EAASuH,EACjBrC,OAAQlF,EAASwH,IAGf0kB,EAAYrI,EAAUY,MAAM,KAC5B,CAAC0H,EAASC,GAAWC,GAAyBH,GAE9CnO,EAASlgB,kBAAQ,IAAM,IACvB,CAACwiB,GAAkB,CAAC0L,GAAUA,EAAOxrB,SAAW,QAC3CqgB,IAAY,CAAE7f,QAAO0d,SAAQyB,mBAG9B8L,OACDM,GAAOC,WACPD,GAAOE,gBACH5L,IAAY,CAAE7f,QAAO0d,SAAQyB,gBAEjCoM,GAAOG,cACH3L,IAAY,CAAE5gB,SAAQue,SAAQ0B,0BAG9B,QAEV,CACDE,EACA0L,EACA7rB,EACAue,EACAuN,EACAjrB,EACAmf,EACAC,IAGInC,EAASngB,kBAAQ,IAAM,IACvB,CAACwiB,GAAkB,CAAC0L,GAAUA,EAAOxrB,SAAW,QAC3CugB,IAAY,CAAE5gB,SAAQue,SAAQ0B,mBAG/B6L,OACDM,GAAOE,gBACH1L,IAAY,CAAE5gB,SAAQue,SAAQ0B,gBAElCmM,GAAOC,aACHR,GAAO,GACVhJ,GAAYN,EAASsJ,EAAO,GAAGjrB,IAAK2d,EAAOxe,KAC3C,SAEDqsB,GAAOG,cACHV,GAAO,GACVhJ,GAAYN,EAASsJ,EAAO,GAAGjrB,IAAK2d,EAAOvC,MAC3C,mBAGG,QAEV,CAACmE,EAAgB0L,EAAQ7rB,EAAQue,EAAQuN,EAAS7L,EAASsC,OAG5D7d,IAAS,YACT,CAAC5E,GACDA,EAASwH,EAAIiX,EAAOxe,KACpBD,EAASuH,EAAIkX,EAAOvC,MACpBlc,EAASuH,EAAIxG,EAAQ0d,EAAOE,OAC5B3e,EAASwH,EAAItH,EAASue,EAAOG,aAEtB,WAGHoO,GAAY,CAACzlB,EAAI,OAAS,QACtBykB,OACDM,GAAOE,cACPF,GAAOC,aACHxO,kBAAQgP,OAAOxlB,GAAQvH,EAASuH,OAEpC+kB,GAAOG,cACH1O,kBAAQgP,OAAOxlB,GAAQvH,EAASwH,iBAGhC,KAIPylB,EAAY,IAAM,QACdjB,OACDM,GAAOE,cACPF,GAAOC,aACHvO,kBAAQ+O,OAAO/sB,EAASwH,OAE5B8kB,GAAOG,cACHzO,kBAAQ+O,OAAO/sB,EAASuH,iBAGxB,qBAOT,MAAO,OACF/B,IADE,CAELyY,UAAY,aAAYje,EAASuH,QAAQvH,EAASwH,sCAG7C4kB,EAAQa,iBACT,MAAO,CAAElrB,MAAO,iBAAW,gBAC3B,MAAO,CAAEA,MAAO,gBAAUoqB,EAAQa,SARpC,iBCtGV,YAAmB,EAAgB,EAAkB,EAAS,GAAI,OACzD1hB,IAAY,GAAO,GAAgB,CAAC,EAAS,EAAQ,ICrB9D,YAA8B,CAC5BmT,OAAQ4E,EAAc,GACtBrgB,QAC4B,MACtB,CAAEjC,QAAO0d,OAAQ6E,EAAcpD,UAASuB,gBAAiB/F,IACzDgH,EAAWC,GAAYC,GAAoBW,OAE3CrjB,EAASojB,EAAarjB,IAEtB6iB,EAAQjlB,kBAAQ,IAAM,IACtBmF,EAAM,MACF,CAAEuE,IAAGyb,GAAIxb,GAAMxE,EACf+a,EAAS6C,GAAY,CAAEnC,OAAQ6E,EAAcviB,QAAOmf,YAEpDlC,EAASlS,GAAU5L,EAAQsH,EAAG6b,GAC9BJ,EAAaP,EAAS,CAAEnb,IAAGC,MAE3B0b,EAAc,GAAInC,MACZI,OAAOpD,EAAOkF,EAAW1b,EAAE,IAAKyW,EAAOiF,EAAWzb,EAAE,YACvD0Z,GAAI,EAAGA,EAAI+B,EAAW1b,EAAEhH,OAAQ2gB,MAC3BE,OAAOrD,EAAOkF,EAAW1b,EAAE2Z,IAAKlD,EAAOiF,EAAWzb,EAAE0Z,WAG3DgC,GAAYtkB,wBAIpB,CAACoE,EAAM9C,EAAQmjB,EAAaC,EAAcviB,EAAOmf,EAASwC,UAEzD,CAAC3hB,GAAS,CAACb,EACN,cAIF,QAAU,OAAMa,KAASb,IAAU,QAAc,oDAExC,GAAK,GAAEuhB,+BAEb,MAAO1gB,EAAQuiB,EAAapH,KAAOoH,EAAa3E,MAChD,SACA,EAAG2E,EAAapH,KAChB,EAAI,GAAE,iBAIT,SAAW,QAAOuF,iCAEjB,MAAO1gB,EAAQuiB,EAAapH,KAAOoH,EAAa3E,MAChD,SACA,EAAG2E,EAAapH,KAChB,EAAI,GAAE,IACN,YAAY,gBAER,UAAU,OAAO,OAAO,MAAM,KAAK,OAAO,EAAG4G,UAM3D,OAAe3jB,eAAKmvB,IC3DpB,YAA4B,CAC1B7P,OAAQ6D,EAAc,GACtBtf,QAC0B,MACpB,CACJ9C,OAAQsiB,EACR/D,SACA0B,UACAsB,gBACE/F,IACEgH,EAAWC,GAAYC,GAAoBC,OAE3C3iB,EAASue,EAAOvC,KAEhB4G,EAAQjlB,kBAAQ,IAAM,IACtBmF,EAAM,MACF,CAAEuE,IAAGyb,GAAIxb,GAAMxE,EACf+a,EAAS+C,GAAY,CAAE5gB,OAAQsiB,EAAc/D,SAAQ0B,YAErDnC,EAASlS,GAAU5L,EAAQsH,EAAG8a,GAE9BW,EAAaP,EAAS,CAAEnb,IAAGC,MAE3B0b,EAAc,GAAInC,MAEZI,OACVnD,EAAOiF,EAAWzb,EAAEyb,EAAWzb,EAAEjH,OAAS,IAC1Cwd,EAAOkF,EAAW1b,EAAEhH,OAAS,WAGtB2gB,GAAI+B,EAAW1b,EAAEhH,OAAS,EAAG2gB,GAAK,EAAGA,MAChCE,OAAOpD,EAAOiF,EAAWzb,EAAE0Z,IAAKnD,EAAOkF,EAAW1b,EAAE2Z,WAG3DgC,GAAYtkB,wBAIpB,CAACoE,EAAM9C,EAAQue,EAAQ6D,EAAaE,EAAcE,EAAUvC,IAEzDgD,EAAaX,EAAe/D,EAAOG,OAASH,EAAOxe,UAErD,CAACkjB,GAAc,CAACjjB,EAAe,cAI/B,QAAU,OAAMA,KAAUijB,EAAa1E,EAAOxe,MAC9C,MAAOC,EACP,OAAQijB,EAAa1E,EAAOxe,+CAGhB,GAAK,GAAEwhB,gCACT,MAAOvhB,EAAQ,OAAQijB,EAAY,EAAE,IAAI,EAAG1E,EAAOxe,iBAG1D,SAAW,QAAOwhB,iCACb,UAAU,OAAO,OAAO,MAAM,KAAK,OAAO,EAAGqB,SAM3D,OAAe3jB,eAAKovB,ICpEpB,aAAuB,MACf,CACJxtB,QACAb,SACAue,SACA4B,iBACArd,KAAMif,EACN/B,UACAC,WACEzE,IACE1b,EAAWwuB,KAEXC,EAAU5wB,kBAAQ,IAAM,IACxBmC,GAAYqgB,GAAkBA,EAAevf,GAAI,MAC7C,CAAEyG,IAAGC,KAAMxH,EACX0uB,EAAW9N,GAAY,CAAEnC,SAAQ1d,QAAOmf,YACxCyO,EAAW7N,GAAY,CAAErC,SAAQve,SAAQigB,YACzCnd,EAAO4rB,GAAS3M,EAAQ5B,EAAeqB,OAAmB,CAC9Dna,EAAGmnB,EAAS3B,OAAOxlB,GACnBC,EAAGmnB,EAAS5B,OAAOvlB,qBAIjB,QAAU,OAAMzG,KAASb,IACzB,QACA,SACA,MAAO,CACLF,SAAU,WACVkB,gBAAiB,mCAGlB8B,kBAAM6rB,eACJP,IAAqB,KAAMtrB,EAAK6rB,WAAW7rB,OAE7CA,kBAAM8rB,aAAaP,IAAmB,KAAMvrB,EAAK8rB,SAAS9rB,gBAI1D,OACN,CACDhD,EACAqgB,EACA5B,EACA1d,EACAmf,EACAhgB,EACAigB,EACA8B,UAGGjiB,GAIEyuB,EAHE,KC9BX,YAAkB,CAAExT,YAAYQ,QAA4B,MACpD3V,GAAQ4V,IACR,CACJiC,YAAa,CAAEC,gBACfpC,YACAxY,OACAyb,SACAmF,oBACAC,aACE/d,EAEEC,EAAWgpB,IACX,CAAE5M,QAASwJ,GAAY,CAAExJ,KAAM,KAC/B2C,EAAY3C,EAAKE,MAAQ,UAAYF,IAErC6M,EAAenxB,kBAAQ,IAEpBquB,AADWrI,EAAUY,MAAM,KACjB9E,OAAY,CAACC,EAAKqP,IAAM,YACnCrL,KAAkBqL,KAAlBrL,cAAsB9iB,GAAI,MACtBA,GAAK8iB,KAAkBqL,KAAlBrL,cAAsB9iB,GAC3ByhB,EAAWvf,EAAKksB,KACnBjP,GAAUA,EAAMnf,KAAOA,GAAM,CAACmf,EAAMkC,KAAKgN,OAExC5M,KACE9jB,KAAK8jB,UAGP9jB,KAAK,YAEJmhB,IACN,IACF,CAACiE,EAAW7gB,EAAM4gB,IAEfwL,EAAYC,GAAqBvpB,GAEjCwpB,EAAiBvvB,sBACpBwvB,GAAc,IAETvD,AADYC,GAAYmD,EAAWG,IAEjCA,GAAU3oB,UAKH2oB,EAAU5oB,gBACXiX,OACDvB,GAAQO,OAAO9b,KACT,GAAE4F,KAAM8oB,IAAgBD,sBAM7B3R,cAEAA,GAAgB,WACX7X,GAAS,KACdW,KAAM+oB,IACHF,GAFW,CAGdvD,QAASC,GAAYmD,EAAWG,QAO9C,CAAC3R,EAAc7X,EAAUqpB,IAGrBM,EAAsB3vB,sBACzBxB,GAAM,MACC,CAAEgJ,EAAGvC,EAAQwC,EAAGtC,GAAW3G,EAC3BytB,EAAUC,GAAYmD,EAAW,CAAEpqB,SAAQE,WAC7C8mB,KACO,CAAEtlB,KAAMipB,GAAe3D,aAGpC,CAACoD,EAAWrpB,IAGR6pB,EAAcrpB,GAAU,MACtB,CAAEgB,EAAGvC,EAAQwC,EAAGtC,GAAWqB,EAC3BylB,EAAUC,GAAYmD,EAAW,CAAEpqB,SAAQE,WAE7C8mB,KACEA,IAAY,YACL,GAAEtlB,KAAMmpB,IAAiBtpB,GAEzB,CAAEG,KAAMopB,GAAUvpB,QAAOylB,aAKlC+D,EAAahwB,sBAChBC,GAAa,GAQd,CAAC4d,UAGEkH,KAUF,aACE,CAAC,CAAE/jB,QAAOb,cACR,IAAwB,QAAc,qBACpC,IAAQ,YAAsB,cAC9B8C,GAAQA,EAAKzC,OAAS,KACpB,IACC,QAAS+uB,EACT,cAAeI,EACf,QAASK,EACT,OAAQH,EACR,MAAO,CACL7uB,MAAO,OACPb,OAAQ,OACRue,OAAQ,OACRze,SAAU,WACV8e,SAAU,qBAGX,IACC,MAAO,CAAE/d,MAAO,OAAQb,OAAS,OAAOF,SAAU,sBAEjD4d,GAAgBA,IAAiBvB,EAAQQ,YAAY/b,MACnD,SAGF,OACAkuB,KACE,IAAe,OAAQA,EAAc,OAAQI,MAG/C,IACC,UAAWlS,GAAWG,GACtB,gBAAiB+R,EAAU5C,4BAG1BwC,kBAAe,OACb,IACC,UAAW9R,GAAWC,EACtB,gBAAiBiS,EAAU7C,OAC3B,OAAQ9N,EAAOxe,MAGlB+uB,kBAAe,OACb,IACC,UAAW9R,GAAWE,EACtB,gBAAiBgS,EAAU3C,QAC3B,MAAOhO,EAAOvC,UAInB8S,KACEgB,IAAa,OAAQhB,EAAc,OAAQI,MAG7C,IAAQ,QAASJ,gBA9D3B,IACC,UAAU,oDACV,cAAe,iBA4EiBrxB,EAAqC,MACrEoI,GAAWgpB,IACX,CAAEhuB,QAAOb,SAAQoF,YAAa3H,6BAE1B,IAAM,GACL,CAAE+I,KAAMupB,GAAqBlvB,QAAOb,YAC5C,CAACa,EAAOb,EAAQ6F,IAEZT,OC5NI,IAAc,cACd,GAAc,cACd,GAAY,YAWZ,GAAgC,CAC3C,OAAQ,KACR,OAAQ,MAGV,YAA2B,EAAmB,EAAQ,QAC5C,EAAO,UACR,MACG,OAAS,CAAC,EAAa,OAAS,GAAU,EAAQ,aAGrD,MACG,OAAS,CAAC,EAAa,OAASwG,GAAU,EAAQ,aAGrD,IAAW,GACR,OAAS,CAAC,EAAa,OAC3B,GAAU,EAAO,QAAS,KACtB,OAAS,CAAC,EAAa,OAC3BA,GAAU,EAAO,QAAS,uBAIrB,IAIb,KAAM,IAAe0O,GAAQ,ICzChB0V,GAAe7qB,wBAA0B8qB,IACzCC,GAAgBF,GAAatnB,sBAEf,OAClBC,sBAAWqnB,iBAOiC,MAC7CG,GAAQC,QAEV,CAACD,EAAMtS,QAAU,CAACsS,EAAMrS,YACpB,IAAIpb,OAAM,8BAGXytB,QCtBI,IAAY,CACvB,SAAU,WACV,WAAY,aACZ,UAAW,YACX,YAAa,cACb,OAAQ,SACR,aAAc,eACd,YAAa,cACb,cAAe,gBACf,aAAc,gBAGH,GAAQ,CACnB,KAAM,OACN,QAAS,UACT,MAAO,QACP,mBAAoB,sBAGT,GAAc,CACzB,KAAM,OACN,MAAO,QACP,YAAa,cACb,WAAY,aACZ,UAAW,YACX,aAAc,gBCvBV,GAAehrB,wBAAmB,IAE3BkrB,GAAgB,GAAa,sBAEf,OAClB1nB,sBAAW,ICFpB,KAAM2nB,IAAW,IAEXC,GAA8C,EACjDC,GAAYC,MAAO,CAClBC,WAAa,WAAUJ,YACvBjP,QAAS,IAEVmP,GAAYG,OAAQ,CACnB5S,UAAW,WACX2S,WAAa,OAAMJ,qBAcjBM,GAA4C,EAC/CJ,GAAYC,MAAO,CAClBI,SAAU,CAAExP,QAAS,GACrByP,QAAS,CAAEzP,QAAS,KAErBmP,GAAYG,OAAQ,CACnBE,SAAU,CAAE9S,UAAW,YACvB+S,QAAS,CAAE/S,UAAW,YACtBgT,QAAS,CAAEhT,UAAW,YACtBiT,OAAQ,CAAEjT,UAAW,0BAUS,EAKd,CALc,QAChC3Y,YACAoB,OACAyqB,mBAAmBL,IAHa,EAI7BnzB,IAJ6B,EAI7BA,CAHH2H,WACAoB,OACAyqB,0BAGMC,GAAM/qB,iBAAO,eAEhB,QAAoB,QAAS+qB,GAASzzB,IAAO,QAAS6yB,YACnD1qB,YAEE,MACA,MAAO,SACF2qB,GAAa/pB,IACbyqB,EAAiBzqB,GAAMZ,IACvBqrB,EAAiBE,yBC1DhC,YAAmBrxB,EAAUsxB,EAAqB,MAC1CC,GAAgB,GACpBvxB,SAAU,QACV7B,QAAS,OACTqD,eAAgB,SAChBC,WAAY,SACZ+vB,cAAe,SACf3S,cAAe,OACfC,SAAU,WACNwS,EACA,CACErxB,IAAM,GAAEqxB,EAAerxB,QACvBic,KAAO,GAAEoV,EAAepV,SACxBhc,OAAS,GAAEoxB,EAAepxB,WAC1Ba,MAAQ,GAAEuwB,EAAevwB,WAE3B,CAAEA,MAAO,OAAQb,OAAQ,gBAGvBF,OACDyxB,IAAUC,eACN,QACFH,GADE,CAEL/vB,eAAgB,aAChBC,WAAY,mBAEXgwB,IAAUE,iBACN,QACFJ,GADE,CAEL/vB,eAAgB,mBAEfiwB,IAAUG,gBACN,QACFL,GADE,CAEL/vB,eAAgB,aAChBC,WAAY,iBAEXgwB,IAAUI,kBACN,QACFN,GADE,CAEL/vB,eAAgB,SAChBC,WAAY,mBAEXgwB,IAAUK,aACN,QACFP,GADE,CAEL/vB,eAAgB,eAGfiwB,IAAUM,mBACN,QACFR,GADE,CAEL/vB,eAAgB,SAEhBC,WAAY,iBAGXgwB,IAAUO,kBACN,QACFT,GADE,CAEL/vB,eAAgB,WAEhBC,WAAY,mBAEXgwB,IAAUQ,oBACN,QACFV,GADE,CAEL/vB,eAAgB,iBAEfiwB,IAAUS,mBACN,QACFX,GADE,CAEL/vB,eAAgB,WAEhBC,WAAY,2BAIP8vB,gBAKmB,EAK7B,CAL6B,QAC9BjsB,YACA+W,QAAS,CAAErc,YACXsxB,kBAH8B,EAI3B3zB,IAJ2B,EAI3BA,CAHH2H,WACA+W,UACAiV,wBAGMhwB,GAASzD,kBACb,IAAMs0B,GAAUnyB,EAAUsxB,GAC1B,CAACtxB,EAAUsxB,UAIXhsB,GAAS/E,OAAS,gBACX,MAAOe,GAAY3D,8BCnG5B,EACA,EACY,OACL,GAAM,OAAO,CAAC,EAAQ,IAAS,MAC9B,GAAM,EAAG,SACV,GAAO,OAAa,GAAO,MACzB,GAAK,KAAK,GACV,GACN,ICNL,KAAM2D,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,eAyB6B,OACnCe,UAAK,IAAKoD,KCSnB,YAAkB,EASA,CATA,QAChBgE,YACA8sB,aAAa,KACbC,SAAS,MACTryB,WAAWyxB,GAAUQ,cACrBpW,UAAU,IACVnV,OACAkqB,aAAaF,GAAYC,MAPT,EAQbhzB,IARa,EAQbA,CAPH2H,WACA8sB,aACAC,SACAryB,WACA6b,UACAnV,OACAkqB,oBAGM0B,GAAOjsB,iBAAY,MACnBksB,EAAWlsB,iBAAY,IACvB,CAACmsB,EAAQC,GAAa5yB,mBAAgB,wBAElC,IAAM,GACT8H,QAAU+qB,SAAS31B,cAAc,YAChCq0B,GAAMkB,EAAK3qB,QACXgrB,EAAcJ,EAAS5qB,cAEzByqB,MACSQ,YAAYxB,GAElB,IAAM,CACPA,GACEgB,MACUnM,QAAQ4M,gBAETC,YAAY1B,MAI5B,CAACgB,SAEE5K,GAASznB,sBAAagzB,GAAU,GACzBC,GAAkB,MACrBC,GAAqBD,EAAczyB,OACnC2yB,EAAiBF,EAAc9Q,OAAQiR,GAAMA,EAAEryB,KAAOiyB,EAAMjyB,UAE9DmyB,GAAqBC,EAAe3yB,QAAUwyB,EAAM1W,QAAQ+W,WACxD/W,QAAQ+W,UAGTF,KAER,IAEGvP,EAAO5jB,sBACX,CAACszB,EAAU,GAAIhX,EAAU,KAAO,MACxBvb,GAAKpC,KAAKC,SAASC,SAAS,IAAI00B,OAAO,EAAG,GAE1CC,EAAe,GACnBvzB,SAAUqc,EAAQrc,UAAYA,EAC9B6b,UACAnV,OACAxF,gBAAiB,QACjBa,MAAO,SACJsa,GAGC0W,EAAa,CACjBjyB,KACAuyB,UACAhX,QAASkX,QAGLC,MAAQ,IAAMhM,EAAOuL,GAEvBA,EAAM1W,QAAQR,QAAS,MACnB4X,GAAU3X,WAAW,IAAM,GACxBiX,KAEEprB,QAAQ+rB,OAAOnB,EAAS5qB,QAAQgsB,QAAQF,GAAU,IAC1DV,EAAM1W,QAAQR,WAERlU,QAAQlJ,KAAKg1B,YAGb3tB,GAAUA,EAAM+jB,OAAOkJ,IAC9BA,EAAM1W,QAAQuX,UAAcvX,QAAQuX,SAEjCb,GAET,CAAC/yB,EAAUwnB,EAAQ3L,EAASnV,IAGxBmtB,EAAU9zB,sBACd,CAACszB,EAAU,GAAIhX,EAAU,QACf3V,KAAOotB,GAAMC,UACX,GAAE7yB,gBAAiB,UAAWa,MAAO,SAAYsa,GAEpDsH,EAAK0P,EAAShX,IAEvB,CAACsH,IAGG3hB,EAAQjC,sBACZ,CAACszB,EAAU,GAAIhX,EAAU,QACf3V,KAAOotB,GAAME,QACX,GAAE9yB,gBAAiB,UAAWa,MAAO,SAAYsa,GACpDsH,EAAK0P,EAAShX,IAEvB,CAACsH,IAGGxB,EAAOpiB,sBACX,CAACszB,EAAU,GAAIhX,EAAU,QACf3V,KAAOotB,GAAMG,OACblyB,MAAQ,UACT4hB,EAAK0P,EAAShX,IAEvB,CAACsH,IAGGuQ,EAAcn0B,sBAClB,CAACszB,EAAU,sBAAuBhX,EAAU,QAClC3V,KAAOotB,GAAMK,qBACbtY,QAAU,IACV3a,gBAAkB,UAEnB,GAAIkzB,SAASC,GAAY,MACxBtB,GAAQpP,EAAK0P,EAAShX,cACjB,IAAM,GACP,IAAMmL,EAAOuL,KACpB,QAGP,CAACvL,EAAQ7D,IAGL2Q,EAAev0B,sBAClBgzB,GAAU,GACFA,IAET,CAACvL,IAGG+M,EAAmBC,GAAQhC,EAASO,GAAUA,EAAM1W,QAAQrc,UAE5Dy0B,EAAc52B,kBAAQ,IACnBu0B,EACHA,EAAWjrB,wBACX,CACElH,IAAK,EACLic,KAAM,EACNnb,MAAO2C,OAAOgxB,WACdx0B,OAAQwD,OAAOixB,aAEpB,CAACvC,IAEEwC,EAAoB/2B,kBACxB,MAAS8lB,OAAMkQ,UAAS7xB,QAAOmgB,OAAM+R,gBACrC,CAACvQ,EAAMkQ,EAAS7xB,EAAOmgB,EAAM+R,aAI5B3D,IAAc,MAAOqE,YACnBtvB,EACAgtB,EAAK3qB,SACJktB,0BACG7Y,6BACEyD,OAAOC,KAAK+R,IAAWpxB,IAAKwf,GAAQ,MAC7B7f,GAAWyxB,GAAU5R,YAGxB,QACC,UAEA,QAAS,CAAE7f,WAAU80B,OAAQ,QAC7B,UAAWC,GACX,eAAgBN,GACZ92B,aAEH42B,EAAiBv0B,GACdu0B,EAAiBv0B,GAAUK,IAAK0yB,KAC7BiC,IAAW,KAAMpE,oBAEd,MAAO,CACLnS,OAAQ4T,EACRj0B,QAAS,OACTuD,aAAc,OACdkd,cAAe,MACf3d,gBAAiB6xB,EAAM1W,QAAQnb,gBAC/Ba,MAAOgxB,EAAM1W,QAAQta,MACrBkzB,UAAW,OACXj1B,SAAU,kCAKV,MAAO,CACLA,SAAU,WACV2e,MAAO,MACP1e,IAAK,MACLmC,OAAQ,OACRlB,gBAAiB,cACjBa,MAAO,SAET,KAAK,SACL,QAAS,IAAMuyB,EAAavB,cAE3B,4BAGIA,EAAMM,UACZN,EAAM1W,QAAQ3V,OACbotB,GAAMK,sBAAuB,SAnB1BpB,EAAMjyB,KAZoBiyB,EAAMjyB,KAmC3C,OA3CCd,OAgDbsyB,EAAK3qB,YAMf,OAAexI,eAAKyJ,IChQpB,KAAM,IAAevD,wBAAmB,IAC3B,GAAgB,GAAa,sBAEf,OAClBwD,sBAAW,ICFpB,KAAMvH,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAmEf,YAA4B,CAC1BqI,QAAQ,GACR0vB,UAAU,GACV9B,UACAC,WAC0B,MACpB8B,GAAiBp1B,sBACrB,CAACxB,EAAG,CAAE62B,UAAU,IAAM,QAAW,GACvB72B,QAGV,CAAC60B,UAIDn1B,UAAK,QAAc,IAAKqD,aACtBpD,OAAG,UAAU,mBAAWm1B,IACxBn1B,SAAK,UAAU,6BACZg3B,EAAQ70B,IAAKg1B,GACZn3B,YAEE,KAAK,SACL,QAAUK,GAAM42B,EAAe52B,EAAG82B,GAClC,MAAOA,EAAO7vB,OAAS6vB,EAAO7vB,eAE7B6vB,EAAOC,MALHD,EAAOC,YCxFxB,KAAMC,IAAe,CAAC,CAAEC,QAAOpC,UAASqC,cAAe,MAC/CC,GAAcrvB,mBAEd,CAACsvB,EAAS,CAAE50B,QAAOb,WAAY01B,GAAQ,aAGvC,MAAO,CACL11B,OAAQ,OACR/B,QAAS,QACT2gB,SAAU,iBAGX7hB,uBAAau4B,EAAMK,UAAW,OAC1BL,EAAMnZ,SADoB,CAE7B+W,UACA5tB,MAAO,CAAElD,OAAQ,4CAMf,IAAM,CACVwzB,SAAS51B,IAAW41B,SAAS/0B,IAAU,CAAC20B,EAAY/tB,YAC1CA,QAAU,CAAE5G,QAAOb,YACtB,CAAEs1B,QAAO1J,OAAQ,CAAE/qB,QAAOb,cAEpC,CAACa,EAAOb,EAAQw1B,EAAaD,EAAUD,IAEnCG,GCPHxE,GAAwB,EAC3BT,GAAYC,MAAO,CAClBI,SAAU,CAAExP,QAAS,GACrByP,QAAS,CAAEzP,QAAS,KAErBmP,GAAYG,OAAQ,CACnBE,SAAU,CAAE9S,UAAW,YACvB+S,QAAS,CAAE/S,UAAW,YACtBgT,QAAS,CAAEhT,UAAW,YACtBiT,OAAQ,CAAEjT,UAAW,cAazB,YAAkB,CAChB3Y,WACAE,QAAQiW,OACR4W,SAAS,MACTryB,WAAWyxB,GAAUK,OACrBlB,aAAaF,GAAYG,MACzBuB,aAAa,MACG,MACVE,GAAOjsB,mBACP0vB,EAAW1vB,mBACX,CAACmvB,EAAOQ,GAAYn2B,yCAEhB,IAAM,GACT8H,QAAU+qB,SAAS31B,cAAc,YAChCq0B,GAAMkB,EAAK3qB,cACbyqB,MACSQ,YAAYxB,GAElB,IAAM,CACPA,GACEgB,KACSU,YAAY1B,KAI5B,CAACgB,SAEEoB,GAAQzzB,sBACZ,UAAiB,GACN,OAEX,CAACi2B,IAGGvB,EAAc52B,kBAAQ,IACnBu0B,EACHA,EAAWjrB,wBACX,CACElH,IAAK,EACLic,KAAM,EACNnb,MAAO2C,OAAOgxB,WACdx0B,OAAQwD,OAAOixB,aAEpB,CAACvC,IAWEzO,EAAO5jB,sBACX,CAAC81B,EAAWxZ,EAAU,KAAO,MACrB4Z,GAAc,CAClBJ,YACAxZ,QAAS,GAAE6Z,iBAAkB,GAAMC,eAAgB,IAAU9Z,aAGxDmX,MAAQA,IAENyC,GACLA,EAAO5Z,QAAQuX,UAAevX,QAAQuX,SACnCqC,GAET,CAACzC,IASG4C,EAAoBr2B,sBACxB,CAACs2B,EAAeha,EAAU,CAAE8Z,eAAgB,MAAY,MAChDF,GAAc,CAClBJ,UAAW33B,EAACo4B,QAAkBD,IAC9Bha,QAAS,GAAE6Z,iBAAkB,IAAS7Z,aAGjCmX,MAAQA,IAENyC,GACLA,EAAO5Z,QAAQuX,UAAevX,QAAQuX,SAEnCqC,GAET,CAACzC,wBAGO,IAAM,YACMj1B,EAAG,CACjB,CAAC,SAAU,OAAOsf,SAAStf,EAAEshB,0BAI1B0W,iBAAiB,UAAWC,EAAY,IAC1C,IAAM9D,SAAS+D,oBAAoB,UAAWD,EAAY,KAChE,CAAChD,SAEElyB,GAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IAoBTu5B,EAA4BlB,kBAAOnZ,QAAQ6Z,kBAC7C,CAAEh1B,gBAAiB,yBACnB,CAAE2d,cAAe,QAEf8X,EAAoB94B,kBACxB,MAAS8lB,OAAM6P,QAAO4C,sBACtB,CAACzS,EAAM6P,EAAO4C,IAGVQ,EAAuB72B,sBAC3B,CAAC,CAAEy1B,QAAO1J,YAAa,MACf/qB,GAAQy0B,EAAMnZ,QAAQtb,MACxBy0B,EAAMnZ,QAAQtb,MACd+qB,EAAO/qB,MAAQ0zB,EAAY1zB,MAC3B0zB,EAAY1zB,MACZ+qB,EAAO/qB,MACLb,EAASs1B,EAAMnZ,QAAQnc,OACzBs1B,EAAMnZ,QAAQnc,OACd4rB,EAAO5rB,OAASu0B,EAAYv0B,OAC5Bu0B,EAAYv0B,OACZ4rB,EAAO5rB,SAEFyH,QAAQkvB,WAAW,CAAE91B,QAAOb,YAEvC,CAACu0B,EAAYv0B,OAAQu0B,EAAY1zB,cAIjC9C,GAAC,IAAc,MAAO04B,YACnBrxB,EACAgtB,EAAK3qB,SACJktB,wBACE32B,EAAC8d,6BACEwZ,EACCt3B,SACE,IAAKoD,EACL,MAAO,KACFo1B,YAGLx4B,EAAC,IACC,UAQA,QAAS,CACP8B,SAAUw1B,EAAMnZ,QAAQrc,SACpBw1B,EAAMnZ,QAAQrc,SACdA,GAEN,eAAgBy0B,EAChB,UAAWM,YAEX72B,EAAC82B,IACC,KACEQ,EAAMnZ,QAAQuU,WACV4E,EAAMnZ,QAAQuU,WACdA,EAEN,iBAAkB,OACbO,IADa,CAEhBE,QAAS,CACPtwB,MAAOy0B,EAAMnZ,QAAQtb,MAChB,GAAEy0B,EAAMnZ,QAAQtb,UACjB,QAENb,OAAQs1B,EAAMnZ,QAAQnc,OACjB,GAAEs1B,EAAMnZ,QAAQnc,WACjB,kBAINhC,EAAC,IACC,SAAUu2B,EAAY1zB,MACtB,UAAW0zB,EAAYv0B,OACvB,IAAK61B,EACL,QAAS,CACPh1B,MAAOy0B,EAAMnZ,QAAQtb,MACjBy0B,EAAMnZ,QAAQtb,MACd,OACJb,OAAQs1B,EAAMnZ,QAAQnc,OAClBs1B,EAAMnZ,QAAQnc,OACd,OACJqH,EAAG,EACHC,EAAG,GAEL,UAAU,gBACV,MAAO,OACFhC,GADE,CAELiZ,OAAQ4T,EACRryB,SAAU,SACV6e,cAAe,MACfwP,WAAY,SAEd,eAAgBmH,EAAMnZ,QAAQ8Z,eAC9B,oBAAoB,SACpB,qBAAsB,YAEtBj4B,EAAC,IACC,QACA,QAASs1B,EACT,SAAUoD,OA/BTpB,EAAM10B,KA/BX2wB,GACE+D,EAAMnZ,QAAQuU,WACV4E,EAAMnZ,QAAQuU,WACdA,MAiEV,OAEN0B,EAAK3qB,iBCxRFmvB,IAAgBzxB,wBAAmB,IAEnC0xB,GAAiBD,GAAcluB,sBAEhB,OACnBC,sBAAWiuB,ICOpB,KAAMx1B,IAAyC,CAC7C01B,MAAO,CACLh3B,SAAU,QACVC,IAAK,EACLic,KAAM,EACN2C,cAAe,OACf3d,gBAAiB,OACjB9C,QAAS,MACTuD,aAAc,MACdI,MAAO,QACPk1B,WAAY,SACZr1B,SAAU,OACVs1B,WAAY,SACZC,WAAY,SAahB,YAAiB,CACf3xB,QAAQ,CAAEwxB,MAAO,GAAII,cAAe,IACpC7xB,YAAY,GACZ8xB,iBAAiB,QACjB/xB,WACAgyB,QACAjF,SAAS,CAAE9qB,EAAG,EAAGC,EAAG,IACL,MACT+vB,GAAWlxB,iBAAuB,MAClCmxB,EAAanxB,iBAAuB,MAEpC,CAACoxB,EAAWC,GAAgB73B,mBAAS,CAAE0H,EAAG,EAAGC,EAAG,IAChD,CAACmc,EAAMgU,GAAe93B,mBAAS,IAC/B,CAAE+3B,qBAAsBC,+BAEd,IAAM,MACdC,GAAoB,IAAM,IAC1BvwB,GACAC,KAEA+vB,EAAS5vB,UAAY,MAAQ6vB,EAAW7vB,UAAY,WAC/C,WAGHowB,GAAgBR,EAAS5vB,QAAQR,wBACjC6wB,EAAkBR,EAAW7vB,QAAQR,+BAEnCkwB,OACD,SACC,CAACW,EAAgBj3B,QAEnBg3B,EAAc73B,OAAS,EACrB63B,EAAc73B,OAAS,EAAK83B,EAAgB93B,OAC5C63B,EAAc73B,iBAEf,UACC63B,EAAch3B,QAEhBg3B,EAAc73B,OAAS,EACrB63B,EAAc73B,OAAS,EAAK83B,EAAgB93B,OAC5C63B,EAAc73B,iBAEf,QAED63B,EAAch3B,MAAQ,EACpBg3B,EAAch3B,MAAQ,EAAKi3B,EAAgBj3B,MAC3Cg3B,EAAch3B,QACd,CAACg3B,EAAc73B,iBAEhB,WAED63B,EAAch3B,MAAQ,EACpBg3B,EAAch3B,MAAQ,EAAKi3B,EAAgBj3B,MAC3Cg3B,EAAch3B,QACdg3B,EAAc73B,uBAGd,IACA,cAGD,CAAEqH,EAAGA,EAAIwwB,EAAcxwB,EAAGC,EAAGA,EAAIuwB,EAAcvwB,OAGpDmc,EAAM,MACFsU,GAAKH,IAEPG,KACWA,KAGhB,CAACZ,EAAgB1T,SAEduU,GAAmBn4B,sBAAY,IAAM,GAC7B,KACX,IAEGkJ,EAAoBlJ,sBAAY,IAAM,GAC9B,KACX,aAGAic,uCAEG,MAAO,GACLhc,SAAU,WACVE,OAAQ,OACR/B,QAAS,OACTqD,eAAgB,SAChBC,WAAY,UACT+D,EAAM4xB,eAEX,IAAKG,EACL,YAAaW,EACb,WAAYjvB,eAIb0a,GACCkR,iCAEI,IAAK2C,EACL,MAAO,SACFl2B,GAAO01B,OADL,CAEL/Y,UAAY,aAAYwZ,EAAUlwB,EAAI8qB,EAAO9qB,OAC3CkwB,EAAUjwB,EAAI6qB,EAAO7qB,OAEvBstB,OAAQ,YACLtvB,EAAMwxB,OAEX,+BAEM,MAAO,CAAEnY,cAAe,iBAAWyY,MAE3CM,MAMV,OAAez4B,eAAKg5B,IC3JpB,KAAM72B,IAAkD,CACtDkF,OAAQ,CACNtF,gBAAiB,cACjBkB,OAAQ,OACRlC,OAAQ,OACR/B,QAAS,OACTqD,eAAgB,SAChBC,WAAY,UAEd22B,IAAK,CACHC,KAAM,UACNz2B,SAAU,SAWd,YAAqBjE,EAAyB,MACtC,CACJiI,UAAU,IAAM,KAChB0yB,aAAa,QACbjB,iBAAiB,OACjB9xB,YAAY,IACV5H,kBAEG,uBACFw6B,IAAQ,MAAOG,EAAY,sCAClB,MAAOh3B,GAAOkF,OAAQ,KAAK,SAAS,qBACzC,IAAQ,MAAOlF,GAAO82B,YAOjC,OAAej5B,eAAKo5B,ICjCpB,KAAMj3B,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAsDTq7B,GAAer7B;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,cAyC0B,CAC7C6F,OACAqd,iBACAtC,SACA/Y,SACAC,OACAmuB,WAC8B,YACxB,CAACqF,EAAcC,GAAmB74B,qBAClC,CAAC84B,EAAWC,GAAsB/4B,mBAAS,IAC3C,CAACg5B,EAAgBC,GAAmBj5B,mBAAS,+BAEzC,IAAM,YACH,IAAM,GACI,KAClB,MACF,wBAEO,IAAM,IACVwgB,GAAkBrb,GAAUC,GAAQ0zB,EAAW,MAC3CpW,GAAWvf,EAAKqd,EAAeqB,UACjCqX,GAAaxW,QACT,IAAI3f,OAAM,oBAGZ,CACJI,KAAM,CAAEuE,EAAGyb,MACXb,QACEI,EAEEqI,EAAO7M,IAASgP,OAAO/nB,GACvB8lB,EAAK/M,IAASgP,OAAO9nB,GAErB,CAAE+zB,YAAWC,WAAYC,GAAgB3xB,EAAG,CAChDqjB,OACAE,OAEIqO,EAAgB,CACpB5xB,EAAGA,EAAE6xB,MAAMJ,EAAWC,GACtBzxB,EAAGwb,EAAGoW,MAAMJ,EAAWC,OAErB,MACII,GAASC,GAAiBH,EAAe,CAC7CI,UAAWpX,EAAKqX,gBAChBC,sBAAuB,GACvBC,mBAAoB,GACpBC,MAAO,OAEO,MACAN,SACTO,WAECC,IAAID,MAGf,CAAC50B,EAAQC,EAAMjC,EAAM+a,EAAQsC,EAAgBsY,IAE5C,AAACE,EAeH56B,SAAK,IAAKqD,aACRrD,SAAK,UAAU,0BACbC,yCAEAA,EAACq6B,IAAY,QAASnF,OAExBl1B,SAAK,UAAU,qBACZu6B,oBAAckB,QAAdlB,cAAqBqB,MAAMz5B,IAAI,CAAC05B,EAAGrY,IAAU,yBAGzB,UAAU,gBACzBzjB,EAAC,IACC,MAAO,IACP,OAAQ,IACR,SAAU,CAAE6gB,SAAU,WACtB,oBAAqB,CAAEV,OAAQ,mBAE/BlgB,EAAC,IAAW,KAAM87B,GAAaD,EAAEE,aACjC/7B,EAAC,IACC,GAAG,IACH,SAAS,OACT,aAAa,QACb,2BACA,eACA,aAAc,GACd,WAAY,KAEdA,EAAC,IACC,GAAG,IACH,SAAS,SACT,aAAa,QACb,gCAGJA,SAAK,UAAU,wBACbA,gBACGu6B,EAAayB,GAAGxY,GACZ,GACC+W,KAAayB,GAAGxY,KAAhB+W,cAAwB0B,iBACrB1B,KAAayB,GAAGxY,KAAhB+W,cAAwB2B,SAAS/M,QAAQ,QAC9C,OAGRpvB,EAAC,IACC,MAAO,IACP,OAAQ,IACR,oBAAqB,CAAEmgB,OAAQ,mBAE/BlgB,EAAC,IACC,KAAM87B,GAAaD,EAAEM,eACrB,UAAW,CAAE9b,YAAa,KAE5BrgB,EAAC,IACC,GAAG,IACH,SAAS,OACT,aAAa,QACb,2BACA,eACA,aAAc,GACd,WAAY,KAEdA,EAAC,IACC,GAAG,IACH,SAAS,SACT,aAAa,QACb,kCAvDIwjB,UAvBhBzjB,SAAK,IAAKu6B,aACRt6B,SAAK,MAAM,6BAA6B,QAAQ,2BAC9CD,OAAG,KAAK,oBACNC,UAAM,EAAE,m6EACRA,UAAM,EAAE,sBAGZA,mFCtK4C,MAC5C,CAAE,OAAM,aAAc,UAErBL,mBAAkC,IACnC,EAEA,EAAK,OACH,AAAC,GAAa,IAAc,GAAgB,EAAS,KAAK,WACvD,GAGF,GACN,CAAC,EAAW,gBCPf,EAC6B,MACvB,CAAE,kBAAmB,IACrB,EAAc,WAEbA,mBAAQ,IAAM,MACb,GACJ,IAAmB,KAAO,GAAO,IAAO,EAAe,GACnD,EAAU,EACZ,EACAoG,EAAI,EAAY,QAAS,wCAAyC,UAC/D,CAAE,WAAU,YAClB,CAAC,EAAgB,EAAI,ICV1B,YAAiC,CAC/B+iB,OACAjlB,QACAu4B,SACAta,cACqB,MACf,CAAEjC,SAAQC,UAAWuc,KACrBrS,EAAYuB,GAAa,CAACzC,EAAKlmB,IAAK,CACxC4F,KAAMuhB,GAAkBuS,eACxB/R,MAAO,CAAE3nB,GAAIkmB,EAAKlmB,GAAIkf,gBAGlB,CAAEuB,WAAYkZ,GAA8Bza,iBAG/B,UAAY,aAAYjC,IAASiJ,EAAK8D,8BAEnD,EAAE,IACF,UAAY,eAAc9M,IAAS,MAAe,MAClD,MAAQ,GAAED,IAASiJ,EAAK4D,MAAQ7M,IAASiJ,EAAK8D,MAC9C,OAAO,OACP,MAAO,CACLuN,KAAMnQ,EAAUxH,SAAW,YAAc3e,EACzCwf,YAEE2G,EAAUkB,WAVVpC,EAAKlmB,IAgBjB,OAAe3B,eAAKu7B,gBC1ClB,EACA,EACA,MACM,CAAE,QAAQ,EAAG,QAAQ,SAAY,GAAU,CAC/C,MAAO,EACP,MAAO,eAGF,GAAc,QAAU,EAC3B,EAAQ,EAAc,cACtB,ECON,YAAwC,CACtCjZ,eACAkZ,WACA1Y,UACA2Y,iBACsC,eAGlC,UAAU,iCACV,SAAW,QAAOnZ,2BAEjBQ,EACEC,OAAQ6X,GAAMA,EAAE57B,QAAQ2mB,YAAc,IAAQ6V,EAASZ,EAAEj5B,KACzDT,IAAI,CAAC05B,EAAGrY,IACPmZ,GAAkBd,GAAG15B,IAAK2mB,KAErB0T,IAEC,WAAYX,EAAEj5B,GACd,OAAQg6B,GAAiBF,EAAe,CAAElZ,UAC1C,OACA,MAAOqY,EAAE57B,QAAQ4D,OAJZilB,EAAKlmB,QAa1B,KAAMi6B,IAA0B57B,eAAK67B,IAErC,aAAqC,MAC7B,CAAEvZ,eAAckZ,WAAUrW,gBAAesW,iBAC7Clf,IAEIuG,EAAUgZ,WAEZ3W,KAAkB4W,EAAeC,MAAc,OAGhD,IACC,UACA,eACA,WACA,kBAON,YAA2Bn4B,EAAgC,aAEvDA,MAAKo4B,QAAQlM,KACVhN,GAAWA,EAAOhZ,OAASmyB,IAA6BnZ,EAAOoZ,QADlEt4B,cAEG0lB,QAAS,gBCtE0C,MAClD,CAAE,QAAO,SAAQ,WAAU,UAAS,QAAS,UAE5C7qB,mBACL,IAAM,GAAU,CAAE,QAAO,SAAQ,WAAU,UAAS,SACpD,CAAC,EAAQ,EAAM,EAAO,EAAS,ICAnC,aAAmE,MAC3D,CAAE,SAAQ,SAAQ,gBAAe,iBAAgB,qBACrD,UAEKA,mBACL,IACE,GAAkB,CAChB,SACA,SACA,gBACA,iBACA,sBAEJ,CAAC,EAAgB,EAAQ,EAAmB,EAAQ,gBAIhB,EAGrC,MACK,CAAE,OAAM,kBAAmB,IAE3B,EAAS,KACT,EAAS,KACT,EAAWA,kBAAQ,IAAM,IACzB,EAAgB,MACZ,CAAE,IAAG,MAAO,EAAK,iBAAgB,OAAO,KACxC,CAAE,OAAM,MAAO,QACd,IACL,CAAE,IAAG,EAAG,GACR,CACE,OACA,KACA,QAAS,WAIR,CAAE,EAAG,GAAI,EAAG,KAClB,CAAC,EAAgB,EAAM,UAEZA,mBAAQ,IAAM,IACtB,EAAU,MACN,GAAW,GAAS,EAAU,CAGlC,SAAU,IACV,SAAU,KAGN,EAAc,GAAI,MACZ,OAAO,EAAO,EAAS,EAAE,IAAK,EAAO,EAAS,EAAE,YACnD,GAAI,EAAG,EAAI,EAAS,EAAE,OAAQ,MACzB,OAAO,EAAO,EAAS,EAAE,IAAK,EAAO,EAAS,EAAE,WAGvD,GAAY,sBAEZ,IAER,CAAC,EAAU,EAAQ,ICvExB,KAAM,IAAwB,CAC5B,aAAc,GACd,eAAgB,OAChB,aAAc,GACd,eAAgB,OAChB,MAAO,UACP,YAAa,GAGT,GAAoB,CACxB,SAAU,GACV,WAAY,OACZ,OAAQ,GACR,SAAU,OACV,aAAc,GACd,eAAgB,OAChB,aAAc,GACd,eAAgB,QAGZ,GAAwB,AAAC,KAC7B,SAAU,GACV,WAAY,OACZ,OAAQ,GACR,SAAU,OACV,aAAc,GACd,eAAgB,OAChB,aAAc,GACd,eAAgB,OAChB,gBAAiB,IAAY,KAAO,GAAM,IAAY,MAAQ,EAAI,IAG9D,GAAqB,CACzB,eAAgB,GAChB,iBAAkB,IAClB,cAAe,GACf,gBAAiB,OACjB,aAAc,GACd,eAAgB,OAChB,YAAa,GACb,cAAe,OACf,cAAe,GACf,gBAAiB,UACjB,cAAe,GACf,gBAAiB,QAGb,GAAwB,CAC5B,WAAY,GACZ,YAAa,GACb,UAAW,GACX,UAAW,GACX,UAAW,GACX,eAAgB,GAChB,aAAc,GACd,iBAAkB,ICpCpB,YAAmB,CAAE+sB,OAAME,KAAIyQ,SAAS,IAAM,KAAMC,UAA0B,MACtE,CAAEt7B,SAAQue,SAAQgd,QAAS/f,IAC3B,CAACggB,EAAqBC,GAA0B97B,mBAAS,IACzD,CAAC+7B,EAAoBC,GAAyBh8B,mBAAS,IACvD,CAACi8B,EAAQC,GAAal8B,mBAAS,IAC/Bm8B,EAAoB31B,iBAAO,MAC3B41B,EAAmB51B,iBAAO,MAE1B,CAAE0X,UAAWwc,KAEb2B,EAAmBn8B,sBAAaxB,GAAM,GACxC4qB,mBACA1iB,oBACqB,KACtB,IAEG01B,EAAkBp8B,sBACrBxB,GAAM,GACE,CAAEqsB,KAAM7M,IAASgP,OAAOxuB,EAAE69B,WAEnC,CAACb,EAAQxd,IAGLse,EAAkBt8B,sBACrBxB,GAAM,GACH4qB,mBACA1iB,oBAEqB,SAEjBye,GACJuW,IAAS,MACL,CAAC1d,IAASgP,OAAOxuB,EAAE69B,QAAStR,GAC5B,CAACA,EAAI/M,IAASgP,OAAOxuB,EAAE69B,YAEzBE,GACApX,EAAO,GAAKA,EAAO,KACX,CACR0F,KAAM1F,EAAO,GACb4F,GAAI5F,EAAO,MAGH,CACR0F,OACAE,QAIGwR,IAET,CAAC1R,EAAM6Q,EAAMD,EAAQzd,EAAQ+M,IAGzByR,EAAkBx8B,sBAAaxB,GAAM,GACvC4qB,mBACA1iB,oBACoB,KACrB,IAEG+1B,EAAiBz8B,sBACpBxB,GAAM,GACE,CAAEusB,GAAI/M,IAASgP,OAAOxuB,EAAE69B,WAEjC,CAACb,EAAQxd,IAGL0e,EAAiB18B,sBACpBxB,GAAM,GACH4qB,mBACA1iB,oBAEoB,SAChBye,GACJuW,IAAS,MACL,CAAC7Q,EAAM7M,IAASgP,OAAOxuB,EAAE69B,SACzB,CAACre,IAASgP,OAAOxuB,EAAE69B,QAASxR,MAE9B0R,GACApX,EAAO,GAAKA,EAAO,KACX,CACR0F,KAAM1F,EAAO,GACb4F,GAAI5F,EAAO,MAGH,CACR0F,OACAE,QAIGwR,IAET,CAAC1R,EAAM6Q,EAAMD,EAAQzd,EAAQ+M,IAGzB4R,EAA0B38B,sBAAY,CAAC,CAAE4G,cAAe,CACxDA,KACQ,KAEX,IAEGg2B,EAAwB58B,sBAAY,IAAM,GACpC,KACT,IAEGm4B,EAAmBn4B,sBAAY,CAAC,CAAE68B,SAAQj2B,cAAe,CACzDA,IACKnB,MAAMlD,OAAS,cAEfkD,MAAMlD,OAAS,aAEvB,UAGDrE,GAAC+d,8BACC9d,EAAC,IACC,KAAK,IACL,gBAAiB,CACfqJ,EAAGwW,IAAS6M,GACZpjB,EAAG,GAEL,SAAU,CACRD,EAAGwW,IAAS6M,GACZpjB,EAAG,GAEL,MAAO,EACP,OAAO,UACP,QAAS00B,EACT,OAAQC,EACR,OAAQE,EACR,QAASL,WAET99B,UACE,IAAK89B,EACL,UAAWF,EAAS,SAAW,GAC/B,MAAOJ,EAAsB,EAAI,EACjC,KAAK,MACL,OAAQx7B,EAASue,EAAOxe,IACxB,MAAO,CAAE48B,YAAanB,EAAsB,EAAI,GAChD,mBAAoBgB,EACpB,iBAAkBC,EAClB,aAAczE,MAIlBh6B,EAAC,IACC,KAAK,IACL,gBAAiB,CACfqJ,EAAGwW,IAAS+M,GACZtjB,EAAG,GAEL,SAAU,CACRD,EAAGwW,IAAS+M,GACZtjB,EAAG,GAEL,OAAO,UACP,MAAO,EACP,QAAS+0B,EACT,OAAQC,EACR,OAAQC,EACR,QAASR,WAET/9B,UACE,IAAK+9B,EACL,UAAWH,EAAS,SAAW,GAC/B,MAAOF,EAAqB,EAAI,EAChC,KAAK,MACL,OAAQ17B,EAASue,EAAOxe,IACxB,MAAO,CAAE48B,YAAajB,EAAqB,EAAI,GAC/C,mBAAoBc,EACpB,iBAAkBC,EAClB,aAAczE,SClLxB,KAAM7N,IAAgBltB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAahBmtB,GAAoBntB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAsB1B,YAA2B,CAAE2/B,gBAAwC,MAC7D,CAAE58B,SAAQue,UAAW/C,IACrB,CAAEqC,UAAWwc,KACbx0B,EAAWgpB,IAEX,CAAC,CAAEjuB,KAAI0b,WAAUoO,OAAME,MAAMiS,GAAel9B,mBAASi9B,GACrD5U,EAAYuB,GAAa,CAAC3oB,GAAK,CACnC4F,KAAMuhB,GAAkB+U,SACxBvU,MAAO,CAAE3nB,4BAGD,IAAM,GACFg8B,IACX,CAACA,SAEEG,GAAuBl9B,sBAC1Bu8B,GAAY,GACF,CACP51B,KAAMw2B,GACNnX,QAAS,CAAE/iB,KAAM,OAAK85B,GAAiBR,OAG3C,CAACv2B,EAAU+2B,IAGPK,EAAwBp9B,sBAAY,IAAM,GACpC4jB,QACT,CAACuE,IAEEkV,EAA6Br9B,sBAAY,IAAM,GACzCkpB,QACT,CAACf,IAEEmV,EAAct9B,sBAAau9B,GAAa,GAC/B9gB,UAAmBA,GAAa8gB,KAC5C,IAEGC,EAAK3S,EAAO7M,IAAS6M,GAAQ,EAC7BC,EAAKC,EAAK/M,IAAS+M,GAAM,QAG7B7sB,QACE,IAAKiqB,EAAUxH,SAAW4J,GAAoBD,GAC9C,aAAc8S,EACd,aAAcC,YAEdl/B,2BACiB,OACf,EAAI,GAAE2sB,IACN,EAAE,IACF,MAAQ,GAAE0S,EAAK1S,IACf,OAAQ3qB,EAASue,EAAOG,OACxB,UAAU,cAGZ1gB,UACE,EAAG2sB,EACH,EAAG3qB,EAASue,EAAOG,OAAS,GAC5B,KAAK,QACL,MAAO,CAAEhd,SAAU,OAAQS,WAAY,iBAEtCma,IAAaf,OAAYe,EAAS6Q,QAAQ,GAAK,KAGlDnvB,EAAC,IACC,KAAM4+B,EAAalS,KACnB,GAAIkS,EAAahS,GACjB,OAAQuS,EACR,OAAQJ,mBACO,YCtGvB,YAAkB,CAAEzgB,WAAUkE,YAA2B,MACjDJ,GAAcf,KACdle,EAAOm8B,GAAgBhhB,GAEvBihB,EAAmB5/B,kBAAQ,IAAM,IACjC,CACFkE,QAAQ27B,GAAsB37B,MAC9Bwc,cAAcmf,GAAsBnf,aAClCof,GAASrd,EAAY3Y,QAAS,gCAAkC,SAC7D,CAAE5F,QAAOwc,gBACf,CAAC+B,sCAKE,UAAU,OACV,OAAQmd,EAAiB17B,MACzB,YAAa07B,EAAiBlf,YAC9B,KAAK,OACL,MAAO,CACLgD,QAASb,EAAW,EAAI,IAE1B,EAAGrf,MAGJ,IAAkB,aAAcmb,OChCvC,aAA2B,MACnB,CAAEme,WAAUta,iBAAgBrd,OAAMye,gBAAiB/F,IAEnDkiB,EAAY//B,kBAAQ,IAAM,MACxB6iB,GAAY5f,GACTuf,IAAmB,KACtB,GACAvf,IAAOuf,EAAevf,iBAMvB,UAAU,qBACVkC,kBAAO,KACNA,EACGkf,OAAQ6X,GAAMA,EAAE57B,QAAQ2mB,YAAc,IAAQ6V,EAASZ,EAAEj5B,KACzDohB,OAAO6C,IACP1kB,IAAKkiB,GACJA,EAASsb,UAAU7Y,OAAO3kB,IAAKmc,KAC5B,IAEC,WACA,SAAUkE,EAAS6B,EAASzhB,KAFvB0b,EAAS1b,SAQ3B,CAACuf,EAAgBrd,EAAM23B,kBAEhB,SAAW,QAAOlZ,2BAA+Bmc,IChB7D,YAAc,CAAE56B,OAAMlC,KAAI3C,UAASujB,SAAoB,MAC/C,CAAEkZ,iBAAkBlf,IACpB,CAAEqC,SAAQC,UAAWuc,KACrB7X,EAAWC,GAAYC,GAAoBW,OAC3C,CAAEhC,WAAYkZ,GAA8B35B,GAE5Cw5B,EAASz8B,kBAAQ,IACdi9B,GAAiBF,EAAe,CAAElZ,UACxC,CAACA,EAAOkZ,IAEL9X,EAAQjlB,kBAAQ,IAAM,MACpB8iB,GAAU5C,IACV8C,EAAU7C,EAAOld,GAEjBoiB,EAAc,GAAInC,OACpB/d,kBAAMuE,IAAKvE,kBAAMwE,IAAKmZ,EAAQ,GAAI,MAC9BsC,GAAaP,EAAS1f,KAEhBme,OAAOR,EAAQsC,EAAW1b,EAAE,IAAKsZ,EAAQoC,EAAWzb,EAAE,YACzD0Z,GAAI,EAAGA,EAAI+B,EAAW1b,EAAEhH,OAAQ2gB,MAC3BE,OAAOT,EAAQsC,EAAW1b,EAAE2Z,IAAKL,EAAQoC,EAAWzb,EAAE0Z,WAG7DgC,GAAYtkB,sBAEZ,IAER,CAACmf,EAAQC,EAAQld,EAAIkC,EAAM0f,qBAI1B,UAAU,sBACG,gBAEb,OAAQvkB,EAAQ4D,MAChB,KAAK,OACL,MAAO,CACLwf,WAEF,EACA,UAAY,gBAAe+Y,MAPtBx5B,GClDX,aAAuB,MACf,CAAEkC,OAAM86B,WAAUrc,eAAckZ,YAAajf,IAC7CqiB,EAAQD,GAAsB96B,gBAG/B,SAAW,QAAOye,kBAA8B,UAAU,qBAC1Dsc,iBACG7b,OAAQ6X,GAAMA,EAAE57B,QAAQ2mB,YAAc,IAAQ6V,EAASZ,EAAEj5B,KAC1DT,IAAI,CAAC05B,EAAG7Y,MACN,UAAoB6Y,IAAG,KAAMnN,GAAYmN,GAAI,MAAO7Y,IAA1C6Y,EAAEj5B,OCEvB,KAAMQ,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAiDf,YAAwB,CACtB2D,KACAyG,IACAC,IACAsW,OACA4K,QACA3mB,QACA2e,WACAgE,WACsB,MAChBsZ,GAAU33B,iBAAuB,MACjC,CAAC43B,EAAYC,GAAiBr+B,mBAAS,IACvC,CAACs+B,EAAQC,GAAYv+B,mBAAS6oB,GAC9B,CAAC2V,EAAeC,GAAoBz+B,mBAAS,CAAEkB,MAAO,EAAGb,OAAQ,IACjEq+B,EAASlS,GAAyB3H,GAClCwD,EAAYuB,GAAa,CAAC3oB,GAAK,CACnC4F,KAAMuhB,GAAkBuW,KACxB/V,MAAO,CAAE3nB,QAGLiF,EAAWgpB,IAEX0P,EAAqB1+B,sBACxBxB,GAAMwH,EAAS,CAAEW,KAAMg4B,GAAgBC,WAAYpgC,EAAEogC,aACtD,CAAC54B,8BAGa,IAAM,YACd64B,GAAUZ,KAAQr2B,UAARq2B,cAAiBa,YAChB,CACf99B,MAAO69B,kBAAS79B,QAAS,EACzBb,OAAQ0+B,kBAAS1+B,SAAU,KAE5B,CAAC+9B,wBAEM,IAAM,GACLvV,IACR,CAACA,SAEEoW,GAAgB/+B,sBACpB,AAACwG,GAAiD,IAC5CA,EAAMsZ,MAAQ,QAAS,MACnBkf,GAAWx4B,EAAMW,cAAc83B,iBACjC,CAACC,MAAMF,GAAW,MACdJ,GAAaI,EAAWrW,IAEX,CACjB5nB,KACA4nB,MAAOqW,EACPG,SAAUxW,EACViW,iBAGIz3B,cAAci4B,SACN,SAEP54B,GAAMsZ,MAAQ,aACd6I,KACHxhB,cAAci4B,SACN,MAGlB,CAACzW,EAAO+V,EAAoB39B,IAGxBs+B,EAAer/B,sBAAawG,GAAU,GACjCA,EAAMq2B,OAAOlU,QACrB,IAEG2W,EAA6Bt/B,sBAAaxB,MAC5CkI,oBACY,IACP,IACN,IAEG02B,EAAwBp9B,sBAAY,IAAM,GACpC4jB,QACT,CAACuE,IAEEkV,EAA6Br9B,sBAAY,IAAM,GACzCkpB,QACT,CAACf,IAEE6W,EAAWlhC,kBACf,IAAOogC,EAAavV,EAAQ6V,EAAO7V,GACnC,CAAC6V,EAAQN,EAAYvV,IAEjBwW,EAAWrhC,kBACf,IAAOogC,EAAaE,EAASI,EAAOJ,GACpC,CAACA,EAAQI,EAAQN,UAIjBhgC,QACE,IAAKqD,GACL,KACA,MAAO,CAAEg+B,QAAS,QAClB,UAAY,aAAY/3B,MAAMC,KAC9B,aAAc21B,EACd,aAAcC,YAEdl/B,UACE,GAAG,IACH,GAAG,IACH,GAAI4f,IAAS,GAAK,GAAK,EACvB,GAAIA,IAAS,GAAK,GAAK,IACvB,OAAQ/b,EACR,YAAammB,EAAUxH,SAAW,MAAQ,QAE5CxiB,UACE,IAAK8/B,EACL,UAAU,aACV,EAAE,IACF,EAAGlgB,IAAS,GAAK,GAAK,IACtB,GAAG,IACH,GAAG,SACH,KAAK,cACL,SAAS,OACT,WAAW,MACX,MAAO,CACL9d,SAAU,qBAGX++B,IAEH7gC,mBACE,EAAE,IACF,EAAG4f,IAAS,GAAK,GAAK,IACtB,GAAG,QACH,GAAG,SACH,MAAOugB,EAAct9B,MAAQ,GAC7B,OAAO,wBACQ,gBAEf7C,SACE,MAAO,CACL6C,MAAOs9B,EAAct9B,MAAQ,GAC7Bb,OAAQ,OACRq/B,aAAc,YAGhBrhC,WACE,QAASmhC,EACT,UAAWpB,EAAa,aAAe,4BACvC,MAAO,CACLl9B,MAAO,UACPqB,OAAQ67B,EAAc,aAAYl8B,IAAW,IAC7Cwf,QAASb,EAAW,EAAI,GACxB2N,WAAY,OACZtsB,SAEF,MAAOm9B,EACP,UAAWJ,EACX,SAAUM,EACV,KAAK,SACL,SAAU,CAAC1e,WCnNvB,aAA2B,MACnB,CAAE1d,OAAMqd,iBAAgBua,gBAAenZ,eAAckZ,YACzDjf,IACI,CAAEqC,SAAQC,UAAWuc,KAErBiF,EAAQ3hC,kBAAQ,IAAM,MACpB4hC,GAAoB3+B,GAAO,MACzB4gB,GAAQ1e,EAAK08B,UAAW3F,GAAMA,EAAEj5B,KAAOA,SACtCg6B,IAAiBF,EAAe,CAAElZ,iBAiBzC1e,IACA28B,AAfiB,KAAM,MACjB5B,GAAQ,CAAC,GAAG/6B,SACXqd,GACH0d,EAAM6B,KAAK,CAACr4B,EAAGC,IACND,EAAEzG,KAAOuf,EAAevf,GAC3B,EACA0G,EAAE1G,KAAOuf,EAAevf,GACxB,GACA,GAENi9B,MAMD7b,OAAQ6X,GAAMA,EAAE57B,QAAQ2mB,YAAc,IAAQ6V,EAASZ,EAAEj5B,KACzDohB,OAAO6C,IACP1kB,IAAK05B,GAAM,aAERA,MAAE5P,QAAF4P,cAAS/U,SACT+U,EAAE57B,QAAQ0hC,8BAGN,UAAY,gBAAeJ,EAAiB1F,EAAEj5B,gBAE7Ci5B,EAAE5P,MAAMnF,OAAO3kB,IAAI,CAAC,CAAEkH,IAAGC,IAAG1G,UAC1B,IAEC,EAAGid,IAASxW,GACZ,EAAGyW,EAAO+b,EAAEj5B,IAAI0G,GAAK,EACrB,KAAM9I,KAAKof,KAAKtW,GAChB,KACA,MAAOD,EACP,MAAM,UACN,QAASwyB,EAAE5X,KAAKuC,QAChB,SACErE,GAAkB,KACd,GACAA,EAAevf,KAAOi5B,EAAEj5B,IAXzBA,KALJi5B,EAAEj5B,OA2BlB,CAACkC,EAAM43B,EAAeva,EAAgBsa,EAAU5c,EAAQC,kBAGtD,UAAU,QAAQ,SAAW,QAAOyD,2BACpC+d,IC/DP,KAAM9T,IAAY,CAAEvJ,KAAM,CAAEqX,gBAAiB,MAE7C,aAAqC,YAC7B,CAAE/X,eAAcmZ,gBAAe16B,SAAQue,UAAW/C,IAClD,CAAEyG,QAASwJ,GAAYD,IACvB,CAAExD,aAAcY,KAChB,CAAE/K,UAAWwc,QAEfrS,MAAUI,aAAVJ,cAAsBxhB,QAASuhB,GAAkB6X,eAC5C,WAGHC,GAAa7/B,EAASue,EAAOG,OAC7BohB,EAAaD,EAAa,EAE1B,CAAEnb,UAAWsD,EAAUI,WAAWG,OAAS,MAE7CtI,GAAiB,CAAC,EAAG,QAEnB8B,GAAU2C,EAAOvkB,IAAKsmB,GAAU,MAC9B,CAAEiE,OAAME,MAAOnE,EACfsZ,EAAOvhC,KAAKwhC,IAAItV,EAAOE,GAAM,EAC7BqV,EAAUvV,EAAOqV,EACjBG,EAAQtV,EAAKmV,EACbj9B,EAAOq9B,GAAW,CAAC1Z,GAAQ,CAC/B4S,UAAWpX,EAAKqX,gBAChB5O,KAAMuV,EACNrV,GAAIsV,EACJE,SAAU,MAGNC,EAASC,GAAOx9B,EAAKwE,YACnB,GAAK+4B,EAAO,GAAKpgB,EAAQ,GAAKogB,EAAO,GAAKpgB,EAAQ,KAClD,GAAKogB,EAAO,GAAKpgB,EAAQ,GAAKogB,EAAO,GAAKpgB,EAAQ,GAEnD,CAAEnd,OAAM4nB,KAAMuV,EAASrV,GAAIsV,IACjC,IAEGpiB,EAASlS,GAAU,CACvB5L,OAAQ8/B,EACRvhB,OAAQ,CAAExe,IAAK,EAAG2e,OAAQ,GAC1Bgc,gBACAza,YAGI2C,EAAQb,EAAQ5hB,IAAI,CAAC,CAAE2C,KAAM,CAAEuE,IAAGC,KAAKojB,OAAME,QAAS,IACtDzpB,GAAQ,KAAI0c,IAASxW,EAAE,OAAOyW,EAAOxW,EAAE,iBACnCD,EAAE6xB,MAAM,GAAGzZ,OAAO,CAAC8gB,EAAaC,EAAOxf,QAC7B,MAAKnD,IAAS2iB,MAAU1iB,EAAOxW,EAAE0Z,EAAI,MAC9Cuf,GACN,IACI,CAAEp/B,OAAMupB,OAAME,OACpB,kBAIC,SAAW,QAAOrJ,kBAClB,UAAU,8BACV,MAAM,OACN,OAAO,gBAENqB,EAAMziB,IAAI,CAAC,CAAEgB,OAAMupB,OAAME,MAAMpJ,4BAGzB,UAAY,aAAY3D,IAAS+M,2BAEhC,EAAE,IACF,MAAOpsB,KAAKwhC,IAAIniB,IAAS+M,GAAM/M,IAAS6M,IACxC,OAAO,OACP,KAAK,0BAIP,UAAY,eAAcmV,EAAaC,EAAa,KACpD,OAAO,QACP,KAAK,OACL,EAAG3+B,MAbE,GAAEqgB,QClEnB,KAAM+B,IAAatmB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAabwjC,GAAaxjC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAwBnB,YAAeQ,EAAmB,MAC1B,CAAEgmB,OAAO,GAAMid,WAAW,GAAOnF,OAAM3b,MAAO+gB,GAAcljC,EAC5D,CAAEuiB,UAAShgB,SAAQa,QAAO0d,UAAW/C,IACrC,CAAEqC,UAAWuS,KAEbxM,EAAUzd,iBAAoB,MAC9By6B,EAAUz6B,iBAAoB,MAE9ByZ,EAAQ+gB,GAAwBpF,KAAS,MAAQ,eAAY,uCAEzD,IAAM,IACV,CAAC9X,GAAQ,CAAC5F,cAERgG,GAAQC,GACAjG,IAASwiB,OAAOrgB,IAC3B+D,MAAM,GACNC,WAAWF,GAAU,MAElB+c,EAAO/c,GACCjG,IAASwiB,OAAOrgB,IAC3B+D,MAAM,IACN+c,SAAS,IAAWviB,EAAOxe,IAAMwe,EAAOG,SACxCsF,WAAW,IAAM,OAGVJ,EAAQnc,SAASwc,KAAKJ,MAGtB+c,EAAQn5B,SAASwc,KAAK4c,IAC/B,CAAC7gC,EAAQue,EAAOG,OAAQH,EAAOxe,IAAK8d,EAAQ4F,EAAMzD,IAEjD,CAACnf,GAAS,CAACb,GAAU,CAAC6d,EACjB,KAIP9f,gBACG0lB,GACCzlB,OACE,UAAU,IACV,IAAKulB,GACL,UAAY,eAAcvjB,EAASue,EAAOG,UAC1C,IAAKkF,WAEL5lB,UAAM,KAAK,OAAO,EAAG6C,EAAQ,GAAI,EAAE,KAAK,GAAG,SAAS,WAAW,eAC5D+e,MAIN8gB,GACC1iC,OACE,IAAKyiC,GACL,UAAU,OACV,IAAKG,EACL,UAAY,eAAc5gC,EAASue,EAAOG,2BCxElD,EACA,EACiC,IAC7B,CAAC,GAAU,CAAC,MAAM,QAAQ,SAAgB,SAE1C,GAAsB,GACtB,EAAe,EACf,EAAwB,GAAY,EAAQ,YACrC,KAAS,YACP,KAAU,GAAM,QAAS,MACM,KAAhC,IAAI,GAA4B,EAAf,IAAe,EAAf,CAAjB,UAEJ,EAAW,GAAI,GACT,KAAK,GAAE,GAAI,GAAG,EAAM,KAAK,KAAe,SAC1C,GAAU,GAAiB,EAAW,MAC7B,EAAU,EAAe,EAAU,SAKjD,CAAE,UAAS,eAAc,SAGlC,YAA0B,EAAyB,IAC7C,GAAM,cACC,CAAE,aAAc,KACnB,EAAW,EAAM,EAAW,QAE7B,GAGT,YAAsB,EAA6B,MAC3C,GAAwB,UACrB,KAAS,YACL,CAAE,QAAO,OAAQ,GAAM,iBACrB,CAAE,aAAc,IAAM,KACrB,KAAK,CAAE,WAAU,gBAI1B,GAGT,YAAkB,EAAkC,MAC5C,CAAE,SAAU,QACX,CACL,GAAI,IACJ,KAAM,EACN,GAAI,EACJ,UAAW,CAAC,IAIhB,YAAqB,EAAiB,EAAkB,EAAG,MACnD,GAAY,GAAa,GAAQ,KACrC,CAAC,EAAG,IAAM,EAAE,SAAW,EAAE,aAGvB,CAAC,GAAa,EAAU,SAAW,QAAU,QAE3C,GAAwB,CAAC,GAAS,EAAU,QAE9C,GAAQ,EACR,EAAQ,EACR,EAAM,OAEH,EAAM,EAAU,QAAQ,MACvB,GAAe,EAAU,GAE7B,KAAK,IAAI,EAAU,GAAO,SAAW,EAAa,UAClD,KAEM,GAAO,UAAU,KAAK,GAExB,EAAa,MAAQ,EAAM,GAAO,KAC9B,GAAO,GAAK,EAAa,MACtB,EAAa,MAAQ,EAAM,GAAO,SACrC,GAAO,KAAO,EAAa,YAMjC,KAAK,IAAI,EAAU,EAAM,GAAG,SAAW,EAAa,UACpD,IAEQ,EAAM,SAGR,GAAS,GAAS,EAAU,MAC1B,IACF,EAAM,SAKX,GClHT,KAAMqiB,IAAgB57B,wBAA2B,CAC/C2Y,OAAQ,KACR9d,OAAQ,EACRghC,SAAU,IAGCC,GAAwBF,GAAcr4B,sBAEvB,MACpBw4B,GAAcv4B,qBAAWo4B,OAC3B,CAACG,EAAYpjB,YACT,IAAIpb,OAAM,8BAGXw+B,GCcT,KAAMC,IAAeC,qBACnB,CAAC3jC,EAAOyzB,IAAQ,MACR,CAAE7pB,IAAGC,IAAGtH,SAAQ0gC,WAAU3c,SAAUtmB,gBAErC,MAAU,UAAY,aAAY4J,MAAMC,yBACnC,GAAItH,EAAQ,GAAI,GAAI,GAAI,GAAI,OAAO,UACxC+jB,EAAM5jB,IAAI,CAAC,CAAEyf,QAAO9f,YAAY0hB,qBAG5Bkf,GAAYjjC,EAAMoD,iBAEf,GAAIf,EACJ,GAAIA,EACJ,GAAI,GACJ,GAAIrC,EAAMoD,MAAQwG,EAClB,OAAO,wBAGL,GAAIvH,EAAU,GAAIA,EAAU,GAAI,GAAI,GAAI,GAAI,OAAO,oBACnD,EAAGA,EAAU,iBAAiB,SAAS,WAAW,eACrD8f,MAZG4B,EAAQ5B,EAAQ9f,qBAqBCrC,EAA0B,MAC/BA,KAApB0yB,UAAoB1yB,EAAV4jC,IAAU5jC,EAAV4jC,CAAVlR,UACFe,EAAM/qB,iBAAoB,MAC1B4d,EAAQud,GAAsBnR,EAAO,WAAYe,YAC/C,UAAiBmQ,IAAO,QAAc,sBCjEX,MAC7B,CAAExgC,QAAO0d,UAAW/C,IACpB,CAAExb,SAAQ8d,UAAWyjB,WAEtBzjB,YAGE,MAAO,CAAEc,SAAU,WAAa,OAAQ5e,EAAS,GAAI,MAAO,cAC9D,IACC,EAAG,GACH,EAAG,EACH,MAAO8d,EACP,SACA,YACA,MAAOjd,EAAQ0d,EAAOE,UAVR,iBCEkBhhB,EAA6B,MAC7D,CAAE+jC,SAAU/jC,EACZ,CAAEogB,UAAWwc,KACb,CAAEvc,SAAQkjB,YAAaO,KACvBE,EAAe5hC,sBACnB,AAAC6hC,GAA+B,IAC1B,CAAC5jB,QAAe,QAEd,CAAE4M,OAAME,KAAI+W,aAAcD,KAC5B9e,GAAkB,YACXsX,KAAYyH,KACfpjC,KACH,IAAGsf,IAAS6M,MAAS5M,EAAOoc,EAASA,cAAcrc,IAClD+M,MACG9M,EAAOoc,EAASA,mBAGlBtX,GAAMgf,KAAK,MAEpB,CAAC/jB,EAAQC,kBAIN,UAAU,6BACV0jB,EACExf,OAAQ0f,GAASA,EAAKC,UAAUthC,OAAS,GACzCF,IAAKuhC,aAIA,EAAGD,EAAaC,GAChB,MAAO,CACLxjB,OAAS,OACNwjB,EAAKC,UAAU,GAAGzH,SAAW,IAAO8G,eAGzC,YAAY,KAPPU,EAAK9gC,mBChCW,CAAE4nB,SAA0B,MACvD,CAAE1K,SAAQkjB,YAAaO,KACvB,CAACM,EAAQC,GAAWniC,mBAAkB,UAEvCme,UAID,UAAU,WACV,MAAO,CAAEC,UAAY,iBAAgBD,EAAO0K,+BAG1C,aAAc,IAAMsZ,EAAQ,IAC5B,aAAc,IAAMA,EAAQ,IAC5B,GAAI,EACJ,GAAI,EACJ,EAAG,EACH,KAAO,OAAOtZ,EAAQ,IAAOwY,UAAiBa,EAAS,GAAK,OAC5D,cAAc,QAEfA,UACI,MAAO,CAAE9jB,UAAY,2CAEpB,cAAc,OACd,OAAO,QACP,YAAY,QACZ,SAAS,OACT,iBAAiB,SACjB,WAAW,eACV,GAAEyK,EAAM2E,QAAQ,oBAEjB,cAAc,OACd,OAAO,QACP,SAAS,OACT,iBAAiB,SACjB,WAAW,eACV,GAAE3E,EAAM2E,QAAQ,gBAhCP,iBCFc1vB,EAAyB,MACrD,CAAEogB,UAAWwc,KACb,CAAEr6B,UAAWuhC,mBAGd,UAAU,uBACV9jC,EAAMwnB,QAAQ9kB,IAAK0mB,GAAW,qBAIzB,UAAY,aAAYhJ,IAASgJ,EAAOtB,gCAGtC,GAAG,IACH,GAAIvlB,EACJ,GAAG,IACH,GAAG,IACH,OAAO,QACP,YAAY,MAEb6mB,KAAOmT,KAAPnT,cAAW1mB,IAAKghB,KACP,IAAiC,MAAOA,EAAE+Y,UAAzB,GAAE/Y,EAAE+Y,eAZ1BrT,EAAOjmB,QCAxB,KAAMmhC,IAAY,GAOlB,YAAqBtkC,EAAyB,MACtC,CAAEwnB,UAASuc,SAAU/jC,gBAEtB,UAAU,UAAU,UAAY,eAAcskC,kBAC9C,SACAC,IAAe,YACf,IAAY,eAKnB,KAAMxW,IAAY,CAAE9G,OAAQ,IACtBud,GAAiBhjC,eAAKijC,iBAEK,MACzB9hB,GAAcf,KAEd,CACJrf,SACAyd,YAAa,CACX3a,KAAM,CAAEq/B,eAEVxe,aACEnI,IAEE4mB,EAAcpiC,EAAS,EAEvB,CAAE0kB,UAAW+G,GAAYD,IAEzB6W,EAAkB1kC,kBAAQ,IAOvB2kC,AALLh2B,GACE8T,EAAY3Y,QACX,6BAA4Bkc,OAC1B4e,GAAsB5e,IAET0e,gBACnB,CAAC1e,EAAWvD,IAET,CACJ6E,UACAud,aAAcxB,EACdQ,SACE7jC,kBACF,IACE8kC,GAAmB/d,EAAOI,OAAQud,IAAoB,CACpDpd,QAAS,GACTud,aAAc,EACdhB,MAAO,IAEX,CAACa,EAAiB3d,EAAOI,SAGrBhH,EAASngB,kBAAQ,IAAM,MACrB+kC,GAAW1B,EAAWA,EAAW,SAChC51B,MAAcqb,MAAM,CAAC2b,EAAa,IAAI/B,OAAO,CAAC,EAAGqC,KACvD,CAACN,EAAapB,IAEX2B,EAAchlC,kBAAQ,IACnB,EAAEmgB,SAAQ9d,OAAQoiC,EAAapB,aACrC,CAACoB,EAAatkB,EAAQkjB,UAEpBmB,KAGF,IAAsB,MAAOQ,aAC3B,IAAe,UAAkB,YAJd,KCjF1B,YAAsBllC,EAA0B,MACxC,CACJ4J,IAAI,UACJC,IAAI,UACJs7B,WAAW,IAAM,KACjBzK,OAAO,WACL16B,kBAIA,UAAU,gBACV,IACA,IACA,QAASmlC,mBACM,2BAET,GAAG,IAAI,MAAM,KAAK,OAAO,KAAK,mBAC9B,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,OAAO,QAAQ,YAAY,SCVpE,KAAMzY,IAAgBltB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAchBmtB,GAAoBntB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAwB1B,YAAuB,CAAE4lC,YAAWC,aAAiC,MAC7D,CAAEpY,OAAME,MAAOiY,EACf7a,EAAYuB,GAAa,CAACuZ,IAC1B,CAAEjlB,UAAWwc,KACbx0B,EAAWgpB,IAEXkU,EAAgBljC,sBAAY,IAAM,GAC7B,CAAE2G,KAAMw8B,GAA8BC,OAAQH,KACtD,CAACA,EAAWj9B,IAETk3B,EAAuBl9B,sBAC1Bu8B,GAAY,GACF,CACP51B,KAAM08B,GACNrd,QAAS,SAAKgd,GAAczG,GAAnB,CAA4B0G,iBAGzC,CAACA,EAAWj9B,EAAUg9B,UAItB9kC,cACMiqB,EAAUkB,UACd,IAAKlB,EAAUxH,SAAW4J,GAAoBD,aAE9CpsB,OAAG,UAAY,aAAY8f,IAAS+M,mBAClC5sB,UACE,EAAE,IACF,MAAO6f,IAAS6M,GAAQ7M,IAAS+M,GACjC,OAAO,IACP,UAAU,aACV,KAAK,UAEP5sB,UACE,WAAW,SACX,OAAa0sB,GAAQ7M,IAAS+M,IAAO,EACrC,EAAE,KACF,SAAS,KACT,KAAK,MACL,WAAW,SACX,YAAa5C,EAAUxH,SAAW,EAAI,YAErCsiB,OAIL9kC,EAAC,IACC,KAAM6kC,EAAUnY,KAChB,GAAImY,EAAUjY,GACd,OAAQmS,IAEV/+B,EAACmlC,IAAa,EAAGtlB,IAAS+M,GAAM,GAAI,EAAG,GAAI,SAAUmY,QC1F3D,YAAkC,CAChCpf,YACAyf,kBACA7hB,gBACgC,MAC1B8hB,GAAU1lC,kBAAQ,IAAM,MACtB,CACJwe,QAAS,CAAEknB,YACTD,EAAgBzf,IAAc,CAChCxH,QAAS,CAAEknB,QAAS,WAEfA,IACN,CAAC1f,EAAWyf,IAET1e,EAAS/mB,kBAAQ,IACd4hB,OAAOC,KAAK6jB,GAASljC,IAAKwf,GAAQA,EAAK,IAC7C,CAAC0jB,UAEA,CAAC3e,GAAUA,EAAOrkB,SAAW,EACxB,YAIJ,SAAW,QAAOkhB,2BAClBmD,EAAOvkB,IAAK2iC,KACV,IAEC,YACA,UAAWO,EAAQP,IAFdA,MASf,KAAMQ,IAA8BrkC,eAAKskC,iBAEK,MACtC,CAAE5f,YAAWyf,kBAAiB7hB,gBAAiB/F,aAGlD,IACOmI,YAAWyf,kBAAiB7hB,sBCjD3B,IAAoC,CAC/C,CAAE,MAAO,cAAe,MAAO,IAAK,aAAc,MAClD,CAAE,MAAO,cAAe,MAAO,IAAK,aAAc,GAClD,CAAE,MAAO,cAAe,MAAO,IAAK,aAAc,GAClD,CAAE,MAAO,cAAe,MAAO,IAAK,aAAc,GAClD,CAAE,MAAO,cAAe,MAAO,IAAK,aAAc,GAClD,CAAE,MAAO,cAAe,MAAO,IAAK,aAAc,GAClD,CAAE,MAAO,aAAc,MAAO,IAAK,aAAc,GACjD,CAAE,MAAO,aAAc,MAAO,IAAK,aAAc,GACjD,CAAE,MAAO,YAAa,MAAO,IAAK,aAAc,GAChD,CAAE,MAAO,YAAa,MAAO,IAAK,aAAc,ICdlD,YAA+B,EAAQ,MAC/B,GAAY,GAAW,KAC3B,AAAC,GAAe,IAAW,EAAW,OAAS,IAAW,EAAW,aAGhE,GAAY,EAAU,aAAe,KAG9C,YAAwB,EAAW,EAAuB,GAAI,IAExD,IAAc,QAAa,EAAU,SAAW,QAC3C,QAEH,GAAa,GAAW,KAC5B,AAAC,GAAM,EAAE,QAAU,GAAa,EAAE,QAAU,SAG5C,IACA,CAAC,EAAS,SAAS,EAAW,QAC9B,CAAC,EAAS,SAAS,EAAW,OAIlC,YAA2B,EAAc,EAA0B,GAAI,OAEjE,KAAiB,QAAa,EAAa,SAAW,EACjD,GAEF,CAAC,EACL,MAAM,IACN,KAAK,AAAC,GAAe,CAAC,GAAe,EAAY,IAGtD,YAA4B,EAAW,eAC9B,GAAU,SAAW,EACxB,MAAW,KAAK,AAAC,GAAe,EAAW,QAAU,KAArD,cAAiE,MACjE,MAAW,KAAK,AAAC,GAAe,EAAW,QAAU,KAArD,cAAiE,MAGvE,YAA6B,EAAW,OAClC,GAAU,OAAS,MACT,GAAmB,IAG1B,GAAkB,EAAW,CAAC,IAAK,MAG5C,YAAmB,EAAG,EAAM,IACtB,IAAM,QAAa,IAAM,GAAK,IAAS,aAAkB,CAAC,MAC1D,GAAO,EAAI,EAAO,EAClB,EAA2B,UACtB,GAAI,EAAG,EAAI,EAAO,EAAG,MAAkB,KAAK,UAE5C,GAAI,EAAG,EAAI,EAAI,EAAG,IAAK,IAE1B,GAAQ,EAAa,eAChB,GAAI,EAAG,EAAI,EAAM,IAAK,QACpB,GAAI,EAAG,EAAI,EAAa,OAAS,EAAG,MACrC,EAAI,IAAM,EAAa,KAEzB,KAAK,KAEE,EAAM,cAEhB,QClEI,IAAmC,CAC9C,MACA,QACA,OACA,WCOF,YAAmB,CAAEsF,SAAQ7hB,SAAQw+B,eAA+B,MAC5D,CAAE3lB,UAAWwc,sBAKf,GAAIxc,IAASgJ,EAAOtB,OACpB,GAAIvgB,EACJ,GAAI6Y,IAASgJ,EAAOtB,OACpB,GAAIvgB,EAASw+B,EACb,OAAQC,GAAkB,IALpB,kBAAiB5c,EAAOjmB,MCFpC,YAAoB,CAClBimB,SACA7hB,SACAw+B,cACA9hC,WACAgiC,cACkB,MACZ,CAAE7lB,UAAWwc,sBAIf,WAAW,SACX,EAAGxc,IAASgJ,EAAOtB,OACnB,EAAGvgB,EAASw+B,EAAc,EAC1B,WACA,aAAa,UACb,KAAK,QACL,WAAYE,EAAa,UAAY,kBAEpC7c,EAAOoT,cATF,sBAAqBpT,EAAOjmB,MCCxC,YAAmB,CACjB+iC,YACAH,cACAx+B,SACA4+B,WACAC,eACAH,cACiB,MACX,CAAE7lB,UAAWwc,KACbyJ,EAAuBjkC,sBAC3B,CAAC,CAAEiF,SAAQi/B,UAASC,QAAOC,oBAAmBpiC,WAAsB,MAC5DqiC,GAAY,EAAID,EAAoB,EACpCE,EAAcn/B,EAASk/B,EAAYV,EACnCY,EAAcp/B,KAAsB,GAAKw+B,oCAQzC,WAAW,SACX,EAAG3lB,IAASkmB,GAAWF,EAAaQ,SACpC,EAAGD,EAAc,KAAmB,GACpC,SAAUP,EAAaniC,SACvB,KAAMG,EACN,WAAY6hC,EAAa,UAAY,kBAEpCM,cAID,GAAInmB,IAAS/Y,GACb,GAAIq/B,EACJ,GAAItmB,IAASkmB,GACb,GAAIK,EACJ,OAAQviC,cAIR,GAAIgc,IAASkmB,GACb,GAAIK,EACJ,GAAIvmB,IAASkmB,GACb,GAAIK,EAAcZ,EAClB,OAAQ3hC,MA3BJ,GAAEoiC,KAAqBL,KAAY9+B,KAAUi/B,KAAWC,MAgCpE,CACEJ,EACAC,EAAaQ,SACbR,EAAaniC,SACbmc,EACA6lB,EACA1+B,EACAw+B,0BAIMG,iBAAWxjC,IAAKmkC,GAASR,EAAqBQ,MC3E1D,YAAyB,EAAkB,EAAc,YAErD,EACA,EACA,EACA,EACA,UACI,CAAC,EAAO,mBACH,SAGL,GAAqB,EAAO,aAAa,aACpC,QAGH,GACJ,GAAkB,EAAoB,GAAkB,QAEpD,EAAS,EAAS,UACtB,AAAC,GAAY,IAAY,GAErB,EAAYh4B,EAAU,EAAc,uBAAwB,GAE5D,EACJ,GAAU,GAAK,EAAY,GAAK,qBAAQ,KAAR,cAAa,IACzC,EAAO,GAAG,GAAQ,SAAW,EAC7B,QAGF,CAAC,IACW,KAAK,CACjB,SACA,QAAS,EACT,MAAO,EACP,oBACA,YAIA,EAAoB,EACpB,EACA,EACA,OAEG,MAEC,GAAe,EAAO,cAAgB,GACtC,EAAS,GACb,GAAsB,EAAa,OAAO,IAC1C,OAGE,GACF,EAAO,OAAS,IAAM,EAClB,EAAU,EAAO,OAAS,EAAK,EAAW,EAAW,EACrD,KAAiB,OAAS,EAAI,IAAO,IAEpC,QAAQ,CAAC,EAAO,IAAM,CACvB,EAAI,OACK,KAEC,KAAK,CACjB,SACA,UACA,QACA,oBACA,YAIA,EAAoB,EACpB,EACA,EACA,WAKC,SAEF,GCtET,KAAMlL,IAAS,CACbgB,OAAQ,UACRif,QAAS,GACThD,YAAa,GAmBf,YAAmBuH,EAAY,OACtB,CAACA,EAAWhlB,IAAI+oB,OAAO/D,EAAWwB,SAAS/f,GAAK,IAGzD,YAA0B,CACxBk9B,YACAC,UACA3d,SACAgd,eAAe,CACbQ,SAAU,GACV3iC,SAAU,KAEY,MAClB,CAAEmc,SAAQC,UAAWuc,KACrB,CACJv3B,KAAMwjB,EACNnG,iBACA1C,YAAa,CAAEC,gBACf7c,SACE2a,IACEoK,EAAagE,GAAc/C,EAAOjmB,IAClConB,EAAYuB,GAAakb,GAAU7e,GAAa,CACpDpf,KAAMuhB,GAAkB2c,OACxBnc,MAAOkc,GAAU7e,KAGbkJ,EAAenxB,kBACnB,IAEE2O,EAAUga,EAAc,GAAEnG,iBAAgBqB,QAAS,MACrD,CAACrB,EAAgBmG,IAGb,CAACqe,EAAQC,GAAajlC,mBAAS,CAAEgrB,GAAI9D,EAAOtB,MAAOsF,GAAIhE,EAAOtB,QAC9D,CAACsf,EAAWC,GAAgBnlC,mBAAS,CACzCkB,MAAO,EACPb,OAAQ,EACRwjC,YAAa,IAET,CAACuB,EAAiBC,GAAsBrlC,mBAAS,IACjD,CAAC+jC,EAAYuB,GAAiBtlC,mBAAS,wBAEnC,IAAM,YACRulC,GAAmB,CAACC,GAAkBte,EAAOoT,aAAc,CAAC,MAC5DmL,EAAaF,EACf1mC,KAAKwhC,IAAIniB,IAAS8mB,EAAOha,IAAM9M,IAAS8mB,EAAO9Z,KAC/CrsB,KAAKwhC,IAAIniB,IAAS8mB,EAAOha,IAAM9M,IAAS8mB,EAAO9Z,KAC/CgZ,EAAaQ,SACXgB,EAAcH,EAAmBE,EAAa,EAAIA,EAAa,EAG/D/kC,EAASwmB,qBAAQoT,eAARpT,cAAsBxmB,SAAU,EACzCilC,EAAmBJ,EACrBG,KAAwB,GACxBA,KAAmBhlC,EAAS,KAEnB,CACXQ,MAAOukC,EACPplC,OAAQqlC,EACR7B,YAAa8B,MAEIJ,IAClB,CACDrB,EAAaQ,SACbxmB,EACAgJ,EAAOoT,aACP0K,EAAOha,GACPga,EAAO9Z,yBAGC,IAAM,CACVga,EAAUhkC,MAAQA,GAAS,KACf,MAEA,KAEf,CAACgkC,EAAUhkC,MAAOA,SAEfmE,GAASrH,kBAAQ,IAAM,IACvB4nC,YACSziC,KAAKuE,EAAE0e,QAAQ,CAACyf,EAAIxkB,IAAM,CAEnCwkB,GAAMjB,GACNiB,GAAMhB,KACJe,GAAQzW,EAAahsB,KAAKggB,GAAG9B,GAAKukB,OAE7BzW,EAAahsB,KAAKggB,GAAG9B,MAIzBlD,EAAOgR,EAAaluB,IAAI2kC,GAAQV,EAAU7kC,OAAS,IACzD,CACD8uB,EAAahsB,KAAKuE,EAClBynB,EAAahsB,KAAKggB,GAClBgM,EAAaluB,GACbkd,EACA+mB,EAAU7kC,OACVukC,EACAC,IAGIiB,EAAgB9nC,kBAAQ,IAAM,IAC9BkpB,EAAOoT,aAAc,MACjByL,GAAqBC,GAAgB9e,EAAQiI,GAC7C8W,EAAW/e,EAAOoT,aACrB1V,MAAM,IACNpkB,IAAI,CAAC0lC,EAAO7kB,IAAO8kB,GAAoBD,GAAS7kB,EAAIzF,QACpDyG,OAAQ+jB,GAAOA,IAAOxqB,cAElBmqB,GAAmB,EAAGE,EAAU,GAAI/e,EAAOtB,aAE7C,IACN,CAACsB,EAAQiI,wBAEF,IAAM,IACViW,IACQ,CAAEpa,GAAI4Z,EAAW1Z,GAAI2Z,QAC1B,MACCwB,GAAU,CAAErb,GAAI9D,EAAOtB,MAAOsF,GAAIhE,EAAOtB,SACjCQ,QAASkgB,GAAkB,CACnCA,EAAcnhC,OAASkhC,EAAQrb,OACzBA,GAAKsb,EAAcnhC,QAEzBmhC,EAAcnhC,OAASkhC,EAAQnb,OACzBA,GAAKob,EAAcnhC,QAEzBmhC,EAAclC,QAAUiC,EAAQrb,OAC1BA,GAAKsb,EAAclC,SAEzBkC,EAAclC,QAAUiC,EAAQnb,OAC1BA,GAAKob,EAAclC,aAGrBiC,KAEX,CACDjB,EACAR,EACAC,EACA3d,EAAOtB,MACPsB,EAAOoT,aACPwL,SAGIS,GAAmBvoC,kBAAQ,IAAM,MAC/B,CAAE6lC,eAAgBqB,EAElBsB,EAAmBnhC,KACrBohC,GAAUD,OAERE,GAAoBrhC,EAASw+B,OACzB6C,KAGC7C,EAEPuB,EAAiB,MACbuB,GAAazoB,IAAS0mB,GACtBgC,EAAW1oB,IAAS2mB,GAEpBgC,EAAY,KAAIF,KACpBF,EAAU5C,KACR8C,KAAcF,KAAWvoB,IAC3BgJ,EAAOtB,UACJ6gB,KAAWG,KAAYH,KAAWG,KACrCH,EAAU5C,UAIVzlC,kBACEC,EAAC,IACC,SACA,OAAQmoC,EACR,cACA,SAAUtC,EAAaniC,SACvB,eAEF1D,EAAC,IACC,SACA,OAAQqoC,EACR,gBAEFroC,UAAM,EAAGwoC,EAAU,OAAO,OAAO,KAAK,kBAM1CzoC,kBACEC,EAAC,IACC,SACA,OAAQmoC,EACR,cACA,SAAUtC,EAAaniC,SACvB,eAEF1D,EAAC,IACC,SACA,OAAQqoC,EACR,gBAEFroC,EAAC,IACC,UAAWynC,EACX,SAAUA,EACV,aACA,SACA,eACA,oBAIL,CACDZ,EACA7/B,EACA+/B,EACAle,EACAgd,EACAH,EACA+B,EACA5nB,EACA0mB,EACAC,UAIAxmC,QACE,IACEgqB,EAAUxH,UAAYoF,EAAWpF,SAC7B,OAAKpf,IAAL,CAAaigB,QAAS,EAAGhD,YAAa,MACtCjd,GAGJumB,aAAc,IAAM,GACPA,aAAa,OACdlE,QAEZmE,aAAc,IAAM,GACPA,aAAa,OACdmB,QAIZrjB,QACEgY,GAAgBA,IAAiBvB,EAAQS,UAAUhc,GAC/C,IACS,KAERvC,GAAM,CACDA,EAAEoI,aACFF,oBACSb,QAAQ,gBAK9BwgC,IC/RP,YAAmC,CAAEzf,SAAyC,OAE1EA,kBAAOxB,UACPwB,EAAMxB,QAAQ5kB,OAAS,GACvBomB,EAAMxB,QAAQ9kB,IAAK0mB,KAChB,IACC,UAAWJ,EAAMiE,KACjB,QAASjE,EAAMmE,GACf,UACK/D,EAAOjmB,KAMpB,KAAM6lC,IAA+BxnC,eAAKynC,iBAEK,MACvC,CACJjpB,YAAa,CACX3a,KAAM,CAAE6jC,eAERnrB,aAEI,IAA6B,MAAOmrB,ICd9C,KAAMxc,IAAgBltB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAchBmtB,GAAoBntB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA+B1B,YAAe,CACb4lC,YACA+D,wBACAlpB,eACAmpB,iBACa,MACP,CAAEjmC,KAAI8pB,KAAM6Z,EAAW3Z,GAAI4Z,EAASsC,cAAa7hB,WAAY4d,EAC7Dhb,EAAiBX,KACjB6f,EAAkBnd,GAAchpB,GAChComC,EAAiBzd,GACrB,CAACwd,EAAgBnmC,IAAI+oB,OAAOod,EAAgB3f,SAAS/f,GAAK,IAAIsiB,OAC5Dsd,GACEpf,EACA5C,EAAQ9kB,IAAK+kB,GAAYA,EAAQtkB,MAGrC,CAAE4F,KAAMuhB,GAAkBmf,MAAO3e,MAAO,CAAE3nB,QAEtC,CAACumC,EAAeC,GAAoBznC,mBAAS,CACjD+qB,KAAM6Z,EACN3Z,GAAI4Z,IAGA,CAAE3mB,UAAWwc,KACbx0B,EAAWgpB,IAEX,CAAC7D,EAAeC,GAAoBtrB,mBAAS,IAC7C,CAAC0nC,EAAoBC,GAAyB3nC,mBAAS,wBAEnD,IAAM,GACG,CACf+qB,KAAM6Z,EACN3Z,GAAI4Z,KAEL,CAACD,EAAWC,wBAEL,IAAM,CACV9mB,GAAgBA,IAAiBvB,EAAQS,UAAUhc,KAC/B,MAEA,KAEvB,CAAC8c,wBAEM,IAAM,GACG,CAAC6pB,GAAe1E,KAChC,CAACA,SAEE9F,GAAuBl9B,sBAC1Bu8B,GAAY,GACF,CACP51B,KAAMghC,GACN1kC,KAAM,OAAK+/B,GAAczG,MAG7B,CAACv2B,EAAUg9B,IAGP4E,EAAoB5nC,sBAAY,IAAM,GAC1B8nB,aAAa,OACdlE,QACd,CAACsjB,EAAiBC,IAEfj+B,EAAoBlJ,sBAAY,IAAM,GAC1B+nB,aAAa,OACdmB,QACd,CAACge,EAAiBC,IAEfU,EAAgB7nC,sBACnBxB,GAAM,CAEHqf,IAAiBvB,EAAQM,cAAc7b,IACvCvC,EAAEoI,UACF,CAAC4gC,KAEe3hC,QAAQ,MAG5B,CAACqhC,EAAiBM,EAAoB3pB,IAGlCyf,EAAct9B,sBAAau9B,GAAa,GAC1B3W,UAAgBA,GAAU2W,KAC3C,IAEG,CAAE1S,OAAME,MAAOuc,QAGnBppC,uBACe,QACb,MAAO,CAAEqhC,QAAS,QAClB,IACEiI,GACAL,EAAexmB,UACfumB,EAAgBvmB,SACZ4J,GACAD,GAGN,aAAcsd,EACd,aAAc1+B,EACd,QAAS2+B,YAET3pC,OAAG,UAAY,aAAY8f,IAAS+M,mBAClC5sB,UACE,EAAE,IACF,MAAOQ,KAAKwhC,IAAIniB,IAAS6M,GAAQ7M,IAAS+M,IAC1C,OAAO,IACP,UAAU,aACV,KAAK,QACL,YACE,CAACI,GACDgc,EAAexmB,UACfumB,EAAgBvmB,SACZ,EACA,KAGRxiB,UACE,WAAW,SACX,EAAGQ,KAAKwhC,IAAIniB,IAAS6M,GAAQ7M,IAAS+M,IAAO,EAC7C,EAAE,KACF,SAAS,KACT,KAAK,MACL,YACE,CAACI,GACDgc,EAAexmB,UACfumB,EAAgBvmB,SACZ,EACA,YAGLsmB,IAAgBvrB,OAAYurB,EAAY3Z,QAAQ,GAAK,QAG1DnvB,EAAC,IACC,KAAM6kC,EAAUnY,KAChB,GAAImY,EAAUjY,GACd,OAAQmS,EACR,OAAQI,IAET0J,EACC7oC,EAAC,OAED4oC,GACA3hB,GACAA,EAAQ5kB,OAAS,GACjB4kB,EAAQ9kB,IAAK+kB,GACXlnB,EAAC,IACC,UAAW0sB,EACX,QAASE,EACT,OAAQ1F,GACHA,EAAQtkB,OAtDdA,GC7JX,YAAuB,CAAE6lB,SAAwB,MACzCtlB,GAAOm8B,GAAgB7W,oBAIzB,UAAU,OACV,OAAO,QACP,YAAY,IACZ,KAAK,OACL,EAAGtlB,ICGT,YAAqB,CACnBujB,SACAnD,eACA7D,eACAiqB,cACAf,wBACAgB,uBACmB,qBAEd,SAAW,QAAOrmB,2BAClBmD,oBAAQI,SAARJ,cAAgBvkB,IAAKsmB,KACnB3K,gCACE,IACC,UAAW2K,EACX,eACA,wBACA,cACEkhB,MAAeA,IAAgBlhB,EAAM7lB,MAGxCgnC,KAAwB,IAAc,YAT1BnhB,EAAM7lB,OAgB7B,KAAMinC,IAAiB5oC,eAAK6oC,IAEtBC,GAAW,CAAErjB,OAAQ,iBAEM,MACzB,CACJnD,eACA9D,YAAa,CACXC,eACA5a,KAAM,CAAE6jC,YAAWC,wBAAuBgB,yBAE1CpsB,IAEE,CAAEkJ,UAAW+G,GAAYsc,aAG5B,IAEGrjB,SACAkiB,wBACAgB,sBACAlqB,eACA6D,eACAomB,YAAahB,kBAAW/lC,KAAM,KC1DtC,KAAMQ,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAoBf,aAAyB,MACjB,CAAEwgB,eAAgBjC,IAElB,CAAEqC,UAAWwc,KACbx0B,EAAWgpB,IAEXmZ,EAAqBnoC,sBACxBe,GAAO,GACG,CAAE4F,KAAMyhC,GAAuBrnC,QAE1C,CAACiF,IAGGqiC,EAAgBvqC,kBAAQ,IACrB8f,EAAY3a,KAAKolC,cACvB,CAACzqB,UAGFzf,gBACGkqC,EAAc7nC,OAAS,GACtBrC,gBACGkqC,EAAc/nC,IAAK2mB,GAClB/oB,OAEE,UAAY,aAAY8f,IAASiJ,EAAK8D,SACtC,IAAKxpB,aAELpD,EAACmlC,IACC,EAAG,IACH,EAAG,GACH,SAAU,IAAM6E,EAAmBlhB,EAAKlmB,MAE1C5C,UACE,EAAE,IACF,MAAQ,GAAE6f,IAASiJ,EAAK4D,MAAQ7M,IAASiJ,EAAK8D,MAC9C,UAAU,gBAZP9D,EAAKlmB,SC1CxB,YAAiB,CAAE26B,OAAM16B,QAAOb,SAAQue,SAAQgD,gBAAgB,iBAG1D,QAAU,OAAM1gB,KAASb,IACzB,QACA,SACA,GAAG,oDAGS,GAAK,GAAEuhB,oCAEb,MAAQ,GAAE1gB,EAAQ0d,EAAOvC,KAAOuC,EAAOE,QACvC,OAAS,GAAEze,IACX,EAAI,GAAEue,EAAOvC,OACb,EAAI,GAAE,YAKX,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,cAEE,UAAU,YAAY,MAAO,CAAE2C,cAAe,mBAC9C,IAAM,YAAS,cCxBxB,KAAMvd,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAgEf,YAA2B,CACzBshB,SACA1d,QACAb,SACAmgB,iBACAkC,WACAsB,aACyB,gBACrB7jB,GAAW6I,qBAAWH,SACpB,CAAE1D,SAAQC,OAAML,QAASiE,qBAAWzD,IACpC,CAAE2Y,UAAWwc,KAEbgE,EAASlS,GAAyBxI,GAElCoJ,EAAYltB,sBACfsoC,GAAc,IACT9lB,EAAU,MACNvf,GAAO4pB,GAAYrK,GACnBsK,EAASC,GAAkB9pB,EAAKuE,EAAGwW,IAASgP,OAAOsb,UAClDrlC,GAAKwE,EAAEqlB,SAET,IAET,CAACtK,EAAUxE,UAIX,CAAC/d,GACDA,EAASwH,EAAIiX,EAAOxe,KACpBD,EAASuH,EAAIkX,EAAOvC,MACpBlc,EAASuH,EAAIxG,EAAQ0d,EAAOE,OAC5B3e,EAASwH,EAAItH,EAASue,EAAOG,OAEtB1gB,SAAK,IAAKoD,KAIjBrD,SAAK,IAAKqD,aACRpD,EAAC,OACDD,mBACEC,UAAM,UAAU,kCAChBA,UAAM,UAAU,iBAASqgC,EAAOxgB,IAASgP,OAAO/sB,EAASuH,MACzDrJ,UAAM,UAAU,wBACfmiB,GAAkBkC,qBAAUJ,OAAVI,cAAgBiX,kBACjCv7B,gBACEA,UAAM,UAAU,0BAEbsgC,EACCxgB,IAASgP,OAAO/sB,EAASuH,GAAKgb,qBAAUJ,OAAVI,cAAgBiX,iBAC9C,SAGJt7B,UAAM,UAAU,uBAChBA,UAAM,UAAU,8BAKrB0G,IAAS,YACR3G,mBACEC,UAAM,UAAU,kCAChBA,UAAM,UAAU,sBACH6uB,OAAO/nB,GAAU+Y,IAASgP,OAAO9nB,IAAOsoB,YAAY,QAKpElN,GACCpiB,EAAC+d,8BACEuG,qBAAUJ,OAAVI,cAAgBiX,kBAAmB50B,IAAS,YAC3C3G,mBACEC,UAAM,UAAU,iCAChBA,UAAM,UAAU,uBAEF6uB,OAAO/nB,GAAU+Y,IAASgP,OAAO9nB,IAC3Csd,qBAAUJ,OAAVI,cAAgBiX,kBAChBjM,YAAY,QAInB3oB,IAAS,YACR3G,mBACEC,UAAM,UAAU,8BAChBD,UAAM,UAAU,qBAED+G,MAAqBC,IAASkoB,OAAOC,WAChD,KACAC,QAAQ,gBAQnBhN,GACCpiB,EAAC+d,8BACC9d,SAAK,UAAU,cACfA,EAAC,OACDD,mBACEC,UAAM,UAAU,iCAChBA,UAAM,UAAU,wBACbqgC,EAAOtR,EAAUjtB,EAASuH,eASzC,KAAM+gC,IAAuBnpC,eAAKopC,iBAEK,MAC/B,CAAE9pB,SAAQ1d,QAAOb,SAAQmgB,iBAAgBwD,aAAcnI,IACvD6G,EAAWoJ,GAAY,YAE3BztB,GAAC,IACOugB,SAAQ1d,QAAOb,SAAQmgB,iBAAgBkC,WAAUsB,cC7L7D,KAAMviB,IAGF,CACFI,UAAW,CACT1B,SAAU,WACVkc,KAAM,OACNjc,IAAK,QAEPyoB,MAAO,CACL3nB,MAAO,OACP5C,QAAS,eACTsgB,OAAQ,QACR7c,SAAU,QAEZ4mC,eAAgB,CACdznC,MAAO,OACPb,OAAQ,MACRuoC,aAAe,YACftqC,QAAS,eACTuqC,aAAc,OAEhBx/B,KAAM,CACJtH,SAAU,SAWd,YAAkB,CAAEqe,SAAwB,MACpC,CAAElC,UAAWuS,KACbtwB,EAAW6I,qBAAWH,OAExB,CAACqV,GAAU,CAAC/d,QACP,WAGH6sB,GAASC,GAAkB7M,EAAM1Y,EAAGwW,IAASgP,OAAO/sB,EAASuH,qBAEtD,MAAOjG,GAAOonB,eAAQzI,EAAMzY,EAAEqlB,KAG7C,aAA0B,MAClB,CAAE7pB,OAAM6gB,YAAW8W,YAAajf,IAChC,CAACoJ,EAAW6jB,GAAoB9oC,mBAAS,wBAErC,IAAM,YACGy7B,EAAM,GACJA,aAGZhQ,GAAG,uBAAwB8J,GAE3B,IAAM,IACJwT,IAAI,uBAAwBxT,KAEpC,SAEGyT,GAAWhrC,kBAAQ,IAErBinB,GACA9hB,EAAK3C,IACFkiB,GACCA,EAASpkB,QAAQ2mB,WACjB6V,EAASpY,EAASzhB,KAClByhB,EAASJ,KAAKuC,UAAYb,YACnB,MAAO,CAAE1lB,QAAS,6BAEnB,MAAO,OACFmD,GAAOknC,gBADL,CAELM,YAAcvmB,EAAqBpkB,QAAQ4D,YAG9C,IAAS,MAAO6qB,GAAYrK,eACvB,MAAOjhB,GAAOonB,eAAQnG,EAASpkB,QAAQ+K,SARRqZ,EAASzhB,IAWpD,IAGH,CAAC+iB,EAAW7gB,EAAM8hB,EAAW6V,UAE3B7V,YAEO,MAAOxjB,GAAOI,mBAAYmnC,IAFf,KCrFzB,KAAMvnC,GAAS,CACbynC,OAAQ,GACRD,YAAa,UACbvqB,YAAa,EACbse,YAAa,EACbmM,WAAY,GASd,aAAuB,MACf,CACJ9oC,SACAa,QACA0d,SACA4B,iBACArd,OACAy4B,OACA9d,YAAa,CAAEC,gBACfgd,iBACElf,IACE,CAAEqC,SAAQC,UAAWuc,QAEvBv6B,GAAW6I,qBAAWH,SACpBgW,GAAa7V,qBAAWzD,IACxB,CAAC6jC,EAAmBC,GAAerpC,gDAE/B,IAAM,MACRspC,GAAS9oB,EACXya,GAAiBF,EAAe,CAC9BlZ,MAAOrB,kBAAgBqB,QAAS,EAChC0nB,MAAO,WAET,EAwCEC,EAAwBC,AAtCT,EAAC/oB,EAAQgpB,IAAqB,IAE/ClpB,GACArgB,GACA4d,IAAiBvB,EAAQE,YAAYzb,GACrC,MACM6lB,GAAQ,CACZ5I,IAASgP,OAAOwc,EAAiBhiC,EAAIgZ,GACrCxC,IAASgP,OAAOwc,EAAiBhiC,EAAIgZ,IACrCqf,KAAK,CAACzM,EAAGqW,IACFrW,EAAIqW,GAIPjnB,EAAWvf,EAAKksB,KACnB6K,GAAMA,EAAEj5B,KAAOuf,EAAevf,OAG7B,CAACyhB,OAAgB,IAAI3f,OAAM,oBACzBqd,GAAQ2M,GAAYrK,GACpBknB,EAAWxpB,EAAM1Y,EAAEm4B,UAAWgK,GAAWA,GAAU/iB,EAAM,IAAM,EAC/DgjB,EAAW1pB,EAAM1Y,EAAEm4B,UAAWgK,GAAWA,GAAU/iB,EAAM,IAEzDijB,EAAa3pB,EAAMzY,EAAE4xB,MAAMuQ,EAAUF,MACvCG,GAAcA,EAAWrpC,OAAS,EAAG,MACjCspC,GAASh+B,GAAI+9B,GACb/c,EAAS+c,EAAWlK,UAAWhX,GAAUA,IAAUmhB,GACnDC,EAAS7pB,EAAM1Y,EAAEoiC,EAAW9c,SAC3B,CACLtlB,EAAGwW,IAAS+rB,GACZtiC,EAAGwW,EAAOqC,EAAevf,IAAI+oC,GAAUV,EACvCtc,OAAQ8c,EAAW9c,UAIlB,QAGkC,GAAI7sB,KACnCqpC,IACX,CACDhpB,EACArd,EACAy4B,EACAz7B,EACA+d,EACAC,EACAJ,EACAgd,IAIAhd,IAAiBvB,EAAQE,YAAYzb,IACrC,CAACmoC,GACD,CAAC5oB,GACD3B,EAAW9Z,OAAS,YACpB,CAAC5E,GACDA,EAASwH,EAAIiX,EAAOxe,KACpBD,EAASkc,KAAOuC,EAAOvC,MACvBlc,EAASuH,EAAIxG,EAAQ0d,EAAOE,OAC5B3e,EAASwH,EAAItH,EAASue,EAAOG,OAEtB,cAML,MAAO,CACLtc,OAAQ,YACR2b,UAAY,aAAYgrB,EAAkB1hC,QAAQ0hC,EAAkBzhC,OACpEyU,gBAAiB,WACjBjc,SAAU,WACVC,IAAK,IAAS8oC,OAASznC,EAAO0nC,YAC9B9sB,KAAM,IAAS6sB,OAASznC,EAAO0nC,YAC/BnqB,cAAe,OACfC,SAAU,6BAIV,MAAOxd,EAAOynC,OAAS,EAAIznC,EAAO0nC,WAAa,EAC/C,OAAQ1nC,EAAOynC,OAAS,EAAIznC,EAAO0nC,WAAa,wBAG9C,GAAI1nC,EAAOynC,OAASznC,EAAO0nC,WAC3B,GAAI1nC,EAAOynC,OAASznC,EAAO0nC,WAC3B,EAAG1nC,EAAOynC,OACV,OAAQznC,EAAOwnC,YACf,YAAaxnC,EAAOid,YACpB,YAAajd,EAAOu7B,wBAGpB,GAAIv7B,EAAOynC,OAASznC,EAAO0nC,WAC3B,GAAI1nC,EAAO0nC,WACX,GAAI1nC,EAAOynC,OAASznC,EAAO0nC,WAC3B,GAAI1nC,EAAOynC,OAAS,EAAIznC,EAAO0nC,WAC/B,OAAQ1nC,EAAOwnC,YACf,YAAaxnC,EAAOid,wBAGpB,GAAIjd,EAAO0nC,WACX,GAAI1nC,EAAOynC,OAASznC,EAAO0nC,WAC3B,GAAI1nC,EAAOynC,OAAS,EAAIznC,EAAO0nC,WAC/B,GAAI1nC,EAAOynC,OAASznC,EAAO0nC,WAC3B,OAAQ1nC,EAAOwnC,YACf,YAAaxnC,EAAOid,kBAtCpB,eChHV,KAAMjd,IAAwB,CAC5B2a,gBAAiB,WACjBjc,SAAU,WACVC,IAAK,MACLic,KAAM,MACNnb,MAAO,EACPG,gBAAiB,OAGnB,aAA6B,MACrB,CACJhB,SACAyd,YAAa,CACXC,eACA5a,KAAM,CAAE+mC,WAERruB,IACE,CAAEqC,UAAWwc,WAEfle,GAAQI,gBAAgB3b,KAAO8c,EAAqB,cAGpD,MAAO,OACFtc,IADE,CAEL2c,UAAY,aAAYF,IAASgsB,EAAMrhB,iBACvCxoB,aCtBR,KAAMsF,IAAuB,CAC3BlD,OAAQ,YACR2Z,gBAAiB,eACjBjc,SAAU,WACVC,IAAK,QACLic,KAAM,QACN2C,cAAe,OACfC,SAAU,UACVuP,WAAY,QAGd,aAAyB,MACjB,CAAEnuB,SAAQa,QAAO0d,SAAQzb,OAAMqd,kBAAmB3E,IAClD,CAAEqC,UAAWwc,KAEbv6B,EAAW6I,qBAAWH,IACtBgW,EAAa7V,qBAAWzD,IACxB4kC,EAAqBnsC,kBAAQ,IACZwiB,EACjBrd,EAAKksB,KAAM6K,GAAMA,EAAEj5B,KAAOuf,EAAevf,IACzC,KAEH,CAACuf,EAAgBrd,IAEdu7B,EAASlS,GACZ2d,iBAAgC7nB,KAAKuC,SAGlCsI,EAAYjtB,sBACfkqC,GAAS,IACJD,EAAoB,MAChBE,GAAUnsB,IAASgP,OAAOkd,SACzB1L,GAAO2L,KAGlB,CAACF,EAAoBzL,EAAQxgB,UAI7B,CAACsC,GACD3B,EAAW9Z,OAAS,YACpB,CAAC5E,GACDA,EAASwH,EAAIiX,EAAOxe,KACpBD,EAASuH,EAAIkX,EAAOvC,MACpBlc,EAASuH,EAAIxG,EAAQ0d,EAAOE,OAC5B3e,EAASwH,EAAItH,EAASue,EAAOG,OAEtB,cAKL,MAAO,OACFpZ,IADE,CAELyY,UAAY,aAAYje,EAASuH,QAAQvH,EAASwH,qCAG7CwlB,EAAUhtB,EAASuH,MANtB,iBCRV,YAAkB,CAAE0T,YAAYQ,QAA4B,MACpD,CACJ9T,QAAS,CACPxJ,QAAS,CAAEgsC,aAEX5qB,KACEzZ,EAAQ4V,IAER,CACJiC,YAAa,CAAEC,gBACfpC,YACAxY,OACAy4B,OACA16B,MAAOqpC,EACPlqC,OAAQmqC,EACR5rB,SACA4B,iBACAH,UACAya,WACAxa,UACAsC,WACAmY,gBACAnZ,gBACE3b,EAEEC,EAAWgpB,IACXyG,EAAQ8U,KACRvX,EAAQwX,KAER,CAACC,EAAYC,GAAiBzkC,qBAClC0kC,GACAva,wBAGQ,IAAM,CACVjQ,EAAQ3f,OAAS,GAAK4f,EAAQ5f,OAAS,GAAK6pC,GAAaC,KAC7C,CACZ3jC,KAAMikC,GACN5kB,QAAS,CACP5F,UACAsC,WACAvC,UACAya,WACAlc,SACAve,OAAQmqC,EACRtpC,MAAOqpC,EACPxP,gBACAa,WAIL,CACD4O,EACA5rB,EACAgd,EACAb,EACAwP,EACAlqB,EACAya,EACAxa,EACAsC,SAGI6M,GAAiBvvB,sBACpBwvB,GAAc,MACPqb,GAAiB,IAAM,IACvB,CAACJ,EAAWzsB,QAAU,CAACysB,EAAWxsB,mBAEhC,CAAEhZ,SAAQC,QAASsqB,EACnBsb,EAAYL,EAAWzsB,SAASgP,OAAO/nB,GACvC8lC,EAAUN,EAAWzsB,SAASgP,OAAO9nB,MACpC8lC,KAAK,WAAY,OACnBxb,GADmB,CAEtB5I,MAAO,CAACkkB,EAAWC,GAASlL,KAAK,CAACzM,EAAGqW,IAAMrW,EAAIqW,UAI/Cja,EAAU3oB,cACJgX,OACDvB,GAAQM,cAAc7b,IACpBqpC,kBAASa,6BACNrnB,OACH,MACC,OACA,iBACA,OAAQ6mB,EAAWzsB,QACfwR,IAEN,CACE6D,QAAS,IAAM,GACPI,0BAUTjE,EAAU5oB,gBACXiX,OACDvB,GAAQG,SAAS1b,KACX,GACP4F,KAAMukC,IACH1b,cAGFlT,GAAQM,cAAc7b,SACnB,CAAC8pB,EAAME,GAAMjhB,GAAS/D,EAAO,CACjCd,OAAQuqB,EAAUvqB,OAClBC,KAAMsqB,EAAUtqB,UAGd,CAACob,aAEC,CACJrd,KAAM,CAAEuE,MACNzB,EAAM9C,KAAKqd,EAAeqB,OAExB,CAAEsX,YAAWC,WAAYC,GAAgB3xB,EAAG,CAAEqjB,OAAME,OAEtDmO,EAAUD,GAAakS,KAChB,CACPxkC,KAAMykC,GACNplB,QAAS,KACJwJ,OAIDvtB,MACH,uDAAsDkpC,uBAMxD7uB,GAAQU,wBAAwBjc,KAC1B,GACP4F,KAAM0kC,IACH7b,cAIFlT,GAAQE,YAAYzb,KACd,GACP4F,KAAM2kC,IACH9b,cAIFlT,GAAQK,mBAAmB5b,KACrB,CACP4F,KAAM4kC,GACNtkB,KAAM,CAAE4D,KAAM2E,EAAUvqB,OAAQ8lB,GAAIyE,EAAUtqB,kBAI7CoX,GAAQW,eAAelc,KACjB,CACP4F,KAAM6kC,GACNxlB,QAAS,CAAE6E,KAAM2E,EAAUvqB,OAAQ8lB,GAAIyE,EAAUtqB,4CAS/C2Y,WAEAA,GAAgB,QACT,GAAElX,KAAM+oB,IAAcF,YAMzC,CACEib,EACA5sB,EACAusB,iBAASa,yBACTxV,EACAxyB,EACAqd,EACAta,EACAD,EACAitB,IAIErD,EAAsB3vB,sBAAY,IAAM,GACnC,CAAE2G,KAAMipB,GAAe6b,SAAUC,GAASC,mBAClD,CAAC3lC,IAEE6pB,EAAa7vB,sBAChBwG,GAAU,GACA,CAAEG,KAAMopB,GAAUvpB,QAAOqX,kBAEpC,CAAC7X,EAAU6X,IAGPmS,EAAahwB,sBAChBC,GAAa,MACN4qC,GAAiB,IAAM,IACvB,CAACJ,EAAWzsB,mBAEV4tB,GAAOnB,EAAWzsB,SAASgP,OAAO/sB,EAASuH,MAC1CwjC,KAAK,aAAc,OACrB/qC,GADqB,CAExB2rC,cAIA3rC,EAAS2G,gBACHiX,OACDvB,GAAQE,YAAYzb,KACd,CACP4F,KAAMklC,GACNrC,iBAAkBvpC,cAGjBqc,GAAQS,UAAUhc,yBAOjB8c,OACDvB,GAAQI,gBAAgB3b,KAClB,CACP4F,KAAMmlC,GACN7rC,SAAUA,EAASuH,YAQ7B,CAACxB,EAAUykC,EAAY5sB,aAItB,IAAc,MAAO4sB,aACnB,aACE,CAAC,CAAEtqC,SAAQa,aACT,IAAwB,SAAgB,0BAClC,MAAO,CAAEb,OAAQ,OAAQF,SAAU,wBACrC,IAAQ,YAAsB,cAE9BwqC,EAAWzsB,QACVysB,EAAWxsB,QACXhb,GACAA,EAAKzC,OAAS,KACX,IACC,QAAS+uB,EACT,cAAeI,EACf,QAASK,EACT,OAAQH,EACR,MAAO,CACL7uB,MAAO,OACPb,OAAQ,OACRue,OAAQ,OACRze,SAAU,WACV8e,SAAU,qBAGX,IACC,MAAO,CACL/d,MAAO,OACPb,OAAS,OACTF,SAAU,wBAGX,SACA,SACA,IAAQ,UAAWkd,GAAWC,MAC9B,SACA,SACA,SACA,SACA,IACC,MAAOitB,EACP,OAAQC,EACR,SACA,OACA,+BChVxB,KAAM/oC,IAA2C,CAC/CI,UAAW,CACT+c,OAAQ,QAGVqtB,OAAQ,CACN5qC,gBAAiB,UACjB9C,QAAS,OACTuD,aAAc,OACdC,SAAU,OACVC,UAAW,UAGby1B,MAAO,CACLyU,eAAgB,aAGlBC,KAAM,CACJ/J,UAAW,OACXhL,WAAY,WACZ/1B,gBAAiB,QACjB9C,QAAS,OACTuD,aAAc,OACdI,MAAO,oBAI0BpE,EAAsB,iBAElD,MAAO2D,GAAOI,2BACd,MAAOJ,GAAOwqC,uDACR,MAAOxqC,GAAO0qC,sBAClB,MAAO1qC,GAAOg2B,eAAQ35B,EAAMqE,MAAMqxB,UACpC11B,EAAMqE,MAAMiqC,YCrBrB,KAAMC,IAAW5K,qBACf,CAAC3jC,EAAsByzB,IAAwC,MACvD,CACJ+a,QAASC,EAAa,GACtBC,WAAW,GACXnjC,OAAO,GACPojC,WAAW,IAAM,KACjB9mC,QAAQ,IACN7H,EAEE,CAACwuC,EAASI,GAAY1sC,mBAAkBusC,GAExCI,EAAczsC,sBACjBxB,GAAM,GACI,CAAC4tC,KACD5tC,IAEX,CAAC4tC,EAASG,sBAKR,MACA,KAAK,WACL,OACA,GAAIpjC,EACJ,SAAUsjC,EACV,eAAgBJ,EAChB,WACA,YC5BR,YAAwBzuC,EAA4B,MAS9CA,KAPFmiB,SACA5W,OACAojC,WAAW,IAAM,KACjB/mC,YAAY,WACZknC,UAAU,GACVjnC,QAAQ,CAAE9D,UAAW,GAAIoe,MAAO,GAAI4sB,SAAU,KAE5C/uC,EADCgvC,IACDhvC,EADCgvC,CANH7sB,QACA5W,OACAojC,WACA/mC,YACAknC,UACAjnC,UAII,CAAEwf,SAAQ4nB,iBAAkBC,KAC5BnkB,EAAQ+jB,EAAU,CAACjgC,EAAUwY,EAAQ9b,GAAQsD,EAAUwY,EAAQ9b,GAE/D4jC,EAAgB/sC,sBACpB,AAACxB,GAA2C,GACxC+I,YACO/I,KACK2K,EAAMujC,EAAU/jB,EAAQ,CAACA,IAEzC,CAACxf,EAAMojC,EAAUG,EAASG,EAAelkB,oBAKvC,UAAY,GAAEnjB,WAAmBmjB,IACjC,MAAOljB,EAAM9D,UAAY8D,EAAM9D,UAAY,aAE1Coe,cAEG,QAAS5W,EACT,UAAU,iBACV,MAAO1D,EAAMsa,MAAQta,EAAMsa,MAAQ,YAElCA,MAGJ,UACK6sB,IACJ,OACA,QAASjkB,EACT,SAAUokB,EACV,MAAOtnC,EAAMknC,SAAWlnC,EAAMknC,SAAW,SClDjD,KAAMK,IAAazL,qBACjB,CAAC3jC,EAAwByzB,IAAwC,MACzD,CACJ4b,WAAW,IAAM,KACjBC,gBAAgB,GAChBC,mBAAmB,MACjBvvC,WAGD,IACC,SAAUyzB,EACV,gBACA,WACA,2CAEGzzB,EAAM2H,2BCtBf,EACA,MACM,GAAYe,8CAER,IAAM,GACT,QAAQ,AAAC,GAAQ,CAChB,CAAC,IACD,MAAO,IAAQ,aACb,EAAU,SAEb,EAA8B,QAAU,EAAU,YAGtD,CAAC,IAEG,ECJT,KAAM/E,IAGF,CACFwe,MAAO,CACLqtB,WAAY,EACZ9e,WAAY,QAGd+e,aAAc,CACZltC,OAAQ,OACRa,MAAO,QACPY,aAAc,MACd0rC,YAAa,SACbvE,YAAa,UACbwE,YAAa,QACbnvC,QAAS,OACTqzB,cAAe,MACf/vB,WAAY,SACZqd,SAAU,UAEZyuB,MAAO,CACLjO,QAAS,OACTkO,KAAM,EACNttC,OAAQ,OACR2B,UAAW,SACXd,MAAO,QAET0sC,YAAa,CACXvtC,OAAQ,mBACRyB,aAAc,MACdT,gBAAiB,OACjBa,MAAO,QACP2rC,YAAa,IACb9rC,SAAU,MACVxD,QAAS,IAmBPuvC,GAAQrM,qBACZ,CACE,EAsBAlQ,IACG,CAvBH,QACE1I,SAAQ,GACRxf,OACA1D,QAAQ,CACN+nC,MAAO,GACPH,aAAc,IAEhBd,WAAW,IAAM,KACjBsB,eAAe,EACfC,YAAY,IAAM,KAClBC,aAAa,IAAM,GACnBpnC,OAAO,OACPqnC,mBAAmB,GACnBxoC,YACAg5B,SAAS,IAAO7V,GAAUA,EAC1BslB,SAAS,IAAM,KACfC,UAAU,IAAM,KAChBC,aAAa,KACbC,WAAW,GACXC,WAnBF,EAoBKzwC,IApBL,EAoBKA,CAnBH+qB,QACAxf,OACA1D,QAIA8mC,WACAsB,eACAC,YACAC,aACApnC,OACAqnC,mBACAxoC,YACAg5B,SACAyP,SACAC,UACAC,aACAC,WACAC,iBAKI,CAACC,EAAKC,GAAUzuC,mBAAS6oB,GACzB6lB,EAAWloC,mBACXmoC,EAAcC,GAAgB,CAACrd,EAAKmd,IAEpCG,EAAmBroC,iBACvBuB,GAAU8gB,GAAU,GACTA,IACRklB,IACHjmC,4BAEQ,IAAM,GACP+gB,IACN,CAACA,wBAEM,IAAM,OACVqlB,wBACWpmC,kBAASgnC,WAEvB,CAACZ,EAAkBS,SAEhB7Q,GAAW59B,sBACd2oB,GAEQkmB,AADarQ,IAElB73B,IAAS,SACL2gB,OAAOqB,GAAOmmB,SAAW,IACvB1hB,OAAO,GACPA,OAAOzE,GACTA,GAGR,CAAC6V,EAAQ73B,IAGLooC,EAAkB/uC,sBACrBxB,GAAM,GACH+I,YACAb,oBACA0iB,4BACaT,EAAO,IAChBhiB,IAAS,SAAU,MACfqoC,GAAU,+CACZrmB,KAAMmmB,SAAW,IAAME,EAAQC,KAAKtmB,UAKnC,QAGHyV,GAAiB5/B,EAAEq+B,OAAOlU,SAC5BumB,EAAM9Q,IAAW2P,EAAW3P,GAAS,MACjCyQ,GAAcrQ,MAEbqQ,EAAYzQ,SAEbkQ,GAAM,OACP9vC,GADO,CAEVq+B,OAAQ,CAAE1zB,KAAM3K,EAAEq+B,OAAO1zB,KAAMwf,MAAOiV,EAASQ,MAG7CyP,IACeS,KAERA,KAIf,CACEP,EACAY,EACAd,EACArP,EACAZ,EACA2O,EACA5lC,IAIEo4B,EAAgB/+B,sBACnBwG,GAAU,GACHe,YACI,OACLf,GADK,CAERq2B,OAAQ,CAAE1zB,KAAM3C,EAAMq2B,OAAO1zB,KAAMwf,MAAOiV,EAAS0Q,QAGvD,CAAC1Q,EAAUkQ,EAAWQ,IAElBa,EAAmBnvC,sBAAawG,GAAU,GACxCE,mBACL,IAEG0oC,EAAepvC,sBAAY,IAAM,GAC9B,kBAEN,CAACquC,oBAIA,MAAO,OACF9sC,GAAO8rC,cACN5nC,kBAAO4nC,cAAe5nC,EAAM4nC,aAAe,IAEjD,UAAY,SAAQ7nC,GAAa,eAEhC2oC,oCAEKvwC,IACJ,IAAK6wC,EACL,OACA,MAAO,OACFltC,GAAOisC,OACN/nC,kBAAO+nC,OAAQ/nC,EAAM+nC,MAAQ,mBAErBrkC,EAAQ,SAAQA,IAAS,GACvC,KAAK,OACL,MAAOmlC,EACP,SAAUS,EACV,UAAWhQ,EACX,WAAYoQ,EACZ,cAAgB3wC,GAAMA,EAAEkI,kBACxB,UACA,YAED0nC,GAAYE,eAET,KAAK,SACL,MAAO/sC,GAAOmsC,YACd,QAAS0B,qBAEH,MAAO,CAAEhxC,QAAS,QAASsgB,OAAQ,qCCtNrD,WAAqB9gB,EAAyB,MAYxCA,KAVFuL,QACA1D,QAAQ,CAAEsa,MAAO,GAAIytB,MAAO,IAC5BjB,WAAW,IAAM,KACjBwB,aAAa,IAAM,GACnBpnC,OAAO,OACPnB,YAAY,GACZmjB,QAAQ,KACR6V,SAAS,IAAO7V,GAAUA,EAC1B0mB,8BAA8B,IAE5BzxC,EADCgvC,IACDhvC,EADCgvC,CATHzjC,OACA1D,QACA8mC,WACAwB,aACApnC,OACAnB,YACAmjB,QACA6V,SACA6Q,gCAII,CAAEpqB,SAAQoa,eAAcwN,gBAAeyC,SAAQC,WACnDzC,KAEIC,EAAgB/sC,sBACnBxB,GAAM,GACIA,KACIA,IAEf,CAAC6gC,EAAckN,wBAGP,IAAM,CACV5jB,KACYxf,EAAMwf,IAErB,CAACxf,EAAM0jC,EAAelkB,SAEnB6mB,GAAY1xC,kBAAQ,IACpBuxC,EACK5iC,EAAU6iC,EAAQnmC,IAASsD,EAAU8iC,EAASpmC,GAEhDsD,EAAU6iC,EAAQnmC,GACxB,CAACkmC,EAA6BC,EAAQnmC,EAAMomC,aAG5C,MACC,OACA,MAAO5mB,GAAgBlc,EAAUwY,EAAQ9b,GACzC,SAAU4jC,EACV,OACA,MAAO,OACFtnC,GADE,CAEL4nC,aAAc,OACT5nC,EAAM+nC,OACLgC,GAAa,CAAEzG,YAAa,MAAOxJ,QAAS,WAGpD,aACA,YACA,UACIqN,SC/DG,IAAcrBrrC,GAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA+BTqyC,GAAgB,CACpBtmC,KAAM,GACNumC,WAAY,GACZC,OAAQ,GACRC,iBAAkBC,GAAkBC,UAStC,YAAqB,CAAEzc,UAAS0c,SAAQ5mC,QAA0B,MAC1D6mC,GAAU1pC,mBAEV2pC,EAAajwC,sBAAY,IAAM,GAC3B4H,QAAQsoC,cACf,IAEGC,EAAgBnwC,sBACnBilB,GAAW,GACHA,iBAGT,CAACoO,EAAS0c,UAIV7xC,UAAK,IAAK,CAACkyC,GAAa7uC,cACtBrD,SAAK,UAAU,0BACbC,oCACAA,EAACq6B,IAAY,QAASnF,EAAS,UAAU,gBAE3Cl1B,SAAK,UAAU,yBACbD,EAAC,IACC,IAAK8xC,EACL,cAAe,OAAKP,IAAL,CAAoBtmC,SACnC,SAAUgnC,YAEVjyC,SAAK,UAAU,0BACbC,UAAM,UAAU,iCAChBA,EAAC,GACC,KAAK,OACL,UAAU,OACV,MAAO,CACLkvC,aAAc,CAAErsC,MAAO,cAK7B9C,SAAK,UAAU,0BACbC,UAAM,UAAU,uCAChBA,EAAC,IAAe,KAAK,kBAEvBD,SAAK,UAAU,0BACbC,UAAM,UAAU,0CAChBA,EAAC,IAAe,KAAK,cAEvBD,SAAK,UAAU,0BACbC,UAAM,UAAU,sCAChBD,SAAK,UAAU,8BACbA,qBACEC,EAAC,IACC,KAAK,QACL,KAAK,mBACL,MAAO0xC,GAAkBC,yBAI7B5xC,qBACEC,EAAC,IACC,KAAK,QACL,KAAK,mBACL,MAAO0xC,GAAkBQ,0CAQrCnyC,SAAK,UAAU,6BACbC,YAAQ,KAAK,SAAS,QAAS8xC,EAAY,UAAU,gCAGrD9xC,YAAQ,KAAK,SAAS,QAASk1B,EAAS,UAAU,+BC/H1D,YAA2B,EAAM,YAE3B,GAAY,SAAS,cAAc,SAC7B,UAAY,IAGZ,MAAM,SAAW,UACjB,MAAM,cAAgB,SACtB,MAAM,QAAU,OAGtB,GAAe,MAAM,UAAU,MAChC,KAAK,SAAS,aACd,OAAO,AAAC,GACA,CAAC,EAAM,mBAIT,KAAK,YAAY,aAGnB,yBAAgB,qBAEnB,GAAQ,SAAS,gBACf,WAAW,aACV,yBAAgB,SAAS,YAEvB,YAAY,iBACV,KAAU,KACZ,SAAW,YAGX,YAAY,iBACV,KAAU,KACZ,SAAW,YAIX,KAAK,YAAY,GAG5B,kBAAmC,EAAM,IACnC,WACgB,GACX,eAEA,IAGX,kBAAmC,EAAM,IACnC,aACI,WAAU,UAAU,UAAU,GAC7B,eAEA,IAOX,kBACE,EACA,EAAW,aACX,EAAc,EACd,EAAe,GACf,MACM,GAAW,KAAK,UACpB,EACA,CAAC,EAAK,IACJ,YAAY,OAAO,GAAS,MAAM,KAAK,GAAgB,EACzD,MAEG,KAIC,MACI,GAAM,GAAIid,MACZ,KAAK,GAAG,WAAmB,QACzB,GAAO,KAAM,GAAI,cAAc,CACnC,KAAM,OACN,YAAa,UACb,mBAAoB,CAClB,MAAO,uBAGJ,EAAM,GAAG,kBACT,WAEC,IAAI,OAjBG,MACX,GAAO,GAAI,MAAK,CAAC,GAAW,CAAE,KAAM,iCACnC,EAAM,GAAG,aAoBpB,YAAwB,EAAM,EAAS,EAAW,aAAc,MAExD,GAAgB,CAAC,OAAQ,uBACpB,KAAS,GAAK,GAAG,KAAK,IACjB,KAAK,MAEjB,GAAS,GAAG,EAAc,KAAK;AAAA,WAExB,KAAY,GAAM,MACrB,CACJ,KAAM,CAAE,MACR,KAAM,CAAE,cACR,QAAS,CAAE,SACT,EACE,EAAc,CAAC,EAAM,YAChB,KAAS,KACN,KAAK,MAET,GAAG,EAAY,KAAK;AAAA,OAG1B,GAAO,GAAI,MAAK,CAAC,GAAS,CAAE,KAAM,gDACjC,EAAM,GAAG,SAGlB,YAAsB,EAAM,EAAW,aAAc,GAC9C,cAAc,CAAE,KAAM,SAAU,KAAK,AAAC,GAAY,mBAC9C,EAAS,GAAG,gBAWvB,YAAqB,EAAW,EAAW,aAAc,MACjD,CAAE,QAAS,GAAQ,qBAClB,EAAM,GAAG,SAGlB,YAAqB,EAAW,EAAW,aAAc,MACjD,CAAE,OAAM,QAAO,UAAW,GAAQ,MACpC,IACE,GAAS,SAAS,cAAc,YAC7B,MAAQ,IACR,OAAS,KACZ,GAAU,EAAO,WAAW,MAE5B,MACM,UAAY,UACZ,SAAS,EAAG,EAAG,EAAO,MAAO,EAAO,YAG1C,GAAM,GAAI,OACV,EAAM,IAAI,gBAAgB,KAC1B,OAAS,SAAY,YACd,UAAU,EAAK,EAAG,MACvB,GAAM,EAAO,UAAU,YAAa,qBACjC,EAAK,GAAG,aACX,gBAAgB,MAElB,IAAM,QACH,WAEC,IAAI,IAIhB,YAA6B,EAAO,YAC5B,GAAM,SAAS,cAAc,SAC/B,IAAM,IAEN,MAAM,SAAW,UACjB,MAAM,cAAgB,SACtB,MAAM,QAAU,aAEX,KAAK,YAAY,QACpB,GAAQ,SAAS,gBACjB,WAAW,aACV,yBAAgB,SAAS,YACvB,YAAY,iBACZ,KAAK,YAAY,GAG5B,YAA4B,EAAQ,GAC3B,OAAO,AAAC,GAAM,MACb,GAAO,GAAI,eAAc,EAC5B,EAAE,MAAO,cAGF,UAAU,MAAM,CAAC,IAAO,KAChC,IAAM,SAEI,IAAI,uBAEd,AAAC,GAAQ,SAEC,IAAI,OAMpB,YAA4B,EAAW,MAC/B,CAAE,OAAM,QAAO,UAAW,GAAQ,MACpC,IACE,GAAS,SAAS,cAAc,YAC7B,MAAQ,IACR,OAAS,KACZ,GAAU,EAAO,WAAW,MAE5B,MACM,UAAY,UACZ,SAAS,EAAG,EAAG,EAAO,MAAO,EAAO,YAG1C,GAAM,GAAI,YACR,GAAM,IAAI,gBAAgB,KAC5B,OAAS,SAAY,YACd,UAAU,EAAK,EAAG,QACrB,GAAM,EAAO,UAAU,YAAa,GAGtC,UAAU,UAAU,SACH,MAEC,OAGlB,gBAAgB,MAElB,IAAM,QACH,GACH,YAAa,uBAGb,gFAII,IAAI,IAIhB,YAAiB,EAAW,UAEtB,GAAY,YAAS,eAAe,KAAxB,cAAoC,UAAU,SACxD,GAAQ,iBAAM,aAAa,SAAS,QAAQ,KAAM,IAClD,EAAS,iBAAM,aAAa,UAAU,QAAQ,KAAM,MAEvD,iBAAiB,2BACjB,QAAQ,AAAC,GAAY,EAAQ,eAe1B,GAAM,GAAG,AAdF,sCAAsC,KAAS,aAAkB,eAAmB,wDACnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAagB,EAAK,wBAE5B,CAAE,KADI,GAAI,MAAK,CAAC,GAAM,CAAE,KAAM,kBACtB,QAAO,UC3QxB,KAAM,IAAQ,GAAIhlC,sBAOc,EAAW,EAA4B,GAAI,MACnE,CAAE,WAAU,UAAW,EACvB,CAAE,OAAO,GAAI,YAAa,KAC5B,GAAM,QACJ,GAAY,GAAG,EAAS,KAAK,oBAC3B,EAAK,eACN,UACA,QACI;AAAA,4BAA+B,KAAa,EAAS,QAAQ,WAC1D,KACR,SAAS,KAAa,EAAS,QAAQ,OACvC,EAAK,kBAGJ,SACC,CAAC,EAAK,cACL,GAAM,UAAU,EAAK,QAAQ,KAAK,KAAO,IAAQ,gBACzC,KAAQ,GAAI,MACjB,EAAK,SAAS,QACR,KACR,UAAU,IACV,KAAM,MAAI,KAAK,KAAT,cAAgB,MAAM,oBAGzB;AAAA,gCAAmC,GAAe,0BAIvD,CAAC,QACC,KAAM,OAAM,GAAU,KAAK,KAAO,IAAU,IAC5C,CAAC,YACD,GAAO,EAAS,MAAM,KAAK,MAAM,SAC/B,GAAO,SAAS,KAAa,OAC5B;AAAA,sBAAyB,QACtB,KAAK,EAAM,KAAM,GAAM,uBAIhC,GAGT,YAAwB,EAAK,IACvB,GAAQ,EAAI,OAAO,AAAC,GAClB,EAAa,MAAM,YAAoB,GAEzC,KAAa,SAAS,QACtB,EAAa,SAAS,OACtB,EAAa,SAAS,QACtB,EAAa,SAAS,cAMpB,GAAQ,EAAM,UAClB,AAAC,GAAS,EAAK,KAAK,SAAS,OAAS,EAAK,KAAK,SAAS,cAEpD,GAAQ,GAAK,EAAM,GAAO,KAAO,EAAM,GAAG,iBClE1B,EAAsC,CACxD,MAAM,QAAQ,OAA8B,CAAC,OAC9C,GAAuB,UAClB,KAAW,KACZ,KAAK,GAAc,UAEpB,GAGT,YAAuB,EAAiB,QAC9B,EAAQ,mBACT,WACI,OACJ,YACI,iBAEA,sBCLX,EACA,EACA,EAA+B,CAAE,OAAQ,CAAE,QAAS,KACpD,IACI,CAAE,SAAS,GAAI,UAAW,EAC1B,EAAM,GACN,EAAkC,UAC7B,KAAY,GAAM,MACnB,CAAE,QAAS,KACb,EAAK,OAAS,EAAK,UAAY,cAC/B,GAAU,GACV,EAAS,EAAS,OAAO,QAAU,GAEnC,EAAU,EAAS,KAAK,QACxB,EAAU,EACV,EAAS,KACA,QAAQ,AAAC,GAAM,CACtB,IAAM,WAEC,KAAK,GAEd,EAAU,MAAY,IAAI,QAEnB,GAAG,OAAY,EAAQ,gBAAgB,KAE9C,EAAS,KAAK,mBACL;AAAA,SAAY,OAAO,EAAS,KAAK,eAAe,QAAQ,aAG/D,CAAE,SAAS,IAAO,KAEb,KAAM,IAAU,EAAW,CACpC,WACA,cAGE,GAAQ,GAAS,GAAS,UAErB,KAAS,GAAQ,IACpB,GAAU,EAAM,eAEX,KAAU,GAAS,IACtB,CAAE,gBAAiB,OACjB,GAAgB,IAAiB,MAAQ,IAAY,QAC9C;AAAA,EAAK,OAAO,EAAM,MAAM,QAAQ,MAAU,OACnD,EAAM,IACN,QAAQ,aACD,EAAO,SACL;AAAA,EAAK,OAAO,EAAO,OAAO,QAAQ,sBAK3C,GAAc,MAEd,EAAO,QAAU,EAAO,OAAO,OAAS,MACnC,OAAO,QAAQ,CAAC,EAAO,EAAG,IAAQ,IACnC,GAAY,KACZ,IAAM,EAAI,OAAS,MAAe,OAEvB,GADH,EAAO,QAAQ,GAAO,OAAS,IACjB,SAEjB,OAAO,KAGhB,IAAY,KAAM,CAChB,EAAO,kBAAyB,OAAO,EAAO,mBAE9C,GAAY,EAAO,MACnB,MAAM,QAAQ,IAAc,EAAU,OAAQ,IAC5C,GAAY,gBAEL,KAAoB,GAAW,OAC7B,GAAG,IAAY,OACxB,EAAiB,UACjB,QAAQ,KACN,EAAiB,OAAQ,IACvB,CAAE,UAAW,KACZ,MAAM,QAAQ,OAAkB,CAAC,IAClC,CAAC,EAAO,mBAGD,IADT,EAAO,QAAQ,EAAO,IAAI,OAAS,OAAO,EAAO,SAGzC,MAGZ,EAAM,eACG,OAAO,OAAO,EAAM,aAAa,QAAQ,KAC3C,EAAM,WACJ,OAAO,EAAM,QAAQ,QAAQ,KAC/B,EAAM,QAAQ,GAAG,UAAY,YAC3B,OAAO,EAAM,QAAQ,GAAG,YAIrC,EAAQ,YAAmB,SAEtB;AAAA,EAEP,KAAK,KAAK,QAAiB,SAE1B,eCjH2B,EAAoB,QAC9C,EAAW,mBACZ,WACA,aACI,SACJ,aACI,mBAEA,MCJb,KAAM,IAAU,MAAM,0BAQpB,EACA,EACA,EAA+B,CAAE,OAAQ,IACzC,MACM,CAAE,WAAY,EAAQ,UACxB,GAAM,QAEJ,GAAS;AAAA,wBACN,KAAY,GAAM,IACrB,EAAS,KAAK,UAAY,cAC1B,GAAU,QACR,CAAE,OAAM,UAAW,KACrB,CAAE,UAAS,aAAY,iBAAkB,EAIzC,EAAmB,GAAoB,GACvC,OACS,GAAG,IAAS,EAAQ,MAAM,KAAoB,EAAQ,UAE/D,GAAQ,GAAS,MAEV,KAAM,IAAU,EAAW,CACpC,WACA,WAGE,OAAuB;AAAA,UAAa,QACpC,OAA0B;AAAA,eAAkB,QAE5C,EAAS,KAAK,mBACL;AAAA,SAAY,OAAO,EAAS,KAAK,cAAc,IAAI,QAC5D,WAIA,GAAQ,EAAS,MAAM,QAAU,UAC5B,KAAQ,GAAO,IAClB,GAAU,EAAK,eACV,KAAU,GAAS,IACtB,CAAE,IAAG,IAAG,SAAU,EAClB,EAAS,GAAc,EAAG,EAAS,EAAM,IACzC,EAAS,GAAc,EAAG,EAAS,EAAM,IACzC,EAAY,KAAK,IAAI,GAAG,EAAM,IAAI,AAAC,GAAM,EAAE,OACpC;AAAA,EAAK,KAAU,QAAa,EAAU,QAAQ,WAGtD,QAEF,GAAI,OAAS,EAAI,GAAG;AAAA,EAAU,GAGvC,YAAuB,EAAM,EAAQ,EAAO,IACtC,CAAE,SAAQ,SAAU,KACpB,EAAQ,IACL,GAAQ,OAAkB,CAAC,IAC5B,EAAO,OAAS,QAAU,QAAO,GAAO,QAAQ,MAChD,GAAQ,EAAO,IAAI,AAAC,GAAU,EAAO,GAAO,OAAO,KAAK,WACrD,GAAO,OAAS,EAAI,IAAI,KAAW,QAErC,QAAO,GAAO,QAAQ,eCxED,EAAS,IACjC,GAA4B,YACrB,CAAE,IAAG,MAAO,KACP,KAAK,EAAG,SAEjB,eCMP,EACA,EAA4B,CAAE,cAAe,IAC7C,MACM,CAAE,gBAAe,YAAa,KAEhC,GAAc,GAAiB,EAAU,CAAE,QAAS,IAAK,UAAW,IAEpE,EAAU,GACV,EAAiB,UACZ,KAAY,GAAM,IACrB,CAAE,YAAW,WAAY,EAAS,KAClC,EAAQ,GAAS,GAEjB,CAAC,EAAQ,GACX,EAAY,EAAI,CAAC,QAAS,IAAiB,CAAC,SAAU,AAAC,GAAM,GAAK,IAEhE,EAAO,EAAS,GAAQ,QAAU,UAC7B,KAAO,GAAM,IAChB,GAAU,EAAY,EAAI,gBACrB,GAAI,EAAG,EAAI,EAAQ,OAAQ,IAAK,IACnC,GAAS,EAAQ,GAAG,QAAU,UACzB,KAAS,GAAQ,IACpB,GAAQ,OAAO,EAAQ,GAAG,OAAO,QAAQ,EAAM,EAAI,IAEnD,EAAe,EAAc,KAAK,AAAC,GACjC,EAAI,QAAU,GAKhB,EAAe,CACjB,KAAM,EAAa,MAAM,GACzB,WACA,cACA,UAAW,EAAa,aAGlB,GAAS,CACf,MAAO,EAAa,MAAM,IAAI,AAAC,GAAM,EAAI,GACzC,MAAO,EACP,MAAO,GAAY,WAGZ,KAAQ,GAAa,QACf,KAAO,IACL,GAAQ,CACrB,MAAO,EACP,QACA,MAAO,GAAY,aAOxB,CAAE,iBAAgB,WAG3B,YAAqB,EAAS,MACtB,CAAE,OAAM,WAAU,YAAW,eAAgB,KAC/C,GAAQ,MACR,IAAc,IAAK,IAEjB,GAAO,AADO,EAAY,GACP,KAAK,AAAC,GAAM,GAAK,EAAE,OAAS,GAC/C,EAAS,GAAG,IAAY,EAAK,GAAK,IAClC,EAAS,GAAG,EAAS,aAAa,EAAK,MAAM,EAAK,GAAK,MACnD,GAAG,IAAS,WAEZ,GAAG,IAAY,EAAO,UAEzB,GCzET,KAAM,IAAO,CACX,QAAS,UACT,YAAa,cACb,WAAY,aACZ,EAAG,IACH,QAAS,UACT,GAAI,wBAGiC,EAAO,EAAU,GAAI,MACpD,CACJ,OACA,aACE,GAAS,CACX,KAAM,GACN,UAAW,OAGT,GAAY,GAAIilC,aAET,KAAY,QACf,IAAY,EAAM,EAAW,OAC9B,GAD8B,CAEjC,oBAIC,GAAU,aAAc,IAAY,EAAM,EAAW,GACnD,EAUT,kBAA2B,EAAM,EAAW,EAA8B,GAAI,IACxE,CACF,KACA,SAAS;AAAA,cACT,WAAW,WACX,YACE,EAEA,EAAY,GAEZ,EACA,MACSnmC,YAAY,YAAY,EAAS,YAC/B,EAAS,cACb,yBACO,GAAgC,OAG9C,GAAgD,EAChD,GAAU,EAAM,CAAE,gBAAe,aACjC,CAAE,QAAS,OAAW,eAAgB,WAE7B,GAAG;AAAA;AAAA,KACH,GAAO,EAAM,cAAe,CAAE,cAC9B,GAAO,EAAM,UAAW,CAAE,WAEnC,OAAiB,GAAG,EAAS,GAAK;AAAA;AAAA,MACzB,GAAkB,EAAO,QAAS,CAAE,cACpC,KAAM,IAAa,EAAM,EAAW,CAAE,SAAQ,cAC9C,KAAM,IAAa,EAAM,EAAW,CAAE,SAAQ,cAC9C;AAAA;AAAA,IACH,KAAK,GAAG,QAAgB,GAGpC,YAA2B,EAAQ,EAAS,IACtC,CAAC,QAAe,QACd,CAAE,UAAW,KACf,GAAM,GAAG,EAAS,GAAK;AAAA,SAClB,KAAK,GAAQ,IAChB,GAAQ,EAAO,GAAG,SACf,GAAG,EAAO,GAAG,UAAU,EAAO,GAAG,eAC/B,KAAQ,MAAc,KAAK,OAC7B;AAAA,QAEF,GAGT,YAAgB,EAAS,EAAK,EAA+B,CAAE,OAAQ,IAAM,MACrE,CAAE,UAAW,KACf,GAAM,UACD,KAAY,MACf,EAAS,KAAK,GAAM,IACf,GAAG,EAAS,GAAK;AAAA,EAAU,OAAO,EAAS,KAAK;AAAA,cAIpD,gBCtF2B,MAC5BqrB,GAAQ8U,KACRvX,EAAQwX,KACRzkC,EAAQ4V,IAER60B,EAAyBxwC,sBAAY,SAAY,IACjD+F,EAAM9C,KAAKzC,OAAS,EAAG,MACnBiwC,GAAc,KAAMzd,GAAMmB,YAC9B,sDAES,IAAM,IACI,gBAEbL,QAAQ,8BACb,KAEJ,CAACd,EAAOjtB,IAEL2qC,EAAoB1wC,sBACxB,MAAO2wC,EAAc,EAAGC,EAAe,KAAS,IAC1C7qC,EAAM9C,KAAKzC,OAAS,EAAG,MACnBiwC,GAAc,KAAMzd,GAAMmB,YAC9B,sDAGS,IAAM,mBACS,cAEhB0c,GAAW9qC,QAAM9C,KAAK,KAAX8C,cAAe3H,UAAf2H,cAAwBoD,KACnC2nC,EAAeC,GAAOhrC,QACtBirC,IACJF,EACAD,EACAF,EACAC,OAKCK,KACJ,KAGP,CAACje,EAAOjtB,IAGJmrC,EAAoBlxC,sBAAY,SAAY,IAC5C+F,EAAM9C,KAAKzC,OAAS,EAAG,MACnBiwC,GAAc,KAAMzd,GAAMmB,YAC9B,oDAES,IAAM,mBACS,cAChB0c,GAAW9qC,QAAM9C,KAAK,KAAX8C,cAAe3H,UAAf2H,cAAwBoD,KACnC2nC,EAAe,KAAMK,IAAiBprC,MAC/B+qC,EAAcD,OAIxBI,KACJ,KAEJ,CAACje,EAAOjtB,IAELqrC,EAAmBpxC,sBAAY,SAAY,IAC3C+F,EAAM9C,KAAKzC,OAAS,EAAG,MACnBiwC,GAAc,KAAMzd,GAAMmB,YAC9B,mDAES,IAAM,cACT0c,GAAW9qC,QAAM9C,KAAK,KAAX8C,cAAe3H,UAAf2H,cAAwBoD,QAC7B,SAAU0nC,QAErB,KAEJ,CAAC7d,EAAOjtB,EAAM9C,OAEXouC,EAAmBrxC,sBAAY,SAAY,IAC3C+F,EAAM9C,KAAKzC,OAAS,EAAG,MACnBiwC,GAAc,KAAMzd,GAAMmB,YAC9B,mDAES,IAAM,cACT0c,GAAW9qC,QAAM9C,KAAK,KAAX8C,cAAe3H,UAAf2H,cAAwBoD,QAC7B,SAAU0nC,QAErB,KAEJ,CAAC7d,EAAOjtB,EAAM9C,OAEXquC,EAActxC,sBACjBsc,GAAY,mBACc,MACjB,CAAEnT,OAAMwmC,SAAQD,aAAYE,oBAAqBtzB,EACjDm0B,EAAc,KAAMzd,GAAMmB,YAC7B,gBAAehrB,2CAEP,IAAM,WACG,MACV2nC,GAAeC,GAAOhrC,EAAO6pC,QAE7BoB,IAAaF,EAAc3nC,EADbwmC,EAAS,EAAI,EACmBD,YAGrD,GAGAra,KAEP,CAACrC,EAAOjtB,IAEJwrC,EAAgBvxC,sBAAY,SAAY,YACxC+F,EAAM9C,KAAKzC,OAAS,EAAG,MACnBqwC,GAAW9qC,QAAM9C,KAAK,KAAX8C,cAAe3H,UAAf2H,cAAwBoD,OACnCya,OAAM,IAAY,KAAMitB,EAAU,OAAQS,IAAiB,CAC/Dnb,iBAAkB,GAClBl2B,SAAUyxB,GAAUE,WACpB5wB,MAAO,QAGV,CAACy0B,EAAO6b,EAAavrC,EAAM9C,aAEvB,CACLutC,yBACAE,oBACAQ,oBACAE,mBACAC,mBACAE,8BC5I2D,MACvD,GAAc,KACd,EAAQ9kC,EACZ,EAAY,QACZ,uCACA,UAGE,oBAAO,UAAW,IAAQ,kBAAO,WAAY,ICAnD,YAAuB,EAOA,CAPA,QACrBlH,YACAE,QAAQ,GACRI,UAAU,IAAM,KAChB0yB,aAAa,GACbjB,iBAAiB,SALI,EAMlB15B,IANkB,EAMlBA,CALH2H,WACAE,QACAI,UACA0yB,aACAjB,4BAIGc,IAAQ,MAAOG,EAAY,0CAClB,QAAc,KAAK,SAAS,WAAsB36B,yBCpBnD,IAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECIzB2D,GAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA2Bf,YAAsB,CACpBmI,WACAE,QAAQ,GACRI,UAAU,IAAM,KAChB0yB,aAAa,GACbjB,iBAAiB,QACjBka,eAAe,GACflF,WAAW,GACX9mC,YAAY,IACQ,MACd,CAAC+1B,EAAMkW,GAAU3xC,mBAAkB0xC,GAEnCE,EAAgB1xC,sBAAY,IAAM,GAC9B,CAACu7B,KAEF,CAACA,IACP,CAAC11B,EAAS01B,UAEXp9B,GAACi6B,IAAQ,MAAOG,EAAY,0BAC1Bp6B,YACE,WACA,IAAKoD,GACL,QACA,aAAmB,wBAA0B,WAAaiE,EAC1D,KAAK,SACL,QAASksC,iBAQjB,OAAetyC,eAAKuyC,IC1DpB,KAAMpwC,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA+Cf,YAA4B,CAC1Bw0C,UACA7O,WAAW,IAAM,KACjB8O,gBAAgB,SAChBC,WAAW,IAAM,KACjBC,gBAAgB,GAChBC,iBAAiB,GACjBC,kBAAkB,EAClB1sC,WACA2sC,iBAAiB,IAAM,KACvBC,oBAAoB,GACpBC,YAAY,GACZ3sC,QAAQ,GACRD,YAAY,IACc,OAExBtH,UAAK,IAAKqD,GAAckE,QAAOD,sBAC7BtH,SAAK,UAAU,2BACZk0C,GACCj0C,EAACi6B,IAAQ,MAAOyZ,EAAe,eAAe,iBAC5C1zC,YAAQ,KAAK,SAAS,QAAS4kC,EAAU,SAAU6O,IAAY,WAC7DzzC,EAAC,WAMN4zC,EACC5zC,EAACwzC,IACC,WAAYI,EACZ,eAAe,QACf,QAASD,EACT,aAAcE,WAEd7zC,EAAC,IAAS,MAAO,CAAE2gB,cAAe,OAAQjd,SAAU,YAEpD,KAEH0D,KAEFqsC,IAAYl2B,QACXxd,OAAG,UAAU,8BACT,IACD8zC,GACDA,IAAmB,IACnBC,IAAoBv2B,OACf,GAAEu2B,KAAmBL,IACtBA,EAAS,WAIhBO,GACCh0C,EAACi6B,IAAQ,MAAM,cAAc,eAAe,gBAC1Cj6B,YAAQ,KAAK,SAAS,QAAS+zC,WAC7B/zC,EAAC,cAQb,OAAeiB,eAAKizC,IC7GpB,aAA+B,MAEvBC,GAA6BtyC,sBAAY,IAAM,GAAI,UAGvD9B,UAAK,IAAKq0C,aAENp0C,EAACk0C,IAAmB,kBAAmB,GAAO,UAAW,YACvDl0C,EAACq0C,IACC,WAAW,uBACX,QAASF,WAETn0C,EAACs0C,IAAkB,MAAO,CAAE5wC,SAAU,cAK5C1D,SAAK,UAAU,uBCvBrB,KAAMu0C,IAAsB;AAAA;AAAA,EAItBC,GAAgC;AAAA;AAAA,EAIhC,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECGxB,YAA8B,CAC5B1vC,OACAugC,UACAoP,cAAc,IAAM,MACQ,MACtB,CAAEC,gBAAeC,oBAAmBC,eAAcC,OAAMC,cAC5DC,oBACE,CACE1P,UACAvgC,QAEFkwC,qBACAC,gCAGFl1C,kBACM20C,MACJ,IAAKQ,GACL,MAAO,CAAElzC,OAAQ,kBAEjBhC,oBACG40C,EAAazyC,IAAKgzC,GACjBn1C,cAEMm1C,EAAYC,iCAEfD,EAAYE,QAAQlzC,IAAKmzC,GACxBv1C,cAEMu1C,EAAOC,eAAeD,EAAOE,oCAEhCF,EAAOG,OAAO,UACfz1C,mBACGs1C,EAAOI,SAAYJ,EAAOK,aAAe,UAAO,UAAQ,QALtDL,EAAOC,iBAAiB5zB,QAL5BwzB,EAAYC,sBAAsBzzB,QAiB7C3hB,iBACM20C,MACJ,MAAO,CAAE10C,QAAS,QAAS+B,OAAQ,OAAQ4zC,UAAW,iBAErDf,EAAK1yC,IAAK0zC,MACEA,GAET71C,cAEM61C,EAAIC,gBACR,uBAECD,EAAIE,MAAM5zC,IAAK6zC,GAEZh2C,cAEMg2C,EAAKC,iBACT,MAAO,OAAKD,EAAKC,eAAe3uC,OAAzB,CAAgCpH,QAAS,iBAE/C81C,EAAKP,OAAO,UAJRO,EAAKC,eAAet0B,QAP1Bk0B,EAAIC,cAAcn0B,cAuBrC,OAAe1gB,eAAKi1C,ICvEpB,KAAM9yC,IAGF,CACFI,UAAW,CACTxB,OAAQ,OACRsxB,cAAe,SACfrzB,QAAS,OACT4C,MAAO,QAETszC,eAAgB,CACdn0C,OAAQ,oBACR4e,SAAU,OACV3gB,QAAS,SAGXm2C,YAAa,CACXvzC,MAAO,OACPY,aAAc,MACdS,OAAQ,oBACRhE,QAAS,MACTsqC,aAAc,QASlB,YAA+B,CAAEvmB,OAAMoyB,QAAoC,MACnE,CAACC,EAAaC,GAAkB50C,mBAAS,IACzC,CAAC60C,EAASC,GAAkB90C,mBAAmB,IAC/C+0C,EAAYvuC,iBAAyB,MAErCwuC,EAAe90C,sBAClBxB,GAAM,MACCymB,GAASvF,OAAOC,KAAK80B,GAAatyB,OAAQrC,GAC9CA,EACG3b,cACA2Z,SAAStf,EAAEq+B,OAASr+B,EAAEq+B,OAAOlU,MAAMxkB,cAAgB3F,EAAE2F,kBAE3C8gB,IAEjB,CAACwvB,wBAGO,IAAM,CACVI,EAAUjtC,WACCitC,EAAUjtC,QAAQ+gB,QAEhC,CAACmsB,EAAcD,wBAER,IAAM,IACVzyB,GAAQoyB,EAAM,MACV70B,GAAOD,OAAOC,KAAKyC,GAAM0H,OAAOpK,OAAOC,KAAK60B,MACnC70B,KACA,OACVyC,GACAoyB,MAGN,CAACpyB,EAAMoyB,SAEJhR,GAAU1lC,kBACd,IAAM,CACJ,CACEi3C,OAAQ,YACRC,SAAU,QACVC,SAAU,IACVj0C,MAAO,GACPk0C,SAAU,GACVC,KAAM,CAAC,CAAEnB,gBACJ,MAAO,CAAE31C,QAAS,MAAO8C,gBAAiB,kBAC1C6yC,EAAIxoC,YAIX,CACEupC,OAAQ,QACRC,SAAU,QACVI,UAAW,GACXD,KAAM,CAAC,CAAEnB,gBAEL,MAAO,CACL7yC,gBAAiB,UACjBhB,OAAQ,OACR9B,QAAS,MACT84B,WAAY,YACZD,WAAY,MACZnY,SAAU,mBAGV,GAAE01B,EAAYT,EAAIxoC,gBAK5B,CAACipC,oBAII,MAAOlzC,GAAOI,iDAGb,KAAK,OACL,MAAOJ,GAAOgzC,YACd,YAAY,0BACZ,SAAUO,EACV,IAAKD,eAGJ,MAAOtzC,GAAO+yC,0BAChBD,IAAqB,KAAMM,EAAS,iBAM7C,KAAMU,IAA2Bj2C,eAAKk2C,IAEhC3pB,GAAY,CAAEvJ,KAAM,GAAIoyB,KAAM,iBAEO,MACnC,CAAEpyB,OAAMoyB,QAAS5oB,GAAYD,aAE3B,IAA+BvJ,OAAMoyB,SCvI/C,KAAMjzC,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA+Bf,YAAsB,CAAE2lC,WAAUv9B,YAAY,UAA+B,OAEzErH,aAAQ,IAAKoD,GAAQ,YAAsB,KAAK,SAAS,QAASwhC,WAChE5kC,EAAC,IAAQ,UAAU,WChCzB,KAAMoD,IAAUA,GAAWnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IASvBmE;AAAAA,cAmCwB,CAC1Bg0C,QACAC,WACA70B,WACA9a,UAAU,IAAM,KAChBusC,YACArP,WAAW,IAAM,KACjB0S,YACA7B,UACmB,IACfpuC,GAAY,gBAGZmb,OACW,yBAGTrZ,GAAetH,sBAClBxB,GAAM,GACG,OAAKA,GAAL,CAAQg3C,WAAUD,YAE5B,CAAC1vC,EAAS2vC,EAAUD,IAGhBrS,EAAgBljC,sBACnBxB,GAAM,GAGHkI,oBACO,OAAKlI,GAAL,CAAQg3C,WAAUD,YAE7B,CAACxS,EAAUyS,EAAUD,UAIrBr3C,SACE,YACA,QAASoJ,EACT,IAAK/F,GAAOk0C,kBACG,OAAMF,cAEpBnD,GAAaj0C,EAAC,IAAa,SAAU+kC,IACrC0Q,EACGA,EAAO,CAAEjzB,WAAU4W,MAAOie,GAAY,GAAIz0C,GAAIw0C,IAC9CC,iBAKkB53C,EAAiB,OACpCO,gBAAGP,EAAM2H,WCvFlB,KAAMmwC,IAAYt4C;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAsCZu4C,GAAav4C;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,KAqCPw4C,KAAAA,UACJ,aACC,mBAWT,YAAc,CACZrwC,WACAM,UACA5F,WACA8iC,WAAW,IAAM,KACjBjf,aACY,MACN+xB,GAAoB71C,sBACvB81C,GAAQ,MACD,CAAEN,WAAUD,SAAUO,IACpB,CAAEN,WAAUD,WAEtB,CAAC1vC,OAGCkwC,QACEC,GAAOC,mBAAS31C,IAAIiF,EAAW2wC,GAAU,IACzC,CAACC,yBAAeD,SAAe,WAE7B,CAAEX,SAAUW,EAAMt4C,YAEpB23C,KAAUzxB,MACGoyB,EAAMt4C,MAAM2H,UAI3BpH,EAAC,UACK+3C,EAAMt4C,QACV,SAAU23C,IAAUzxB,EACpB,QAAS+xB,EACT,gBAKAt0C,EAASzD,kBAAQ,IAAM,QACnBmC,OACD21C,YACIF,QACJE,aACID,kBAEAD,MAEV,CAACz1C,UAGF/B,UAAK,UAAU,OAAO,IAAKqD,YACzBpD,QAAI,UAAU,oBAAY63C,IAC1B73C,SAAK,UAAU,uBAAe43C,OAKpC,OAAe32C,eAAKg3C,ICvIpB,YAAe,CAAEC,YAAWxwC,WAAuB,OAE/C1H,UACE,UACA,IAAKf;AAAAA;AAAAA;AAAAA;AAAAA,UAIDi5C,IAAc,QAAW,cAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAkBjBA,IAAc,OAAS,KAAO;AAAA;AAAA;AAAA;AAAA;AAAA,iBAO1Dl4C,EAAC,IACC,MAAO,CAAE+f,UAAY,UAASm4B,IAAc,QAAU,KAAO,YAMrE,KAAMxlB,IAAa,IASnB,YAAkB,CAChBtrB,WACA+wC,OAAO,GACPC,eAAe,EACfhK,WAAW,IAAM,MACD,MACV,CAAClb,EAAK,CAAErwB,UAAWw1C,KACnB,CAACC,EAAaC,GAAkB52C,mBAAS,uBACrC,IAAM,GACCy2C,IACd,CAACA,SAEEI,GAAU74C,kBACd,IACEm4C,mBAAS31C,IAAIiF,EAAU,AAAC2wC,GAEpB/3C,SAEE,IAAKf;AAAAA,uBACM4D;AAAAA;AAAAA,uBAIVk1C,GANIA,EAAMp2B,MAUnB,CAACva,EAAUvE,IAGP41C,EAAc52C,sBAAY,IAAM,GACpB62C,GAAmB,IAC7BF,GAAWE,IAAmBF,EAAQn2C,OAAS,WACxCq2C,GAELP,EACK,EAEAO,OAILC,GAAYD,EAAiB,WAC1BC,GAEFA,KAER,CAACH,EAASL,EAAM/J,IAEbwK,EAAc/2C,sBAAY,IAAM,GACpB62C,GAAmB,IAC7BA,IAAmB,WACZA,GACLP,EACK,EAEAO,OAGLG,GAAYH,EAAiB,WAE1BG,GAEFA,KAER,CAACV,EAAM/J,UAEN,CAACvrC,GAAS,CAAC21C,EAAgB,KAE7Bz4C,SACE,IAAKd;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,QAQL,gBAEAe,SACE,IAAKf;AAAAA,mCACsB4D,EAAQy1C;AAAAA,2CACA5lB;AAAAA;AAAAA,mBAExB7vB,KAAmB21C,EAAQn2C,OAAS;AAAA;AAAA,mBAI9Cm2C,IAGFF,IAAgB,GAAKt4C,EAAC,IAAM,UAAU,OAAO,QAAS44C,IACtDJ,GAAWF,IAAgBE,EAAQn2C,OAAS,GAC3CrC,EAAC,IAAM,UAAU,QAAQ,QAASy4C,OAM1C,OAAex3C,eAAK63C,IC/JpB,KAAMC,IAAe95C;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAgBf+5C,GAAyB/5C;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,cA6CWQ,EAA+B,MACjE,CAAEw5C,YAAW7K,WAAW,IAAM,KAAM5qB,SAAU/jB,EAC9C,CAACy5C,EAAcC,GAAmBx3C,mBAAiB,uBAE/C,IAAM,MACRy3C,GAAS51B,GAASA,EAAQy1B,EAAU52C,OAASmhB,EAAQ,EACvDy1B,GAAaA,EAAU52C,OAAS,KAClB+2C,IAEjB,CAAC51B,EAAOy1B,SAELrI,GAAkB/uC,sBACrBw3C,GAAe,GACEA,KACPA,IAEX,CAACjL,UAIDruC,oBACEC,SAAK,IAAK+4C,YACRh5C,iBACGk5C,GACCA,EAAU52C,OAAS,GAClB,GAAE,IAAiB,QAAQ42C,EAAU52C,SAAU,SAGtDrC,SAAK,IAAKg5C,YACRh5C,EAAC84C,IAAS,aAAcI,EAAc,SAAUtI,WAC7CqI,iBAAW92C,IAAI,CAACm3C,EAAK91B,WACpBzjB,gBAAmB,UAAU,mBAC3BC,kBACGs5C,EAAIC,SACHv5C,EAAC,IACC,GAAK,SAAQwjB,IACb,MAAO,IACP,QAAS81B,EAAIC,YAInBx5C,iBACEC,EAACw5C,IAAG,GAAIF,EAAIG,WAAUH,KAAII,KAAJJ,cAAQnqB,QAAQ,QAXhCmqB,EAAI33B,cC7F1B,KAAMve,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,cAqCwBQ,EAA4B,MAC3D,CAACy5C,EAAcC,GAAmBx3C,qBAClC,CAAE+sC,gBAAeyC,SAAQrqB,UAAW6nB,KAIpC,CAAEsK,YAAWtzB,aAAcnI,IAC3BsF,EAAU62B,GAAQh0B,GAClBi0B,EAASj6C,kBAAQ,IACdmjB,GACLm2B,GACAA,EAAU52C,OAAS,GACnB62C,IAAiB37B,QACjB07B,EAAUC,GAAcW,MAAM/2B,GAC5Bm2B,EAAUC,GAAcW,MAAM/2B,GAC9B,EACH,CAACo2B,EAAcp2B,EAASm2B,IAErB/Y,EAAWr+B,sBACf,AAAC2hB,GAAkB,GACDA,KACF/jB,EAAMuL,KAAMiuC,EAAUz1B,KAEtC,CAACy1B,EAAWx5C,EAAMuL,KAAM0jC,wBAGhB,IAAM,IACVuK,GAAaA,EAAU52C,OAAS,EAAG,MAC/BmhB,GAAQsD,EAAOrnB,EAAMuL,MACvBiuC,EAAUzX,UACPsY,GAAaA,EAASn4B,MAAQmF,EAAOrnB,EAAMuL,MAAM2W,KAEpD,KACK6B,IAAU,GAAKA,EAAQ,KAEjC,CAACy1B,EAAWx5C,EAAMuL,KAAMk1B,EAAUpZ,SAE/BizB,GAAmCl4C,sBACtC2hB,GAAU,GACAA,IAEX,CAAC0c,UAIDlgC,UAAK,IAAKoD,YACP0f,GAAWm2B,GAAaA,EAAU52C,OAAS,EAC1CtC,SAAK,UAAU,+BACbC,OAAG,UAAU,qDAEbD,SAAK,UAAU,yCACbC,EAAC,IACC,MAAOk5C,EACP,YACA,SAAUa,IAEZh6C,OAAG,UAAU,sCACE+iB,cAAkB82B,eAKrC55C,OACE,UAAU,QACV,MAAO,CAAE6D,MAAOstC,EAAO1xC,EAAMuL,MAAQ,MAAQ,4HC9FvD,KAAM5H,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,cAmEwB,CACrC2yC,SACA1c,UACA0Y,SACAoM,cACsB,YAChB,CACJvwC,QAAS,CACPxJ,QAAS,CAAEgsC,UAASgO,YAEpB54B,KAEE,CAAC64B,EAAWC,GAAmBx4C,mBAASy4C,QACxCC,EAAUlyC,iBAAY,MAEtBy4B,EAAgB/+B,sBAAawG,GAAU,CACvCA,EAAMsZ,MAAQ,WACRlY,QAAQsoC,cAEjB,IAEGuI,EAAqBz4C,sBAAa81C,GAAQ,GAC9BA,EAAIP,QACnB,wBAEO,IAAM,UAEZ4C,kBAAYO,UACZ,CAACtO,kBAASuO,yBACV,CAACP,qBAAQQ,kBAARR,cAAyBS,QAC1B,GACgBN,aACV,CAAEX,KAAIkB,YAAah5B,GAAQq4B,IACzBvwC,QAAQmxC,UAAU,CACxBC,IAAK,KACLf,SAAUn4B,GAAO83B,EAAK,CAAEA,KAAI93B,OAAQ,cAGtBy4B,YACR3wC,QAAQmxC,UAAU,CAAEC,IAAKb,kBAAYa,MAAO,GAAIf,SAAU,QAEnE,CAAC7N,iBAASuO,uBAAwBP,iBAAQQ,gBAAiBT,SAExD7G,GAActxC,sBACjBilB,GAAW,QACFozB,OACDE,aACG,CACJN,SAAU,CAAEL,KAAI93B,IAAKg5B,IACnB7zB,IAEG,CAAEyzB,QAAS,GAAMd,KAAIkB,0BAGzBP,eACG,CAAES,OAAQ/zB,IACT,CAAE+zB,MAAKN,QAAS,+BAQ7B,CAACrlB,EAAS0c,EAAQsI,IAGdlL,EAAmBrvC,kBAAQ,IAAM,QAC7Bu6C,OACDE,aACIU,IAAW,CAChBhB,SAAUgB,KAAaC,iBAGtBX,eACIU,IAAW,CAChBD,IAAKC,KAAaC,2BAIb,QAEV,CAACb,oBAIG,IAAK,CAACjI,GAAa7uC,cACtBrD,SAAK,UAAU,0BACbC,mBAAO4tC,IAEP5tC,EAACq6B,IAAY,QAASnF,OAExBl1B,SAAK,UAAU,uBACbA,EAAC,IACC,IAAKq6C,EACL,SAAUlH,EACV,cAAe,CAAE0H,IAAK,KAAMf,SAAU,MACtC,4BAEA/5C,EAACk4C,IAAK,UAAWiC,EAAW,QAASI,YAClC,CAACrO,kBAASuO,yBACT,CAACP,qBAAQQ,kBAARR,cAAyBS,SACxB16C,EAAC,IAAI,SAAS,OAAO,MAAOo6C,gBAC1Bp6C,EAAC,IAAe,KAAK,eAI3BA,EAAC,IAAI,SAAS,SAAS,MAAOo6C,kBAC5Bp6C,SAAK,UAAU,4BACbA,EAAC,GACC,KAAK,MACL,KAAK,SACL,YAAY,sBACZ,UAAW4gC,eAOvB5gC,SAAK,UAAU,4BACbA,YACE,KAAK,SACL,QAAS,IAAMq6C,EAAQ5wC,QAAQsoC,aAC/B,UAAU,4BCxMpB,KAAM3uC,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAkBf,YAAoBQ,EAAwB,MACpC,CACJ4H,YAAY,GACZ8mC,WAAW,GACXhV,iBAAiB,OACjBiB,aAAa,OACb1yB,WACEjI,QAGFO,UAAK,qBACHA,EAACi6B,IAAQ,MAAOG,EAAY,0BAC1Bp6B,YACE,IAAKoD,GACL,KAAK,SACL,UACA,WACA,qBAEApD,EAAC,aAOX,OAAeiB,eAAK+5C,IC5CpB,KAAM53C,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAoBf,YAA2B,CAAEi2B,UAAS0c,UAAkC,OAEpE7xC,UAAK,IAAKqD,aACRpD,EAACq6B,IAAY,QAASnF,EAAS,WAAW,sBAC1Cl1B,EAACg7C,IAAW,QAASpJ,EAAQ,WAAW,wBAK9C,OAAe3wC,eAAKg6C,ICfpB,YAAwBx7C,EAA4ByzB,EAAU,MACtD,CACJ0e,SAAS,IAAM,KACfpnB,QACAhiB,OAAO,OACPlB,QACA4zC,cAAc,IAAM,KACpBC,aAAa,IACX17C,EAEE,CAAC27C,EAASC,GAAc15C,yCAEpB,IAAM,GACHw5C,IACV,CAACA,kCAEgBjoB,EAAK,MACvBooB,UAAW,IAAM,GACJ,KAEbC,UAAW,IAAM,GACJ,aAITC,GAAqB35C,sBAAY,AAACxB,GAAkB,CAClDA,EAAEq+B,OAA4B+c,UAAUC,SAAS,uBAC1C,WACJnjB,oBAAoB,YAAaijB,KAEzC,IAEGG,EAAkB95C,sBACtB,CAACu7B,EAAM/0B,EAAQ,OAAS,CACjB+0B,UAYI/E,iBAAiB,YAAamjB,KACzBnzC,KACD+0B,IAZP,EAAC,QAAS,OAAOzd,SAAStX,EAAMsZ,QAC3BtZ,GAGL,CAAC,QAAS,MAAO,UAAUsX,SAAStX,EAAMsZ,SACjCyb,UACJ7E,oBAAoB,YAAaijB,MAS9C,CAACA,EAAoBN,EAAatJ,oBAKhC,MAAO,GAAE3xC,QAAS,QAAS4C,MAAO,OAAQb,OAAQ,QAAWsF,GAC7D,cAAgBe,GAAUszC,EAAgB,GAAMtzC,aAE/C,CAAC+yC,aACM,MAAO,CAAEn7C,QAAS,aAAcy8B,cAAe,mBAClDlS,IAGJ4wB,YACM,MAAO,CAAEn7C,QAAS,aAAcy8B,cAAe,qBACjD,IACC,oBACA,UAAU,kBACV,QACA,OACA,UAAYr8B,GAAMs7C,EAAgB,GAAOt7C,UAQrD,OAAe+iC,qBAAWwY,ICtF1B,KAAMx4C,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAuCf,YAAqB,CAAEiiB,WAAWgS,EAAU,MACpC,CAACpxB,EAAUkpC,GAAerpC,mBAAkC,CAChEqc,KAAM,EACNjc,IAAK,IAED,CAAE85C,UAASniB,qBAAsBC,KACjC,CAAC70B,EAAMg3C,GAAWn6C,qBAClB,CAACilB,EAAWnB,GAAQ9jB,qBACpB,CAACo6C,EAAeC,GAAoBr6C,mBAAS,MAC7CyyB,EAAOjsB,uCAEH,OACHsB,QAAU+qB,SAAS31B,cAAc,OAClC66B,KACgBhF,YAAYN,EAAK3qB,SAE9B,IAAM,CACP2qB,EAAK3qB,SAAWiwB,KACA9E,YAAYR,EAAK3qB,WAGtC,CAACiwB,SAEEuiB,GAAsB5zC,GAAU,GAC9B4iB,mBACW5iB,EAAMq2B,OAAOwd,iBACzB,SACCC,GAAS9zC,EAAMQ,QACfuzC,EAAS/zC,EAAMS,QAEfuzC,EAAU72C,OAAOgxB,WACjB8lB,EAAU92C,OAAOixB,YACjB8lB,EAAQ,IACRC,EAAQ,EAER/7B,EAAQ47B,EAAUF,EAASI,KAC7Bv+B,GAAY,CAACyC,EACb1e,EAAWu6C,EAAUF,EAASI,OAC5B97B,GAAS,CAAC3e,EACZ0e,MACM,GAAE07B,EAAS,OAGjBn+B,MACM,GAAEm+B,EAASI,EAAQ,OAGzBx6C,MACK,GAAEq6C,EAAS,OAGhB17B,MACK,GAAE07B,EAASI,EAAQ,SAGhB,CAAEx+B,OAAMjc,uCAGFmxB,EAAK,MACvBupB,kBAAmB,CAACp8C,EAAGw/B,IAAU,GACvBA,KACWx/B,YAIjB8I,GAAetH,sBACnB,CAACwG,EAAO2iB,IAAU,GACVC,mBACAnmB,KACD,KAEP,CAACA,+BAGO,IAAM,MACR43C,GAAsBr0C,GAAU,CAKhCs0C,AAHFZ,GACA1zC,EAAMq2B,OAAOwd,eACb,CAAC7zC,EAAMq2B,OAAOwd,cAAcU,WAAWb,IACvBn1B,KAAgB,WAEhCi1B,MACMxjB,iBAAiB,QAASqkB,GAE7B,IAAM,CACPb,KACMtjB,oBAAoB,QAASmkB,KAGxC,CAAC91B,EAAWsM,EAAK2oB,EAASE,IAEzB,AAACn1B,EAKHwN,EAAK3qB,SACLktB,wBACEzV,GACElhB,SAAK,MAAU,IAAK,CAACoD,GAAQtB,YAC1Bof,EAAQ/e,IAAI,CAAC06C,EAAGr5B,IACfxjB,YAGE,KAAK,SACL,QAAUK,GAAM8I,EAAa9I,EAAGw8C,EAAEn1C,kBAEjCm1C,EAAEj7B,OAJE4B,MASb4Q,EAAK3qB,SApBA,KAyBX,OAAe25B,qBAAW0Z,ICrK1B,YAA0B,CAAElI,gBAAuC,4BAG5DA,EAAazyC,IAAKgzC,iBAGXA,EAAYC,iCAEfD,EAAYE,QAAQlzC,IAAKmzC,iBAGlBA,EAAOC,eAAeD,EAAOE,0BACjC,MAAOF,EAAOhuC,gBAEbguC,EAAOG,OAAO,6BAEZH,EAAOI,SAAYJ,EAAOK,aAAe,UAAO,UAAQ,QANtDL,EAAOC,iBAAiB5zB,QAL5BwzB,EAAYC,sBAAsBzzB,QAqBjD,OAAe1gB,eAAK87C,IClBpB,YAAgBlH,EAAoB,MAC5BjzC,GAAKizC,EAAIxoC,SAASzK,SACpBA,GACEA,YAAc8nB,OACT9nB,EAEA,CAACumB,OAAOvmB,IAGZ,CAAC,IAEV,YAAuBnD,EAA2ByzB,EAAK,MAC/C,CACJ2iB,MACAmH,oBAAoBjzB,GAAkBkzB,QACtCC,iBACEz9C,EACEqF,EAAOnF,kBACX,MACE6I,KAAMw0C,EACNzyB,MAAOsrB,EAAIxoC,WAEb,CAAC2vC,EAAmBnH,IAEhB7rB,EAAYuB,GAAa4xB,GAAOtH,GAAM/wC,8BAElC,IACD,IAAM,GACDimB,QAGX,IAEIprB,kBAAQ,IAEXK,cACE,MACA,gBAEA,IACEgqB,EAAUxH,SACN+xB,GACAhzB,OAAO67B,UAAUC,eAAep3B,KAC9B4vB,EAAIxoC,SACJ,4BACGwoC,EAAIxoC,SAASiwC,0BAA4B,GAC9C9I,GACA,MAEFqB,EAAIC,eACJ9rB,EAAUkB,mBAEb2qB,EAAIE,MAAM5zC,IAAK6zC,GAAS,MACjB,CAAE1uC,QAAOpH,WAAY81C,EAAKV,aAE5BU,GAAKuH,aACA,KAGLv9C,YACE,QAASg2C,EAAKwH,SAEVxH,EAAKC,iBACT,cAAgB51C,MACZ4qB,iBAEK,IAET,MAAO,GAAE/qB,WAAYoH,YAEpB0uC,EAAKP,OAAO,UATRO,EAAKr0B,SAvBbk0B,EAAIC,cAAcn0B,KAuC1B,CAACqI,EAAUxH,SAAUwH,EAAUkB,QAASgyB,EAAehqB,EAAK2iB,IAGjE,OAAezS,qBAAWqa,IC1F1B,KAAM,IAAet2C,wBAAyC,MACjD,GAAqB,GAAa,sBAER,MAC/B,GAAUwD,qBAAW,OACvB,CAAC,OACG,IAAI,OAAM,4CAEX,eCZ0B,EAAO,GAClC,YAAY,KAAK,IAGzB,YAAiB,EAAU,MACnB,CAAE,cAAe,KAEnB,GAAwB,KAEjB,QAAQ,AAAC,GAAW,MACvB,CAAE,KAAI,iBAAkB,EAE1B,IAAkB,QAAa,IAAkB,MACpC,KAAK,CAAE,KAAI,UAAW,KAAM,UAAW,aAInD,OAAO,EAAU,CACtB,+BAI2B,EAAM,EAAO,EAAgB,EAAmB,MACvE,GAAM,EAAK,UACR,GAAI,EAAG,EAAI,EAAI,SAAS,OAAQ,IAAK,MACtC,GAAO,EAAI,SAAS,GACpB,EAAgB,EAAe,KAAK,AAAC,GAAM,EAAE,KAAO,EAAK,OAAO,OAClE,IAAkB,OAAW,MACzB,GAAY,EACd,GAAG,EAAK,SAAS,EAAI,SAAS,KAC9B,EAAK,MAGP,EAAc,YAAc,MAC5B,EAAc,YAAc,KAEvB,aAAe,KACN,UAAY,IACZ,UAAY,IACrB,QAAU,MAEV,EAAc,WAAW,SAAS,GAAG,YACrC,aAAe,MCA5B,KAAMvH,IAAS,CACbs6C,MAAO,AAACC,GAAiC,IACnCA,QACK,CAAE77C,SAAU,SAAUC,IAAK,KAKlC67C,GAAkBxa,qBAAW,SACjC3jC,EACAyzB,EACA,MACM,CACJpuB,OACAugC,UACA2X,oBACA97B,UAAU,KACV28B,WACAC,mBAAmB,GACnBH,sBAAsB,GACtBI,YACEt+C,EAEEu+C,EAAa71C,iBAAY,MACzB,CAAEqb,MAAOy6B,GAAkBC,KAE3B,CACJxJ,gBACAC,oBACAC,eACAC,OACAC,aACAqJ,kBACEpJ,oBACF,CACE1P,UACAvgC,QAEFkwC,qBACAoJ,IAEInC,EAAqBp6C,sBACzB,CAACxB,EAAGw1C,IAAQ,CACLwI,GAA0Bh+C,OAC3B4qB,mBACSxhB,QAAQgzC,kBAAkBp8C,EAAGw1C,EAAIxoC,YAGhD,CAAC2wC,IAGGM,EAAWX,EACb9I,EAAK3Z,MAAM+iB,EAAcr3C,MAAOq3C,EAAcp3C,KAC9CguC,QAGF90C,cACE,MACA,UAAU,kBACV,MAAO,CACL61C,UAAW,OACX9zC,SAAU,WACVE,OAAQ,SAEL27C,GAAuB,CAAEE,wBAE7BF,GACC39C,SACE,MAAO,CACLgC,OAAQ87C,EAAmBh5C,EAAKzC,OAChCP,SAAU,WACVe,MAAO,OACP8d,cAAe,UAIrB5gB,iBACM20C,MACJ,IAAKQ,GACL,MAAO9xC,GAAOs6C,MAAMC,aAEpB39C,EAAC+8C,IAAiB,iBAClB/8C,iBAAW20C,eACR2J,EAASn8C,IAAI,CAAC0zC,EAAKryB,OACPqyB,MAEThB,EACA8I,EAAsBn6B,EAAQy6B,EAAcr3C,MAAQ4c,EACpD26B,EACAJ,GAIA/9C,EAACy9C,QAEC,OACI5H,EAAIC,gBACR,cAAgBz1C,GAAM47C,EAAmB57C,EAAGw1C,GAC5C,sBAJKA,EAAIl0B,cAUnB3hB,EAAC88C,IAAY,IAAKkB,EAAY,kBAYpC,YAAoBv+C,EAAwB,MACpC,CAAEqF,OAAMg5C,mBAAmB,GAAIC,YAAat+C,EAC5CyzB,EAAM/qB,iBAA8B,MACpC,CAACo2C,EAAM,CAAEv8C,WAAYq2C,KACrBmG,EAAajO,GAAgB,CAACgO,EAAMrrB,IAEpC,CAACurB,EAAoBC,GACzB/8C,mBAA6B,CAC3Bg9C,aAAc,EACdC,aAAc,EACdC,oBAAqB,EACrBr7B,MAAO,CAAE5c,MAAO,EAAGC,IAAK,yBAGlB,IAAM,IACV23C,EAAW/0C,QAAS,MAChB,CAAEm1C,gBAAiBJ,EAAW/0C,QAC9Bo1C,EAAsBr+C,KAAKs+C,KAAK98C,EAAS87C,KACxBiB,UAClBA,IACHJ,aAAc38C,EACd48C,eACAC,sBACAr7B,MAAO,CAAE5c,MAAO,EAAGC,IAAKg4C,EAAsB,QAGjD,CAACf,EAAkBU,EAAYx8C,SAE5Bg9C,GAAoBn9C,sBACxB,CAACq3C,EAAsB+F,IAAiB,MAChCC,GAAcp6C,EAAKo0C,MACrBgG,EAAY17B,OAASu6B,SACfkB,OACD,OACCz7B,GAAQ01B,EAAe,OACpB11B,EAAQ,GAAG,IACZ1e,EAAK0e,GAAOu6B,KAAcmB,EAAYnB,SACjCv6B,GAAQ,YAIZ01B,OAEJ,OACC11B,GAAQ01B,EAAe,OACpB11B,EAAQ1e,EAAKzC,QAAQ,IACtByC,EAAK0e,GAAOu6B,KAAcmB,EAAYnB,SACjCv6B,GAAQ,YAIZ01B,iBAGAA,SAINA,IAET,CAACp0C,EAAMi5C,IAGHoB,EAAiBt9C,sBACrB,CAAC2hB,EAAeq7B,IAAgC,MACxCO,GAAW57B,EAAQq7B,EACnBQ,EAAcD,GAAYt6C,EAAKzC,OAAS+8C,EAAW57B,QAGlDw7B,GAAkBK,EAAa,KAExC,CAACv6C,EAAKzC,OAAQ28C,IAEVM,EAAez9C,sBACnB,CAAC2hB,EAAeq7B,IAAgC,MACxCO,GAAW57B,EAAQq7B,EACnBQ,EAAcD,GAAYt6C,EAAKzC,OAASyC,EAAKzC,OAAS,EAAI+8C,QAGzDJ,GAAkBK,EAAa,IAExC,CAACv6C,EAAKzC,OAAQ28C,IAGVO,EAAgB19C,sBAAY,IAAM,IAClCqxB,EAAIzpB,SAAWg1C,EAAoB,MAC/B,CAAEe,aAActsB,EAAIzpB,QACpB,CAAEo1C,sBAAqBr7B,SAAUi7B,EACjCY,EAAc7+C,KAAKs+C,KAAKU,EAAY1B,GACpCl3C,EAAQu4C,EAAeE,EAAaR,MAEtCQ,IAAgB77B,EAAM5c,MAAO,MACzBC,GAAMy4C,EAAaD,EAAaR,KAChB,OACjBJ,GADiB,CAEpBj7B,MAAO,CAAE5c,QAAOC,IAAKA,EAAM,SAIhC,CAACi3C,EAAkBwB,EAAcH,EAAgBV,UAGlDz+C,GAAC,IAAmB,MAAOy+C,WACzBz+C,EAAC,MACC,SAAUu/C,EACV,IAAKf,GACI/+C,MAMjB,OAAewB,eAAKw+C,gBChQoB,EAAO,EAAuB,MAC9D,CACJ,QACA,SAAS,IAAM,KACf,cACA,WAAW,KACX,OAAO,KACP,WAAW,QACX,gBAAgB,GAChB,QAAQ,GACR,MACE,GAAW,KAET,KAAK,WACT,SACG,KAAM,GAAM,CAAE,QACd,KAAM,EAAW,CAAE,YAAa,KAChC,KAAM,EAAO,CAAE,QAAS,KAJlB,CAKT,SACA,WACA,gBACA,UACG,IChCP,KAAMC,IAAiB,6kBAiBjBC,GAASvc,qBAAW,SACxB3jC,EACAyzB,EACA,MACM,CACJpuB,OACAwC,QAAQ,CAAEzE,MAAO,KACjBurC,WAAW,IAAM,KACjBiF,eACAroC,OAAO,GACP3D,YAAY,IACV5H,EAEEmgD,EAAkB/9C,sBACrBxB,GAAM,IACDmqB,GAAQnqB,EAAEq+B,OAAOlU,MAChBuW,MAAMvW,OACDyE,OAAOzE,MAERA,IAEX,CAAC4jB,IAGGhrC,EAASnE;AAAAA;AAAAA;AAAAA;AAAAA,aAIJqI,EAAMzE,MAAQosB,OAAO3nB,EAAMzE,OAAS,EAAI;AAAA;AAAA;AAAA,kBAGnC68C;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UAcd1/C,aACE,MACA,IAAKoD,EACL,OACA,SAAUw8C,EACV,eACA,YACA,iBAEC96C,EAAK3C,IAAK05B,GACT77B,YAAyB,MAAO67B,EAAErR,eAC/BqR,EAAEja,OADS,GAAEia,EAAEla,YC1EpBve,GAAuD,CAC3DI,UAAW,CACTxB,OAAQ,OACRgB,gBAAiB,SAEnB4e,MAAO,CACLje,UAAW,SACXd,MAAO,OACPa,SAAU,OACVxD,QAAS,MACT2D,MAAO,SAKX,aAAuB,iBAEd,MAAOT,GAAOI,0BACd,MAAOJ,GAAOwe,6BCMvB,KAAMi+B,IAAc,CAAE/8C,WAAY,GAAIC,YAAa,GAAImB,OAAQ,QAO/D,YAAuB,CAAEyhB,YAAW7gB,OAAMsd,eAAmC,MACrEva,GAAWgpB,IACXivB,EAAwBj+C,sBAC5B,CAACxB,EAAGw1C,IAAQ,GACR5qB,mBACA1iB,uBACI5F,GAASkzC,EAAIxoC,WACV,CACP7E,KAAMu3C,GACNC,WAAYr9C,EAAOC,MAGvB,CAACiF,IAEGo4C,EAA4Bp+C,sBAChC,CAAC2oB,EAAOqrB,IAAQ,MACR/wC,GAAO,OAAK+wC,EAAIxoC,UAAT,CAAmBia,KAAMkD,MAC7B,CACPhiB,KAAM03C,GACNr4B,QAAS,CAAE/iB,WAGf,CAAC+C,IAEGs4C,EAAiCxgD,kBACrC,IAAM,CACJ,CACE6jB,MAAO,EACPozB,OAAQ,IACRI,KAAM,CAAC,CAAEnB,SAAUA,EAAIryB,MAAQ,EAC/B3gB,MAAO,IAGT,CACE2gB,MAAO,EACPozB,OAAQ,OACRC,SAAU,QACVI,UAAW,GACXmJ,SAAWvK,GAAQA,EAAInpB,KAAKyC,QAAQ,IAEtC,CACE3L,MAAO,EACPozB,OAAQ,KACRC,SAAU,QACVI,UAAW,GACXmJ,SAAWvK,GAAQA,EAAIjpB,GAAGuC,QAAQ,IAEpC,CACE3L,MAAO,EACPozB,OAAQ,OACRC,SAAU,QACVI,UAAW,GACXmJ,SAAWvK,GAAQA,EAAIvuB,KACvB0vB,KAAM,CAAC,CAAEnB,WACN,IACC,SAAWrrB,GAAUy1B,EAA0Bz1B,EAAOqrB,GACtD,KAAMwK,GACN,MAAOR,GACP,aAAchK,EAAIxoC,SAASia,QAIjC,CACE9D,MAAO,EACPlc,MAAO,CAAEzE,MAAO,KAAMk0C,SAAU,OAAQD,SAAU,QAClDl0C,GAAI,gBACJo0C,KAAM,CAAC,CAAEnB,qBAEL,KAAK,SACL,UAAU,gBACV,QAAUx1C,GAAMy/C,EAAsBz/C,EAAGw1C,cAExC,WAKT,CAACoK,EAA2BH,IAGxBQ,EAAsBz+C,sBAC1B,CAACwG,EAAOwtC,IAAQ,MACR/wC,GAAO,CAAE0lB,MAAOniB,EAAMq2B,OAAOlU,MAAO5nB,GAAIizC,EAAIjzC,MACzC,CACP4F,KAAM+3C,GACN14B,QAAS,CAAE/iB,WAGf,CAAC+C,IAGG24C,EAAuB7gD,kBAC3B,IACE8/B,GACErd,EAAY3Y,QACX,gCAA+Bkc,KAChC6Z,IAEJ,CAAC7Z,EAAWvD,IAGRq+B,EAAmD9gD,kBACvD,IAAM,CACJ,CACE+gD,SAAU,eACVl9B,MAAO,EACPozB,OAAQ,WACRwJ,SAAWvK,GACT8K,GACE9K,EAAI+K,SACJtyC,EACEkyC,EACA,iBACAhhB,GAAsBqhB,kBAI9B,CACEH,SAAU,eACVl9B,MAAO,EACP5gB,GAAI,WACJg0C,OAAQ,IAAM,MACN7lB,GAAIpL,iBAAWhlB,QAAQ,SAAU,8BACxB,YAAWowB,OAE5BqvB,SAAWvK,GACF8K,GACL9K,EAAIv3B,SACJhQ,EACEkyC,EACA,iBACAhhB,GAAsBshB,iBAI5B9J,KAAM,CAAC,CAAEnB,SAAU,MACXrrB,GAAQm2B,GACZ9K,EAAIxoC,SAASiR,SACbhQ,EACEkyC,EACA,iBACAhhB,GAAsBshB,iBAIpBxiC,EAAW8e,AADJ2jB,GAAkBlL,EAAIxoC,UACXmd,EAAS,KAAIA,eAGlCoxB,IACC,MAAOt9B,EACP,OAASjW,GAAUi4C,EAAoBj4C,EAAOwtC,EAAIxoC,UAClD,KAAK,cAMf,CAACsY,EAAW66B,EAAsBF,IAG9BU,EAAerhD,kBAAQ,IAAM,IAC7B0lC,GAAU,CAAC,GAAG8a,YACPc,KAAOR,GAAS,MACUQ,KAA3BP,aAA2BO,EAAdC,IAAcD,EAAdC,CAAbR,aACJF,EAAqBE,OACPrb,EAAS6b,SAItB7b,GAAQ3D,KAAK,CAACyf,EAASC,IAAYD,EAAQ39B,MAAQ49B,EAAQ59B,QACjE,CAACi9B,EAASN,EAAgBK,UAEtB17C,IAAQA,EAAKzC,OAAS,IAC1Bo9C,IAAW,OAAY,QAASuB,MAEhC,OAIL,OAAe//C,eAAKogD,IC/MpB,KAAM/5C,IAAQrI;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAsEd,YAAoBQ,EAAwB,MACpC,CACJmiB,QAAQ,UACR0/B,gBAAgB,IAAM,KACtBt2C,OACAwf,QAAQ,WACN/qB,EAEE,CAAC8hD,EAAoBC,GAAmB7/C,mBAAS,IACjD,CAAC8/C,EAAeC,GAAY//C,mBAAS6oB,uBAEjC,IAAM,GACLA,IACR,CAACA,SAEEm3B,GAAc9/C,sBAAY,IAAM,GACpB,CAAC0/C,IAChB,CAACA,IAEEK,EAAc//C,sBAAY,IAAM,GACpB,KACf,IAEGggD,EAAuBhgD,sBAC1BigD,GAAe,MACRC,GAAO,GAAED,EAAWC,MAAMvhD,KAAKwhD,MACnCF,EAAWG,IAAIhtB,EAAI,KACnBv0B,SAAS,QACFqhD,KACK,OAAKD,GAAL,CAAiBC,MAAK/2C,WAEtC,CAACA,EAAMs2C,UAGPvhD,UAAK,IAAKuH,aACRtH,UAAM,UAAU,sBAAc4hB,IAC9B7hB,SAAK,MAAO,CAAEuvC,KAAM,aAClBvvC,SAAK,UAAU,SAAS,QAAS4hD,YAC/B3hD,SAAK,UAAU,QAAQ,MAAO,CAAEgD,gBAAiBy+C,KACjDzhD,WAAO,KAAK,SAAS,MAAOyhD,EAAe,YAE5CF,EACCxhD,SAAK,UAAU,0BACbC,SAAK,UAAU,QAAQ,QAAS4hD,IAChC5hD,EAACkiD,iBACC,MAAO,CAAEH,IAAKN,GACd,iBAAkBI,OAGpB,WAMZ,OAAe5gD,eAAKkhD,ICxHpB,YAA2B1iD,EAA+B,MACUA,KAA1D6hD,iBAAgB,IAAM,KAAMt2C,QAA8BvL,EAArB2iD,IAAqB3iD,EAArB2iD,CAArCd,gBAA4Bt2C,SAE9B,CAAE8b,SAAQ4nB,iBAAkBC,KAE5B0T,EAAqBxgD,sBACxBgC,GAAU,GACKA,KACAmH,EAAMnH,EAAMk+C,MAE5B,CAAC/2C,EAAMs2C,EAAe5S,aAIrByT,UACKC,IACJ,OACA,cAAeC,EACf,MAAO/zC,EAAUwY,EAAQ9b,MAK/B,OAAe/J,eAAKqhD,IC3BpB,KAAMl/C,IAAgE,CACpEyyC,IAAK,CACH51C,QAAS,OACTsgB,OAAQ,UACRhd,WAAY,UAEdg/C,WAAY,CACVjT,KAAM,EACN5rC,SAAU,OACVS,WAAY,OACZN,MAAO,WAETwrC,MAAO,CACLxsC,MAAO,MACPc,UAAW,WAYf,YAAiClE,EAAqC,MAC9D,CACJmiB,QACA4gC,sBACAC,uBACAC,gBAAgB,GAChBC,aAAa,IACXljD,EAEE,CAAEqnB,SAAQoa,eAAcwN,iBAAkBC,KAE1CC,EAAgB/sC,sBACnBxB,GAAM,GACQA,IAEf,CAAC6gC,IAGG0hB,EAAqB/gD,sBACxBxB,GAAM,GACSA,EAAEq+B,OAAO1zB,KAAM3K,EAAEq+B,OAAOuP,UAExC,CAACS,oBAII,MAAOtrC,GAAOyyC,wBACX,MAAOzyC,GAAOm/C,oBAAa3gC,aAE/B,MAAO,CACL0tB,KAAM,EACNrvC,QAAS,OACTqzB,cAAe,MACf/vB,WAAY,+BAIZ,KAAK,WACL,MAAO,CAAEgd,OAAQ,WACjB,KAAMiiC,EACN,SAAUI,EACV,QAASt0C,EAAUwY,EAAQ07B,EAAqB,MAEjD,CAACG,GAAcF,KACb,IACC,MAAO,CAAEvT,aAAc9rC,GAAOisC,OAC9B,KAAMoT,EACN,MAAOn0C,EAAUwY,EAAQ27B,EAAsB,IAC/C,SAAU7T,EACV,KAAK,OACL,SAAU8T,UAQtB,OAAezhD,eAAK4hD,IClFpB,KAAMz/C,IAGF,CACFI,UAAW,CACTvD,QAAS,QAEX2hB,MAAO,CACLqtB,WAAY,EACZ9e,WAAY,OACZmf,KAAM,KAERwT,eAAgB,CACdxT,KAAM,IACNrvC,QAAS,OACTqD,eAAgB,cAElB+rC,MAAO,CACLrtC,OAAQ,OACRa,MAAO,QACPY,aAAc,MACdS,OAAQ,uBACRqc,OAAQ,kBACR5c,UAAW,WAsBTo/C,GAAc3f,qBAClB,CACE,CACExhB,QACA5W,OACAqoC,eAAe,EACf/rC,QAAQ,CAAEsa,MAAO,GAAIytB,MAAO,GAAI7rC,UAAW,GAAIs/C,eAAgB,IAC/D1U,WAAW,IAAM,KACjB4U,UAAU,IAAM,KAChBnS,UAAU,iBACVnqC,OAAO,MACPu8C,MAAM,MACNt1C,MAAM,OAERulB,IACG,MACGmd,GAAWloC,iBAAyB,MACpC+6C,EAAerhD,sBAClBxB,GAAM,IACDA,EAAEq+B,OAAOykB,gBAAiB,MACtB34B,GAAQyE,OACZ5uB,EAAEq+B,OAAOlU,QAAU,GAAK6oB,EAAehzC,EAAEq+B,OAAOlU,SAEzC,OACJnqB,GADI,CAEPq+B,OAAQ,OAAKr+B,EAAEq+B,QAAP,CAAe1zB,KAAM3K,EAAEq+B,OAAO1zB,KAAMwf,iBAEzC,MACC44B,GAAYlwB,GAAYmd,IACzB5mC,QAAQ+gB,MAAQyE,OAAOokB,KAGhC,CAACA,EAAcjF,EAAUlb,oBAGpB,MAAO,OAAK9vB,GAAOI,WAAc8D,EAAM9D,+BACpC,MAAO,OAAKJ,GAAOwe,OAAUta,EAAMsa,gBAAUA,aAC9C,MAAO,OAAKxe,GAAO0/C,gBAAmBx7C,EAAMw7C,oCAE7C,IAAK5vB,GAAYmd,EACjB,OACA,MAAO,OAAKjtC,GAAOisC,OAAU/nC,EAAM+nC,OACnC,KAAK,SACL,UACA,eACA,OACA,SAAU6T,EACV,UACA,MACA,OACK7P,UC5FjB,YAA2B5zC,EAA+B,MACnBA,KAA7BmiB,SAAO5W,QAAsBvL,EAAbgvC,IAAahvC,EAAbgvC,CAAhB7sB,QAAO5W,SACT,CAAE8b,SAAQoa,gBAAiByN,KAE3BC,EAAgB/sC,sBACnBxB,GAAM,GACQA,IAEf,CAAC6gC,aAIA,MACC,QACA,OACA,aAAc5yB,EAAUwY,EAAQ9b,GAChC,SAAU4jC,GACNH,iBCxB2B,MAC7B,CAAE,qBAAsB,UACvB9uC,mBAAuB,IACxB,GAAqB,OAAO,KAAK,GAAmB,OAAS,EACxD,OAAO,KAAK,GAEd,GACN,CAAC,ICUN,KAAMyD,IASF,CACFI,UAAW,CACTtD,QAAS,GACT8C,gBAAiB,UACjBhB,OAAQ,OACR4zC,UAAW,QAEbyN,eAAgB,CACdnjD,QAAS,MACTuD,aAAc,MACd8c,OAAQ,WACRvd,gBAAiB,SAEnB6yC,IAAK,CACH51C,QAAS,OACTsgB,OAAQ,WAEVqtB,OAAQ,CACNrD,aAAc,oBACd+Y,cAAe,MACfn/C,WAAY,OACZN,MAAO,WAET0+C,WAAY,CACVjT,KAAM,EACN5rC,SAAU,OACVS,WAAY,OACZN,MAAO,WAETwrC,MAAO,CACLxsC,MAAO,MACPc,UAAW,WAIT4/C,GAAe,CACnB,CACE3gD,GAAI,EACJgf,MAAO,aACP4hC,gBAAiB,eACjBC,iBAAkB,kBAEpB,CACE7gD,GAAI,EACJgf,MAAO,aACP4hC,gBAAiB,eACjBC,iBAAkB,mBAUtB,YAAmC,CACjCj9B,UACApE,cACAshC,YACiC,MAC3B7uB,GAAQwX,KAERgO,EAAUlyC,mBAEVw7C,EAAe9hD,sBAAY,IAAM,IACjC2kB,EAAS,MACkCgZ,MAArC37B,SAAOwc,eAA8Bmf,EAAdokB,IAAcpkB,EAAdokB,CAAvB//C,QAAOwc,gBAETwjC,EAAsBC,GAC1B1hC,EAAY3Y,QACX,kCAGCs6C,GAAgBv9B,EAAQ/E,OAAO,CAACC,EAAKsiC,OACnCA,GAAgBJ,EACbliC,GACN,MACaH,OAAO0iC,OAAOF,EAAe,CAAElgD,QAAOwc,kBAE9C5W,QAAQmxC,UACdiJ,GAA4CE,KAG/C,CAACv9B,EAASpE,wBAEH,IAAM,MAEb,CAACuhC,SAEExQ,GAActxC,sBACjBilB,GAAW,GACEjf,SAAS,CACnBW,KAAM,yBACNqf,QAAS,CAAElG,IAAK,YAAa6I,MAAO1D,OAEhC6O,QAAQ,6CAEhB,CAACd,EAAOzS,yCAGUshC,EAAU,MAC5BQ,YAAa,IAAM,GACTz6C,QAAQsoC,0BAKb,MAAO3uC,GAAOI,qBAChB,IAAW,SAAU2vC,EAAa,IAAKkH,qBACjC,MAAOj3C,GAAOigD,gCACd,MAAOjgD,GAAOwqC,8BAChB,IAAiB,KAAK,YACtB,IACC,KAAK,cACL,MAAM,iBACN,MAAO,CACLhsB,MAAO,CAAEle,SAAU,OAAQS,WAAY,OAAQN,MAAO,WACtDwrC,MAAO,CACLxsC,MAAO,MACPc,UAAW,SACXF,aAAc,QAGlB,IAAK,EACL,IAAK,EACL,QAAQ,cAIX+iB,iBAASrkB,IAAK6hD,YACW,MAAO5gD,GAAOigD,gCACjC,MAAOjgD,GAAOwqC,kBACd,IAAG,GAAIoW,MAETT,GAAaphD,IAAKgiD,KAChBtB,IAEC,MAAOsB,EAAMviC,MACb,oBAAsB,GAAEoiC,KAAgBG,EAAMX,kBAC9C,qBAAuB,GAAEQ,KAAgBG,EAAMV,oBAH1CU,EAAMvhD,OANPohD,SAmBpB,KAAMI,IAA+BnjD,eAAKojD,IAG1C,YAA8B5kD,EAAOyzB,EAAK,MAClC9Q,GAAcf,KACdmF,EAAU89B,cAGb,IACC,SAAUpxB,EAER1M,UACApE,gBAMR,OAAeghB,qBAAWmhB,IC1K1B,KAAMj9C,IAAQrI;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAwBd,YAA4B,CAC1B0gC,YACA1b,OACA0B,YACA3D,UACAI,eAC0B,YACpB,CAACyxB,EAAgB2Q,GAAqB7iD,mBAAS,IAE/CkG,EAAWgpB,IACXyG,EAAQ8U,KACR,CAACqY,EAAWC,GAAiB/iD,mBAAS,IACtCgjD,EAAax8C,mBAEby8C,EAAa/iD,sBAAY,IAAM,GAC1B,CAAE2G,KAAMu3C,GAAiBC,WAAY,QAC7C,CAACn4C,IAEEg9C,EAAkBhjD,sBAAY,IAAM,GAClCq2B,kBAAkB,CACtB/C,QAAS,6CACT6B,QAAS,CAAC,CAAEI,KAAM,MAAOF,QAAS0tB,GAAc,CAAExtB,KAAM,UAEzD,CAACE,EAAOstB,IAELE,EAA2BjjD,sBAC9B2oB,GAAU,GACA,CAAEhiB,KAAMu8C,GAAqBv6B,YAChC8K,SAER,CAACztB,EAAUyvB,IAGP0tB,EAAarlD,kBAAQ,IAClB2O,EAAUqxB,EAAW,cAAe,MAC1C,CAACA,IAEEslB,EAA6BpjD,sBAAY,IAAM,GAC7C4jB,KACJzlB,EAAC,IACC,QAAS,IAAMs3B,EAAMhC,QACrB,OAAQwvB,EACR,OACEE,EACK,mCAAkC/1B,OAAO+1B,GAAY71B,QACpD,MAEF,wBAEN,WAAYwQ,iBAAWxhB,YAG1B,CAAC2mC,EAA0BE,EAAYrlB,iBAAWxhB,QAASmZ,IAExD4tB,EAAuBrjD,sBAAY,IAAM,GAC/B,CAAC4iD,IACd,CAACA,IAEEU,EAAqBtjD,sBAAY,IAAM,GAChC4H,QAAQy6C,gBACL,KACb,IAEGkB,EAAiBvjD,sBAAY,IAAM,GACrB,CAACgyC,IAClB,CAACA,IAEEwR,EAA2BxjD,sBAC9Bu7B,GAAS,GACC,CAAE50B,KAAM88C,GAA2Bz9B,QAASuV,KAEvD,CAACv1B,IAGG09C,EAAe5lD,kBAAQ,IAAM,YACd+sB,EAAME,EAAI,UAEtBA,EAAK44B,MACH94B,EAAO84B,IAEX54B,GAAM5K,EAAQ,GAAKwjC,KAAU94B,GAAQ1K,EAAQ,GAAKwjC,KAClD94B,GAAQ1K,EAAQ,GAAKwjC,KAAU54B,GAAM5K,EAAQ,GAAKwjC,UAGnDvhC,GAAKC,YAAc,GAAKyb,kBAAW7Y,QAO9B2+B,AANY5R,GACflU,EAAU7Y,OAAO9C,OAAQ1F,GACvBonC,EAAUpnC,EAASoO,KAAMpO,EAASsO,KAEpC+S,EAAU7Y,QAEI3kB,IAAKmc,GACd,OACFA,GADE,CAELg/B,wBAAyBoI,EAAUpnC,EAASoO,KAAMpO,EAASsO,OAI1D,IACN,CAACinB,EAAgB5vB,EAAKC,UAAWyb,EAAW3d,UAG7ChiB,GAAC8d,6BACC/d,SACE,IAAK,CACHq0C,GACA9sC,GACAm9C,GACExlD;AAAAA;AAAAA;AAAAA;AAAAA,yBAOH,CAACwlD,GACA1kD,EAACm0C,IACC,QAASvU,oBAAW7Y,SAAX6Y,cAAmBt9B,OAC5B,SAAUwiD,EACV,cAAc,uBACd,SAAUO,EACV,cACEvR,EACI,qBACA,6BAEN,iBACA,gBAAiB0R,EAAaljD,OAC9B,qBACA,eAAgB6iD,YAEhBllD,EAACi6B,IACC,MACE+qB,EACK,yBAAwB/1B,OAAO+1B,GAAY71B,QAAQ,MACpD,uBAEN,eAAe,iBAEfnvB,YACE,UAAU,aACV,KAAK,SACL,QAASilD,WAETjlD,EAAC2lD,WAGL3lD,EAACwzC,IACC,UAAU,0BACV,WAAW,sBACX,eAAe,QACf,QAAS6R,WAETrlD,EAAC,YAINykD,GACCzkD,EAACi7C,IACC,OAAQkK,EACR,QAASD,IAGbllD,SAAK,UAAU,2BACZ,AAACykD,EAOAzkD,EAACukD,IAAqB,IAAKI,IAN3B3kD,EAACqhD,IACC,KAAMkE,EACN,YACA,uBAWd,KAAMK,IAAwB3kD,eAAK4kD,IAE7Br4B,GAAY,CAAEmS,UAAW,GAAI1b,KAAM,iBAED,MAChC,CAAEjC,UAAS2D,aAAcnI,IAEzB4E,EAAcf,KAEd,CAAEse,YAAW1b,QAASwJ,GAAYD,UAGtCxtB,GAAC,IAEG2/B,YACA1b,OACA7B,YAAaA,EAAY3Y,QACzBuY,UACA2D,yBC7OsBlmB,EAAmB,MACzC,CAAE25B,QAAO/xB,YAAY,GAAID,WAAUE,SAAU7H,kBAE5C,MAAO,CAAEQ,QAAS,OAAQsD,WAAY,8BAEvC,YACA,MAAO,GACLG,SAAU,OACVS,WAAY,OACZN,MAAO,UACPw9B,aAAc,OACdx+B,MAAO,eACJyE,iBAAOsa,gBAGXwX,aAEE,MAAO9xB,iBAAOw+C,wBChBzB,KAAMxU,IAAgB,CAAE5kB,KAAM,GAAIE,GAAI,EAAGwV,SAAU,MAMnD,YAA6B,CAC3BlN,UAAU,IAAM,MACW,MACrB2c,GAAU1pC,mBACV,CAAErD,QAAS0Y,IAEXs0B,EAAajwC,sBAAY,IAAM,GAC3B4H,QAAQsoC,cACf,IAEGC,EAAgBnwC,sBACnBsc,GAAY,IACIrZ,EAAMqZ,EAAS,iBAGhC,CAACrZ,EAAMowB,+BAGC,IAAM,YACG7sB,EAAY,MACrB,CAACqkB,EAAME,GAAMvkB,EAAMogB,QACjBhf,QAAQmxC,UAAU,OAAK/I,EAAQpoC,QAAQqd,QAArB,CAA6B4F,OAAME,kBAGxDQ,GAAG,WAAY8J,GAEf,IAAM,IACJwT,IAAI,WAAYxT,KAExB,IAGDn3B,SAAK,IAAKkyC,aACRlyC,SAAK,UAAU,0BACbC,kDACAA,EAACq6B,IAAY,QAASnF,EAAS,UAAU,gBAE3Cl1B,SAAK,UAAU,yBACbD,EAAC,IACC,IAAK8xC,EACL,cAAeP,GACf,SAAUU,YAEVjyC,SAAK,UAAU,0BACbC,UAAM,UAAU,oCAChBA,EAAC,GAAM,MAAM,mBACXA,EAAC,GAAY,KAAK,OAAO,KAAK,aAEhCA,EAAC,GAAM,MAAM,iBACXA,EAAC,GAAY,KAAK,KAAK,KAAK,gBAGhCA,SAAK,UAAU,yBACbA,EAAC,GAAM,MAAM,qBAAqB,UAAU,wBAC1CA,EAAC,GAAY,KAAK,WAAW,KAAK,oBAK1CA,SAAK,UAAU,4BACbA,YAAQ,KAAK,SAAS,QAAS8xC,EAAY,UAAU,mCCnE7D,YACE,CAAEhD,YACF5b,EACA,MACM,CAAElR,WAAYxE,aAEjB,IACC,MACA,cAAe,CACbkP,KAAM1K,EAAQ,GACd4K,GAAI5K,EAAQ,GACZ+jC,eAAgB,MAElB,8BAEK,UAAU,oCACP,UAAU,sCACf,GAAM,MAAM,qBACV,GAAY,KAAK,OAAO,KAAK,eAE/B,GAAM,MAAM,mBACV,GAAY,KAAK,KAAK,KAAK,yBAG3B,UAAU,2BACZ,GAAM,UAAU,eAAe,MAAM,iCACnC,GAAY,KAAK,iBAAiB,KAAK,kBAOlD,OAAe3iB,qBAAW4iB,ICjC1B,YACE,CAAElX,YACF5b,EACA,MACM,CAAElR,WAAYxE,aAEjB,IACC,MACA,cAAe,CAAEkP,KAAM1K,EAAQ,GAAI4K,GAAI5K,EAAQ,IAC/C,6BAEK,UAAU,oCACP,UAAU,sCACf,GAAM,MAAM,oBACV,GAAY,KAAK,OAAO,KAAK,eAE/B,GAAM,MAAM,kBACV,GAAY,KAAK,KAAK,KAAK,kBAOtC,OAAeohB,qBAAW6iB,ICnB1B,KAAMC,IAID,CACH,CAAEvkC,IAAK,EAAG6I,MAAO,EAAG5I,MAAO,iBAC3B,CACED,IAAKwb,GACL3S,MAAO2S,GACPvb,MAAOub,IAET,CACExb,IAAKwb,GACL3S,MAAO2S,GACPvb,MAAOub,IAET,CACExb,IAAKwb,GACL3S,MAAO2S,GACPvb,MAAOub,IAET,CACExb,IAAKwb,GACL3S,MAAO2S,GACPvb,MAAOub,IAET,CACExb,IAAKwb,GACL3S,MAAO2S,GACPvb,MAAOub,KAIL/5B,GAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAwBf,YAAqC,CACnCi2B,UAAU,IAAM,KAChB1O,UAAU,IACyB,MAC7BqrB,GAAU1pC,mBAEVN,EAAWgpB,IACX,CAAC7M,EAAQmiC,GAAaxkD,mBAAS,IAE/BykD,EAAOzmD,kBAAQ,IAAM,MACnB0mD,GAAOC,GAAW9/B,GACpBjF,OAAOglC,QAAQD,GAAW9/B,IAAUrkB,IACjCvB,KACC+gB,IAAK/gB,EAAK,GACV4pB,MAAO5pB,EAAK,GACZghB,MAAOhhB,EAAK,KAEd,IAEF,SAEGslD,IAASv6B,OAAO06B,IACtB,CAAC7/B,IAEEsrB,EAAajwC,sBAAaxB,GAAM,GAClC4qB,iBACE4mB,EAAQpoC,WACFA,QAAQsoC,cAEjB,IAEGC,EAAgBnwC,sBACnBsc,GAAY,CACPA,MACO,CACP3V,KAAMg+C,GACN3+B,QAAS,CAAC,CAAE7c,KAAMgZ,EAAQ7F,oBAMhC,CAACtW,EAAUmc,EAAQkR,wBAGX,IAAM,YACE7sB,EAAY,MACpB,CAACqkB,EAAME,GAAMvkB,EAAMogB,MACrBopB,EAAQpoC,WACFA,QAAQmxC,UAAU,OAAK/I,EAAQpoC,QAAQqd,QAArB,CAA6B4F,OAAME,kBAI1DQ,GAAG,WAAY0lB,GAEf,IAAM,IACJpI,IAAI,WAAYoI,KAExB,SAEG2T,GAAsB5kD,sBAAae,GAAO,GACpCA,IACT,IAEG8jD,EAAgB/mD,kBAAQ,IAAM,QAC1BqkB,OACDmZ,UACIn9B,GAACimD,IAAa,SAAUjU,EAAe,IAAKH,QAChD1U,UACIn9B,GAACgmD,IAAoB,SAAUhU,EAAe,IAAKH,cAEzD,IACC,IAAKA,EACL,cAAe,KACf,SAAUG,YAIf,CAAChuB,EAAQguB,UAGVjyC,UAAK,IAAK,CAACkyC,GAAa7uC,cACtBrD,SAAK,UAAU,0BACbC,qCACAA,EAACq6B,IAAY,QAASnF,EAAS,UAAU,gBAE3Cn1B,SAAK,UAAU,oCACbC,OAAG,UAAU,iGAIbD,SAAK,UAAU,0BACbC,UAAM,UAAU,qCAEhBA,EAAC,IACC,KAAMomD,EACN,MAAO,CAAEvjD,MAAO,IAAKb,OAAQ,GAAIue,OAAQ,GACzC,SAAUkmC,OAGbC,KAEH3mD,SAAK,UAAU,6BACbC,YAAQ,KAAK,SAAS,QAAS8xC,EAAY,UAAU,iCAGrD9xC,YAAQ,KAAK,SAAS,QAASk1B,EAAS,UAAU,+BCvK1D,aAAiC,MACzBoC,GAAQ8U,KACRvkC,EAAWgpB,IAEX81B,EAAmB9kD,sBAAY,IAAM,GAChC,CAAE2G,KAAMo+C,OACXnhC,KAAKzlB,EAAC,OAAgC,CAC1Cg4B,iBAAkB,GAClBl2B,SAAUyxB,GAAUE,WACpB5wB,MAAO,IACPb,OAAQ,OAET,CAACs1B,EAAOzvB,IAELg/C,EAA0BhlD,sBAAY,IAAM,GACvC,CAAE2G,KAAMo+C,OACXnhC,KAAKzlB,EAAC,OAAwB,CAClCg4B,iBAAkB,GAClBl2B,SAAUyxB,GAAUE,WACpB5wB,MAAO,OAER,CAACy0B,EAAOzvB,UAGT9H,UAAK,IAAKq0C,aAENr0C,EAACm0C,IACC,cAAc,mBACd,qBACA,UAAW,aAEXl0C,EAACq0C,IAAO,WAAW,aAAa,QAASsS,WACvC3mD,EAAC8mD,IAAgB,MAAO,CAAEpjD,SAAU,YAEtC1D,EAACq0C,IACC,WAAW,6BACX,QAASwS,WAET7mD,EAAC+mD,YAKP/mD,SAAK,UAAU,uBCvCrB,YACEP,EACA,MACM,CAAEy1B,UAAU,IAAM,KAAM8xB,oBAAqBvnD,EAE7C,CAAC85C,EAAS0N,GAActlD,mBAAwB,MAChDkG,EAAWgpB,wBACP,IAAM,GACVm2B,EACSA,EAAiBzN,QAEjB,OAEZ,CAACyN,SAEEE,GAAKrlD,sBACRslD,GAAe,cACRC,GACJ,sEAAgEC,KAC9DF,KADF,cAEGG,SAFH,cAEWhO,MAEF8N,kBAASzW,QAASwW,EAAa,OAE5C,CAACF,IAGGrF,EAAc//C,sBAAY,IAAM,MAEnC,CAACqzB,IAEE4c,EAAajwC,sBAAY,IAAM,CAC/BmlD,KACO,CAAEx+C,KAAM++C,GAAchO,UAAS53B,IAAKqlC,EAAiBrlC,QACtD,eAEC,CAAEnZ,KAAMg/C,GAAcjO,cACvB,SAET,CAAC1xC,EAAUm/C,EAAkBzN,EAASrkB,UAGvCn1B,UAAK,IAAKkyC,aACRjyC,EAAC,IACC,eAAgBgnD,iBAAkBzN,QAClC,WACA,SAAU,GACV,SAAU2N,IAEZnnD,SAAK,UAAU,6BACbC,YACE,KAAK,SACL,UAAU,MACV,QAAS8xC,EACT,SAAU,CAACyH,oBAIbv5C,YAAQ,KAAK,SAAS,UAAU,MAAM,QAAS4hD,2BCrEvD,KAAM6F,IAAaxoD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA0DnB,YAAkB,CAAEyoD,OAAM9lC,QAAOla,WAA0B,OAEvD3H,aAAQ,KAAK,SAAS,UAAU,YAAY,oBACzC2nD,EACD1nD,mBAAO4hB,OAWb,YAAkB,CAAE+lC,QAAOC,cAAalgD,WAA0B,OAE9D1H,UACE,UAAU,OACV,MAAO,CACL+f,UAAY,aAAY6nC,EAAY/kD,aAAa+kD,EAAY5lD,uBAG9D2lD,iBAAOxlD,IAAKvB,GAETZ,EAAClB,UAA2B8B,IAAM,QAAS,IAAM8G,EAAQ9G,KAA1CA,EAAKgC,mBAgBK,CACjC0E,QACAqwB,YACAkwB,UAAU,GACVxgD,YACAsgD,QAAQ,GACRjgD,UAAU,IAAM,MACE,YACZogD,GAAgB3/C,iBAA0B,MAC1C,CAAC4/C,EAASC,GAAYrmD,mBAAS,IAE/BsmD,EAAkBpmD,sBAAY,IAAM,GAC/B,KACR,IAEG8/C,EAAc9/C,sBAAY,IAAM,GAC1Bu7B,GAAS,CAACA,IACnB,IACGj0B,EAAetH,sBAClBxB,GAAM,GACI,MACDA,IAEV,CAACqH,UAID3H,UAAK,MAAO,CAAEiC,OAAQ,QAAU,IAAKylD,aACnCznD,YACE,IAAK8nD,EACL,KAAK,SACL,IAAKxgD,EACL,QAASq6C,EACT,YACA,MAAO,CAAEuG,UAAW,uBAEpBloD,EAACi6B,IAAQ,MAAO4tB,EAAS,eAAe,iBACrClwB,MAGJowB,GACC/nD,EAACmoD,IACC,QACA,YAAaL,KAAcr+C,UAAdq+C,cAAuB7+C,wBACpC,QAASE,IAIZ4+C,GAAW/nD,SAAK,UAAU,aAAa,QAASioD,mBCxJrD,EACA,EACA,EACA,MACM,CAAE,QAAQ,EAAG,SAAS,IAAiB,GAAW,MACpD,GACF,UACO,GAAI,EAAO,GAAK,EAAK,IAAK,MAC3B,GAAS,GAAS,IACjB,KAAK,CACV,IAAK,EACL,MAAO,EAAO,GACd,MAAO,UAGJ,GAGT,YAAsB,EAAiC,OACjD,IAAU,KAAO,KACZ,GAAG,QAAiB,SAClB,GAAU,KACZ,GAAG,EAAS,QAEZ,ECnBX,YAAwB,EAAqD,CAArD,QAAEz9B,SAAQ,IAAV,EAAiB49B,IAAjB,EAAiBA,CAAf59B,gCAGhB49B,IAEJ,wBAAyB,CACvBC,OAAQ79B,EAAM7pB,QAAQ,sBAAuB,6BCTrD,KAAMyC,IAAsD,CAC1DI,UAAW,CACTR,gBAAiB,UACjBS,aAAc,MACdvD,QAAS,UAEXk3B,KAAM,CACJvzB,MAAO,QACP0c,OAAQ,QACR7c,SAAU,QACV4kD,UAAW,WAQTC,GAAY,AAACC,GAA4C,MACvDrtB,GAAmB,cACAstB,EAAK,QACrBjnC,KAAKinC,GAAK1gC,QAASpG,GAAQ,CAC5B,MAAO8mC,GAAI9mC,IAAS,WACN8mC,EAAI9mC,MAEbphB,KAAKkoD,EAAI9mC,eAKN6mC,GACTrtB,GAGT,YAA6B,CAAE7zB,SAAmC,MAC1D,CAAE6pC,SAAQuX,WAAY/Z,KAEtBga,EAAYhpD,kBAAQ,IACjB4oD,GAAUpX,GAChB,CAACA,UAEAuX,uBAGE,MAAO,OAAKtlD,GAAOI,WAAc8D,iBAAO9D,oBACzCmlD,EAAUxmD,IAAI,CAACymD,EAAWplC,YAGP,MAAO,OAAKpgB,GAAOg0B,MAAS9vB,iBAAO8vB,eAChDwxB,GADMplC,MC7CnB,KAAMqlC,IAAe,SACnBppD,EACA,MACiEA,KAAzDuL,QAAO,GAAIwf,QAAO4jB,WAAW,IAAM,MAAsB3uC,EAAbgvC,IAAahvC,EAAbgvC,CAA5CzjC,OAAWwf,QAAO4jB,aAEpB,CAAEtnB,SAAQ4nB,iBAAkBC,KAC5BC,EAAgB/sC,sBACnB2oB,GAAU,GACAA,KACKxf,EAAMwf,IAEtB,CAACxf,EAAMojC,EAAUM,+BAGT,IAAM,CACVlkB,KACYxf,EAAMwf,IAErB,CAACxf,EAAM0jC,EAAelkB,MAGtB,MACC,OACA,aAAcA,GAAgBlc,EAAUwY,EAAQ9b,GAChD,SAAU4jC,GACNH,KCJJrrC,GAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA4DT6pD,GAAsBC,GAAwB,GAAI,IAClDC,GAAsBD,GAAwB,GAAI,GAAI,CAC1D1oB,OAAS7V,GAAUA,IAGfy+B,GAA2BnO,KAAaoO,MAAM,CAClDl+C,KAAM8vC,KAAaC,WAAWn5B,MAAM,QACpCyZ,UAAWyf,KAAaqO,UAAUpO,WAAWn5B,MAAM,kBAC7Ck5B,GAAW,MACTA,GAAW,CACfpuB,KAAMouB,KAAaqO,UAAUpO,WAAWn5B,MAAM,gBAC9CgL,GAAIkuB,KAAaqO,UAAUpO,WAAWn5B,MAAM,sBAEvCk5B,KAAaoO,MAAM,CACxBx8B,KAAMouB,KAAaqO,UAAUpO,WAAWn5B,MAAM,iBAC9CgL,GAAIkuB,KAAaqO,UAAUpO,WAAWn5B,MAAM,iBAE9CwnC,UAAWtO,KAAaqO,UAAUlG,IAAI,GAAGlI,WAAWn5B,MAAM,cAC1DwgB,SAAU0Y,KAAaqO,UAAUpO,WAAWn5B,MAAM,8BAE9Ck5B,GAAW,CACf1Y,SAAU0Y,GAAW,CACnBzxC,EAAGyxC,KAAaqO,UAAUpO,WAAWn5B,MAAM,uBAC3CtY,EAAGwxC,KAAaqO,UAAUpO,WAAWn5B,MAAM,2BAG/CmC,QAAS+2B,GAAW,CAClBuO,OAAQvO,KACRwO,OAAQxO,KACRyO,KAAMzO,KACN0O,KAAM1O,KACN2O,KAAM3O,OACLhK,KACD,gBACA,wDACC2X,GACKlnC,SAAOuF,OAAO2hC,GAAK9oC,SAAS,OAatC,YAA6B,CAC3BuV,UAAU,IAAM,KAChBqkB,WAC2B,MACrB1H,GAAU1pC,mBACVN,EAAWgpB,IACXgE,EAAQwX,KACR,CAACqd,EAAYC,GAAehoD,mBAAS,IACrC,CAACioD,EAAuBC,GAC5BC,GAAyB,iCAErB,CACJrqC,YAAa,CACX3a,KAAM,CAAEilD,qBAERvsC,IAEEs0B,EAAajwC,sBAAY,IAAM,GAC3B4H,QAAQsoC,cACf,IAEGiY,EAAarqD,kBAAQ,IAAM,MACaiqD,KAApCF,YAAYO,GAAwBL,EAAZzrC,IAAYyrC,EAAZzrC,CAAxBurC,wBACIO,GACL1oC,OAAO0iC,OAAOiG,GAA0B/rC,EAAS,CACtDnT,KAAO,cAAa++C,EAAkB,OAEvC,CAACH,EAAuBG,IAErB/X,EAAgBnwC,sBACnBilB,GAAW,WACQ,GACS,OAAKA,GAAL,CAAa4iC,kBAC7B,CACPlhD,KAAM2hD,GACN7sC,UAAW,UAGP8sC,GAAmB7oC,OAAOglC,QAAQz/B,EAAO/C,SAC5CtC,OAAsB,CAACC,EAAK,CAACC,EAAK6I,KAC7BA,MACEjqB,KAAKohB,GAEJD,GACN,IACFkiB,KAAK,OAEF0O,EAAc,KAAMzd,GAAMmB,YAC7B,WAAUo0B,mBAGJ,CACP5hD,KAAM6hD,GACNxiC,QAAS,CAAEyxB,IAAKC,EAASp7B,QAAS2I,kBAOxC,CAAC+N,EAAOhtB,EAAU6hD,EAAYnQ,EAASrkB,EAAS20B,IAG5CS,EAAsBzoD,sBAAaxB,GAAM,GACjCA,EAAEq+B,OAAOuP,UACpB,UAGDluC,UAAK,IAAK,CAACkyC,GAAa7uC,cACtBrD,SAAK,UAAU,0BACbC,kDACAA,EAACq6B,IAAY,QAASnF,EAAS,UAAU,gBAE3Cn1B,SAAK,UAAU,0BACbA,EAAC,IACC,IAAK8xC,EACL,cAAemY,EACf,iBAAkBf,GAClB,SAAUjX,YAEVhyC,EAAC,OACDD,SAAK,UAAU,0BACbC,UAAM,UAAU,mCAChBA,EAAC,GACC,KAAK,OACL,MAAO,CAAEqvC,MAAO,CAAExsC,MAAO,QAASc,UAAW,cAGjD5D,SAAK,UAAU,0BACbC,UAAM,UAAU,qDAEhBA,EAAC,IACC,KAAMuqD,GACN,MAAO,CAAE1nD,MAAO,IAAKb,OAAQ,GAAIue,OAAQ,GACzC,KAAK,iBAITvgB,UAAM,UAAU,uCAEhBD,SAAK,UAAU,uCACbC,EAAC,IAAe,MAAM,KAAK,UAAU,iBACrCA,EAAC,GAAM,MAAM,gBACXA,EAAC,GAAY,KAAK,aAAa,KAAK,aAEtCA,EAAC,GAAM,MAAM,KAAK,MAAO,CAAE4hB,MAAO,CAAE1hB,QAAS,oBAC3CF,EAAC,GAAY,KAAK,WAAW,KAAK,gBAGtCD,SAAK,UAAU,uCACbC,EAAC,IAAe,MAAM,MAAM,UAAU,iBACtCA,EAAC,GAAM,MAAM,gBACXA,EAAC,GAAY,KAAK,cAAc,KAAK,aAEvCA,EAAC,GAAM,MAAM,KAAK,MAAO,CAAE4hB,MAAO,CAAE1hB,QAAS,oBAC3CF,EAAC,GAAY,KAAK,YAAY,KAAK,gBAGvCD,SAAK,UAAU,uCACbC,UAAM,UAAU,0CAChBA,EAAC,GACC,KAAK,eACL,KAAK,SACL,MAAO,CAAEqvC,MAAO,CAAE9uB,OAAQ,MAE5BvgB,UAAM,MAAO,CAAEwqD,YAAa,+BAE9BzqD,SAAK,UAAU,uCACbC,UAAM,UAAU,gDAChBA,EAAC,IACC,KAAM8oD,GACN,KAAK,cACL,MAAO,CAAEjmD,MAAO,IAAKb,OAAQ,GAAIue,OAAQ,QAG7CvgB,UAAM,UAAU,uCAEhBD,SAAK,UAAU,uCACbC,UAAM,UAAU,gDAChBA,EAAC,IACC,KAAMgpD,GACN,KAAK,gBACL,MAAO,CAAEzoC,OAAQ,EAAGve,OAAQ,MAE9BhC,UAAM,UAAU,4BAChBA,EAAC,IACC,KAAMgpD,GACN,KAAK,gBACL,MAAO,CAAEzoC,OAAQ,EAAGve,OAAQ,SAGhChC,SAAK,UAAU,yBACbA,UAAM,UAAU,sCAElBD,SACE,UAAU,6BACV,MAAO,CAAEuD,eAAgB,2BAEzBvD,SAAK,UAAU,gBACbC,EAAC,IAAe,KAAK,mBACrBA,EAAC,IAAe,MAAM,KAAK,UAAU,qBAEvCD,SAAK,UAAU,gBACbC,EAAC,IAAe,KAAK,mBACrBA,EAAC,IAAe,MAAM,MAAM,UAAU,qBAExCD,SAAK,UAAU,gBACbC,EAAC,IAAe,KAAK,iBACrBA,EAAC,IAAe,MAAM,OAAO,UAAU,qBAEzCD,SAAK,UAAU,gBACbC,EAAC,IAAe,KAAK,iBACrBA,EAAC,IAAe,MAAM,OAAO,UAAU,qBAEzCD,SAAK,UAAU,gBACbC,EAAC,IAAe,KAAK,iBACrBA,EAAC,IAAe,MAAM,OAAO,UAAU,2BAI7CA,OAAG,UAAU,uMAKbD,SAAK,UAAU,8BACbC,EAAC,IACC,SAAUsqD,EACV,QAASZ,GACJvgC,OAAOugC,IAEd1pD,qFAGJA,SAAK,UAAU,4BACbA,YACE,KAAK,SACL,QAAS8xC,EACT,UAAU,MACV,SAAU,CAAC4X,qCClTrB,KAAM3Q,IAAe95C;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAyBfwrD,GAAkB,CACtB,CACE7nD,GAAI,UACJ8kD,KAAM1nD,EAAC,OACP4hB,MAAO,mBAET,CACEhf,GAAI,MACJ8kD,KAAM1nD,EAAC,OACP4hB,MAAO,eAET,CACEhf,GAAI,MACJ8kD,KAAM1nD,EAAC,OACP4hB,MAAO,8BAmBiC,CAC1Cs3B,eACAD,YACAyR,wBAAwB,IAAM,KAC9BC,uBAAuB,IAAM,KAC7BC,iBAAiB,IACU,MACrB/1B,GAAQwX,KACRxkC,EAAWgpB,IACXyG,EAAQ8U,KACRviB,EAAiBX,KAEjB+pB,EAAmBpxC,sBAAY,IAAM,IAC5B,SAAQq3C,IAAgB,YACpC,CAACA,IAEEhG,EAAmBrxC,sBAAY,IAAM,IACrB,SAAQq3C,OACtBvjB,QAAQ,mCACb,CAACd,EAAOqkB,IAEL2R,EAAmBhpD,sBAAY,IAAM,CACrCo3C,EAAUC,IACP4R,GAAoB7R,EAAUC,GAAcK,SAASrzC,KAAMk3B,GAAS,CACnEA,IACIzH,QAAQ,iCAER7xB,MAAM,2BAIjB,CAAC+wB,EAAOqkB,EAAcD,IAEnB8R,EAAgBlpD,sBACpB,CAAC,CAAEe,QAAS,QACFA,OACD,wBAGA,oBAGA,kBAOT,CAACioD,EAAkB3X,EAAkBD,IAGjC+X,EAAcnpD,sBAAY,IAAM,CAC/BopD,UAAUC,UAAUC,WAAWjlD,KAAMqzC,GAAY,GAC3C,CAAE/wC,KAAMg/C,GAAcjO,eAEhC,CAAC1xC,IAEEujD,EAAevpD,sBAAY,IAAM,OACjCo3C,MAAUC,KAAVD,cAAyBt3B,SACL,KACb,CACPnZ,KAAM6iD,GACNxjC,QAAS,CAAElG,IAAKs3B,EAAUC,GAAcv3B,IAAKkI,sBAGhD,CACDovB,EACAC,EACAwR,EACA7iD,EACAgiB,IAGIyhC,EAA0BzpD,sBAAY,IAAM,GAC1C4jB,KAAKzlB,EAAC,IAAoB,QAASi5C,EAAUC,KAAmB,CACpEp3C,SAAUyxB,GAAUE,WACpBwE,eAAgB,GAChBp1B,MAAO,OAER,CAACy0B,EAAO2hB,EAAWC,UAGpBn5C,UAAK,IAAKg5C,aACP,CAAC6R,EAAeW,YACfvrD,EAAC,IACC,UAAWA,EAAC,OACZ,QAAQ,YACR,MAAOyqD,GACP,QAASM,IAIZ,CAACH,EAAeY,UACfxrD,EAACi6B,IAAQ,MAAM,gBAAgB,eAAe,gBAC5Cj6B,YAAQ,UAAU,aAAa,KAAK,SAAS,QAASgrD,WACpDhrD,EAAC,WAIN,CAAC4qD,EAAea,SACfzrD,EAACi6B,IAAQ,MAAM,eAAe,eAAe,gBAC3Cj6B,YACE,UAAU,aACV,KAAK,SACL,QAAS2qD,iBACI,uCAEb3qD,EAAC,WAIN,CAAC4qD,EAAec,YACf1rD,EAACi6B,IAAQ,MAAM,kBAAkB,eAAe,gBAC9Cj6B,YAAQ,UAAU,aAAa,KAAK,SAAS,QAASorD,WACpDprD,EAAC,WAIN,CAAC4qD,EAAee,aAAe1S,GAAaA,EAAU52C,OAAS,GAC9DrC,EAAC,IACC,WAAW,kBACX,eAAe,OACf,QAASsrD,WAETtrD,EAAC4rD,SAGL7rD,iBACGk5C,GACCA,EAAU52C,OAAS,GAClB,GAAE,IAAiB,QAAQ42C,EAAU52C,SAAU,sBCxN1B,EAAM,EAAU,EAAY,IACtD,EAAS,OAAS,GAAK,OAAO,KAAK,GAAM,OAAS,EAAG,MACjD,GAAM,IAAe,IAAM,EAAI,IAAe,IAAM,EAAI,UAC1D,IAAQ,OAAW,IACjB,EAAS,KAAS,EAAK,gBAElB,CAAE,OAAQ,CAAC,EAAK,OAAQ,QAAS,EAAK,YAE3C,EAAS,KAAS,UAEb,CACL,OAAQ,EAAK,eACb,QAAS,EAAK,QAAU,EAAK,wBAI1B,CACL,OAAQ,CAAC,EAAK,OAAO,OAAO,EAAK,gBACjC,QAAS,EAAK,QAAU,EAAK,QAAU,EAAK,mBAK3C,CAAE,OAAQ,GAAI,QAAS,eAGQ,EAAa,EAAI,IAEnD,GAAQ,EAAY,KAAK,AAAC,GAAW,EAAO,KAAO,GACnD,KACA,CAAC,YAEQ,KAAQ,QACH,EAAK,QAAQ,UAAU,AAAC,GAAW,EAAO,KAAO,GAC3D,GAAe,EAAG,GACZ,eAMP,CAAE,QAAO,2BAGmB,EAAgB,EAAQ,EAAM,IAE7D,GAA4B,UACvB,KAAO,GAAe,WAAW,WAAY,IAChD,GAAO,EACP,EAAO,SAEO,WAAW,WAAW,GAAK,GAAK,IAAI,KAAK,AAAC,GACxD,EAAO,SAAS,IAElB,GACa,EAAW,OACtB,EAAe,WAAW,WAAW,GAAK,QAEtC,GAAS,GAAwB,EAAM,KACrC,EAAO,QACD,EAAO,cACd,SAGS,WAAW,WAAW,GAAK,GAAK,IAAI,KAAK,AAAC,GACxD,EAAO,SAAS,IAElB,GACa,EAAW,OACtB,EAAe,WAAW,WAAW,GAAK,QAEtC,GAAS,GAAwB,EAAM,KACrC,EAAO,QACD,EAAO,cACd,MAEL,MACS,KAAK,EAAM,IAClB,IAAgB,UACP,KAAK,EAAM,QAAQ,GAAa,KAG3C,cAIC,eAGmC,EAAgB,EAAe,MACnE,GAAoB,EAAe,WAAW,UAChD,EAAe,WAAW,WAAW,EAAe,WAAW,WAC/D,KAEE,EAAc,EAAe,WAAW,UAC1C,EAAe,WAAW,YAC1B,WAEG,GACH,IAAkB,EAAe,MAC/B,EAAkB,GAAK,GACvB,IAAkB,EAAe,MACjC,EACE,IAAgB,IACd,EAAkB,GAAK,GACvB,IAAgB,IAChB,EAAkB,GAAK,MACJ,GAAK,IAAI,OAAO,EAAkB,GAAK,OACzC,GAAK,IAAI,OAAO,EAAkB,GAAK,IAC5D,GACF,eAGuB,EAAO,EAAiB,IAC/C,GAAS,EAAQ,EAAM,QAAU,QAC/B,CAAE,UAAS,UAAW,KACxB,GAAc,WACX,QAAQ,AAAC,GAAW,CACrB,EAAO,SAAS,OACH,KACN,EAAO,OAAO,AAAC,GAAQ,IAAQ,MAEjC,KAAK,KAGT,CAAC,EAAQ,eCxGwB,CACxC+jB,gBACAT,YACAqD,QACAtC,UACC,MACKmO,GAAQwX,KACRxkC,EAAWgpB,IACXhF,EAAgBjB,KAChBf,EAAiBX,KAEjB2iC,EAAmBjgC,GACvB/B,EAAejC,WAAWI,WAAazK,OACnCsM,EAAejC,WAAWI,SAC1B8jC,IAGA,CAACC,EAAuBC,GAA4BrqD,mBAAc,IAClE,CAACsqD,EAAmBC,GAAwBvqD,mBAAc,MAC1D,CAACwqD,EAAUC,GAAezqD,mBAAqB,wBAE3C,IAAM,IACVgkB,EAAW,MACPY,GAAQZ,EAAUY,MAAM,KAC1BA,EAAMlkB,SAAW,IACP,CAACsjB,EAAUhlB,QAAQ,SAAU,MAChC4lB,EAAMlkB,SAAW,KACdkkB,EAAMpkB,IAAKqkB,GAAYA,EAAQ7lB,QAAQ,SAAU,QAGhE,CAACglB,wBAEM,IAAM,CACVsmC,IACEA,IAAsB,SACVpkD,SAAS,CACrBW,KAAM,OACNqf,QAAS,CAAEyC,oBAAqByhC,KAEzBE,IAAsB,WACjBpkD,SAAS,CACrBW,KAAM,OACNqf,QAAS,CAAEyC,oBAAqByhC,OAET,OAEN,QAEtB,CAACE,EAAmBF,EAAuBlgC,SAExC/mB,GAAOnF,kBAAQ,IAAM,IACrBqpB,GAAStC,EAAQ,IACfN,IAAkB4W,EAAeC,OAASvW,GAAUA,EAAOI,aACtDJ,GAAOI,UAEdV,IAAkB4W,EAAeqvB,OACjCrjC,GACAA,EAAMlC,aAECkC,GAAMlC,aAGV,IACN,CAACV,EAAeM,EAAQsC,IAErBsjC,EAAiB3sD,kBAAQ,IAAM,MAC7B4sD,GAAkD,CAAEljD,EAAG,GAAIC,EAAG,WAC3D1G,KAAMinB,GAAejC,WAAWA,WACnCiC,EAAejC,WAAWA,WAAWhlB,GAAIyG,KAC7BA,EAAE9I,KAAK,GAAGspB,EAAejC,WAAWA,WAAWhlB,GAAIyG,GAE/DwgB,EAAejC,WAAWA,WAAWhlB,GAAI0G,KAC7BA,EAAE/I,KAAK,GAAGspB,EAAejC,WAAWA,WAAWhlB,GAAI0G,SAI9DijD,IACN,CAAC1iC,EAAejC,aAGb4kC,EAAuB7sD,kBAC3B,IAAM2sD,EAAejjD,EAAEsiB,OAAO2gC,EAAehjD,GAC7C,CAACgjD,EAAejjD,EAAGijD,EAAehjD,IAG9BmjD,EAA2B9sD,kBAAQ,IAAM,IACzCsqB,GAAa,YACHD,UAAUE,YAAYnC,QAAS2kC,GAAgB,UAC9C7iC,EAAejC,WAAWA,WAAW8kC,GACxC,MACF,CAAE3qC,SAAU4qC,GAAwB7nD,EAAM4nD,GAC1ClkD,EAAOqjB,KAAc7B,UAAUI,aAAxByB,cAAoCrjB,KAE/CuZ,QACUgI,GAAkB0C,MAAQjkB,IAASuhB,GAAkBmf,WAGlDjf,EAAW0B,OACtB5J,EAAMkF,QACH9kB,IAAK0mB,GACJogB,GAA2Bpf,EAAgB,CAAChB,EAAOjmB,KAAKP,OACxD,EACIwmB,EAAOF,OACP,IAEL5B,YAKJ6lC,GAA4B/iC,EAAgBzD,GAAeuF,OAChE1B,IAED,CAACJ,EAAgB/kB,EAAMshB,EAAeyF,EAAc7B,YAEjD6iC,EAAmBhrD,sBAAY,CAACirD,EAAOC,IAGpCC,GAAaF,EAAOC,GAC1B,IAEGE,EAAoBprD,sBACxB,CAACqrD,EAAM7kD,IAAU,UACX,CAACg2C,GAA0Bh2C,IACzBwjD,EAAiBrpC,SAAU,MACvBuqC,GAAkBI,GACtBD,EACAf,EACAN,EAAiB5jC,eAEf8kC,EAAgBK,QAAU,EAAG,GAEfC,OAAOtlC,QAASulC,GAAW,GACxB9jC,OAAO8jC,UAGpB,CAAEvrC,QAAOwrC,eAAgBZ,GAC7B7nD,EACA+mD,EAAiBjpD,OAEfmf,EAAO,IAEL6G,GAAS,GACTwkC,EAAU,EAEVG,IAAgBhwC,OACd6I,IAAkB4W,EAAeC,OAClCrU,EAAQwkC,GAAWP,EAClB9qC,EAAM4G,QAAU,GAChBokC,GAEO3mC,IAAkB4W,EAAeqvB,SACzCzjC,EAAQwkC,GAAWP,EAClB9qC,EAAM8pC,EAAiB5jC,YAAYU,QAAU,GAC7CokC,IAGKhrC,MAAMkF,UAANlF,cAAgBwrC,MAErBnnC,IAAkB4W,EAAeC,OAClCrU,EAAQwkC,GAAWP,EAClB9qC,EAAMkF,QAAQsmC,GAAa5kC,QAAU,GACrCokC,GAEO3mC,IAAkB4W,EAAeqvB,SACzCzjC,EAAQwkC,GAAWP,EAClB9qC,EAAMkF,QAAQsmC,GAAa1B,EAAiB5jC,YACzCU,QAAU,GACbokC,KAIF3mC,IAAkB4W,EAAeC,QAC1B,CACPz0B,KAAMglD,GACN3lC,QAAS,CACPulC,UACAvoB,UAAW9iB,EACX4G,OAAQC,EACR2kC,iBAGKnnC,IAAkB4W,EAAeqvB,SACjC,CACP7jD,KAAMilD,GACN5lC,QAAS,CACPulC,UACA9gC,SAAUvK,EACV4G,OAAQC,EACR1C,KAAM2lC,EAAiB5jC,WACvBslC,mBAKS7lD,QAAQmkD,EAAiB5jC,mBAEpChE,KACJ,uEAMV,CACE4nC,EACAh3B,EACA/vB,EACA+C,EACAue,EACA+lC,EACAU,UAyBG,CACLa,kBAtBwB7rD,sBACvBqrD,GAAS,MACFG,GAASF,GACbD,EACAf,EACAN,EAAiB5jC,YACjBolC,UAEEA,EAAOhrD,OAAS,EAAG,MAEf4nB,GAAa0jC,GAAqB9jC,EAAgBwjC,EAAQvoD,KACvCmlB,KACJ,eAGA,SAGzB,CAAC4hC,EAAiB5jC,WAAY4B,EAAgB/kB,EAAMqnD,IAKpDc,oBACAR,2BACAD,wBC9OJ,KAAMppD,IAGF,CACFwqD,MAAO3uD,EAAI,CACTgB,QAAS,OACT2gB,SAAU,OACVitC,SAAU,EACVhrD,MAAO,OACPb,OAAQ,OACRsxB,cAAe,WAEjBw6B,WAAY7uD,EAAI,CACdgB,QAAS,OACTqvC,KAAM,IACNhc,cAAe,SACf1S,SAAU,SAEZk5B,SAAU76C,EAAI,CACZgB,QAAS,OACTqvC,KAAM,MAERye,QAAS9uD,EAAI,CACXgB,QAAS,OACTsqC,aAAc,kCACdrqC,QAAS,WACToD,eAAgB,MAChBtB,OAAQ,KAEVgsD,OAAQ/uD,EAAI,CACVgB,QAAS,OACTqzB,cAAe,SACfhwB,eAAgB,SAChBC,WAAY,SACZsqD,SAAU,EACV92B,UAAW,IAEb4wB,MAAO1oD,EAAI,CACTgB,QAAS,OACTqzB,cAAe,SACfgc,KAAM,SACNttC,OAAQ,OACR+0B,UAAW,KAYf,YAA4B,CAC1B/N,QACAtC,SACAuyB,UAAWgV,EACXtoC,YACAS,gBACA8nC,mBACAtD,iBACAxjD,YAC0B,MACpB,CAAC8xC,EAAcC,GAAmBx3C,mBAAS,GAC3C,CAACs3C,EAAWkV,GAAgBxsD,mBAAc,IAE1CkG,EAAWgpB,IACXyG,EAAQ8U,KAER,CACJqgB,2BACAiB,oBACAT,oBACAT,wBACE4B,GAAkB,CAAEplC,QAAOtC,SAAQf,YAAWS,sCAExC,IAAM,CACV6nC,KACYI,GACRJ,GAAc5rD,OAASgsD,EAAchsD,UACvB42C,EAAU52C,QAErB4rD,KAGV,CAAChV,EAAU52C,OAAQ4rD,wBAEZ,IAAM,YACKhV,EAAUC,IAAiB,OAC7C,CAACA,EAAcD,EAAWiV,SAEvBI,GAAwBzsD,sBAC5B,CAAC8f,EAAK43B,IAAY,GACP,CAAE/wC,KAAM++C,GAAchO,UAAS53B,SAE1C,CAAC9Z,IAGG0mD,EAA4B1sD,sBAChC,CAAC2sD,EAAW,OAAS,GACb/oC,KAAKzlB,EAAC,IAA6B,iBAAkBwuD,IAAc,CACvE1sD,SAAUyxB,GAAUE,WACpB5wB,MAAO,IACPb,OAAQ,OAGZ,CAACs1B,IAGGm3B,EAAuB5sD,sBAAa2hB,GAAU,GAClCA,IACf,UAGDzjB,UAAK,IAAKqD,GAAOwqD,gBACf5tD,EAAC,IACC,eACA,YACA,qBAAsB,IAAMuuD,IAC5B,sBAAuBE,EACvB,mBAEF1uD,SAAK,IAAKqD,GAAO0qD,qBACf9tD,SAAK,IAAKoD,GAAO02C,kBACf95C,EAAC84C,IACC,SAAWO,GAAeF,EAAgBE,GAC1C,aAAcH,WAEbD,GAAaA,EAAU52C,OAAS,EAC/B42C,EAAU92C,IAAI,CAACm3C,EAAe91B,WAC5BzjB,gBAAmB,IAAKqD,GAAOukD,gBAC7B5nD,UAAM,IAAKqD,GAAO2qD,kBAChB/tD,EAAC,IAAG,GAAIs5C,EAAIG,WAAUH,KAAII,KAAJJ,cAAQnqB,QAAQ,MAExCnvB,SACE,IAAKoD,GAAO4qD,OACZ,UAAU,oBACV,cAAe,IAAMO,EAA0BjV,GAC/C,MAAO,CACLt2C,mBACW,GAAK,IAAM,EAAI,UAAY,kBAGxChD,EAAC,aACE,CAAC,CAAEgC,SAAQa,WAER7C,EAAC,QACC8M,GACA,GAAK,SAAQ0W,IACb,QACA,SACA,QAAS81B,EAAIC,SAAW,GACxB,WAAaA,GACX+U,EAAsBhV,EAAI33B,IAAK43B,GAEjC,gBAAiB0T,EACjB,mBACER,GACAA,EAAyBpqD,OAAS,EAC9B,MACA,UAEN,qBAAsB,IACtB,WACEoqD,GACAA,EAAyBpqD,OAAS,EAC9BoqD,EACAD,EAEN,aAAckB,UAvChBpU,EAAI33B,OAgDhB3hB,SACE,IAAKoD,GAAO4qD,OACZ,MAAO,CAAEhsD,OAAQ,QACjB,QAAS,IAAMusD,aAEfvuD,oDAKPoH,QAMT,KAAMsnD,IAAwBztD,eAAK0tD,IAC7BnhC,GAAY,CAAE9G,OAAQ,GAAIsC,MAAO,gBAQD,CACpCklC,mBACA9mD,WACAwjD,kBACqB,MACf,CAAE3R,YAAW7yB,gBAAeT,aAAcnI,IAE1C1Y,EAAO2oB,GAAYD,IACnB9G,EAAkB5hB,kBAAkB4hB,SAAU,GAC9CsC,EAAgBlkB,kBAAkBkkB,QAAS,SAG/ChpB,GAAC,IAEGi5C,YACA7yB,gBACAT,YACAe,SACAsC,QACAklC,mBACAtD,8BC1OR,KAAM1E,IAAW,CAAC,CAAEvkC,IAAK,EAAG6I,MAAO,SAAU5I,MAAO,WAOpD,YAA2B,CACzBsT,UAAU,IAAM,KAChB1O,WACyB,MACnBqrB,GAAU1pC,mBACVN,EAAWgpB,IACXu1B,EAAOzmD,kBAAQ,IAAM,MACnB0mD,GAAOC,GAAW9/B,GACpBjF,OAAOglC,QAAQD,GAAW9/B,IAAUrkB,IACjCvB,KACC+gB,IAAK/gB,EAAK,GACV4pB,MAAO5pB,EAAK,GACZghB,MAAOhhB,EAAK,KAEd,IAEF,SAEGslD,IAASv6B,OAAO06B,IACtB,CAAC7/B,IACEsrB,EAAajwC,sBAAY,IAAM,GAC3B4H,QAAQsoC,cACf,IAEGC,EAAgBnwC,sBACnBilB,GAAW,GACD,CAAEte,KAAMomD,GAAe/mC,QAASf,SAG3C,CAACjf,EAAUqtB,wBAGH,IAAM,YACG7sB,EAAY,MACrB,CAACqkB,EAAME,GAAMvkB,EAAMogB,QACjBhf,QAAQmxC,UAAU,OAAK/I,EAAQpoC,QAAQqd,QAArB,CAA6B4F,OAAME,kBAGxDQ,GAAG,WAAY8J,GAEf,IAAM,IACJwT,IAAI,WAAYxT,KAExB,SAEG23B,GAAsBhtD,sBACzBe,GAAO,MAE8B4nB,GADtB87B,GAAW9/B,GAAS5jB,IACW,CAAE2kB,MAAO,GAA9CA,SAAQ,GAAoBiD,EAAdskC,IAActkC,EAAdskC,CAAdvnC,YACA9d,QAAQmxC,UAAU,SACrB/I,EAAQpoC,QAAQqd,QADK,CAExBioC,QAASxnC,IACNunC,KAGP,CAACtoC,UAIDzmB,UAAK,IAAKkyC,aACRlyC,SAAK,UAAU,0BACbC,2CACAA,EAACq6B,IAAY,QAASnF,EAAS,UAAU,gBAE3Cl1B,SAAK,UAAU,gBAAgB,MAAO,CAAEsvC,KAAM,YAC5CvvC,EAAC,IACC,IAAK8xC,EACL,cAAe,CAAEnlB,KAAM,GAAIE,GAAI,EAAGoiC,QAAS,EAAGD,QAAS,GACvD,SAAU/c,YAEVjyC,SAAK,UAAU,0BACbC,UAAM,UAAU,sCAEhBA,EAAC,IACC,KAAMomD,EACN,MAAO,CAAEvjD,MAAO,IAAKb,OAAQ,GAAIwoC,aAAc,QAC/C,SAAUqkB,OAGd9uD,SAAK,UAAU,0BACbC,UAAM,UAAU,oCAChBA,EAAC,GAAM,MAAM,mBACXA,EAAC,GAAY,KAAK,OAAO,KAAK,aAEhCA,EAAC,GAAM,MAAM,iBACXA,EAAC,GAAY,KAAK,KAAK,KAAK,gBAGhCA,SAAK,UAAU,sBACbA,EAAC,GAAM,UAAU,eAAe,MAAM,8BACpCA,EAAC,GAAY,KAAK,UAAU,KAAK,eAGrCA,SAAK,UAAU,sBACbA,EAAC,GAAM,UAAU,eAAe,MAAM,wBACpCA,EAAC,GAAY,KAAK,UAAU,KAAK,oBAKzCA,SAAK,UAAU,4BACbA,YAAQ,KAAK,SAAS,QAAS8xC,EAAY,UAAU,yCC3H3B,EAAc,EAAO,KAAM,IACvD,OACK,IAAI,UAAS,OAAQ,UAAU,KAAQ,SACvC,SACA,ICEX,KAAMmd,IAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAWlB,YAAoC,CAAEnqD,QAAyC,MACvE,CAAEgiB,SAAQ4nB,iBAAkBC,KAC5B,CAACugB,EAAMC,GAAWxtD,mBAASmlB,EAAOooC,KAAOpoC,EAAOooC,KAAOD,IACvD,CAAC9zB,EAAQi0B,GAAaztD,mBAAS,+BAE3B,IAAM,MACR0tD,GAAaC,GAAKJ,EAAMpqD,GAC1BuqD,YAAsB3qD,SACd2qD,EAAWl6B,YAEP,OAAQ+5B,KACZG,KAEX,CAACH,EAAMpqD,EAAM4pC,IAGd3uC,SAAK,MAAO,CAAEgkC,UAAW,kBACvB/jC,cACE,MAAOkvD,EACP,SAAW7mD,GAAU8mD,EAAQ9mD,EAAMq2B,OAAOlU,OAC1C,MAAO,CACLwO,WAAY,sCACZt1B,SAAU,GACVxD,QAAS,MACT2C,MAAO,MACPG,gBAAiB,UACjBwnC,aAAc,OACdzT,UAAW,QACXnW,SAAU,OACV2uC,UAAW,WAGfvvD,OAAG,MAAO,CAAEwqC,aAAc,4BAE1BxqC,cACE,MAAOm7B,EACP,YACA,MAAO,CACLj3B,OAAQ,uBACR80B,WAAY,sCACZt1B,SAAU,GACVxD,QAAS,MACT2C,MAAO,MACP2nC,aAAc,OACdzT,UAAW,QACXnW,SAAU,OACV2uC,UAAW,cAOrB,OAAetuD,eAAKuuD,IChDpB,KAAMpsD,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAkDf,YAA4C,CAAE6F,OAAM2qD,eAAev8B,EAAU,MACrErrB,GAAWgpB,IACXghB,EAAU1pC,mBACV,CAACk9B,EAASqqB,GAAc/tD,mBAAS,kCAEnBuxB,EAAK,MACvBgxB,aAAc,GACJz6C,QAAQsoC,qCAIV,IAAM,MACR5W,GAAS5Z,OAAOC,KAAK1c,EAAKugC,SAAS5jB,OAAO,CAACC,EAAKC,OAChDA,GAAO,OAAK7c,EAAKugC,QAAQ1jB,IAAlB,CAAwBguC,QAAShuC,IACrCD,GACN,MACQyZ,KACH1xB,QAAQmxC,UAAU,CAAEvV,QAASlK,EAAQ+zB,KAAMpqD,EAAKoqD,QACvD,CAACpqD,SAEE8qD,GAAcjwD,kBAAQ,IACnB4hB,OAAOC,KAAK6jB,GAClB,CAACA,IAEEwqB,EAAmBlwD,kBAAQ,IAAM,aACb,OACfiwD,GAAYnuC,OAAO,CAACC,EAAKC,OAC1BA,GAAOm5B,KAAaoO,MAAM,KAC5ByG,QAAS7U,KACNC,WACAjK,KAAK,SAAU,6BAA+Bgf,GAAc,MACrDC,GAAWle,EAAQpoC,QAAQqd,OAAOue,cAEtC9jB,QAAOC,KAAKuuC,GAAUtuC,OAAO,CAACC,EAAKujB,IAC7B8qB,GAAS9qB,GAAQ0qB,UAAYG,GAC9BpuC,EAAcnhB,KAAKuvD,GAEfpuC,GACN,IAAIrf,SAAW,KAGpBgjC,EAAQ1jB,GAAKnZ,OAASwnD,GAAcC,QACpC,CAAEC,QAASpV,KAAaC,YACxB,IAhBwB,CAiB5Bv3B,MAAOs3B,KAAaC,cAEfr5B,GACN,UAGEo5B,MAAaoO,MAAM,CACxB7jB,QAASyV,KAAaoO,MAAMiH,QAE7B,CAAC9qB,EAASuqB,EAAa/d,IAEpBG,EAAgBnwC,sBACnBilB,GAAW,YACI,SACRqU,GAAS5Z,OAAOglC,QAAQz/B,EAAOue,SAAS5jB,OAC5C,CAACC,EAAK,CAACC,EAAK6I,QACN7I,GAAO,OAAK0jB,EAAQ1jB,IAAU6I,GAC3B9I,GAET,MAEO,CACPlZ,KAAM4nD,GACNvoC,QAAS,CAAEqnC,KAAMpoC,EAAOooC,KAAM7pB,QAASlK,MAG3C,CAACkK,EAASx9B,EAAU4nD,IAGhBY,EAAexuD,sBAAa2hB,GAAU,GAC9B8sC,GACH,OACFA,GADE,EAEH,OAAM9sC,KAAU,CAChBmsC,QAAS,GACTnnD,KAAM,UACN+nD,SAAU,QACVL,QAAS,GACT1sC,aAIL,UAGDzjB,GAAC,IACC,IAAK8xC,EACL,cAAe,CAAExM,UAAS6pB,KAAM,MAChC,iBAAkBW,EAClB,SAAU7d,YAET4d,GACC7vD,WAAO,IAAKqD,aACVpD,oBACED,kBACEC,QAAI,UAAU,yBACdA,QAAI,UAAU,2BACdA,2BACAA,QAAI,UAAU,gCAGlBA,oBACG4vD,EAAYztD,IAAI,CAACwf,EAAK6B,IAEnBzjB,kBACEC,QAAI,UAAU,mBAAWwjB,EAAQ,IACjCxjB,QAAI,UAAU,iBACZA,EAAC,GAEC,KAAO,WAAU2hB,YACjB,MAAO0jB,EAAQ1jB,GAAKguC,SAFfhuC,KAKT3hB,iBACGqlC,EAAQ1jB,GAAKnZ,OAASwnD,GAAcC,QACnCjwD,EAAC,GACC,KAAO,WAAU2hB,YACjB,MAAO0jB,EAAQ1jB,GAAKuuC,UAGtBlwD,SAAK,UAAU,oBAGnBA,QAAI,UAAU,iBACZA,EAAC,GACC,KAAO,WAAU2hB,UACjB,MAAO0jB,EAAQ1jB,GAAK6B,UAGxBxjB,QAAI,UAAU,yBACX4vD,EAAYvtD,SAAWmhB,EAAQ,GAC9BxjB,YACE,UAAU,MACV,KAAK,SACL,QAAS,IAAMqwD,EAAa7sC,EAAQ,YAEpCxjB,EAAC,aAhCA2hB,SA0CnB3hB,EAACwvD,IAA2B,YAKlC,OAAepsB,qBAAWotB,IC7N1B,KAAMptD,IAAS,CACbI,UAAWvE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IAUXwxD,GAAIxxD;AAAAA;AAAAA;AAAAA;AAAAA,IAKJyxD,GAAIzxD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IAeJ2iB,MAAO3iB;AAAAA;AAAAA;AAAAA,KAMT,YAAsB,CACpB6F,OAAO,GACP6rD,WACAC,aAAa,MACO,MACd19B,GAAM/qB,iBAAuB,uCACnB,IAAM,UAChB+qB,EAAIzpB,QAAS,MACTonD,GAAgB39B,KAAIzpB,UAAJypB,cAAajqB,wBAC/B4nD,EAAcpwC,MAAQjb,OAAOgxB,eAC3B/sB,QAAQnC,MAAMmZ,MAAS,GACzBowC,EAAcpwC,MAAQjb,OAAOgxB,kBAIlC,IAEDx2B,SAAK,IAAKoD,GAAOI,UAAW,eAC1BxD,QAAI,IAAKoD,GAAOqtD,YACb3rD,EAAK3C,IAAI,CAACvB,EAAM4iB,IACfxjB,QAAI,IAAKoD,GAAOstD,GAAmB,QAAS,IAAMC,EAASntC,YACxDotC,kBAAahwD,KAASZ,UAAM,IAAKoD,GAAOwe,eAAQhhB,EAAKghB,SAD/BhhB,EAAK+gB,UCxDxC,KAAMve,IAAS,CACbI,UAAWvE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IASXqJ,OAAQrJ;AAAAA;AAAAA,KAwBV,YAAwBQ,EAA4B,MAC5C,CACJqF,OACAgsD,cACAH,WACAI,sBAAuBnwD,GAASA,EAAKghB,MACrCgvC,aAAa,KACbtpD,SACE7H,EACE,CAACuxD,EAAMC,GAAWtvD,mBAAS,IAC3B,CAACf,EAAMswD,GAAWvvD,qBAElBwvD,EAAOhpD,iBAAuB,0BAE1B,IAAM,IACV2oD,EAAa,MACTlwD,GAAOkE,EAAKksB,KAAMhO,GAAMA,EAAErB,MAAQmvC,IAAgB,OAChDlwD,KAET,CAACkwD,EAAahsD,wBAEP,IAAM,aACS,GACb,kBAEHuzB,iBAAiB,QAASspB,GAC1B,IAAMn8C,OAAO+yB,oBAAoB,QAASopB,IAChD,SAEGyP,GAAgBvvD,sBACnB2hB,GAAU,GACD1e,EAAK0e,eACF1e,EAAK0e,KAElB,CAAC1e,EAAM6rD,UAIP5wD,UAAK,UAAU,WAAW,IAAKoxD,EAAM,IAAK,CAAC/tD,GAAOI,UAAW8D,aAC3DtH,YACE,IAAKoD,GAAOkF,OACZ,KAAK,SACL,QAAUD,GAAU,GACT2oD,GAAS,CAACA,KACbzoD,4BAGP,AAAC3H,EAAyBmwD,EAAoBnwD,GAAtCZ,EAAC,SAEXgxD,GACChxD,EAAC,IACC,OACA,SAAUoxD,EACV,kBCjFV,KAAMhuD,IAAUA,GAAWnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IAkCvBmE;AAAAA,EAGEiuD,GAAwD,CAC5D,CAAE1vC,IAAK2vC,GAAoBC,SAAU3vC,MAAO,YAC5C,CAAED,IAAK2vC,GAAoBE,SAAU5vC,MAAO,YAC5C,CAAED,IAAK2vC,GAAoBG,IAAK7vC,MAAO,iBACvC,CAAED,IAAK2vC,GAAoBI,IAAK9vC,MAAO,kBAazC,YAAsB,CACpB+vC,YACAC,aACA9sD,OACA+sD,kBACoB,MACdhqD,GAAWgpB,IAEXkU,EAAgBljC,sBAAY,IAAM,GAC7B,CAAE2G,KAAMw8B,GAA8BC,OAAQ0sB,KACtD,CAACA,EAAW9pD,UAGb9H,UAAK,IAAKqD,aACRrD,SAAK,UAAU,sBACZ+E,EAAK0D,OAASwnD,GAAc8B,QAC3B9xD,SAAK,UAAU,8BACbA,EAAC,IACC,KAAMqxD,GACN,oBAAsBzwD,GAASA,EAAKghB,MAAMvc,UAAU,EAAG,GACvD,YAAaP,EAAKyrD,SAClB,SAAUsB,MAIhB9xD,SAAK,UAAU,4BACbA,UAAM,UAAU,sBAAU4xD,KAC1B3xD,UAAM,UAAU,iBAAS4xD,UAG7B5xD,EAAC,IAAa,SAAU+kC,OC7E9B,YAAsC,CACpCjgC,OACA6gB,aACoC,MAC9B0a,GAASlS,GAAyBxI,GAElCosC,EAAiBpyD,kBAAQ,IAAM,MAC7BuvD,GAAO5gD,EAAUxJ,EAAM,OAAQ,UAC9BwqD,IAAKJ,EAAMpqD,IACjB,CAACA,IAEE+C,EAAWgpB,IAEXmhC,EAAsBnwD,sBAC1B,CAACijC,EAAWyrB,IAAa,GACd,CACP/nD,KAAMypD,GACNpqC,QAAS,CACPid,YACAyrB,eAIN,CAAC1oD,IAGGm5C,EAAerhD,kBAAQ,IAAM,MAC3B0lC,GAA0B,CAC9B,CACEuR,OAAQ,IACRpzB,MAAO,EACPwzB,KAAM,CAAC,CAAEnB,SAAUA,EAAIryB,MAAQ,eAIdqyB,EAAK/Q,EAAWyrB,EAAU,MACvC/lC,GAAQqrB,EAAIxoC,SAASy3B,GAAWyrB,SAEpC/lC,aAAiB9lB,iBACT,MAAO,CAAEb,MAAO,gBAAU2mB,EAAM2K,UAEtCkL,EAAO7V,cAKU0nC,EAAYptB,EAAW,UAEzC,IACC,UAAWA,EACX,KAAMotB,EACN,eAAiBtxD,GAASoxD,EAAoBltB,EAAWlkC,EAAK+gB,KAC9D,WACEuwC,EAAWxlC,MAAQwlC,EAAWtlC,GACzB,GAAEyT,EAAO6xB,EAAWxlC,WAAW2T,EAAO6xB,EAAWtlC,MAClD,WAMR9nB,GAAKugC,gBACA7jB,KAAK1c,EAAKugC,SAAStd,QAAS+c,GAAc,MACzC,CAAEyrB,WAAU/sC,MAAO2uC,GAAgBrtD,EAAKugC,QAAQP,MACtCO,EAAS,CACvB7hB,MAAO2uC,EAAc,EACrBnb,KAAM,CAAC,CAAEnB,SAAUuc,EAAYvc,EAAK/Q,EAAWyrB,GAC/C3Z,OAAQ,IAAMyb,EAAcvtD,EAAKugC,QAAQP,GAAYA,GACrDliC,GAAIkiC,MAIHO,EAAQ3D,KAAK,CAACyf,EAASC,IAAYD,EAAQ39B,MAAQ49B,EAAQ59B,QACjE,CAACwuC,EAAqBltD,EAAKugC,QAAShF,UAEhCv7B,GAAKgiB,QAAUhiB,EAAKgiB,OAAOzkB,OAAS,IACxCyb,gCACE2hC,IAAW,KAAM36C,EAAKgiB,OAAQ,QAASk6B,aAEtC,MAAO,CACLn+C,MAAO,OACP3C,QAAS,QAGX,wBAAyB,CAAEmoD,OAAQ0J,UAItC,OAIL,OAAe9wD,eAAKqxD,IC/EpB,YAA2C,CACzC3sC,YACAyf,mBACyC,MACnC,CAACqf,EAAWC,GAAiB/iD,mBAAS,IACtCgjD,EAAax8C,mBACb0sB,EAAQwX,KACR/U,EAAQ8U,KACRvkC,EAAWgpB,IAEX/rB,EAAOnF,kBAAa,IAAM,MACxB,CACJmnB,SACA3I,QAAS,CAAEknB,UAAS6pB,SAClB9pB,EAAgBzf,IAAc,CAChCmB,OAAQ,GACR3I,QAAS,CAAEknB,QAAS,GAAI6pB,KAAM,aAEzB,CAAEpoC,OAAQvF,OAAOuF,OAAOA,GAASue,UAAS6pB,SAChD,CAACvpC,EAAWyf,IAET8f,EAAuBrjD,sBAAY,IAAM,GAC/B,CAAC4iD,IACd,CAACA,IAEEU,EAAqBtjD,sBAAY,IAAM,GAChC4H,QAAQy6C,eAClB,IAEGqO,EAAmB1wD,sBAAY,IAAM,GAC3B,KACb,IAEG2wD,EAAqB3wD,sBAAau7B,GAAS,IACxCyP,KAAK,uBAAwBzP,IACnC,IACGq1B,EAAmB5wD,sBAAY,IAAM,GAChC,CAAE2G,KAAMo+C,OACXnhC,KAAKzlB,EAAC,IAAkB,QAAS2lB,IAAe,CACpDqS,iBAAkB,GAClBl2B,SAAUyxB,GAAUE,WACpB5wB,MAAO,OAER,CAAC8iB,EAAW2R,EAAOzvB,IAEhB6qD,EAAyB7wD,sBAAY,IAAM,WAC7B,MACViD,GAAO6tD,GAAgBvtB,EAAiBzf,GAC9B,KAAMmlC,IAAoBhmD,KAElC6wB,QAAQ,8BAER7xB,MAAM,iCAGf,CAAC6hB,EAAWkP,EAAOuQ,UAGpBrlC,UACE,IAAK,CACHq0C,GACAqQ,GACExlD;AAAAA;AAAAA;AAAAA;AAAAA,uBAOH,CAACwlD,GACA1kD,EAACm0C,IACC,cAAc,mBACd,qBACA,UAAW,GACX,eAAgBgR,YAEhBllD,EAACq0C,IACC,WAAW,oBAEX,QAASqe,WAET1yD,EAAC,SAEHA,EAACq0C,IACC,WAAW,sBAEX,QAASoe,WAETzyD,EAAC4yD,IAAc,MAAO,CAAElvD,SAAU,YAEpC1D,EAACwzC,IACC,WAAW,oBACX,eAAe,QACf,QAASgf,WAETxyD,EAAC,YAINykD,GACCzkD,EAACi7C,IACC,OAAQkK,EACR,QAASD,IAGbllD,SAAK,UAAU,2BACZ,AAACykD,EAGAzkD,EAACwwD,IACC,OACA,YAAa+B,EACb,IAAK5N,IALP3kD,EAACsyD,IAA6B,OAAY,mBAapD,KAAMO,IAAuC5xD,eAC3C6xD,iBAGqD,MAC/C,CAAEntC,YAAWyf,kBAAiB7hB,gBAAiB/F,UAEhDmI,GAKH3lB,EAAC,IACO2lB,YAAWyf,kBAAiB7hB,iBAL7BvjB,YC9IX,KAAMoD,IAGF,CACFI,UAAW,CACTtD,QAAS,GACT8C,gBAAiB,UACjBhB,OAAQ,OACR4zC,UAAW,QAEbyN,eAAgB,CACdnjD,QAAS,MACTuD,aAAc,MACd8c,OAAQ,WACRvd,gBAAiB,SAEnB6yC,IAAK,CACH51C,QAAS,OACTsgB,OAAQ,WAEVqtB,OAAQ,CACNrD,aAAc,oBACd+Y,cAAe,MACfn/C,WAAY,OACZN,MAAO,WAET0+C,WAAY,CACVjT,KAAM,EACN5rC,SAAU,OACVS,WAAY,OACZN,MAAO,WAETwrC,MAAO,CACLxsC,MAAO,MACPc,UAAW,WAIT4/C,GAKD,CACH,CACE3gD,GAAI,EACJgf,MAAO,gBACP4hC,gBAAiB,iBACjBC,iBAAkB,oBAEpB,CACE7gD,GAAI,EACJgf,MAAO,gBACP4hC,gBAAiB,gBACjBC,iBAAkB,mBAEpB,CACE7gD,GAAI,EACJgf,MAAO,iBACP4hC,gBAAiB,eACjBC,iBAAkB,kBAEpB,CACE7gD,GAAI,EACJgf,MAAO,gBACP4hC,gBAAiB,cACjBC,iBAAkB,iBAEpB,CACE7gD,GAAI,EACJgf,MAAO,aACP4hC,gBAAiB,gBACjBC,iBAAkB,mBAEpB,CACE7gD,GAAI,EACJgf,MAAO,cACP4hC,gBAAiB,gBACjBC,iBAAkB,oBAStB,YAA+B,CAC7Bj9B,UACApE,cACAshC,YAC6B,MACvB7uB,GAAQwX,KACRgO,EAAUlyC,iBAAY,MAEtBw7C,EAAe9hD,sBAAY,IAAM,IACjC2kB,EAAS,MACLu9B,GAAgBv9B,EAAQ/E,OAAO,CAACC,EAAKsiC,OACrCA,GAAgB+O,GACbrxC,GACN,IACGsxC,EAAmBlP,GACvB1hC,EAAY3Y,QACX,6BAEKA,QAAQmxC,UACdoY,GAAsCjP,KAGzC,CAACv9B,EAASpE,wBAEH,IAAM,MAEb,CAACuhC,SAEExQ,GAActxC,sBACjBilB,GAAW,GACEjf,SAAS,CACnBW,KAAM,yBACNqf,QAAS,CAAElG,IAAK,QAAS6I,MAAO1D,OAE5B6O,QAAQ,yCAEhB,CAACd,EAAOzS,yCAIRshC,EACA,MACEQ,YAAa,IAAM,GACTz6C,QAAQsoC,gBAGpB,aAIK,MAAO3uC,GAAOI,qBAChB,IAAW,SAAU2vC,EAAa,IAAKkH,WACrC7zB,iBAASrkB,IAAK6hD,YACW,MAAO5gD,GAAOigD,2BACnC,IAAe,MAAOjgD,GAAOwqC,OAAQ,MAAOoW,IAC5CT,GAAaphD,IAAKgiD,KAChBtB,IAEC,MAAOsB,EAAMviC,MACb,oBAAsB,GAAEoiC,KAAgBG,EAAMX,kBAC9C,qBAAuB,GAAEQ,KAAgBG,EAAMV,mBAC/C,WAAYU,EAAMV,mBAAqB,kBAJlCU,EAAMvhD,OAJPohD,QAkBpB,KAAMiP,IAA2BhyD,eAAKiyD,IAGtC,YAA0BzzD,EAAOyzB,EAAU,MACnC1M,GAAU89B,KACVliC,EAAcf,cAEjB,IAAyB,SAAU6R,EAAW1M,UAASpE,gBAI5D,OAAeghB,qBAAW+vB,IC/J1B,YAAoB,CAAExtC,YAAWvD,cAAatd,OAAMmf,QAAyB,MACrEpc,GAAWgpB,IACXwP,EAASlS,GAAyBlK,EAAKuC,SAEvC4sC,EAAoBvxD,sBACxB,CAACxB,EAAGw1C,IAAQ,GACR5qB,mBACA1iB,uBACI5F,GAASkzC,EAAIxoC,WACV,CACP7E,KAAM6qD,GACNvuD,KAAM,CAAElC,GAAID,EAAOC,GAAI+rB,OAAQhsB,EAAOgsB,WAG1C,CAAC9mB,IAGGmrD,EAAmBrzD,kBACvB,IACE8/B,GACErd,EAAY3Y,QACX,4BAA2Bkc,KAC5BotC,IAEJ,CAACptC,EAAWvD,IAGRkxC,EAA0BzxD,sBAC9B,CAACwG,EAAOwtC,IAAQ,MACRpV,GAAa8yB,WAAWlrD,EAAMq2B,OAAOlU,OAAS+oC,WAAW1d,EAAIrrB,SAC1D,CAAEhiB,KAAMg4B,GAAgBC,gBAEnC,CAAC54B,IAEG44C,EAAmD9gD,kBACvD,IAAM,CACJ,CACE+gD,SAAU,iBACVl9B,MAAO,EACPozB,OAAQ,IACRI,KAAM,CAAC,CAAEnB,SAAUA,EAAIryB,MAAQ,EAC/Blc,MAAO,CAAEzE,MAAO,KAAMk0C,SAAU,OAAQD,SAAU,SAEpD,CACE4J,SAAU,gBACVl9B,MAAO,EACPozB,OAAQ,QACRwJ,SAAWvK,GACT8K,GAAa9K,EAAIlnB,OAAQqkC,EAAiBQ,kBAE9C,CACE9S,SAAU,eACVl9B,MAAO,EACPozB,OAAQ,eACRwJ,SAAWvK,GAAQxV,EAAOwV,EAAIrrB,OAC9BwsB,KAAM,CAAC,CAAEnB,WACN+F,IACC,MAAOvb,EAAOwV,EAAIxoC,SAASmd,OAC3B,OAASniB,GAAUirD,EAAwBjrD,EAAOwtC,EAAIxoC,UACtD,KAAK,YAIX,CACEqzC,SAAU,cACVl9B,MAAO,EACPozB,OAAQ,cACRwJ,SAAWvK,GACT8K,GAAa9K,EAAI4d,QAAST,EAAiBU,gBAE/C,CACEhT,SAAU,gBACVl9B,MAAO,EACPozB,OAAQ,YACRtvC,MAAO,CAAEyvC,SAAU,QACnBqJ,SAAWvK,GACT8K,GAAa9K,EAAI8d,UAAWX,EAAiBY,kBAEjD,CACElT,SAAU,gBACVl9B,MAAO,EACPozB,OAAQ,aACRwJ,SAAWvK,GACT8K,GAAa9K,EAAIge,UAAWb,EAAiBc,mBAGnD,CAACzzB,EAAQ2yB,EAAkBM,IAGvBnT,EAAiCxgD,kBACrC,IAAM,CACJ,CACE6jB,MAAO,GACPozB,OAAQ,GACRtvC,MAAO,CACLzE,MAAO,KACPk0C,SAAU,OACVD,SAAU,QAEZl0C,GAAI,gBACJo0C,KAAM,CAAC,CAAEnB,qBAEL,KAAK,SACL,UAAU,gBACV,QAAUx1C,GAAM+yD,EAAkB/yD,EAAGw1C,cAEpC,WAKT,CAACud,IAGGpS,EAAerhD,kBAAQ,IAAM,IAC7B0lC,GAAU,CAAC,GAAG8a,YACPc,KAAOR,GAAS,MACUQ,KAA3BP,aAA2BO,EAAdC,IAAcD,EAAdC,CAAbR,aACJsS,EAAiBtS,OACHrb,EAAS6b,SAItB7b,GAAQ3D,KAAK,CAACyf,EAASC,IAAYD,EAAQ39B,MAAQ49B,EAAQ59B,QACjE,CAACi9B,EAASN,EAAgB6S,UAEtBluD,IAAQA,EAAKzC,OAAS,IAC1Bo9C,IACC,OACA,QAASuB,EACT,iBAAkB,GAClB,2BAGD,OAIL,OAAe//C,eAAK8yD,IC5IpB,YAAyB,CACvB9nC,QACAhI,OACAjC,UACA2D,YACAvD,eACuB,YACjB,CAACyxB,EAAgB2Q,GAAqB7iD,mBAAS,IAC/C,CAAC8iD,EAAWC,GAAiB/iD,mBAAS,IACtC0+B,EAASlS,GAAyBlK,EAAKuC,SAEvC3e,EAAWgpB,IACXyG,EAAQ8U,KAERuY,EAAax8C,mBAEby8C,EAAa/iD,sBAAY,IAAM,GAC1B,CAAE2G,KAAM6qD,GAAsBvuD,KAAM,QAC5C,CAAC+C,IAEEg9C,EAAkBhjD,sBAAY,IAAM,GAClCq2B,kBAAkB,CACtB/C,QAAS,6CACT6B,QAAS,CAAC,CAAEI,KAAM,MAAOF,QAAS0tB,GAAc,CAAExtB,KAAM,UAEzD,CAACE,EAAOstB,IAELM,EAAuBrjD,sBAAY,IAAM,GAC/B,CAAC4iD,IACd,CAACA,IAEEU,EAAqBtjD,sBAAY,IAAM,GAChC4H,QAAQy6C,gBACL,KACb,IAEGkB,EAAiBvjD,sBAAY,IAAM,GACrB,CAACgyC,IAClB,CAACA,IAEEmgB,EAAgBr0D,kBAAQ,IAAM,YACf6qB,EAAO,OAGtBA,GAAQg7B,KAAUxjC,EAAQ,GAAKwjC,KAC/Bh7B,EAAQg7B,KAAUxjC,EAAQ,GAAKwjC,UAG/Bv5B,kBAAOnF,QAKFmtC,AAJQpgB,GACX5nB,EAAMnF,OAAO9C,OAAQkI,GAASw5B,EAAUx5B,EAAK7iB,IAC7C4iB,EAAMnF,QAGP3kB,IAAK+pB,GAAS,MACP1B,GAAQyE,OAAOoR,EAAOnU,EAAK7iB,UAC1B,CACLmhB,QACAipC,QAASxvC,kBAAMqX,iBACXrM,OAAOzE,GAASvG,EAAKqX,gBACrB,GACJ14B,GAAIspB,EAAKtpB,GACT+wD,UAAWznC,EAAK5iB,EAChBuqD,UAAW3nC,EAAKrpB,MAAQqpB,EAAKrpB,MAAQ,GACrCy6C,wBAAyBoI,EAAUl7B,MAGtCkX,KAAK,CAACqd,EAAMmV,IAASnV,EAAKv0B,MAAQ0pC,EAAK1pC,OAGrC,IACN,CAACqpB,EAAgBxT,EAAQpc,EAAMgI,EAAOjK,UAGvCjiB,UACE,IAAK,CACHq0C,GACAqQ,GACExlD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,uBAUH,CAACwlD,GACAzkD,EAACk0C,IACC,QAASjoB,oBAAOnF,SAAPmF,cAAe5pB,OACxB,SAAUwiD,EACV,cAAc,mBACd,SAAUO,EACV,cACEvR,EAAiB,iBAAmB,yBAEtC,iBACA,gBAAiBmgB,EAAc3xD,OAC/B,qBACA,eAAgB6iD,IAGnBT,GACCzkD,EAACi7C,IACC,OAAQkK,EACR,QAASD,IAGbllD,SAAK,UAAU,2BACZ,AAACykD,EAQAzkD,EAACmzD,IAAiB,IAAKxO,IAPvB3kD,EAAC+zD,IACC,KAAMC,EACN,YACA,cACA,cAUZ,KAAMG,IAAqBlzD,eAAKmzD,IAE1B5mC,GAAY,CAAEvB,MAAO,KAAMhI,KAAM,iBAEF,MAC7B,CAAEjC,UAAS2D,aAAcnI,IACzB,CAAEyO,QAAOhI,QAASwJ,GAAYD,IAC9BpL,EAAcf,WAGlBrhB,GAAC,IAAyBisB,QAAOhI,OAAMjC,UAAS2D,YAAWvD,gBC5J/D,KAAMhf,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAkCf,YAA4B,CAC1Bm4B,OACAlC,UACAm/B,eAC0B,OAExBt0D,UAAK,IAAKqD,aACRrD,SAAK,UAAU,wCACbC,YAAQ,KAAK,SAAS,QAAS,IAAMq0D,EAAYj9B,YAC/Cp3B,EAAC,SAGHA,EAACq6B,IAAY,QAASnF,OAExBl1B,SACE,UAAU,iBAEV,wBAAyB,CAAEqoD,OAAQjxB,QC3B3C,KAAM9vB,IAAQrI;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAmBd,YAAsB,CACpBynB,SACAzC,OACAqwC,WACAC,oBACAxgB,iBACAygB,iBACAC,gBACA7rB,wBACAzE,aACAyF,uBACC,YACK/hC,GAAWgpB,IACXyG,EAAQ8U,KACRvX,EAAQwX,KACRjqB,EAAcf,KACdwI,EAAiBX,KAEjB87B,EAAa12C,EAAUoY,EAAQ,cAAe,MAE9CguC,EAAyB7yD,sBAC5B2oB,GAAU,GACA,CAAEhiB,KAAMmsD,GAAkBnqC,YAC7B8K,SAER,CAACztB,EAAUyvB,IAGPs9B,EAA2B/yD,sBAAY,IAAM,GAC3C4jB,KACJzlB,EAAC,IACC,QAAS,IAAMs3B,EAAMhC,QACrB,OAAQo/B,EACR,OACE1P,EACK,gCAA+B/1B,OAAO+1B,GAAY71B,QAAQ,MAC3D,qBAEN,WAAYzI,iBAAQvI,YAGvB,CAACu2C,EAAwB1P,EAAY1tB,EAAO5Q,iBAAQvI,UAEjD02C,EAAoBhzD,sBAAY,IAAM,MAEzC,CAACyyD,IAEEQ,EAA4BjzD,sBAAY,IAAM,GAC5Cq2B,kBAAkB,CACtB/C,QAAS,iDACT6B,QAAS,CAAC,CAAEI,KAAM,MAAOF,QAAS29B,GAAqB,CAAEz9B,KAAM,UAEhE,CAACy9B,EAAmBv9B,IAEjButB,EAAkBhjD,sBAAY,IAAM,GAClCq2B,kBAAkB,CACtB/C,QAAS,4CACT6B,QAAS,CACP,CACEI,KAAM,MACNF,QAAS,IAAM,GACJ,CACP1uB,KAAMusD,GACNltC,QAAS,CAAE/iB,KAAM,CAAE+kB,uBAIzB,CAAEuN,KAAM,UAGX,CAACvN,EAAgBhiB,EAAUyvB,IAExB09B,EAAiCnzD,sBAAY,IAAM,GAC9C,CAAE2G,KAAMysD,MAChB,CAACptD,IAEEqtD,EAAsBrzD,sBAAY,IAAM,GACnC,CAAE2G,KAAM2sD,MAChB,CAACttD,IAEEutD,EAAmBvzD,sBAAY,IAAM,GAChC,CAAE2G,KAAM6sD,MAChB,CAACxtD,IAEEwqC,EAAyBxwC,sBAC5B2oB,GAAU,WAES,KAAM8qC,IAAoB9qC,KAElCmL,QAAQ,8BAER7xB,MAAM,gCAIlB,CAAC+wB,IAGG0gC,EAAoB1zD,sBAAY,IAAM,MACpC,CAAEy5B,gBAAiBk6B,EAAmBhvC,WAAYvC,EAClDoc,EAAS/xB,EACb8T,EAAY3Y,QACX,2BAA0B+c,EAAQxgB,kBAE/ByvD,EAAiBC,GAAoBr1B,EAAOs1B,KAC5CC,EAAaF,GAAoBr1B,EAAOw1B,IAExC16B,EAAS26B,GAAYpvC,EAAOI,OAAQ,CACxCN,UACAivC,iBACAG,aACAJ,wBAEI/vC,KACJzlB,EAAC,IACC,KAAMm7B,EACN,YAAakX,EACb,QAAS,IAAM/a,EAAMhC,UAEvB,KAED,CAACrR,EAAMqT,EAAOlV,EAAasE,EAAOI,OAAQurB,IAEvC0jB,EAA+Bl0D,sBAClCu7B,GAAS,GACC,CACP50B,KAAMwtD,GACNnuC,QAASuV,KAGb,CAACv1B,UAID7H,UAAK,IAAKsH,YACRvH,EAACm0C,IACC,QAASxtB,oBAAQI,SAARJ,cAAgBrkB,OACzB,SAAUwiD,EACV,cAAc,oBACd,SAAU0P,EACV,cACEC,EAAiB,kBAAoB,0BAEvC,eAAgBA,EAChB,gBAAiBC,EACjB,qBACA,2BAEAz0D,EAACq0C,IACC,WAAW,6BACX,eAAe,QACf,QAASkhB,EACT,UAAU,wCAEVv1D,EAAC,SAEHA,EAACq0C,IACC,WACE2Q,EACK,sBAAqB/1B,OAAO+1B,GAAY71B,QAAQ,MACjD,oBAEN,eAAe,QACf,QAASylC,EACT,UAAU,oBAEV50D,EAAC2lD,SAEH3lD,EAACq0C,IACC,WAAW,yBACX,eAAe,QACf,QAASygB,EACT,SAAU,CAACpuC,GAAU,CAACA,EAAOI,QAAUJ,EAAOI,OAAOzkB,SAAW,EAChE,UAAU,oBAEVrC,EAAC,SAEHA,EAACwzC,IACC,WACE5K,EACI,sCACA,sCAEN,eAAe,QACf,QAASosB,EACT,SAAU,CAACtuC,GAAU,CAACA,EAAOI,QAAUJ,EAAOI,OAAOzkB,SAAW,WAEhErC,EAAC,IAAU,MAAO,CAAE2gB,cAAe,OAAQjd,SAAU,YAEvD1D,EAACwzC,IACC,WAAYrP,EAAa,eAAiB,eAC1C,eAAe,QACf,QAASixB,EACT,SAAU,CAAC1uC,GAAU,CAACA,EAAOI,QAAUJ,EAAOI,OAAOzkB,SAAW,WAEhErC,EAAC,IAAW,MAAO,CAAE2gB,cAAe,OAAQjd,SAAU,YAExD1D,EAACwzC,IACC,WAAY5J,EAAsB,iBAAmB,iBACrD,eAAe,QACf,QAASsrB,EACT,aAActrB,EACd,SAAU,CAACljB,GAAU,CAACA,EAAOI,QAAUJ,EAAOI,OAAOzkB,SAAW,WAEhErC,EAACi2D,IACC,MAAO,CAAEt1C,cAAe,OAAQjd,SAAU,YAI9C1D,EAACwzC,IACC,UAAU,OACV,WAAW,sBACX,eAAe,QACf,QAASuiB,WAET/1D,EAAC,cCnPX,KAAMoD,IAQF,CACFI,UAAW,CACTtD,QAAS,GACT8C,gBAAiB,UACjBhB,OAAQ,OACR4zC,UAAW,QAEbyN,eAAgB,CACdnjD,QAAS,MACTuD,aAAc,MACd8c,OAAQ,WACRvd,gBAAiB,SAEnB6yC,IAAK,CACH51C,QAAS,OACTsgB,OAAQ,WAEVqtB,OAAQ,CACNrD,aAAc,oBACd+Y,cAAe,MACfn/C,WAAY,OACZN,MAAO,WAET0+C,WAAY,CACVjT,KAAM,GAGRJ,aAAc,CACZrsC,MAAO,QACPysC,KAAM,IACN7rC,aAAc,QAIZ8/C,GAAe,CACnB,CACE3gD,GAAI,EACJgf,MAAO,SACP4hC,gBAAiB,WACjBC,iBAAkB,cAEpB,CACE7gD,GAAI,EACJgf,MAAO,OACP4hC,gBAAiB,SACjBC,iBAAkB,YAEpB,CACE7gD,GAAI,EACJgf,MAAO,aACP4hC,gBAAiB,eACjBC,iBAAkB,kBAEpB,CACE7gD,GAAI,EACJgf,MAAO,aACP4hC,gBAAiB,eACjBC,iBAAkB,mBAUtB,YAAgC,CAC9Bj9B,UACApE,cACAshC,YAC8B,MACxB7uB,GAAQwX,KACRgO,EAAUlyC,mBAEVw7C,EAAe9hD,sBAAY,IAAM,IACjC2kB,EAAS,MACLu9B,GAAgBv9B,EAAQ/E,OAAO,CAACC,EAAKsiC,OACrCA,GAAgBzf,GAAsByf,GACnCtiC,GACN,IACGw0C,EAAoBpS,GACxB1hC,EAAY3Y,QACX,8BAEKA,QAAQmxC,UACdsb,GAAwCnS,KAG3C,CAACv9B,EAASpE,wBAEH,IAAM,MAEb,CAACuhC,SAEExQ,GAActxC,sBACjBilB,GAAW,GACEjf,SAAS,CACnBW,KAAM,yBACNqf,QAAS,CAAElG,IAAK,SAAU6I,MAAO1D,OAE7B6O,QAAQ,0CAEhB,CAACd,EAAOzS,yCAIRshC,EACA,MACEQ,YAAa,IAAM,GACTz6C,QAAQsoC,gBAGpB,aAIK,MAAO3uC,GAAOI,qBAChB,IAAW,SAAU2vC,EAAa,IAAKkH,WACrC7zB,iBAASrkB,IAAK6hD,YACW,MAAO5gD,GAAOigD,2BACnC,IAAe,MAAOjgD,GAAOwqC,OAAQ,MAAOoW,IAC5CT,GAAaphD,IAAKgiD,KAChBtB,IAEC,MAAOsB,EAAMviC,MACb,oBAAsB,GAAEoiC,KAAgBG,EAAMX,kBAC9C,qBAAuB,GAAEQ,KAAgBG,EAAMV,oBAH1CU,EAAMvhD,OAMd,GACC,MAAM,2BACN,MAAO,CAAEgf,MAAOxe,GAAOm/C,WAAYuD,QAAS1iD,GAAO8rC,yBAElD,GACC,KAAO,GAAE8U,oBACT,KAAK,eAhBDA,QA0BpB,KAAMmS,IAA4Bl1D,eAAKm1D,IAGvC,YAA2Bh0D,EAAM8wB,EAAU,MACnC1M,GAAU89B,KAEVliC,EAAcf,cAEjB,IACC,SAAU6R,EAER9Q,cACAoE,YAMR,OAAe4c,qBAAWizB,gBCnLa1O,EAAO2O,EAAS,KAAM,MACrD,CAACC,EAAYC,GAAiB70D,mBAA4B20D,GAC1DG,EAAc92D,kBAAQ,IAAM,MAC1B+2D,GAAgB/O,EAAMzsB,cACxBq7B,KAAe,QACH70B,KAAK,CAACzM,EAAGqW,IACjBirB,EAAWre,YAAcye,MAEzBroD,EAAU2mB,EAAGshC,EAAW50C,IAAK,GAAKrT,EAAUg9B,EAAGirB,EAAW50C,IAAK,GAExD40C,EAAWre,YAAcye,OAEhCroD,EAAUg9B,EAAGirB,EAAW50C,IAAK,GAAKrT,EAAU2mB,EAAGshC,EAAW50C,IAAK,GAG5D,GAGJ+0C,GACN,CAAC/O,EAAO4O,IAELK,EAAc/0D,sBACjBwG,GAAU,YACHsZ,GAAMtZ,KAAMW,gBAANX,cAAqBzF,MAC7Bs1C,GAAYye,SACZh1C,GAAO40C,GAAcA,EAAW50C,MAAQA,SAClC40C,EAAWre,eACZye,QACSA,iBAGTA,SACSA,2BAIAA,cAKJ,CAAEh1C,MAAKu2B,eAEvB,CAACqe,IAGG5gB,EAAe9zC,sBACnB,AAACg1D,GAA0D,MACnDC,GAAiB,CAAE15B,KAAM,KAAM25B,QAAS,QAE1C,CAACR,GAAcA,EAAW50C,MAAQk1C,QAC7BC,UAEDP,EAAWre,eACZye,aACI,CAAEv5B,KAAM,GAAM25B,QAAS,eAE3BJ,YACI,CAAEv5B,KAAM,GAAO25B,QAAS,yBAGxBD,KAGb,CAACP,UAGI,CAAE5O,MAAO8O,EAAa9gB,eAAcqhB,OAAQ,CAAEtvD,QAASkvD,gBCJhC,EAAa,EAAK,OACzCtoD,GAAU,EAAa,EAAK,IC7DrC,YAAwB,CACtB2oD,cACAzsC,QACA0sC,eACA72B,UACsB,wBAEZ42B,GAAiBC,aACtBC,GAAa3sC,EAAO6V,kBCnBI,EAAoC,CAApC,QAAE34B,YAAF,EAAcjI,IAAd,EAAcA,CAAZiI,qBAE5BoW,2CACS,KAAK,SAAS,WAAsBre,MCDlD,KAAM23D,IAAiB,AAAC33D,GAA+B,MAC/C,CAAE2uC,WAAW,IAAM,KAAMipB,mBAAmB,IAAS53D,EACrD,CAAEqnB,SAAQqqB,UAAWxC,gCAEjB,IAAM,CACV0oB,EACE91C,OAAOC,KAAK2vB,GAAQ9uC,SAAW,KACxBykB,KAGFA,IAEV,CAACA,EAAQuwC,EAAkBlmB,EAAQ/C,IAE/B,MCRHhrC,GAAS,CACbI,UAAWvE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IAMXq4D,UAAWr4D;AAAAA;AAAAA;AAAAA;AAAAA,IAKXs4D,SAAUt4D;AAAAA;AAAAA;AAAAA,IAKVu4D,gBAAiBv4D;AAAAA;AAAAA,IAGjB6jD,eAAgB7jD;AAAAA;AAAAA;AAAAA,IAIhBw4D,aAAcx4D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,KAyBhB,YACE,CAAE8wC,UAASD,SAAQrnB,SACnByK,EACA,MACM,CAAEpM,SAAQ4nB,iBAAkBC,KAC5B,CAAEhpB,aAAcnI,IAChB6iB,EAASlS,GAAyBxI,GAElCwtB,EAActxC,sBACjBsuC,GAAQ,MACDunB,GAAY,CAChBz7B,aAAc,IACd3U,KAAM,SACNC,MAAO0H,OAAOkhB,EAAIwnB,gBAClB37B,GAAI,CAAC,CAAEC,aAAc27B,GAAmB,KAAM17B,SAAU,MAEpD27B,EAAW/wC,EAAOG,QAAQiU,QAAQvP,OAAO+rC,KAEjC,UAAWG,KACX,YAAa1uC,OAAO0uC,EAASx1D,OAAS,KAEtD,CAACqsC,EAAe5nB,EAAOG,UAGnB6wC,EAAan4D,kBAAQ,IAClBm7C,KAAaoO,MAAM,CACxByO,eAAgB7c,KACbhK,KAAM,aAAa,GAAI,SAA4BtmB,EAAO,MACnD,CAAErnB,OAAM40D,eAAgB,QAC1BvtC,GAASA,EAAQ/B,EAAMiE,MAAQlC,EAAQ/B,EAAMmE,SACxC,QAGHorC,GAAgB,IACpBxtC,EAAQA,EAAM2E,QAAQ,GAAK,+BAEtB4oC,GAAY,CAAE50D,OAAMgyB,QAAS6iC,MAErCjd,aAEJ,CAACtyB,IAEEwvC,EAAuBp2D,sBAAY,IAAM,GACzC4H,QAAQsoC,cACX,CAAC7e,UAGFlzB,UAAK,IAAKoD,GAAOI,mBACfzD,mBACEC,OAAG,IAAKoD,GAAOm0D,wEAGfx3D,EAAC,IACC,MACA,iBAAkB+3D,EAClB,cAAe,CACbH,kBAAuBjrC,KAAOjE,EAAMmE,IAAM,GAE5C,SAAUumB,YAEVnzC,SAAK,IAAKoD,GAAO0/C,wBACf9iD,EAAC,GACC,KAAK,iBACL,KAAK,SACL,YAAc,kBACd,UACA,SACA,MAAO,CACLqvC,MAAO,CACLxsC,MAAO,QACPb,OAAQ,SAGZ,4BAA6B,OAGjCjC,OAAG,IAAKqD,GAAOk0D,yBACT,GAAEj3B,EAAO5X,EAAMiE,eAAe2T,EAAO5X,EAAMmE,kBAGjD5sB,EAAC,IAAO,IAAKoD,GAAOq0D,aAAc,QAASQ,WACzCj4D,EAAC,IAAO,MAAM,6BAQ1B,OAAeojC,qBAAW80B,ICnJ1B,KAAM5wD,IAAwC,CAC5C+nC,MAAO,CACLxsC,MAAO,OACPb,OAAQ,OACRmtC,YAAa,EACb5uB,OAAQ,UAUZ,YAAoB,CAAEsI,SAAQrF,QAAOusB,WAA4B,iBAExD,MAAO,CAAE9vC,QAAS,OAAQsD,WAAY,yDAExC,GACC,KAAO,WAAUigB,UACjB,KAAK,SACL,YAAa,SACb,gBACAlc,GACA,4BAA6B,wBAG5BuhB,EAAOmT,GACL75B,IAAKg2D,GAAcP,GAAmBO,EAAUl8B,eAChD2H,KAAK,SCnBhB,KAAMw0B,IAAsBn5D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAuE5B,YAAwB,CACtBsB,OACA+oB,SACAymB,UACAD,UACsB,MAChB,CAAEhpB,SAAQ4nB,iBAAkBC,KAE5B0pB,EAA4Bx2D,sBAChC,CAAC2oB,EAAOxf,IAAS,CACV88B,GAAoBtd,MACTxf,EAAM,KAGxB,CAAC0jC,IAGG4pB,EAAiB34D,kBAAQ,IACtB44D,GAAWp2D,IAAK45B,QACrBpa,IAAKoa,EAAUvR,OACZuR,IACHvR,MAAOuR,EAAUna,SAElB,UAGD5hB,YAAO,IAAKo4D,YACVr4D,qBACEA,kBACEC,uBACAA,kCACAA,4BACAA,iBAAK,QAENsO,EAAUwY,EAAS,WAAUA,EAAOnB,gBAAiB,IAAIxjB,IACxD,CAACg2D,EAAWn1C,IACVjjB,kBAIEC,iBAAKgjB,EAAI,IACThjB,iBACEA,EAAC,IACC,UAAU,YACV,KAAO,WAAU8mB,EAAOnB,gBAAgB3C,iBACxC,KAAMs1C,EACN,SAAW9tC,GACT6tC,EACE7tC,EACC,WAAU1D,EAAOnB,gBAAgB3C,kBAK1ChjB,iBACEA,EAAC,GACC,KAAO,WAAU8mB,EAAOnB,gBAAgB3C,aACxC,KAAK,SACL,YAAa,SACb,SAAU,CAAC8kB,GAAoBqwB,EAAUl8B,cACzC,UACA,SACA,MAAO,CACLoT,MAAO,CACLxsC,MAAO,OACPb,OAAQ,SAGZ,4BAA6B,OAGjChC,iBACEA,EAAC,IACC,UAAU,gBACV,QAAS,IAAM,GACNgjB,aAGThjB,EAAC,IAAc,UAAU,OAAO,MAAM,0BAxCpC,gBAAe8mB,EAAOnB,YAAY3C,MA8C9ChjB,WACAA,iBACEA,QAAI,QAAS,WACXA,EAAC,IACC,UAAU,aACV,QAAS,IACPO,EAAK,CACH07B,aAAc27B,GAAmB,KACjC17B,SAAU,cAIdl8B,EAAC,IAAO,MAAM,gCAS5B,OAAeiB,eAAKu3D,ICzLpB,KAAMC,IAAqBx5D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAgB3B,YAAuB,CAAE8wC,UAASD,UAA8B,MACxD,CAAEhpB,UAAW6nB,WAGjB3uC,UAAK,IAAKy4D,YACRz4D,EAAC,IACC,KAAO,WAAU8mB,EAAOnB,eACxB,OAAQ,CAAC,CAAEplB,OAAM+oB,YACftpB,kBACEA,EAACw4D,IACC,OACA,SACA,UACA,iBASd,OAAev3D,eAAKy3D,IC7BpB,KAAMC,IAAa15D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAmBb25D,GAAoB35D;AAAAA;AAAAA,EAGpB45D,GAAY55D;AAAAA;AAAAA;AAAAA;AAAAA,EAUlB,YAAqB,CAAEwpB,SAA2B,MAC1CqwC,GAAmB3wD,mBACnB,CAAC4wD,EAAaC,GAAkBr3D,mBAAwB,MAExD,CACJmlB,SACA4nB,gBACAyC,UASExC,KAEE,CAAEhpB,aAAcnI,IAChB,CAAEyG,QAAwBwJ,GAAY,CAAExJ,KAAM,KAC9Coc,EAASlS,GAAyBxI,uBAE9B,IAAM,YACEtd,EAAO,IACjB4b,kBAAMqX,kBAAmBy9B,KACvBjyC,EAAOnB,YAAc,iBACNlc,QAAQmxC,UAAU,EAChCme,MACQtwC,MAAM,GAAKpgB,EAAMogB,MAAM,IAAM,EAAIpgB,EAAMogB,MAAM,aAE/CswC,EAAYp5C,SAAS,WAE5Bo5C,KACOtwC,MAAM,GAAKpgB,EAAMogB,MAAM,IAAM,EAAIpgB,EAAMogB,MAAM,QAEjD,MACC+B,GAAQyE,OACZoR,EACE7/B,KAAKwhC,IAAI35B,EAAMogB,MAAM,GAAKpgB,EAAMogB,MAAM,IAAMxE,EAAKqX,oBAGvCy9B,EAAavuC,KAIhB,gBAGV4C,GAAG,WAAY0lB,GAEf,IAAM,IACJpI,IAAI,WAAYoI,KAExB,CAACimB,EAAarqB,EAAe5nB,EAAOnB,UAAW0a,EAAQpc,wBAEhD,IAAM,YACE5b,EAAO,CACjB0wD,IACEjyC,EAAOnB,YAAc,iBACNlc,QAAQmxC,UAAU,EAAGme,GAAc1wD,EAAMolC,OACjDsrB,EAAYp5C,SAAS,YAChBo5C,EAAa1wD,EAAMolC,SAGtB,gBAGVrgB,GAAG,aAAc0lB,GAEjB,IAAM,IACJpI,IAAI,aAAcoI,KAE1B,CAAChsB,EAAOnB,UAAWozC,EAAarqB,SAE7BuqB,GAAgBp3D,sBACnBwG,GAAU,GACMA,EAAMq2B,OAAO1zB,OAE9B,CAACguD,IAGGE,EAAkBr3D,sBACtB,CAAC,CAAEu1C,WAAY,GACC,YAAaA,IAE7B,CAAC1I,IAGGyqB,EAAqBt3D,sBACzB,CAAC,CAAEu1C,WAAY,MACPygB,GAAW/wC,EAAOG,QAAQjD,OAC9B,CAACkD,EAASlE,IAAMA,IAAMiM,OAAOmoB,MAEjB,UAAWygB,IAE3B,CAACnpB,EAAe5nB,EAAOG,8BAGf,IAAM,GAEZ,YACAH,EAAOG,QAAQ5kB,OAAS,KACZ4kB,QAAQ5kB,OAAS,GAAG3B,WAC5B,iBAEL,CAACguC,EAAe5nB,EAAOG,QAAQ5kB,cAE5B+2D,GAAoBv3D,sBACvBmhB,GACQmuB,qBAAQlqB,UAAWkqB,kBAAQlqB,QAAQjE,KAE5C,CAACmuB,IAGGkoB,EAAiB15D,kBAAQ,IAAM,MAC7B25D,GACJxyC,EAAOG,QAAQ5kB,OAAS,EACpBykB,EAAOG,QAAQ9kB,IAAI,CAAC0mB,EAAQ7F,IAC1BhjB,EAAC,IAGC,MAAQ,GAAEgjB,IACV,UAAWo2C,EAAkBp2C,GAAK41C,GAAoBC,GACtD,aACA,OAAQ,IACN74D,EAAC,IAAW,SAAgB,MAAOgjB,EAAG,QAASi2C,aAGjDj5D,EAAC04D,IAAc,QAASO,KARlB,aAAYj2C,MAWtB,GAEAu2C,EACJv5D,EAAC,IACC,SAAS,IACT,MAAM,eACN,UAAW,GAEX,UAAU,0BAEVA,EAACk4D,IACC,QAASe,EACT,QACA,IAAKH,KANH,sBAWDQ,GAAW3tC,OAAO4tC,IACxB,CAACN,EAAexwC,EAAO2wC,EAAmBtyC,EAAOG,UAE9CuyC,EACJx5D,OAAG,UAAU,4HAMTy5D,EACJz5D,OAAG,UAAU,6IAObD,oBACEC,SAAK,IAAK24D,YACPxnB,EAAOlqB,YACAA,QAAQyyC,WAAavoB,EAAOlqB,QAAQ0yC,aAC1C55D,mBACEC,OAAG,UAAU,qBACVmxC,EAAOlqB,QAAQyyC,WACdvoB,EAAOlqB,QAAQ0yC,YAAY,GAAGxkC,UAEjCgc,EAAOlqB,QAAQyyC,UAAYD,EAAoB,QAEhD3yC,EAAOnB,YAAc,eACvB8zC,EAEAD,IAGJx5D,EAACi4C,IACC,UAAWnxB,EAAOnB,UAClB,QAASuzC,EACT,SAAUC,WAETE,OAMT,OAAep4D,eAAK24D,IC9OpB,KAAMC,IAAgB,IACpBl6D,kBAAQ,IACCm6D,KAAa,MAAM,CACxB,QAASC,KACN,GACCD,KAAa,MAAM,CACjB,EAAGC,KACA,GACCD,KAAa,MAAM,CACjB,aAAcE,KAAa,WAC3B,SAAUC,KAAY,KACpB,aACA,GACA,SAAsB,EAAO,MACrB,CAAE,OAAM,eAAgB,KACxB,EAAc,GAClB,KAAK,OAAO,oBAGX,CAAC,GAAe,MAAM,IACtB,GAAe,CAAC,MAAM,GAEhB,GAGF,EAAY,CACjB,OACA,QAAS,GAAG,uBAMrB,IAAI,EAAG,sDAGb,IAAI,EAAG,mDAEX,ICpBC72D,GAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAiEf,YAAwB,CACtBi7D,uBAAuB,IAAM,KAC7BC,wBAAwB,IAAM,KAC9BC,uBAAuB,IAAM,KAC7B3xC,QACA4xC,gBAAgB,IACM,MAChBhgB,GAAUlyC,iBAAY,MACtB,CAAEwd,aAAcnI,IAChB3V,EAAWgpB,IACXwP,EAASlS,GAAyBxI,GAClCmyC,EAAawC,KAEbC,EAAe14D,sBAAY,IAAM,GAChB4mB,IACpB,CAAC2xC,EAAsB3xC,wBAEhB,IAAM,CACV4xC,QAGH,CAACA,EAAeE,SAEbC,GAAgB34D,sBAAY,IAAM,MAErC,CAACs4D,IAEEM,EAAe54D,sBAClB8hC,GACCA,EACG3f,OAAQkY,GAAaA,EAASA,WAAa,IAC3C/5B,IAAK+5B,GACG,OACFA,GADE,CAELD,aAAc27B,GAAmB17B,EAASD,iBAGlD,IAGIy+B,EAAa74D,sBAChBolB,GACQA,EAAQ9kB,IAAK0mB,GACX,KACLjmB,GAAI+3D,KACD9xC,GAFE,CAGLoT,aAAcpT,EAAOmT,GAClB75B,IAAKg2D,GAAcP,GAAmBO,EAAUl8B,eAChD2H,KAAK,IACR5H,GAAIy+B,EAAa5xC,EAAOmT,OAI9B,CAACy+B,IAGGG,EAAe/4D,sBAClBg5D,GAAe,WACI,MACV7zC,GAAS,KAAKyB,KACbxB,QAAUyzC,EAAWG,EAAW5zC,cACjCizC,GAAqBlzC,YAI/B,CAAC0zC,EAAYF,EAAeN,EAAsBzxC,IAG9C3jB,EAAOnF,kBAAQ,IAAM,MACnBsnB,GAAUwB,EAAMxB,QAAQ9kB,IAAK0mB,GAAW,IAGxCiyC,GAAW,OACTn3B,GAA6B,YAC5B1H,aAAa1V,MAAM,IAAIwB,QAASgzC,GAAkB,IACnD7+B,GAAqB,CACvBD,aAAc8+B,EACd7+B,SAAU,IAGR4L,GAAoBizB,OACX,KAAKlyC,EAAOmT,GAAG8+B,MACjB5+B,SAAWjN,OAAOoR,EAAOnE,EAASA,kBAGpCD,aAAe27B,GAAmB17B,EAASD,gBAC1C17B,KAAK27B,KAGV,OAAKrT,GAAL,CAAamT,GAAI2H,YAEnB,CAAEhe,UAAW,IAAKsB,YACxB,CAACoZ,EAAQ5X,IAENmmB,EAAgB/sC,sBACnBilB,GAAW,MACJG,GAAUyzC,EAAW5zC,EAAOG,WACzB,CACPze,KAAMwyD,GACNnzC,QAAS,CAAE8gB,UAAWpnB,OAAO0iC,OAAO,GAAIx7B,EAAO,CAAExB,gBAGrD,CAACpf,EAAU6yD,EAAYjyC,UAIvBzoB,UAAK,IAAKoD,YACRrD,EAAC,IACC,IAAKs6C,EACL,cAAev1C,EACf,iBAAkBgzD,EAClB,SAAU8C,YAEV76D,SAAK,UAAU,0BACbC,EAAC,IAAO,QAASu6D,EAAc,UAAU,uBACvCv6D,EAAC,IAAa,MAAM,+CAEtBA,mBACI,8BAA6BqgC,EAAO5X,EAAMiE,gBAAgB2T,EAC1D5X,EAAMmE,YAGV5sB,EAACg7C,IACC,QAAS,IAAMX,EAAQ5wC,QAAQsoC,aAC/B,WAAW,kBAGb/xC,EAACq6B,IAAY,QAASmgC,OAExBx6D,EAAC45D,IAAY,UACb55D,EAAC,IAAe,SAAU4uC,qBCvMQnmB,EAAkB,MACpD5gB,GAAWgpB,IACXyG,EAAQ8U,KACRviB,EAAiBX,KAEjB+xC,EAAYp5D,sBAAY,IAAM,MAC5B0e,GAAS/f,KAAKwhC,IAAIvZ,EAAMiE,KAAOjE,EAAMmE,MAClC,CACPpkB,KAAM0yD,GACNl5C,QAAS,CAACyG,EAAMiE,KAAOnM,EAAQkI,EAAMmE,GAAKrM,MAE3C,CAAC1Y,EAAU4gB,EAAMiE,KAAMjE,EAAMmE,KAE1BuuC,EAAct5D,sBAAY,IAAM,GAC3B,CACP2G,KAAMusD,GACNltC,QAAS,CACP/iB,KAAM,CAAElC,GAAI6lB,EAAM7lB,GAAIinB,sBAGzB,CAACA,EAAgBhiB,EAAU4gB,EAAM7lB,KAE9Bw4D,EAAwBv5D,sBAC3B2oB,GAAU,GACA,CACPhiB,KAAM6yD,GACNxzC,QAAS,CACP/iB,KAAM,CAAEw2D,QAAS7yC,EAAO+B,aAI9B,CAAC3iB,EAAU4gB,IAGP8yC,EAAuB15D,sBAC1B25D,GAAkB,GACR,CACPhzD,KAAMizD,GACN5zC,QAAS,CACP2zC,gBACA3xC,qBAIN,CAACA,EAAgBhiB,IAGb6zD,EAAwB75D,sBAAY,IAAM,GACrC,CAAE2G,KAAMo+C,OACXtxB,SACL,CAACztB,EAAUyvB,IAER1Y,EAAY/c,sBAAY,IAAM,GACzB,CACP2G,KAAMmzD,GACN9zC,QAAS,CAAEnI,aAAcvB,EAAQS,UAAUhc,GAAI+lC,UAAWlgB,OAEtDhD,OACH,IACC,sBAAuBi2C,EACvB,qBAAsBH,EACtB,qBAAsBN,EACtB,UAEF,CACEn5D,SAAUyxB,GAAUM,aACpBnB,WAAYF,GAAYG,MACxBqF,iBAAkB,MAGrB,CACD0jC,EACA7zD,EACAyvB,EACA7O,EACA8yC,EACAN,UAGKt7D,mBACL,MACEif,YACAu8C,cACAF,YACAG,0BAEF,CAACA,EAAuBD,EAAav8C,EAAWq8C,IC/FpD,KAAM73D,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAeT28D,GAAgC,CACpC94D,WAAY,EACZC,YAAa,EACbmB,OAAQ,OACRlC,OAAQ,QAmBV,YAAuB,CACrBs5D,UACAO,gBACA5E,eACqB,MACf,CAAEr4C,YAAWu8C,cAAaC,wBAAuBH,aACrDa,GAAkBR,SAGlBv7D,GAAC+d,8BACC9d,cAAQ67D,aACN77D,EAAC,IACC,SAAUo7D,EACV,KAAM/a,GACN,aAAcib,EAAQS,cAAclzC,OAAOvB,KAC3C,MAAOs0C,QAGX77D,cAAQk3D,IAAa,IAAK7zD,aACxBpD,YAAQ,KAAK,SAAS,UAAU,gBAAgB,QAASm7D,WACvDn7D,EAAC,SAEHA,YAAQ,KAAK,SAAS,UAAU,cAAc,QAASi7D,WACrDj7D,EAAC,IAAa,MAAM,gCAEtBA,YAAQ,KAAK,SAAS,UAAU,cAAc,QAAS4e,WACrD5e,EAAC,IAAO,MAAM,kBC3DxB,YAAwB,CAAEs7D,UAASO,iBAAsC,MACjE1gC,GAAS7sB,EAAUgtD,EAAS,gDAExBO,aACL1gC,iBACGh5B,IAAK+5B,GACL,AAAC6E,MAAM7E,EAASA,UAA2C,GAA/BA,EAASA,SAAS/M,QAAQ,IAEvDyU,KAAK,QCjBd,KAAMo4B,IAA2B,CAC/Bn4D,MAAO,MACPM,WAAY,QAGd,YAAgC,CAC9Bm3D,UACA1zC,aACAoC,YACAiyC,2BACAC,mBACAC,SACA7H,WACA2C,cACA/rC,UACAW,iBACC,YACKlD,GAAShpB,kBAAQ,IACd2O,EAAUgtD,EAAS,SAAU,GACnC,CAACA,IAEEc,EAA0Bv6D,sBAC7Bu7B,GAAS,YACmBA,IAE7B,CAAC6+B,IAGGI,EAAyB18D,kBAAQ,IAAM,aAMpCy9B,AAJLxV,GAAWpF,UACXoF,EAAWM,WACV8B,EAAUxH,UACTqJ,MAAc7B,UAAUI,aAAxByB,cAAoCrjB,QAASuhB,GAAkB2c,OAE/D,CACE7iC,MAAO,MACPM,WAAY,QAEd,CAAEN,MAAO,QAASM,WAAY,WACjC,CACDyjB,EAAWpF,SACXoF,EAAWM,UACX8B,EAAUxH,SACVqJ,KAAc7B,UAAUI,aAAxByB,cAAoCrjB,8BAK9ByuD,GACA/rC,IACExjB,QAAUrH,GAAM87D,iBAAS97D,EAAGunB,YAEjC0zC,EAAQlO,UAAY7vC,QAAa+9C,EAAQlO,QAAU,EAClDkO,EAAQ3yC,QAAU2yC,EAAQ3yC,OAAOtmB,OAAS,WAEtC,aAAc,IAAM+5D,EAAwB,IAC5C,aAAc,IAAMA,EAAwB,cAE3Cd,EAAQlO,YAAU,gBACb,MAAOiP,WAAU1zC,EAAOtmB,SAC7B,oCAGG,KAAK,SACL,MAAO,CACLi6D,WAAYJ,EAAmB,UAAY,SAC3Ch8D,QAAS,EACTqgB,OAAQ,GAEV,QAAUlgB,GAAMi0D,iBAAWj0D,EAAG,eAE7B,IAAc,MAAM,eAIzBunB,EAAWpF,4BAET,GAAE84C,EAAQlO,sBACN,MAAO4O,kBACZ,OAGHV,EAAQlO,QAERxlC,EAAWpF,4BAEV,gBACK,MAAOw5C,kBACZ,OAGH,MAMR,OAAe/6D,eAAKs7D,ICvFpB,YAAqB,CACnB/xC,QACAysC,cACAC,eACA72B,UACmB,wBAET42B,GAAiBC,aACtBC,GAAa3sC,EAAO6V,MAK3B,OAAep/B,eAAKu7D,ICtBpB,YAAwB,CAAElB,UAASrE,cAAaC,eAAc72B,UAAU,MAChEx4B,GAAWgpB,IAEX4rC,EAAc98D,kBAAQ,IAAM,MAC1By9B,GAAOmM,GAAe+xB,GACtBoB,EAAiBvF,GAAamE,EAAQxyB,YAAazI,SAClDjD,GAAOs/B,EAAkB,KAAIA,OACnC,CAACr8B,EAAQi7B,IAENnoB,EAActxC,sBACjBwG,GAAU,GACA,CACPG,KAAMm0D,GACN90C,QAAS,CACP/iB,KAAM,CAAE0lB,MAAOniB,EAAMq2B,OAAOlU,MAAO5nB,GAAI04D,EAAQ14D,QAIrD,CAACiF,EAAUyzD,EAAQ14D,4BAIXq0D,GAAiBC,eACtBtb,IACC,MAAO6gB,EACP,OAAQtpB,EACR,KAAK,SACL,MAAO,CAAEjzC,QAAS,sBCb1B,YAAiC,CAC/Bo7D,UACApwC,UACAtD,aACAoC,YACAiyC,2BACAC,mBACAC,SACA7H,YAC+B,MACzB3rC,GAAShpB,kBAAQ,IACd2O,EAAUgtD,EAAS,8BAA+B,IACxD,CAACA,IAEEsB,EAAmCj9D,kBAAQ,IACxCioB,EAAWpF,UAAYwH,EAAUxH,SACpC,CACE3e,MAAO,MACPM,WAAY,QAEdoZ,OACH,CAACqK,EAAWpF,SAAUwH,EAAUxH,WAE7B45C,EAA0Bv6D,sBAC7Bu7B,GAAS,YACmBA,IAE7B,CAAC6+B,IAEGvyB,EAAgB7nC,sBACnBxB,GAAM,YACIA,EAAGunB,IAEd,CAACA,EAAYu0C,yBAILjxC,IAAS,QAASwe,EAAe,MAAOkzB,WAC7Cj0C,GAAUA,EAAOtmB,OAAS,WAEvB,aAAc,IAAM+5D,EAAwB,IAC5C,aAAc,IAAMA,EAAwB,cAE3CzzC,EAAOtmB,OAAQ,kCAGZ,KAAK,SACL,MAAO,CACLi6D,WAAYJ,EAAmB,UAAY,SAC3Ch8D,QAAS,EACTqgB,OAAQ,GAEV,QAAUlgB,GAAMi0D,iBAAWj0D,EAAG,eAE7B,IAAc,MAAM,eAIzBunB,EAAWpF,SACb,IAEA,MAMR,OAAevhB,eAAK47D,gBCrFc,EAAa,OACtC,CAAC,EAAO,EAAU,EAAS,GAAI,EAAS,KAAO,MAC9C,GAASvuD,EAAU,EAAa,EAAU,eACzC,IAAa,EAAO,EAAQ,EAAQ,ICW/C,YAA2B,CACzBgtD,UACAO,gBACAz5C,eACyB,MACnBva,GAAWgpB,IACXhI,EAASyyC,EAAQS,cAAclzC,OAC/BwX,EAASy8B,GAAU16C,GAEnB+wB,EAActxC,sBACjBwG,GAAU,GACA,CACPG,KAAMu0D,GACNl1C,QAAS,CACP2C,MAAOniB,EAAMq2B,OAAOlU,MACpBwyC,QAAS1B,EAAQ14D,GACjBgjC,SAAU/c,EAAOjmB,OAIvB,CAACiF,EAAUyzD,EAAQ14D,GAAIimB,EAAOjmB,WAG3BimB,iBAGKgzC,aACL,AAAC10B,GAAkBte,EAAOoT,aAAc,CAAC,QAMvC2f,IACC,MAAO/yB,EAAOtB,MAAM4H,QAAQ,GAC5B,OAAQgkB,EACR,KAAK,SACL,MAAO,CAAEjzC,QAAS,mBATnB,GAAEmgC,EAAOi7B,EAAQ5uC,KAAM,mBAAmB2T,EACzCi7B,EAAQ1uC,GACR,kCAPiB,KCd3B,KAAM2nB,IAAsBt1C;AAAAA;AAAAA,EAItBu1C,GAAgCv1C;AAAAA;AAAAA,EAWtC,YAAwB,CACtBq8D,UACAhH,WACApX,gBACA96B,eACsB,MAChByH,GAAiBX,KACjB6f,EAAkBnd,GAAc0vC,EAAQ14D,IACxComC,EAAiBzd,GACrB,CAACwd,EAAgBnmC,IAAI+oB,OAAOod,EAAgB3f,SAAS/f,GAAK,IAAIsiB,OAC5Dsd,GACEpf,EACAyxC,EAAQr0C,QAAQ9kB,IAAK+kB,GAAYA,EAAQtkB,MAG7C,CAAE4F,KAAMuhB,GAAkBmf,QAEtB+zB,EAAkC1xC,GACtCwd,EAAgB3f,SAAS/f,GAAK,GAC9B,CAAEb,KAAMuhB,GAAkBmf,QAEtBg0B,EAAmBtxC,GAAc0vC,EAAQS,cAAcn5D,IACvDu6D,EAAkB5xC,GACtB,CAAC2xC,EAAiBt6D,IAAI+oB,OAAOuxC,EAAiB9zC,SAAS/f,GAAK,IAC5D,CAAEb,KAAMuhB,GAAkB2c,SAEtB7a,EAAgBjB,KAChB,CAACwyC,EAA6BC,GAAyB17D,mBAAS,IAChE,CAAC27D,EAA8BC,GACnC57D,mBAAS,IAEL67D,EAAYV,GAAU16C,GAEtB60C,EAAmBt3D,kBAAQ,IACxB,EACL69C,QAAS8d,EAAQS,cAAcve,QAC/Bl2C,MAAOgH,EAAUgtD,EAAQS,cAAe,OAAQ,IAC5C,CAAE97D,QAAS,QACXsd,SAEL,CAAC+9C,EAAQS,gBAEN0B,EAAgB57D,sBACpB,CAACxB,EAAGq9D,IAAmB,CAEjBr9D,KACAkI,kBAGAm1D,IAAmBngD,OACjBmgD,KACOpC,KACa,MACN/xC,UAAU,SAGxB+xC,EACAhtD,EAAUgtD,EAAS,4BAA6B/9C,WAE3B,MACNgM,UAAU,SAGP,MACC,MAG3B,CAACwf,EAAiBm0B,EAAkB5I,EAAUgH,IAG1CqC,EAAc97D,sBAAY,CAACxB,EAAGunB,IAAe,GAC/Crf,oBACSb,QAAQ,MAClB,IAEGwvD,EAAev3D,kBAAQ,IACpB,EACLgqB,aAAc,IAAM,GACFA,aAAa,OACdlE,QAEjBmE,aAAc,IAAM,GACFA,aAAa,OACdmB,UAGlB,CAACge,EAAiBC,IAEf40B,EAAgCj+D,kBAAQ,IACrC,EACLgqB,aAAc,IAAM,GACFA,aAAa,OACGlE,QAElCmE,aAAc,IAAM,GACFA,aAAa,OACGmB,UAGnC,CAACge,EAAiBk0B,IAEfpB,EAAgBl8D,kBAAQ,IACrB,EACLgqB,aAAc,IAAM,GACDA,aAAa,OACdlE,QAElBmE,aAAc,IAAM,GACDA,aAAa,OACdmB,UAGnB,CAACmyC,EAAkBC,IAEhBU,EAAQl+D,kBAAQ,IACbqpC,EAAexmB,UAAYumB,EAAgBvmB,SAC9C+xB,GACAjmC,EAAUgtD,EAAS,wCAAyC,IAC5D9mB,GACA,KACH,CAACzL,EAAgBvmB,SAAUwmB,EAAexmB,SAAU84C,UAGrDv7D,SAAI,cAAgBM,GAAM68C,EAAc78C,EAAGi7D,GAAU,IAAKuC,YACxD79D,gBAAQi3D,GAAiBC,aACtBoE,EAAQS,cAAc+B,SAAW,KAGnCC,GAAgB37C,EAAa,aAC5BpiB,EAACw8D,IACC,MAAOlB,EAAQ5uC,KACf,cACA,eACA,OAAQ8wC,EAAU,WAAYjgD,UAGjCwgD,GAAgB37C,EAAa,WAC5BpiB,EAACw8D,IACC,MAAOlB,EAAQ1uC,GACf,cACA,eACA,OAAQ4wC,EAAU,WAAYjgD,UAIlCvd,EAACg+D,IACC,UACA,gBACA,gBAGDD,GAAgB37C,EAAa,iBAC5BpiB,EAAC,IACC,UACA,cACA,eACA,OAAQw9D,EAAU,iBAAkBjgD,UAIvCwgD,GAAgB37C,EAAa,iBAC5BpiB,EAAC,IACC,MAAOs7D,EAAQ1a,SACf,cACA,eACA,OAAQ4c,EAAU,iBAAkBjgD,UAIxCvd,cAAQ67D,aACLvtD,EAAUgtD,EAAS,oCAAqC,OAG3Dt7D,EAAC,IAAe,UAAkB,kBAElCA,EAAC68D,IACC,UACA,WAAYK,EACZ,UAAWC,EACX,QAAStB,EACT,iBAAkByB,EAClB,yBAA2BlgC,GAASmgC,EAAuBngC,GAC3D,OAAQugC,EACR,SAAUF,IAGZz9D,EAACu8D,IACC,UACA,WAAYxzB,EACZ,UAAWk0B,EACX,QAASW,EACT,iBAAkBR,EAClB,yBAA2BhgC,GAASigC,EAAsBjgC,GAC1D,OAAQugC,EACR,SAAUF,EACV,cACA,kBAGFz9D,EAACi+D,IACC,UACA,gBACA,eACA,mBC3OR,YAAsB,EAAM,OACnBt+D,mBAAQ,IAAM,MACb,GAAgC,YACjC,QAAQ,CAAC,EAAO,IAAM,CACrB,EAAM,QAAQ,SAAW,IACf,KAAK,KACf,OAAQ,KACL,GAFY,CAGf,cAAe,OACV,EAAM,eADI,CAEb,OAAQ,EAAM,QAAQ,GACtB,SAAU,EACV,YAAa,EACb,GAAI,EAAM,QAAQ,GAAG,QAGhB,EAAM,QAAQ,OAAS,KAC1B,QAAQ,QAAQ,CAAC,EAAQ,IAAM,IAC/B,GAAO,GACP,EAAU,KACV,EAAI,EAAM,QAAQ,OAAS,GACzB,IAAM,IACE,EAAM,QAAQ,SAKnB,KAGG,KAAK,KACf,OAAQ,KACL,GAFY,CAGf,cAAe,OACV,EAAM,eADI,CAEb,SACA,UACA,OACA,SAAU,EACV,YAAa,EACb,GAAI,EAAO,YAOd,GACN,CAAC,IC7CN,KAAMu+D,IAAaj/D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAwCnB,YAAqB,CAAEk/D,YAAW7J,WAAUpzC,UAASyE,YAAWvD,eAAe,MACvEU,GAAU6C,iBAAWhlB,QAAQ,SAAU,IACvCq9C,EAAa71C,mBACb,CAAEw/C,MAAOyW,EAAYzoB,eAAcqhB,UAAWqH,GAAeF,GAC7Dr5D,EAAOw5D,GAAaF,GAEpBx3C,EAAajF,GACVrT,EAAU8T,EAAaT,EAAK,IAG/Bs6B,EAAqBp6C,sBACzB,CAACxB,EAAGi7D,IAAY,CACTjd,GAA0Bh+C,OAC3B4qB,mBACSxhB,QAAQgzC,kBAAkBp8C,EAAGi7D,KAG5C,CAACtd,UAIDj+C,GAAC+d,8BACC/d,WAAO,IAAKm+D,aACVl+D,oBACED,kBACEC,uBACC4mB,EAAU,YACT7mB,YAAI,GAAG,QAAWi3D,qBAEfrhB,EAAa,QAAQohB,YAEtB,KACHnwC,EAAU,UACT7mB,YAAI,GAAG,MAASi3D,oBACVrhB,EAAa,MAAMohB,YAEvB,KACJ/2D,mCAEC4mB,EAAU,gBACT7mB,YAAI,GAAG,eAAkBi3D,sBACjBl0C,MAAU6yB,EAAa,eAAeohB,YAE5C,KACHnwC,EAAU,gBAAkB5mB,8BAAoB,KACjDA,2BACAA,4BACAA,iBACEA,EAAC,IAAO,MAAO,CAAE0D,SAAU,QAE7B1D,4BACAA,0BACAA,iBAAK,UAGTA,oBACG8E,iBAAM3C,IAAKsmB,GAERzoB,EAAC,IAEC,QAASyoB,EACT,WACA,cAAe,CAACpoB,EAAGi7D,IAAYrf,EAAmB57C,EAAGi7D,GACrD,eAJK7yC,EAAM81C,cAUrBv+D,EAAC88C,IAAY,IAAKkB,EAAY,eCpFpC,YAA+B,CAC7Bt3B,SACA5hB,OACAmf,OACAjC,UACAI,cACAuD,YACAszB,YACArQ,wBACAzE,aACAyF,uBAC6B,MACvB,CAAC4qB,EAAgBhQ,GAAqB7iD,mBAAS,IAC/CkoB,EAAiBX,KAEjBrhB,EAAWgpB,IACXgE,EAAQwX,KACR,CAACoY,EAAWC,GAAiB/iD,mBAAS,IAEtCgjD,EAAax8C,mBAEbq2D,EAAa7+D,kBAAQ,IAAM,MACzB8+D,GAAW,CAAC/xC,EAAME,OAEjBA,EAAK44B,MACH94B,EAAO84B,IAEX54B,GAAM5K,EAAQ,GAAKwjC,KAAU94B,GAAQ1K,EAAQ,GAAKwjC,KAClD94B,GAAQ1K,EAAQ,GAAKwjC,KAAU54B,GAAM5K,EAAQ,GAAKwjC,KAIjDkZ,EAAqBh4C,GAClBA,EAAO1C,OAAQyE,GAAUg2C,EAASh2C,EAAMiE,KAAMjE,EAAMmE,WAGzDlG,GAAOI,OAKF63C,AAJSnK,GACZkK,EAAkBh4C,EAAOI,QACzBJ,EAAOI,QAEI3kB,IAAKsmB,GACX,OACFA,GADE,CAELszC,cAAe,CACbze,wBAAyBmhB,EAASh2C,EAAMiE,KAAMjE,EAAMmE,QAKrD,IACN,CAAC4nC,EAAgB9tC,EAAOI,OAAQ9E,IAE7B48C,EAAqB/8D,sBACzB,CAACgjC,EAAW0oB,EAAc,KAAO,GACtB,CACP/kD,KAAMq2D,GACNh3C,QAAS,CACPgd,YACAhb,iBACA0jC,kBAIN,CAAC1jC,EAAgBhiB,IAGbi3D,EAA6Bj9D,sBACjC,KAAO2oB,IAAU,IACX1lB,EAAKuE,GAAKvE,EAAKggB,GAAI,MACf,CAAEzb,IAAGyb,MAAOhgB,EACZ,CAAE4nB,OAAME,MAAOpC,EAEf,CAAEsQ,YAAWC,WAAYC,GAAgB3xB,EAAG,CAChDqjB,OACAE,OAEImyC,EAAkB,GACtB11D,EAAGqhB,MAAMgC,KAAKrjB,EAAE6xB,MAAMJ,EAAWC,IACjCzxB,EAAGohB,MAAMgC,KAAK5H,EAAGoW,MAAMJ,EAAWC,KAC/BvQ,GAGW,KAAMsgC,IACpBzkD,KAAKE,UAAUw4D,EAAiBxhD,OAAW,MAIrCkI,KAAK,8BAEL3hB,MAAM,8BAIlB,CAACgB,EAAM+vB,IAGHqhC,EAAoBv2D,kBAAQ,IAE9B2O,EACE8T,EAAY3Y,QACX,6BAA4Bkc,OAC1B4e,GAAsB5e,GAG5B,CAACA,EAAWvD,IAET48C,EAAcr/D,kBAClB,IAAM,CACJ,CACEiiB,MAAO,oBACPla,QAASo3D,IAGb,CAACA,IAGGG,EAAgBp9D,sBAAY,IAAM,GACpB,CAAC2yD,IAClB,CAACA,IAEEtP,EAAuBrjD,sBAAY,IAAM,GAC/B,CAAC4iD,IACd,CAACA,IAEEU,EAAqBtjD,sBAAY,IAAM,GAChC4H,QAAQy6C,gBACL,KACb,UAGDlkD,gBACED,SACE,IAAK,CACHq0C,GACAqQ,GACExlD;AAAAA;AAAAA;AAAAA;AAAAA,yBAOH,CAACwlD,GACAzkD,EAAC,IAEG0mB,SACAzC,OACA0B,YACAszB,YACArP,sBACAhB,wBACAzE,aACAqwB,iBAEF,SAAUoK,EACV,kBAAmBK,EACnB,eAAgB/Z,EAChB,cAAesZ,EAAWn8D,SAG7BoiD,GACCzkD,EAACi7C,IACC,OAAQkK,EACR,QAASD,IAGbllD,SAAK,UAAU,2BACZ,AAACykD,EAeAzkD,EAACq2D,IAAkB,IAAK1R,IAdxB3kD,SAAK,UAAU,2BACZw+D,GAAcA,EAAWn8D,OAAS,EACjCrC,EAAC,IACC,YACA,UAAWw+D,EACX,SAAUI,EACV,QAASI,EACT,YAAa9I,IAGfl2D,EAAC,gBAYjB,KAAMk/D,IAA2Bj+D,eAAKk+D,IAEhC3xC,GAAY,CAAE9G,OAAQ,GAAI5hB,KAAM,GAAImf,KAAM,iBAEL,MACnC,CACJV,eACAvB,UACA2D,YACAszB,YACAx5B,YAAa,CACXC,eACA5a,KAAM,CAAE8jC,wBAAuBgB,sBAAqBzF,gBAEpD3mB,IAEE,CAAEkJ,SAAQ5hB,OAAMmf,QAASwJ,GAAYD,IACrCpL,EAAcf,WAGlBrhB,GAAC,IAEG0mB,SACA5hB,OACAmf,OACA2kB,wBACAzE,aACAyF,sBACAlqB,eACA6D,eACAnB,cACAJ,UACA2D,YACAszB,2BClQgE,MAChE,GAAc,WAEb,AAAC,IACN3qC,EAAU,EAAY,QAAS,0BAA0B,IAAW,ICqCxE,YAAiC,CAC/BxJ,OACAqd,iBACAwD,YACAS,gBACAg5C,YACAC,6BAC+B,MACzB/nC,GAAQ8U,KACRvX,EAAQwX,KACRxkC,EAAWgpB,IAEXu6B,EAAevpD,sBAAY,IAAM,GAC/Bq2B,kBAAkB,CACtB/C,QAAS,6CACT6B,QAAS,CACP,CACEI,KAAM,MACNF,QAAS,IAAM,GACJ,CAAE1uB,KAAM82D,OAGrB,CAAEloC,KAAM,UAGX,CAACvvB,EAAUyvB,IAERioC,EAA0B19D,sBAAY,IAAM,MAC1C29D,GAAkBJ,EAAUj9D,IAAK4f,GAC9BA,EAAMnf,MAEN,CAAE4F,KAAMi3D,GAAmB78D,GAAI48D,KACvC,CAAC33D,EAAUu3D,IAERM,EAA0B79D,sBAAY,IAAM,GACvC,CAAE2G,KAAMi3D,GAAmB78D,GAAI,MACvC,CAACiF,IAEE83D,EAA8B99D,sBAAY,IAAM,YACtB+9D,EAAe,IACvCp5C,GAAUb,EAAUY,MAAM,OACpBC,EAAQ,KAAOA,EAAQ,GAAK,CAACA,EAAQ,IAAMA,OAC/Cq5C,GAAgC,YAC3B9uC,KAAKvK,GAETs5C,AADgBF,EAAcx4C,KAAMyU,GAAMA,EAAE5X,KAAKuC,UAAYuK,MAEjDxwB,KAAKwwB,SAGjB8uC,QAEHA,GAAiBE,EAAqBj7D,GACxC+6D,EAAex9D,OAAS,IACjB,CAAEmG,KAAMw3D,GAAwBx5C,QAASq5C,MAE5C/7D,MAAM,yBAEb,CAAC6hB,EAAWkP,EAAO/vB,EAAM+C,IAEtBo4D,EAAoBp+D,sBAAY,IAAM,GACjC,CAAE2G,KAAM03D,MAChB,CAACr4D,IACEs4D,EAAoBt+D,sBAAY,IAAM,GACjC,CAAE2G,KAAM43D,MAChB,CAACv4D,IAEEw4D,EAA0Bx+D,sBAAY,IAAM,WAC9B,MACVywC,GAAc,KAAMzd,GAAMmB,YAC9B,2EAES,IAAM,GACN,CAAExtB,KAAM83D,OACR,CAAE93D,KAAM+3D,UAEhB,QAEJ,CAAC14D,EAAUgtB,aAGXqf,IACC,SAAUkX,EACV,QAASgU,iBAAW/8D,OACpB,cAAc,iCAEbgyC,IAAO,WAAW,mBAAmB,QAASqrB,aAC5C,WAEFrrB,IAAO,WAAW,mBAAmB,QAASkrB,aAC5C,SAEFp9C,GAAkBwD,GAAaA,EAAUY,MAAM,KAAKlkB,OAAS,KAC3DgyC,IACC,WAAW,yBACX,QAASsrB,aAER,SAGJv5C,IAAkB4W,EAAeC,OAASmiC,EAAU/8D,OAAS,qBAEzDgyC,IAAO,WAAW,cAAc,QAAS8rB,aACvCK,WAEFnsB,IAAO,WAAW,WAAW,QAAS4rB,aACpCQ,YAIN37D,GAAQA,EAAKzC,OAAS,GAAKg9D,KACzBhrB,IACC,WAAW,iDACX,QAASgsB,aAERK,YAOX,KAAMC,IAA6B1/D,eAAK2/D,gBAEF,CAAExB,aAAsC,MACtE,CAAEt6D,OAAMqd,iBAAgBwD,YAAWS,iBAAkB5I,IAErD6hD,EAA4BwB,AADZC,KAC0B,2BAE7C,IAEGh8D,OACAqd,iBACAwD,YACAS,gBACAg5C,YACAC,8BCrKR,YAA0B,CAAEx7D,QAAOk9D,aAAoC,iBAGjE,MAAO,CACL/9D,gBAAiBa,EACjB7B,OAAQ,OACRa,MAAO,OACPwgB,QAAS09C,EAAY,EAAI,GACzB9gE,QAAS,kBAMjB,YAA0B,CACxByjB,gBACAE,gBACAm9C,aACwB,iBAGpB,MAAM,KACN,OAAO,KACP,QAAQ,YACR,QAASA,EAAY,EAAI,uCAGjB,EAAE,gBAAgB,KAAMr9C,EAAe,YAAY,gBACnD,EAAE,iBAAiB,KAAME,EAAe,YAAY,WAqBlE,YAAwBnkB,EAA4B,MAC5C,CAAE6H,QAAOI,UAAU,IAAM,KAAMq5D,aAActhE,qBAGzC,QAAc,KAAK,SAAS,mBACjCA,EAAMykB,YAAc,IAClB,UAAqBzkB,EAAMoE,QAAO,iBAElC,MAAiB,aAA0BpE,EAAMoE,UAM1D,OAAe5C,eAAK+/D,gBCzD0B,CAC5Cl8D,OACAm8D,4BACAC,iBACA55D,SAC6B,MACvB65D,GAAmBv+D,GAChBs+D,EAAe1/B,UAAW4/B,GAAMA,EAAEx+D,KAAOA,KAAQ,sBAKtD,MAAO,OACF0E,GADE,CAEL+b,QACE89C,EAAgBr8D,EAAKlC,KAAOkC,EAAKmnB,OAASnnB,EAAKmnB,MAAMnF,OAAOzkB,OAAS,EACjE,EACA,KAER,KAAK,SACL,QAAS,IAAM4+D,EAA0Bn8D,GACzC,SAAUA,EAAKmnB,OAASnnB,EAAKmnB,MAAMnF,OAAOzkB,SAAW,aAEpDg/D,qBCxBwC,CAC7Cv8D,OACAw8D,qBACAh6D,SAC8B,MACxBsf,GAAY,CAAChkB,EAAI+e,IACd7c,EAAOA,EAAK7E,QAAQ0hB,GAAO,0BAI/B7c,EAAKmf,KAAKC,YAAc,8BAER,4BACb,QACA,KAAK,SACL,QAAS,IAAMo9C,EAAmBx8D,EAAM,wBAEvC,IACC,MAAO,KACD8hB,EAAU9hB,EAAKlC,GAAI,aACnB,CACEygB,QAAS,EACThD,YAAa,MACb8Z,KAAMr1B,EAAK7E,QAAQ4D,OAErB,CACEwf,QAAS,GACT8W,KAAMr1B,EAAK7E,QAAQ4D,YAMhCiB,EAAKmf,KAAKC,YAAc,YAClB,MAAO,CAAE4yB,SAAU,8BAEpB,MAAO,OAAKxvC,GAAL,CAAYzE,MAAO,OAAQi0C,SAAU,SAC5C,KAAK,SACL,QAAS,IAAMwqB,EAAmBx8D,EAAM,gCAEvC,IACC,MAAO,KACD8hB,EAAU9hB,EAAKlC,GAAI,qBACnB,CACEygB,QAAS,EACThD,YAAa,MACb8Z,KAAMr1B,EAAK7E,QAAQyjB,eAErB,CACEL,QAAS,GACT8W,KAAMr1B,EAAK7E,QAAQyjB,gCAM7B,MAAO,OAAKpc,GAAL,CAAYzE,MAAO,OAAQi0C,SAAU,SAC5C,KAAK,SACL,QAAS,IAAMwqB,EAAmBx8D,EAAM,gCAEvC,IACC,MAAO,KACD8hB,EAAU9hB,EAAKlC,GAAI,qBACnB,CACEygB,QAAS,EACThD,YAAa,MACb8Z,KAAMr1B,EAAK7E,QAAQ2jB,eAErB,CACEP,QAAS,GACT8W,KAAMr1B,EAAK7E,QAAQ2jB,0BCnFzC,KAAMxgB,IAGF,CACFkF,OAAQ,CACNtF,gBAAiB,cACjBkB,OAAQ,OACRrB,MAAO,OACPi0C,SAAU,QAEZjB,IAAK,CACH51C,QAAS,OACTshE,aAAc,SACdv/D,OAAQ,OACRuoC,aAAc,wBAEhBv/B,KAAM,CACJskC,KAAM,EACNttC,OAAQ,OACR/B,QAAS,QAEXgkB,KAAM,CACJqrB,KAAM,UACNttC,OAAQ,OACR/B,QAAS,QACTsD,WAAY,SACZqd,SAAU,SACV4gD,aAAc,WACdzoC,WAAY,SACZkW,WAAY,QAEdyY,KAAM,CACJznD,QAAS,OACTsgB,OAAQ,OACRjd,eAAgB,WAIpB,YAA0B,CACxB6e,iBACA++C,iBACAp8D,OACAw8D,qBACAL,4BACAQ,yBACAC,qBACAxkB,iBACC,cACKykB,GAAqBn3C,GACrBA,OACMA,EAAM7pB,QAAQ,oBAAqB,wBAEtC6pB,GAEHu2C,EAAY5+C,GAAkBA,EAAevf,KAAOkC,EAAKlC,GACzD,CAAEiB,QAAOmH,OAAM0Y,gBAAeE,iBAAkB9e,EAAK7E,wBAGvD,MAAO,OACFmD,GAAOyyC,KACNkrB,EACA,CAAE/9D,gBAAiB,WACnB,CAAEqgB,QAASlB,EAAiB,GAAM,IAExC,4BAEC,IACC,OACA,qBACA,MAAO/e,GAAOkF,iCAID,sCACb,MAAOlF,GAAO4H,KACd,QAAS,IAAMy2D,EAAuB38D,sBAEjC,MAAO,OAAK1B,GAAOskD,MAAZ,CAAkB7kD,MAAO,kBAClCiC,EAAKmf,KAAKgN,QACR2wC,OACC98D,EAAKmf,KAAKC,YAAc,IACzB29C,SAEAjW,mBAGC,MAAOxoD,GAAO6gB,cAAOjZ,aAEzB,MAAO5H,GAAO6gB,KAEd,wBAAyB,CACvBokC,OAAQvjD,EAAKmf,MAAQ09C,EAAkB78D,EAAKmf,KAAK69C,sBAG/C,MAAO1+D,GAAO6gB,yBAEhB,MAAO,CACL89C,WAAY,uBACZ1gC,aAAc,SAGjBv8B,KAAKmf,OAALnf,cAAWk9D,wBAKR,MAAO5+D,GAAO6gB,cAAOnf,KAAKmf,OAALnf,cAAWm9D,aAGvC,IACC,OACA,MAAO,OACF7+D,GAAOskD,MACPtkD,GAAOkF,QAEZ,4BACA,qBAED04D,IACC,MAAO59D,GAAOkF,OACd,UAAWxD,EAAKmf,KAAKC,UACrB,MAAO,CAAER,gBAAe7f,QAAO+f,iBAC/B,YACA,QAAUvb,GAAUq5D,EAAmB58D,EAAMuD,QAMrD,OAAepH,eAAKihE,IC5HpB,YAA2BziE,EAA+B,MAClD,CAAE6hD,gBAAgB,IAAM,KAAMt2C,QAASvL,EAEvC,CAAEqnB,SAAQ4nB,iBAAkBC,KAE5BwzB,EAAqBtgE,sBACxBgC,GAAU,GACKA,KAEZmH,EACC,GAAEnH,EAAMk+C,MAAMvhD,KAAKwhD,MAAMn+C,EAAMo+C,IAAIhtB,EAAI,KAAKv0B,SAAS,QAG1D,CAACsK,EAAMs2C,EAAe5S,aAIrB0zB,iBACC,MAAO,CAAErgB,IAAKzzC,EAAUwY,EAAQ9b,EAAM,SACtC,aAAcq3D,GACd,iBAAmBhiE,GAAM8hE,EAAmB9hE,KAKlD,OAAeY,eAAKqhD,ICjCpB,YAAqBjT,EAAO,MACpBhtC,GAASgtC,EAAMhtC,OACfigE,EAAO9hE,KAAKyvB,MAAM5tB,EAAS,SAAW,EACtCkgE,EAAQ,GAAIC,cAAcngE,EAASigE,GAAS,MAC9C9+C,GAAQ,SACHR,GAAI,EAAGA,EAAIu/C,EAAMlgE,OAAQ2gB,GAAKs/C,IAC/B9+C,KAAW6rB,EAAMrsB,SAElBu/C,GAGT,YAAiB/3C,EAAO1lB,EAAMqZ,EAAS,MAC/B,CAAEskD,QAAOzgC,OAAQxhC,KACjB,CAAEkiE,YAAavkD,EACfwkD,EAAQ79D,EAAKzC,OAAS,EAAIyC,EAAK,GAAGuE,EAAI,EACtCu5D,EAAO99D,EAAKzC,OAAS,EAAIyC,EAAKA,EAAKzC,OAAS,GAAGgH,EAAI,EACnDw5D,EAAaJ,EAAMzgC,EAAIxX,IAAUi4C,EAAMC,SACtC,CACL,CAAEr5D,EAAGs5D,EAAOr5D,EAAGu5D,GACf,CAAEx5D,EAAGu5D,EAAMt5D,EAAGu5D,IAUlB,YAA6B,CAC3Bh/D,QAAQ,MACRiB,OACAqZ,UAAU,IACiB,MAErB,CAAEukD,WAAW,GAAMvkD,EACnB2kD,EAAgBnjE,kBAAQ,IAAM,MAC5B0vC,GAAQ0zB,GAAYj+D,EAAKggB,IAEzBk+C,EAAYC,GAAc5zB,EAAOlxB,GACjC+kD,EAAe,GACfngD,EAAa,UACVogD,KAAWH,GAAUI,QAAS,MAC/B,CAAE/5D,IAAGC,KAAM05D,EAAUI,QAAQD,MAC/BhoC,GAAS,GAAIzQ,OAAMrhB,EAAEhH,eAChB2gB,GAAI,EAAGA,EAAI3Z,EAAEhH,OAAQ2gB,MACrBA,GAAK,CAAE3Z,EAAGA,EAAE2Z,GAAI1Z,EAAGA,EAAE0Z,MAEtBmgD,GAAWhoC,IACbgoC,GAAWE,GAAQL,EAAUG,GAAUhoC,EAAQ,CAAEunC,mBAElD,CAAEQ,UAASngD,UACjB,CAACje,EAAKggB,GAAI3G,EAASukD,oBAIlB,MAAO,CACLziE,QAAS,OACTqzB,cAAe,SACf/vB,WAAY,SACZD,eAAgB,6BAGb,MAAO,CAAErD,QAAS,oBACpB,IAAK,MAAO,IAAK,OAAQ,gBACvB,IAAQ,MAAM,cACd,IACC,KAAM6iE,EAAcI,QAAQI,SAC5B,MAAM,IACN,MAAM,IACN,MAAM,WACN,UAAW,CACTpjD,OAAQrc,EACRwc,YAAa,KAEf,YAAa,CACX8Z,KAAMt2B,EACNqc,OAAQrc,OAGX,IACC,KAAMi/D,EAAc//C,MAAMugD,SAC1B,MAAM,IACN,MAAM,IACN,MAAM,cACN,UAAW,CACTpjD,OAAQ,OACRG,YAAa,GACbkjD,gBAAiB,QAEnB,YAAa,CACXppC,KAAMt2B,EACNqc,OAAQrc,OAGX,IACC,GAAG,IACH,MAAM,KACN,SAAS,SACT,eAAgB,CAAEH,SAAU,UAC5B,WAAY,CAAEA,SAAU,cAEzB,IACC,GAAG,IACH,MAAQ,iBAAgBg/D,KACxB,SAAS,OACT,eAAgB,CAAEh/D,SAAU,UAC5B,WAAY,CAAEA,SAAU,cAEzB,IAAO,SAAS,WAAW,OAAQ,EAAG,MAAO,mBAG7C,MAAO,CAAEzD,QAAS,QAAS4C,MAAO,IAAKb,OAAQ,gBACjD,IAAK,MAAO,IAAK,OAAQ,gBACvB,IACC,KAAM8gE,EAAcI,QAAQM,SAC5B,MAAM,IACN,MAAM,IACN,MAAM,WACN,UAAW,CACTtjD,OAAQrc,EACRwc,YAAa,KAEf,YAAa,CACX8Z,KAAMt2B,EACNqc,OAAQrc,OAIX,IACC,KAAMi/D,EAAc//C,MAAMygD,SAC1B,MAAM,IACN,MAAM,IACN,MAAM,cACN,UAAW,CACTtjD,OAAQ,OACRG,YAAa,GACbkjD,gBAAiB,QAEnB,YAAa,CACXppC,KAAMt2B,EACNqc,OAAQrc,OAIX,IACC,GAAG,IACH,MAAM,KACN,SAAS,SACT,eAAgB,CAAEH,SAAU,UAC5B,WAAY,CAAEA,SAAU,cAEzB,IACC,GAAG,IACH,MAAQ,iBAAgBg/D,KACxB,SAAS,OACT,eAAgB,CAAEh/D,SAAU,UAC5B,WAAY,CAAEA,SAAU,cAEzB,IAAO,SAAS,WAAW,OAAQ,EAAG,MAAO,aAOxD,OAAezC,eAAKwiE,IC9JpB,YAA2B,CACzB3+D,KAAM4+D,EACN50B,YACyB,MACnB+C,GAAU1pC,iBAAY,MAEtB8vD,EAAuBp2D,sBAAY,IAAM,CACzCgwC,EAAQpoC,WACFA,QAAQsoC,cAEjB,aAGA,IACC,IAAKF,EACL,cAAe6xB,EAAazjE,QAC5B,6BAEK,MAAO,CAAEA,QAAS,OAAQqzB,cAAe,SAAUqwC,IAAK,8BACtD,MAAO,CAAE1jE,QAAS,QAAS6B,SAAU,uBACvCwgD,IACC,KAAK,QACL,cAAe2V,QAGlBwL,IAAoB,MAAM,MAAM,KAAMC,EAAa5+D,YC3B5D,YAAsBrF,EAA0B,MACeA,KAArDmkE,iBAAgB,IAAM,KAAM54D,QAAyBvL,EAAhBokE,IAAgBpkE,EAAhBokE,CAArCD,gBAA4B54D,SAE9B,CAAE8b,SAAQ4nB,iBAAkBC,KAE5BC,EAAgB/sC,sBACnB2oB,GAAU,GACKA,KACAxf,EAAMwf,IAEtB,CAACxf,EAAM44D,EAAel1B,aAIrB,MACC,UAAU,oBACV,eAAe,QACf,eAAe,QACf,aAAcpgC,EAAUwY,EAAQ9b,EAAM,CAAC,EAAG,MAC1C,cAAe4jC,EACf,YAAa,CAACnvC,EAAOmI,mBACVnI,gCACAmI,EAAMk8D,cAGjB,YACA,YAAa,IACTD,IAKV,OAAe5iE,eAAK8iE,ICtCpB,YAAqBC,EAAQ,IACvBC,GAAOD,EAAO,GAAG3hE,OACjBwyC,EAAOmvB,EAAO3hE,OACdigE,EAAO9hE,KAAKyvB,MAAOg0C,EAAOpvB,EAAQ,SAAW,OAC3C0tB,GAAQ,GAAIC,cAAeyB,EAAOpvB,EAAQytB,GAAS,MACrD9+C,GAAQ,SACHR,GAAI,EAAGA,EAAIu/C,EAAMlgE,OAAQ2gB,GAAKs/C,IAC/B9+C,KAAWwgD,EAAQhhD,EAAI6xB,GAAS,GAAG7xB,EAAI6xB,SAExC0tB,GAGT,YAAiB/3C,EAAO1lB,EAAMqZ,EAAS,MAC/B,CAAEskD,QAAOzgC,OAAQxhC,KACjB,CAAEkiE,YAAavkD,EACfwkD,EAAQ79D,EAAKzC,OAAS,EAAIyC,EAAK,GAAGuE,EAAI,EACtCu5D,EAAO99D,EAAKzC,OAAS,EAAIyC,EAAKA,EAAKzC,OAAS,GAAGgH,EAAI,EACnDw5D,EAAaJ,EAAMzgC,EAAIxX,IAAUi4C,EAAMC,SACtC,CACL,CAAEr5D,EAAGs5D,EAAOr5D,EAAGu5D,GACf,CAAEx5D,EAAGu5D,EAAMt5D,EAAGu5D,IAUlB,YAA6B,CAC3Bh/D,QAAQ,MACRiB,OACAqZ,UAAU,IACiB,MACrB,CAAEukD,WAAW,GAAMvkD,EAEnB2kD,EAAgBnjE,kBAAQ,IAAM,MAC5B0vC,GAAQ0zB,GAAYj+D,EAAKgrB,GACzBkzC,EAAYC,GAAc5zB,EAAOlxB,GACjC+kD,EAAe,GACfngD,EAAa,UACVogD,KAAWH,GAAUI,QAAS,MAC/B,CAAE/5D,IAAGC,KAAM05D,EAAUI,QAAQD,MAC/BhoC,GAAS,GAAIzQ,OAAMrhB,EAAEhH,eAChB2gB,GAAI,EAAGA,EAAI3Z,EAAEhH,OAAQ2gB,MACrBA,GAAK,CAAE3Z,EAAGA,EAAE2Z,GAAI1Z,EAAGA,EAAE0Z,MAEtBmgD,GAAWhoC,IACbgoC,GAAWE,GAAQL,EAAUG,GAAUhoC,EAAQ,CAAEunC,mBAElD,CAAEQ,UAASngD,UACjB,CAACje,EAAKgrB,EAAG3R,EAASukD,uCAIZ,MAAO,CAAE/+D,UAAW,SAAU2/C,cAAe,EAAG4gB,WAAY,kCAK/D,MAAO,CACLC,UAAW,oBACXpgC,UAAW,OACXmgC,WAAY,OACZjkE,QAAS,OACTqzB,cAAe,mBAGhB,IAAK,MAAO,IAAK,OAAQ,gBACvB,IACC,KAAMwvC,EAAcI,QAAQI,SAC5B,MAAM,IACN,MAAM,IACN,MAAM,WACN,UAAW,CACTpjD,OAAQrc,EACRwc,YAAa,KAEf,YAAa,CACX8Z,KAAMt2B,EACNqc,OAAQrc,OAGX,IACC,KAAMi/D,EAAc//C,MAAMugD,SAC1B,MAAM,IACN,MAAM,IACN,MAAM,cACN,UAAW,CACTpjD,OAAQ,OACRG,YAAa,GACbkjD,gBAAiB,QAEnB,YAAa,CACXppC,KAAMt2B,EACNqc,OAAQrc,OAGX,IACC,GAAG,IACH,MAAM,KACN,SAAS,SACT,eAAgB,CAAEH,SAAU,UAC5B,WAAY,CAAEA,SAAU,cAEzB,IACC,GAAG,IACH,MAAQ,kBAAiBg/D,KACzB,SAAS,OACT,eAAgB,CAAEh/D,SAAU,UAC5B,WAAY,CAAEA,SAAU,cAEzB,IAAO,SAAS,WAAW,OAAQ,GAAI,MAAO,SAGhD,IAAK,MAAO,IAAK,OAAQ,gBACvB,IACC,KAAMo/D,EAAcI,QAAQM,SAC5B,MAAM,IACN,MAAM,IACN,MAAM,WACN,UAAW,CACTtjD,OAAQrc,EACRwc,YAAa,KAEf,YAAa,CACX8Z,KAAMt2B,EACNqc,OAAQrc,OAIX,IACC,KAAMi/D,EAAc//C,MAAMygD,SAC1B,MAAM,IACN,MAAM,IACN,MAAM,cACN,UAAW,CACTtjD,OAAQ,OACRG,YAAa,GACbkjD,gBAAiB,QAEnB,YAAa,CACXppC,KAAMt2B,EACNqc,OAAQrc,OAIX,IACC,GAAG,IACH,MAAM,KACN,SAAS,SACT,eAAgB,CAAEH,SAAU,UAC5B,WAAY,CAAEA,SAAU,cAEzB,IACC,GAAG,IACH,SAAS,OACT,eAAgB,CAAEA,SAAU,UAC5B,WAAY,CAAEA,SAAU,cAEzB,IAAO,SAAS,WAAW,OAAQ,GAAI,MAAO,aAOzD,OAAezC,eAAKmjE,IC5JpB,YAA2B,CACzBt/D,KAAM4+D,EACN50B,YACyB,MACnB+C,GAAU1pC,iBAAY,MAEtBb,EAAQrI;AAAAA;AAAAA;AAAAA;AAAAA,4BAIYykE,EAAazjE,QAAQyjB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,4BAOrBggD,EAAazjE,QAAQ2jB;AAAAA;AAAAA;AAAAA,IAKzCq0C,EAAuBp2D,sBAAY,IAAM,GACrC4H,QAAQsoC,cACf,UAGD/xC,GAAC,IACC,IAAK6xC,EACL,cAAe6xB,EAAazjE,QAC5B,oBAEAF,SAAK,IAAKuH,YACRvH,SAAK,UAAU,qBACbC,UAAM,MAAO,CAAEE,QAAS,gCACxBF,EAACsiD,IACC,KAAK,gBACL,cAAe2V,IAEjBl4D,SAAK,MAAO,CAAEG,QAAS,iBACrBF,UAAM,UAAU,kDAChBA,EAAC+jE,IACC,KAAK,wCACL,cAAe9L,IAEjBj4D,UAAM,UAAU,uCAChBA,EAAC,GACC,KAAK,yCACL,SAAUi4D,EACV,KAAK,iBAIXl4D,SAAK,UAAU,qBACbC,UAAM,MAAO,CAAEE,QAAS,gCACxBF,EAACsiD,IACC,KAAK,gBACL,cAAe2V,IAEjBl4D,SAAK,MAAO,CAAEG,QAAS,iBACrBF,UAAM,UAAU,kDAChBA,EAAC+jE,IACC,KAAK,wCACL,cAAe9L,IAEjBj4D,UAAM,UAAU,uCAChBA,EAAC,GACC,KAAK,yCACL,SAAUi4D,EACV,KAAK,iBAIXj4D,EAACokE,IAAoB,KAAMV,EAAa5+D,YC/EhD,KAAMwC,IAAQrI;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAuEd,YAAyB,CAAE6C,WAAUgD,OAAMowB,WAAiC,MACpErtB,GAAWgpB,IACX,CAAEjuB,KAAIqhB,QAASnf,EAEfktC,EAAgBnwC,sBACnBilB,GAAW,GACD,CAAEte,KAAM67D,GAAyBzhE,KAAI3C,QAAS6mB,KAEzD,CAACjf,EAAUjF,IAGPuG,EAAetH,sBAClBxB,GAAM,CACDA,EAAEq+B,SAAWr+B,EAAE2I,oBAIrB,CAACksB,OAGC,CAACpzB,QAAiB,WAChB,CAAEuH,IAAGC,KAAMxH,QAGf9B,UAAK,IAAKsH,GAAO,QAAS6B,WACxBnJ,SACE,UAAU,kBACV,MAAO,CACLge,KAAMiG,EAAKC,YAAc,EAAI7a,EAAI,IAAMA,EAAI,IAC3CxG,MAAOohB,EAAKC,YAAc,EAAI,IAAM,IACpChkB,QAAS+jB,EAAKC,YAAc,EAAI,SAAW,GAC3CniB,IAAKuH,YAGN2a,EAAKC,YAAc,EAClBlkB,EAAC,IAAkB,SAAUgyC,EAAe,SAE5ChyC,EAAC,IAAkB,SAAUgyC,EAAe,aAOtD,aAAyB,OAChB,GAGT,OAAe/wC,eAAKqjE,GAAiBC,IC1FrC,YAA4B,CAC1Bz/D,OACAqd,iBACAwD,YACA6+C,eAC0B,MACpBxmB,GAAa71C,mBACb,CAAC+4D,EAAgBuD,GAAqB9iE,mBAC1C,IAEI,CAAC+iE,EAAsBC,GAAuBhjE,mBAAS,MACvD,CAACijE,EAAsBC,GAA2BljE,mBAG9C,MACJ,CAACmjE,EAAyBC,GAA8BpjE,mBAAS,IAEjEkzB,EAAQwX,KACRxkC,EAAWgpB,wBAEP,IAAM,IACV/rB,EAAM,MACFkgE,GAAiBlgE,EAAK2c,OAAO,CAACC,EAAUK,IAE1CA,GAAMkC,KAAKC,YAAc,GACxBnC,EAAkB9hB,QAAQ0hC,wBAA0B,MAEjDphC,KAAK,CAAEqC,GAAImf,EAAMnf,KAEhB8e,GACN,MAEesjD,KAEnB,CAAClgE,EAAM+C,SAEJo9D,GAA0BtlE,kBAAQ,IACjCmF,EAEEogE,AADgBC,GAAe,WAChBrgE,EAAM,IAFV,GAGjB,CAACA,wBAEM,IAAM,GACF,CACV6yC,IAAKhyB,EACL7gB,KAAMmgE,EAAwBt/C,MAE/B,CAACA,EAAW6+C,EAAaS,SAEtBG,GAAgCvjE,sBACnCg6B,GAAM,MACCqd,GAAegoB,EAAe1/B,UAAW4/B,GAAMA,EAAEx+D,KAAOi5B,EAAEj5B,IAC1DyiE,EAAa,CAAC,GAAGnE,GACnBhoB,IAAiB,KACR34C,KAAK,CAAEqC,GAAIi5B,EAAEj5B,OAEb4yB,OAAO0jB,EAAc,KAEzB,CAAE1wC,KAAM88D,GAAiCxgE,KAAMugE,MACtCA,IAEpB,CAACx9D,EAAUq5D,IAGP5mB,EAAqBz4C,sBACxB81C,GAAQ,GACK,CACVA,IAAKA,EAAIP,MACTtyC,KAAMmgE,EAAwBttB,EAAIP,WAG3B,CAAE5uC,KAAM+8D,GAAgB5tB,IAAKA,EAAIP,SAE5C,CAACvvC,EAAU28D,EAAaS,IAGpBjG,EAAcr/D,kBAClB,IAAM,CACJ,CACEiiB,MAAO,oBACPla,QAAUopB,GAAiB,WACP,MACV,CAAEznB,IAAGC,IAAG2a,QAAS6M,EACP,KAAMg6B,IACpBzkD,KAAKE,UAAU,CAAE8C,IAAGC,IAAG2a,QAAQ1G,OAAW,MAIpCoY,QAAQ,8BAER7xB,MAAM,kCAKpB,CACE8d,MAAO,SACPla,QAAUopB,GAAiB,YACd,IAAM,GACN,CAAEtoB,KAAM82D,GAAgB18D,GAAIkuB,EAAaluB,MACjD,MAIT,CAACiyB,EAAOhtB,IAGJo0C,EAAqBp6C,sBACzB,CAACxB,EAAGi7D,IAAY,CACTjd,GAA0Bh+C,OAC3B4qB,mBACSxhB,QAAQgzC,kBAAkBp8C,EAAGi7D,KAG5C,CAACtd,IAGGwnB,EAAqB3jE,sBAAY,CAAC4jE,EAAkBp9D,IAAU,GAC1C,CACtBgB,EAAGhB,EAAMq9D,YAAY78D,QACrBS,EAAGjB,EAAMq9D,YAAY58D,YAEH28D,KACO,KAC1B,IAEGE,EAAyB9jE,sBAC7B,CAACg6B,EAAGla,IAAQ,GACD,CACPnZ,KAAMi3D,GACN78D,GAAIi5B,EAAEj5B,GACN+e,MACA6I,MAAO,CAACqR,EAAE57B,QAAQ0hB,MAGtB,CAAC9Z,IAGG+9D,EAA6B/jE,sBAChCg6B,GAAM,YACM,IAAM,CACX1Z,GAAkBA,EAAevf,KAAOi5B,EAAEj5B,KACnC,CAAE4F,KAAMq9D,GAAwB/gE,KAAM,SAEtC,CAAE0D,KAAMq9D,GAAwB/gE,KAAM,CAAElC,GAAIi5B,EAAEj5B,OAExD,IAEL,CAACuf,EAAgBta,IAGbkD,EAAoBlJ,sBAAY,IAAM,GACf,KAC1B,oBAGI,MAAO,CAAEG,OAAQ,iCACnBi2C,IAAK,YAAsB,QAASqC,WAClC2qB,GACC1jD,OAAOC,KAAKyjD,GAAyB9iE,IAAK2jE,mBACvC,IAAI,SAAUA,EAAO,MAAOA,WAC1Bb,KAAwBa,KAAxBb,cAAgC9iE,IAAK05B,KACnCqmC,IAEC,iBACA,iBACA,KAAMrmC,EACN,mBAAoB8pC,EACpB,0BAA2BP,EAC3B,uBAAwBQ,EACxB,mBAAoBJ,EACpB,cAAgBnlE,GAAM47C,EAAmB57C,EAAGw7B,IARvCA,EAAEj5B,MAH4BkjE,SAiB9ChpB,IAAY,IAAKkB,EAAY,QAASghB,IAEtC8F,IACER,IACC,QAASv5D,EACT,KAAM25D,EACN,SAAUE,IAEV,QAKV,KAAMmB,IAAkB9kE,eAAK+kE,gBAES,CAAExB,eAAmC,MACnE,CAAE1/D,OAAMqd,iBAAgBwD,aAAcnI,aAGzC,IAAsB1Y,OAAMqd,iBAAgBwD,YAAW6+C,gBCtO5D,KAAMphE,IAAwB,CAC5Bwd,SAAU,SACV5e,OAAQ,OACR/B,QAAS,OACTqzB,cAAe,SACfzwB,MAAO,QAGT,aAA6B,MACrB,CAACu8D,EAAW6G,GAAgBtkE,mBAAqB,IAEjDukE,EAAmBrkE,sBAAaxB,GAAM,GAC7BA,EAAEyE,KAAOzE,EAAEyE,KAAO,KAC9B,oBAGI,MAAO1B,eACT+iE,IAAmB,gBACnB,IAAc,YAAaD,OAKlC,OAAejlE,eAAKmlE,ICtBpB,KAAM,IAAkD,CACtD,KAAM,CAAE,KAAM,EAAG,GAAI,GACrB,KAAM,CAAE,KAAM,EAAG,GAAI,GACrB,KAAM,CAAE,KAAM,EAAG,GAAI,GACrB,KAAM,CAAE,KAAM,EAAG,GAAI,GACrB,WAAY,CAAE,KAAM,EAAG,GAAI,ICP7B,YACE,EACA,EACS,OAEP,IAAmB,IACnB,EAAW,OAAS,GAAmB,GAAgB,MACvD,EAAW,KAAO,GAAmB,GAAgB,GCezD,YAAqB,EAAyB,OACrC,GAAQ,MAAM,OAAO,GAG9B,YAAuB,EAAiB,EAAa,MAC7C,GAAQ93D,EACZ,EACA,SAAS,EAAY,iBACrB,SAGE,UACO,CAAE,MAAK,UAAW,OAEvB,IAAQ,mBACC,eAAiB,IAAQ,wBAClCA,EAAU,EAAO,GAAG,IAAO,IAAI,KAC7B,AAAC,GAAU,EAAgB,OAAO,GAAO,KAAO,EAAY,UAGvD,SAKN,MAGT,YACE,EACA,EACA,EACA,EACA,EACA,UACI,GAAY,EAAS,KAAK,YAAc,EAAG,MACvC,GAAS,GAAa,EAAU,EAAK,OAAO,OAC9C,EAAQ,MACJ,GAAY,EAAK,OAAS,IAAM,IAAM,IACtC,EAAQ,KAAO,KAAP,cAAmB,SAC7B,IAAU,aACL,GAAQ,GAAU,GAAY,EAAQ,GAAU,SAItD,GAGT,YACE,EACA,EACA,EACA,EACA,EACA,EACA,EACS,IACL,GAAY,EAAS,KAAK,YAAc,EAAG,MACvC,GAAS,GAAa,EAAU,EAAK,OAAO,OAC9C,kBAAQ,EAAE,QAAS,kBAAQ,EAAE,aAE7B,GAAO,EAAE,MAAQ,GAAU,GAC3B,EAAO,EAAE,MAAQ,GAAU,GAC3B,EAAO,EAAE,MAAQ,GAAU,GAC3B,EAAO,EAAE,MAAQ,GAAU,QAI1B,GAGT,YAAyB,EAAoB,UACvC,GAAe,IACf,EAAK,iBAAmB,QAAU,EAAK,iBAAmB,SAE1D,CAAC,EAAK,QAAU,EAAK,OAAO,OAAS,EACjC,IACA,IAAI,EAAK,OAAO,OAAS,EAAI,IAAM,MAEzC,EAAK,iBAAmB,QACxB,EAAK,iBAAmB,QACxB,EAAK,iBAAmB,UAET,IAEf,EAAK,iBAAmB,SACxB,EAAK,iBAAmB,UAET,MACN,EAAK,iBAAmB,eAClB,IACN,EAAK,iBAAmB,eAClB,UAGX,GAAiC,KAAK,OAAO,IAAZ,cAAe,cAClD,EAAY,MACR,GACJ,GAAmB,EAAK,iBACxB,EAAW,MAAQ,GAAmB,EAAK,gBAAgB,MAC3D,EAAW,MAAQ,GAAmB,EAAK,gBAAgB,IAC3D,EAAW,IAAM,GAAmB,EAAK,gBAAgB,MACzD,EAAW,IAAM,GAAmB,EAAK,gBAAgB,SAEpD,GAAG,IAAe,EAAuB,GAAK,YAGhD,GAGT,YAAwB,EAAM,OACrB,IAAU,OACZ,GADY,CAEf,OAAQ,OACH,EAAK,QADF,CAEN,MAAO,QAKb,YAAwB,EAAY,EAAiB,MAC7C,GAAU,EAAK,GAAG,MAAM,WACvB,IAAU,OACZ,GADY,CAEf,GAAI,EAAQ,IAAS,IAAM,EAAI,GAC/B,OACA,MAAO,GACP,OAAQ,OACH,EAAK,QADF,CAEN,MAAO,QAKb,YACE,EACA,EACA,EACA,EACa,MACP,GAAU,GAAW,GACrB,EAAeb,GAAgB,GAC/B,EAAQ,EAAK,GAAG,MAAM,WACxB,KAAW,SAEX,EACA,IAAY,EAAI,GAAe,GAAQ,GAAe,EAAM,IAErD,KAAW,UAAY,IAAW,cAChC,EAAc,IAAS,IAAM,EAAM,GAAK,EAAM,IAGpD,EAGT,YAA+B,CAC7B,kBACA,kBACA,4BACA,4BACA,SACA,OACA,gBASC,MACK,GAA0B,EAAa,KAC3C,AAAC,GAAgB,EAAY,KAAO,GAEhC,EAA0B,EAAa,KAC3C,AAAC,GAAgB,EAAY,KAAO,GAEhC,EAAiB,kBAAyB,MAAO,EAAgB,GACjE,EACJ,GAAmB,kBAAyB,MAAO,kBAAiB,IAChE,EAAU,GAAW,GAErB,EAAoC,GACpC,EAEF,MAEA,IAAW,WACT,IAAY,EAAG,MAEX,GAAmB,GACvB,EACA,EACA,IACA,aAGE,GACA,IACmB,GACnB,EAAiB,EAA0B,EAC3C,EACA,IACA,SAGmB,GAAiB,CACpC,SAAU,EAAgB,SAC1B,KAAM,CAAC,GAAe,QAGP,KAAK,EAAkB,KACd,eAAiB,WACpC,IAAY,EAAG,MAElB,GAAmB,GACvB,EACA,EACA,IACA,YAEiB,KAAK,QAClB,GAAmB,GACvB,EACA,EACA,IACA,YAEiB,KAAK,GAGpB,GAA2B,KACV,KACjB,GACE,EAAiB,EAA0B,EAC3C,EACA,IACA,UAGe,KACjB,GACE,EAAiB,EAA0B,EAC3C,EACA,IACA,SAIJ,GACA,IAA8B,SAEX,KACjB,GACE,EAAiB,EAA0B,EAC3C,EACA,IACA,UAGe,KACjB,GAAiB,CACf,SAAU,EAAgB,SAC1B,KAAM,CAAC,GAAe,EAAM,UAIhC,IAA8B,OAC9B,KAEmB,KACjB,GAAiB,CACf,SAAU,EAAgB,SAC1B,KAAM,CAAC,GAAe,EAAM,WAGb,KACjB,GACE,EAAiB,EAA0B,EAC3C,EACA,IACA,SAIJ,IAA8B,OAC9B,IAA8B,UAEX,KACjB,GAAiB,CACf,SAAU,EAAgB,SAC1B,KAAM,CAAC,GAAe,EAAM,WAGb,KACjB,GAAiB,CACf,SAAU,EAAgB,SAC1B,KAAM,CAAC,GAAe,EAAM,YAIN,eAAiB,YAEtC,IAAW,SAAU,MACxB,GAAmB,GACvB,EACA,EACA,IACA,eAEiB,KAAK,GACpB,GAAW,KAAU,EAAG,MACpB,GAAmB,GACvB,EACA,EACA,IACA,YAEiB,KAAK,QAEjB,KAAW,SAChB,IAAY,EACV,KACiB,KACjB,GACE,EACA,EACA,IACA,WAIG,IAAY,GACjB,GAA2B,MACV,KACjB,GACE,EACA,EACA,IACA,aAGe,KACjB,GACE,EACA,EACA,IACA,YAKC,IAAW,oBACD,KACjB,GAAiC,EAAiB,EAAM,QAEvC,KACjB,GAAiC,EAAiB,EAAM,aAIrD,CAAE,qBAAoB,+BAG/B,YACE,EACA,EACA,EACa,cACP,GAAeA,GAAgB,MAEjC,AADY,GAAW,KACX,EAAG,MACX,GAAe,EAAW,GAAG,MAAM,KAAK,IAAS,IAAM,EAAI,GAC3D,EAAQ,EAAa,KAAK,KAAK,AAAC,GAAS,EAAK,KAAO,MACvD,EAAO,MACH,GAAwB,KAAW,OAAO,IAAlB,cAAqB,WAE/C,GAAoB,EAAe,EAAM,oBACpC,EAAM,OAAO,mBAAG,WACnB,EAAM,OAAO,GAAK,OAAO,KAAK,EAAM,OAAO,GAAG,SAAW,SACpD,GAAM,OAAO,QAEf,GAAM,OAAO,aAEf,EAAM,OAAO,IAGV,OAAO,EAAE,WAAa,IAFtB,OAAO,EAAI,CAAE,WAAY,KAI3B,OAAO,WAAa,WAKzB,GAGT,YACE,EACA,EACU,GACK,EACZ,cACA,QAAQ,OAAQ,IAChB,MAAM,KACN,IAAI,AAAC,GAAW,IAAU,KAAO,MAAQ,GACzC,KAAK,OACO,EAAa,WAAW,KAAM,OAEzC,GAAmB,SAEnB,AADU,sBACJ,KAAK,OAEJ,EACN,MAAM,KACN,OAAO,AAAC,GAAS,EAAK,OAAS,GAC/B,IAAI,AAAC,GAAS,OAAO,OAKjB,EAAO,OACd,AAAC,GACC,QAAkB,eAAiB,EAAI,SAC9B,gBAAkB,GAAS,IAIjC,EAAO,OAAO,CAAC,EAAO,EAAG,IAAM,EAAE,QAAQ,KAAW,GAG7D,YACE,EACA,EACA,EACA,EACA,EACA,EACA,EACS,IACL,EAAY,SAAW,IAKzB,IAAmB,MACnB,CAAC,EAAY,KAAK,KAAK,AAAC,GAAS,EAAK,eAAiB,EAAe,UAE/D,QAGH,GAAkB,EAAU,MAAM,KAAK,IAAI,AAAC,GAAQ,GAAY,IAEhE,EAAS,IACT,EAAW,EAAQ,GAAK,EACxB,EAAW,EAAQ,GAAK,EACxB,EAAW,EAAQ,GAAK,EACxB,EAAW,EAAQ,GAAK,KAE1B,IAAkB,EAAe,MAAO,MACpC,GAAc,EAAY,KAAK,KAAK,AAAC,GAAS,GAAW,KAAU,MACrE,CAAC,QACI,MAEL,GAAQ,GAAa,MACrB,IAAU,aACL,SAEA,EAGP,AAFe,GAAa,EAAa,EAAY,aAAc,KAGnE,EAAgB,KAAO,EAAY,UACnC,GAAS,GACT,GAAS,GAMT,EAAY,KAAK,KAAK,AAAC,GAAS,MACxB,GAAW,GACf,EACA,EAAK,aACL,UAEK,IAAkB,EAAU,EAAM,EAAQ,EAAU,WAGtD,WAEA,IAAkB,EAAe,MAAO,IAC7C,CAAC,EAAgB,SAAS,EAAY,gBACjC,QAEH,GAAc,EAAY,KAAK,KAAK,AAAC,GAAS,GAAW,KAAU,MACrE,CAAC,QACI,QAEH,GAAW,GACf,EACA,EAAY,aACZ,OAIA,GACE,EACA,EACA,EACA,EACA,EACA,EACA,SAGK,MAIL,EAAY,KAAK,KAAK,AAAC,GAAS,MACxB,GAAW,GACf,EACA,EAAK,aACL,UAEK,IACL,EACA,EACA,EACA,EACA,EACA,EACA,WAIG,SAKN,GC9iBT,YAAkB,CAAE,eAA2B,MACvC,CACJ,KAAM,EACN,UACA,UACA,gBACA,YACA,kBACE,UAEG9N,mBACL,IACE,GACE,EACA,EACA,EACA,EACA,EACA,EACA,GAEJ,CACE,EACA,EACA,EACA,EACA,EACA,EACA,ICnCN,KAAMyD,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAkCf,YAA8B,CAC5BonE,cACAC,aAC4B,MACtBC,GAAkB1kE,sBACrBxB,GAAM,GACH4qB,mBACA1iB,uBAIJ,CAAC+9D,UAIDvmE,UAAK,IAAKqD,aACRpD,gBAAIqmE,IACJrmE,YAAQ,KAAK,SAAS,QAASumE,0BC5CrC,KAAMC,IAAwBvnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA4C9B,YAAwB,CAAE4pB,SAAQ49C,iBAAgBC,UAAsB,kBAChE,CAACh6C,EAAMi6C,GAAWhlE,mBACtBknB,MAAO1F,IAAP0F,cAAU+9C,cAAerpD,OACpBsL,EAAO1F,EAAEyjD,WAAsBl6C,KAChCm6C,OAAmBJ,KAAnBI,cAAoCn6C,OAAQ,GAE5C,CAACE,EAAIk6C,GAASnlE,mBAClBknB,MAAO1F,IAAP0F,cAAU+9C,cAAerpD,OACpBsL,EAAO1F,EAAEyjD,WAAsBh6C,GAChCi6C,OAAmBJ,KAAnBI,cAAoCj6C,KAAM,GAE1C,CAACm6C,EAASC,GAAcrlE,mBAAkB,IAE1CslE,EAAeplE,sBAAY,IAAM,MAC/B+kE,GAAqB,CACzBl6C,OACAE,MAEIs6C,EAAyB,OAC1Br+C,GAD0B,CAE7B1F,EAAG,OACE0F,EAAO1F,GADT,CAEDyjD,mBAIGM,IACN,CAACt6C,EAAIF,EAAMg6C,EAAQ79C,+BAEZ,IAAM,GACH6D,GAAQ,GAAKA,EAAOE,IAC9B,CAACA,EAAIF,IAGN3sB,SAAK,IAAKymE,aACRxmE,iFACAD,SAAK,UAAU,4BACbC,EAAC,GACC,MAAM,OACN,MAAO,CACL4hB,MAAO,CACL7e,YAAa,MACbW,SAAU,OACVS,WAAY,oBAIhBnE,EAAC,IACC,KAAK,SACL,MAAO0sB,EACP,SAAWrsB,GAAM,GACP4uB,OAAO5uB,EAAEq+B,OAAOlU,SAE1B,MAAO,CAAE6kB,MAAO,CAAExrC,MAAOkjE,EAAU,MAAQ,cAG/C/mE,EAAC,GACC,MAAM,OACN,MAAO,CACL4hB,MAAO,CACL7e,YAAa,MACbW,SAAU,OACVS,WAAY,oBAIhBnE,EAAC,IACC,KAAK,SACL,MAAO4sB,EACP,SAAWvsB,GAAM,GACT4uB,OAAO5uB,EAAEq+B,OAAOlU,gBAK7Bu8C,EACChnE,OAAG,UAAU,8EAC6C,OAG1DC,EAAC,IAAO,KAAK,SAAS,QAASinE,EAAc,SAAUF,sBChI/D,KAAMI,IAAiBloE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA2CvB,YAAkB,CAChBmoE,kBACAC,kBACA3jC,OACA4jC,eACAZ,UACgB,MACV,CAACa,EAA2BC,GAChC7lE,mBAAiBylE,EAAgBxkE,IAC7B,CAAC6kE,EAA2BC,GAChC/lE,mBAAiB0lE,kBAAiBzkE,KAAM2a,mBAEboqD,EAA0B,MAC/CpgD,GAAQqgD,GAAoBD,SAC1B,GAAEpgD,EAAQA,EAAM4H,QAAQ,GAAK,WAGjC04C,GAAehmE,sBACnB,CAAC8lE,EAA0BG,IAAe,MAClCC,GAAgBT,EAAa7lD,OAAO,CAACumD,EAAKC,IAE5CA,GAAaC,SAAW,IACxBD,EAAaE,WAAazkC,EAAKykC,SAASL,MAEpCvnE,KAAK,CACPohB,IAAKsmD,EAAarlE,GAClB4nB,MAAOy9C,EAAarlE,GACpBgf,MAAQ,GAAEqmD,EAAarmD,MAAMwmD,WAAWC,EACtCJ,OAICD,GACN,aACWznE,KAAK,CACjBohB,IAAK,MACL6I,MAAO,MACP5I,MAAQ,eACG,EACLgmD,GAAoBR,GACpBQ,GAAoBP,IACxBl4C,QAAQ,OAIVnvB,EAAC,IACC,SAAU,AAACsoE,GAAsB,CAC3BR,IAAQ,IACmBQ,KAEAA,IAGjC,KAAMP,EACN,aAAcJ,EAAY/kE,GAC1B,MAAO,CACLC,MAAO,IACPb,OAAQ,GACRue,OAAQ,EACRrc,OAAQ,qBAKhB,CAACkjE,EAAiBC,EAAiBC,EAAc5jC,EAAKykC,iBAItDpoE,UAAK,IAAKonE,aACRnnE,gEACAA,sEACAD,SAAK,UAAU,gCACZ8nE,EAAaT,EAAiB,GAC9BC,GAAmBQ,EAAaR,EAAiB,MAEpDrnE,YACE,KAAK,SACL,QAAS,IACP0mE,EAAOa,EAA2BE,wBClH5C,KAAMc,IAAiBtpE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,cA4De,CACpCmoE,kBACAC,kBACA3jC,OACA4jC,eACApyC,UACAwxC,UACC,MACK,CAAC/gD,EAAW6iD,GAAgB7mE,mBAAiB,QAE7C8mE,EAAe5mE,sBAAY,IAAM,MAC/B6mE,GAAUC,GAAWjlC,SACvBglC,KAAY,EACN,QAAOhlC,EAAK7a,OAAOtB,MAAM4H,QAAQ,MAChCu5C,IAAY,EACb,GAAEhlC,EAAK7a,OAAOxf,EAAK,GAAEq6B,EAAK7a,OAAOxf,EAAEke,MAAM4H,QAAQ,KAAO,QAC9Di4C,EAAgBxlD,MAAMwmD,YAClB1kC,EAAK7a,OAAOvf,EAAIo6B,EAAK7a,OAAOvf,EAAEie,MAAM4H,QAAQ,GAAK,QACrDk4C,EAAgBzlD,MAAMwmD,UAInB,IACN,CAAChB,EAAgBxlD,MAAMwmD,OAAQ1kC,EAAM2jC,IAElCJ,EAAeplE,sBACnB,CACEsI,EACAo9D,EACAE,EACAmB,IACG,MACG,CAAEC,qBAAoBC,+BAC1BC,GAAsB,CACpB3B,kBACAC,kBACAE,4BACAE,4BACAt9D,SACAu5B,KAAMklC,GAAcllC,EACpB4jC,mBAGFuB,EACA1+D,EACAy+D,GAAcllC,EACdolC,iBAKJ,CAAC1B,EAAiBC,EAAiBC,EAAc5jC,EAAMxO,EAASwxC,IAG5DsC,EAAgBrpE,kBACpB,IACEK,SAAK,UAAU,0BACbD,EAACk4C,IACC,SAAUR,GAAcwxB,IACxB,YACA,QAAUtxB,GAAQ6wB,EAAa7wB,EAAIP,iBAEnCp3C,EAAC,IAAI,SAAS,OAAO,MAAO,gBAC1BA,EAAC,IACC,kBACA,kBACA,OACA,eACA,OAAQ,CAACkpE,EAAmBC,IAC1BlC,EAAa,OAAQiC,EAAmBC,OAI9CnpE,EAAC,IAAI,SAAS,SAAS,MAAM,kBAC3BA,EAAC,IACC,YAAY,4CACZ,UAAW,IACTinE,EAAa,SAAUG,EAAgBxkE,GAAIykE,EAAgBzkE,QAIjE5C,EAAC,IAAI,SAAS,SAAS,MAAO,kBAC5BA,EAAC,IACC,YAAY,sBACZ,UAAW,IAAMinE,EAAa,SAAU1pD,OAAWA,YAGvDvd,EAAC,IAAI,SAAS,aAAa,MAAO,yBAChCA,EAAC,IACC,OAAQ0jC,EAAK7a,OACb,eAAgB6a,EAAK+iC,eACrB,OAASS,GAAiB,MAClB0B,GAAa,OAAKllC,GAAL,CAAW7a,OAAQq+C,MAEpC,gBACAE,EACAC,EACAuB,aAQd,CACEjjD,EACAyhD,EACAC,EACAC,EACAL,EACAvjC,UAKF3jC,UAAK,IAAKwoE,aACRxoE,SAAK,UAAU,0BACbC,EAACq6B,IAAY,QAASnF,IACtBl1B,OAAG,UAAU,uBAAgB,GAAE0jC,EAAK+iC,eAAe2C,2BAA2BX,WAE/EO,KCrLP,YAAgC,CAC9B1gD,cACA+gD,mBACA1B,cACAjB,UACC,YACK1oB,GAAa71C,mBACbmvB,EAAQ8U,KAERk9B,EAA+B3pE,kBAAQ,IAAM,IAC7CgoE,EAAYO,SAAW,SAClB,QAEHp+C,GAAgB,YACV4Z,KAAK3b,QAAS2b,GAAS,IAC7BA,EAAKwkC,SAAW,GAAO,GACrB3nE,KAAKmjC,EAAK7a,OAAOjmB,MACjBrC,KAAK6qB,GAAQsY,EAAK7a,OAAOjmB,GAAI,qBAC3BklB,GAAMyhD,GACVjhD,EACAob,EAAK8lC,aACL9lC,EAAK7a,OAAOjmB,GACZ,IAEEklB,KACEvnB,KAAKunB,MAKRgC,GACN,CAAC69C,EAAar/C,IACXmhD,EAA4Bl+C,GAAa+9C,GAEzC7/B,EAAoB5nC,sBACvBwG,GAAU,GACHW,cAAc0gE,UACMjkD,QAE5B,CAACgkD,IAEG1+D,EAAoBlJ,sBACvBwG,GAAU,GACHW,cAAci4B,SACMlW,QAE5B,CAAC0+C,IAGGhL,EAAWkL,GAAS,CAAEhC,gBAEtBiC,EAAmBjqE,kBAAQ,IACxB,EACL2H,MAAO,CACAzD,MAAOgmE,GAAcR,EAAkB1B,IAAgBpqD,OAC5Dva,gBAAiBymE,EAA0BjnD,SACvC,YACAi8C,EACA,UACA,WAENrlC,MACEuuC,EAAYO,SAAW,IACvBP,EAAYjkC,KACTjiB,OAAO,CAACumD,EAAKtkC,IAEVA,GAAKwkC,SAAW,IAChB,CAACF,EAAIroD,SAAS+jB,EAAK+iC,eAAe2C,kBAE9B7oE,KAAKmjC,EAAK+iC,eAAe2C,eAExBpB,GACN,IACFtmC,OACAkC,KAAK,KACVja,aAAc8f,EACd7f,aAAc7e,IAEf,CACD48D,EACA0B,EACAI,EAA0BjnD,SAC1Bi8C,EACAh1B,EACA1+B,IAGI++D,EAAuBnqE,kBAAQ,IAC5BgoE,EAAYoC,OAAOC,YACtB,CAAEhnE,gBAAiB,WACnB,CACEa,MAAOorB,OAAOg7C,UAAUtC,EAAYqC,aAChCrC,EAAYqC,cAAgB,EAC1B,UACA,QACF,OAET,CAACrC,IAEE3I,EAAcr/D,kBAAQ,IACnBgoE,EAAYO,SAAW,GAC1BP,EAAYjkC,KACT1f,OAAQ0f,GAASilC,GAAWjlC,KAAU,GAAKA,EAAKwkC,SAAW,IAC3D/lE,IAAKuhC,GAAS,aACN,CACL9hB,MAAQ,YAAW8hB,EAAK7a,OAAOtB,MAAM4H,QAAQ,KAC3CuU,MAAKqmC,SAALrmC,cAAawmC,SAAU,GAAO,UAAY,MAE5CxiE,QAAS,IAAM,GACaqjB,SACpBtF,KACJzlB,EAAC,IACC,QAAS,IAAMs3B,EAAMhC,QACrB,SACA,OACA,gBAAiBqyC,EACjB,gBAAiBpqD,OACjB,aAAc8rD,EAAiBviD,SAEjC,CAAEhlB,SAAUyxB,GAAUM,aAAcmE,iBAAkB,SAK7DrM,OAAO,CACN,CACE/J,MAAQ,eAAc+lD,EAAY/lD,MAAMwmD,UACxC1gE,QAAS,IAAM,GACPwwB,kBAAkB,CACtB/C,QAAU,kBAAiBwyC,EAAY/lD,MAAMwmD,WAC3CR,GAAoBD,GACpBx4C,QAAQ,qCACV6H,QAAS,CACP,CACEI,KAAM,MACNF,QAAS,IAAM,GACN,CAACywC,GAAc,eAG1B,CAAEvwC,KAAM,WAGcrM,WAIlC,GACH,CACD48C,EACA0B,EAAiBviD,OACjB2iD,EACAnyC,EACAovC,IAGIzqB,EAAqBp6C,sBACxBxB,GAAM,GACH4qB,mBACSxhB,QAAQgzC,kBAAkBp8C,IAEvC,CAAC29C,IAG2B4rB,IAAtBxwC,UAAsBwwC,EAAZO,IAAYP,EAAZO,CAAV/wC,gBAGNp5B,eAAQmqE,IAAS,MAAO/wC,IAAU,GAAQ7b,OAAY6b,WACpDr5B,SACE,MAAO,CAAEE,QAAS,SAClB,cAAgBI,GAAM,CAChB2+D,EAAY38D,OAAS,KACJhC,cAIvBL,gBAAI2nE,EAAY/lD,MAAMwmD,SACtBpoE,gBACG4nE,GAAoBD,GACjBC,MAAoBD,KAApBC,cAAkCz4C,QAAQ,GAC1C,KAENnvB,OAAG,MAAO8pE,WACP76C,OAAOg7C,UAAUtC,EAAYqC,aAC1BrC,EAAYqC,YACZrC,EAAYqC,YAAY76C,QAAQ,KAEtCnvB,EAAC88C,IAAY,IAAKkB,EAAY,QAASghB,UCvL/C,YAA+B,CAC7BoL,iBACAC,oBACAC,cACAhD,eACAh/C,cACAo+C,UACC,MACK1oB,GAAa71C,mBACbmvB,EAAQ8U,KAERm+B,EAA0B5qE,kBAAQ,IAAM,MACtCmqB,GAAkB,YACZ/B,QAAQ,AAAC2b,GAAe,IAC9BA,EAAKwkC,SAAW,GAAO,GACrB3nE,KAAKmjC,EAAK7a,OAAOjmB,MACjBrC,KAAK6qB,GAAQsY,EAAK7a,OAAOjmB,GAAI,mBAC3BklB,GAAMyhD,GACVjhD,EACAob,EAAK8lC,aACL9lC,EAAK7a,OAAOjmB,GACZ,IAEEklB,KACEvnB,KAAKunB,MAKRgC,GACN,CAACwgD,EAAahiD,IACXkiD,EAAuBj/C,GAAag/C,GAEpC9gC,EAAoB5nC,sBACvBwG,GAAU,GACHW,cAAc0gE,UACCjkD,QAEvB,CAAC+kD,IAEGz/D,EAAoBlJ,sBACvBwG,GAAU,GACHW,cAAci4B,SACClW,QAEvB,CAACy/C,IAGGvuB,EAAqBp6C,sBACxBxB,GAAM,GACH4qB,mBACSxhB,QAAQgzC,kBAAkBp8C,IAEvC,CAAC29C,IAGGysB,EAAuB5oE,sBAC3B,CAACsI,EAA0Bu5B,IAAgB,MACnCgnC,GAAsBN,EAAe1mC,KAAK1f,OAC7C2mD,MACQlE,iBAAmB,QACxBkE,EAAMlE,iBAAmB,SAC3BkE,EAAMzC,SAAW,IACnB7lE,UAEEuoE,GACAC,KACA1gE,IAAW,MAAO,MACd2gE,GAAmBC,GAAU,CACjCtE,eAAgB,OAChB+C,aAAc7O,IACdwN,SAAU,CAACkC,EAAkBlC,SAAUiC,EAAejC,UACtDvlE,GAAI+3D,IACJuN,OAAQ,GACRr/C,OAAQ,CAAEjmB,GAAI+3D,IAAc/6C,KAAM,OAEjBorD,GACjBX,EACAS,EACA,IACA,SAEiBE,GACjBZ,EACAU,EACA,IACA,OAGGD,EAAiBd,OAAOkB,iBACVA,aAAe,CAACP,EAAsB,WAGtCM,GACjBX,EACA3mC,EACA,IACA,YAEiBsnC,GACjBZ,EACA1mC,EACA,IACA,UAGGmnC,EAAiBd,OAAOkB,iBACVA,aACfP,EAAsB,EAAI,EAAI,CAACA,EAAsB,GAAK,MAIzD,CAACE,EAAkBC,GAAmB1gE,EAAQu5B,EAAM,CACzDwnC,eAAgB,MAGpB,CAACb,EAAmB3D,EAAQ0D,IAGxBpL,EAAcr/D,kBAAQ,IAAM,MAE1BwrE,GAAkBb,EACrBnoE,IAAKipE,GAAe,YACbC,GAA8B,GAAEC,GAAgBF,OACpDA,EAAWviD,OAAOxf,EAAI+hE,EAAWviD,OAAOxf,EAAEke,MAAM4H,QAAQ,GAAK,QAE7Di8C,EAAWviD,OAAOvf,EAAI8hE,EAAWviD,OAAOvf,EAAEie,MAAM4H,QAAQ,GAAK,OAC3Di8C,MAAWrB,SAAXqB,cAAmBlB,SAAU,GAAO,UAAY,WAE7CkB,GAAWlD,SAAW,GACzB,CACE,CACEtmD,MAAQ,QAAOypD,IACf3jE,QAAS,IAAM,GACQqjB,SACftF,OACH,IACC,QAAS,IAAM6R,EAAMhC,QACrB,SACA,KAAM81C,EACN,gBAAiBf,EACjB,gBAAiBD,EACjB,iBAEF,CACEtoE,SAAUyxB,GAAUM,aACpBmE,iBAAkB,QAM5B,KAELjR,OAEGwkD,EAAuBjB,EAAYt5C,KACtCo6C,GACCA,EAAWlD,SAAW,IAAQkD,EAAW3E,iBAAmB,cAE5D2D,GAAelC,SAAW,KACxBqD,IACchrE,KAAK,CACnBqhB,MAAO,qBACPla,QAAS,IAAM+iE,EAAqB,SAAUc,OAGhChrE,KAAK,CACnBqhB,MAAO,kBACPla,QAAS,IAAM+iE,EAAqB,UAKnCU,GACN,CACDd,EACAC,EACAhD,EACAmD,EACAD,EACAlzC,EACAovC,EACA0D,IAGIoB,EAAe7rE,kBACnB,IACE2qE,EAAYnoE,IAAI,CAACipE,EAAYpoD,kDAGvB,MAAO,CACLnf,MACEunE,EAAWlD,SAAW,IAAQkD,MAAWrB,SAAXqB,cAAmBlB,SAAU,GACvD,OACA,kBAGPoB,GAAgBF,KAElBpoD,EAAIsnD,EAAYjoE,OAAS,+BAXhB+oE,EAAWxoE,MAc3B,CAAC0nE,IAGGlxC,EAAQz5B,kBACZ,IACE2qE,EACG7oD,OAAO,CAACumD,EAAKtkC,IACPskC,GAAIroD,SAAS+jB,EAAK+iC,eAAe2C,kBAChC7oE,KAAKmjC,EAAK+iC,eAAe2C,eAExBpB,GACN,IACFpkC,KAAK,KACV,CAAC0mC,IAGGmB,EAAc9B,GAAS,CAAEhC,YAAayC,IACtCsB,EAAiB/B,GAAS,CAAEhC,YAAa0C,mBAI3C,cAAgBhqE,GAAM,CAChB2+D,EAAY38D,OAAS,KACJhC,IAGvB,MAAO,CACL2C,gBAAiBwnE,EAAqBhoD,SAClC,YACAkpD,GAAkBD,EAClB,UACA,WAEN,QACA,aAAchiC,EACd,aAAc1+B,YAEbygE,IACA1uB,IAAY,IAAKkB,EAAY,QAASghB,OC7O7C,YAA6B,CAC3B2M,uBACArE,eACAK,cACAiE,WACAC,aACAC,yBACAC,0BACAC,oCACA1jD,eACC,YACK01B,GAAa71C,mBACbmvB,EAAQ8U,KAER6/B,EAAkBtsE,kBAAQ,IAAM,IAChCgoE,EAAYO,SAAW,SAClB,QAEHp+C,GAAgB,YAEV4Z,KAAK3b,QAAS2b,GAAS,IAC7BA,EAAKwkC,SAAW,GAAO,GACrB3nE,KAAKmjC,EAAK7a,OAAOjmB,MACjBrC,KAAK6qB,GAAQsY,EAAK7a,OAAOjmB,GAAI,qBAC3BklB,GAAMyhD,GACVjhD,EACAob,EAAK8lC,aACL9lC,EAAK7a,OAAOjmB,GACZ,IAEEklB,KACEvnB,KAAKunB,MAKRgC,GACN,CAAC69C,EAAar/C,IACX4jD,EAAe3gD,GAAa0gD,GAE5BE,EAA4BtqE,sBAC/BxB,GAAM,GACkBsnE,EAAatnE,EAAEq+B,OAAOlU,QAE/C,CAACm9C,EAAamE,IAGVM,EAAiCvqE,sBACrC,CAACxB,EAAGshB,IAA0C,GACpB,CACtBgmD,cACA7gD,OAAQulD,GAAoBhsE,EAAEq+B,OAAOlU,MAAO7I,GAC5CA,SAGJ,CAACgmD,EAAaoE,IAGVO,EAAyB3sE,kBAAQ,IAC9BgsE,EAAqBxpE,IAAK8lE,GAAiB,MAC1CqC,GAAsB,YAChB5mC,KAAK3b,QAAS2b,GAAS,GACpBA,KAAK3b,QAAS4iD,GAAU,IAEjCjnC,EAAKxd,OAASykD,EAAMzkD,MACpBwd,EAAK8lC,eAAiBmB,EAAMnB,cAC5B9lC,EAAK7a,OAAOjmB,KAAO+nE,EAAM9hD,OAAOjmB,IAChC,CAAC0nE,EAAYljD,KACVmlD,GAAgBA,EAAY1jD,OAAOjmB,KAAO8gC,EAAK7a,OAAOjmB,IAEzD,IACI4pE,GAAkB9oC,EAAK+iC,eACvB/iC,EAAK7a,QAAU6a,EAAK7a,OAAOjJ,OAAS,OACnB8jB,EAAK7a,OAAOjJ,OAAS,EAAI,OAAS,UAE3Crf,KACVwqE,GAAU,OACLrnC,GADK,CAER8oC,kBACAtmD,KAAM3I,OACN3a,GAAK,GAAE+nE,EAAM/nE,MAAM8gC,EAAK9gC,gBAQ/B,IAEC,eAAgB+kE,EAChB,kBAAmBM,EACnB,cACA,eACA,cACA,OAAQ+D,GANF,cAAarE,EAAY/kE,MAAMqlE,EAAarlE,QAUvD,CACD+oE,EACAhE,EACAL,EACA0E,EACA1jD,IAGImkD,EAAuB9sE,kBAAQ,IAC5BgoE,EAAYoC,OAAOC,YACtB,CAAEnmE,MAAO,QACT,CACEA,MAAO8jE,EAAYqC,cAAgB,EAAI,UAAY,SAExD,CAACrC,IAEEl+B,EAAoB5nC,sBACvBwG,GAAU,GACHW,cAAc0gE,UACPjkD,QAEf,CAACymD,IAEGnhE,EAAoBlJ,sBACvBwG,GAAU,GACHW,cAAci4B,SACPlW,QAEf,CAACmhD,IAGGzN,EAAWkL,GAAS,CAAEhC,gBAEtB+E,EAAiB/sE,kBAAQ,IACtB,EACL2H,MAAO,OACFskE,GADE,CAEL5oE,gBAAiBkpE,EAAa1pD,SAC1B,YACAi8C,EACA,UACA,YAENrlC,MACEuuC,EAAYO,SAAW,IACvBP,EAAYjkC,KACTjiB,OAAO,CAACumD,EAAKtkC,IAEVA,GAAKwkC,SAAW,IAChB,CAACF,EAAIroD,SAAS+jB,EAAK+iC,eAAe2C,kBAE9B7oE,KAAKmjC,EAAK+iC,eAAe2C,eAExBpB,GACN,IACFtmC,OACAkC,KAAK,KACVja,aAAc8f,EACd7f,aAAc7e,IAEf,CACD48D,EAAYjkC,KACZikC,EAAYO,OACZgE,EAAa1pD,SACbi8C,EACAh1B,EACA1+B,EACA6gE,IAGI5M,EAAcr/D,kBAAQ,IACnBgoE,EAAYO,SAAW,GAC1BP,EAAYjkC,KACT1f,OAAQ0f,GAASilC,GAAWjlC,KAAU,GAAKA,EAAKwkC,SAAW,IAC3D/lE,IAAKuhC,GAAS,aACN,CACL9hB,MAAQ,YAAW8hB,EAAK7a,OAAOtB,MAAM4H,QAAQ,MAC3CuU,MAAKqmC,SAALrmC,cAAawmC,SAAU,GAAO,UAAY,KAE5CxiE,QAAS,IAAM,GACAqjB,SACPtF,OACH,IACC,QAAS,IAAM6R,EAAMhC,QACrB,OAAQ02C,EACR,OACA,gBAAiBrE,EACjB,gBAAiBpqD,OACjB,iBAEF,CACEzb,SAAUyxB,GAAUM,aACpBmE,iBAAkB,SAM3BrM,OAAO,CACN,CACE/J,MAAQ,UAAS+lD,EAAY/lD,MAAMwmD,SACnC1gE,QAAS,IAAM,GACPwwB,kBAAkB,CACtB/C,QAAU,kBAAiBwyC,EAAY/lD,MAAMwmD,WAC3CR,GAAoBD,GACpBx4C,QAAQ,qCACV6H,QAAS,CACP,CACEI,KAAM,MACNF,QAAS,IAAM,GAEX,CAACywC,GACD,eAIN,CAAEvwC,KAAM,WAGCrM,WAIrB,GACH,CACD48C,EACAuE,EACA50C,EACA00C,EACA1E,IAGIrrB,EAAqBp6C,sBACxBxB,GAAM,GACH4qB,mBACSxhB,QAAQgzC,kBAAkBp8C,IAEvC,CAAC29C,IAGuC0uB,IAAlCtzC,UAAkCszC,EAAxBC,IAAwBD,EAAxBC,CAAVvzC,UACFwzC,EAAKxzC,GAAQ,kBAGb,MAAOwyC,wBAEP,MAAOgB,GAEFD,IACHrlE,MAAO,OAAKolE,EAAeplE,OAApB,CAA2BukE,eAEpC,cAAgBxrE,GAAM,CAChB2+D,EAAY38D,OAAS,KACJhC,cAItBivB,GAASg4C,EAAcK,KACvB7qB,IAAY,IAAKkB,EAAY,QAASghB,oBAErC,MAAO4N,GAAOD,aACf/E,GAAoBD,GACjBC,MAAoBD,KAApBC,cAAkCz4C,QAAQ,GAC1C,kBAEF,MAAOy9C,GAAOD,aACfhF,EAAYO,SAAW,GACtBP,EAAYQ,WAAa,MACtBvsB,IACC,KAAK,SACL,MAAO+rB,EAAYqC,YACnB,MAAOyC,EACP,OAAQN,cAGJ,MAAOM,WAAuB9E,EAAYqC,cAGlD,kBAGA,MAAO4C,GAAOD,aACfhF,EAAYQ,WAAa,MACvBvsB,IACC,KAAK,OACL,MAAO+rB,EAAYsD,aAAarnC,KAAK,KACrC,MAAO+jC,EAAYoC,OAAOkB,aAAe,CAAEpnE,MAAO,QAAW,GAC7D,OAASxD,GAAM+rE,EAA+B/rE,EAAG,kBAGnD,kBAIF,MAAOusE,GAEFD,IACHrlE,MAAO,OAAKolE,EAAeplE,OAApB,CAA2BulE,YAAa,uBAGhDlF,EAAYQ,WAAa,MACvBvsB,IACC,KAAK,OACL,MAAO+rB,EAAYmF,cAChB3qE,IAAK4qE,GAAY,KAAIA,KACrBnpC,KAAK,KACR,MAAO+jC,EAAYoC,OAAO+C,cAAgB,CAAEjpE,MAAO,QAAW,GAC9D,OAASxD,GAAM+rE,EAA+B/rE,EAAG,mBAGnD,MAGHisE,KCnUP,KAAMpO,IAAaj/D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA8CnB,YAA0B,CACxBoqE,mBACA2D,2BACArB,uBACAsB,8BACAlB,0BACAC,oCACAkB,oBACA5kD,eACC,MACKusB,GAAOl1C,kBAAQ,IACdqtE,EAIEA,EAAyBlmD,OAC7B9C,OAAO,AAAC2jD,GACPuF,EACIvF,EAAYQ,WAAa,IACzBR,EAAYQ,WAAa,KAE9BhmE,IAAI,AAACwlE,GACJ3nE,EAAC,IACC,uBACA,aAAcqpE,EAAiBviD,OAC/B,cAEA,SAAU,CAAE9jB,gBAAiB,aAC7B,WACE2kE,EAAYQ,WAAa,IACrB,CACEtkE,MAAOgmE,GAAcR,EAAkB1B,IAEzC,GAEN,uBAAwBsF,EACxB,0BACA,oCACA,eAZM,cAAatF,EAAYQ,WAAWR,EAAY/kE,OAdnD,GA6BR,CACDoqE,EACAE,EACAvB,EACAtC,EACA4D,EACAlB,EACAC,EACA1jD,IAGI6kD,EAAyBxtE,kBAC7B,IACEgsE,EAAqBxpE,IAAI,AAACwlE,GACxB3nE,EAAC,IAEC,cACA,mBACA,cACA,OAAQgsE,GAJF,+BAA8BrE,EAAY/kE,OAOtD,CACE+oE,EACAtC,EACA2C,EACA1jD,UAKFtoB,UAAK,IAAKk+D,YACRn+D,qBACEC,oBACED,kBACEC,0BACAA,kCACAA,2BACAA,wBACAA,QAAI,MAAO,CAAE6sE,YAAa,iCACzBM,OAGLntE,oBAAQ60C,SCrIhB,KAAMzxC,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAoBf,YAAkB,CAAEoqE,oBAAmC,IACjD,CAACA,QACI,WAGHxvB,GAAQuzB,GAAc/D,EAAiBlrD,QAAQs7B,IAE/C0S,EACJ5qC,OAAOC,KAAKq4B,GAAOx3C,OAAS,EAC1Bkf,OAAOC,KAAKq4B,GAAO13C,IAAI,CAACgmE,EAAUnlD,IAAM,MAChCqqD,GAAgBhE,EAAiBzhE,MAAMugE,GACvCrkE,EAAQupE,EAAgBA,EAAcvpE,MAAQyZ,OAC9C+vD,EAAkBxpE,EACpBypE,GAAO/rC,UAAWgsC,GAAW1pE,EAAM0pE,KAAYjwD,QAC/C,cAGFvd,WAGE,MAAO,CACL6D,MAAOwpE,EACHA,EAAcI,WAAa,MACzB3pE,GAASyd,OAAOC,KAAK1d,GAAOzB,SAAW,GACvC,QACAirE,GAAmB,EACnBI,GAAYJ,GAAiBzpE,MAC7B,QACF,kBAGJ,GAAEskE,MAAakF,EAAgBA,EAAc5jE,QAAU,OACvDowC,EAAMsuB,SAbF,kBAAiBnlD,OAmB7BhjB,OAAG,MAAO,CAAE2tE,UAAW,SAAU9pE,MAAO,0DAKrC7D,UAAK,IAAKoD,YAAS+oD,IAG5B,OAAelrD,eAAK2sE,ICnEpB,KAAMC,IAAa5uE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAiCnB,YAA+B,CAC7B2yC,SAAS,IAAM,KACfk8B,cAC6B,MACvB,CAACr0B,EAAIs0B,GAASpsE,mBAAS,IACvB,CAACqsE,EAAWC,GAAgBtsE,mBAAS,IACrC,CAACusE,EAAYC,GAAiBxsE,mBAAS,IAEvCysE,EAAUvsE,sBAAY,AAAC43C,GAAe,IACtCA,EAAG9I,OAAOtuC,SAAW,QAChB,MAEL,WACao3C,GACR,eAEA,KAER,IAEG7I,EAAkB/uC,sBACrBxB,GAAM,GACS,IACV+tE,EAAQ/tE,EAAEq+B,OAAOlU,UACN,MACPnqB,EAAEq+B,OAAOlU,WAEF,MACP,MAGV,CAAC4jD,IAGGC,EAAgBxsE,sBAAY,IAAM,GAC/BqsE,EAAaz0B,EAAG9I,OAASm9B,IAC/B,CAACI,EAAYz0B,EAAI7H,EAAQk8B,UAG1B/tE,UAAK,IAAK8tE,aACR7tE,WAAO,KAAK,OAAO,SAAU4wC,EAAiB,aAAck9B,IAC5D9tE,YAAQ,KAAK,SAAS,QAASquE,EAAe,SAAU,CAACL,WACtDA,EAAY,MAAQ,eCzE7B,KAAMzF,IAAiBtpE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,cA2E0B,CAC/Ci2B,UACA0c,SACAqH,YACA60B,cACgC,MAC1B,CAAC50B,EAAcC,GAAmBx3C,mBAAiB,uBAE/C,IAAM,CACVs3C,GAAaA,EAAU52C,OAAS,KAClB,IAEjB,CAAC42C,SAEEq1B,GAAqCzsE,sBACxC43C,GAAO,YACGA,iBAGX,CAACvkB,EAAS0c,IAGN28B,EAAiC1sE,sBAAY,IAAM,YAC9Co3C,EAAUC,GAAcO,kBAEhC,CAACP,EAAcD,EAAW/jB,EAAS0c,IAEhC48B,EAAmC3sE,sBAAa2hB,GAAU,GAC9CA,IACf,UAGDzjB,UAAK,IAAKwoE,aACRvoE,SAAK,UAAU,yBACbA,EAACq6B,IAAY,QAASnF,MAExBl1B,kBACEA,OAAG,UAAU,0DAEfA,EAAC,IACC,OAAQsuE,EACR,eAEFvuE,mBACEC,OAAG,UAAU,2BACbA,OAAG,UAAU,4DAEfA,EAAC,IACC,YACA,SAAUwuE,IAEZxuE,YAAQ,KAAK,SAAS,QAASuuE,sBChIrC,KAAMhG,IAAiBtpE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,cAyEwB,CAC7Ci2B,UACA0c,SACA68B,qBAC8B,MACxB,CAACC,EAAWC,GAAgBhtE,qBAC5B,CAAC+mD,EAASkmB,GAAcjtE,mBAA0C,wBAE9D,IAAM,IACV8sE,EAAmB,GACRA,QACPI,GAAW,UACVrtD,KAAKitD,GAAmB1mD,QAASogD,GAAa,GAC1CA,GAAY,OAEZ0G,UAEEtxD,SAEd,CAACkxD,SAEEJ,GAAgBxsE,sBAAY,IAAM,YAC7B6sE,iBAER,CAACx5C,EAAS0c,EAAQ88B,IAEf99B,EAAkB/uC,sBACtB,CAACxB,EAAG8nE,IAAqB,MACjB39C,GAAgBnqB,EAAEq+B,OAAOlU,MAC3BA,EAAMmmB,OAAOtuC,OAAS,KACX,OAAKqsE,GAAL,EAAiBvG,GAAWl5C,OAAOzE,QACrC,OAAKk+B,GAAL,EAAeyf,GAAW,SAE1B,OAAKzf,GAAL,EAAeyf,GAAW,OAGzC,CAACzf,EAASgmB,IAGN75B,EAAOl1C,kBAAQ,IACZ+uE,EACHntD,OAAOC,KAAKktD,GAAWvsE,IAAKgmE,GAExBpoE,kBACEC,iBAAKmoE,IACLnoE,iBACEA,WACE,KAAK,SACL,SAAWK,GAAMuwC,EAAgBvwC,EAAG8nE,GACpC,aAAcuG,EAAUvG,GACxB,MACE,AAACzf,EAAQyf,GAA4C,GAAhC,CAAEnlE,gBAAiB,gBARtC,aAAYmlE,MAe1B5qD,OACH,CAACmrC,EAAS9X,EAAiB89B,UAG5B3uE,UAAK,IAAKwoE,aACRxoE,SAAK,UAAU,0BACbC,4CACAA,EAACq6B,IAAY,QAASnF,OAGxBn1B,qBACEC,oBACED,kBACEC,0BACAA,gCAGJA,oBAAQ60C,OAEV70C,YACE,KAAK,SACL,QAASquE,EACT,SAAU9sD,OAAOC,KAAKknC,GAASthC,KAAM+gD,GAAa,CAACzf,EAAQyf,wBC5GnE,KAAM2G,IAAa7vE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAkCnB,aAAwB,MAChB,CACJg6C,YACAquB,aAAc+B,EACdvkE,KAAMwjB,EACNtG,UACAC,UACAmE,gBACAT,aACEnI,IAEE3V,EAAWgpB,IACXyG,EAAQ8U,KACRviB,EAAiBX,KAEjB,CAACyiD,EAAsBoD,GAA2BptE,mBAAS,IAC3D,CACJqtE,EACAC,GACEttE,mBAAiB,KACf,CAACurE,EAAmBgC,GAAwBvtE,mBAAS,IACrD,CAACkyC,EAAgB2Q,GAAqB7iD,mBAAS,IAE/CqrE,EAA2BrtE,kBAAQ,IAAM,MACvC8+D,GAAW,AAACkJ,GAAsC,IAClDA,EAAYO,SAAW,SAClB,QAEHiH,GAAkBxpD,EACrBY,MAAM,KACNpkB,IAAKw1C,IAAQy3B,GAAYz3B,KAEtB6N,GAAS,IACT6pB,GAAWrtD,EAAQ,GAAKwjC,GACxB8pB,GAAWttD,EAAQ,GAAKwjC,GACxB+pB,GAAWttD,EAAQ,GAAKujC,GACxBgqB,GAAWvtD,EAAQ,GAAKujC,MAE1Bp/B,IAAkB4W,EAAeC,MAAO,MACpCwyC,IAAc9H,EAAYjkC,KAAK1S,KACnC,AAAC0S,IAAeilC,GAAWjlC,MAAU,MAEnC,CAAC+rC,SACI,MAELloD,IAAQmoD,GAAaD,OACrBloD,KAAUhK,aACL,UAEAioC,GAOPnhC,AANesrD,GACfrnD,EACAmnD,GAAYjG,aACZ,KAIA2F,EAAgB,KAAOxH,EAAYQ,UACnC5gD,IAAS8nD,IACT9nD,IAAS+nD,IAMT3H,EAAYjkC,KAAKtc,KAAK,AAACsc,IAAe,MAC9Brf,IAAWsrD,GACfrnD,EACAob,GAAK8lC,aACL,UAEKoG,IACLvrD,GACAqf,GACA8hB,GACA6pB,GACAC,YAIG,WAEAlpD,IAAkB4W,EAAeqvB,MAAO,IAC7C,CAAC8iB,EAAgBxvD,SAASgoD,EAAYQ,gBACjC,QAEH0H,IAAclI,EAAYjkC,KAAK1S,KACnC,AAAC0S,IAAeilC,GAAWjlC,MAAU,MAEnC,CAACmsC,SACI,QAEHxrD,IAAWsrD,GACfrnD,EACAunD,GAAYrG,aACZ,OAIAsG,GACEzrD,GACAwrD,GACArqB,GACA6pB,GACAC,GACAC,GACAC,UAGK,MAIL7H,EAAYjkC,KAAKtc,KAAMsc,IAAS,MACxBrf,IAAWsrD,GACfrnD,EACAob,GAAK8lC,aACL,UAEKsG,IACLzrD,GACAqf,GACA8hB,GACA6pB,GACAC,GACAC,GACAC,YAIG,SAKN,OAGLnG,EAAkB,MACd0G,GAAUl8B,EACZw1B,EAAiBviD,OAAO9C,OAAQ2jD,GAAgBlJ,EAASkJ,IACzD0B,EAAiBviD,aAEd,QAAKuiD,GAAL,CAAuBviD,OAAQipD,MAEvC,CACDpqD,EACA0jD,EACAjjD,EACAytB,EACAvrB,EACAtG,EACAC,IAGI+tD,EAA8BnuE,sBACjC43C,GAAO,GACG,CACPjxC,KAAMynE,GACNpoD,QAAS,CACP4xB,SAIN,CAAC5xC,IAGGqoE,EAA4BruE,sBAC/B6sE,GAAc,GACJ,CACPlmE,KAAM2nE,GACNtoD,QAAS,CACP6mD,gBAIN,CAAC7mE,IAGGuoE,EAA+BvuE,sBAAY,IAAM,GAC/C4jB,KACJzlB,EAAC,IACC,QAAS,IAAMs3B,EAAMhC,QACrB,OAAQ06C,EACR,YACA,WAAY3G,EAAiBlrD,QAAQs7B,OAGxC,CAAC4vB,EAAkB2G,EAA6B14C,EAAO2hB,IAEpDo3B,EAA6BxuE,sBAAY,IAAM,GAC7C4jB,KACJzlB,EAAC,IACC,QAAS,IAAMs3B,EAAMhC,QACrB,OAAQ46C,EACR,kBAAmB7G,EAAiBlrD,QAAQuwD,cAG/C,CAACrF,EAAkB6G,EAA2B54C,IAE3Cg5C,EAAwB3wE,kBAAQ,IAY7B4wE,AAXa,CAAC,IAAK,OAAO5kD,OAC/B09C,EACIA,EAAiBviD,OACd3kB,IAAKwlE,GAAgBA,EAAYQ,UACjCnkD,OACC,CAACmkD,EAAUnlD,EAAGu/C,KACZ4F,IAAa,KAAO5F,GAAM9sC,QAAQ0yC,KAAcnlD,GAEtD,IAGa7gB,IAAKquE,GACf,EACL7uD,IAAK6uD,EACL5uD,MAAO4uD,EACPhmD,MAAOgmD,KAGV,CAACnH,wBAEM,IAAM,MACRoH,GACJzB,EAAkCzoD,MAAM,KAAK,KAG7CymD,EACIA,EAAyBlmD,OACtB9C,OACE2jD,GACCA,EAAYQ,WAAasI,GAE5BliC,UACH,KAEL,CAACy+B,EAA0BgC,SAExB/B,GAA8BprE,sBAClC,CAAC8lE,EAA0Bn9C,IAAkB,GAClC,CACPhiB,KAAMkoE,GACN7oD,QAAS,CACPjlB,GAAI+kE,EAAY/kE,GAChB+kE,YAAa,OACRA,GADQ,CAEXqC,YAAax/C,EACbu/C,OAAQ,OAAKpC,EAAYoC,QAAjB,CAAyBC,YAAax/C,IAAU,UAKhE,CAAC3iB,IAGG8oE,EAA+B9uE,sBACnC,CAAC,CACC8lE,cACA7gD,SACAnF,SAKI,GACK,CACPnZ,KAAMkoE,GACN7oD,QAAS,CACPjlB,GAAI+kE,EAAY/kE,GAChB+kE,YAAa,OACRA,GADQ,EAEVhmD,GAAMmF,EACPijD,OAAQ,OAAKpC,EAAYoC,QAAjB,EAA0BpoD,GAAM,OAE1CxD,QAAS,CACP+sD,eAAgB,QAKxB,CAACrjE,IAGG+oE,EAAyB/uE,sBAC7B,CAACylE,EAAiCnpD,IAAiC,GACxD,CACP3V,KAAMqoE,GACNhpD,QAAS,CACPy/C,eACAnpD,cAIN,CAACtW,IAGGipE,EAA2BjvE,sBAC/B,AAAC8lE,GAA6B,GACnB,CACPn/D,KAAMuoE,GACNlpD,QAAS,CACP8/C,cACA99C,qBAIN,CAACA,EAAgBhiB,IAGbmpE,EAAsBnvE,sBAC1B,AAAC6hC,GAAe,MAERglC,GAAUC,GAAWjlC,MACvBglC,IAAY,EAAG,MACXrkD,GAAWsrD,GACfrnD,EACAob,EAAK8lC,aACL,IAEI/gD,GAAQwoD,GAAU5sD,EAAUqf,EAAK7a,OAAOjmB,IACxCimB,GAASqoD,GAAa7sD,EAAUqf,EAAK7a,OAAOjmB,MAEzC,CACP4F,KAAM2oE,GACNtpD,QAAS,CACPxD,WACAoE,SACAI,UACAgB,4BAGK6+C,IAAY,EAAG,MAClBrkD,GAAWsrD,GACfrnD,EACAob,EAAK8lC,aACL,IAEI1gD,GAAOsoD,GAAS/sD,EAAUqf,EAAK7a,OAAOjmB,IACtCimB,GAASwoD,GAAahtD,EAAUqf,EAAK7a,OAAOjmB,MAEzC,CACP4F,KAAM8oE,GACNzpD,QAAS,CACPxD,WACAyE,QACAD,UACAgB,sBAKR,CAACA,EAAgBhiB,EAAUygB,IAGvBipD,EAAgC1vE,sBACpC,AAAC6hC,GAAe,UAEVglC,AADYC,GAAWjlC,KACX,EAAG,MACXrf,IAAWsrD,GACfrnD,EACAob,EAAK8lC,aACL,IAEI1gD,GAAOsoD,GAAS/sD,GAAUqf,EAAK7a,OAAOjmB,IACtCimB,GAASwoD,GAAahtD,GAAUqf,EAAK7a,OAAOjmB,MAEzC,CACP4F,KAAMgpE,GACN3pD,QAAS,CACPxD,YACAyE,QACAD,UACA+9C,WAAYljC,KAAK7a,OAAO1F,IAAZugB,cAAekjC,gBAKnC,CAAC/+D,EAAUygB,IAGPmpD,EAAkC5vE,sBACtC,CACEgnE,EACA1+D,EACAu5B,EACAvlB,KACG,CAEDhU,IAAW,OACXA,IAAW,QACXA,IAAW,UACXA,IAAW,UACXA,IAAW,gBAEPu5B,IAAQA,EAAKwkC,SAAW,KACtB/9D,IAAW,WACOu5B,GACXv5B,IAAW,mBACUu5B,MAGXmlC,EAAoB1qD,KAClChU,IAAW,eACK0+D,EAAmB,KAGhD,CACE0I,EACAT,EACAE,EACAJ,IAIExrB,EAAiBvjD,sBAAY,IAAM,GACrB,CAACgyC,IAClB,CAACA,UAGF9zC,UAAK,IAAK+uE,aACR/uE,EAACm0C,IACC,UAAW,GACX,QAASm1B,EAAmBA,EAAiBviD,OAAOzkB,OAAS,EAC7D,SAAU+iD,EACV,cACEvR,EACI,wBACA,gCAEN,iBACA,gBAAiBm5B,iBAA0BlmD,OAAOzkB,iBAElDrC,EAACi6B,IACC,MAAQ,0BAAyBovC,EAAiBlrD,QAAQs7B,MAC1D,eAAe,iBAEfz5C,YAAQ,KAAK,SAAS,QAASowE,WAC7BpwE,EAAC,WAGLA,EAACi6B,IAAQ,MAAQ,sBAAsB,eAAe,iBACpDj6B,YAAQ,KAAK,SAAS,QAASqwE,WAC7BrwE,EAAC,WAGLD,SAAK,UAAU,iCACbC,SAAK,UAAU,8BACbA,EAAC4tE,IAAS,uBAEZ5tE,SAAK,UAAU,gCACbD,oBACEC,8BACAA,EAAC,IACC,SAAWsoE,GAAc,GACcA,KACjCA,IAAc,QAMpB,KAAMgI,EACN,aAActB,EACd,MAAO,CACLtrE,SAAU,OACVb,MAAO,OACPb,OAAQ,OACRkC,OAAQ,+BAOpBlE,EAAC,IACC,mBACA,2BACA,uBACA,8BACA,wBAAyB2wE,EACzB,kCAAmCc,EACnC,oBACA,mBAMR,OAAexwE,eAAKywE,ICziBpB,KAAMtuE,IAGF,CACFI,UAAW,CACTtD,QAAS,GACT8C,gBAAiB,UACjBhB,OAAQ,OACR4zC,UAAW,QAEbyN,eAAgB,CACdnjD,QAAS,MACTuD,aAAc,MACd8c,OAAQ,WACRvd,gBAAiB,SAEnB6yC,IAAK,CACH51C,QAAS,OACTsgB,OAAQ,WAEVqtB,OAAQ,CACNrD,aAAc,oBACd+Y,cAAe,MACfn/C,WAAY,OACZN,MAAO,WAET0+C,WAAY,CACVjT,KAAM,EACN5rC,SAAU,OACVS,WAAY,OACZN,MAAO,WAETwrC,MAAO,CACLxsC,MAAO,MACPc,UAAW,WAIT4/C,GAKD,CACH,CACE3gD,GAAI,EACJgf,MAAO,SACP4hC,gBAAiB,WACjBC,iBAAkB,cAEpB,CACE7gD,GAAI,EACJgf,MAAO,OACP4hC,gBAAiB,SACjBC,iBAAkB,YAEpB,CACE7gD,GAAI,EACJgf,MAAO,aACP4hC,gBAAiB,eACjBC,iBAAkB,kBAEpB,CACE7gD,GAAI,EACJgf,MAAO,aACP4hC,gBAAiB,eACjBC,iBAAkB,mBAStB,YAA+B,CAC7Bj9B,UACAk9B,YAC6B,MACvB7uB,GAAQwX,KACRjqB,EAAcf,KACdg5B,EAAUlyC,mBAEVw7C,EAAe9hD,sBAAY,IAAM,IACjC2kB,EAAS,MACLu9B,GAAgBv9B,EAAQ/E,OAAO,CAACC,EAAKsiC,OACrCA,GAAgB2tB,GACbjwD,GACN,IACGkwD,EAAmB9tB,GACvB1hC,EAAY3Y,QACX,6BAEKA,QAAQmxC,UACdg3B,GAAsC7tB,KAGzC,CAACv9B,EAASpE,wBAEH,IAAM,MAEb,CAACuhC,SAEExQ,GAActxC,sBACjBilB,GAAW,GACEjf,SAAS,CACnBW,KAAM,yBACNqf,QAAS,CAAElG,IAAK,QAAS6I,MAAO1D,OAE5B6O,QAAQ,yCAEhB,CAACd,EAAOzS,yCAIRshC,EACA,MACEQ,YAAa,IAAM,GACTz6C,QAAQsoC,gBAGpB,aAIK,MAAO3uC,GAAOI,qBAChB,IAAW,SAAU2vC,EAAa,IAAKkH,WACrC7zB,iBAASrkB,IAAK6hD,YACW,MAAO5gD,GAAOigD,2BACnC,IAAe,MAAOjgD,GAAOwqC,OAAQ,MAAOoW,IAC5CT,GAAaphD,IAAKgiD,KAChBtB,IAEC,MAAOsB,EAAMviC,MACb,oBAAsB,GAAEoiC,KAAgBG,EAAMX,kBAC9C,qBAAuB,GAAEQ,KAAgBG,EAAMV,oBAH1CU,EAAMvhD,OAJPohD,QAiBpB,KAAM6tB,IAA2B5wE,eAAK6wE,IAGtC,YAA0BryE,EAAOyzB,EAAU,MACnC1M,GAAU89B,cACR,IAAyB,SAAUpxB,EAAW1M,YAGxD,OAAe4c,qBAAW2uC,ICrK1B,KAAMvL,IAAwBvnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA+C9B,YAA8B,CAAEsuD,eAA2B,8CACnD,CACJpc,SACArqB,UASE6nB,WAGF5uC,UAAK,IAAKymE,aACRxmE,iFACAD,SAAK,UAAU,4BACbC,EAAC,IACC,KAAO,WAAUutD,uBACjB,aACEzmC,SAAOG,QAAQsmC,GAAapqC,IAA5B2D,cAA+B8/C,aAA/B9/C,cAA2C4F,OAC3Cm6C,OAAmB//C,EAAO2/C,kBAA1BI,cAA2Cn6C,OAC3C,EAEF,MAAM,QACN,MAAO,CACL2iB,MAAO,CACLxrC,MAAOstC,YAAOlqB,UAAPkqB,cAAiBoc,GAAapqC,IAA9BguB,cAAiCy1B,aAAjCz1B,cAA6CzkB,MAChD,MACA,UAGR,IAAK,EACL,IACE5F,SAAOG,QAAQsmC,GAAapqC,IAA5B2D,cAA+B8/C,aAA/B9/C,cAA2C8F,KAC3Ci6C,OAAmB//C,EAAO2/C,kBAA1BI,cAA2Cj6C,IAE7C,QAAQ,WAEV5sB,EAAC,IACC,KAAO,WAAUutD,qBACjB,aACEzmC,SAAOG,QAAQsmC,GAAapqC,IAA5B2D,cAA+B8/C,aAA/B9/C,cAA2C8F,KAC3Ci6C,OAAmB//C,EAAO2/C,kBAA1BI,cAA2Cj6C,KAC3C,EAEF,MAAM,QACN,MAAO,CACLyiB,MAAO,CACLxrC,MAAOstC,YAAOlqB,UAAPkqB,cAAiBoc,GAAapqC,IAA9BguB,cAAiCy1B,aAAjCz1B,cAA6CvkB,IAChD,MACA,UAGR,IACE9F,SAAOG,QAAQsmC,GAAapqC,IAA5B2D,cAA+B8/C,aAA/B9/C,cAA2C4F,OAC3Cm6C,OAAmB//C,EAAO2/C,kBAA1BI,cAA2Cn6C,OAC3C,EAEF,QAAQ,iBC5GlB,YAAuB,CAAE6gC,eAAmC,UAClD,IAAqB,gBCG/B,KAAMoL,IAAa15D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAmBb25D,GAAoB35D;AAAAA;AAAAA,EAGpB45D,GAAY55D;AAAAA;AAAAA;AAAAA;AAAAA,EAMlB,aAAuB,MACf,CACJ6nB,SACA4nB,gBACAyC,UASExC,KAEEyqB,EAAoBv3D,sBACvBmhB,GACQmuB,qBAAQlqB,UAAWkqB,kBAAQlqB,QAAQjE,KAE5C,CAACmuB,IAGGkoB,EAAiB15D,kBAAQ,IAE3BmnB,EAAOG,QAAQ5kB,OAAS,EACpBykB,EAAOG,QAAQ9kB,IAAI,CAAC0mB,EAAQ7F,IAC1BhjB,EAAC,IAGC,MAAQ,GAAEgjB,IACV,UAAWo2C,EAAkBp2C,GAAK41C,GAAoBC,GACtD,OAAQ,IACN94D,SACE,MAAO,CACLE,QAAS,OACTqzB,cAAe,SACf/vB,WAAY,SACZG,SAAU,kBAGZ3D,gCACIC,kBAAM6oB,EAAOxf,EAAEmd,eAAiBqC,EAAOxf,EAAEke,MAAM4H,QAAQ,MAE3DpvB,gCACIC,kBAAM6oB,EAAOvf,EAAEkd,eAAiBqC,EAAOvf,EAAEie,MAAM4H,QAAQ,kBAK/DnvB,EAAC,IAAc,YAAagjB,KArBtB,kBAAiBA,MAwB3B,GAGL,CAACo2C,EAAmBtyC,EAAOG,UAExBiyC,EAAkBr3D,sBACtB,CAAC,CAAEu1C,WAAY,GACC,YAAaA,IAE7B,CAAC1I,IAGGyqB,EAAqBt3D,sBACzB,CAAC,CAAEu1C,WAAY,MACPygB,GAAW/wC,EAAOG,QAAQjD,OAC9B,CAACkD,EAASlE,IAAMA,IAAMiM,OAAOmoB,MAEjB,UAAWygB,IAE3B,CAACnpB,EAAe5nB,EAAOG,gBAIvBlnB,oBACEC,SAAK,IAAK24D,KACV34D,EAACi4C,IACC,UAAWnxB,EAAOnB,UAClB,QAASuzC,EACT,SAAUC,WAETE,OCrHT,KAAM,IAAgB,IACpB15D,kBAAQ,IACCm6D,KAAa,MAAM,CACxB,QAASC,KACN,GACCD,KAAa,MAAM,CACjB,EAAGA,KAAa,MAAM,CACpB,WAAYA,KAAa,MAAM,CAC7B,KAAMkY,KAAa,WAAW,WAAW,UACzC,GAAIA,KAAa,WAAW,WAAW,iBAK9C,IAAI,EAAG,kDAEX,ICFC5uE,GAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA2Cf,YAAuB,CACrBgzE,sBAAsB,IAAM,KAC5BC,uBAAuB,IAAM,KAC7BC,sBAAsB,IAAM,KAC5B7W,WACqB,MACfjhB,GAAUlyC,iBAAY,MACtB2vD,EAAawC,KAEbC,EAAe14D,sBAAY,IAAM,GACjBy5D,IACnB,CAAC6W,EAAqB7W,wBAEf,IAAM,MAEb,CAACf,SAEEC,GAAgB34D,sBAAY,IAAM,MAErC,CAACqwE,IAEEtX,EAAe/4D,sBAClBg5D,GAAe,WACI,MACVuX,GAAW,OACZ9W,GADY,CAEfr0C,QAAS4zC,EAAW5zC,QAAQ9kB,IAAI,AAAC0mB,GAAqB,eAElDwpD,IACExpD,KAAO1F,IAAP0F,cAAU+9C,WACVtL,EAAQS,cAAciG,iBAGjBn5C,EAAO1F,mBAAGyjD,WACb/9C,EAAO1F,GAAK5B,OAAOC,KAAKqH,EAAO1F,GAAG9gB,SAAW,SACxCwmB,GAAO1F,GAIX0F,WAILopD,GAAoBG,YAI9B,CAAC5X,EAAeyX,EAAqB3W,IAGjCx2D,EAAOnF,kBAAQ,IACZ,EACLgmB,UAAW,IACXsB,QAASq0C,EAAQr0C,QAAQ9kB,IAAI,AAAC0mB,GAA+B,eACpD,QACFA,GADE,CAEL1F,EAAG,GACDyjD,WAAY,CACVl6C,KACEm6C,OAAmBvL,EAAQS,cAAciG,cAAzC6E,cAAsDn6C,OAAQ,EAChEE,GAAIi6C,OAAmBvL,EAAQS,cAAciG,cAAzC6E,cAAsDj6C,KAAM,IAE/D/D,EAAO1F,SAKjB,CAACm4C,EAAQr0C,QAASq0C,EAAQS,cAAciG,mBAGzChiE,UAAK,IAAKoD,YACRrD,EAAC,IACC,IAAKs6C,EACL,cAAev1C,EACf,iBAAkBgzD,EAClB,SAAU8C,YAEV76D,SAAK,UAAU,0BACbC,EAAC,IAAO,QAASu6D,EAAc,UAAU,uBACvCv6D,EAAC,IAAa,MAAM,+CAEtBA,mBAAQ,4BACRA,EAACg7C,IACC,QAAS,IAAMX,EAAQ5wC,QAAQsoC,aAC/B,WAAW,kBAEb/xC,EAACq6B,IAAY,QAASmgC,OAExBx6D,EAAC,YC7HT,KAAM47D,IAAgC,CACpC94D,WAAY,EACZC,YAAa,EACbmB,OAAQ,OACRlC,OAAQ,QA6BV,YAAuB,CAAEs5D,UAASrE,eAAmC,MAC7DpvD,GAAWgpB,IACXhH,EAAiBX,KACjBoO,EAAQ8U,KAERkmC,EAA0BzwE,sBAC7B2oB,GAAU,GACA,CACPhiB,KAAM+pE,GACN1qD,QAAS,CACPyzC,UACA9wC,YAIN,CAAC3iB,EAAUyzD,IAGPkX,EAAoB3wE,sBAAY,IAAM,GACjC,CACP2G,KAAMiqE,GACN5qD,QAAS,CACPjlB,GAAI04D,EAAQ14D,GACZinB,qBAGH,CAACA,EAAgBhiB,EAAUyzD,IAExBoX,EAAkB7wE,sBAAY,IAAM,MAClC8wE,GAAUnyE,KAAKwhC,IAAIs5B,EAAQjyD,EAAEqjB,KAAO4uC,EAAQjyD,EAAEujB,IAAM,KACjD,CACPpkB,KAAM0yD,GACNl5C,QACEs5C,EAAQjyD,EAAEqjB,MAAQ4uC,EAAQjyD,EAAEujB,GACxB,CAAC0uC,EAAQjyD,EAAEqjB,KAAOimD,EAASrX,EAAQjyD,EAAEujB,GAAK+lD,GAC1C,CAACrX,EAAQjyD,EAAEujB,GAAK+lD,EAASrX,EAAQjyD,EAAEqjB,KAAOimD,UAE5CC,GAAUpyE,KAAKwhC,IAAIs5B,EAAQhyD,EAAEojB,KAAO4uC,EAAQhyD,EAAEsjB,IAAM,KACjD,CACPpkB,KAAMqqE,GACN5wD,QACEq5C,EAAQhyD,EAAEojB,MAAQ4uC,EAAQhyD,EAAEsjB,GACxB,CAAC0uC,EAAQhyD,EAAEojB,KAAOkmD,EAAStX,EAAQhyD,EAAEsjB,GAAKgmD,GAC1C,CAACtX,EAAQhyD,EAAEsjB,GAAKgmD,EAAStX,EAAQhyD,EAAEojB,KAAOkmD,MAEjD,CAAC/qE,EAAUyzD,EAAQjyD,EAAEqjB,KAAM4uC,EAAQjyD,EAAEujB,GAAI0uC,EAAQhyD,EAAEojB,KAAM4uC,EAAQhyD,EAAEsjB,KAEhEkmD,EAAsBjxE,sBACzB25D,GAAkB,GACR,CACPhzD,KAAMuqE,GACNlrD,QAAS,CACP2zC,oBAIN,CAAC3zD,IAGGmrE,EAAsBnxE,sBAAY,IAAM,GACnC,CACP2G,KAAMmzD,GACN9zC,QAAS,CAAEnI,aAAcvB,EAAQS,UAAUhc,GAAI+lC,UAAW2yB,OAEtD71C,OACH,IACC,qBAAsB,IAAM6R,EAAMhC,QAClC,oBAAqBw9C,EACrB,oBAAqB,IAAMJ,IAC3B,YAEF,CACE5wE,SAAUyxB,GAAUM,aACpBnB,WAAYF,GAAYG,MACxBqF,iBAAkB,MAGrB,CAACnwB,EAAUyvB,EAAOgkC,EAASwX,EAAqBJ,aAGhD50D,iDAEI,IACC,SAAW0M,GAAU,GACKA,IAE1B,KAAM61B,GACN,aAAcib,EAAQS,cAAclzC,OAAOvB,KAC3C,MAAOs0C,qBAGH3E,0BAEJ,KAAK,SACL,UAAU,gBACV,QAASub,aAER,qBAEK,KAAK,SAAS,UAAU,cAAc,QAASE,aACpD,IAAa,MAAM,2CAGpB,KAAK,SACL,UAAU,cACV,QAASM,aAER,IAAO,MAAM,kBC7IxB,YAAiC,CAC/B1X,UACA1zC,aACAoC,YACAkB,UACAxjB,UACA4sD,WACApuC,OACA+sD,mBACAC,uBAC+B,sBAGvBhoD,IACExjB,QAAUrH,GAAMqH,EAAQrH,EAAGunB,EAAY1B,GAC7C,MACE8D,EAAUxH,UACToF,EAAWpF,UAAYoF,EAAWK,aAAe/B,EAC9C,CACEriB,MAAO,MACPM,WAAY,QAEdoZ,gBAGLjP,EAAUgtD,EAAU,wBAAuBp1C,WAAe,IAAI7jB,OAC/D,WAEI,aAAc,IAAM6wE,EAAoB,IACxC,aAAc,IAAMA,EAAoB,cAEvC5X,EAAQS,cAAclzC,OAAO3C,GAAMyC,OAAOtmB,OAAQ,kCAG/C,KAAK,SACL,MAAO,CACLi6D,WAAY2W,EAAmB,UAAY,SAC3C/yE,QAAS,EACTqgB,OAAQ,GAEV,QAAUlgB,GAAMi0D,EAASj0D,EAAG,GAAO6lB,cAElC,IAAc,MAAM,eAIzB0B,EAAWpF,UAAYoF,EAAWK,aAAe/B,EACnD,IAEA,MC1CR,YAAkC,CAChCo1C,UACA4B,mBACAiW,iBACAC,iBACAC,0BACAC,0BACAC,6BACAC,6BACA9rE,UACA4sD,WACAmf,mBACAC,oBACgC,UAE7B51D,gCACE,IACC,UACA,WAAYo/C,EACZ,UAAWuW,EACX,QAASN,EACT,UACA,WACA,KAAM,IACN,iBAAkBE,EAClB,oBAAqBE,MAEtB,IACC,UACA,WAAYrW,EACZ,UAAWwW,EACX,QAASN,EACT,UACA,WACA,KAAM,IACN,iBAAkBE,EAClB,oBAAqBE,OClD7B,YAA2B,CACzBlY,UACA6X,iBACAC,kBACyB,MACnBvrE,GAAWgpB,IAEX8iD,EAAerlE,EAAUgtD,EAAS,+BAAgC,MAClEsY,EAAetlE,EAAUgtD,EAAS,+BAAgC,MAClE14D,EAAK0L,EAAUgtD,EAAS,0BAA2B/9C,QAEnDs2D,EAAehyE,sBAClBwG,GAAU,MACHmiB,GAAQniB,EAAMq2B,OAAOlU,QAClB,CACPhiB,KAAMsrE,GACNjsD,QAAS,CACPksD,OAAQzY,EAAQ14D,GAChBimB,OAAQ,CAAEjmB,KAAIyG,EAAGmhB,OAIvB,CAAC3iB,EAAUjF,EAAI04D,EAAQ14D,KAEnBoxE,EAAenyE,sBAClBwG,GAAU,MACHmiB,GAAQniB,EAAMq2B,OAAOlU,QAClB,CACPhiB,KAAMsrE,GACNjsD,QAAS,CACPksD,OAAQzY,EAAQ14D,GAChBimB,OAAQ,CAAEjmB,KAAI0G,EAAGkhB,OAIvB,CAAC3iB,EAAUjF,EAAI04D,EAAQ14D,cAItBkb,4CACSq1D,aACLQ,IAAiB,OACf/3B,IACC,MAAO+3B,EAAaxkD,QAAQ,GAC5B,OAAQ0kD,EACR,KAAK,SACL,MAAO,CAAE3zE,QAAS,mBAGpB,oBAGIkzE,aACLQ,IAAiB,OACfh4B,IACC,MAAOg4B,EAAazkD,QAAQ,GAC5B,OAAQ6kD,EACR,KAAK,SACL,MAAO,CAAE9zE,QAAS,mBAGpB,SCnDV,YAA8B,CAC5Bo7D,UACA1zC,aACAoC,YACAkB,UACAxjB,UACA4sD,WACApuC,OACA+sD,mBACAC,sBACAjc,eAC4B,wBAGpBA,GACA/rC,IACExjB,QAAUrH,GAAMqH,EAAQrH,EAAGunB,EAAY1B,YAE5C5X,EAAUgtD,EAAU,GAAEp1C,YAAgB,GAAK,EAC1C5X,EAAUgtD,EAAU,GAAEp1C,WAAe,GAAG7jB,OAAS,WAE7C,aAAc,IAAM6wE,EAAoB,IACxC,aAAc,IAAMA,EAAoB,cAEvC5X,EAAQp1C,GAAMknC,YAAW,cAExB,MACGxlC,EAAWpF,UAAYoF,EAAWK,aAAe/B,GACjD0B,EAAWM,WAAaN,EAAWQ,cAAgBlC,GACpD8D,EAAUxH,SACN,CACE3e,MAAO,MACPM,WAAY,QAEd,CAAEN,MAAO,QAASM,WAAY,mBAGnCmK,EAAUgtD,EAAU,GAAEp1C,WAAe,IAAI7jB,SAE1C,IAAI,kCAGF,KAAK,SACL,MAAO,CACLi6D,WAAY2W,EAAmB,UAAY,SAC3C/yE,QAAS,EACTqgB,OAAQ,GAEV,QAAUlgB,GAAMi0D,EAASj0D,EAAG,GAAM6lB,cAEjC,IAAc,MAAM,eAIzB0B,EAAWpF,UAAYoF,EAAWK,aAAe/B,qBAE/C,GAAE5X,EAAUgtD,EAAU,GAAEp1C,YAAgB,kBAExC,MAAO,CACLriB,MAAO,MACPM,WAAY,uBAKf,OAGHm3D,EAAQp1C,GAAMknC,QAEdxlC,EAAWpF,UAAYoF,EAAWK,aAAe/B,qBAEhD,gBACK,MAAO,CAAEriB,MAAO,MAAOM,WAAY,uBACxC,OAGH,MCxER,YAAgC,CAC9Bm3D,UACA/uC,iBACA0nD,eACAC,eACAC,wBACAC,wBACAC,2BACAC,2BACArd,cACAvvD,UACA4sD,WACAigB,iBACAC,kBAC8B,UAE3B12D,gCACE,IACC,UACA,WAAYyO,EACZ,UAAWgoD,EACX,QAASN,EACT,UACA,WACA,KAAM,IACN,iBAAkBE,EAClB,oBAAqBE,EACrB,kBAED,IACC,UACA,WAAY9nD,EACZ,UAAWioD,EACX,QAASN,EACT,UACA,WACA,KAAM,IACN,iBAAkBE,EAClB,oBAAqBE,EACrB,mBCvDR,KAAM//B,IAAqC,CAAEvxC,gBAAiB,aAExDwxC,GAAgC,CAAExxC,gBAAiB,WASzD,YAAuB,CACrBs4D,UACAhH,WACApX,gBACA4gB,YACqB,MACfvxC,GAAiBX,GAAc0vC,EAAQ14D,IACvC4pB,EAAgBjB,GAAa,CAACgB,EAAe3pB,KAC7C2xE,EAAiBhpD,GACrB,CAACH,GAAQmB,EAAe3pB,GAAI,MAAM+oB,OAAOY,EAAenD,SAAS/f,GAAK,KAGlEmrE,EAAiBjpD,GACrB,CAACH,GAAQmB,EAAe3pB,GAAI,MAAM+oB,OAAOY,EAAenD,SAAS9f,GAAK,KAGlE4zD,EAAmBtxC,GAAc0vC,EAAQS,cAAcn5D,IACvD6wE,EAAmBloD,GACvB,CAACH,GAAQ8xC,EAAiBt6D,GAAI,MAAM+oB,OAClCuxC,EAAiB9zC,SAAS/f,GAAK,GAC/B+hB,GAAQ8xC,EAAiBt6D,GAAI,eAG3B8wE,EAAmBnoD,GACvB,CAACH,GAAQ8xC,EAAiBt6D,GAAI,MAAM+oB,OAClCuxC,EAAiB9zC,SAAS9f,GAAK,GAC/B8hB,GAAQ8xC,EAAiBt6D,GAAI,eAI3B,CAACuxE,EAAuBE,GAA4B1yE,mBAAS,IAC7D,CAACyyE,EAAuBE,GAA4B3yE,mBAAS,IAC7D,CAAC0xE,EAAyBE,GAA8B5xE,mBAAS,IACjE,CAAC2xE,EAAyBE,GAA8B7xE,mBAAS,IAEjEs1D,EAAct3D,kBAAQ,IACnB,EACL69C,QAAS8d,EAAQS,cAAcve,QAC/Bl2C,MACEgH,EAAUgtD,EAAS,qBAAsB,MAAW,GAChD,CAAEr7D,QAAS,QACX,OAEP,CAACq7D,IAEEmC,EAAgB57D,sBACpB,CAACxB,EAAGo0E,EAAevuD,IAAS,CAEtB7lB,KACAkI,oBAEK+yD,EAASmZ,EAAenZ,EAAQS,cAAcxO,YAAarnC,GAChEA,IAAS,IACPuuD,IAAkBl3D,OAChBk3D,KACuB,MACVlrD,UAAU,SAEE,MACVA,UAAU,SAGJ,MACE,KAEpBrD,IAAS,IACduuD,IAAkBl3D,OAChBk3D,KACuB,MACVlrD,UAAU,SAEE,MACVA,UAAU,SAGJ,MACE,QAGJ,MACVA,UAAU,OACE,MACVA,UAAU,OACF,MACVA,UAAU,OACE,MACVA,UAAU,OAG/B,CAAC2zC,EAAkB3wC,EAAgB+nC,EAAUgH,IAGzCnyD,EAAetH,sBAAY,CAACxB,EAAGunB,EAAY1B,IAAS,GACtD3d,oBACSb,QAAQwe,IAClB,IAEG+tD,EAAet0E,kBAAQ,IACpB,EACLgqB,aAAc,IAAM,GACHA,aAAa,OACblE,QAEjBmE,aAAc,IAAM,GACHA,aAAa,OACbmB,UAGlB,CAACwB,EAAgBgoD,IAEdL,EAAev0E,kBAAQ,IACpB,EACLgqB,aAAc,IAAM,GACHA,aAAa,OACblE,QAEjBmE,aAAc,IAAM,GACHA,aAAa,OACbmB,UAGlB,CAACwB,EAAgBioD,IAEdrB,EAAiBxzE,kBAAQ,IACtB,EACLgqB,aAAc,IAAM,GACDA,aAAa,OACblE,QAEnBmE,aAAc,IAAM,GACDA,aAAa,OACbmB,UAGpB,CAACmyC,EAAkBuW,IAEhBL,EAAiBzzE,kBAAQ,IACtB,EACLgqB,aAAc,IAAM,GACDA,aAAa,OACblE,QAEnBmE,aAAc,IAAM,GACDA,aAAa,OACbmB,UAGpB,CAACmyC,EAAkBwW,UAGpB3zE,aACE,cAAgBM,GAAM68C,EAAc78C,EAAGi7D,GACvC,MACE9uC,EAAchK,UAAY+J,EAAe/J,SACpC+xB,GACDjmC,EACEgtD,EACA,wCACA,MACI,GACN9mB,GACA,MAEFhoB,EAActB,oBAElBlrB,cAASi3D,aAAsB6G,EAAW,KAC1C99D,EAAC,IACC,UACA,iBACA,mBAEFA,EAAC,IACC,UACA,mBACA,iBACA,iBACA,0BACA,0BACA,2BAA6BylB,GAAS8tD,EAA2B9tD,GACjE,2BAA6BA,GAAS+tD,EAA2B/tD,GACjE,QAAStc,EACT,SAAUs0D,EACV,mBACA,qBAEFz9D,EAAC,IACC,UACA,iBACA,eACA,eACA,wBACA,wBACA,yBAA2BylB,GAAS4uD,EAAyB5uD,GAC7D,yBAA2BA,GAAS6uD,EAAyB7uD,GAC7D,cACA,QAAStc,EACT,SAAUs0D,EACV,iBACA,mBAEFz9D,EAAC,IAAc,UAAkB,oBCtNvC,KAAMk+D,IAAaj/D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAiEnB,YAAoB,CAClBk/D,YACA7J,WACApzC,UACAwzD,SACA1S,cACkB,MACZhkB,GAAa71C,iBAAY,MAEzB8zC,EAAqBp6C,sBACzB,CAACxB,EAAGi7D,IAAY,CACTjd,GAA0Bh+C,OAC3B4qB,mBACSxhB,QAAQgzC,kBAAkBp8C,EAAGi7D,KAG5C,CAACtd,IAGGl5C,EAAOnF,kBAAQ,IAAM,MACnBkgC,GAAoB,YAChB9X,QAAQ,CAACe,EAAM9F,IAAM,CACzB8F,EAAK7B,QAAQ5kB,SAAW,IACpB9B,KAAK,OACNuoB,GADM,CAETizC,cAAe,OACVjzC,EAAKizC,eADK,CAEblzC,OAAQC,EAAK7B,QAAQ,GACrB62C,SAAU96C,EACVuqC,YAAa,EACb3qD,GAAIkmB,EAAK7B,QAAQ,GAAGrkB,GACpBo/D,aACA0S,cAGK5rD,EAAK7B,QAAQ5kB,OAAS,KAC1B4kB,QAAQc,QAAQ,CAACc,EAAQ1F,IAAM,IAC9B4H,GAAO,GACPyyB,EAAyB,KACzBr6B,EAAI2F,EAAK7B,QAAQ5kB,OAAS,GACxB8gB,IAAM,IACE2F,EAAK7B,QAAQ5kB,SAKlB,KAEH9B,KAAK,OACNuoB,GADM,CAETizC,cAAe,OACVjzC,EAAKizC,eADK,CAEblzC,SACA20B,UACAzyB,OACA+yC,SAAU96C,EACVuqC,YAAapqC,EACbvgB,GAAIimB,EAAOjmB,GACXo/D,sBAOHniC,GACN,CAACmiC,EAAY0S,EAAQvW,IAElB,CAAExW,MAAOyW,EAAYzoB,eAAcqhB,UAAWqH,GAAev5D,GAE7D+vC,EAAOl1C,kBACX,IACEy+D,EAAWj8D,IAAI,CAACm5D,EAAS93C,IACvBxjB,EAAC,IACC,SAAUwjB,EAEV,UACA,WACA,cAAe,CAACnjB,EAAGi7D,IAAYrf,EAAmB57C,EAAGi7D,IAH/C,GAAEA,EAAQS,cAAcn5D,OAMpC,CAACq5C,EAAoBmiB,EAAY9J,UAIjCv0D,oBACEA,WAAO,IAAKm+D,aACVn+D,qBACEA,kBACEC,QAAI,QAAS,iBACbA,QAAI,QAAS,4BACbA,QAAI,QAAS,WACXA,EAAC,SAEHA,QAAI,QAAS,sBACbA,QAAI,QAAS,oBACbA,QAAI,QAAS,WAAI,QAEnBD,kBACEC,YAAI,GAAG,gCAAmCg3D,aACxCj3D,EAAC,IAAe,KAAK,eAClB20E,EAAO,GAAI,IACX/+B,EAAa,gCAAgCohB,cAGlD/2D,YAAI,GAAG,gCAAmCg3D,aACxCj3D,EAAC,IAAe,KAAK,eAClB20E,EAAO,GAAI,IACX/+B,EAAa,gCAAgCohB,cAGlD/2D,iBACEA,EAAC,IAAe,KAAK,cAAM00E,EAAO,OAEpC10E,iBACEA,EAAC,IAAe,KAAK,cAAM00E,EAAO,OAEpC10E,iBACEA,EAAC,IAAe,KAAK,cAAM00E,EAAO,OAEpC10E,iBACEA,EAAC,IAAe,KAAK,cAAM00E,EAAO,aAIxC10E,oBAAQ60C,OAEV70C,EAAC88C,IAAY,IAAKkB,EAAY,eAKpC,YAAwBv+C,EAAmD,OAEvEM,iBACEC,SACE,MAAO,CACL8B,SAAU,WACV4B,SAAU,EACVG,MAAO,oBAGRpE,EAAM23B,OAETp3B,SAAK,MAAO,CAAE8C,WAAY,YAAMrD,EAAM2H,cCrM5C,KAAME,IAAQrI;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAsBd,YAAyB,CAAE+pB,QAAOrD,YAAW3D,UAASC,UAAS+/C,cAAc,MACrE,CAACnuB,EAAgB2Q,GAAqB7iD,mBAAS,IAE/CkoB,EAAiBX,KAEjBrhB,EAAWgpB,IACXyG,EAAQ8U,KACR,CAACqY,EAAWC,GAAiB/iD,mBAAS,IACtCgjD,EAAax8C,mBAEbg2D,EAAYx+D,kBAAQ,IAAM,MACxB8+D,GAAW,CAACkW,EAAOC,EAAKC,EAAOC,OAE3BH,EAAQnvB,MACVovB,EAAMpvB,MACJqvB,EAAQrvB,MACVsvB,EAAMtvB,QAEDxjC,EAAQ,GAAKwjC,KAAUmvB,GAAS3yD,EAAQ,GAAKwjC,KACnDmvB,GAAS3yD,EAAQ,GAAKwjC,KAAUovB,GAAO5yD,EAAQ,GAAKwjC,UAC9CvjC,EAAQ,GAAKujC,KAAUqvB,GAAS5yD,EAAQ,GAAKujC,KACnDqvB,GAAS5yD,EAAQ,GAAKujC,KAAUsvB,GAAO7yD,EAAQ,GAAKujC,MAIrDuvB,EAAoB/rD,GACjBA,EAAMhF,OAAQ8E,GACZ21C,EAAS31C,EAAKzf,EAAEqjB,KAAM5D,EAAKzf,EAAEujB,GAAI9D,EAAKxf,EAAEojB,KAAM5D,EAAKxf,EAAEsjB,QAG5D5D,EAAMlC,aAKDkuD,AAJQnhC,GACXkhC,EAAiB/rD,EAAMlC,QACvBkC,EAAMlC,QAEI3kB,IAAK2mB,GACV,OACFA,GADE,CAELizC,cAAe,CACbze,wBAAyBmhB,EACvB31C,EAAKzf,EAAEqjB,KACP5D,EAAKzf,EAAEujB,GACP9D,EAAKxf,EAAEojB,KACP5D,EAAKxf,EAAEsjB,SAMhB,CAAC5D,EAAO6qB,EAAgB7xB,EAASC,IAE9BmjC,EAAiBvjD,sBAAY,IAAM,GACrB,CAACgyC,IAClB,CAACA,IAEEohC,EAAoBpzE,sBACxB,CACEyqB,EAAW,KACXmoD,EAAgBl3D,OAChBgwC,EAAc,GACdrnC,EAAO3I,SACJ,GACM,CACP/U,KAAM0sE,GACNrtD,QAAS,CACPyE,WACAzC,iBACA4qD,gBACAlnB,cACArnC,WAIN,CAAC2D,EAAgBhiB,IAGbgtD,EAAoBhzD,sBAAY,IAAM,MAEzC,CAACozE,IAEEngB,EAA4BjzD,sBAAY,IAAM,GAC5Cq2B,kBAAkB,CACtB/C,QAAS,iDACT6B,QAAS,CAAC,CAAEI,KAAM,MAAOF,QAAS29B,GAAqB,CAAEz9B,KAAM,UAEhE,CAACy9B,EAAmBv9B,IAEjButB,EAAkBhjD,sBAAY,IAAM,GAClCq2B,kBAAkB,CACtB/C,QAAS,2CACT6B,QAAS,CACP,CACEI,KAAM,MACNF,QAAS,IAAM,GACJ,CAAE1uB,KAAMiqE,GAAgB5qD,QAAS,CAAEgC,sBAGhD,CAAEuN,KAAM,UAGX,CAACvN,EAAgBhiB,EAAUyvB,IAExB4tB,EAAuBrjD,sBAAY,IAAM,GAC/B,CAAC4iD,IACd,CAACA,IAEEU,EAAqBtjD,sBAAY,IAAM,GAChC4H,QAAQy6C,gBACL,KACb,IAEGixB,EAAoBtzE,sBAAa8f,GAAQ,IACtCkrB,KAAK,0BAA2B,CAAElrB,SACxC,UAGD3hB,gBACED,SACE,IAAK,CACHq0C,GACA9sC,GACAm9C,GACExlD;AAAAA;AAAAA;AAAAA;AAAAA,yBAOH,CAACwlD,GACA1kD,EAACm0C,IACC,QAASlrB,EAAMlC,OAASkC,EAAMlC,OAAOzkB,OAAS,EAC9C,SAAUwiD,EACV,cAAc,mBACd,SAAUO,EACV,cACEvR,EAAiB,iBAAmB,yBAEtC,iBACA,gBAAiBsqB,iBAAW97D,OAC5B,qBACA,eAAgB6iD,YAEhBllD,EAACi6B,IAAQ,MAAQ,yBAAyB,eAAe,iBACvDj6B,YACE,UAAU,yBACV,KAAK,SACL,QAAS80D,EACT,SAAU,CAAC9rC,EAAMlC,QAAUkC,EAAMlC,OAAOzkB,SAAW,WAEnDrC,EAAC,WAGLA,EAACwzC,IACC,WAAW,kBACX,eAAe,QACf,gBACA,QAAS,IAAM2hC,EAAkB,kBAEjCn1E,UAAM,MAAO,CAAE0D,SAAU,OAAQid,cAAe,yBAElD3gB,EAACwzC,IACC,WAAW,oBACX,eAAe,QACf,gBACA,QAAS,IAAM2hC,EAAkB,oBAEjCn1E,UAAM,MAAO,CAAE0D,SAAU,OAAQid,cAAe,yBAElD3gB,EAACwzC,IACC,WAAW,kBACX,eAAe,QACf,gBACA,QAAS,IAAM2hC,EAAkB,kBAEjCn1E,UAAM,MAAO,CAAE0D,SAAU,OAAQid,cAAe,4BAIrD8jC,GACCzkD,EAACi7C,IACC,OAAQkK,EACR,QAASD,IAGbllD,SAAK,UAAU,2BACZ,AAACykD,EAkBAzkD,EAAC+xE,IAAiB,IAAKptB,IAjBvB3kD,SAAK,UAAU,2BACZm+D,GAAaA,EAAU97D,OAAS,EAC/BrC,EAAC,IACC,YACA,SAAUi1E,EACV,OACEtvD,GAAaA,EAAUY,MAAM,KAAKlkB,SAAW,EACzCsjB,EAAUY,MAAM,KAChB,CAAC,IAAK,KAEZ,eAGFvmB,EAAC,gBAYjB,KAAMo1E,IAAqBn0E,eAAKo0E,IAE1B7nD,GAAY,CAAExE,MAAO,GAAI/E,KAAM,iBAEA,MAC7B,CAAEV,eAAcvB,UAASC,UAAS0D,aAAcnI,IAChD,CAAEwL,QAAO/E,QAASwJ,GAAYD,UAGlCxtB,GAAC,IAEGgiB,UACAC,UACA0D,YACApC,eACAyF,QACAg5C,WAAY/9C,EAAK+9C,kBCtPZ,IAAqB,CAChC,KAAM,CACJ,QAAS,CACP,YAAa,mBACb,MAAO,GAAgB,CAAC,GAAG,GAAkB,GAAG,oBAYpD,EACA,EACwB,MAKlB,GAAO,AAJQ,IAAS,KAAK,GAC/B,GAAS,KAAK,GAAa,MAC3B,IAEsB,OAAO,AAAC,GAAU,EAAM,UAAY,SAMvD,CAAE,OAAM,YAJK,IAAM,GAAmB,GAIjB,OAHb,CAAC,EAA8B,KAC5C,GAAO,EAAM,CAAE,cAKnB,YAA4B,EAAM,MAC1B,GAAmB,GACnB,KAAU,cACL,KAAQ,GACZ,EAAI,IAAI,EAAK,aACZ,IAAI,EAAK,QAAS,MACf,KAAK,EAAK,gBAGd,gBAG2B,OAC3B,QAAO,KAAK,GAAS,MAAM,IAAI,AAAC,GAAQ,MACvC,CAAE,eAAgB,GAAS,KAAK,SAC/B,CAAE,GAAI,EAAK,KAAM,KAI5B,YAAyB,EAAgC,OAChD,GAAM,IAAI,AAAC,MACX,OAAS,EAAK,OAAO,IAAI,AAAC,MAC7B,GAAI,KACD,IAEE,GACN,gBAQH,EACqB,MACf,GAA8B,MAChC,GAAQ,WACD,KAAQ,GAAM,IACnB,GAAgB,QACgB,KAA5B,WAA4B,EAAjB,IAAiB,EAAjB,CAAX,oBAEG,KAAS,GAAQ,GACtB,KAAK,EAAM,IAAM,UACqB,KAAlC,WAAU,IAAwB,EAAjB,IAAiB,EAAjB,CAAjB,qBACG,KAAU,GAAS,MACW,KAA/B,MAAK,IAA0B,EAAnB,IAAmB,EAAnB,CAAZ,OACF,EAAW,GAAM,GAEjB,EAAO,aACR,GACA,GACA,GACA,GAJQ,CAKX,QACA,GAAI,EACJ,aAEK,KAAK,cAKX,GAGT,YAAe,EAAiB,IAC1B,GAAM,EAAG,OAAS,EAAG,MACjB,CAAE,WAAU,gBAAiB,EAAG,OACpC,CAAC,EAAK,CAAE,WAAU,qBACZ,SAAS,KAAK,EAAS,QAAQ,MAC/B,cAAgB,EACb,GAET,CAAE,SAAU,GAAI,aAAc,WAEzB,CAAE,eAAc,SAAU,EAAS,KAAK,iBAExC,CAAE,aAAc,IAAK,SAAU,ICzH1C,KAAM5+D,IAQF,CACFI,UAAW,CACTtD,QAAS,GACT8C,gBAAiB,UACjBhB,OAAQ,OACR4zC,UAAW,QAEbyN,eAAgB,CACdnjD,QAAS,MACTuD,aAAc,MACd8c,OAAQ,WACRvd,gBAAiB,SAGnB4qC,OAAQ,CACNrD,aAAc,oBACd+Y,cAAe,MACfn/C,WAAY,OACZN,MAAO,WAETi/C,eAAgB,CACdxT,KAAM,EACN7rC,aAAc,OAEhB8+C,WAAY,CACVjT,KAAM,EACN5rC,SAAU,OACVS,WAAY,OACZN,MAAO,WAETwrC,MAAO,CACLxsC,MAAO,UAIX,YAA6BpD,EAAOyzB,EAAK,MACjC9Q,GAAcf,KACdwT,EAAQwX,KAERgO,EAAUlyC,mBAEVw7C,EAAe9hD,sBAAY,IAAM,MAC/ByzE,GAAsBxxB,GAC1B1hC,EAAY3Y,QACX,gCAGKA,QAAQmxC,UACd06B,GAA4CC,KAE7C,CAACnzD,wBAEM,IAAM,MAEb,CAACuhC,SAEExQ,GAActxC,sBACjBilB,GAAW,GACEjf,SAAS,CACnBW,KAAM,yBACNqf,QAAS,CAAElG,IAAK,WAAY6I,MAAO1D,OAE/B6O,QAAQ,4CAEhB,CAACd,EAAOzS,yCAGU8Q,EAAK,MACvBgxB,YAAa,IAAM,GACTz6C,QAAQsoC,0BAKb,MAAO3uC,GAAOI,qBAChB,IAAW,SAAU2vC,EAAa,IAAKkH,oBACjC,MAAOj3C,GAAOigD,2BAChBR,IACC,MAAM,SACN,oBAAoB,aACpB,kBAEDA,IACC,MAAM,UACN,oBAAoB,cACpB,kBAEDA,IACC,MAAM,QACN,oBAAoB,YACpB,kBAEDA,IACC,MAAM,QACN,oBAAoB,YACpB,kBAEDA,IACC,MAAM,eACN,oBAAoB,YACpB,kBAEDA,IACC,MAAM,aACN,oBAAoB,iBACpB,kBAEDA,IACC,MAAM,SACN,oBAAoB,eACpB,kBAEDA,IACC,MAAM,eACN,oBAAoB,mBACpB,uBAQZ,OAAezf,qBAAWoyC,IC/H1B,KAAMC,IAA+B,CACnC70D,SAAU,SACVmY,WAAY,SACZyoC,aAAc,YAGV/gB,GAAmD,CACvD,CACEC,SAAU,YACVl9B,MAAO,EACPozB,OAAQ,QACRwJ,SAAWvK,GAASA,EAAI6/B,MAAQ7/B,EAAI6/B,MAAM9xC,KAAK,KAAO,GACtD+xC,cAAe,GACfruE,MAAO,GACLzE,MAAO,QACPi0C,SAAU,QACVC,SAAU,SACP0+B,KAGP,CACE/0B,SAAU,YACVl9B,MAAO,EACPozB,OAAQ,YACRwJ,SAAWvK,GAAS,GAAEA,EAAInpB,KAAKyC,QAAQ,QAAQ0mB,EAAIjpB,GAAGuC,QAAQ,KAC9DwmD,cAAe,IAEjB,CACEj1B,SAAU,YACVl9B,MAAO,EACPozB,OAAQ,eACRwJ,SAAU,SAEZ,CACEM,SAAU,iBACVl9B,MAAO,EACPozB,OAAQ,aACRwJ,SAAU,cAEZ,CACEM,SAAU,mBACVl9B,MAAO,EACPozB,OAAQ,SACRwJ,SAAU,gBAEZ,CACEM,SAAU,eACVl9B,MAAO,EACPozB,OAAQ,SACRwJ,SAAU,WACV94C,MAAO,GACLzE,MAAO,OACPi0C,SAAU,QACP2+B,KAGP,CACE/0B,SAAU,cACVl9B,MAAO,EACPozB,OAAQ,UACRwJ,SAAU,UACV94C,MAAO,GACLzE,MAAO,OACPi0C,SAAU,QACP2+B,KAGP,CACE/0B,SAAU,aACVl9B,MAAO,EACPozB,OAAQ,SACRwJ,SAAU,QACVu1B,cAAe,GACf3+B,KAAM,CAAC,CAAEnB,SACP71C,SACE,UAAU,mBACV,MAAO,CAAE6C,MAAO,QAAS5C,QAAS,QAAS2gB,SAAU,mBAEpDi1B,kBAAKxoC,SAASuoE,SACb51E,EAAC,IACC,OAAQ,GACR,MAAO,GACP,OAAQ61C,EAAIxoC,SAASuoE,aAQjC,YAAuB,CAAE9wE,OAAM+wE,SAA6B,MACpDzzD,GAAcf,KAEd8+B,EAAiBxgD,kBACrB,IAAM,CACJ,CACE6jB,MAAO,GACPozB,OAAQ,GACR/zC,MAAO,KACPk0C,SAAU,OACVD,SAAU,OACVl0C,GAAI,aACJw9C,SAAU,QACVu1B,cAAe,GACf3+B,KAAM,CAAC,CAAEnB,SACP71C,YACE,KAAK,SACL,UAAU,aACV,QAAS,IAAM61E,EAAMhgC,YAErB71C,EAAC,WAKT,CAAC61E,IAGG70B,EAAerhD,kBAAQ,IAAM,MAC3B21E,GAAsB71C,GAC1Brd,EAAY3Y,QACZ,6BACA8rE,OAGElwC,GAAU,CAAC,GAAG8a,YACPc,KAAOR,IAAS,MACUQ,KAA3BP,aAA2BO,EAAdC,IAAcD,EAAdC,CAAbR,aACJ40B,EAAoB50B,OACNrb,EAAS6b,SAItB7b,GAAQ3D,KAAK,CAACyf,EAASC,IAAYD,EAAQ39B,MAAQ49B,EAAQ59B,QACjE,CAAC28B,EAAgB/9B,UAEbtd,IAAQA,EAAKzC,OAAS,EAC3BrC,EAACy/C,IACC,OACA,QAASuB,EACT,kBAAmBj3B,GAAkB6X,SACrC,SAAS,QACT,iBAAkB,GAClB,yBAGF5hC,EAAC,OAIL,OAAeiB,eAAK60E,IC3IpB,KAAMxuE,IAAQrI;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAgCR82E,GAAgB,CACpBjU,QAAS,GACTkU,eAAgB,IAGlB,YAA4B,CAAExvD,UAAS9G,gBAAoC,MACnE7X,GAAWgpB,IACX,CAAEolD,sBAAuBC,KACzB71C,EAASlS,GAAyB3H,GAElC,CAACi+B,EAAWC,GAAiB/iD,mBAAS,IACtCgjD,EAAax8C,mBACb,CAACguE,EAAUC,GAAez0E,mBAG7Bo0E,IACGM,EAAmBluE,iBAAsC,MACzD,CAACgzB,EAAQi0B,GAAaztD,mBAAsB,CAChDmD,KAAM,GACNwxE,UAAW,GACXC,SAAU,KAEN,CAAE31E,QAAS41E,GAAoB,YAE/BtxB,EAAuBrjD,sBAAY,IAAM,GAC/B,CAAC4iD,IACd,CAACA,IAEEU,EAAqBtjD,sBAAY,IAAM,GAChC4H,QAAQy6C,gBACL,KACb,IAEGvN,EAAe90C,sBAAawtC,GAAU,IACtC,MAAOA,IAAU,UAAYA,IAAU,GAAI,MACvCyyB,GAAU34C,OAAOkmB,KACVonC,UAAoBA,IAAW3U,oBAE/B2U,UACRA,IACHT,eAAgB3mC,EAAM3Q,OAAOlU,UAGhC,wBAEO,IAAM,CACV5pB,kBAAM81E,oBACG,IAAM,MACTJ,GAAYK,GAAqBC,QACtBntE,QAAUotE,GAAiBP,EAAU,GAAG30D,IAAK6E,QACxD1hB,GAAOuxE,EAAiB5sE,QAAQ3E,KAChCyxE,EAAWO,GACfT,EAAiB5sE,QAAQstE,iBAGjB,CAAEjyE,OAAMwxE,YAAWC,gBAGhC,CAAC31E,iBAAM81E,OAAQlwD,wBAER,IAAM,MACR,CAAEs7C,UAASkU,kBAAmBG,aACzB,IAAM,IACXE,EAAiB5sE,WACf,CAACq4D,GAAW,CAACkU,EAAgB,MACzBlxE,GAAOuxE,EAAiB5sE,QAAQ3E,KAChCyxE,EAAWO,GACfT,EAAiB5sE,QAAQstE,iBAEhBC,UAAqBA,IAAYlyE,OAAMyxE,kBAC7C,MACCzvD,GAAS,CAAC,GAAGkvD,EAAezvD,MAAM,MACpCu7C,IAAY,QACPmV,QAAS,WAAUnV,UAGtBh9D,GAAOuxE,EAAiB5sE,QAAQytE,OAAOpwD,KAClCkwD,UAAqBA,IAAYlyE,cAIjD,CAACqxE,wBAEM,IAAM,YACE9tE,EAAO,CACjBqX,IAAiBvB,EAAQY,wBAAwBnc,MACtC6zE,GAAc,MACnBU,GAAcV,EAAUT,eAC1BS,EAAUT,eAAezvD,MAAM,KAC/B,GACE,CAACmG,EAAME,GAAMvkB,EAAMogB,MACnButD,EAAiB,CACrB,GAAGmB,EACF,SAAQ92C,EAAO3T,OAAU2T,EAAOzT,MACjCgX,KAAK,WACA,QAAK6yC,GAAL,CAAgBT,+BAKtB5oD,GAAG,WAAY0lB,GAEf,IAAM,IACJpI,IAAI,WAAYoI,KAExB,CAACzS,EAAQ3gB,SAEN03D,GAAuBv1E,sBAC1Bw1E,GAAgB,GACE5tE,QAAUotE,GAAiBQ,EAAa7wD,KAC7CuvD,KAEd,CAACvvD,IAGG23C,EAAYx+D,kBAAQ,IACjBojE,GAAY5nC,EAAOr2B,MACzB,CAACq2B,EAAOr2B,OAELwyE,EAAmBz1E,sBACtBg0C,GAAQ,MACD,CAAEryB,SAAUqyB,EAAIxoC,SAChB,CAAEqZ,SAAQo7C,UAAS4T,QAAQ,IAAOv6C,EAAOr2B,KAAK0e,KAC3C,CACPhb,KAAM+uE,GACN1vD,QAAS,CAAEnB,SAAQzC,KAAM,CAAE69C,UAASt7C,UAASxb,KAAM0qE,EAAM,QAG7D,CAAC7tE,EAAU2e,EAAS2U,EAAOr2B,OAGvBmsC,EAAepvC,sBAAY,IAAM,GACxB40E,UAAoBA,IAAWT,eAAgB,OAC3D,IAEGwB,EAAsB31E,sBACzBu7B,GAAS,MACFq6C,GAAO,AAACr6C,EAAyBjf,EAAQY,wBAAwBnc,GAAlDub,EAAQF,KAAKrb,KACf60E,IAErB,CAACxB,UAIDl2E,UACE,IAAK,CACHq0C,GACA9sC,GACAm9C,GACExlD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,uBAUH,CAACwlD,GACA1kD,EAACm0C,IACC,qBACA,eAAgBgR,EAChB,UAAW,GACX,UAAU,mBAEVllD,EAACwzC,IAEC,aAAc9zB,IAAiBvB,EAAQY,wBAAwBnc,GAC/D,WAAW,0BACX,eAAe,QACf,QAAS40E,WAETx3E,EAAC,IACC,MAAO,CACL2gB,cAAe,OACfjd,SAAU,OACVqc,UAAW,oBAVT,GAAEL,KAcV1f,EAAC,IACC,MAAO,CAAEsvC,KAAM,GACf,KAAMnU,EAAOm7C,UACb,SAAUc,IAEZp3E,EAAC,IACC,MAAO,CAAEsvC,KAAM,GACf,KAAMnU,EAAOo7C,SACb,SAAU5/B,IAEZ32C,EAAC,IACC,MAAOm2E,EAASH,eAChB,WAAY,IAAMh2E,EAAC,OACnB,MAAO,CAAEkvC,aAAc,CAAEI,KAAM,IAC/B,UAAU,eACV,KAAK,OACL,aAAc,IACd,YAAY,0BACZ,SAAUqH,EACV,QAAS1F,EACT,iBAILwT,GACCzkD,EAACi7C,IACC,OAAQkK,EACR,QAASD,IAGbllD,SAAK,UAAU,2BACZ,AAACykD,EAGAzkD,EAACw1E,IAAoB,IAAK7wB,IAF1B3kD,EAAC81E,IAAc,KAAM3X,EAAW,MAAOmZ,SASjD,KAAMI,IAAwBz2E,eAAK02E,iBAEE,MAC7B,CACJhyD,YACAlG,YAAa,CAAEC,iBACblC,UACCmI,GAEH3lB,EAAC,IAAsB,QAAS2lB,EAAW,iBAFtB3lB,YAMzB,YAA6Bu2E,EAAoB,MACzCp7C,GAASo7C,EAASp0E,IAAKwf,GACpB,EACLA,MACAC,MAAOD,EACP6I,MAAO7I,IAER,aACIs1D,QAAQ,CAAEt1D,IAAK,KAAMC,MAAO,MAAO4I,MAAO,OAC1C2Q,EAGT,YAA8Bm7C,EAAW,OAChCA,GAAUn0E,IAAI,CAAC,CAAES,KAAIoI,YAC1B2W,IAAK/e,EACL4nB,MAAO5nB,EACPgf,MAAO5W,KCxTX,KAAM5H,IAAwB,CAC5BP,MAAO,OACPb,OAAQ,OACR9B,QAAS,MACTD,QAAS,OACTqzB,cAAe,UAUjB,YAAe,CAAElsB,WAAUC,YAAWC,QAAOswE,UAAsB,iBAG7D,YACA,MAAO,OAAKx0E,IAAWkE,kBACTswE,eAOpB,OAAe32E,eAAK42E,ICpBpB,KAAMz0E,IAAwB,CAC5BP,MAAO,OACP+yC,UAAW,OACX31C,QAAS,OACTqzB,cAAe,SACfpzB,QAAS,UACT2D,MAAO,QAST,YAAmB,CAAEuD,WAAUC,YAAWC,SAAyB,MAC3DwwE,GAAiBn4E,kBAAQ,IACtBm4C,mBAAS31C,IAAIiF,EAAU,AAAC2wC,GAC7Bh5C,uBAAag5C,EAAO,CAClBzwC,MAAO,GAAEijC,aAAc,wBAA2BwN,EAAMt4C,MAAM6H,UAGjE,CAACF,oBAGG,YAAsB,MAAO,OAAKhE,IAAWkE,YAC/CwwE,IAKP,OAAe72E,eAAK82E,ICtCpB,KAAM30E,IAAS,CACbP,MAAO,OACP5C,QAAS,OACTsD,WAAY,cAGd,YAAmB2nC,EAAO,OACpBA,GAAMllC,gBAAkB,MACnB,aACEklC,EAAMllC,gBAAkB,SAC1B,WAEF,SAaT,YAAqB,CACnBoB,WACAC,YACAC,QACA4jC,QAAQ,SACR9O,SAAS,SACT47C,OAAO,EACPtwE,UAAU,IAAM,MACG,iBAGf,YACA,MAAO,SACFtE,IADE,CAELG,WAAY00E,GAAU77C,GACtBz4B,UAAWunC,EACXoE,KAAM0oC,IACH1wE,GAEL,uBAON,OAAerG,eAAKi3E,ICnDpB,KAAM90E,IAAwB,CAC5BP,MAAO,OACP5C,QAAS,OACTC,QAAS,UACT2D,MAAO,UACPb,gBAAiB,UACjBunC,aAAc,uBACd7mC,SAAU,GACVS,WAAY,QASd,YAAmB,CAAEiD,WAAUC,YAAWC,SAAyB,iBAE1D,YAAsB,MAAO,OAAKlE,IAAWkE,gBAMtD,OAAerG,eAAKk3E,ICzBpB,KAAM/0E,IAAS,CACbP,MAAO,OACP5C,QAAS,OACTC,QAAS,WAUX,YAAqB,CACnBkH,WACAC,YACAC,QACAI,UAAU,IAAM,MACG,iBAGf,YACA,MAAO,OAAKtE,IAAWkE,GACvB,uBAON,OAAerG,eAAKi3E,ICHpB,YAA2B,CACzBh7C,UACAk7C,iBACA14D,eACA24D,kBACyB,MACnBxwE,GAAWgpB,IACXyG,EAAQ8U,KACRvX,EAAQwX,KACRisC,EAAoBnwE,iBAA0C,CAClEqb,MAAO,OAGH+0D,EAAoB12E,sBACxB,CAACe,EAAIqrC,IAAY,WACG,MACVqE,GAAc,KAAMzd,GAAMmB,YAC7B,GAAEiY,EAAU,SAAW,2CAEf,IAAM,GACN,CAAEzlC,KAAMgwE,GAAe51E,KAAIqrC,iBAEnC,QAGP,CAACpZ,EAAOhtB,IAEJ4wE,EAAqB52E,sBACzB,CAAC,CAAEe,KAAIoI,UAAW,MACVgsB,GAAU,CACd,CACEI,KAAM,MACNF,QAAS,SAAY,MACbob,GAAc,KAAMzd,GAAMmB,YAC9B,uCAEO,CAAExtB,KAAMkwE,GAAe7wD,QAAS,CAAEjlB,cAI/C,CAAEw0B,KAAM,OAGNghD,EAAiB,KACXnB,QAAQ,CACd7/C,KAAM,uBACNF,QAAS,SAAY,MACbob,GAAc,KAAMzd,GAAMmB,YAC9B,mDAEO,CACPxtB,KAAMmwE,GACN9wD,QAAS,CAAE+wD,WAAY5tE,cAOzBktB,kBAAkB,CACtB/C,QAAS,gDACT6B,aAGJ,CAACnC,EAAOhtB,EAAUyvB,EAAO8gD,IAErBS,EAAwBh3E,sBAC3Bi3E,GAAU,WACS,MACVxmC,GAAc,KAAMzd,GAAMmB,YAC9B,kDAES,IAAM,GACN,CAAExtB,KAAMuwE,GAAqBn2E,GAAIk2E,SAEzC,QAGP,CAACjkD,EAAOhtB,IAGJmxE,EAAWn3E,sBACf,CAACmiB,EAAQR,IAAU,MACX,CAAE5gB,KAAIoI,QAASgZ,EAEjBq0D,GAAkBA,IAAmBz1E,IACrB6G,QAAQ+Z,MAAQA,EACxB60D,MACQ5uE,QAAQ+Z,MAAQ,WAG9By1D,GAAoB,CAAC,oBACvBZ,KAAmBz1E,IACbrC,KAAK,iBACJmf,IAAiB1U,IAClBzK,KAAK,kBAEb+3E,EAAkB7uE,QAAQ+Z,OAAS,MACnCA,EAAQ80D,EAAkB7uE,QAAQ+Z,SAE1BjjB,KAAK,mBAGR04E,EAAQr1C,KAAK,MAEtB,CAACy0C,EAAgB34D,IAGbw5D,EAAkBv5E,kBAAQ,IACvBu9B,iBAAS/6B,IAAI,CAAC05B,EAAGrY,MAEnB,IAAoB,UAAWw1D,EAASn9C,EAAGrY,eACzC,IACC,MAAM,SACN,KAAM,EACN,QAAS,IAAMq1D,EAAsBh9C,EAAEj5B,aAEtCi5B,EAAEja,UAEJ,IAAU,MAAM,OAAO,KAAM,oBACvB,QAAUvhB,GAAMA,EAAEkI,6BACpB4wE,IAAgB,KAAMt9C,EAAE/3B,MAAQ+3B,EAAE/3B,MAAQ+3B,EAAErR,cAGhD,IAAU,MAAM,SAAS,OAAO,SAAS,KAAM,cAC7C,IACC,QAASqR,EAAEuB,KACX,SAAW/0B,GACTkwE,EAAkB18C,EAAEj5B,GAAIyF,EAAMq2B,OAAOuP,WAGxCpS,EAAEu9C,2BAEC,UAAU,MACV,KAAK,SACL,QAAS,IAAMX,EAAmB58C,cAEjC,cA1BMA,EAAEj5B,KAiCpB,CACDi2E,EACA37C,EACA87C,EACAP,EACAF,0BAGQW,IAGZ,KAAM1rD,IAAY,CAAE0P,QAAS,IAEvBm8C,GAAuBp4E,eAAKq4E,iBAEI,MAC9B,CACJ75D,YAAa,CACXC,eACA5a,KAAM,CAAEuzE,oBAER76D,IACE,CAAE0f,WAAYzP,GAAYD,IAC1B4qD,EAAiBr7C,KAA4B16B,gBAGhD,IACOqd,eAAcwd,UAASk7C,iBAAgBC,mBCzLnD,KAAMj1E,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAiDf,YAA0B,CAAEi+B,WAAmC,OACxCv9B,mBAAQ,IACpBu9B,EACLn9B,EAAC83E,IAAM,OAAO,0BACZ73E,EAACm4E,aACCp4E,EAAC,cACCC,EAAC,IAAU,MAAM,SAAS,KAAM,qBAGhCA,EAAC,IAAU,MAAM,SAAS,KAAM,+BAKpCA,EAAC+3E,IAAU,IAAK30E,YACdpD,EAACu5E,YAILv5E,EAAC,OAEF,CAACk9B,IAKN,KAAM1P,IAAY,CAAE0P,QAAS,IAEvBs8C,GAAsBv4E,eAAKw4E,iBAEK,MAC9B,CAAEv8C,WAAYzP,GAAYD,UAEzBxtB,GAAC,IAAoB,YChF9B,KAAMoD,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAoDTgqD,GAA2BnO,KAAaoO,MAAM,CAClD7tB,UAAWyf,KAAaqO,UAAUpO,WAAWn5B,MAAM,kBAC7Ck5B,GAAW,MACTA,GAAW,CACfpuB,KAAMouB,KAAaqO,UAAUpO,WAAWn5B,MAAM,gBAC9CgL,GAAIkuB,KAAaqO,UAAUpO,WAAWn5B,MAAM,sBAEvCk5B,KAAaoO,MAAM,CACxBx8B,KAAMouB,KAAaqO,UAAUpO,WAAWn5B,MAAM,iBAC9CgL,GAAIkuB,KAAaqO,UAAUpO,WAAWn5B,MAAM,iBAE9CwnC,UAAWtO,KAAaqO,UAAUlG,IAAI,GAAGlI,WAAWn5B,MAAM,kBAQ9D,YAA2B,CAAE83D,YAAY,IAAM,MAAgC,MACvE7nC,GAAU1pC,mBAEV2pC,EAAajwC,sBAAY,IAAM,GAC3B4H,QAAQsoC,cACf,IAEGC,EAAgBnwC,sBACnBilB,GAAW,aAEEA,OAGd,CAAC4yD,UAID35E,UAAK,IAAKqD,aACRpD,kBACED,EAAC,IACC,IAAK8xC,EACL,cAAeqY,GACf,iBAAkBjB,GAClB,SAAUjX,YAEVhyC,EAAC,OACDD,SAAK,UAAU,0BACbC,UAAM,UAAU,yCAChBA,EAAC,IACC,KAAMuqD,GACN,MAAO,CAAE1nD,MAAO,IAAKb,OAAQ,GAAIue,OAAQ,GACzC,KAAK,iBAITxgB,SAAK,UAAU,gBACbC,EAAC,IAAe,MAAM,KAAK,UAAU,iBACrCA,EAAC,GAAM,MAAM,gBACXA,EAAC,GAAY,KAAK,aAAa,KAAK,aAEtCA,EAAC,GAAM,MAAM,KAAK,MAAO,CAAE4hB,MAAO,CAAE1hB,QAAS,oBAC3CF,EAAC,GAAY,KAAK,WAAW,KAAK,gBAGtCD,SAAK,UAAU,gBACbC,EAAC,IAAe,MAAM,MAAM,UAAU,iBACtCA,EAAC,GAAM,MAAM,gBACXA,EAAC,GAAY,KAAK,cAAc,KAAK,aAEvCA,EAAC,GAAM,MAAM,KAAK,MAAO,CAAE4hB,MAAO,CAAE1hB,QAAS,oBAC3CF,EAAC,GAAY,KAAK,YAAY,KAAK,gBAGvCD,SAAK,UAAU,uCACbC,UAAM,UAAU,0CAChBA,EAAC,GACC,KAAK,eACL,KAAK,SACL,MAAO,CAAEqvC,MAAO,CAAE9uB,OAAQ,MAE5BvgB,UAAM,MAAO,CAAEwqD,YAAa,oCAIlCxqD,kBACEA,YAAQ,KAAK,SAAS,QAAS8xC,EAAY,UAAU,sDC/IpB,MACjC,CAACgI,EAAU6/B,GAAeh4E,qBAE1BitC,EAAgB/sC,sBAAai4C,GAAa,GAClCA,IACX,IACGjyC,EAAWgpB,IACXgE,EAAQwX,KAERutC,EAAiB/3E,sBACpBilB,GAAW,WACQ,IACZgzB,EAAU,GACH,CACPtxC,KAAM2hD,GACN7sC,UAAW,UAGPg1B,GAAc,KAAMzd,GAAMmB,YAC7B,uDAGM,CACPxtB,KAAM6hD,GACNxiC,QAAS,CAAEyxB,IAAKQ,EAAU37B,QAAS2I,gBAK/BhjB,MAAM,6BAIlB,CAAC+wB,EAAOhtB,EAAUiyC,aAIjB,IACC,iBAAkBlL,EAClB,eAAgB,CAAE+c,YAAa,GAAMD,WAAY,GAAMH,WAAY,eAElEsuB,IAAsB,UAAWD,MCjBxC,KAAME,IAAkC,CACtC,CACE1gD,MAAO,UACPzB,YAAYyuC,OACZ2T,kBAAmB,eACnBx8C,KAAM,MAER,CACEnE,MAAO,cACPzB,YAAY,OACZrwB,MAAO,CAAEsZ,SAAU,UACnBm5D,kBAAmB,mBACnBx8C,KAAM,MAER,CACEnE,MAAO,QACPzB,YAAYqiD,OACZD,kBAAmB,aACnBx8C,KAAM,MAER,CACEnE,MAAO,UACPzB,YAAY,OACZoiD,kBAAmB,eACnBx8C,KAAM,MAER,CACEnE,MAAO,YACPzB,YAAY,OACZoiD,kBAAmB,iBACnBx8C,KAAM,MAER,CACEnE,MAAO,SACPzB,YAAYsiD,OACZF,kBAAmB,cACnBx8C,KAAMP,EAAeC,OAEvB,CACE7D,MAAO,4BACPzB,YAAY,OACZoiD,kBAAmB,+BACnBx8C,KAAM,MAER,CACEnE,MAAO,oBACPzB,YAAY,OACZoiD,kBAAmB,GACnBx8C,KAAM,KACN28C,eAAgB,IAElB,CACE9gD,MAAO,QACPzB,YAAY,OACZoiD,kBAAmB,aACnBx8C,KAAMP,EAAeqvB,OAEvB,CACEjzB,MAAO,UACPzB,YAAY+5C,OACZqI,kBAAmB,eACnBx8C,KAAM,MAER,CACEnE,MAAO,aACPzB,YAAY,OACZoiD,kBAAmB,kBACnBx8C,KAAM,MAER,CACEnE,MAAO,WACPzB,YAAYwiD,OACZJ,kBAAmB,gBACnBx8C,KAAM,MAER,CACEnE,MAAO,uBACPzB,YAAY,OACZoiD,kBAAmB,GACnBx8C,KAAM,KACN28C,eAAgB,IAElB,CACE9gD,MAAO,aACPzB,YAAY,OACZoiD,kBAAmB,kBACnBx8C,KAAM,OAIG68C,GAAiD,CAC5DC,KAAM,UACNh8D,YAAa,QACbC,SAAU,YACVG,cAAe,SACfC,OAAQ,QACRG,wBAAyB,6BAG3B,aAA8E,MACtEuD,GAAcf,WAEbxf,uBACL,AAACjB,GACQ0N,EACL8T,EAAY3Y,QACX,kBAAiB7I,EAAKm5E,qBAG3B,CAAC33D,IAIL,YAAqB,CAAEgE,cAAek0D,GAAiB,MAC/CC,GAAsBC,KACtBN,EAAiBO,KACjB1pC,EAAQlvC,sBACXjB,GAAS,MACF85E,GAAeH,EAAoB35E,SAEtC85E,kBAAchgC,UAAW,IACxBggC,kBAAcz6E,WAAY,IAC1BW,EAAKs5E,iBAAmB38D,WAClBggB,MAAQ,MAAQ38B,EAAK28B,OAAS+8C,IACrC15E,EAAKs5E,gBAAkBA,GAG5B,CAACI,EAAeC,EAAqBL,IAGjCS,EAAW94E,sBACf,AAACjB,GAAwB,MACjB85E,GAAeH,EAAoB35E,SAClC85E,kBAAchgC,UAAW,IAAQggC,kBAAc1pB,OAExD,CAACupB,oBAII,MAAO,CAAE13E,MAAO,OAAQb,OAAQ,OAAQstC,KAAM,qBAChD,aACEwqC,GAAe33E,IAAKvB,GAEjBmwC,EAAMnwC,MACH,GAAU,MAET,MAAOA,EAAKw4B,MACZ,cAAeuhD,EAAS/5E,YAEvBA,EAAK+2B,WAJD/2B,EAAKw4B,YAc1B,KAAMwhD,IAAiB35E,eAAK45E,iBAEK,MACzB,CACJz0D,gBACA3G,YAAa,CAAEC,iBACblC,aAEI,IAAqB4I,gBAAe1G,8BCvLF,MACpC,GAAW,IACX,EAAQ,KAER,CAAE,KAAM,GAAc,KACtB,CAAC,EAAqB,GAA0B/d,mBAAS,IAEzD,EAAyBwG,iBAA+B,CAAE,OAAQ,KAClE,EAAqBtG,sBACzB,AAAC,GAAiB,CAEd,CACE,EAAQ,YAAY,GACpB,EAAQ,SAAS,GACjB,EAAQ,OAAO,GACf,EAAQ,eAAe,IACvB,SAAS,MAEL,KAAK,kDAGT,OAAO,KAAK,IAAwB,SAAS,MACrC,GAAuB,MAG1B,CACP,KAAM,GACN,QAAS,CAAE,mBAGf,CAAC,EAAO,EAAU,IAGd,EAAoBA,sBAAY,IAAM,CACtC,EAAuB,QAAQ,OAAO,SAAW,KAC1C,CACP,KAAM,GACN,SAAU,GAAS,kBAGjB,GAAW2H,GAAe,IAAM,GACb,QAAQ,OAAS,IACvC,OACoB,QAAQ,OAAO,KAAK,OAIvC,EAAuB,QAAQ,OAAO,OAAS,OACvC,EAAuB,QAAQ,OAAQ,AAAC,GAChD,EAAS,YAEY,QAAQ,OAAS,KAC/B,CACP,KAAM,OAGT,CAAC,EAAU,IAER,EAA+B3H,sBAAY,IAAM,GAC5C,CACP,KAAM,MAEP,CAAC,IAEE,EAA4BA,sBAAY,IAAM,GACzC,CACP,KAAM,GACN,sBAAuB,CAAC,MAEH,CAAC,IACvB,CAAC,EAAU,IAER,EAAkCA,sBAAY,IAAM,GAC/C,CACP,KAAM,MAEP,CAAC,UAEG,CACL,qBACA,oBACA,+BACA,4BACA,kCACA,uBC/EJ,aAA+B,MACvB,CACJi5E,kBACA10D,gBACA20D,gBACAj2E,OACAqd,kBACE3E,IACE3V,EAAWgpB,IACXgE,EAAQwX,KACRpvB,EAAaC,KAEb,CACJ+4D,qBACA+E,oBACAC,kCACAC,gCACEhF,KAEE,CAAE7jC,yBAAwBE,oBAAmBa,iBACjD+nC,KAEI,CAAEnxD,YAAWV,UAAWsB,KAExBf,EAAiBX,KACjBkyD,EAAcz7E,kBAAQ,IACnBymB,IAAkB4W,EAAeC,OAASn4B,GAAQA,EAAKzC,OAAS,EACtE,CAACyC,EAAMshB,IAEJ2e,EAAgBljC,sBACpB,KAAOuoB,IAAe,MACd,CACJ5hB,OACA+hB,MAAO,CAAE3nB,OACPwnB,SAEI5hB,OACDuhB,IAAkB+U,YACZ,CACPt2B,KAAMu3C,GACNC,WAAYp9C,kBAOXmnB,IAAkBuW,QACZ,CACP93B,KAAM6qD,GACNvuD,KAAM,CAAElC,sBAOPmnB,IAAkBmf,SACZ,CACP1gC,KAAMusD,GACNltC,QAAS,CACP/iB,KAAM,CACJlC,KACAinB,mCASHE,IAAkB0C,QACZ,CACPjkB,KAAMiqE,GACN5qD,QAAS,CACPjlB,KACAinB,kCAQDE,IAAkBuS,qBACfgW,GAAc,KAAMzd,GAAMmB,YAC7B,kCAEM,CACPxtB,KAAM6yE,GACNxzD,QAAS,CACPjlB,KACAkf,WAAYsI,EAAWG,MAAMzI,+BAcvC,CAAC+H,EAAgBhiB,EAAUyhB,EAAQuL,IAG/BymD,EAAiCz5E,sBACrC,CAACxB,EAAGk7E,IAAQ,CACNz2E,GAAQA,EAAKzC,OAAS,GAAKk5E,GAAO,GAAKA,GAAO,IAC5Cl7E,EAAEoI,YACK,CACPD,KAAMgzE,GACNC,QAASF,MAEL91D,KAAM,+BAA8B81D,2BAErCl9B,GAA0Bh+C,KACzBy6E,kBAAkBS,MACX,CACP/yE,KAAMkzE,GACND,QAASF,OAGF,CACP/yE,KAAMgzE,GACNC,QAASF,MAEL91D,KACH,+BAA8B81D,8BAO3C,CAAC1mD,EAAO/vB,EAAM+C,EAAUizE,IAGpBa,EAAuB95E,sBAC1BxB,GAAM,YAEHuhB,EACAg6D,EAAc,GACd,IACIx1D,IAAkB4W,EAAeC,OAAS,CAAC9a,OACvC,IAAIzd,OAAO,qCAAoCkd,QAC5Cg6D,GAAex1D,IAAkB4W,EAAeqvB,WACnD,IAAI3nD,OACP,2DAA0Dkd,gBAK/DA,EACAg6D,EAAc,GACd,IACIx1D,IAAkB4W,EAAeqvB,OAAS,CAAClqC,OACvC,IAAIzd,OAAO,qCAAoCkd,QAC5Cg6D,GAAex1D,IAAkB4W,EAAeC,WACnD,IAAIv4B,OACP,2DAA0Dkd,QAK7D,IACE,CAACvhB,EAAEoI,UAAY,CAACpI,EAAEw7E,eACZx7E,EAAEshB,SACH,kBAGA,QACA,WACgBxD,EAAQF,KAAKrb,cAE7B,KACCwjB,IAAkB4W,EAAeqvB,SACLluC,EAAQO,OAAOkD,MAAO,MACjCzD,EAAQO,OAAO9b,QAGhCub,EAAQM,cAAcmD,MACtB,MAEiBzD,EAAQM,cAAc7b,eAIxC,OAC2Bub,EAAQI,gBAAgBqD,SACnCzD,EAAQI,gBAAgB3b,cAIxC,OAC2Bub,EAAQK,mBAAmBoD,SACtCzD,EAAQK,mBAAmB5b,cAI3C,OAC2Bub,EAAQE,YAAYuD,SAC/BzD,EAAQE,YAAYzb,cAIpC,OAC2Bub,EAAQG,SAASsD,SAC5BzD,EAAQG,SAAS1b,cAIjC,OAC2Bub,EAAQW,eAAe8C,SAClCzD,EAAQW,eAAelc,sBAQ5C,CAACvC,EAAEoI,UAAY,CAACpI,EAAEw7E,SAAW,CAACx7E,EAAEy7E,eAC1Bz7E,EAAEshB,SACH,KACCy5D,iBAKD,KACCA,yBASN,CAAC/6E,EAAEoI,aAAeozE,SAAWx7E,EAAEy7E,gBACzBz7E,EAAEshB,SACH,IACE0wB,MACHpnB,2BAEC,IACEsnB,MACHtnB,2BAEC,UAEDA,mCAKJ5qB,EAAEoI,aAAeozE,SAAWx7E,EAAEy7E,gBACxBz7E,EAAEshB,SACH,QACA,IACEyxB,MACHnoB,uCAKD5qB,KACDyD,MAAMzD,EAAE80B,WAGlB,CACEhT,EACA0S,EACAomD,EACAG,EACAF,EACA90D,EACA6vD,EACA+E,EACA/9D,EACAm2B,EACAb,EACAF,IAGE0pC,EAAkBl6E,sBACrBxB,GAAM,IAEH,CAAC,CAAC,QAAS,YAAYsf,SAAStf,EAAEq+B,OAAOs9C,YACzCjB,EACA,MACMQ,GAAMtsD,OAAO5uB,EAAE6uD,KAAK95B,OAAO/0B,EAAE6uD,KAAK7sD,OAAS,KAAO,EACpDk5E,EAAM,IACuBl7E,EAAGk7E,GAE9B,CAAC,SAAU,aAAa57D,SAAStf,EAAEshB,MAAQqI,EAAUI,cACrDa,iBACG8Z,EAAc/a,EAAUI,eAER/pB,KAK7B,CACE0kC,EACA/a,EACAsxD,EACAP,EACAY,+BAIM,cACCtjD,iBAAiB,UAAW0jD,EAAiB,IAE/C,IAAMvnD,SAAS+D,oBAAoB,UAAWwjD,EAAiB,KACrE,CAACA,IAEG,UC3VI,IAAc,0BCA3B,OAAe,CAAE,QAAS,4DCKG,CAAEl5E,QAAQ,IAAKb,SAAS,KAAkB,iBAGjE,MAAO,CAAEa,QAAcb,UACvB,MAAM,6BACN,QAAQ,wCAGN,KAAK,UACL,SAAS,UACT,EAAE,yRAGF,KAAK,UACL,SAAS,UACT,EAAE,oWAGF,KAAK,UACL,SAAS,UACT,EAAE,uTAGF,KAAK,UACL,SAAS,UACT,EAAE,0LAEE,KAAK,UAAU,EAAE,SAAS,EAAE,QAAQ,MAAM,QAAQ,OAAO,oBAE7D,KAAK,UACL,SAAS,UACT,EAAE,8EAGF,KAAK,UACL,SAAS,UACT,EAAE,sVAGF,KAAK,UACL,SAAS,UACT,OAAO,qKAGP,KAAK,UACL,SAAS,UACT,OAAO,+HC5Cf,KAAMoB,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAoFf,YAAsB,CAAEi2B,UAAU,IAAM,MAA2B,OAE/Dn1B,UAAK,IAAKqD,aACRrD,SAAK,UAAU,0BACbC,oCAEAA,EAACq6B,IAAY,QAASnF,OAExBn1B,SAAK,UAAU,sBACbA,SAAK,UAAU,6BACbC,EAAC,IAAK,MAAO,IAAK,OAAQ,gBAClBA,EAAC,OACTA,UAAM,UAAU,cAChBA,OAAG,KAAK,yBAAyB,OAAO,SAAS,IAAI,+DAIvDA,SAAK,UAAU,4BACbA,UAAM,UAAU,gBAGlBA,UAAM,UAAU,6MAKhBD,SAAK,UAAU,6BACbC,UAAM,UAAU,cAChBA,UAAM,UAAU,4CAChBA,UAAM,UAAU,iBAGlBA,SAAK,UAAU,mBACbD,kBACEC,qIAIAA,qDACAA,wEAUZ,aAAuB,MACf,CAAEi8E,WAAYC,SAChBD,KAAY,OACPj8E,wBACEi8E,EAAQE,WAAW,QAE1Bp8E,OACE,KAAO,2CAA0Ck8E,EAAQ/gD,MAAM,KAC/D,OAAO,SACP,IAAI,8BAEC+gD,EAAQ/gD,MAAM,EAAG,OAKxBl7B,OACE,KAAO,2CAA0Ci8E,IACjD,OAAO,SACP,IAAI,sBAEHA,IC9JT,aAAiC,+BAGxB,UAAU,wCACZ,GACC,MAAM,sDAGL,GACC,KAAK,wCACL,WAAazxD,GAAUA,GAAS,GAAKA,GAAS,EAC9C,KAAK,gBCDf,KAAM4xD,IAAmB,CACvB,CACEx6D,MAAO,0BACP5W,KAAM,uBAER,CACE4W,MAAO,4BACP5W,KAAM,2BAER,CACE4W,MAAO,yBACP5W,KAAM,qBAER,CACE4W,MAAO,4BACP5W,KAAM,yBAER,CACE4W,MAAO,yBACP5W,KAAM,sBAER,CACE4W,MAAO,2BACP5W,KAAM,0BAER,CACE4W,MAAO,gBACP5W,KAAM,uBAER,CACE4W,MAAO,wBACP5W,KAAM,qBAER,CACE4W,MAAO,2BACP5W,KAAM,uBAER,CACE4W,MAAO,kCACP5W,KAAM,uCAER,CACE4W,MAAO,iBACP5W,KAAM,wBAER,CACE4W,MAAO,mBACP5W,KAAM,0BAER,CACE4W,MAAO,wBACP5W,KAAM,+BACNqxE,eAAgB,KAQpB,YAAsB58E,EAAO,UAExB,IACC,MAAO,CACL+D,UAAW,CAAEvD,QAAS,QAASsgB,OAAQ,SAAU1d,MAAO,gBAG1D,UAAU,mBACV,KAAMpD,EAAMuL,MAFPvL,EAAMuL,MAOjB,YAA2B,CAAEoX,eAAuC,MAC5Dq+B,GAA0B9gD,kBAC9B,IAAM,CACJ,CACE6jB,MAAO,EACPozB,OAAQ,IACRI,KAAM,CAAC,CAAEnB,SAAUA,EAAIryB,MAAQ,GAEjC,CACEA,MAAO,EACPozB,OAAQ,UACRwJ,SAAU,QACV94C,MAAO,CAAEzE,MAAO,QAElB,CACE2gB,MAAO,EACPozB,OAAQ,SACRI,KAAM,CAAC,CAAEnB,WACN,IAAa,KAAO,WAAUA,EAAIxoC,SAASrC,kBAGhD,CACEwY,MAAO,EACPozB,OAAQ,eACRI,KAAM,CAAC,CAAEnB,SACP,AAACA,EAAIxoC,SAASgvE,6BACX,IAAa,KAAO,WAAUxmC,EAAIxoC,SAASrC,gBAMpD,IAGIlG,EAAOnF,kBAAQ,IACZy8E,GAAKp4D,OACTpjB,GAAS0N,EAAU8T,EAAc,GAAExhB,EAAKoK,iBAAmB,IAE7D,CAACoX,oBAGG,MAAO,CAAEvf,MAAO,OAAQ+d,SAAU,qBACpC6+B,IAAW,QAASgB,EAAS,WCtHpC,KAAMr9C,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAsCf,aAAgC,MACxB,CAAE6nB,SAAQ4nB,iBAAkBC,KAC5B3gB,EAAYruB,kBAChB,IAAM2O,EAAUwY,EAAQ,qBAAsB,IAC9C,CAACA,IAGGie,EAAgBljC,sBACnB2hB,GAAU,MACH84D,GAAkBtuD,EAAUwH,OAAO,EAAGhS,KAC9B,qBAAsB84D,IAEtC,CAACtuD,EAAW0gB,IAGR6tC,EAA6B16E,sBAAY,IAAM,MAC7C26E,GAAY,CAChB76D,IAAKg5C,IACL3vD,KAAM,GACN2qD,IAAK,OACLE,GAAI,QAEA4mB,EAAe,CAAC,GAAGzuD,EAAWwuD,KACtB,qBAAsBC,IACnC,CAACzuD,EAAW0gB,UAGb3uC,GAAC+d,8BACC9d,OAAG,UAAU,6DACbA,SAAK,IAAKoD,YACRrD,qBACEC,oBACED,kBACEC,QAAI,UAAU,6BACdA,QAAI,UAAU,0CACdA,QAAI,UAAU,qDACdA,QAAI,UAAU,sDACdA,QAAI,UAAU,kCAGlBA,oBACGguB,iBAAW7rB,IAAI,CAACqkB,EAAShD,IAAU,MAC5B+3D,GAAM/3D,EAAQ,QAElBzjB,mBACEA,QAAI,UAAU,wBACZA,oBAAOw7E,WAAe,OAExBv7E,QAAI,UAAU,6BACZA,EAAC,GACC,KAAO,sBAAqBwjB,SAC5B,UAAU,gBAGdxjB,QAAI,UAAU,oCACZA,EAAC,GACC,KAAO,sBAAqBwjB,QAC5B,UAAU,gBAGdxjB,QAAI,UAAU,oCACZA,EAAC,GACC,KAAO,sBAAqBwjB,OAC5B,UAAU,gBAGdzjB,QAAI,UAAU,gCACZC,EAACq6B,IACC,QAAS,IAAM0K,EAAcvhB,GAC7B,WAAa,UAASgD,EAAQxb,OAC9B,eAAe,UAEhBgjB,EAAU3rB,SAAWmhB,EAAQ,GAC5BxjB,YACE,UAAU,MACV,KAAK,SACL,QAASu8E,WAETv8E,EAAC,cAlCC,GAAEwmB,EAAQ7E,mBCvFpC,KAAMve,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAsCTy9E,GAAgB,CAAC,CAAE97E,OAAMgxC,SAAQhN,cAAe,MAC9C,CAAC55B,EAAM2xE,GAAWh7E,mBAAiB,IACnCi7E,EAAsB/6E,sBACzBxB,GAAM,GACHkI,oBACM,MACDyC,IAET,CAACA,EAAM4mC,IAGHirC,EAAyBh7E,sBAC5BxB,GAAM,GACHkI,oBACO3H,EAAK+gB,MAEhB,CAAC/gB,EAAK+gB,IAAKijB,IAGPk4C,EAAej7E,sBAAaxB,GAAM,GAC9BA,EAAEq+B,OAAOlU,QAChB,UAGDxqB,UAAK,IAAKoD,YACPxC,EAAK+gB,MAAQ,MACZ5hB,SAAK,UAAU,0BACbC,WACE,MAAOgL,EACP,YAAY,mBACZ,QAAU3K,GAAMA,EAAEkI,kBAClB,SAAUu0E,IAEZ98E,YACE,KAAK,SACL,UAAU,cACV,QAAS48E,EACT,SAAU,CAAC5xE,uBAMfjL,SAAK,UAAU,sBACbC,mBAAOY,EAAKghB,QACX,CAACR,GAAWxgB,EAAK+gB,MAChB3hB,YACE,KAAK,SACL,UAAU,gBACV,QAAS68E,4BCtEjBz5E,GAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA8Ef,YAAyB,CAAEi2B,WAAiC,MACpD,CAACvP,EAAW6iD,GAAgB7mE,mBAAS,eACN0f,OAA7BxZ,aAA6BwZ,EAAhBe,IAAgBf,EAAhBe,CAAbva,aACFgtB,EAAQwX,KACRwF,EAAU1pC,mBACViZ,EAAa27D,KAEbC,EAAiBr9E,kBAAQ,IACtByhB,EAAWuK,OAAO,CACvB,CACEhK,IAAK,MACLC,MAAO,sBAGV,CAACR,IAEE0wB,EAAajwC,sBAAY,IAAM,GAC3B4H,QAAQsoC,cACf,IACGkrC,EAAcp7E,sBAAY,IAAM,GAC3B,CAAE2G,KAAM,wBACXmtB,QAAQ,6CAEb,CAACd,EAAOhtB,EAAUqtB,IAEf8c,EAAgBnwC,sBACnBilB,GAAW,GACD,CAAEte,KAAM,kBAAmBqf,QAASf,MACvC6O,QAAQ,6CAIhB,CAACd,EAAOhtB,EAAUqtB,IAGdgxC,EAAmBrkE,sBAAa81C,GAAQ,GAC/BA,EAAIP,QAChB,IAEG8lC,EAAsBr7E,sBACzBmJ,GAAS,GACC,CACPxC,KAAM,gBACNqf,QAAS,CACP1G,UAAWnW,EACXlG,KAAM+sC,EAAQpoC,QAAQqd,WAI5B,CAACjf,IAEGs1E,EAAyBt7E,sBAC5B8f,GAAQ,GACE,CACPnZ,KAAM,mBACNqf,QAAS,CACP1G,UAAWQ,MAIjB,CAAC9Z,IAGGu1E,EAAyBv7E,sBAC7B,AAACs1B,GAA6B,GACnB,CACP3uB,KAAM,gBACNqf,QAAS,CACP1G,UAAWgW,EAAOxV,QAIxB,CAAC9Z,IAGG+oD,EAAa/uD,sBAChBjB,GAEGZ,EAAC,IACC,OACA,OAAQk9E,EACR,SAAUC,IAIhB,CAACD,EAAqBC,UAItBp9E,UAAK,IAAK,CAACkyC,GAAa7uC,cACtBrD,SAAK,UAAU,0BACbC,wCACAA,EAACq6B,IAAY,QAASnF,EAAS,UAAU,gBAE3Cn1B,SAAK,UAAU,gCACbC,UAAM,UAAU,kCAEhBA,EAAC,IACC,KAAMg9E,EACN,aACA,YAAa56D,iBAAajB,UAAU1X,QACpC,SAAU2zE,OAGdp9E,SAAK,UAAU,wBACbA,EAAC,IAEC,IAAK6xC,EACL,cAAezvB,EAAY3Y,QAC3B,SAAUuoC,WAEVjyC,EAACk4C,IACC,SAAUR,GAAc4lC,KACxB,YACA,QAASnX,YAETlmE,EAAC,IAAI,SAAS,cAAc,MAAM,uBAChCA,SAAK,UAAU,yBACbA,EAAC,WAILA,EAAC,IAAI,SAAS,aAAa,MAAM,sBAC/BA,SAAK,UAAU,yBACbA,EAAC,WAILA,EAAC,IAAI,SAAS,UAAU,MAAM,mBAC5BA,SAAK,UAAU,yBACbA,EAAC,IAAkB,YAAaoiB,EAAY3Y,QAAQxJ,kBAxBrDoG,KAAKE,UAAU6b,EAAY3Y,YA8BpC1J,SAAK,UAAU,6BACbC,YAAQ,KAAK,SAAS,QAAS8xC,EAAY,UAAU,wBAGrD9xC,YAAQ,KAAK,SAAS,QAASi9E,EAAa,UAAU,+BC1O9D,KAAM75E,IAGF,CACFI,UAAW,CACTxB,OAAQ,OACR/B,QAAS,OACTyD,SAAU,QAEZ2rC,MAAO,CACLxsC,MAAO,QAETigD,eAAgB,CACdxT,KAAM,KAER1tB,MAAO,CACL0tB,KAAM,KAERguC,aAAc,CACZt7E,OAAQ,OACRa,MAAO,OACPY,aAAc,MACdS,OAAQ,uBACRqc,OAAQ,UACR4P,WAAY,SAIhB,aAAsC,MAC9BtoB,GAAWgpB,IACX0sD,EAAiBp1E,mBACjBq1E,EAAsBr1E,mBACtBs1E,EAAct1E,mBACdu1E,EAAkBv1E,mBAElBw1E,EAAoB97E,sBAAY,IAAM,GACjC,CACP2G,KAAMo1E,GACNz/D,QAAS,CACP0/D,iBAAkBL,EAAoB/zE,QAAQ+gB,MAC9CszD,YAAaP,EAAe9zE,QAAQ+gB,MACpCizD,YAAaA,EAAYh0E,QAAQ+gB,MACjCuzD,aAAcL,EAAgBj0E,QAAQwkC,YAGzC,CAACpmC,IAEEm2E,EAAqBn8E,sBAAY,IAAM,GAClC,CACP2G,KAAMo+C,MAEP,CAAC/+C,oBAGG,MAAOzE,GAAOI,sBAChB,IACC,IAAKg6E,EACL,MAAM,uBACN,KAAK,mBACL,MAAO,CACLnuC,MAAOjsC,GAAOisC,MACdyT,eAAgB1/C,GAAO0/C,eACvBlhC,MAAOxe,GAAOwe,OAEhB,aAAc,OAEf,IACC,IAAK67D,EACL,MAAM,eACN,KAAK,cACL,MAAO,CACLpuC,MAAOjsC,GAAOisC,MACdyT,eAAgB1/C,GAAO0/C,eACvBlhC,MAAOxe,GAAOwe,OAEhB,aAAc,MAEf,IACC,IAAK27D,EACL,MAAM,iBACN,KAAK,cACL,MAAO,CACLluC,MAAOjsC,GAAOisC,MACdyT,eAAgB1/C,GAAO0/C,eACvBlhC,MAAOxe,GAAOwe,OAEhB,aAAc,GACd,KAAK,kBAGF,MAAO,CAAEq8D,aAAc,WAAYl7E,YAAa,4BAEjD,MAAO,CAAEA,YAAa,MAAOksC,WAAY,EAAG9e,WAAY,QACxD,QAAQ,+CAIT,IAAS,KAAK,eAAe,IAAKutD,mBAInC,KAAK,SACL,MAAOt6E,GAAOk6E,aACd,QAASK,iCAKT,KAAK,SACL,MAAOv6E,GAAOk6E,aACd,QAASU,yBCvGjB,KAAM56E,IAAwE,CAC5EI,UAAW,CACTtD,QAAS,MACT8B,OAAQ,OACR/B,QAAS,OACTsD,WAAY,UAEdqe,MAAO,CACLqtB,WAAY,EACZ9e,WAAY,QAEdmtD,aAAc,CACZt7E,OAAQ,OACRa,MAAO,OACPY,aAAc,MACdS,OAAQ,uBACRqc,OAAQ,UACR4P,WAAY,SAIhB,aAAmC,MAC3BtoB,GAAWgpB,IACXwpB,EAAUlyC,mBACV+1E,EAAe/1E,mBAEf,CAACg2E,EAAWC,GAAgBz8E,mBAAS,cAErCg8E,EAAoB97E,sBACvBilB,GAAW,IACN3I,GAAU,UACNggE,OACD,WACO,GACRA,UAAWD,EAAaz0E,QAAQ+gB,OAC7B1D,aAGF,eACO,GACRq3D,UAAWD,EAAaz0E,QAAQ+gB,OAC7B1D,WAMA,CACPte,KAAM61E,GACNlgE,aAGJ,CAACggE,EAAWt2E,IAGRm2E,EAAqBn8E,sBAAY,IAAM,GAClC,CACP2G,KAAMo+C,MAEP,CAAC/+C,IAEEy2E,EAAoBz8E,sBAAY,IAC7B0f,OAAOC,KAAK+8D,IAAoBp8E,IAAKguC,GACnC,EAAExuB,IAAKwuB,EAAKvuB,MAAO28D,GAAmBpuC,GAAM3lB,MAAO2lB,KAE3D,IAEGquC,EAAyB38E,sBAAasuC,GAAQ,GACrCA,IACZ,IAEG4f,EAAWpwD,kBAAQ,IAAM,QACrBw+E,OACD,eAKI,CACLrmB,WALiBhd,KAAaoO,MAAM,CACpCu1B,cAAe3jC,KAAaqO,UAAUlG,IAAI,GAAGlI,WAC7C2zB,UAAW5zB,KAAa4jC,SAAS,GAAG3jC,aAIpC4jC,aAAc,CAAEF,cAAe,IAAK/P,UAAW,WAG9C,qBACA,mBAKI,CAAE5W,WAJUhd,KAAaoO,MAAM,CACpC01B,OAAQ9jC,KAAaqO,UAAUlG,IAAI,GAAGt1C,IAAI,GAAGotC,aAG1B4jC,aAAc,CAAEC,OAAQ,kBAGtC,CAAE9mB,WAAY,GAAI6mB,aAAc,MAE1C,CAACR,oBAGG,MAAO/6E,GAAOI,8BACX,MAAOJ,GAAOwe,iCACnB,IACC,IAAKs8D,EACL,KAAMI,IACN,MAAO,CAAEx7E,WAAY,GAAIC,YAAa,IACtC,SAAUy7E,EACV,aAAa,iBAGd,IACC,IAAKnkC,EACL,SAAUsjC,EAEV,cAAe5tB,EAAS4uB,aACxB,iBAAkB5uB,EAAS+H,qBAE1BqmB,GAAaA,IAAc,mBACrB,MAAO,CAAEl+E,QAAS,oBACpB,GAAM,MAAM,4BACV,GAAY,KAAK,SAAS,KAAK,sBAEjC,GAAM,MAAM,aAAa,MAAO,CAAE2hB,MAAO,CAAE1hB,QAAS,qBAClD,GAAY,KAAK,SAAS,KAAK,mBAKrCi+E,GAAa,CAAC,iBAAkB,cAAcx+D,SAASw+D,MACrD,GAAM,MAAM,+BACV,GACC,KAAK,SACL,KAAK,SACL,IAAK,EACL,IAAK,EACL,MAAO,CAAEjvC,aAAc,CAAEltC,OAAQ,eAtBlCqE,KAAKE,UAAUwpD,EAAS4uB,2BA4B7B,KAAK,SACL,MAAOv7E,GAAOk6E,aACd,QAAS,IAAMjjC,EAAQ5wC,QAAQsoC,4CAM/B,KAAK,SACL,MAAO3uC,GAAOk6E,aACd,QAASU,yBC1JjB,KAAM56E,IAAuD,CAC3DI,UAAW,CACTX,MAAO,OACP5C,QAAS,OACTsD,WAAY,SACZD,eAAgB,SAChBY,OAAQ,uBACRT,aAAc,MACd0sB,WAAY,OACZntB,gBAAiB,YACjBU,SAAU,OACVG,MAAO,UACP0c,OAAQ,UACRnc,OAAQ,aAEVwd,MAAO,CACLmX,WAAY,SACZyoC,aAAc,WACd5gD,SAAU,SACVm2B,SAAU,OACVyT,YAAa,MACbnpB,aAAc,QAclB,YAAoB5hC,EAAwByzB,EAAU,MAC9C,CAAEloB,OAAMwf,QAAQ,EAAG4jB,WAAUxsB,QAAOta,QAAOD,aAAc5H,EACzDo/E,EAAmB12E,iBAAO,GAC1B22E,EAAW32E,iBAAOqiB,iCAEJ0I,EAAK,MACvBgN,SAAW1V,GAAU,GACV/gB,QAAU+gB,WAIjBu0D,GAAoBl9E,sBACvBwG,GAAU,YACkBA,EAAO,IAC5B05B,GAAO15B,EAAMQ,QAAUg2E,EAAiBp1E,aAC3BA,QAAUpB,EAAMQ,QAC7BR,EAAM2uB,UAAY,EAAG,MACjBtwB,GAAOq7B,KAAct5B,SAAW,GAAK,KAClCgB,QAAUq1E,EAASr1E,QAAU/C,IAC7B,CACP8jB,MAAOs0D,EAASr1E,QAChBuB,sBAKqB,QAClButB,oBAAoB,YAAaymD,UACjCzmD,oBAAoB,UAAW0mD,KAGvBx1E,QAAUpB,EAAMQ,eAC1BwvB,iBAAiB,YAAa2mD,UAC9B3mD,iBAAiB,UAAW4mD,IAErC,CAACj0E,EAAMojC,oBAKL,MAAO,OAAKhrC,GAAOI,WAAc8D,GACjC,YACA,YAAay3E,qBAEP,MAAO37E,GAAOwe,eAAQA,MAKlC,OAAewhB,qBAAW87C,IChE1B,KAAM97E,IAGF,CACFI,UAAW,CACTtD,QAAS,MACT8B,OAAQ,OACR/B,QAAS,QAEXovC,MAAO,CACLxsC,MAAO,SAETy6E,aAAc,CACZt7E,OAAQ,OACRa,MAAO,OACPY,aAAc,MACdS,OAAQ,uBACRqc,OAAQ,UACR4P,WAAY,QAEdsgB,OAAQ,CACN3tC,WAAY,MACZC,YAAa,OACbmB,OAAQ,OACRlC,OAAQ,SAINm9E,GAAuB,CAC3BC,OAAQ,SACRC,UAAW,YACXz+B,SAAU,YAGN0+B,GAAa,CACjB,CACE39D,IAAKw9D,GAAqBC,OAC1Bx9D,MAAO,SACP4I,MAAO20D,GAAqBC,QAE9B,CACEz9D,IAAKw9D,GAAqBE,UAC1Bz9D,MAAO,YACP4I,MAAO20D,GAAqBE,WAE9B,CACE19D,IAAKw9D,GAAqBv+B,SAC1Bh/B,MAAO,WACP4I,MAAO20D,GAAqBv+B,WAUhC,YAAyC,CACvC97C,OACA+mC,QACA7nB,UACuC,MACjCnc,GAAWgpB,IACX,CAACrG,EAAO0V,GAAYv+B,mBAAS,CAAE49E,IAAK,EAAGC,IAAK,IAC5CV,EAAW32E,iBAAO,CAAEo3E,IAAK,EAAGC,IAAK,IAEjCC,EAASt3E,mBACTu3E,EAASv3E,mBAET,CAACw3E,EAAqBC,GAA0Bj+E,mBACpDw9E,GAAqBC,4BAGb,IAAM,CACVp7D,KACOva,QAAUua,EAAOwG,QACjBxG,EAAOwG,SACT/gB,QAAQy2B,SAASlc,EAAOwG,MAAM+0D,OAC9B91E,QAAQy2B,SAASlc,EAAOwG,MAAMg1D,SAE9B/1E,QAAQy2B,SAAS4+C,EAASr1E,QAAQ81E,OAClC91E,QAAQy2B,SAAS4+C,EAASr1E,QAAQ+1E,OAE1C,CAACx7D,SAEE25D,GAAoB97E,sBAAY,IAAM,QAClC89E,OACDR,IAAqBE,aACf,CACP72E,KAAMq3E,eAKLV,IAAqBC,UACf,CACP52E,KAAMs3E,GACNt1D,oBAIC20D,IAAqBv+B,YACf,CACPp4C,KAAMu3E,cAOX,CAACl4E,EAAU83E,EAAqBn1D,IAE7Bw1D,EAA6Bn+E,sBACjC,CAACo+E,EAAWC,IAAc,IACpBA,IAAc,OAASp7E,EAAKggB,GAAI,MAC5Bq7D,GAAQF,EAAUV,IAAMT,EAASr1E,QAAQ81E,IACzCa,EAAQH,EAAUT,IAAMV,EAASr1E,QAAQ+1E,MACrCD,KAAOY,EAASC,EAAQv0C,kBAAOroB,OAAS1e,EAAKggB,GAAGziB,SAGnD,CACPmG,KAAM63E,GACN71D,MAAOy1D,KAGX,CAACn7E,EAAKggB,GAAIjd,EAAUgkC,iBAAOroB,QAGvB88D,EAAcz+E,sBACjBxB,GAAM,MACC,CAAE2K,OAAMwf,SAAUnqB,EAAEq+B,UACtBr+B,EAAEq+B,OAAQ,MACNmC,GAAW,OAAKi+C,EAASr1E,SAAd,EAAwBuB,GAAOwf,IAC5CrB,OAAOqB,GAAOmmB,SAAW,OACA9P,EAAU71B,KAE9BvB,QAAUo3B,IACVi+C,EAASr1E,WAGtB,CAACu2E,IAGGO,EAAoB1+E,sBACvBxB,GAAM,MACCwgC,GAAW,OAAKi+C,EAASr1E,SAAd,EAAwBpJ,EAAE2K,MAAO3K,EAAEmqB,UACzBqW,EAAUxgC,EAAE2K,QAC9BvB,QAAUo3B,IACVi+C,EAASr1E,UAEpB,CAACu2E,IAGGhC,EAAqBn8E,sBAAY,IAAM,GAClC,CACP2G,KAAMo+C,MAEP,CAAC/+C,IAEE+oC,EAAkB/uC,sBAAasuC,GAAQ,GACpBA,IACtB,oBAGI,MAAO/sC,GAAOI,sBAChB,IACC,SAAUotC,EACV,KAAM0uC,GACN,aAAcH,GAAqBC,OACnC,MAAOh8E,GAAOqtC,SAGfkvC,IAAwBR,GAAqBC,0BAEzC,GAAM,MAAM,QAAQ,MAAO,CAAEt5B,QAAS,CAAE/iD,YAAa,mBACnD,IACC,KAAK,MACL,MAAO,CAAEssC,MAAOjsC,GAAOisC,OACvB,SAAUixC,EACV,MAAO91D,EAAM+0D,IACb,KAAK,SACL,aAAc,UAGjB,GAAM,MAAM,mBACV,IACC,KAAK,MACL,MAAO,CAAElwC,MAAOjsC,GAAOisC,OACvB,SAAUixC,EACV,MAAO91D,EAAMg1D,IACb,KAAK,SACL,aAAc,UAGjBN,IACC,IAAKO,EACL,KAAK,MACL,MAAM,qCACN,MAAO,CAAE58E,MAAO,OAChB,SAAU09E,MAEXrB,IACC,IAAKQ,EACL,KAAK,MACL,MAAM,qCACN,MAAO,CAAE78E,MAAO,OAChB,SAAU09E,mBAMd,KAAK,SACL,MAAOn9E,GAAOk6E,aACd,QAASK,iCAKT,KAAK,SACL,MAAOv6E,GAAOk6E,aACd,QAASU,yBAejB,KAAMwC,IAAqCv/E,eACzCw/E,IAGIjzD,GAAY,CAAEzL,MAAO,GAAIiC,OAAQ,mBACc,MAC7C,CACJvE,YAAa,CACX3a,KAAM,CAAE+mC,WAERruB,IAEE,CAAE1Y,OAAMo4B,WAAYzP,GAAYD,IAEhCxJ,EAASrkB,kBAAQ,IAEnBu9B,EAAQlM,KAAMhN,GAAWA,EAAOhZ,OAASmyB,KACzC,KAED,CAACD,aAEI,IAAyCp4B,OAAMkf,SAAQ6nB,UCpRjE,KAAMzoC,IAGF,CACFI,UAAW,CACTtD,QAAS,MACT8B,OAAQ,OACR/B,QAAS,OACTyD,SAAU,OACVH,WAAY,YAEd8rC,MAAO,CACLrtC,OAAQ,OACRa,MAAO,OACPY,aAAc,MACdS,OAAQ,uBACRqc,OAAQ,kBACR5c,UAAW,UAEbm/C,eAAgB,CACdxT,KAAM,GAER1tB,MAAO,CACL0tB,KAAM,GAERguC,aAAc,CACZt7E,OAAQ,OACR80C,SAAU,OACVrzC,aAAc,MACdS,OAAQ,uBACRqc,OAAQ,UACR4P,WAAY,OACZjwB,QAAS,OAEXwgF,KAAM,CACJzxC,WAAY,EACZ9e,WAAY,OACZzsB,SAAU,SAId,aAAoC,MAC5BmE,GAAWgpB,IACX6sD,EAAkBv1E,mBAClBo1E,EAAiBp1E,mBAEjBw1E,EAAoB97E,sBAAY,IAAM,GACjC,CACP2G,KAAMm4E,GACNxiE,QAAS,CACPE,YAAa,CACXy/D,YAAa7uD,OAAOsuD,EAAe9zE,QAAQ+gB,QAAU,IACrDuzD,aAAcL,EAAgBj0E,QAAQwkC,aAI3C,CAACpmC,IAEEm2E,EAAqBn8E,sBAAY,IAAM,GAClC,CACP2G,KAAMo+C,MAEP,CAAC/+C,oBAGG,MAAOzE,GAAOI,6BACZ,MAAO,CAAEy6E,aAAc,WAAY19D,OAAQ,+BAE5C,MAAO,CAAExd,YAAa,MAAOksC,WAAY,EAAG9e,WAAY,QACxD,QAAQ,+CAIT,IAAS,KAAK,eAAe,IAAKutD,SAEpC,IACC,IAAKH,EACL,MAAM,iBACN,KAAK,cACL,MAAO,CACLluC,MAAOjsC,GAAOisC,MACdyT,eAAgB1/C,GAAO0/C,eACvBlhC,MAAOxe,GAAOwe,OAEhB,aAAc,IACd,KAAK,qBAGL,KAAK,SACL,MAAOxe,GAAOk6E,aACd,QAASK,iBACI,yEAKb,KAAK,SACL,MAAOv6E,GAAOk6E,aACd,QAASU,gCAIL,MAAO56E,GAAOs9E,8FCpG1B,KAAMt9E,IAGF,CACFI,UAAW,CACTtD,QAAS,MACT8B,OAAQ,OACR/B,QAAS,QAGXovC,MAAO,CACLrtC,OAAQ,OACRa,MAAO,OACPY,aAAc,MACdS,OAAQ,uBACRqc,OAAQ,kBACR5c,UAAW,UAEb25E,aAAc,CACZt7E,OAAQ,OACRa,MAAO,OACPY,aAAc,MACdS,OAAQ,uBACRqc,OAAQ,UACR4P,WAAY,QAEdvO,MAAO,CACLqtB,WAAY,EACZ9e,WAAY,SAIVywD,GAAQ73B,GAAwB,EAAG,IAEzC,aAAmC,MAC3BlhD,GAAWgpB,IACX,CAAE/rB,OAAMqd,kBAAmB3E,IAC3BqjE,EAAmB14E,mBACnB,CAAC24E,EAAqBC,GAA0Bp/E,mBAAS,GAEzDg8E,EAAoB97E,sBAAY,IAAM,GACjC,CACP2G,KAAMw4E,GACNx2D,MAAO,CACLy2D,gBAAiBhyD,OAAO4xD,EAAiBp3E,QAAQ+gB,OACjDs2D,0BAGH,CAACj5E,EAAUi5E,IAERI,EAAkBr/E,sBAAY,IAC9BiD,GAAQqd,kBAAgBvf,IAExB,GACApC,KAAKwhD,MACHxhD,KAAK2gF,KAAMr8E,EAAKqd,EAAeqB,OAAO1e,KAAgBuE,EAAEhH,SAIvD,GACN,CAAC8f,EAAgBrd,IAEdw7E,EAAcz+E,sBACjBxB,GAAM,IACDA,EAAEq+B,OAAQ,MACNuB,GAAS5/B,EAAEq+B,OAAO0iD,SAASC,MAC7BpyD,OAAO5uB,EAAEq+B,OAAOlU,OAChBs2D,IACmB7gD,KAG3B,CAAC6gD,IAGG9C,EAAqBn8E,sBAAY,IAAM,GAClC,CACP2G,KAAMo+C,MAEP,CAAC/+C,oBAGG,MAAOzE,GAAOI,8BACX,MAAOJ,GAAOwe,4BACnB,IACC,IAAKi/D,EACL,KAAMD,GACN,MAAO,CAAE99E,WAAY,GAAIC,YAAa,IACtC,aAAcm+E,gBAEV,MAAO99E,GAAOwe,gDAElB,KAAK,kBACL,MAAOxe,GAAOisC,MACd,KAAK,SACL,aAAcyxC,EACd,QAASR,EACT,QAAQ,uBACR,KAAK,oBAIL,KAAK,SACL,MAAOl9E,GAAOk6E,aACd,QAASK,iCAMT,KAAK,SACL,MAAOv6E,GAAOk6E,aACd,QAASU,yBCjHjB,KAAM56E,IAGF,CACFI,UAAW,CACTtD,QAAS,MACT8B,OAAQ,OACR/B,QAAS,OACTyD,SAAU,QAEZ2rC,MAAO,CACLxsC,MAAO,QAETigD,eAAgB,CACdxT,KAAM,KAER1tB,MAAO,CACL0tB,KAAM,KAERguC,aAAc,CACZt7E,OAAQ,OACRyB,aAAc,MACdS,OAAQ,uBACRqc,OAAQ,UACR4P,WAAY,SAIhB,aAA8B,MACtBtoB,GAAWgpB,IACXywD,EAAkBn5E,mBAElBw1E,EAAoB97E,sBAAY,IAAM,GACjC,CACP2G,KAAM+4E,GACNpjE,QAAS,CACPmjE,gBAAiBA,EAAgB73E,QAAQ+gB,UAG5C,CAAC3iB,IAEEm2E,EAAqBn8E,sBAAY,IAAM,GAClC,CACP2G,KAAMo+C,MAEP,CAAC/+C,IAEEy4E,EAAcz+E,sBACjBxB,GAAM,CACDA,EAAEq+B,UACK,CAAEl2B,KAAMg5E,GAA2B35D,QAASxnB,EAAEq+B,OAAOlU,SAGlE,CAAC3iB,oBAII,MAAOzE,GAAOI,sBAChB,IACC,IAAK89E,EACL,MAAM,cACN,KAAK,cACL,MAAO,CACLjyC,MAAOjsC,GAAOisC,MACdyT,eAAgB1/C,GAAO0/C,eACvBlhC,MAAOxe,GAAOwe,OAEhB,aAAc,EACd,SAAU0+D,gBAGV,KAAK,SACL,MAAOl9E,GAAOk6E,aACd,QAASK,8CAKT,KAAK,SACL,MAAOv6E,GAAOk6E,aACd,QAASU,yBCtDjB,YAAqBv+E,EAAyB,MACtC,CAAEgiF,eAAcC,aAAa,IAAM,KAAMC,uBAAwBliF,EAEjE63B,EAAQ8U,KACR,CACJ3iC,QAAS,CACPxJ,QAAS,CAAEgsC,YAEb9qB,YACAtZ,YACEwZ,KAEE27D,EAAiBD,KACjB6E,EACJ31C,qBAAS21C,sBAAuBzgE,EAAU0gE,MAEtCC,EAAgBniF,kBAAQ,IAAM,QAC1BgiF,OACDxjE,GAAQC,YAAYxb,YACf,WACLub,GAAQI,gBAAgB3b,YACnB,WACLub,GAAQE,YAAYzb,YACf,WACLub,GAAQM,cAAc7b,YACjB,WACLub,GAAQK,mBAAmB5b,YACtB,WACLub,GAAQO,OAAO9b,YACV,SAIX,CAAC++E,IAEEI,EAA6BlgF,sBAAY,IAAM,GAC7C4jB,OAAM,OAAoB,CAC9B3jB,SAAUyxB,GAAUE,WACpBwE,eAAgB,GAChBp1B,MAAO,IACPb,OAAQ,OAET,CAACs1B,IAEE0qD,EAAcngF,sBAAY,IAAM,GAC9B4jB,OAAM,OAAiB,CAC3BuS,iBAAkB,GAClBl2B,SAAUyxB,GAAUK,OACpB/wB,MAAO,IACPb,OAAQ,OAET,CAACs1B,IAEE2qD,EAAyBpgF,sBAC7B,AAACs1B,GAA6B,GACnB,CACP3uB,KAAM,gBACNqf,QAAS,CACP1G,UAAWgW,EAAOxV,QAIxB,CAAC9Z,aAIA,uBAEG,MAAO,CACL5H,QAAS,OACTqzB,cAAe,MACf/vB,WAAY,wCAIX,IAAQ,YAAY,wBAClB,GAAQ,MACP,QAASy+E,EACT,iBAAiB,aACjB,GAAG,OACH,MAAM,iCAGJ,MAAO,CACL/hF,QAAS,OACTsD,WAAY,SACZD,eAAgB,qBAGjB4+E,wBAKJ,UAAU,4BAAoBJ,gBAGnC,MAAO,CACL7hF,QAAS,OACTqzB,cAAe,MACf/vB,WAAY,oBAGb,CAACq+E,KACC,IACC,KAAM5E,EACN,YAAa77D,EAAU1X,QACvB,SAAUw4E,wBAIX,IAAQ,YAAY,yBAClB,GAAQ,MACP,GAAG,cACH,MAAM,cACN,QAAS,IAAMz8E,OAAOwrD,KAAKmxB,GAAa,qBAEvC,SAEF,CAACP,KACC,GAAQ,MACP,GAAG,mBACH,QAASG,EACT,MAAM,8BAEL,SAIJ,CAACN,KACC,GAAQ,MACP,GAAG,cACH,QAASC,EACT,MAAM,cACN,UAAU,0BAET,oBAUjB,KAAMU,IAAiBnhF,eAAKohF,gBAEU,CAAEZ,eAAcC,cAAc,MAC5D,CACJjiE,YAAa,CAAEkiE,wBACbnkE,aAED,IAEGmkE,sBACAF,eACAC,oBCjMK,IAAc,CACzB,IAAK,MACL,OAAQ,SACR,KAAM,OACN,GAAI,KACJ,IAAK,MACL,IAAK,MACL,IAAK,MACL,SAAU,YAEC,GAAmB,CAC9B,IAAK,YAGP,YAA0B,EAAiB,OAClC,IAAI,YAAW,GACnB,MAAM,EAAG,GACT,OAAO,CAAC,EAAK,IAAU,GAAO,EAAK,SAAS,IAAI,SAAS,EAAG,KAAO,IAGxE,kBAAwB,EAAM,EAAU,CAAE,SAAU,IAAS,MACrD,GAAW,KAAM,OAAM,aACjB,GACC,EAAQ,SAAW,EAAS,cAAgB,EAAS,OAIpE,YAAqB,EAAU,IACzB,CAAC,EAAS,QACN,IAAI,OAAM,QAAQ,EAAS,YAAY,EAAS,oBAEjD,GAGT,YAA0B,EAAM,OACvB,GAAK,QAAQ,QAAS,IAAI,cAGnC,YAAqB,EAAM,OAClB,GAAK,OAAO,EAAG,EAAK,YAAY,MAGzC,YAAiC,EAAM,MAC/B,GAAO,EAAK,QAAQ,WAAY,IAAI,MAAM,WAEzC,CAAE,KAAM,EAAK,GAAG,cAAe,UAAW,EAAK,GAAG,eAS3D,YACE,EACA,EAAkC,GAClC,OACO,SAAQ,IACZ,GAAgB,IAAI,KAAK,EAAe,AAAC,GACjC,GAAI,SAAQ,CAAC,EAAS,IAAW,MAChC,GAAS,GAAI,cACZ,QAAU,AAAC,GAAM,EAAO,KACxB,QAAU,AAAC,GAAM,EAAO,KACxB,OAAS,IAAM,IAChB,EAAO,OAAQ,MACX,GAAS,EAAO,OAChB,EAAO,GAAY,EAAK,MACxB,EAAY,GAAiB,EAAK,QAChC,CAAE,SAAQ,OAAM,gBAGxB,EAAQ,WACH,kBAAkB,KAElB,mBAAmB,OAOpC,kBAAgC,EAAO,EAAkC,GAAI,MACrE,GAAkE,YAC7D,KAAQ,MACb,MACI,GAAS,KAAM,GAAK,MAAM,EAAQ,SAAW,aAAe,QAC5D,EAAO,GAAY,EAAK,MACxB,EAAY,GAAiB,EAAK,QACjC,KAAK,CAAE,SAAQ,OAAM,oBACrB,WAEC,MAAM,SAGX,GCjET,KAAMp6E,IAAQrI;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAyBRm0B,GAAiBn0B;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQvB,YAAkBQ,EAAO,MACjB,CAAEoD,QAAOb,UAAWwb,IACpB3V,EAAWgpB,IACXgE,EAAQwX,KAERi2C,EAAsBzgF,sBAC1B,MAAO0gF,EAAgBC,IAAyB,QACrCC,KAAaD,GAAsB,MACpCE,GAA4BH,EAAev+D,OAC9CjjB,GAASqE,GAAiBrE,EAAKiK,QAAUy3E,UAGpCA,OACDE,IAAYC,UACTC,GAAQ,KAAMC,IAAiBJ,KAC5B,CAAEl6E,KAAMu6E,GAAeF,oBAG7BF,IAAYK,WACZL,IAAYt8E,WACTw8E,GAAQ,KAAMC,IAAiBJ,EAA2B,CAC9DO,SAAU,QAERP,EAA0BrgF,SAAW,EAAG,MACpC6gF,GAAU,GAAIC,aAAY,UAC1B,GAAGC,OAASF,EAAQG,OAAOR,EAAM,GAAGO,UAEjC,CAAE56E,KAAM86E,GAAgBT,oBAE3B,IAAIn+E,OAAM,4CAKfi+E,IAAYY,QACZZ,IAAYa,SACTX,GAAQ,KAAMC,IAAiBJ,EAA2B,CAC9DO,SAAU,OAEH,CAAEz6E,KAAMi7E,GAAiBZ,oBAI/BF,IAAYe,UACTb,GAAQ,KAAMC,IAAiBJ,EAA2B,CAC9DO,SAAU,OAEH,CAAEz6E,KAAMm7E,GAAed,oBAQxC,CAACh7E,IAGG+7E,EAAmB/hF,sBACvB,KAAOghF,IAAU,MACTL,GAAuB,CAC3B,GAAG,GAAIqB,KAAIhB,EAAM1gF,IAAKpB,GAASqE,GAAiBrE,EAAKiK,gBAG9Cy3E,KAAaD,GAAsB,MACpCE,GAA4BG,EAAM7+D,OACrCjjB,GAASqE,GAAiBrE,EAAKiK,QAAUy3E,MAExC,QACMA,OACDE,IAAYC,UACTC,GAAQ,KAAMiB,IAAUpB,KACrB,CAAEl6E,KAAMu6E,GAAeF,oBAI7BF,IAAYK,WACZL,IAAYt8E,QACXq8E,EAA0BrgF,SAAW,EAAG,MACpCwgF,GAAQ,KAAMiB,IAClBpB,EACA,CACEO,SAAU,QAKVc,AADkBC,GAAiBnB,EAAM,GAAGO,UAC1Ba,GAAiBC,IAAK,MACpCC,GAAc,KAAMC,IAAIC,UAAUxB,EAAM,GAAGO,aAC3Cd,GAAoB/gE,OAAOuF,OAAOq9D,EAAYtB,OAAQ,CAC1DF,GAAYK,aAET,MACCE,GAAU,GAAIC,aAAY,UAC1B,GAAGC,OAASF,EAAQG,OAAOR,EAAM,GAAGO,UACjC,CAAE56E,KAAM86E,GAAgBT,qBAG7B,IAAIn+E,OAAM,4CAIfi+E,IAAYY,QACZZ,IAAYa,SACTX,GAAQ,KAAMiB,IAAUpB,EAA2B,CACvDO,SAAU,OAEH,CAAEz6E,KAAMi7E,GAAiBZ,oBAI/BF,IAAYe,UACTb,GAAQ,KAAMiB,IAAUpB,EAA2B,CACvDO,SAAU,OAEH,CAAEz6E,KAAMm7E,GAAed,oBAI7BF,IAAYuB,UACTrB,GAAgB,KAAMiB,IAAUpB,EAA2B,CAC/DO,SAAU,cAEDqB,KAAWzB,GAAO,MACrBsB,GAAc,KAAMC,IAAIC,UAAUC,EAAQlB,QAE1CZ,EAAuB,CAC3B,GAAG,GAAIqB,KACLtiE,OAAOuF,OAAOq9D,EAAYtB,OAAO1gF,IAAKpB,GACpCqE,GAAiBrE,EAAKiK,SAIXw3E,EAAqBp7D,KACnCm9D,GACC5B,GAAY4B,EAAGnb,gBAAkBmb,IAAO5B,GAAYuB,KAUlDM,CAPcjjE,OAAOC,KAAK2iE,EAAYtB,OAAOz7D,KAC9CjkB,GACQ,CAAC,MAAO,MAAO,MAAMikB,KAAMq9D,GAChCthF,EAAKuhF,SAASD,QAII,CAAEj8E,KAAMm8E,GAAe9B,eACzCP,GACJ/gE,OAAOuF,OAAOq9D,EAAYtB,OAC1BL,MAGO,CAAEh6E,KAAMm8E,GAAe9B,oBAMjCF,IAAYiC,SACVd,GAAUpB,EAA2B,CACxCO,SAAU,KACT/8E,KAAK,KAAO28E,IAAU,UACZyB,KAAWzB,KACX,CACPr6E,KAAMq8E,GACN9jF,KAAMujF,yBAMN,IAAI5/E,OACR,kFAGCrE,KACE,CAAEmI,KAAM2hD,GAAkB7sC,UAAW,OACxCxZ,MAAMzD,EAAE80B,YAIpB,CAACN,EAAOhtB,EAAUy6E,IAGdhlD,EAASz7B,sBACZijF,GAAiB,GACP,CAAEt8E,KAAM2hD,GAAkB7sC,UAAW,KACzCsmE,EAAiBkB,IAExB,CAACj9E,EAAU+7E,IAGP,CACJmB,eACAC,gBACAC,eACAj0B,KAAMk0B,GACJC,GAAY,CACd7nD,SACA8nD,QAAS,KAGLp0B,EAAOnvD,sBAAY,IAAM,MAE5B,CAACqjF,UAGFllF,GAAC,IAAe,MAAOgxD,WACrBjxD,eAASglF,MAAgB,KAAK,OAAO,IAAK3xD,aACxCpzB,4BAAoB,kBAAqBglF,MACxCC,GACCllF,SACE,IAAKuH,GACL,MAAO,CACLzE,MAAQ,GAAEA,MACVb,OAAS,GAAEA,MACX+hC,UAAW,OACXjhC,WAAY,kBAGd9C,EAAC,OACDA,4CAGHP,EAAM2H,eC5Rf,KAAM,IAAgB,CACpB2S,GACAzD,GACAoE,GACAnJ,GACAuI,GACA/K,GACA8B,GACAw0E,GACA5zE,GACAJ,GACAqF,GACAF,GACArF,GACAC,GACAL,GACAE,GACA4D,GACAF,GACAlC,GACA0C,GACAxD,GACA2zE,GACAC,GACAjsE,GACA7F,GACAE,GACAE,GACAE,GACAqI,IAGF,YAAyB,EAAuB,OACzC,IAAc,SAAS,GCxB9B,KAAMqrC,IAAaxoD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA0DnB,YAAkB,CAAEyoD,OAAM9lC,QAAOla,WAA0B,OAEvD3H,aAAQ,KAAK,SAAS,UAAU,YAAY,oBACzC2nD,EACD1nD,mBAAO4hB,OAWb,YAAkB,CAAE+lC,QAAOC,cAAalgD,WAA0B,MAC1D89E,GAAUr9E,mBACV,CAACs9E,EAAWC,GAAgB/jF,mBAAS,CACzC0H,EAAGu+C,EAAY/kD,MACfyG,EAAGs+C,EAAY5lD,0CAGD,IAAM,MACd2jF,GAAUH,EAAQ/7E,QAAQR,0BAClB28E,GAAiB,IACzBt8E,GAAIs+C,EAAY5lD,aAChB2jF,GAAQjlE,OAASlb,OAAOixB,gBACtBmxB,EAAY5lD,OAAS,KAAa0e,OAASlb,OAAOixB,cAEjD,OACFmvD,GADE,CAELt8E,SAGH,CAACs+C,EAAY5lD,SAGdhC,SACE,IAAKwlF,EACL,UAAU,OACV,MAAO,CACLzlE,UAAY,aAAY0lE,EAAUp8E,SAASo8E,EAAUn8E,kBAGtDq+C,iBAAOxlD,IAAKvB,GAETZ,EAAC,UAA2BY,IAAM,QAAS,IAAM8G,EAAQ9G,KAA1CA,EAAKgC,mBAcM,CAClC+0B,YACAkwB,UAAU,GACVF,QAAQ,GACRjgD,UAAU,IAAM,MACE,MACZogD,GAAgB3/C,iBAAuB,MACvC,CAAC4/C,EAASC,GAAYrmD,mBAAS,IAE/BsmD,EAAkBpmD,sBAAY,IAAM,GAC/B,KACR,IAEG8/C,EAAc9/C,sBAAY,IAAM,GAC1Bu7B,GAAS,CAACA,IACnB,IAEGj0B,EAAetH,sBAClBxB,GAAM,GACI,MACDA,IAEV,CAACqH,IAGGkgD,EAAc/lD,sBAAY,IAAM,aAC7BimD,KAAcr+C,UAAdq+C,cAAuB7+C,yBAC7B,UAGDlJ,UAAK,MAAO,CAAEiC,OAAQ,QAAU,IAAKylD,aACnCznD,SAAK,IAAK8nD,WACR9nD,EAAC,GAAQ,MACP,GAAK,QAAO6nD,IACZ,MAAOA,EACP,OAAQE,EACR,QAASpG,WAERhqB,MAGJowB,GACC/nD,EAAC,IACC,QACA,YAAa4nD,IACb,QAASz+C,IAIZ4+C,GAAW/nD,SAAK,UAAU,aAAa,QAASioD,OCpKvD,KAAM,IAAY,CAAE,KAAM,GAAI,MAAO,GAAI,UAAW,EAAG,WAAY,gBAEkB,MAC7E,CAAE,OAAM,iBAAgB,aAAc,UAErCtoD,mBAAQ,IAAM,IACf,EAAM,IACJ,GAAY,GACZ,EAAa,GACb,EAAY,EACZ,EAAa,WAEN,KAAY,GAAM,MACrB,CAAE,QAAO,OAAM,WAAY,EAAS,KAEtC,IAAc,GAAgB,IAC5B,QAGA,OAGA,GAAkB,EAAS,KAAO,EAAe,OAC5C,EAAS,OACR,EAAS,aAKhB,CACL,OACA,QACA,YACA,oBAGG,KACN,CAAC,EAAgB,EAAM,ICvC5B,YAAwBF,EAA4B,MAS9CA,KAPFuL,QACA1D,QAAQ,GACR8mC,WAAW,IAAM,KACjB/mC,YAAY,GACZmjB,QACAq7D,cAAc,IAEZpmF,EADCgvC,IACDhvC,EADCgvC,CANHzjC,OACA1D,QACA8mC,WACA/mC,YACAmjB,QACAq7D,gBAII,CAAE/+D,SAAQoa,eAAcwN,gBAAeyC,UAAWxC,KAElDC,EAAgB/sC,sBACnBxB,GAAM,GACIA,KACIA,IAEf,CAAC6gC,EAAckN,wBAGP,IAAM,CACV5jB,KACYxf,EAAMwf,IAErB,CAACxf,EAAM0jC,EAAelkB,SAEnB6mB,GAAY1xC,kBAAQ,IACjB2O,EAAU6iC,EAAQnmC,GACxB,CAACmmC,EAAQnmC,2BAIFA,OAAM3D,YAAWw+E,cACvB,MAAOr7D,GAAgBlc,EAAUwY,EAAQ9b,GACzC,SAAU4jC,EACV,MAAO,OACFtnC,GACC+pC,GAAa,CACfzG,YAAa,MACbuE,YAAa,MACb/N,QAAS,UAGTqN,IC1CV,KAAMrrC,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAoBT+vC,GAAmB82C,GAAW,CAClCC,gBAAiBD,KAAa/qC,aAOhC,YAAsC,CACpC7lB,WACoC,MAC9BmlB,GAAUlyC,mBACVN,EAAWgpB,IACXgE,EAAQwX,KACR25C,EAA2BnkF,sBAC9BilB,GAAW,WACQ,MACVwrB,GAAc,KAAMzd,GAAMmB,YAC9B,oEAES,IAAM,GACN,CACPxtB,KAAMy9E,GACNp+D,QAASf,mBAOjB,CAAC+N,EAAOhtB,EAAUqtB,UAIlBn1B,UAAK,IAAK,CAACkyC,GAAa7uC,cACtBrD,SAAK,UAAU,0BACbC,sDACAA,EAACq6B,IAAY,QAASnF,EAAS,UAAU,gBAE3Cl1B,SAAK,UAAU,yBACbA,EAAC,IACC,IAAKq6C,EACL,cAAe,CACb0rC,gBACE,yKAEJ,oBACA,SAAUC,WAEVhmF,EAAC,IACC,KAAK,kBACL,UAAU,YACV,YAAY,iCAIlBA,SAAK,UAAU,4BACbA,YACE,KAAK,SACL,QAAS,IAAMq6C,EAAQ5wC,QAAQsoC,aAC/B,UAAU,uCCvFpB,KAAM3uC,IAASnE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EA+CTinF,GAAoB,CAAC,KAAM,mBAQM,CACrCC,cACAjxD,UACAkxD,gBACsB,MAChBC,GAAWl+E,mBAEXm+E,EAAmBzkF,sBAAY,IAAM,MACnCsB,GAAOkjF,EAAS58E,QAAQ+gB,MACxB,CAAExf,OAAMy3E,aAAc8D,GAAwBpjF,GAChD+iF,GAAkBvmE,SAAS8iE,iBAExB+D,GAASrjF,EAAM,CAAE8/E,SAAU,KAAQ/8E,KAAMpB,GAAS,GACxC,CACXs+E,OAAQt+E,EACRkG,OACAy3E,YACAgE,SAAUtjF,SAKF,OAEb,CAACgjF,EAAaC,UAEfrmF,UAAK,IAAKqD,aACRrD,SAAK,UAAU,0BACbC,yCAEAA,EAACq6B,IAAY,QAASnF,OAExBn1B,SAAK,UAAU,sBACbC,WACE,IAAKqmF,EACL,KAAK,OACL,YAAY,+BAEdrmF,YAAQ,KAAK,SAAS,QAASsmF,0BC9DvC,KAAMI,IAAc,CAClB,CACE9jF,GAAI,aACJ8kD,OAAO,OACP9lC,MAAO,4CAET,CACEhf,GAAI,YACJ8kD,OAAO,OACP9lC,MAAO,yBAET,CACEhf,GAAI,0BACJ8kD,OAAO,OACP9lC,MAAO,mCAIL+kE,GAAc,CAClB,CACE/jF,GAAI,MACJ8kD,OAAO,OACP9lC,MAAO,iBAET,CACEhf,GAAI,MACJ8kD,OAAO,OACP9lC,MAAO,iBAET,CACEhf,GAAI,OACJ8kD,OAAO,OACP9lC,MAAO,gCAET,CACEhf,GAAI,eACJ8kD,OAAO,OACP9lC,MAAO,4CAET,CACEhf,GAAI,OACJ8kD,OAAO,OACP9lC,MAAO,kBAET,CACEhf,GAAI,OACJ8kD,OAAO,OACP9lC,MAAO,+CAeX,YAA2B,CACzBqC,OACAyY,gBACAtW,gBACAwgE,YACAC,aACA1kE,kBACyB,MACnBta,GAAWgpB,IACXgE,EAAQwX,KACR/U,EAAQ8U,KACRnvB,EAAaC,KAEb4pE,EAAwBrM,KACxBsM,EAAkBjmB,KAElBkmB,EAAarnF,kBAAQ,IAClBmnF,EACHJ,GACAA,GAAY1iE,OAAQpjB,GAASA,EAAKgC,KAAO,2BAC5C,CAACkkF,IAEE,CACJG,sBACAC,4BACAhM,+BACAD,mCACE/E,KAEE,CACJjjC,mBACAC,mBACAX,oBACAQ,oBACAV,yBACAe,iBACE+nC,KAEEgM,EAAmBtlF,sBACtBd,GAAS,CACJA,KACO,CAAEyH,KAAMi7E,GAAiBZ,MAAO,CAAC9hF,OACpCu0B,WAEAxxB,MAAM,2DAGhB,CAAC+wB,EAAOhtB,EAAUyvB,IAGd8vD,EAAsBvlF,sBAAY,IAAM,GACtCyzB,UACG,CAAE9sB,KAAM2hD,GAAkB7sC,UAAW,MAC7C,CAACzV,EAAUyvB,IAER+vD,EAAkBxlF,sBAAY,IAAM,GAClC4jB,OACH,IACC,YAAa0hE,EACb,QAAS,IAAM7vD,EAAMhC,QACrB,aAAc8xD,IAEhB,KAED,CAACD,EAAkB7vD,EAAO8vD,IAEvBE,EAAmCzlF,sBAAY,IAAM,GACnD4jB,OACH,IAA6B,QAAS,IAAM6R,EAAMhC,UACnD,KAED,CAACgC,IAEEiwD,EAAgB1lF,sBACpB,CAAC,CAAEe,QAAS,QACFA,OACD,2BAGA,0BAGA,qDAOT,CAACqa,EAAYoqE,EAAiBC,IAG1Bv8B,EAAgBlpD,sBACpB,CAAC,CAAEe,QAAS,QACFA,OACD,MACEqwC,cAEF,MACEC,cAEF,OACEX,cAEF,eACEa,cAEF,OACEL,cAEF,OACEV,YAOX,CACEY,EACAC,EACAX,EACAa,EACAL,EACAV,aAKDv0B,8BACEipE,EAAgB,aACd,IACC,YAAY,OACZ,QAAQ,SACR,QAAUjkE,MACMA,GACP,MAET,MAAOkkE,IAGVD,EAAgB,eACd,IACC,YAAY,OACZ,QAAQ,YACR,QAAUjkE,MACMA,GACP,MAET,MAAO6jE,KAIVvgE,IAAkB4W,EAAeC,OAChC8pD,EAAgB,2BAChBH,EAAY,sBACLziE,OAAQ,CAAChC,MACb,GAAQ,MACP,GAAG,oBACH,UAAU,WACV,MAAM,gCACN,QAAS+4D,WAERx+C,EAAcwO,QAAU,UACtBs8C,SAEAC,SAIRrhE,IAAkB4W,EAAeC,OAChC8pD,EAAgB,kBAChB9iE,EAAKyjE,aACF,GAAQ,MACP,GAAG,UACH,MAAOT,EAAsB,gBAAkB,oBAC/C,QAASC,EACT,UAAU,sBAETS,SAGNvhE,IAAkB4W,EAAeC,OAChC8pD,EAAgB,+BACH,GAAKF,EAAa,MAC5B,GAAQ,MACP,GAAG,oBACH,MACEnqD,EAAcwO,QAAU,SACpB,+BACA,+BAEN,QAAS+vC,EACT,UAAU,6BAEL,MAAO,CAAEv3E,SAAU,aACrBg5B,EAAcwO,QAAU,WACtB08C,SAEAC,cASjB,KAAMC,IAAuB7mF,eAAK8mF,iBAEK,MAC/B,CAAE5lE,iBAAgBua,gBAAetW,gBAAeT,aACpDnI,IAEI,CAAEyG,OAAM4iE,aAAYD,aAAcoB,cAErC,IAEG/jE,OACA4iE,aACAD,YACAzkE,iBACAua,gBACAtW,gBACAT,0BClTNlmB,EACA,MACM,CACJ2H,WACAojB,QAAQ,KACRhI,WAAW,GACX4rB,WAAW,IAAM,KACjBxnB,YAAY,GACZhkB,KACAw2B,SACE35B,EAEE,CAACwoF,EAAQC,GAAavmF,mBAASlC,EAAM+iB,UAErC2lE,EAAetmF,sBAAY,IAAM,MAC/BumF,GAAY,CAACH,IACTG,KAENA,EACO59D,EAEA,OAEV,CAACy9D,EAAQ75C,EAAU5jB,+BAEZ,IAAM,GACJhI,IACT,CAACA,IAEA,AAACoE,IAKF,GAAQ,MAAK,QAASuhE,EAAc,QAAc,KAAQ,sBAJpD,iBC9B+B,CACxC/gF,WACAojB,QACA4jB,WAAW,IAAM,MACQ,MACnB,CAACi6C,EAAeC,GAAoB3mF,mBAAc,IAClD4mF,EAAiB1mF,sBACpBsuC,GAAQ,MAEDq4C,GAAUC,AADa,CAAC,GAAGJ,GACRlmF,IAAKqnB,GACrB,EACLgB,MAAOhB,EAAOgB,MACdhI,SAAUgH,EAAOgB,QAAU2lB,OAIdq4C,KACRr4C,IAEX,CAAC/B,EAAUi6C,IAGPvQ,EAAiBn4E,kBAAQ,IAAM,IAC/B6jB,GAAQ,QACLs0B,oBAAS31C,IAAIiF,EAAU,AAAC2wC,GAAe,UACxCA,KACEA,EAAMvvC,OAASgrC,GAAc,MACzBk1C,GAAS3pF,uBAAag5C,EAAO,CACjC3J,SAAUm6C,EACV/lE,SAAU6lE,KAAc7kE,KAAd6kE,cAAsB7lE,SAChCgB,qBAGKklE,aAEA3pF,wBAAag5C,MAIzB,CAAC3wC,EAAUmhF,EAAgBF,+BAEpB,IAAM,MACRl4C,GAAM2H,mBAAS31C,IAAIiF,EAAU,AAAC2wC,GAAe,IAC7CA,GAASA,EAAMvvC,OAASgrC,SACnB,CACLhpB,MAAOutB,EAAMt4C,MAAM+qB,MACnBhI,SAAUu1B,EAAMt4C,MAAM+qB,QAAUA,OAIrB2lB,IAChB,CAAC/oC,EAAUojB,mBAEJstD,IC/BZ,YAA8B,CAC5BzkC,eACAlxB,iBACA8B,OACAlC,QACAqE,gBACAwgE,YACArpD,QAC4B,MACtB,CAACpG,EAAQ+iB,GAAav4C,mBAAiB,IACvColF,EAAkBjmB,KAElBj5D,EAAWgpB,IAEX,CAAEolD,qBAAoB+E,qBAAsB9E,KAE5Ch1C,EAAer/B,sBAClB8mF,GAAmB,GACRA,KACSA,IAErB,CAAC1S,wBAGO,IAAM,GACJ5iC,IACT,CAACA,SAEEu1C,GAAoB/mF,sBAAY,IAAM,GACjC,CACP2G,KAAMqgF,GACNr+D,MAAO,OAEA,CAAEhiB,KAAMsgF,GAAqBC,eAAgB,QACrD,CAAClhF,6BAIC,IAAkB,MAAOsvB,EAAQ,SAAU+J,YACzC6lD,EAAgB,eACd,IAEC,MAAO5oE,EAAQF,KAAKrb,GACpB,GAAG,SACH,MAAQ,GAAEub,EAAQF,KAAK2D,sCAElB,MAAO,CAAEle,SAAU,eACrB,UANEya,EAAQF,KAAKrb,IAWrBmkF,EAAgB,kBACd,GAAQ,MACP,GAAG,WACH,QAAS/L,EACT,MAAM,iHAED,MAAO,CAAEt3E,SAAU,eACrB,WAKN0iB,IAAkB4W,EAAeC,OAAS8pD,EAAgB,eACxD,IAEC,MAAO5oE,EAAQE,YAAYzb,GAC3B,MAAQ,GAAEub,EAAQE,YAAYuD,oBAC9B,UAAWO,MAAkB,CAAC8B,kBAAMgN,QACpC,GAAG,yBAEF+3D,QANI7qE,EAAQE,YAAYzb,IAS5BwjB,IAAkB4W,EAAeC,OAChC8pD,EAAgB,mBACb,IAEC,MAAO5oE,EAAQG,SAAS1b,GACxB,UAAWuf,MAAkB,CAAC8B,kBAAMgN,QACpC,GAAG,kBACH,MAAQ,GAAE9S,EAAQG,SAASsD,+BAE1Bq0C,QANI93C,EAAQG,SAAS1b,IAS3BwjB,IAAkB4W,EAAeqvB,OAChC06B,EAAgB,sBACb,IAEC,MAAO5oE,EAAQO,OAAO9b,GACtB,GAAG,SACH,UAAWuf,MAAkB,CAAC8B,kBAAMgN,QACpC,MAAQ,GAAE9S,EAAQO,OAAOkD,+BAExB,QANIzD,EAAQO,OAAO9b,IASzBwjB,IAAkB4W,EAAeqvB,OAChC06B,EAAgB,kBACb,IAEC,MAAO5oE,EAAQQ,YAAY/b,GAC3B,UAAWuf,MAAkB,CAAC8B,kBAAMgN,QACpC,GAAG,OACH,MAAQ,GAAE9S,EAAQQ,YAAYiD,2CAJzBzD,EAAQQ,YAAY/b,IAS9BwjB,IAAkB4W,EAAeC,OAChC8pD,EAAgB,qBACb,IAEC,MAAO5oE,EAAQM,cAAc7b,GAC7B,UAAWuf,MAAkB,CAAC8B,kBAAMgN,QACpC,MAAQ,GAAE9S,EAAQM,cAAcmD,oBAChC,GAAG,yBAEF8+C,QANIviD,EAAQM,cAAc7b,IAShCwjB,IAAkB4W,EAAeC,OAChC8pD,EAAgB,gCAChBH,EAAY,GACZrpD,IAAS,SACN,IAEC,MAAOpf,EAAQU,wBAAwBjc,GACvC,GAAG,0BACH,MAAOub,EAAQU,wBAAwB+C,iBAEtCqnE,QALI9qE,EAAQU,wBAAwBjc,IAQ1CwjB,IAAkB4W,EAAeC,OAChC8pD,EAAgB,sBACb,IAEC,MAAO5oE,EAAQC,YAAYxb,GAC3B,UAAWu6B,GAAiC,CAAElZ,SAC9C,GAAG,cACH,MAAO9F,EAAQC,YAAYwD,iBAE1BsnE,QANI/qE,EAAQC,YAAYxb,IAS9BwjB,IAAkB4W,EAAeC,OAChC8pD,EAAgB,0BACb,IAEC,MAAO5oE,EAAQI,gBAAgB3b,GAC/B,GAAG,kBACH,MAAQ,GAAEub,EAAQI,gBAAgBqD,oBAClC,UACEO,MACA8B,GACAkZ,GAAqC,CAAElZ,UACtClC,EAAiBonE,eAKnBC,QAbIjrE,EAAQI,gBAAgB3b,IAiBlCwjB,IAAkB4W,EAAeC,OAChC8pD,EAAgB,6BACb,IAEC,MAAO5oE,EAAQK,mBAAmB5b,GAClC,GAAG,qBACH,MAAQ,GAAEub,EAAQK,mBAAmBoD,oBACrC,UACEO,MACA8B,GACAkZ,GAAwC,CAAElZ,qBAK3ColE,QAZIlrE,EAAQK,mBAAmB5b,IAgBrCwjB,IAAkB4W,EAAeC,OAChC8pD,EAAgB,uBAChB,CAAC9iE,kBAAMgN,QACP21D,EAAY,KACT,IAEC,MAAOzoE,EAAQW,eAAelc,GAC9B,MAAQ,GAAEub,EAAQW,eAAe8C,oBACjC,GAAG,mCAEE,MAAO,CAAEle,SAAU,eACrBulF,UANE9qE,EAAQW,eAAelc,OAYnCwjB,IAAkB4W,EAAeC,OAChC8pD,EAAgB,YAChB9iE,GACAkZ,GAAyB,CAAElZ,YACxB,GAAQ,MACP,GAAG,aACH,UAAU,WACV,MAAM,aACN,QAAS2kE,aAERU,YAOb,KAAMC,IAA0BtoF,eAAKuoF,gBAEG,CACtCn2C,eAAel1B,EAAQF,KAAKrb,IAG3B,MACK,CAAEuf,iBAAgBiE,gBAAeT,YAAW4X,QAAS/f,IAErD1Y,EAAOkjF,cAGV,UAEMljF,IACHqd,iBACAiE,gBACAT,YACA0tB,eACA9V,UC5QR,YAAsB,CAAE7d,gBAAmC,iBAElD,MAAO,CAAEhc,SAAU,eACrB,IAAQ,YAAY,uBAClB,IAAgB,aAAcgc,MAE9B,YAMT,KAAM+pE,IAAkBxoF,eAAKyoF,iBAEK,MAC1B,CACJjqE,YAAa,CAAEC,iBACblC,aAEI,IAAsBkC,iBC8BhC,KAAMiqE,IAAuB1qF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EASvB2qF,GAAkB3qF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAuIlB4qF,GAAqB,GACrBC,GAA0B,CAC9B/lE,QAAS,IAGX,YAAgBtkB,EAAoB,OAEhCO,GAAC,IAAW,MAAO,CAAE6C,MAAO,iBAC1B7C,EAAC,IAAc,kBAAmB+pF,YAChC/pF,EAAC,QAAgBP,QAMzB,YAAqB,CACnBqF,KAAMklF,EAAWF,GACjB3oE,YACAiB,cAAcynE,GACdhsE,aAAaT,GACb6sE,eACAltE,aACc,MACR8+B,GAAU1zC,iBAAuB,MACjCuxB,EAAoBvxB,iBAAuB,MAC3C,CAACsd,EAAM+D,GAAU0gE,GAAU,IAE3BzI,EAAe0I,GAActuC,EAASp2B,EAAM,CAChDyP,QAAS,IAAM,GACN,OAIL,CAACttB,EAAOC,GAAYC,qBACxBsiF,GACA3jF,GACA4jF,IAGI,CAACC,EAAkBC,GAAuBziF,qBAG9C0iF,GAAoBxpE,GAAyBypE,IAEzC,CAAErkE,gBAAethB,KAAMwjB,GAAgB1gB,sBAEnC,IAAM,CACV8iF,GAAgB9iF,EAAM+iF,yBACT/iF,KAEhB,CAACqiF,EAAcriF,SAEZgjF,GAAqBjrF,kBAAQ,IAC1BkrF,GAAmBhjF,GACzB,wBAEO,IAAM,YACN4B,kBAASigE,SAChB,CAAC+X,wBAEM,IAAM,GACM,CAClBj5E,KAAM,mBACNqf,QAAS,CACP5nB,QAASmiB,EACTjB,YACAtZ,SAAU0iF,MAGb,CAACnoE,EAAajB,wBAEP,IAAM,GACK,CAAE3Y,KAAM2hD,GAAkB7sC,UAAW,KACpD0sE,KACiB,CAAExhF,KAAMsiF,GAAUjjE,QAASmiE,KAE/C,CAACA,EAAUY,SAERG,GAA4BlpF,sBAAaxB,GAAM,CAC9Cg+C,GAA0Bh+C,MAC3B4qB,kBAEH,IACGwe,EAAoB5nC,sBAAY,IAAM,GACvB,CAAE2G,KAAMwiF,GAA0BnjE,QAAS,MAC7D,CAAC+iE,IACE7/E,EAAoBlJ,sBAAY,IAAM,GACvB,CAAE2G,KAAMwiF,GAA0BnjE,QAAS,MAC7D,CAAC+iE,UAGF5qF,GAAC,IACC,MAAO,CACL67C,QAASA,EAAQpyC,QACjBiwB,kBAAmBA,EAAkBjwB,kBAGvCzJ,EAAC,IAAoB,MAAOsqF,WAC1BtqF,SACE,aAAcypC,EACd,aAAc1+B,EACd,MAAO,CAAE/I,OAAQ,OAAQF,SAAU,qBAEnC9B,EAAC,IAAc,WAAY05B,EAAkBjwB,iBAC3CzJ,EAAC,IAAiB,MAAO4qF,WACvB5qF,EAAC,IAAkB,MAAO4H,WACxB5H,EAACirF,IAAc,WAAYvxD,EAAkBjwB,iBAC3CzJ,EAAC,aACCA,EAAC,IAAmB,uBAClBA,EAAC,IAAgB,MAAO6d,WACtB7d,SACE,UAAU,mBACV,IAAK67C,EACL,IAAK+tC,GACL,cAAemB,EACf,MAAO,CAAE/oF,OAAQ,OAAQa,MAAO,iBAEhC7C,EAAC,aACCD,SACE,MAAO,CACLE,QAAS,OACTqzB,cAAe,SACftwB,gBAAiB,QACjBH,MAAO,kBAGT7C,EAAC42C,IACC,eACA,WAAYptB,IAGdzpB,SACE,MAAO,CACLE,QAAS,OACTqzB,cAAe,MACftxB,OAAQ,kBAGVhC,EAAC,OACDD,EAAC,IACC,kBAAkB,QAClB,YAAY,aACZ,eAAe,gBAEfA,SAAK,IAAK4pF,aACR3pF,EAAC,OACDA,wBACe,SACb,MAAO,CACL6C,MAAO,OACPb,OAAQ,iBAGTokB,IACD4W,EAAeC,MACbj9B,EAAC,IAAS,cAEVA,EAAC,IAAS,mBAIhBA,EAAC,UAGHA,SACE,IAAK05B,EAEL,GAAG,eACH,MAAO,CACL53B,SAAU,WACV6e,cAAe,OACfiW,OAAQ,EACR5Y,KAAM,EACNyC,MAAO,EACP1e,IAAK,EACL2e,OAAQ,IATLyI,OAAOs4D,kCA4B9C,OAAexgF,eAAKiqF,ICvYpB,YAAoBziC,EAAK0iC,EAAW,IAC9BhwD,GAAc,cACIstB,EAAK,QAClBjnC,KAAKinC,GAAK1gC,QAASpG,GAAQ,CAC5BwpE,IAAcxpE,KACTphB,KAAK,EAAGohB,GAAM8mC,EAAI9mC,KAEvB+I,MAAMC,QAAQ89B,EAAI9mC,MAChBA,GAAKoG,QAASqjE,GAAW,GACdA,KAEN,MAAO3iC,GAAI9mC,IAAS,UAAY8mC,EAAI9mC,KAAS,QACzC8mC,EAAI9mC,eAKV8mC,GACNttB,EAGT,YAAmBr2B,EAAW,MACtB,CAACygD,EAAc8lC,GAAU1pF,qBACzB,CAACggB,EAAK2pE,GAAU3pF,mBAAiB,wBAC7B,IAAM,MACRw5B,GAASowD,GAAWzmF,EAAM6c,KACzBA,EAAMwZ,EAASr2B,IACrB,CAACA,EAAM6c,SAEJg1B,GAAe90C,sBACnB6H,GAAUrJ,GAAM,MACRshB,GAAMthB,EAAEq+B,OAAOlU,QACd7I,IACN,KACH,CAAC7c,oBAKC,MAAO,CAAE7E,QAAS,OAAQqzB,cAAe,SAAU4wC,WAAY,6BAG7D,MAAO,CAAEhgE,OAAQ,iBAAkBhE,QAAS,OAC5C,KAAK,OACL,YAAY,oBACZ,SAAUy2C,MAEXwiC,IAAgB,KAAM5zB,wBAKE,MACvB,CAACzgD,EAAMg3C,GAAWn6C,qBAClB,CAAC6pF,EAAcC,GAAmB9pF,mBAAc,IAEhD+pF,EAAkB7pF,sBAAa8pF,GAAc,WAC/B,IACZ,MACI9I,GAAQ,KAAMiB,IAA2B6H,EAAW,CACxD1I,SAAU,KAGNC,EAAU,GAAIC,aAAY,QAC1Br+E,EAAOuB,KAAKC,MAAM48E,EAAQG,OAAOR,EAAM,GAAGO,WACxCt+E,eAGF,2BAGT,IACG8mF,EAAoB/pF,sBAAaiD,GAAS,GAC9BA,IACf,oBAGI,MAAO,CAAE7E,QAAS,OAAQ+B,OAAQ,QAAS9B,QAAS,2BAClD,MAAO,CAAEovC,KAAM,cACjB47C,IAAO,OAAY,aAAcU,eAGlC,MAAO,CACL3rF,QAAS,OACTqzB,cAAe,SACfpzB,QAAS,OACTovC,KAAM,sBAGH,MAAO,CAAEA,KAAM,cACjBu8C,IAAS,OAAQH,EAAiB,MAAM,oBAEtC,MAAO,CAAEp8C,KAAM,cACjB,IAAU,KAAMk8C,4FChG3B,KAAMM,IAAgB3qF,eAAK,IAAM,+EAEI,UAEhCe,oBAAS,SAAU,gBACjB,gBACE,IAAM,KAAK,kBAAkB,UAAW4pF,OACxC,IAAM,KAAK,IAAI,UAAWC,OAC1B,IAAM,OAAQ,gDCDvBC,GAASv2C,SACN,eACE,gBACE,IAAM,KAAK,QAAQ,UAAWw2C,OAC9B,IAAM,KAAK,IAAI,OAASxsF,KAAW,QAASA,WAGjD+0B,SAAS03D,eAAe"}