{"version":3,"file":"Exam.05f3d7e1.js","sources":["../../src/demo/views/Exam.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Molecule } from 'openchemlib/full';\nimport { useState, useEffect, useCallback } from 'react';\nimport { FaRegCopy, FaCheck } from 'react-icons/fa';\nimport { MF } from 'react-mf';\nimport { StructureEditor } from 'react-ocl/full';\n\nimport NMRium from '../../component/NMRium';\nimport { copyTextToClipboard } from '../../component/utility/Export';\n\nlet answers = JSON.parse(localStorage.getItem('nmrium-exams') || '{}');\n\nasync function loadData(file) {\n  const response = await fetch(file);\n  checkStatus(response);\n  const data = await response.json();\n  return data;\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nconst mainContainer = css`\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n  overflow: hidden;\n`;\n\nconst nmrContainer = css`\n  height: 50%;\n`;\n\nconst bottomContainer = css`\n  display: flex;\n  height: 50%;\n`;\n\nconst bottomRightContainer = css`\n  width: 50%;\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n`;\n\nconst mfCss = css`\n  height: 20%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  border: 1px dashed gray;\n`;\n\nconst resultContainer = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 80%;\n  position: relative;\n`;\n\nconst copyButton = css`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  width: 50px;\n  height: 40px;\n  outline: none;\n  border: none;\n  background-color: white;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: green;\n    color: white;\n  }\n`;\n\nconst structureEditor = css`\n  background-color: white;\n  flex: 1;\n  overflow: auto;\n`;\n\nconst showButton = css`\n  outline: none;\n  border: none;\n  border-top: 0.55px solid #c1c1c1;\n  border-bottom: 0.55px solid #c1c1c1;\n  color: #00b707;\n  font-weight: bold;\n  font-size: 12px;\n  padding: 5px;\n\n  &:hover {\n    color: white !important;\n    background-color: #00b707;\n  }\n`;\n\nconst titleCss = css`\n  text-transform: none;\n  margin: 0;\n  padding: 5px;\n  background-color: white;\n  font-size: 14px;\n  color: #3e3e3e;\n\n  p {\n    font-size: 10px;\n    margin: 0px;\n  }\n`;\n\nconst resultCss = css`\n  width: 50%;\n  height: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst styles = css`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  margin-left: 30px;\n  }\n`;\n\nconst CopyButton = ({ result }) => {\n  const [isCopied, setCopyFlag] = useState(false);\n\n  const saveToClipboardHandler = useCallback(() => {\n    void (async () => {\n      const success = await copyTextToClipboard(result);\n      setCopyFlag(success);\n      setTimeout(() => {\n        setCopyFlag(false);\n      }, 1000);\n    })();\n  }, [result]);\n\n  return (\n    <button type=\"button\" css={copyButton} onClick={saveToClipboardHandler}>\n      {isCopied ? <FaCheck /> : <FaRegCopy />}\n    </button>\n  );\n};\n\nexport default function Exam(props) {\n  const [data, setData] = useState<any>();\n  const [result, setResult] = useState<string | null>(null);\n  const [answerAreaVisible, showAnswerArea] = useState(false);\n\n  const { file, title, baseURL } = props;\n\n  const checkAnswer = useCallback(\n    (response) => {\n      if (data.answer) {\n        const MolResponse = Molecule.fromMolfile(response);\n        const idCodeResponse = MolResponse.getIDCode();\n        answers[data.answer.idCode] = idCodeResponse;\n        localStorage.setItem('nmrium-exams', JSON.stringify(answers));\n        setResult(MolResponse.toSmiles());\n      }\n    },\n    [data],\n  );\n\n  useEffect(() => {\n    if (file) {\n      void loadData(file).then((d) => {\n        const _d = JSON.parse(JSON.stringify(d).replace(/\\.\\/+?/g, baseURL));\n\n        if (_d?.molecules?.[0]?.molfile) {\n          const molecule = Molecule.fromMolfile(_d.molecules[0].molfile);\n          const idCode = molecule.getIDCode();\n          let currentAnswer = answers[idCode];\n\n          if (currentAnswer) {\n            currentAnswer = Molecule.fromIDCode(currentAnswer).toMolfile();\n          }\n          _d.answer = {\n            idCode,\n            currentAnswer,\n            mf: molecule.getMolecularFormula().formula,\n          };\n          setData(_d);\n        }\n      });\n    } else {\n      setData({});\n    }\n  }, [baseURL, file, props]);\n\n  const showAnswerAreaHander = useCallback(() => {\n    showAnswerArea((prev) => !prev);\n  }, []);\n\n  return (\n    <div css={styles}>\n      <p css={titleCss}>\n        <strong>Exercises: </strong>Determine the unknown structure for the\n        compound having the following NMR spectrum\n        <p>{title}</p>\n      </p>\n      <div css={mainContainer}>\n        <div\n          css={nmrContainer}\n          style={{ height: answerAreaVisible ? '50%' : 'calc(100% - 25px)' }}\n        >\n          <NMRium data={data} workspace=\"exercise\" />\n        </div>\n        <button css={showButton} type=\"button\" onClick={showAnswerAreaHander}>\n          {!answerAreaVisible ? 'Show answer area' : 'Hide answer area '}\n        </button>\n        <div\n          css={bottomContainer}\n          style={\n            answerAreaVisible\n              ? { height: '50%' }\n              : { height: '0%', visibility: 'hidden' }\n          }\n        >\n          <div css={structureEditor}>\n            <StructureEditor\n              svgMenu\n              fragment={false}\n              onChange={checkAnswer}\n              initialMolfile={data?.answer?.currentAnswer}\n            />\n          </div>\n          <div css={bottomRightContainer}>\n            <div css={mfCss}>\n              <MF\n                style={{ color: 'navy', fontSize: 30 }}\n                mf={data?.answer?.mf}\n              />\n            </div>\n            <div css={resultContainer}>\n              <CopyButton result={result} />\n              <div css={resultCss}>{result}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["answers","JSON","parse","localStorage","getItem","file","response","fetch","checkStatus","json","ok","Error","status","statusText","mainContainer","css","nmrContainer","bottomContainer","bottomRightContainer","mfCss","resultContainer","copyButton","structureEditor","showButton","titleCss","resultCss","styles","CopyButton","result","isCopied","setCopyFlag","useState","saveToClipboardHandler","useCallback","success","copyTextToClipboard","setTimeout","_jsx","props","data","setData","setResult","answerAreaVisible","showAnswerArea","title","baseURL","checkAnswer","answer","MolResponse","Molecule","fromMolfile","idCodeResponse","getIDCode","idCode","setItem","stringify","toSmiles","useEffect","loadData","then","d","_d","replace","molecules","molfile","molecule","currentAnswer","fromIDCode","toMolfile","mf","getMolecularFormula","formula","showAnswerAreaHander","prev","_jsxs","height","visibility","color","fontSize"],"mappings":"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"}