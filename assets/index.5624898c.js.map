{"version":3,"mappings":"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","names":["createElement","MenuItem","cloneElement","sidebarCss","css","sidebarOpenCss","sidebarClosedCss","menuBtCss","logoCss","simpleTextCss","logoNormalCss","sidebarWrapperCss","props","routes","useMemo","buildMenu","subDisplay","menuIsClosed","display","padding","_jsx","onMenuToggle","Menu","e","history","push","Math","random","toString","replace","item","view","getKey","file","withRouter","memo","Sidebar","mainPanelCss","mainPanelOpenCss","mainPanelClosedCss","baseURL","routesList","mapTreeToFlatArray","setMenuIsClosed","useState","toggleMenu","useCallback","position","top","height","Suspense","map","prop","length","routeProp","viewName","RenderedView","possibleViews","match","params","id","width","marginLeft","marginRight","backgroundColor","routeProps","patrh","path","styles","bodyContainer","justifyContent","alignItems","container","borderRadius","fontSize","textAlign","normal","color","error","errorHeader","normalHeader","loadButton","border","fontWeight","cursor","url","response","fetch","checkStatus","data","json","console","ok","Error","status","statusText","Main","setRoutes","isLoaded","dashBoardType","setDashBoardType","loadHandler","getFileExtension","substring","lastIndexOf","href","window","location","useEffect","qs","URL","searchParams","has","sampleURL","get","extention","toLowerCase","loadData","then","remoteRoutes","_remoteRoutes","JSON","parse","stringify","_jsxs","AdminLayout","initialState","step","brush","start","end","startX","endX","startY","endY","BrushContext","createContext","children","className","style","onBrush","onZoom","onDoubleClick","onClick","noPropagation","state","dispatch","useReducer","reducer","mouseDownTime","setMouseDownTime","debounceClickEventsRef","useRef","mouseDownHandler","event","button","stopPropagation","type","shiftKey","altKey","screenX","screenY","clientX","clientY","boundingRect","currentTarget","getBoundingClientRect","timeStamp","clickHandler","persist","x","y","callback","lodashDebounce","current","lodashMap","debounce","cancel","handleMouseWheel","deltaY","deltaX","deltaMode","hypot","moveCallback","upCallback","action","startScreenX","startScreenY","startClientX","startClientY","MouseContext","MouseaProvider","Provider","useContext","mouseTrackerState","setMouseTrackerState","mouseMoveHandler","mouseLeaveHandler","name","isApplicable","equallySpaced","baselineRegression","mean","standardDeviation","enableFilter","getColor","merge","FiltersTypes.shiftX.id","FiltersManager.reapplyFilters","get1dColor","FiltersTypes.digitalFilter.id","FiltersManager.applyFilter","getRange","getSum","getNbAtoms","resetDiaIDs","setNbAtoms","Filters.shift2DX.id","Filters.shift2DY.id","mapZones","OCLMolecule","Data1DManager.fromParsedJcamp","Data2DManager.fromParsedJcamp","Datum1D.initiateDatum1D","Datum2D.initiateDatum2D","Data1DManager.fromCSD","Data2DManager.fromCSD","fromBruker","Data1DManager.fromBruker","Data2DManager.fromBruker","Datum1D.toJSON","Datum2D.toJSON","Molecule.toJSON","OCL","Filters.zeroFilling.id","Filters.zeroFilling.name","Filters.phaseCorrection.id","Filters.phaseCorrection.name","Jszip","scaleLinear","unlinkInAssignmentData","original","unlink","cloneDeep","Filters.shiftX.id","lodashCloneDeep","handleDeleteSignal1D","handleDeleteSignal2D","zoomIdentity","max","getYScale","Filters.lineBroadening.id","Filters.fft.id","Filters.absolute.id","autoPhaseCorrection","phaseCorrection","FiltersManager.enableFilter","update2dShift","FiltersManager.deleteFilter","Filters.baselineCorrection.id","Filters.exclusionZones.id","Filters.equallySpaced.id","MoleculeManager.fromJSON","MoleculeManager.addMolfile","MoleculeManager.setMolfile","removeAssignments","calculate","lodashGet","MultipleAnalysis.analyzeSpectra","MultipleAnalysis.deleteSpectraAnalysis","MultipleAnalysis.setColumn","MultipleAnalysis.changeColumnValueKey","types.INITIATE","SpectraManager.fromJSON","types.LOAD_JSON_FILE","types.LOAD_ZIP_FILE","SpectraManager.addBruker","types.LOAD_NMREDATA_FILE","types.PREDICT_SPECTRA","types.SET_LOADING_FLAG","LoadActions.setIsLoading","types.LOAD_JCAMP_FILE","types.LOAD_JDF_FILE","types.LOAD_MOL_FILE","types.ADD_PEAK","PeaksActions.addPeak","types.ADD_PEAKS","types.DELETE_PEAK_NOTATION","PeaksActions.deletePeak","types.ADD_INTEGRAL","types.DELETE_INTEGRAL","types.CHANGE_INTEGRAL_DATA","types.RESIZE_INTEGRAL","types.CHANGE_INTEGRAL_SUM","IntegralsActions.handleChangeIntegralSum","types.CHANGE_INTEGRALS_SUM_FLAG","types.CHANGE_INTEGRAL_RELATIVE","types.SET_ORIGINAL_DOMAIN","DomainActions.setOriginalDomain","types.SET_X_DOMAIN","DomainActions.setXDomain","types.SET_Y_DOMAIN","DomainActions.setYDomain","types.SET_WIDTH","types.SET_DIMENSIONS","types.SET_SELECTED_TOOL","types.RESET_SELECTED_TOOL","types.SET_SELECTED_OPTIONS_PANEL","ToolsActions.setSelectedOptionPanel","types.FULL_ZOOM_OUT","types.SHIFT_SPECTRUM","FiltersActions.shiftSpectrumAlongXAxis","types.APPLY_ZERO_FILLING_FILTER","FiltersActions.applyZeroFillingFilter","types.APPLY_FFT_FILTER","types.APPLY_MANUAL_PHASE_CORRECTION_FILTER","FiltersActions.applyManualPhaseCorrectionFilter","types.APPLY_AUTO_PHASE_CORRECTION_FILTER","types.APPLY_ABSOLUTE_FILTER","types.CALCULATE_MANUAL_PHASE_CORRECTION_FILTER","FiltersActions.calculateManualPhaseCorrection","types.ENABLE_FILTER","FiltersActions.enableFilter","types.DELETE_FILTER","types.DELETE_SPECTRA_FILTER","types.SET_FILTER_SNAPSHOT","types.APPLY_MULTIPLE_SPECTRA_FILTER","types.ADD_EXCLUSION_ZONE","types.DELETE_EXCLUSION_ZONE","types.CHANGE_VISIBILITY","types.CHANGE_PEAKS_MARKERS_VISIBILITY","SpectrumsActions.handleChangePeaksMarkersVisibility","types.CHANGE_ACTIVE_SPECTRUM","SpectrumsActions.handleChangeActiveSpectrum","types.CHANGE_SPECTRUM_COLOR","SpectrumsActions.handleChangeSpectrumColor","types.CHANGE_SPECTRUM_SETTING","types.ALIGN_SPECTRA","types.DELETE_SPECTRA","types.ADD_MISSING_PROJECTION","types.GENERATE_SPECTRUM_FROM_PUBLICATION_STRING","types.TOGGLE_REAL_IMAGINARY_VISIBILITY","types.SET_ZOOM","types.SET_SPECTRA_SAME_TOP","types.RESET_SPECTRA_SCALE","types.CHANGE_SPECTRUM_DISPLAY_VIEW_MODE","types.ADD_MOLECULE","MoleculeActions.addMoleculeHandler","types.SET_MOLECULE","MoleculeActions.setMoleculeHandler","types.DELETE_MOLECULE","types.SET_CORRELATIONS_MF","CorrelationsActions.handleSetMF","types.SET_CORRELATIONS_TOLERANCE","CorrelationsActions.handleSetTolerance","types.SET_CORRELATION","CorrelationsActions.handleSetCorrelation","types.SET_CORRELATIONS","CorrelationsActions.handleSetCorrelations","types.DELETE_CORRELATION","CorrelationsActions.handleDeleteCorrelation","types.BRUSH_END","types.SET_VERTICAL_INDICATOR_X_POSITION","ToolsActions.setVerticalIndicatorXPosition","types.SET_SPECTRUMS_VERTICAL_ALIGN","types.AUTO_PEAK_PICKING","PeaksActions.handleAutoPeakPicking","types.AUTO_ZONES_DETECTION","ZonesActions.handleAutoZonesDetection","types.CHANGE_ZONES_NOISE_FACTOR","types.AUTO_RANGES_DETECTION","RangesActions.handleAutoRangesDetection","types.ADD_RANGE","types.DELETE_RANGE","types.DELETE_1D_SIGNAL","types.RESIZE_RANGE","types.CHANGE_RANGE_SUM","RangesActions.handleChangeRangeSum","types.CHANGE_RANGES_SUM_FLAG","types.CHANGE_RANGE_RELATIVE","types.CHANGE_RANGE_SIGNAL_VALUE","types.CHANGE_RANGE_SIGNAL_KIND","types.SAVE_EDITED_RANGE","types.UNLINK_RANGE","types.SET_DIAID_RANGE","types.CHANGE_TEMP_RANGE","types.SHOW_MULTIPLICTY_TREES","types.SHOW_RANGES_INTEGRALS","types.AUTO_RANGES_SPECTRA_PICKING","types.SHOW_J_GRAPH","types.SET_ACTIVE_TAB","ToolsActions.handelSetActiveTab","types.ADD_BASE_LINE_ZONE","ToolsActions.handleAddBaseLineZone","types.DELETE_BASE_LINE_ZONE","ToolsActions.handleDeleteBaseLineZone","types.APPLY_BASE_LINE_CORRECTION_FILTER","types.SET_KEY_PREFERENCES","types.APPLY_KEY_PREFERENCES","types.SET_2D_LEVEL","types.ADD_2D_ZONE","types.DELETE_2D_ZONE","types.DELETE_2D_SIGNAL","types.SET_2D_SIGNAL_PATH_LENGTH","types.RESET_DOMAIN","types.CHANGE_ZONE_SIGNAL_VALUE","types.CHANGE_ZONE_SIGNAL_KIND","types.UNLINK_ZONE","types.SET_DIAID_ZONE","types.AUTO_ZONES_SPECTRA_PICKING","types.SAVE_EDITED_ZONE","types.ANALYZE_SPECTRA","types.DELETE_ANALYZE_SPECTRA_RANGE","types.RESIZE_ANALYZE_SPECTRA_RANGE","types.SET_ANALYZE_SPECTRA_COLUMNS","types.FILTER_SPECTRA_COLUMN","types.RESURRECTING_SPECTRUM_FROM_RANGES","types.SET_AUTOMATIC_ASSIGNMENTS","types.SET_MOUSE_OVER_DISPLAYER","produce","ChartContext","ChartDataProvider","dispatchContext","DispatchProvider","LoaderContext","defaultLoader","LoaderProvider","isEmpty","emptyText","canOpenLoader","openLoader","useLoader","spinnerContext","defaultGetSpinner","SpinnerProvider","isLoading","undefined","useChartData","checkEmpty","startCheckEmpty","timeout","setTimeout","clearTimeout","getSpinner","Fragment","transformOrigin","left","zoom","allowTools","options","zeroFilling","peakPicking","integral","baseLineCorrection","rangesPicking","zone2D","slicingTool","editRange","multipleSpectraAnalysis","exclusionZones","databaseRangesSelection","BRUSH_TYPE","X","Y","XY","defaultDimensionBorder","brushType","dimensionBorder","widthProps","heightProps","toolOptions","selectedTool","includes","sign","scaleX","scaleY","transform","willChange","line","stroke","strokeOpacity","shapeRendering","strokeWidth","equalizerTool","margin","brushState","right","bottom","pointerEvents","overflow","lodashSet","Workspaces","lodashMerge","PreferencesContext","preferencesInitialState","PreferencesProvider","context","workspace","workspaces","usePreferences","currentWorkspaces","Object","keys","reduce","acc","key","label","WORKSPACES","spectrumID","datum","xDomain","yDomain","contours","activeSpectrum","preferences","xShift","yShift","getShift","isActive","buildContourPath","_scaleX","get2DXScale","_scaleY","get2DYScale","PathBuilder","element","lines","i","moveTo","lineTo","j","closePath","opacity","displayerKey","index","isPositiveVisible","positiveColor","isNegativeVisible","negativeColor","MemoizedContours","ContoursInner","spectra","filter","info","dimension","isFt","marignValue","spectrum","originHeight","yDomains","xyReduce","useXYReduce","XYReducerDomainAxis","YAxis","paths","get1DYScale","re","pathPoints","pathBuilder","mainHeight","Left1DChart","marginProps","originMargin","XAxis","Top1DChart","axisStyles","defaultMargin","show","tabActiveSpectrum","activeTab","refAxis","xAxis","d3","ticks","tickFormat","call","axis","lineStyle","displayerMode","deltas1D","setDeltas1D","split","nucleus","ranges","_datum","isVisible","isSpectrum1D","values","flat","deltas","_range","signals","_signal","SignalKindsToInclude","some","_kind","kind","delta","indicationLines","_delta","HighlightedSource","emptyState","highlight","highlights","highlighted","highlightedPermanently","sourceData","remove","highlightContext","convertedHighlights","payload","extra","newState","value","highlightReducer","contextValue","Array","isArray","useHighlightData","newHighlights","String","isActivePermanently","hide","add","click","preventDefault","onHover","onMouseEnter","onMouseLeave","signal","highlightIDsX","buildID","highlightIDsY","highlightX","useHighlight","highlightY","Signal","buildIDs","concat","assignment","useAssignment","highlightData","isHighlighted","setIsHighlighted","_highlighted","peaks","peak","stylesOnHover","stylesHighlighted","Zone","zoneData","assignmentZone","highlightZone","ZONE","from","x1","to","x2","y1","y2","reduceOpacity","setReduceOpacity","checkZoneKind","zones","setVisibility","on","prevVisiblity","zone","MemoizedZones","ZonesInner","emptyData","useSpectrum","MemoizedChart2D","chart2DInner","layout","data1D","trackID","getLayoutID","nucleuses","formatX","formatY","useFormatNumberByNucleus","LAYOUT","TOP_1D","CENTER_2D","LEFT_1D","getRealYValue","cordinate","get1DDataXY","xIndex","xFindClosestIndex","invert","getXValue","getYValue","getRation","Number","MIN_VALUE","toFixed","getDeltaX","toPrecision","getLabel","label2d","labelld","getZValue","maxX","maxY","minX","minY","z","xStep","yStep","floor","yIndex","userSelect","HorizontalSliceChart","VerticalSliceChart","useMouseTracker","chart2d","scale2dX","scale2dY","getSlice","horizontal","vertical","useDispatch","spectrumData","n","find","isFid","DIMENSION","get2DDimensionLayout","handelBrushEnd","brushData","ADD_2D_ZONE","BRUSH_END","handelOnDoubleClick","FULL_ZOOM_OUT","handleZoom","SET_2D_LEVEL","SET_ZOOM","mouseClick","FooterBanner","SET_DIMENSIONS","scaleContext","scaleInitialState","ScaleProvider","scale","useScale","AlertProvider","duration","defaultStyle","transitions","FADE","transition","SCALE","defaultTransitionStyles","entering","entered","exiting","exited","transitionStyles","ref","default","containerStyle","initialStyles","flexDirection","positions","TOP_LEFT","TOP_CENTER","TOP_RIGHT","MIDDLE_LEFT","MIDDLE","MIDDLE_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","getStyles","wrapperRef","offset","root","timersId","alerts","setAlerts","document","timersIdRef","appendChild","forEach","removeChild","alert","currentAlerts","lengthBeforeRemove","filteredAlerts","a","onClose","message","substr","alertOptions","close","timerId","splice","indexOf","onOpen","success","types","SUCCESS","ERROR","INFO","showLoading","PROGRESS_INDICATOR","Promise","resolve","closeHandler","alertsByPosition","groupBy","parentStyle","innerWidth","innerHeight","alertContextValue","createPortal","zIndex","Wrapper","Transition","minHeight","buttons","optionsHandler","handler","option","text","ModalContent","modal","onLayout","contentSize","Content","useSize","component","isFinite","modalRef","setModal","_modal","isBackgroundBlur","enableResizing","showConfirmDialog","dialogOptions","ConfirmDialog","keyHandler","addEventListener","removeEventListener","outerStyle","modalContextValue","contentLayoutHandler","updateSize","GlobalConetxt","rootRef","elementsWrapperRef","GlobalProvider","popup","whiteSpace","fontFamily","textShadow","mainContainer","popupPlacement","title","refChild","refContent","placement","setPlacement","showToolTip","useGlobal","useLayoutEffect","getPopupPlacement","childBounding","contentBounding","pl","mouseOverHandler","ToolTip","svg","fill","popupTitle","CloseButton","loaderStyles","analysisData","setAnalysisData","calcStart","setCalcStartStatus","isCalcFinished","setCalcFinished","isSpectrum2D","fromIndex","toIndex","xGetFromToIndex","analysesProps","slice","result","analyseMultiplet","frequency","originFrequency","takeBestPartMultiplet","symmetrizeEachStep","debug","err","log","steps","d","xyToXYObject","multiplet","js","multiplicity","coupling","errorFunction","vAlign","useScaleChecked","EXCLUSION_ZONE","useActiveSpectrumStyleOptions","ExclusionZoneAnnotation","xDomains","verticalAlign","getExclusionZones","getVerticalShift","MemoizedPeakAnnotations","ExclusionZonesAnnotationsInner","useSpectraByActiveNucleus","DISPLAYER_MODE","DM_1D","filters","Filters","flag","anchorStyle","content","anchorSide","previousPosition","baseCss","initialPosition","onStart","onMove","onEnd","useDraggable","anchor","onMouseDown","innerContainer","tag","resProps","integralData","INTEGRAL","handleOnStopResizing","RESIZE_INTEGRAL","handleOnEnterNotation","handleOnMouseLeaveNotation","x0","useIntegralPath","integralSettings","integralDefaultValues","getValue","Integrals","integrals","tempData","_data","refText","isSelected","setIsSelected","_value","setValue","containerSize","setContainerSize","format","PEAK","handleOnPeakChange","SHIFT_SPECTRUM","shiftValue","textBox","getBBox","handleKeyDown","newValue","valueAsNumber","isNaN","oldValue","blur","handleChange","target","handleSelectPeakAnnotation","outline","paddingRight","Peaks","getVerticalAlign","findIndex","reSortData","sort","isPeaksMarkersVisible","DATABASE","fullHeight","blockHight","range","diff","abs","newForm","newTo","rangesToXY","nbPoints","domain","extent","accumulator","point","gridStyles","showGrid","mode","labelProp","refGrid","grid","tickSize","JGraphContext","maxValue","JGraphContextProvider","jGraphState","VerticalAxis","forwardRef","other","useLinearPrimaryTicks","useJGraph","links","generatePath","link","couplings","join","isOver","setOver","marginTop","JCouplingLinks","MemoizedJGraph","InnerJGraph","showJGraph","graphHeight","jGraphTolerance","_preferences","getRangeDefaultValues","jCouplingMax","generateJGraphData","maxRange","JGraphState","onDelete","common","hover","Highlighted","rangeData","columnKey","deleteHandler","DELETE_ANALYZE_SPECTRA_RANGE","colKey","resizeEndHandler","resized","RESIZE_ANALYZE_SPECTRA_RANGE","_Fragment","DeleteButton","spectraAnalysis","columns","MemoizedMultiAnalysisRanges","MultiAnalysisRangesInner","levelHeight","TREE_LEVEL_COLORS","showLabels","nodesData","signalID","labelOptions","buildTreeNodeAndEdge","_startX","ratio","multiplicityIndex","edgeLevel","_startYEdge","_startYNode","distance","node","assigned","rangeFrom","rangeTo","spectraData","extractID","SIGNAL","xRange","setXRange","treeProps","setTreeProps","drawInFullRange","setDrawInFullRange","setShowLabels","_drawInFullRange","checkMultiplicity","_treeWidth","_treeHeight","_treeLevelHeight","yMax","_x","treeNodesData","buildTreeNodesData","createTreeNodes","jIndices","_mult","hasCouplingConstant","_i","_xRange","_treeNodeData","multiplicityTree","firstLevelStartY","_startY","secondLevelStartY","_rangeFrom","_rangeTo","pathData","setActive","MemoizedTempMultiplicityTree","TempMultiplicityTreeInner","tempRange","showMultiplicityTrees","startEditMode","integration","assignmentData","useAssignmentData","assignmentRange","highlightRange","filterForIDsWithAssignment","RANGE","isBlockedByEditing","setIsBlockedByEditing","checkRangeKind","RESIZE_RANGE","mouseEnterHandler","assignHandler","editRangeID","showRangesIntegrals","MemoizedRanges","RangesInner","empyData","deleteRangeHandler","DELETE_BASE_LINE_ZONE","baseLineZones","xPosition","MemoizedFooterBanner","FooterBannerInner","colorIndicator","borderBottom","marginBottom","ToggleVisibility","off","trackers","borderColor","radius","fillOpacity","SVGPadding","closePeakPosition","setPosition","vShift","align","getClosePeak","mouseCoordinates","b","maxIndex","number","minIndex","yDataRange","yValue","xValue","candidatePeakPosition","pivot","activeSpectrumData","xVal","xInvert","general","widthProp","heightProp","useModal","useAlert","scaleState","dispatchScale","scaleReducer","SET_SCALE","propagateEvent","startXPPM","endXPPM","Events","emit","disableMultipletAnalysis","ADD_INTEGRAL","MAX_LENGTH","ADD_RANGE","ANALYZE_SPECTRA","ADD_PEAKS","ADD_BASE_LINE_ZONE","ADD_EXCLUSION_ZONE","zoomType","ZoomType","STEP_HORIZONTAL","xPPM","ADD_PEAK","SET_VERTICAL_INDICATOR_X_POSITION","header","textDecoration","body","stack","colorPalettes","base","shade","tint","danger","warning","medium","light","sizeConfig","xSmall","small","large","size","basic","fillStyle","getFillStyle","colorStyle","active","Button","restProps","flex","colorTheme","buttonProps","Done","Danger","Action","onDone","onCancel","doneLabel","cancelLabel","CheckBox","checked","checkProps","disabled","onChange","setCheck","handleCheck","reverse","checkbox","setFieldValue","useFormikContext","changeHandler","FormikForm","onSubmit","initialValues","validationSchema","lineHeight","inputWrapper","borderWidth","borderStyle","input","clearButton","aspectRatio","Input","debounceTime","onKeyDown","checkValue","enableAutoSelect","onBlur","onFocus","renderIcon","canClear","onClear","val","setVal","localRef","combinedRef","useCombinedRefs","debounceOnChange","select","formatValue","trim","onChangeHandler","check","pattern","test","preventPropagate","clearHandler","checkErrorAfterInputTouched","errors","touched","isInvalid","INITIAL_VALUE","compressed","pretty","dataExportOption","DataExportOptions","ROW_DATA","onSave","refForm","handleSave","submitForm","submitHandler","ModalStyles","DATA_SOURCE","saveAs","JSZip","jszip","saveToClipboardHandler","hideLoading","copyPNGToClipboard","saveAsJSONHandler","spaceIndent","isCompressed","fileName","exportedData","toJSON","exportAsJSON","handle","saveAsNMREHandler","nmriumToNmredata","exportAsNMRE","saveAsSVGHandler","saveAsPNGHandler","saveHandler","saveAsHandler","defaultValue","Toggle","toggleHandler","ToggleButton","counter","deleteToolTip","onFilter","filterToolTip","filterIsActive","counterFiltered","onSettingClick","showSettingButton","canDelete","DefaultPanelHeader","isToolVisible","useCheckToolsVisibility","automaticPickingHandler","AUTO_RANGES_SPECTRA_PICKING","AUTO_ZONES_SPECTRA_PICKING","SvgNmrRangePicking","setData","sourceElement","setSourceElement","contextMenuHandler","parentElement","clickX","clickY","screenW","screenH","rootW","rootH","useImperativeHandle","handleContextMenu","_handleGlobalClick","wasOutside","isSameNode","c","ContextMenu","headerGroups","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","ReactTableHeader","row","isConstantlyHighlighted","rowCss","highlightedSource","UNKNOWN","onContextMenu","isRowActive","getIDs","highlightStyle","getRowProps","cells","cell","isRowSpanned","rowSpan","getCellProps","ReactTableRow","table","enableVirtualScroll","ReactTableInner","onScroll","approxItemHeight","groupKey","highlightActiveRow","contextRef","indexBoundary","useReactTableContext","rowIndex","setRowIndex","getTableProps","getTableBodyProps","rows","prepareRow","rowSpanHeaders","useTable","useSortBy","useRowSpan","checkModifierKeyActivated","rowsData","overflowY","ReactTableStyle","prepareRowSpan","mRef","useMeasure","combineRef","tableVirtualConfig","setTableVirtualConfig","offsetHeight","scrollHeight","numberOfVisibleRows","ceil","prev","lookForGroupIndex","currentIndex","side","currentItem","findStartIndex","newIndex","currentIndx","findEndIndex","scrollHandler","scrollTop","ReactTable","assignments","SET_AUTOMATIC_ASSIGNMENTS","COLUMNS","Header","Cell","maxWidth","minWidth","accessor","SvgNmrAssignment","AutomaticAssignmentTable","getAssignmentsData","getAssignments","restAssignments","useAutoAssignments","tablePanelStyle","SvgNmrAssignment2","useFlexLayout","ReactTableFlexLayout","tableContainer","searchInput","meta","information","setInformation","matches","setMatchesData","searchRef","handleSearch","sortType","resizable","MemoizedInformationPanel","InformationPanelInner","tabid","tablabel","tabstyles","topStyles","leftStyles","PositionsEnum","onClickTabHandler","tab","contentChild","tabs","Children","child","isValidElement","Tabs","direction","loop","defaultIndex","activeIndex","setActiveIndex","Sliders","nextHandler","preActiveIndex","nextIndex","prevHandler","prevIndex","NextPrev","toolbarStyle","moleculeContainerStyle","molecules","setCurrentIndex","_index","slideIndex","mol","molfile","MF","mf","mw","getAtom","newSum","atoms","molecule","onChangeMoleculeSelectionHandler","sumOptions","panels","setOption","setActiveOption","SumSetOptions","formRef","onTabChangeHandler","sumAuto","hideSetSumFromMolecule","structuresPanel","hidden","moleculeKey","setValues","sum","Yup","required","SaveButton","PreferencesHeader","onEditStart","editStatus","enabled","enableEdit","startEdit","closeEdit","mouseClickCallback","classList","contains","editModeHandler","EditableColumn","arrowDownIcon","Select","placeholder","handleOnChanged","selectStyle","deleteIntegralHandler","DELETE_INTEGRAL","integralID","changeIntegralDataHandler","CHANGE_INTEGRAL_DATA","initialColumns","SignalKinds","saveRelativeHandler","CHANGE_INTEGRAL_RELATIVE","integralsPreferences","showWhen","formatNumber","absolute","absoluteFormat","relativeFormat","checkIntegralKind","tableColumns","col","colParams","addCustomColumn","object1","object2","IntegralTable","onColorChange","displayColorPicker","showColorPicker","selectedColor","setColor","handleClick","handleClose","handleOnColorChanged","colorEvent","hex","round","rgb","ChromePicker","ColorInput","colorPickerProps","colorChangeHandler","FormikColorPicker","inputLabel","checkControllerName","formatControllerName","disableFormat","hideFormat","checkChangeHandler","FormikColumnFormatField","inputContainer","NumberInput","onInput","min","changeHander","checkValidity","_ref","groupContainer","paddingBottom","formatFields","checkController","formatController","innerRef","updateValues","integralPreferences","getValueByKeyPath","defaultValues","nucleusLabel","assign","saveSetting","field","MemoizedIntegralsPreferences","IntegralsPreferencesInner","useNucleus","IntegralsPreferences","setFilterIsActive","isFlipped","setFlipStatus","settingRef","yesHandler","handleDeleteAll","changeIntegralSumHandler","CHANGE_INTEGRAL_SUM","currentSum","showChangeIntegralSumModal","settingsPanelHandler","saveSettingHandler","handleOnFilter","toggleConstantSumHandler","CHANGE_INTEGRALS_SUM_FLAG","filteredData","factor","_integrals","isInRange","SvgNmrSum","MemoizedIntegralPanel","IntegralPanelInner","wrapper","numberOfPoints","EquallySpacedFilter","FromToFilter","baseList","setFilter","List","list","REFERENCES","entries","APPLY_MULTIPLE_SPECTRA_FILTER","filterChangeHandler","filterOptions","openFiltersModal","RESET_SELECTED_TOOL","openExportAsMatrixModal","SvgNmrAddFilter","SvgNmrExportAsMatrix","selectedMolecule","setMolfile","cb","newMolfile","molText","exec","groups","SET_MOLECULE","ADD_MOLECULE","menuStyles","icon","items","boxBounding","toolTip","menuButtonRef","isShown","showMenu","closeMenuButton","boxSizing","MenuList","othersProps","__html","listStyle","getErrors","errorObj","errorsIterators","obj","isValid","errorList","errorText","FormikSelect","NUMBER_OF_POINTS_1D","generateNumbersPowerOfX","NUMBER_OF_POINTS_2D","predictionFormValidation","shape","integer","lineWidth","proton","carbon","cosy","hsqc","hmbc","isApproved","setApproved","predictionPreferences","setPredictionPreferences","useStateWithLocalStorage","predictionIndex","initValues","isAgree","defaultPredictionOptions","SET_LOADING_FLAG","predictedSpectra","PREDICT_SPECTRA","approveCheckHandler","FREQUENCIES","paddingLeft","MOL_EXPORT_MENU","onMoleculeIndexChange","onOpenMoleculeEditor","actionsOptions","saveAsMolHandler","copyTextToClipboard","exportHandler","handlePaste","navigator","clipboard","readText","handleDelete","DELETE_MOLECULE","openPredictSpectraModal","hideExport","hidePast","hideAdd","hideDelete","hidePredict","SvgNmrFt","activeAssignment","activated","ConcatenationString","onAtomHoverHighlights","setOnAtomHoverHighlights","onAtomHoverAction","setOnAtomHoverAction","DM_2D","assignedDiaIDs","assignedDiaID","assignedDiaIDsMerged","currentDiaIDsToHighlight","highlightID","temp","findDatumAndSignalIndex","diaIDs","getCurrentDiaIDsToHighlight","toggleAssignment","diaID","atomInformation","toggleDiaIDs","handleOnClickAtom","atom","extractFromAtom","nbAtoms","toggle","oclIDs","signalIndex","_diaIDs","_diaID","SET_DIAID_RANGE","SET_DIAID_ZONE","handleOnAtomHover","getHighlightsOnHover","panel","flexGrow","innerPanel","toolbar","slider","moleculesProp","onMoleculeChange","setMolecules","useAtomAssignment","prevMolecules","handleReplaceMolecule","openMoleculeEditorHandler","moleculeIndexHandler","MemoizedMoleculePanel","MoleculePanelInner","ALIGN_SPECTRA","optionChangeHandler","resValues","targetX","nbPeaks","initCode","code","setCode","setResult","evalResult","Eval","maxHeight","MultipleAnalysisCodeEditor","onAfterSave","setColumns","tempKey","columnsKeys","preferncesSchema","colmnName","formData","COLUMNS_TYPES","FORMULA","formula","object","columnSchema","SET_ANALYZE_SPECTRA_COLUMNS","addNewColumn","prevData","valueKey","MultipleSpectraAnalysisPreferences","ul","li","onSelect","renderItem","containerRect","selectedKey","formatSelectedValue","open","setOpen","setItem","drop","selectHandler","columnsFilters","COLUMNS_VALUES_KEYS","RELATIVE","ABSOLUTE","MIN","MAX","charLabel","rangeLabel","onColumnFilter","NORMAL","codeEvaluation","columnFilterHandler","FILTER_SPECTRA_COLUMN","columnData","columnIndex","cellHandler","headerHandler","MultipleSpectraAnalysisTable","afterSaveHandler","showTrackerHandler","openAlignSpectra","copyToClipboardHandler","getDataAsString","SvgNmrOverlay","MemoizedMultipleSpectraAnalysisPanel","MultipleSpectraAnalysisPanelInner","peaksDefaultValues","peaksPreferences","MemoizedPeaksPreferences","PeaksPreferencesInner","PeaksPreferences","deletePeakHandler","DELETE_PEAK_NOTATION","saveDeltaPPMRefsHandler","parseFloat","peakIndexFormat","valueHz","deltaHzFormat","intensity","intensityFormat","peakWidth","peakWidthFormat","PeaksTable","filteredPeaks","_peaks","next","MemoizedPeaksPanel","PeaksPanelInner","onCopyClick","onUnlink","onFilterActivated","isFilterActive","filterCounter","changeRangesSumHandler","CHANGE_RANGE_SUM","showChangeRangesSumModal","handleOnRemoveAssignments","DELETE_RANGE","handleSetShowMultiplicityTrees","SHOW_MULTIPLICTY_TREES","handleShowIntegrals","SHOW_RANGES_INTEGRALS","handleShowJGraph","SHOW_J_GRAPH","copyHTMLToClipboard","saveAsHTMLHandler","observedFrequency","nbDecimalDelta","getNumberOfDecimals","ppm","nbDecimalJ","hz","rangesToACS","changeSumConstantFlagHandler","CHANGE_RANGES_SUM_FLAG","SvgNmrIntegrate","rangesPreferences","MemoizedRangesPreferences","RangesPreferencesInner","RangesPreferences","config","sortConfig","setSortConfig","sortedItems","sortableItems","SortType","sortHandler","columnName","defaultContent","onSort","rowSpanTags","onHoverRange","FormatNumber","FormikOnChange","enableValidation","inputInfo","infoText","signalContainer","addSignalBtn","newSignal","newSignalDelta","translateMultiplet","_signals","validation","createError","errorMessage","triggerSubmitHandler","AddSignalFormTab","_coupling","CouplingsTableStyle","multiplicityChangeHandler","multipletsList","Multiplets","CouplingsTable","SignalFormTabStyle","SignalFormTab","textStyles","tabStylesAddition","tabStyles","newSignalFormRef","activeField","setActiveField","handleOnFocus","tapClickHandler","handleDeleteSignal","tabContainsErrors","signalFormTabs","signalTabs","addSignalTab","editSignalInfoText","addSignalInfoText","noSignals","noCouplings","SignalsForm","useValidation","Yup.array","Yup.object","Yup.string","Yup.mixed","onSaveEditRangeModal","onCloseEditRangeModal","onZoomEditRangeModal","automaticZoom","useRangeFormValidation","handleOnZoom","handleOnClose","getCouplings","getSignals","generateID","handleOnSave","formValues","counterJ","_multiplicity","CHANGE_TEMP_RANGE","zoomRange","SET_X_DOMAIN","deleteRange","changeRangeSignalKind","CHANGE_RANGE_SIGNAL_KIND","rowData","saveEditRangeHandler","editedRowData","SAVE_EDITED_RANGE","closeEditRangeHandler","SET_SELECTED_TOOL","selectBoxStyle","onHoverSignal","useEditRangeModal","tableMetaInfo","spanStyle","onUnlinkVisibilityChange","unlinkVisibility","onLink","visibilityChangeHandler","spanCss","visibility","RangeAssignmentsColumn","RangeColumn","integralVal","formattedValue","CHANGE_RANGE_RELATIVE","tdCss","SignalAssignmentsColumn","useFormat","CHANGE_RANGE_SIGNAL_VALUE","rangeID","HighlightedRowStyle","ConstantlyHighlightedRowStyle","highlightRangeAssignmentsColumn","assignmentSignal","highlightSignal","unlinkRangeButtonVisibility","showUnlinkRangeButton","unlinkSignalButtonVisibility","showUnlinkSignalButton","getFormat","unlinkHandler","isOnRangeLevel","removeAll","linkHandler","onHoverRangeAssignmentsColumn","trCss","isColumnVisible","SignalDeltaColumn","ActionsColumn","tableStyle","tableData","sortedData","useTableSortBy","useMapRanges","rowKey","rangesData","isInView","getFilteredRanges","_ranges","unlinkRangeHandler","UNLINK_RANGE","saveJSONToClipboardHandler","dataToClipboard","contextMenu","filterHandler","MemoizedRangesTablePanel","RangesTablePanelInner","spectrums","DELETE_SPECTRA","showAllSpectrumsHandler","spectrumsPerTab","CHANGE_VISIBILITY","hideAllSpectrumsHandler","addMissingProjectionHandler","getMissingProjection","SpectrumsData","missingNucleus","hasSpectrums","ADD_MISSING_PROJECTION","setSameTopHandler","SET_SPECTRA_SAME_TOP","resetScaleHandler","RESET_SPECTRA_SCALE","SvgNmrResetScale","SvgNmrSameTop","MemoizedSpectraPanelHeader","SpectraPanelHeaderInner","ColorIndicator","onChangeMarkersVisibility","markersVisible","isMarkerVisible","v","SvgNmrPeaks","onChangeVisibility","alignContent","textOverflow","onChangeActiveSpectrum","onOpenSettingModal","formatValueAsHTML","SvgNmrFid","SvgNmr2D","solvent","borderLeft","experiment","pulse","SpectrumListItem","colorchangeHandler","SketchPicker","COLORS","yLogBase","hideHeading","sanPlot","strokeDasharray","processedData","processSnapPlot","Spectrum1DHistogram","SpectrumData","gap","onAfterChange","sliderProps","ReactSlider","valueNow","FormikSlider","paddingTop","borderTop","Spectrum2DHistogram","CHANGE_SPECTRUM_SETTING","SpectrumSetting","arePropsEqual","onTabChange","setMarkersVisible","selectedSpectrumData","setSelectedSpectrum","settingModalPosition","setSettingModalPosition","isSettingModalDisplayed","setIsSettingModalDisplayed","visibleMarkers","spectrumsGroupByNucleus","groupByNucleus","GroupByInfoKey","handleChangeMarkersVisibility","newChecked","CHANGE_PEAKS_MARKERS_VISIBILITY","SET_ACTIVE_TAB","openSettingHandler","selectedSpectrum","nativeEvent","handleChangeVisibility","handleChangeActiveSpectrum","CHANGE_ACTIVE_SPECTRUM","group","MemoizedSpectra","SpectrumsTabsInner","setSpectrums","tabChangeHandler","SpectraPanelHeader","SpectrumListPanel","description","onConfirm","handleOnConfirm","editPathLengthsStyles","experimentType","onEdit","setFrom","pathLength","DefaultPathLengths","setTo","isError","setIsError","handleOnEdit","editedSignal","moveLinkStyles","correlationDim1","correlationDim2","correlations","selectedCorrelationIdDim1","setSelectedCorrelationIdDim1","selectedCorrelationIdDim2","setSelectedCorrelationIdDim2","correlation","getCorrelationDelta","getSelection","dim","selectionData","arr","_correlation","pseudo","atomType","origin","getCorrelationLabel","selection","modalContainer","setActiveTab","getLinkLabel","linkDim","getLinkDim","editedLink","editedCorrelations","buildCorrelationDataOptions","getEditedCorrelations","tabsContainer","TOP","correlationIdDim1","correlationIdDim2","toUpperCase","correlationsData","highlightIDsAdditionalColumn","ids","_id","findRangeOrZoneID","experimentID","highlightAdditionalColumn","focus","IsInView","tableHeaderProps","getLabelColor","equivalenceTextStyle","edited","equivalence","isInteger","moved","thProps","rowCorrelation","columnCorrelation","commonLinks","highlightIDsCommonLinks","highlightCommonLinks","handleEditPseudoHSQC","pseudoLinkCountHSQC","_link","_correlationDim1","_correlationDim2","commonPseudoLink","buildLink","cloneCorrelationAndEditLink","protonsCount","skipDataUpdate","commonLinksMenu","commonLink","commonLinkContextMenuLabel","getAbbreviation","commonPseudoLinkHSQC","contentLabel","isInViewRow","isInViewColumn","additionalColumnData","styleRow","styleLabel","onSaveEditEquivalences","onSaveEditNumericValues","onEditCorrelationTableCellHandler","highlightIDsRow","highlightRow","onSaveEquivalencesHandler","onSaveEditNumericValuesHandler","convertValuesString","additionalColumnFields","_commonLink","experimentLabel","equivalenceCellStyle","tableDataProps","otherTableDataProps","t","borderRight","hybridization","hybrid","filteredCorrelationsData","editEquivalencesSaveHandler","showProtonsAsRows","additionalColumnHeader","getAtomCounts","elements","stateAtomType","errorColorIndex","Errors","_error","complete","ErrorColors","fontStyle","Overview","inputStyle","previousMF","setMF","isValidMF","setIsValidMF","hasChanged","setHasChanged","checkMF","getAtomsFromMF","onSaveHandler","onSaveHandlerMolecularFormulaInput","onSaveHandlerMoleculeSelection","onChangeHandlerMoleculeSelection","previousTolerance","tolerance","setTolerance","setIsValid","_isValid","panelStyle","setAdditionalColumnData","selectedAdditionalColumnsAtomType","setSelectedAdditionalColumnsAtomType","setShowProtonsAsRows","atomTypesInView","getAtomType","xDomain0","xDomain1","yDomain0","yDomain1","firstLink1D","getLinkDelta","findSpectrum","findSignalMatch1D","firstLink2D","findSignalMatch2D","_values","handleOnSetMolecularFormula","SET_CORRELATIONS_MF","handleOnSetShiftTolerance","SET_CORRELATIONS_TOLERANCE","showSetMolecularFormulaModal","showSetShiftToleranceModal","additionalColumnTypes","columnTypes","array","columnType","_selectedAdditionalColumnsAtomType","SET_CORRELATION","editNumericValuesSaveHandler","setCorrelationsHandler","SET_CORRELATIONS","deleteCorrelationHandler","DELETE_CORRELATION","deleteSignalHandler","findRange","findSignal1D","DELETE_1D_SIGNAL","findZone","findSignal2D","DELETE_2D_SIGNAL","changeSignalPathLengthHandler","SET_2D_SIGNAL_PATH_LENGTH","editCorrelationTableCellHandler","SummaryPanel","zoneDefaultValues","zonesPreferences","MemoizedZonesPreferences","ZonesPreferencesInner","ZonesPreferences","Yup.number","onSaveEditZoneModal","onCloseEditZoneModal","onZoomEditZoneModal","_rowData","isDefaultPathLength","changeSignalKindHandler","CHANGE_ZONE_SIGNAL_KIND","deleteZoneHandler","DELETE_2D_ZONE","zoomZoneHandler","xMargin","yMargin","SET_Y_DOMAIN","saveEditZoneHandler","SAVE_EDITED_ZONE","openEditZoneHandler","showUnlinkButton","setShowUnlinkButton","onHoverSignalX","onHoverSignalY","showUnlinkButtonSignalX","showUnlinkButtonSignalY","setShowUnlinkButtonSignalX","setShowUnlinkButtonSignalY","highlightSignalX","highlightSignalY","signalDeltaX","signalDeltaY","saveXHandler","CHANGE_ZONE_SIGNAL_VALUE","zoneID","saveYHandler","onHoverZoneX","onHoverZoneY","showUnlinkButtonZoneX","showUnlinkButtonZoneY","setShowUnlinkButtonZoneX","setShowUnlinkButtonZoneY","highlightZoneX","highlightZoneY","isOnZoneLevel","nuclei","xFrom","xTo","yFrom","yTo","getFilteredZones","_zones","unlinkZoneHandler","UNLINK_ZONE","visibilityHandler","MemoizedZonesPanel","ZonesPanelInner","databasePreferences","databaseDefaultValues","DatabasePreferences","overFlowStyle","names","enableRowSpan","idCode","coordinates","ocl","smiles","onAdd","DatabaseTable","emptyKeywords","searchKeywords","handleChangeOption","useToolsFunctions","databases","useDatabases","keywords","setKeywords","databaseInstance","solvents","prevState","mapSolventsToSelect","getSolvents","prevResult","unshift","search","oldKeywords","handleChangeDatabase","databaseIndex","_database","initiateDatabase","prepareData","resurrectHandler","RESURRECTING_SPECTRUM_FROM_RANGES","enableFilterHandler","tool","mapDatabasesToSelect","MemoizedDatabasePanel","DatabasePanelInner","testID","Table","mappedChildren","TableBody","getVAlign","TableHeader","TableHead","spectraCounter","activeFilterID","selectedFilterRef","handelFilterCheck","ENABLE_FILTER","handelDeleteFilter","DELETE_FILTER","DELETE_SPECTRA_FILTER","filterType","filterSnapShotHandler","newID","SET_FILTER_SNAPSHOT","getStyle","classes","filtersTableRow","ObjectInspector","isDeleteAllow","MemoizedFiltersTable","FiltersTableInner","filtersTable","FiltersTable","MemoizedFilterPanel","FilterPanelInner","onPredict","setMolecule","predictHandler","PredictionPreferences","accordionItems","hidePreferenceKey","PeaksPanel","RangesPanel","isExperimental","DatabasePanel","TOOLS_PANELS_ACCORDION","null","displayedMode","getPanelPreferences","usePanelPreferences","useCheckExperimentalFeature","panelOptions","isOpened","MemoizedPanels","PanelsInner","keysPreferences","overDisplayer","handleFullZoomOut","alignSpectrumsVerticallyHandler","changeDisplayViewModeHandler","useExport","allow1DTool","DELETE_EXCLUSION_ZONE","keysPreferencesListenerHandler","num","SET_KEY_PREFERENCES","keyCode","APPLY_KEY_PREFERENCES","toolsListenerHandler","checkSwitch","metaKey","ctrlKey","tags","tagName","composedPath","handleOnKeyDown","checkNotInputField","hidePanelOnLoad","assignmentReducer","assignmentState","version","versionInfo","startsWith","addButton","th","labelCol","serialCol","currentWorkspace","addNewDatabaseHandler","newDatabase","resetDatabaseHandler","database","LIST","hideOpenOption","_nuclei","addNewNucleusFormatHandler","newFormat","newNuclei","nucleiList","WorkspaceItem","setName","addWorkspaceHandler","deleteWorkspaceHandler","onTextChange","Yup.ValidationError","Yup.lazy","useWorkspacesList","workspacesList","handleReset","addWorkSpaceHandler","deleteWorkSpaceHandler","ChangeWorkspaceHandler","LEFT","minMaxRatioRef","maxNumberOfPeaksRef","noiseFactor","lookNegativeRef","handleApplyFilter","AUTO_PEAK_PICKING","maxNumberOfPeaks","minMaxRatio","lookNegative","justifyItems","algorithmRef","algorithm","setAlgorithm","APPLY_BASE_LINE_CORRECTION_FILTER","handleCancelFilter","getAlgorithmsList","baselineAlgorithms","changeAlgorithmHandler","maxIterations","moreThan","initialValue","degree","valueRef","mouseDownCallback","mouseMoveCallback","mouseUpCallback","InputRange","phaseCorrectionTypes","manual","automatic","algorithms","ph0","ph1","ph0Ref","ph1Ref","phaseCorrectionType","setPhaseCorrectionType","APPLY_AUTO_PHASE_CORRECTION_FILTER","APPLY_MANUAL_PHASE_CORRECTION_FILTER","APPLY_ABSOLUTE_FILTER","calcPhaseCorrectionHandler","newValues","filedName","diff0","diff1","CALCULATE_MANUAL_PHASE_CORRECTION_FILTER","handleInput","handleRangeChange","MemoizedManualPhaseCorrectionPanel","ManualPhaseCorrectionPanelInner","hint","AUTO_RANGES_DETECTION","Sizes","sizeTextInputRef","lineBroadeningValue","setLineBroadeningValue","APPLY_ZERO_FILLING_FILTER","zeroFillingSize","getDefaultValue","log2","validity","valid","thresholdFactor","AUTO_ZONES_DETECTION","CHANGE_ZONES_NOISE_FACTOR","isFullscreen","onMaximize","selectedOptionPanel","hideGeneralSettings","selectedPanel","openGeneralSettingsHandler","openAboutUs","changeWorkspaceHandler","SvgLogoNmrium","docsBaseUrl","MemoizedHeader","HeaderInner","loadSubFilesFromZip","extractedfiles","uniqueFileExtensions","extension","selectedFilesByExtensions","FILES_TYPES","MOL","files","loadFilesFromZip","LOAD_MOL_FILE","NMRIUM","asBuffer","decoder","TextDecoder","binary","decode","LOAD_JSON_FILE","JDX","DX","LOAD_JCAMP_FILE","JDF","LOAD_JDF_FILE","loadFilesHandler","Set","loadFiles","fileSignature","getFileSignature","FILES_SIGNATURES","ZIP","unzipResult","Zip","loadAsync","zipFile","isNotZip","ex","hasBruker","brukerFile","endsWith","LOAD_ZIP_FILE","NMREDATA","LOAD_NMREDATA_FILE","onDrop","droppedFiles","getRootProps","getInputProps","isDragActive","openImportDialog","useDropzone","noClick","noKeyboard","types.SET_SELECTED_FILTER","types.SAVE_AS_SVG","types.SAVE_DATA_AS_JSON","listRef","translate","setTranslate","boxSize","oldTransform","yup","publicationText","publicationStringHandler","GENERATE_SPECTRUM_FROM_PUBLICATION_STRING","allowedExtensions","onLoadClick","startLoading","pathReft","loadJCAMPHandler","extractFileMetaFromPath","loadFile","jcampURL","IMPORT_MENU","EXPORT_MENU","ftCounter","fidCounter","isExperimentalFeature","isButtonVisible","importMenu","isRealSpectrumShown","changeSpectrumViewHandler","LoadJacmpHandler","startLoadingHandler","importJCAMPFile","openImportPublicationStringModal","importHandler","SvgNmrOverlay3","isComplex","SvgNmrRealImag","SvgNmrAlignBottom","MemoizedBasicToolBar","BasicToolBarInner","useDatumWithSpectraStatistics","toggleButton","_isActive","toggleButtons","setToggleButtons","handleOnChange","_toggles","toggles","_child","selectedOption","handleOnFFTFilter","APPLY_FFT_FILTER","SET_SELECTED_FILTER","selectedFilter","SvgNmrPeakPicking","SvgNmrMultipleAnalysis","SvgNmrZeroFilling","im","SvgNmrPhaseCorrection","SvgNmrBaselineCorrection","SvgNmrFourierTransform","MemoizedFunctionToolBar","FunctionToolBarInner","MemoizedToolBar","ToolBarInner","viewerContainerStyle","containerStyles","defaultPreferences","defaultData","ErrorOverlay","dataProp","onDataChange","useToggle","useFullscreen","spectrumReducer","initState","preferencesState","dispatchPreferences","preferencesReducer","initPreferencesState","checkActionType","actionType","dispatchMiddleWare","dispatchMiddleware","INITIATE","preventContextMenuHandler","mainDivRef","div","SET_MOUSE_OVER_DISPLAYER","ModalProvider","NMRium","searchKey","objectHelper","seData","setKey","searchDeep","callBackData","setCallBackData","dropFileHandler","dropfiles","dataChangeHandler","DropZone","TestHighlight","lazy","Test","rootElement","getElementById","createRoot","TestRoutes"],"sources":["../../vite/modulepreload-polyfill","../../src/demo/utility/menu.ts","../../src/demo/Sidebar.tsx","../../vite/preload-helper","../../src/demo/views/index.ts","../../src/demo/layouts/Admin.tsx","../../src/demo/layouts/SingleDisplayerLayout.tsx","../../src/demo/layouts/Main.tsx","../../src/data/utilities/checkModifierKeyActivated.ts","../../src/data/data1d/Spectrum1D/ranges/detectSignal.ts","../../src/component/EventsTrackers/BrushTracker.tsx","../../src/component/EventsTrackers/MouseTracker.tsx","../../src/data/constants/SignalsKinds.ts","../../src/data/data1d/filter1d/absolute.ts","../../src/data/data1d/filter1d/autoPhaseCorrection.ts","../../src/data/data1d/filter1d/baselineCorrection.ts","../../src/data/data1d/filter1d/centerMean.ts","../../src/data/data1d/filter1d/digitalFilter.ts","../../src/data/data1d/filter1d/equallySpaced.ts","../../src/data/data1d/filter1d/exclusionZones.ts","../../src/data/data1d/filter1d/fft.ts","../../src/data/data1d/filter1d/fromTo.ts","../../src/data/data1d/filter1d/lineBroadening.ts","../../src/data/data1d/filter1d/pareto.ts","../../src/data/data1d/filter1d/phaseCorrection.ts","../../src/data/data1d/filter1d/shiftX.ts","../../src/data/data1d/filter1d/standardDeviation.ts","../../src/data/data1d/filter1d/zeroFilling.ts","../../src/data/data2d/filter2d/shiftX.ts","../../src/data/data2d/filter2d/shiftY.ts","../../src/data/utilities/generateID.ts","../../src/data/FiltersManager.ts","../../src/data/utilities/getColor.ts","../../src/data/data1d/Spectrum1D/integrals/initiateIntegrals.ts","../../src/data/data1d/Spectrum1D/getSpectrumErrorValue.ts","../../src/data/data1d/Spectrum1D/shift/getShiftX.ts","../../src/data/data1d/Spectrum1D/peaks/mapPeaks.ts","../../src/data/data1d/Spectrum1D/peaks/initiatePeaks.ts","../../src/data/data1d/Spectrum1D/ranges/mapRanges.ts","../../src/data/data1d/Spectrum1D/ranges/initiateRanges.ts","../../src/data/data1d/Spectrum1D/initiateDatum1D.ts","../../src/data/data1d/Spectrum1D/ranges/generateSpectrumFromRanges.ts","../../src/data/data1d/Spectrum1D/generateSpectrumFromPublicationString.ts","../../src/data/data1d/Spectrum1D/get1DDataXY.ts","../../src/data/constants/References.ts","../../src/data/data1d/Spectrum1D/getReferenceShift.ts","../../src/data/data1d/Spectrum1D/integrals/changeIntegralsRelative.ts","../../src/data/data1d/Spectrum1D/integrals/checkIntegralKind.ts","../../src/data/utilities/getSum.ts","../../src/data/data1d/Spectrum1D/integrals/updateRelatives.ts","../../src/data/data1d/Spectrum1D/integrals/updateIntegralsRelativeValues.ts","../../src/data/data1d/Spectrum1D/isSpectrum1D.ts","../../src/data/data1d/Spectrum1D/peaks/autoPeakPicking.ts","../../src/data/data1d/Spectrum1D/peaks/lookupPeak.ts","../../src/data/utilities/getAtom.ts","../../src/data/data1d/Spectrum1D/SumManager.ts","../../src/data/utilities/RangeUtilities.ts","../../src/data/data1d/Spectrum1D/ranges/checkRangeKind.ts","../../src/data/data1d/Spectrum1D/ranges/updateRangesRelativeValues.ts","../../src/data/data1d/Spectrum1D/ranges/addRange.ts","../../src/data/data1d/Spectrum1D/ranges/changeRange.ts","../../src/data/data1d/Spectrum1D/ranges/changeRangeRelativeValue.ts","../../src/data/data1d/Spectrum1D/ranges/changeRangeSignal.ts","../../src/data/data1d/Spectrum1D/ranges/detectRange.ts","../../src/data/data1d/Spectrum1D/ranges/autoRangesDetection.ts","../../src/data/data1d/Spectrum1D/ranges/detectRanges.ts","../../src/data/data1d/Spectrum1D/shift/internal/updateIntegralXShift.ts","../../src/data/data1d/Spectrum1D/shift/internal/updatePeaksXShift.ts","../../src/data/data1d/Spectrum1D/shift/internal/updateRangesXShift.ts","../../src/data/data1d/Spectrum1D/shift/updateXShift.ts","../../src/component/reducer/core/Constants.ts","../../src/data/data1d/Data1DManager.ts","../../src/data/data2d/Spectrum2D/getMissingProjection.ts","../../src/data/data2d/Spectrum2D/getSlice.ts","../../src/data/data2d/Processing2D.ts","../../src/data/data2d/Spectrum2D/initiateDatum2D.ts","../../src/data/data2d/Spectrum2D/isSpectrum2D.ts","../../src/data/data2d/Spectrum2D/shift/getShift.ts","../../src/data/data2d/Spectrum2D/shift/updateShift.ts","../../src/data/data2d/Spectrum2D/toJSON.ts","../../src/data/data2d/Spectrum2D/zones/changeZoneSignal.ts","../../src/data/data2d/Spectrum2D/zones/getDetectionZones.ts","../../src/data/data2d/Spectrum2D/zones/detectZones.ts","../../src/data/data2d/Spectrum2D/zones/detectZonesManual.ts","../../src/data/data2d/Data2DManager.ts","../../src/data/migration/changeKeys.ts","../../src/data/migration/migrateToVersion1.ts","../../src/data/migration/migrateToVersion2.ts","../../src/data/migration/MigrationManager.ts","../../src/data/utilities/getAtomsFromMF.ts","../../src/data/molecules/Molecule.ts","../../src/data/SpectraManager.ts","../../src/data/data1d/Spectrum1D/toJSON.ts","../../src/data/PredictionManager.ts","../../src/component/panels/SummaryPanel/CorrelationTable/Constants.ts","../../src/component/toolbar/ToolTypes.ts","../../src/component/utility/util/nmredata/addRanges.ts","../../src/component/utility/util/nmredata/addZones.ts","../../src/component/utility/nmredataToNmrium.ts","../../src/component/reducer/actions/AssignmentsActions.ts","../../src/data/utilities/FindUtilities.ts","../../src/component/1d/utilities/scale.ts","../../src/component/reducer/helper/getRange.ts","../../src/component/utility/nucleusToString.ts","../../src/component/reducer/actions/DomainActions.ts","../../src/component/reducer/actions/RangesActions.ts","../../src/data/utilities/ZoneUtilities.ts","../../src/component/2d/utilities/DimensionLayout.ts","../../src/component/2d/utilities/scale.ts","../../src/component/reducer/helper/get2DRange.ts","../../src/component/reducer/actions/ZonesActions.ts","../../src/component/reducer/actions/CorrelationsActions.ts","../../src/component/reducer/helper/Zoom1DManager.ts","../../src/component/reducer/actions/DatabaseActions.ts","../../src/component/reducer/actions/DimensionsActions.ts","../../src/component/utility/getSpectraByNucleus.ts","../../src/component/reducer/helper/ZoomHistoryManager.ts","../../src/component/utility/GroupByInfoKey.ts","../../src/component/reducer/actions/PreferencesActions.ts","../../src/component/reducer/actions/ToolsActions.ts","../../src/component/reducer/actions/FiltersActions.ts","../../src/component/reducer/actions/GlobalActions.ts","../../src/component/reducer/actions/HistoryActions.ts","../../src/component/reducer/actions/IntegralsActions.ts","../../src/data/molecules/MoleculeManager.ts","../../src/component/reducer/types/Types.ts","../../src/component/reducer/actions/LoadActions.ts","../../src/component/reducer/actions/MoleculeActions.ts","../../src/component/reducer/actions/PeaksActions.ts","../../src/data/utilities/generateChar.ts","../../src/data/data1d/MultipleAnalysis.ts","../../src/component/reducer/actions/SpectraAnalysisAction.ts","../../src/component/reducer/actions/SpectrumsActions.ts","../../src/component/reducer/types/HistoryTypes.ts","../../src/component/reducer/Reducer.ts","../../src/component/context/ChartContext.tsx","../../src/component/context/DispatchContext.tsx","../../src/component/hooks/useSpectrum.ts","../../src/component/context/LoaderContext.tsx","../../src/component/loader/NoData.tsx","../../src/component/loader/DefaultSpinnerComponent.tsx","../../src/component/loader/SpinnerContext.tsx","../../src/component/loader/Spinner.tsx","../../src/component/tool/BrushXY.tsx","../../src/component/tool/CrossLinePointer.tsx","../../src/component/utility/LocalStorage.ts","../../src/component/workspaces/basic.ts","../../src/component/workspaces/embedded.ts","../../src/component/workspaces/exercise.ts","../../src/component/workspaces/prediction.ts","../../src/component/workspaces/process1D.ts","../../src/component/workspaces/index.ts","../../src/component/reducer/preferencesReducer.ts","../../src/component/context/PreferencesContext.tsx","../../src/component/utility/PathBuilder.ts","../../src/component/2d/Contours.tsx","../../src/component/hooks/useXYReduce.ts","../../src/component/2d/Left1DChart.tsx","../../src/component/2d/Top1DChart.tsx","../../src/component/2d/XAxis.tsx","../../src/component/2d/YAxis.tsx","../../src/component/2d/zones/IndicationLines.tsx","../../src/component/utility/Events.ts","../../src/component/assignment/AssignmentsContext.ts","../../src/component/highlight/index.tsx","../../src/data/utilities/Concatenation.ts","../../src/component/2d/SignalDeltaLine.tsx","../../src/component/2d/zones/SignalCrosshair.tsx","../../src/component/2d/zones/Signal.tsx","../../src/component/2d/zones/Zone.tsx","../../src/component/2d/zones/Zones.tsx","../../src/component/2d/Chart2D.tsx","../../src/component/utility/FormatNumber.ts","../../src/component/2d/FooterBanner.tsx","../../src/component/2d/tools/XYLabelPointer.tsx","../../src/component/2d/tools/slicing/SliceScale.ts","../../src/component/2d/tools/slicing/HorizontalSliceChart.tsx","../../src/component/2d/tools/slicing/VerticalSliceChart.tsx","../../src/component/2d/tools/slicing/SlicingView.tsx","../../src/component/2d/Viewer2D.tsx","../../src/component/reducer/scaleReducer.ts","../../src/component/context/ScaleContext.tsx","../../src/component/elements/popup/options.ts","../../src/component/elements/popup/Alert/Context.ts","../../src/component/elements/popup/Transition.tsx","../../src/component/elements/popup/Wrapper.tsx","../../src/component/elements/popup/helpers.ts","../../src/component/elements/popup/Alert/ProgressIndicator.tsx","../../src/component/elements/popup/Alert/Provider.tsx","../../src/component/elements/popup/Modal/Context.ts","../../src/component/elements/popup/Modal/ConfirmDialog.tsx","../../src/component/elements/popup/Modal/ModalContent.tsx","../../src/component/elements/popup/Modal/Provider.tsx","../../src/component/context/GlobalContext.tsx","../../src/component/elements/ToolTip/ToolTip.tsx","../../src/component/elements/CloseButton.tsx","../../src/component/modal/MultipletAnalysisModal.tsx","../../src/component/hooks/useSpectraPerNucleus.ts","../../src/component/hooks/useActiveSpectrumStyleOptions.ts","../../src/component/1d/ExclusionZoneAnnotation.tsx","../../src/component/1d/utilities/getVerticalShift.ts","../../src/component/1d/ExclusionZonesAnnotations.tsx","../../src/component/hooks/useXScale.ts","../../src/component/hooks/useIntegralPath.ts","../../src/component/panels/extra/preferences/defaultValues.ts","../../src/component/elements/resizer/useDraggable.ts","../../src/component/elements/resizer/DivResizer.tsx","../../src/component/elements/resizer/SVGResizer.tsx","../../src/component/elements/resizer/Resizer.tsx","../../src/component/1d/IntegralResizable.tsx","../../src/component/1d/Integral.tsx","../../src/component/1d/IntegralsSeries.tsx","../../src/component/1d/Line.tsx","../../src/component/1d/LinesSeries.tsx","../../src/component/1d/PeakAnnotation.tsx","../../src/component/1d/PeakAnnotations.tsx","../../src/component/1d/ResurrectedDatabaseRanges.tsx","../../src/component/1d/XAxis.tsx","../../src/data/data1d/Spectrum1D/generateJGraphData.ts","../../src/component/1d/jCouplingGraph/JGraphContext.tsx","../../src/component/elements/linearAxis/LinearVerticalAxis.tsx","../../src/component/1d/jCouplingGraph/JGraphVerticalAxis.tsx","../../src/component/1d/jCouplingGraph/JsCouplingLinks.tsx","../../src/component/1d/jCouplingGraph/JsCoupling.tsx","../../src/component/1d/jCouplingGraph/JsCouplings.tsx","../../src/component/1d/jCouplingGraph/JGraph.tsx","../../src/component/elements/DeleteButton.tsx","../../src/component/1d/multiAnalysis/AnalysisRange.tsx","../../src/component/1d/multiAnalysis/MultiAnalysisRanges.tsx","../../src/component/assignment/utilities/filterForIDsWithAssignment.ts","../../src/data/constants/Multiplets.ts","../../src/component/panels/extra/utilities/MultiplicityUtilities.ts","../../src/component/1d/multiplicityTree/TreeColors.ts","../../src/component/1d/multiplicityTree/LevelNode.tsx","../../src/component/1d/multiplicityTree/StringNode.tsx","../../src/component/1d/multiplicityTree/TreeNodes.tsx","../../src/component/1d/multiplicityTree/buildTreeNode.ts","../../src/component/1d/multiplicityTree/MultiplicityTree.tsx","../../src/component/1d/multiplicityTree/TempMultiplicityTree.tsx","../../src/component/1d/ranges/Range.tsx","../../src/component/1d/ranges/RangeIntegral.tsx","../../src/component/1d/ranges/Ranges.tsx","../../src/component/1d/tool/BaseLineZones.tsx","../../src/component/1d/Chart1D.tsx","../../src/component/1d/FooterBanner.tsx","../../src/component/1d/SpectraTracker.tsx","../../src/component/1d/tool/PeakPointer.tsx","../../src/component/1d/tool/VerticalIndicator.tsx","../../src/component/1d/tool/XLabelPointer.tsx","../../src/component/1d/Viewer1D.tsx","../../src/component/ErrorOverlay.tsx","../../src/component/elements/Button.tsx","../../src/component/elements/ActionButtons.tsx","../../src/component/elements/CheckBox.tsx","../../src/component/elements/formik/FormikCheckBox.tsx","../../src/component/elements/formik/FormikForm.tsx","../../src/component/hooks/useCombinedRefs.ts","../../src/component/elements/Input.tsx","../../src/component/elements/formik/FormikInput.tsx","../../src/component/modal/ModalStyle.ts","../../src/component/modal/SaveAsModal.tsx","../../src/component/utility/Export.ts","../../src/component/utility/util/nmredata/addSource.ts","../../src/component/utility/util/nmredata/getToFix.ts","../../src/component/utility/util/nmredata/get1DSignals.ts","../../src/component/utility/util/nmredata/getCouplingObserved.ts","../../src/component/utility/util/nmredata/get2DSignals.ts","../../src/component/utility/util/nmredata/flat2DSignals.ts","../../src/component/utility/util/nmredata/getLabels.ts","../../src/component/utility/nmriumToNmredata.ts","../../src/component/hooks/useExport.tsx","../../src/component/hooks/useCheckExperimentalFeature.ts","../../src/component/elements/ButtonToolTip.tsx","../../src/component/panels/extra/BasicPanelStyle.ts","../../src/component/elements/ToggleButton.tsx","../../src/component/panels/header/DefaultPanelHeader.tsx","../../src/component/hooks/useCheckToolsVisibility.ts","../../src/component/panels/header/SpectraAutomaticPickingButton.tsx","../../src/component/elements/ContextMenu.tsx","../../src/component/elements/ReactTable/Elements/ReactTableHeader.tsx","../../src/component/elements/ReactTable/Elements/ReactTableRow.tsx","../../src/component/elements/ReactTable/Style.ts","../../src/component/elements/ReactTable/utility/ReactTableContext.ts","../../src/component/elements/ReactTable/utility/useRowSpan.ts","../../src/component/elements/ReactTable/ReactTable.tsx","../../src/component/panels/extra/placeholder/NoTableData.tsx","../../src/component/panels/AutomaticAssignment/AutomaticAssignmentTable.tsx","../../src/component/panels/AutomaticAssignment/useAutoAssignments.ts","../../src/component/panels/AutomaticAssignment/AutomaticAssignment.tsx","../../src/component/elements/ReactTable/ReactTableFlexLayout.tsx","../../src/component/panels/InformationPanel.tsx","../../src/component/elements/Tab/DeleteButton.tsx","../../src/component/elements/Tab/Tab.tsx","../../src/component/elements/Tab/Tabs.tsx","../../src/component/elements/NextPrev.tsx","../../src/component/elements/MoleculeSelection.tsx","../../src/component/modal/changeSum/SelectMolecule.tsx","../../src/component/modal/changeSum/ChangeSumModal.tsx","../../src/component/elements/SaveButton.tsx","../../src/component/panels/header/PreferencesHeader.tsx","../../src/component/elements/EditableColumn.tsx","../../src/component/elements/ReactTable/utility/addCustomColumn.ts","../../src/component/elements/Select.tsx","../../src/component/panels/IntegralsPanel/IntegralTable.tsx","../../src/component/elements/ColorInput.tsx","../../src/component/elements/formik/FormikColorInput.tsx","../../src/component/elements/formik/FormikColumnFormatField.tsx","../../src/component/elements/NumberInput.tsx","../../src/component/elements/formik/FormikNumberInput.tsx","../../src/component/hooks/useNucleus.ts","../../src/component/panels/IntegralsPanel/IntegralsPreferences.tsx","../../src/component/panels/IntegralsPanel/IntegralPanel.tsx","../../src/component/elements/Label.tsx","../../src/component/modal/ExportAsMatrixModal.tsx","../../src/component/modal/MultipleSpectraFiltersModal/EquallySpacedFilter.tsx","../../src/component/modal/MultipleSpectraFiltersModal/FromToFilter.tsx","../../src/component/modal/MultipleSpectraFiltersModal/index.tsx","../../src/component/panels/MatrixGenerationPanel/MatrixGenerationPanel.tsx","../../src/component/modal/MoleculeStructureEditorModal.tsx","../../src/component/elements/MenuButton.tsx","../../src/data/utilities/generateNumbersPowerOfX.ts","../../src/component/elements/IsotopesViewer.tsx","../../src/component/elements/formik/FormikErrorsSummary.tsx","../../src/component/elements/formik/FormikSelect.tsx","../../src/component/modal/PredictSpectraModal.tsx","../../src/component/panels/MoleculesPanel/MoleculePanelHeader.tsx","../../src/component/panels/MoleculesPanel/Utilities.ts","../../src/component/panels/MoleculesPanel/useAtomAssignment.tsx","../../src/component/panels/MoleculesPanel/MoleculePanel.tsx","../../src/component/modal/AlignSpectraModal.tsx","../../src/component/utility/Evaluate.ts","../../src/component/panels/MultipleSpectraAnalysisPanel/MultipleAnalysisCodeEditor.tsx","../../src/component/panels/MultipleSpectraAnalysisPanel/MultipleSpectraAnalysisPreferences.tsx","../../src/component/elements/dropDownButton/DropDownList.tsx","../../src/component/elements/dropDownButton/DropDownButton.tsx","../../src/component/panels/MultipleSpectraAnalysisPanel/ColumnHeader.tsx","../../src/component/panels/MultipleSpectraAnalysisPanel/MultipleSpectraAnalysisTable.tsx","../../src/component/panels/MultipleSpectraAnalysisPanel/MultipleSpectraAnalysisPanel.tsx","../../src/component/panels/PeaksPanel/PeaksPreferences.tsx","../../src/component/panels/PeaksPanel/PeaksTable.tsx","../../src/component/panels/PeaksPanel/PeaksPanel.tsx","../../src/component/modal/CopyClipboardModal.tsx","../../src/component/panels/RangesPanel/RangesHeader.tsx","../../src/component/panels/RangesPanel/RangesPreferences.tsx","../../src/component/hooks/useTableSortBy.tsx","../../src/component/panels/extra/preferences/ColumnsHelper.ts","../../src/component/panels/RangesPanel/TableColumns/AbsoluteColumn.tsx","../../src/component/elements/formik/FormikOnChange.tsx","../../src/component/modal/editRange/forms/components/AddSignalFormTab.tsx","../../src/component/modal/editRange/forms/components/DeltaInput.tsx","../../src/component/modal/editRange/forms/components/CouplingsTable.tsx","../../src/component/modal/editRange/forms/components/SignalFormTab.tsx","../../src/component/modal/editRange/forms/components/SignalsForm.tsx","../../src/component/modal/editRange/forms/validation/EditRangeValidation.ts","../../src/component/modal/editRange/EditRangeModal.tsx","../../src/component/panels/RangesPanel/hooks/useEditRangeModal.tsx","../../src/component/panels/RangesPanel/TableColumns/ActionsColumn.tsx","../../src/component/panels/RangesPanel/TableColumns/CouplingColumn.tsx","../../src/component/panels/RangesPanel/TableColumns/RangeAssignmentsColumn.tsx","../../src/component/panels/RangesPanel/TableColumns/RangeColumn.tsx","../../src/component/panels/RangesPanel/TableColumns/RelativeColumn.tsx","../../src/component/panels/RangesPanel/TableColumns/SignalAssignmentsColumn.tsx","../../src/component/panels/RangesPanel/TableColumns/format.ts","../../src/component/panels/RangesPanel/TableColumns/SignalDeltaColumn.tsx","../../src/component/panels/RangesPanel/RangesTableRow.tsx","../../src/component/panels/RangesPanel/hooks/useMapRanges.ts","../../src/component/panels/RangesPanel/RangesTable.tsx","../../src/component/panels/RangesPanel/RangesPanel.tsx","../../src/component/panels/SpectrumsPanel/SpectraPanelHeader.tsx","../../src/component/panels/SpectrumsPanel/base/ColorIndicator.tsx","../../src/component/panels/SpectrumsPanel/base/ShowHideMarkersButton.tsx","../../src/component/panels/SpectrumsPanel/base/ShowHideSpectrumButton.tsx","../../src/component/panels/SpectrumsPanel/SpectrumListItem.tsx","../../src/component/elements/formik/FormikColorPicker.tsx","../../src/component/panels/SpectrumsPanel/base/setting/PlotChart.tsx","../../src/component/panels/SpectrumsPanel/base/setting/processSnapPlot.ts","../../src/component/panels/SpectrumsPanel/base/setting/Spectrum1DHistogram.tsx","../../src/component/panels/SpectrumsPanel/base/setting/Spectrum1DSetting.tsx","../../src/component/elements/formik/FormikSlider.tsx","../../src/component/panels/SpectrumsPanel/base/setting/Spectrum2DHistogram.tsx","../../src/component/panels/SpectrumsPanel/base/setting/Spectrum2DSetting.tsx","../../src/component/panels/SpectrumsPanel/base/setting/SpectrumSetting.tsx","../../src/component/panels/SpectrumsPanel/SpectrumsTabs.tsx","../../src/component/panels/SpectrumsPanel/SpectrumListPanel.tsx","../../src/data/constants/DefaultPathLengths.ts","../../src/component/modal/editZone/validation/isDefaultPathLength.ts","../../src/component/panels/SummaryPanel/utilities/Utilities.ts","../../src/component/panels/SummaryPanel/utilities/IsInView.ts","../../src/component/panels/SummaryPanel/CorrelationTable/editLink/Confirmation.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/editLink/EditPathLength.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/editLink/MoveLink.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/editLink/EditLinkModal.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/AdditionalColumnHeader.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/AdditionalColumnField.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/CorrelationTableRow.tsx","../../src/component/panels/SummaryPanel/CorrelationTable/CorrelationTable.tsx","../../src/component/panels/SummaryPanel/Overview.tsx","../../src/component/elements/MolecularFormulaInput.tsx","../../src/component/panels/SummaryPanel/SetMolecularFormulaModal.tsx","../../src/component/panels/SummaryPanel/SetShiftTolerancesModal.tsx","../../src/component/panels/SummaryPanel/SummaryPanel.tsx","../../src/component/panels/ZonesPanel/ZonesPreferences.tsx","../../src/component/modal/editZone/EditPathLengthFormik.tsx","../../src/component/modal/editZone/SignalFormTab.tsx","../../src/component/modal/editZone/SignalsForm.tsx","../../src/component/modal/editZone/validation/EditZoneValidation.ts","../../src/component/modal/editZone/EditZoneModal.tsx","../../src/component/panels/ZonesPanel/TableColumns/ActionsColumn.tsx","../../src/component/panels/ZonesPanel/TableColumns/SignalAssignmentsColumn.tsx","../../src/component/panels/ZonesPanel/TableColumns/SignalAssignmentsColumns.tsx","../../src/component/panels/ZonesPanel/TableColumns/SignalDeltaColumn.tsx","../../src/component/panels/ZonesPanel/TableColumns/ZoneAssignmentsColumn.tsx","../../src/component/panels/ZonesPanel/TableColumns/ZoneAssignmentsColumns.tsx","../../src/component/panels/ZonesPanel/ZonesTableRow.tsx","../../src/component/panels/ZonesPanel/ZonesTable.tsx","../../src/component/panels/ZonesPanel/ZonesPanel.tsx","../../src/data/data1d/database.ts","../../src/component/panels/databasePanel/DatabasePreferences.tsx","../../src/component/panels/databasePanel/DatabaseTable.tsx","../../src/component/panels/databasePanel/useDatabases.ts","../../src/component/panels/databasePanel/DatabasePanel.tsx","../../src/component/elements/Table/Table.tsx","../../src/component/elements/Table/TableBody.tsx","../../src/component/elements/Table/TableCell.tsx","../../src/component/elements/Table/TableHead.tsx","../../src/component/elements/Table/TableRow.tsx","../../src/component/panels/filtersPanel/FiltersTable.tsx","../../src/component/panels/filtersPanel/FilterPanel.tsx","../../src/component/panels/predictionPanel/PredictionOptions.tsx","../../src/component/panels/predictionPanel/PredictionPanel.tsx","../../src/component/panels/Panels.tsx","../../src/component/hooks/useToolsFunctions.ts","../../src/component/EventsTrackers/KeysListenerTracker.tsx","../../src/component/SplitPaneWrapper.tsx","../../src/component/assignment/actions/initAssignment.ts","../../src/component/assignment/actions/removeAssignment.ts","../../src/component/assignment/actions/setActiveAssignment.ts","../../src/component/assignment/actions/toggleAssignment.ts","../../src/component/assignment/AssignmentsReducer.ts","../../src/component/assignment/index.tsx","../../src/constants.ts","../../src/versionInfo.ts","../../src/component/elements/Logo.tsx","../../src/component/modal/AboutUsModal.tsx","../../src/component/modal/setting/ControllersTabContent.tsx","../../src/component/modal/setting/DatabasesTabContent.tsx","../../src/component/modal/setting/DisplayTabContent.tsx","../../src/component/modal/setting/FormattingTabContent.tsx","../../src/component/modal/setting/WorkspaceItem.tsx","../../src/component/modal/setting/settingsValidation.ts","../../src/component/modal/setting/GeneralSettings.tsx","../../src/component/header/AutoPeakPickingOptionPanel.tsx","../../src/component/header/BaseLineCorrectionPanel.tsx","../../src/component/elements/InputRange.tsx","../../src/component/header/ManualPhaseCorrectionPanel.tsx","../../src/component/header/RangesPickingOptionPanel.tsx","../../src/component/header/ZeroFillingOptionsPanel.tsx","../../src/component/header/Zones2DOptionPanel.tsx","../../src/component/header/Header.tsx","../../src/component/utility/FileUtility.ts","../../src/component/loader/DropZone.tsx","../../src/component/reducer/IgnoreActions.ts","../../src/component/elements/ToolbarMenu.tsx","../../src/component/hooks/useDatumWithSpectraStatistics.ts","../../src/component/elements/formik/FormikTextarea.tsx","../../src/component/modal/ImportPublicationStringModal.tsx","../../src/component/modal/LoadJCAMPModal.tsx","../../src/component/toolbar/BasicToolBar.tsx","../../src/component/elements/toggle/ToggleButton.tsx","../../src/component/elements/toggle/ToggleButtonGroup.tsx","../../src/component/toolbar/FunctionToolBar.tsx","../../src/component/toolbar/ToolBar.tsx","../../src/component/NMRium.tsx","../../src/demo/views/Test.tsx","../../src/demo/test/TestRoutes.tsx","../../src/index.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import { SubMenu, MenuItem } from 'rc-menu';\nimport { createElement, cloneElement } from 'react';\n\nfunction buildMenu(array: Array<any> = []) {\n  let menu: Array<any> = [];\n  for (const item of array) {\n    if (item.children && Array.isArray(item.children)) {\n      menu.push(getMenu(item.groupName, [item], []));\n    } else {\n      menu.push(\n        createElement(MenuItem, { key: item.title, ...item }, item.title),\n      );\n    }\n  }\n  return menu;\n}\n\nfunction getMenu(\n  key,\n  array: Array<any> = [],\n  nodes: Array<any> = [],\n  parentIndex = 0,\n) {\n  let _nodes = nodes;\n  let children: Array<any> = [];\n\n  if (parentIndex !== -1 && _nodes[parentIndex]) {\n    _nodes[parentIndex] = cloneElement(_nodes[parentIndex], {}, children);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-for-in-array\n  for (const index in array) {\n    if (array[index].children && Array.isArray(array[index].children)) {\n      const node = createElement(SubMenu, {\n        key: index + key,\n        title: array[index].groupName,\n      });\n      _nodes.push(node);\n      return getMenu(index + key, array[index].children, _nodes, 0);\n    } else {\n      children.push(\n        createElement(\n          MenuItem,\n          { key: index + key, ...array[index] },\n          array[index].title,\n        ),\n      );\n    }\n  }\n  return _nodes;\n}\n\nfunction mapTreeToFlatArray(array: Array<any> = []) {\n  let routes: Array<any> = [];\n  for (const item of array) {\n    if (item.children && Array.isArray(item.children)) {\n      routes = routes.concat(getFlatArray([item], []));\n    } else {\n      routes.push(item);\n    }\n  }\n  return routes;\n}\n\nfunction getFlatArray(inputArray: Array<any> = [], children: Array<any> = []) {\n  let _children = children;\n\n  for (const item of inputArray) {\n    if (item.children && Array.isArray(item.children)) {\n      return getFlatArray(item.children, _children);\n    } else {\n      children.push(item);\n    }\n  }\n  return _children;\n}\n\nfunction getKey(filePath = '') {\n  const match = new RegExp(/^(?<path>.*)\\/(?<file>[^/]*)$/g).exec(filePath);\n  let parentFolderName = '';\n  if (match) {\n    const parentPath = match[1].split('/');\n    parentFolderName =\n      parentPath.length > 2\n        ? parentPath[parentPath.length - 2] + parentPath[parentPath.length - 1]\n        : parentPath[parentPath.length - 1];\n  }\n  return parentFolderName + filePath.replace(/\\.|\\s|\\//g, '');\n}\n\nexport { buildMenu, getKey, mapTreeToFlatArray };\n","/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport Menu from 'rc-menu';\nimport { memo, useMemo } from 'react';\nimport 'rc-menu/assets/index.css';\nimport { FaBars } from 'react-icons/fa';\nimport { withRouter } from 'react-router-dom';\n\nimport { buildMenu, getKey } from './utility/menu';\n\nconst sidebarCss = css`\n  background: #2ca8ff;\n  position: fixed;\n  top: 0;\n  height: 100%;\n  bottom: 0;\n  left: 0;\n  z-index: 1031;\n`;\n\nconst sidebarOpenCss = css`\n  width: 260px;\n`;\n\nconst sidebarClosedCss = css`\n  width: 3%;\n`;\n\nconst menuBtCss = css`\n  margin-left: 4px;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  margin-right: 4px;\n  z-index: 7;\n  font-size: 18px;\n  background-color: transparent;\n  border: none !important;\n  height: 30px;\n  width: 30px;\n  padding: 1px 6px;\n\n  & svg {\n    fill: white;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:active {\n    background-color: rgba(0, 0, 0, 0.5);\n    border-radius: 50%;\n  }\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.2);\n    border-radius: 50%;\n  }\n`;\n\nconst logoCss = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 4;\n  border-bottom: 1px solid #eee;\n`;\n\nconst simpleTextCss = css`\n  text-transform: uppercase;\n  padding: 0.5rem 0;\n  display: block;\n  white-space: nowrap;\n  font-size: 1em;\n  color: #fff;\n  text-decoration: none;\n  font-weight: 400;\n  line-height: 30px;\n  overflow: hidden;\n`;\n\nconst logoNormalCss = css`\n  display: block;\n  opacity: 1;\n  transform: translateZ(0);\n`;\n\nconst sidebarWrapperCss = css`\n  position: relative;\n  height: calc(100vh - 75px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  width: 260px;\n  z-index: 4;\n  padding-bottom: 100px;\n`;\n\nfunction Sidebar(props) {\n  const routes = useMemo(() => {\n    return buildMenu(props.routes);\n  }, [props.routes]);\n\n  const subDisplay = props.menuIsClosed ? 'none' : 'block';\n\n  return (\n    <div\n      css={css(\n        sidebarCss,\n        props.menuIsClosed ? sidebarClosedCss : sidebarOpenCss,\n      )}\n    >\n      <div css={logoCss}>\n        <div style={{ display: subDisplay, padding: '0.5rem 0.7rem' }}>\n          <a css={css(simpleTextCss, logoNormalCss)}>NMRium</a>\n        </div>\n        <button type=\"button\" css={menuBtCss} onClick={props.onMenuToggle}>\n          <FaBars />\n        </button>\n      </div>\n      <div css={sidebarWrapperCss} style={{ display: subDisplay }}>\n        <Menu\n          onClick={(e) => {\n            // console.log((e.item.props.view || '') + getKey(e.item.props.file));\n            props.history.push(\n              `/SamplesDashboard/${Math.random()\n                .toString(36)\n                .replace('0.', '')}/${\n                // @ts-expect-error This will be fixed by updating use of rc-menu\n                (e.item.props.view || 'View') + getKey(e.item.props.file)\n              }`,\n            );\n          }}\n          mode=\"inline\"\n        >\n          {routes}\n        </Menu>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(memo(Sidebar));\n","const scriptRel = 'modulepreload';const seen = {};const base = './';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', () => rej(new Error(`Unable to preload CSS for ${dep}`)));\n            });\n        }\n    })).then(() => baseModule());\n}","import { lazy, memo } from 'react';\n\nexport const possibleViews = {\n  Exam: memo(lazy(() => import('./Exam'))),\n  Exercise: memo(lazy(() => import('./Exercise'))),\n  SingleView: memo(lazy(() => import('./SingleView'))),\n  Test: memo(lazy(() => import('./Test'))),\n  View: memo(lazy(() => import('./View'))),\n  TwoInstances: memo(lazy(() => import('./TwoInstances'))),\n  Teaching: memo(lazy(() => import('./Teaching'))),\n  Prediction: memo(lazy(() => import('./Prediction'))),\n};\n","/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport { Suspense, useMemo, useState, useCallback } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Sidebar from '../Sidebar';\nimport { mapTreeToFlatArray, getKey } from '../utility/menu';\nimport { possibleViews } from '../views';\n\nconst mainPanelCss = css`\n  position: relative;\n  float: right;\n  height: 100%;\n  background-color: #ebecf1;\n`;\n\nconst mainPanelOpenCss = css`\n  width: calc(100% - 260px);\n`;\n\nconst mainPanelClosedCss = css`\n  width: 98%;\n  margin-left: 20px !important;\n`;\n\ninterface DashboardProps {\n  routes: any[];\n  baseURL: string;\n}\n\nexport function Dashboard(props: DashboardProps) {\n  const { routes = [], baseURL } = props;\n  const routesList = useMemo(() => mapTreeToFlatArray(routes), [routes]);\n  const [menuIsClosed, setMenuIsClosed] = useState(false);\n  const toggleMenu = useCallback(\n    () => setMenuIsClosed(!menuIsClosed),\n    [menuIsClosed],\n  );\n\n  return (\n    <div\n      style={{\n        position: 'relative',\n        top: 0,\n        height: '100vh',\n      }}\n    >\n      <Sidebar\n        {...props}\n        routes={routes}\n        menuIsClosed={menuIsClosed}\n        onMenuToggle={toggleMenu}\n      />\n      <div\n        css={css(\n          mainPanelCss,\n          menuIsClosed ? mainPanelClosedCss : mainPanelOpenCss,\n        )}\n      >\n        {/* <StrictMode> */}\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            {routesList.map((prop) => {\n              return (\n                <Route\n                  path={`/SamplesDashboard/:id/${\n                    (prop.view || 'View') + getKey(prop.file)\n                  }`}\n                  render={(props) => (\n                    <RenderView {...props} prop={prop} baseURL={baseURL} />\n                  )}\n                  key={getKey(prop.file)}\n                />\n              );\n            })}\n\n            {routesList.length > 0 && (\n              <Route\n                path=\"/\"\n                render={() => {\n                  const routeProp = routesList[0];\n                  const viewName = routeProp.view ? routeProp.view : 'View';\n                  const RenderedView = possibleViews[viewName];\n                  return <RenderedView {...routeProp[0]} />;\n                }}\n                key={getKey(routesList[0].file)}\n              />\n            )}\n          </Switch>\n        </Suspense>\n        {/* </StrictMode> */}\n      </div>\n    </div>\n  );\n}\n\nfunction RenderView(props) {\n  const {\n    match: {\n      params: { id },\n    },\n    prop,\n    baseURL,\n  } = props;\n  const viewName = prop.view ? prop.view : 'View';\n  const RenderedView = possibleViews[viewName];\n  return (\n    <RenderedView key={id} {...prop} id={getKey(prop.file)} baseURL={baseURL} />\n  );\n}\n\nexport default Dashboard;\n","import { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { getKey } from '../utility/menu';\nimport { possibleViews } from '../views';\n\ninterface SingleDisplayerLayoutProps {\n  view: any;\n  patrh: any;\n  path: any;\n}\n\nexport default function SingleDisplayerLayout(\n  props: SingleDisplayerLayoutProps,\n) {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        top: 0,\n        height: '100vh',\n      }}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          display: 'block',\n          width: '99%',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          height: '100%',\n          backgroundColor: 'ebecf1',\n        }}\n      >\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route\n              path=\"/\"\n              render={(routeProps: any) => {\n                const {\n                  match: {\n                    params: { id },\n                  },\n                } = routeProps;\n                const viewName = props.view ? props.view : 'SingleView';\n\n                const RenderedView = possibleViews[viewName];\n\n                return (\n                  <RenderedView key={id} {...props} id={getKey(props.patrh)} />\n                );\n              }}\n              key={getKey(props.path)}\n            />\n          </Switch>\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState, useCallback, CSSProperties } from 'react';\n\nimport routes from '../samples.json';\n\nimport AdminLayout from './Admin';\nimport SingleDisplayerLayout from './SingleDisplayerLayout';\n\nconst styles: Record<\n  | 'bodyContainer'\n  | 'container'\n  | 'normal'\n  | 'error'\n  | 'errorHeader'\n  | 'normalHeader'\n  | 'loadButton',\n  CSSProperties\n> = {\n  bodyContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: '#e3e3e3',\n  },\n  container: {\n    width: '30%',\n    height: '40%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '10px',\n    fontSize: '20px',\n    textAlign: 'center',\n  },\n  normal: {\n    backgroundColor: 'white',\n    color: 'black',\n  },\n  error: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  errorHeader: {\n    fontSize: '100px',\n  },\n  normalHeader: {\n    fontSize: '24px',\n  },\n  loadButton: {\n    fontSize: '12px',\n    padding: '12px 40px',\n    borderRadius: '10px',\n    border: '1px solid #c70000',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n  },\n};\n\nasync function loadData(url) {\n  const response = await fetch(url);\n  try {\n    checkStatus(response);\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    return null;\n  }\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nconst Main = (props) => {\n  const [data, setRoutes] = useState<{\n    isLoaded: boolean;\n    status: number;\n    routes?: Array<any>;\n    baseURL?: string;\n    path?: string;\n  }>({\n    isLoaded: false,\n    status: 200,\n    routes: [],\n  });\n\n  const [dashBoardType, setDashBoardType] = useState('');\n\n  const loadHandler = useCallback(() => {\n    setRoutes({ isLoaded: true, status: 200, routes: routes });\n  }, []);\n\n  const getFileExtension = (url = '') => {\n    return url.substring(url.lastIndexOf('.') + 1);\n  };\n\n  const href = window.location.href;\n  useEffect(() => {\n    const qs = new URL(href).searchParams;\n    if (qs.has('sampleURL')) {\n      const sampleURL = qs.get('sampleURL');\n      if (!sampleURL) return;\n\n      const extention = getFileExtension(sampleURL).toLowerCase();\n      switch (extention) {\n        case 'json': {\n          setDashBoardType('multi');\n          void loadData(sampleURL).then((remoteRoutes) => {\n            if (remoteRoutes) {\n              const baseURL = sampleURL.replace(\n                /^(?<url>.*[\\\\/])?(?<filename>.*?\\.[^.]*?|)$/g,\n                '$1',\n              );\n\n              const _remoteRoutes = JSON.parse(\n                JSON.stringify(remoteRoutes).replace(/\\.\\/+?/g, baseURL),\n              );\n              setRoutes({\n                isLoaded: true,\n                status: 200,\n                routes: _remoteRoutes,\n                baseURL,\n              });\n            } else {\n              setRoutes({ isLoaded: false, status: 404, routes: [] });\n            }\n          });\n          break;\n        }\n        case 'dx':\n        case 'jdx': {\n          setDashBoardType('single');\n          setRoutes({\n            isLoaded: true,\n            status: 200,\n            path: sampleURL,\n          });\n\n          break;\n        }\n\n        default:\n          break;\n      }\n    } else {\n      setDashBoardType('multi');\n      setRoutes({ isLoaded: true, status: 200, routes: routes, baseURL: './' });\n    }\n  }, [href]);\n\n  return !data.isLoaded ? (\n    <div style={styles.bodyContainer}>\n      <div\n        style={{\n          ...styles.container,\n          ...(data.status === 200 ? styles.normal : styles.error),\n        }}\n      >\n        {data.status === 200 ? (\n          <div>\n            <p style={styles.normalHeader}>Please wait</p>\n            <p>We will redirect you in a minute</p>\n          </div>\n        ) : (\n          <div>\n            <p style={styles.errorHeader}>404</p>\n            <p>Resource not found.</p>\n            <button\n              style={styles.loadButton}\n              type=\"button\"\n              onClick={loadHandler}\n            >\n              Load local samples\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  ) : dashBoardType && dashBoardType === 'single' ? (\n    <SingleDisplayerLayout {...props} path={data.path} />\n  ) : (\n    <AdminLayout {...props} routes={data.routes} baseURL={data.baseURL} />\n  );\n};\n\nexport default Main;\n","import { KeyboardEvent, MouseEvent } from 'react';\n\nexport default function checkModifierKeyActivated(\n  event: KeyboardEvent | MouseEvent,\n): boolean {\n  const modifiersKeys = [\n    'Alt',\n    'AltGraph',\n    'CapsLock',\n    'Control',\n    'Meta',\n    'NumLocK',\n    'ScrollLock',\n    'Shift',\n    'OS',\n  ];\n  for (const key of modifiersKeys) {\n    if (event.getModifierState(key)) {\n      return true;\n    }\n  }\n  return false;\n}\n","import { xGetFromToIndex } from 'ml-spectra-processing';\nimport { analyseMultiplet } from 'multiplet-analysis';\n\nexport const MAX_LENGTH = 2048;\n\nexport default function detectSignal(\n  x: Float64Array,\n  re: Float64Array,\n  from,\n  to,\n  frequency,\n) {\n  const { fromIndex, toIndex } = xGetFromToIndex(x, {\n    from: from,\n    to: to,\n  });\n\n  if (toIndex - fromIndex <= MAX_LENGTH) {\n    const data = {\n      x: x.subarray(fromIndex, toIndex),\n      y: re.subarray(fromIndex, toIndex),\n    };\n\n    const result = analyseMultiplet(data, {\n      frequency: frequency,\n      takeBestPartMultiplet: true,\n      symmetrizeEachStep: true,\n    });\n    if (result && result.chemShift === undefined) return;\n    return {\n      multiplicity: result.js.map((j) => j.multiplicity).join(''),\n      kind: 'signal',\n      delta: result.chemShift,\n      js: result.js,\n    };\n  } else {\n    throw new Error(`length of signal should not exceed ${MAX_LENGTH} points`);\n  }\n}\n","import lodashDebounce from 'lodash/debounce';\nimport lodashMap from 'lodash/map';\nimport {\n  createContext,\n  CSSProperties,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nconst initialState = {\n  step: 'initial',\n  brush: {\n    start: null,\n    end: null,\n  },\n  startX: 0,\n  endX: 0,\n  startY: 0,\n  endY: 0,\n};\n\nexport const BrushContext = createContext(initialState);\n\ninterface BrushTrackerProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  onBrush?: (element: any) => void;\n  onZoom?: (element: any) => void;\n  onDoubleClick?: (element: any) => void;\n  onClick?: (element: any) => void;\n  noPropagation?: boolean;\n}\n\nexport function BrushTracker({\n  children,\n  className,\n  style,\n  onBrush = () => null,\n  onZoom = () => null,\n  onDoubleClick = () => null,\n  onClick = () => null,\n  noPropagation,\n}: BrushTrackerProps) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [mouseDownTime, setMouseDownTime] = useState<number>(0);\n  const debounceClickEventsRef = useRef<Array<any>>([]);\n\n  const mouseDownHandler = useCallback(\n    (event) => {\n      if (event.button === 0) {\n        if (noPropagation) {\n          event.stopPropagation();\n        }\n        dispatch({\n          type: 'DOWN',\n          shiftKey: event.shiftKey,\n          altKey: event.altKey,\n          screenX: event.screenX,\n          screenY: event.screenY,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          boundingRect: event.currentTarget.getBoundingClientRect(),\n        });\n\n        setMouseDownTime(event.timeStamp);\n      }\n      return false;\n    },\n    [noPropagation],\n  );\n\n  const clickHandler = useCallback(\n    (e) => {\n      e.persist();\n      const timeStamp = e.timeStamp;\n      const boundingRect = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - boundingRect.x;\n      const y = e.clientY - boundingRect.y;\n\n      const callback = lodashDebounce(() => {\n        if (\n          timeStamp - mouseDownTime <= 150 &&\n          debounceClickEventsRef.current.length === 1\n        ) {\n          onClick({ ...e, x, y });\n        }\n        debounceClickEventsRef.current = [];\n      }, 200);\n\n      debounceClickEventsRef.current.push(callback);\n\n      callback();\n\n      if (debounceClickEventsRef.current.length > 1) {\n        lodashMap(debounceClickEventsRef.current, (debounce) =>\n          debounce.cancel(),\n        );\n        debounceClickEventsRef.current = [];\n        onDoubleClick({ ...e, x, y });\n      }\n    },\n    [mouseDownTime, onClick, onDoubleClick],\n  );\n\n  const handleMouseWheel = useCallback(\n    (event) => {\n      const boundingRect = event.currentTarget.getBoundingClientRect();\n      const x = event.clientX - boundingRect.x;\n      const y = event.clientY - boundingRect.y;\n\n      const { deltaY, deltaX, shiftKey, deltaMode } = event;\n      onZoom({ deltaY: deltaY || deltaX, shiftKey, deltaMode, x, y });\n    },\n    [onZoom],\n  );\n\n  useEffect(() => {\n    const { step, startX, endX, startY, endY } = state;\n\n    if (step === 'end' && Math.hypot(endX - startX, endY - startY) > 5) {\n      onBrush(state);\n      dispatch({\n        type: 'DONE',\n      });\n    }\n  }, [onBrush, state]);\n\n  const moveCallback = useCallback((event) => {\n    dispatch({\n      type: 'MOVE',\n      screenX: event.screenX,\n      screenY: event.screenY,\n      clientX: event.clientX,\n      clientY: event.clientY,\n    });\n  }, []);\n\n  const upCallback = useCallback((event) => {\n    dispatch({\n      type: 'UP',\n      clientX: event.clientX,\n      clientY: event.clientY,\n    });\n    return false;\n  }, []);\n\n  return (\n    <BrushContext.Provider value={state}>\n      <div\n        className={className}\n        style={style}\n        onMouseDown={mouseDownHandler}\n        onMouseUp={upCallback}\n        onMouseMove={moveCallback}\n        onClick={clickHandler}\n        onWheel={handleMouseWheel}\n      >\n        {children}\n      </div>\n    </BrushContext.Provider>\n  );\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'UP':\n      if (state.step === 'brushing' || state.step === 'start') {\n        const { clientX, clientY } = action;\n\n        return {\n          ...state,\n          endX: clientX - state.boundingRect.x,\n          endY: clientY - state.boundingRect.y,\n\n          step: state.step === 'start' ? 'initial' : 'end',\n        };\n      }\n      return state;\n    case 'DOWN':\n      if (state.step === 'initial' || state.step === 'end') {\n        const {\n          screenX,\n          screenY,\n          clientX,\n          clientY,\n          boundingRect,\n          shiftKey,\n          altKey,\n        } = action;\n        const x = clientX - boundingRect.x;\n        const y = clientY - boundingRect.y;\n\n        return {\n          ...state,\n          shiftKey,\n          altKey,\n          startX: x,\n          startY: y,\n          startScreenX: screenX,\n          startScreenY: screenY,\n          startClientX: clientX,\n          startClientY: clientY,\n          boundingRect,\n          step: 'start',\n        };\n      }\n      return state;\n    case 'MOVE':\n      if (state.step === 'start' || state.step === 'brushing') {\n        const { clientX, clientY } = action;\n\n        return {\n          ...state,\n          step: 'brushing',\n          endX: clientX - state.boundingRect.x,\n          endY: clientY - state.boundingRect.y,\n        };\n      }\n      return state;\n    case 'DONE':\n      if (state.step === 'end') {\n        return {\n          ...state,\n          step: 'initial',\n        };\n      }\n      break;\n    default:\n      return state;\n  }\n}\n","import {\n  CSSProperties,\n  createContext,\n  useCallback,\n  useState,\n  useContext,\n  ReactNode,\n} from 'react';\n\nexport const MouseContext = createContext<any>({});\nconst MouseaProvider = MouseContext.Provider;\n\nexport function useMouseTracker() {\n  return useContext(MouseContext);\n}\n\ninterface MouseTrackerProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  noPropagation?: boolean;\n}\n\nexport function MouseTracker({\n  children,\n  className,\n  style,\n  noPropagation,\n}: MouseTrackerProps) {\n  const [mouseTrackerState, setMouseTrackerState] = useState<{\n    x: number;\n    y: number;\n  } | null>(null);\n  const mouseMoveHandler = useCallback(\n    (e) => {\n      const boundingRect = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - boundingRect.x;\n      const y = e.clientY - boundingRect.y;\n      setMouseTrackerState({ x, y });\n      if (noPropagation) {\n        e.stopPropagation();\n      }\n    },\n    [noPropagation],\n  );\n\n  const mouseLeaveHandler = useCallback(\n    (e) => {\n      setMouseTrackerState(null);\n      if (noPropagation) {\n        e.stopPropagation();\n      }\n    },\n    [noPropagation],\n  );\n\n  return (\n    <MouseaProvider value={mouseTrackerState}>\n      <div\n        className={className}\n        style={style}\n        onMouseMove={mouseMoveHandler}\n        onMouseLeave={mouseLeaveHandler}\n      >\n        {children}\n      </div>\n    </MouseaProvider>\n  );\n}\n","export const SignalKinds: { key: string; label: string; value: string }[] = [\n  {\n    key: 'signal',\n    label: 'Signal',\n    value: 'signal',\n  },\n  {\n    key: 'reference',\n    label: 'Reference',\n    value: 'reference',\n  },\n  {\n    key: 'solvent',\n    label: 'Solvent',\n    value: 'solvent',\n  },\n  {\n    key: 'impurity',\n    label: 'Impurity',\n    value: 'impurity',\n  },\n  {\n    key: 'standard',\n    label: 'Standard',\n    value: 'standard',\n  },\n  {\n    key: 'p1',\n    label: 'P1',\n    value: 'p1',\n  },\n  {\n    key: 'p2',\n    label: 'P2',\n    value: 'p2',\n  },\n  {\n    key: 'p3',\n    label: 'P3',\n    value: 'p3',\n  },\n];\n\nexport const SignalKindsToInclude = ['signal'];\nexport const DatumKind = { signal: 'signal', mixed: 'mixed' };\n","import { reimAbsolute } from 'ml-spectra-processing';\n\nexport const id = 'absolute';\nexport const name = 'Absolute';\n\n/**\n *\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('absolute not applicable on this data');\n  }\n\n  datum1D.data.re = reimAbsolute(datum1D.data);\n  datum1D.data.im = new Float64Array(0);\n  datum1D.info = { ...datum1D.info, isComplex: false };\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: false,\n    reduce: null,\n  };\n}\n","import { reimAutoPhaseCorrection } from 'ml-spectra-processing';\n\nexport const id = 'autoPhaseCorrection';\nexport const name = 'Automatic phase correction';\n\n/**\n *\n * @param {Datum1d} datum1d\n * @param {Object} [options={}]\n * @param {number} [options.ph0=0]\n * @param {number} [options.ph1=0]\n */\n\nconst defaultOptions = {\n  minRegSize: 5,\n  maxDistanceToJoin: 128,\n  magnitudeMode: true,\n  factorNoise: 5,\n};\n\nexport function apply(datum1D, options = {}) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('phaseCorrection not applicable on this data');\n  }\n  return reimAutoPhaseCorrection(datum1D.data, {\n    ...defaultOptions,\n    ...options,\n  });\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce(previousValue, newValue) {\n  let reduced = Object.assign({}, previousValue);\n  for (const k in reduced) {\n    reduced[k] += newValue[k];\n  }\n  return {\n    once: true,\n    reduce: reduced,\n  };\n}\n","import airPLS from 'ml-airpls';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport baselineRegression from 'ml-baseline-correction-regression';\n\nexport const id = 'baselineCorrection';\nexport const name = 'Baseline correction';\n\n/**\n *\n * @param {Datum1d} datum1d\n */\n\nexport const baselineAlgorithms = {\n  airpls: 'airPLS',\n  polynomial: 'Polynomial',\n};\n\nexport function apply(datum1D, options: any = {}) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('baselineCorrection not applicable on this data');\n  }\n  const { algorithm, zones = [] } = options;\n  let { x, re } = datum1D.data;\n\n  let corrected;\n  switch (algorithm) {\n    case 'airpls':\n      corrected = airPLS(x, re, options).corrected;\n      break;\n    case 'polynomial':\n      {\n        const baselineOptions = {\n          regressionOptions: options.degree,\n        };\n        let reduced = equallySpaced(\n          { x, y: re },\n          { numberOfPoints: 4096, zones },\n        );\n        let result = baselineRegression(reduced.x, reduced.y, baselineOptions);\n        let { regression } = result;\n        corrected = new Float64Array(x.length);\n        for (let i = 0; i < re.length; i++) {\n          corrected[i] = re[i] - regression.predict(x[i]);\n        }\n      }\n\n      break;\n    default:\n      throw new Error(`baselineCorrection: algorithm unknown: ${algorithm}`);\n  }\n\n  Object.assign(datum1D.data, { re: corrected });\n}\n\nexport function isApplicable(datum1D) {\n  if (!datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: false,\n    reduce: null,\n  };\n}\n","import { mean } from 'ml-stat/array';\n\nexport const id = 'centerMean';\nexport const name = 'Center Mean';\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('Center Mean is not applicable on this data');\n  }\n\n  const re = datum1D.data.re.slice(0);\n  const im = datum1D.data.im?.slice(0);\n\n  const reMean = mean(re);\n  const imMean = mean(im || []);\n\n  for (let i = 0; i < re.length; i++) {\n    re[i] -= reMean;\n    if (im) {\n      im[i] -= imMean;\n    }\n  }\n\n  datum1D.data.re = re;\n\n  if (im) {\n    datum1D.data.im = im;\n  }\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: false,\n    reduce: null,\n  };\n}\n","export const id = 'digitalFilter';\nexport const name = 'Digital Filter';\n\n/**\n * Move points from the beginning to the end of FID and performs a first order phase correction\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D, options: any = {}) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('Digital Filter is not applicable on this data');\n  }\n\n  let { digitalFilterValue = 0 } = options;\n  let re = new Float64Array(datum1D.data.re);\n  let im = new Float64Array(datum1D.data.im);\n\n  let pointsToShift = Math.floor(digitalFilterValue);\n\n  const skip = 0;\n  pointsToShift += 0;\n\n  const newRe = new Float64Array(re.length);\n  const newIm = new Float64Array(im.length);\n  newRe.set(re.slice(pointsToShift));\n  newRe.set(re.slice(skip, pointsToShift), re.length - pointsToShift);\n  newIm.set(im.slice(pointsToShift));\n  newIm.set(im.slice(skip, pointsToShift), im.length - pointsToShift);\n\n  datum1D.data.re = newRe;\n  datum1D.data.im = newIm;\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: true,\n    reduce: undefined,\n  };\n}\n","import equallySpaced from 'ml-array-xy-equally-spaced';\n\nexport const id = 'equallySpaced';\nexport const name = 'Equally Spaced';\n\n/**\n * Equally Spaced\n * **\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param {Datum1d} datum1d\n * @param {Object} options.from\n * @param {number} options.to\n * @param {number} options.numberOfPoints\n * @param {Array<{from:number;to:number}>} options.exclusions\n */\n\nexport function apply(datum1D, options: any = {}) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('Equally Spaced is not applicable on this data');\n  }\n  const { from, to, numberOfPoints, exclusions } = options;\n  const { x, re, im } = datum1D.data;\n  const XREdata = equallySpaced(\n    { x, y: re },\n    { from, to, numberOfPoints, exclusions },\n  );\n\n  datum1D.data.x = XREdata.x;\n  datum1D.data.re = XREdata.y;\n  if (im) {\n    const XIMdata = equallySpaced(\n      { x, y: re },\n      { from, to, numberOfPoints, exclusions },\n    );\n    datum1D.data.im = XIMdata.y;\n  }\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: false,\n    reduce: null,\n  };\n}\n","import { xySetYValue, zonesNormalize } from 'ml-spectra-processing';\n\nimport { Datum1D } from '../../types/data1d/Datum1D';\n\nexport const id = 'exclusionZones';\nexport const name = 'Exclusion Zones';\n\n/**\n *\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D: Datum1D, zones = []) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('Exclusion Zones filter not applicable on this data');\n  }\n  const { x, re, im } = datum1D.data;\n  datum1D.data.re = xySetYValue({ x, y: re }, { zones }).y as number[];\n  datum1D.data.im = (im\n    ? xySetYValue({ x, y: re }, { zones })\n    : im) as unknown as number[];\n}\n\nexport function isApplicable(datum1D: Datum1D) {\n  if (datum1D.info.isComplex && datum1D.info.isFt) return true;\n  return false;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: zonesNormalize(previousValue.concat(newValue)),\n  };\n}\n","import { reimFFT, reimPhaseCorrection } from 'ml-spectra-processing';\n\nexport const id = 'fft';\nexport const name = 'FFT';\n\n/**\n *\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('fft not applicable on this data');\n  }\n\n  let digitalFilterApplied = datum1D.filters.some(\n    (e) => e.name === 'digitalFilter' && e.flag,\n  );\n\n  Object.assign(datum1D.data, reimFFT(datum1D.data, { applyZeroShift: true }));\n\n  if (digitalFilterApplied) {\n    let { digitalFilter } = datum1D.info;\n    let ph1 = (digitalFilter - Math.floor(digitalFilter)) * Math.PI * 2;\n    Object.assign(datum1D.data, reimPhaseCorrection(datum1D.data, 0, ph1));\n  }\n\n  datum1D.data.x = generateXAxis(datum1D);\n  datum1D.info = { ...datum1D.info, isFid: false, isFt: true };\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: true,\n    reduce: undefined,\n  };\n}\n\nfunction generateXAxis(datum1D) {\n  const info = datum1D.info;\n  const baseFrequency = parseFloat(info.baseFrequency);\n  const frequencyOffset = parseFloat(info.frequencyOffset);\n  const spectralWidth = parseFloat(info.spectralWidth);\n  const offset = frequencyOffset / baseFrequency;\n  let spectralHalfWidth = 0.5 * spectralWidth;\n  let nbPoints = datum1D.data.x.length;\n  let firstPoint = offset - spectralHalfWidth;\n  let dx = spectralWidth / (nbPoints - 1);\n  const xAxis = new Float32Array(nbPoints);\n  for (let i = 0; i < nbPoints; i++) {\n    xAxis[i] = firstPoint;\n    firstPoint += dx;\n  }\n  return xAxis;\n}\n","import { xGetFromToIndex } from 'ml-spectra-processing';\n\nexport const id = 'fromTo';\nexport const name = 'From/To';\n\n/**\n *\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D, options: any = {}) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('From/To filter not applicable on this data');\n  }\n  const { x, re, im } = datum1D.data;\n  const { from, to } = options;\n  const { fromIndex, toIndex } = xGetFromToIndex(x, { from, to });\n\n  datum1D.data.x = x.slice(fromIndex, toIndex);\n  datum1D.data.re = re.slice(fromIndex, toIndex);\n  if (im) {\n    datum1D.data.im = im.slice(fromIndex, toIndex);\n  }\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: newValue,\n  };\n}\n","export const id = 'lineBroadening';\nexport const name = 'Line broadening';\n\n/**\n *\n * @param {Datum1d} datum1d\n * @param {Object} [value]\n */\n\nexport function apply(datum1D, value) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('lineBroadening not applicable on this data');\n  }\n\n  let grpdly = datum1D.info.digitalFilter;\n  let pointsToShift;\n  if (grpdly > 0) {\n    pointsToShift = Math.floor(grpdly);\n  } else {\n    pointsToShift = 0;\n  }\n\n  const re = datum1D.data.re;\n  const im = datum1D.data.im;\n  const t = datum1D.data.x;\n\n  const length = re.length;\n\n  const newRE = new Float64Array(length); // I don't think we need a new array... here\n  const newIM = new Float64Array(length);\n  //if (value !== 0) {// is it OK to skip this line if \"value\" is zero?\n  //please check this test of zero is correct !== or != ...\n  const dw = (t[length - 1] - t[0]) / (length - 1); //REPLACE CONSTANT with calculated value... : for this we need AQ or DW to set it right...\n  // convert line broadening in Hz into exponential coefficient:\n  const em = -value * Math.exp(1);\n\n  const coefExp = Math.exp(em * dw);\n  let curFactor = Math.exp(em * t[0]); // in case does not start at zero\n  for (let i = 0; i < length - pointsToShift; i++) {\n    newRE[i] = re[i] * curFactor;\n    newIM[i] = im[i] * curFactor;\n    curFactor = curFactor * coefExp;\n  }\n  curFactor = Math.exp(em * t[0]);\n  for (let i = length; i > length - pointsToShift; i--) {\n    newRE[i] = re[i] * curFactor;\n    newIM[i] = im[i] * curFactor;\n    curFactor = curFactor * coefExp;\n  }\n  datum1D.data = { ...datum1D.data, ...{ re: newRE, im: newIM } };\n  //}\n}\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: previousValue + newValue,\n  };\n}\n","import { xParetoNormalization } from 'ml-spectra-processing';\n\nexport const id = 'pareto';\nexport const name = 'Pareto';\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('Pareto is not applicable on this data');\n  }\n\n  const re = datum1D.data.re.slice(0);\n  const im = datum1D.data.im?.slice(0);\n\n  datum1D.data.re = xParetoNormalization(re);\n  if (im) {\n    datum1D.data.im = xParetoNormalization(im);\n  }\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: false,\n    reduce: null,\n  };\n}\n","import { reimPhaseCorrection } from 'ml-spectra-processing';\n\nexport const id = 'phaseCorrection';\nexport const name = 'Phase correction';\n\n/**\n *\n * @param {Datum1d} datum1d\n * @param {Object} [options={}]\n * @param {number} [options.ph0=0]\n * @param {number} [options.ph1=0]\n */\n\nexport function apply(datum1D, options: any = {}) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('phaseCorrection not applicable on this data');\n  }\n  let { ph0, ph1 } = options;\n  ph0 *= Math.PI / 180.0;\n  ph1 *= Math.PI / 180.0;\n  Object.assign(datum1D.data, reimPhaseCorrection(datum1D.data, ph0, ph1));\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: newValue,\n  };\n}\n","/**\n *\n * @param {Object} datum1d\n * @param {number} [shiftValue=0]\n */\n\nexport const id = 'shiftX';\nexport const name = 'Shift X';\n\nexport function apply(datum1D, shiftValue = 0) {\n  datum1D.data.x = datum1D.data.x.map((val) => val + shiftValue);\n}\n\nexport function isApplicable() {\n  return true;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: previousValue + newValue,\n  };\n}\n","import { standardDeviation } from 'ml-stat/array';\n\nexport const id = 'standardDeviation';\nexport const name = 'Standard Deviation';\n\n/**\n * Computes the standard deviation of the given values\n * @param {Datum1d} datum1d\n */\n\nexport function apply(datum1D) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('Standard Deviation is not applicable on this data');\n  }\n\n  const re = datum1D.data.re.slice(0);\n  const im = datum1D.data.im?.slice(0);\n\n  const reStd = standardDeviation(re);\n  const imStd = standardDeviation(im || []);\n\n  for (let i = 0; i < re.length; i++) {\n    re[i] /= reStd;\n    if (im) {\n      im[i] /= imStd;\n    }\n  }\n\n  datum1D.data.re = re;\n\n  if (im) {\n    datum1D.data.im = im;\n  }\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && !datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce() {\n  return {\n    once: false,\n    reduce: null,\n  };\n}\n","export const id = 'zeroFilling';\nexport const name = 'Zero Filling';\n/**\n *\n * @param {Datum1d} datum1d\n * @param {Object} [size]\n */\nexport function apply(datum1D, size) {\n  if (!isApplicable(datum1D)) {\n    throw new Error('zeroFilling not applicable on this data');\n  }\n\n  let digitalFilterApplied = datum1D.filters.some(\n    (e) => e.name === 'digitalFilter' && e.flag,\n  );\n\n  let grpdly = datum1D.info.digitalFilter;\n  let pointsToShift;\n  if (grpdly > 0 && digitalFilterApplied) {\n    pointsToShift = Math.floor(grpdly);\n  } else {\n    pointsToShift = 0;\n  }\n\n  const { re, im, x } = datum1D.data;\n\n  let newRE = new Float64Array(size);\n  let newIM = new Float64Array(size);\n  let newX = new Float64Array(size);\n\n  const length = Math.min(size, re.length);\n\n  newRE.set(re.slice(0, length - pointsToShift));\n  newIM.set(im.slice(0, length - pointsToShift));\n  newX.set(x.slice(0, length - pointsToShift));\n\n  let diff = x[1] - x[0];\n  let currentX = x[length - pointsToShift - 1];\n  for (let i = length - pointsToShift; i < size; i++) {\n    currentX += diff;\n    newX[i] = currentX;\n  }\n\n  if (pointsToShift > 0 && pointsToShift < size) {\n    newRE.set(re.slice(re.length - pointsToShift), size - pointsToShift);\n    newIM.set(im.slice(re.length - pointsToShift), size - pointsToShift);\n  }\n\n  datum1D.data = { ...datum1D.data, ...{ re: newRE, im: newIM, x: newX } };\n}\n\nexport function isApplicable(datum1D) {\n  if (datum1D.info.isComplex && datum1D.info.isFid) return true;\n  return false;\n}\n\nexport function reduce(_previousValue, newValue) {\n  return {\n    once: true,\n    reduce: newValue,\n  };\n}\n","/**\n *\n * @param {Object} datum2d\n * @param {number} [shiftValue=0]\n */\n\nexport const id = 'shift2DX';\nexport const name = 'Shift 2D X';\n\nexport function apply(datum2D, shiftValue = 0) {\n  datum2D.data.minX += shiftValue;\n  datum2D.data.maxX += shiftValue;\n}\n\nexport function isApplicable() {\n  return true;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: previousValue + newValue,\n  };\n}\n","/**\n *\n * @param {Object} datum2d\n * @param {number} [shiftValue=0]\n */\n\nexport const id = 'shift2DY';\nexport const name = 'Shift 2D Y';\n\nexport function apply(datum2D, shiftValue = 0) {\n  datum2D.data.minY += shiftValue;\n  datum2D.data.maxY += shiftValue;\n}\n\nexport function isApplicable() {\n  return true;\n}\n\nexport function reduce(previousValue, newValue) {\n  return {\n    once: true,\n    reduce: previousValue + newValue,\n  };\n}\n","const BASE62 = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nconst LENGTH = 8;\n\nexport default function generateID(): string {\n  let id = '';\n  for (let i = 0; i < LENGTH; i++) {\n    id += BASE62.charAt(Math.floor(Math.random() * 62));\n  }\n  return id;\n}\n","/* eslint-disable import/namespace */\nimport * as Filters from './Filters';\nimport generateID from './utilities/generateID';\n\nexport interface Filter {\n  id: string;\n  name: string;\n  label: string;\n  isDeleteAllow: boolean;\n  flag: boolean;\n  value: any;\n}\n\n/***\n * @param {object} Filters [{name:'',options:{}},{...}]\n */\nfunction applyFilter(datum, filters: any[] = []) {\n  let isReduced = false;\n  for (let filter of filters) {\n    const filterOption = {\n      name: filter.name,\n      label: Filters[filter.name].name,\n      value: filter.options,\n    };\n    const previousFilter = lookupForFilter(datum, filter.name);\n    if (previousFilter) {\n      const reduceResult = Filters[filter.name].reduce(\n        previousFilter.value,\n        filterOption.value,\n      );\n      if (reduceResult.once) {\n        if (!isReduced) {\n          isReduced = true;\n        }\n        if (reduceResult.reduce != null && reduceResult.reduce !== undefined) {\n          replaceFilter(datum, previousFilter.id, reduceResult.reduce);\n        }\n      } else {\n        addFilter(\n          datum,\n          filterOption,\n          Object.prototype.hasOwnProperty.call(filter, 'isDeleteAllow')\n            ? filter.isDeleteAllow\n            : true,\n        );\n      }\n    } else {\n      addFilter(\n        datum,\n        filterOption,\n        Object.prototype.hasOwnProperty.call(filter, 'isDeleteAllow')\n          ? filter.isDeleteAllow\n          : true,\n      );\n    }\n  }\n  if (isReduced) {\n    if (filters.length === 1 && isLastFilter(datum, filters[0].name)) {\n      Filters[filters[0].name].apply(datum, filters[0].options);\n    } else {\n      reapplyFilters(datum);\n    }\n  } else {\n    for (let filter of filters) {\n      Filters[filter.name].apply(datum, filter.options);\n    }\n  }\n}\n\nfunction isLastFilter(datum, id) {\n  const index = datum.filters.findIndex((f) => f.name === id);\n  if (datum.filters.length === index + 1) {\n    return true;\n  }\n  return false;\n}\n\nfunction lookupForFilter(datum, filterName) {\n  return datum.filters.find((f) => f.name === filterName);\n}\n\nfunction reapplyFilters(datum, filters: any = null) {\n  const _filters = filters ? filters : datum.filters;\n  enableFilter(datum, null, null, _filters);\n}\n\n// id filter id\nfunction enableFilter(datum, id, checked, filters = null) {\n  datum.filters = datum.filters.slice(0);\n  if (id) {\n    datum.filters = datum.filters.map((filter) => {\n      return { ...filter, flag: filter.id === id ? checked : filter.flag };\n    }, []);\n  }\n  datum.data = { ...datum.data, ...datum.originalData };\n  datum.info = { ...datum.info, ...datum.originalInfo };\n  const _filters = filters ? filters : datum.filters;\n  for (let filterIndex in _filters) {\n    const filter = datum.filters[filterIndex];\n    datum.filters[filterIndex] = {\n      ...datum.filters[filterIndex],\n      error: null,\n    };\n\n    if (filter.flag) {\n      try {\n        Filters[filter.name].apply(datum, filter.value);\n      } catch (error: any) {\n        datum.filters[filterIndex] = {\n          ...datum.filters[filterIndex],\n          error: error.message,\n        };\n      }\n    }\n  }\n}\nfunction deleteFilter(datum, id) {\n  datum.filters = datum.filters.slice(0);\n  datum.filters = datum.filters.filter((filter) => filter.id !== id);\n  datum.data = { ...datum.data, ...datum.originalData };\n  datum.info = { ...datum.info, ...datum.originalInfo };\n\n  for (let filterIndex in datum.filters) {\n    const filter = datum.filters[filterIndex];\n    datum.filters[filterIndex] = {\n      ...datum.filters[filterIndex],\n      error: null,\n    };\n\n    if (filter.flag) {\n      try {\n        Filters[filter.name].apply(datum, filter.value);\n      } catch (error: any) {\n        datum.filters[filterIndex] = {\n          ...datum.filters[filterIndex],\n          error: error.message,\n        };\n      }\n    }\n  }\n}\n\nfunction addFilter(datum, filter, isDeleteAllow = true) {\n  const id = generateID();\n  datum.filters = datum.filters.slice(0);\n  delete filter.isSnapshot;\n  datum.filters.push({\n    ...filter,\n    id: id,\n    flag: true,\n    isDeleteAllow,\n  });\n}\n\nfunction replaceFilter(datum, filterID, value) {\n  datum.filters = datum.filters.slice(0);\n  const index = datum.filters.findIndex((f) => f.id === filterID);\n  delete datum.filters[index].isSnapshot;\n  datum.filters[index] = {\n    ...datum.filters[index],\n    value,\n  };\n}\n\nexport { applyFilter, reapplyFilters, enableFilter, addFilter, deleteFilter };\n","export const COLORS: string[] = [\n  '#C10020',\n  '#007D34',\n  '#803E75',\n  '#FF6800',\n  '#B32851',\n  '#7F180D',\n  '#232C16',\n  '#A6BDD7',\n  '#CEA262',\n  '#817066',\n  '#FF8E00',\n  '#F6768E',\n  '#00538A',\n  '#FF7A5C',\n  '#53377A',\n  '#FFB300',\n  '#F4C800',\n  '#93AA00',\n  '#593315',\n  '#F13A13',\n];\n\ninterface TwoDColors {\n  positiveColor: string;\n  negativeColor: string;\n}\n\nconst color2D: Record<string, TwoDColors> = {\n  cosy: { positiveColor: 'darkblue', negativeColor: 'blue' },\n  roesy: { positiveColor: '#e75480', negativeColor: 'yellow' },\n  noesy: { positiveColor: '#e75480', negativeColor: 'yellow' },\n  tocsy: { positiveColor: 'green', negativeColor: 'yellow' },\n  hsqc: { positiveColor: 'black', negativeColor: 'yellow' },\n  hmbc: { positiveColor: 'darkviolet', negativeColor: 'yellow' },\n};\n\nexport function get2DColor(experiment: string, colors = []): TwoDColors {\n  if (!color2D[experiment]) {\n    const positiveColor = getColor(false, colors);\n    const negativeColor = adjustAlpha(positiveColor, 50);\n    return { positiveColor, negativeColor };\n  }\n  return color2D[experiment];\n}\n\nfunction percentToHex(p: number): string {\n  const percent = Math.max(0, Math.min(100, p));\n  const intValue = Math.round((percent / 100) * 255);\n  const hexValue = intValue.toString(16);\n  return percent === 100 ? '' : hexValue.padStart(2, '0');\n}\n\nexport function adjustAlpha(color: string, factor: number): string {\n  return color + percentToHex(factor);\n}\n\nexport default function getColor(\n  isRandom = false,\n  usedColors: string[] = [],\n  opacity = 100,\n) {\n  const resetColors = COLORS.filter((c) => !usedColors.includes(c));\n  if (resetColors.length > 0 && !isRandom) {\n    return resetColors[0] + percentToHex(opacity);\n  } else {\n    const lum = -0.25;\n    let hex = String(\n      `#${Math.random().toString(16).slice(2, 8).toUpperCase()}`,\n    ).replace(/[^0-9a-f]/gi, '');\n    if (hex.length < 6) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    let rgb = '#';\n    let c: number | string;\n    for (let i = 0; i < 3; i++) {\n      c = parseInt(hex.substr(i * 2, 2), 16);\n      c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n      rgb += `00${c}`.substr(c.length);\n    }\n\n    return rgb + percentToHex(opacity);\n  }\n}\n","import merge from 'lodash/merge';\n\nimport { Integrals } from '../../../types/data1d';\n\nexport function initiateIntegrals(options: Partial<{ integrals: Integrals }>) {\n  return merge(\n    {\n      values: [],\n      options: {\n        sum: undefined,\n        isSumConstant: true,\n        sumAuto: true,\n      },\n    },\n    options.integrals,\n  );\n}\n","import { Datum1D } from '../../types/data1d/Datum1D';\n\nexport function getSpectrumErrorValue(datum: Datum1D) {\n  const { x } = datum.data;\n  return (x[x.length - 1] - x[0]) / 10000;\n}\n","import * as FiltersTypes from '../../../Filters';\nimport { Datum1D } from '../../../types/data1d/Datum1D';\n\nexport function getShiftX(datum: Datum1D): number {\n  const filter =\n    datum?.filters &&\n    datum?.filters.find((filter) => filter.name === FiltersTypes.shiftX.id);\n\n  return filter?.flag ? filter.value : 0;\n}\n","import { Peak, Datum1D } from '../../../types/data1d';\nimport generateID from '../../../utilities/generateID';\nimport { getSpectrumErrorValue } from '../getSpectrumErrorValue';\nimport { getShiftX } from '../shift/getShiftX';\n\nfunction checkPeak(peak: Peak, datum: Datum1D, error) {\n  // check if the Peak is already exists\n  for (const { x } of datum.peaks?.values || []) {\n    if (Math.abs(peak.x - x) < error) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function mapPeaks(peaks: Peak[], datum: Datum1D) {\n  const shiftX = getShiftX(datum);\n\n  const error = getSpectrumErrorValue(datum);\n\n  return peaks.reduce<Peak[]>((acc, newPeak) => {\n    // check if the peak is already exists\n    if (checkPeak(newPeak, datum, error)) return acc;\n\n    acc.push({\n      id: newPeak?.id || generateID(),\n      originalX: newPeak.x - shiftX,\n      x: newPeak.x,\n      y: newPeak.y,\n      width: newPeak.width,\n    });\n\n    return acc;\n  }, []);\n}\n","import merge from 'lodash/merge';\n\nimport { Datum1D, Peaks } from '../../../types/data1d';\n\nimport { mapPeaks } from './mapPeaks';\n\nexport function initiatePeaks(\n  options: Partial<{ peaks: Peaks }>,\n  datum: Datum1D,\n) {\n  return merge({ values: [], options: {} }, options.peaks, {\n    values: mapPeaks(options?.peaks?.values || [], datum),\n  });\n}\n","import { xyIntegration } from 'ml-spectra-processing';\n\nimport { DatumKind } from '../../../constants/SignalsKinds';\nimport { Datum1D, Range } from '../../../types/data1d';\nimport generateID from '../../../utilities/generateID';\nimport { getSpectrumErrorValue } from '../getSpectrumErrorValue';\nimport { getShiftX } from '../shift/getShiftX';\n\nfunction checkRange(range: Range, datum: Datum1D, error) {\n  // check if the range is already exists\n  for (const { from, to } of datum.ranges?.values || []) {\n    if (\n      Math.abs(range.from - from) < error &&\n      Math.abs(range.to - to) < error\n    ) {\n      return true;\n    }\n  }\n}\n\nexport function mapRanges(ranges: Range[], datum: Datum1D) {\n  const { x, re } = datum.data;\n  const shiftX = getShiftX(datum);\n  const error = getSpectrumErrorValue(datum);\n  return ranges.reduce<Array<Range>>((acc, newRange) => {\n    if (checkRange(newRange, datum, error)) return acc;\n\n    const absolute = xyIntegration(\n      { x, y: re },\n      { from: newRange.from, to: newRange.to, reverse: true },\n    );\n    const signals = newRange.signals.map((signal) => {\n      const { kind = null, id, ...resSignal } = signal;\n      return {\n        kind: kind || 'signal',\n        id: id || generateID(),\n        originDelta: signal.delta - shiftX,\n        ...resSignal,\n      };\n    });\n\n    acc.push({\n      ...newRange,\n      kind: signals?.[0].kind || DatumKind.signal,\n      originFrom: newRange.from - shiftX,\n      originTo: newRange.to - shiftX,\n      id: newRange.id || generateID(),\n      absolute,\n      signals,\n    });\n\n    return acc;\n  }, []);\n}\n","import merge from 'lodash/merge';\n\nimport { Datum1D, Ranges } from '../../../types/data1d';\n\nimport { mapRanges } from './mapRanges';\n\nexport function initiateRanges(\n  options: Partial<{ ranges: Ranges }>,\n  datum: Datum1D,\n) {\n  return merge(\n    {\n      values: [],\n      options: {\n        sum: undefined,\n        isSumConstant: true,\n        sumAuto: true,\n      },\n    },\n    options.ranges,\n    {\n      values: mapRanges(options?.ranges?.values || [], datum),\n    },\n  );\n}\n","import * as FiltersTypes from '../../Filters';\nimport * as FiltersManager from '../../FiltersManager';\nimport { Datum1D } from '../../types/data1d/Datum1D';\nimport generateID from '../../utilities/generateID';\nimport get1dColor from '../../utilities/getColor';\n\nimport { initiateIntegrals } from './integrals/initiateIntegrals';\nimport { initiatePeaks } from './peaks/initiatePeaks';\nimport { initiateRanges } from './ranges/initiateRanges';\n\nexport function initiateDatum1D(options: any, usedColors = {}): Datum1D {\n  const datum: Partial<Datum1D> = {};\n  datum.id = options.id || generateID();\n  datum.source = Object.assign(\n    {\n      jcampURL: null,\n      file: {\n        binary: null,\n        name: '',\n        extension: '',\n      },\n    },\n    options.source,\n  );\n\n  datum.display = Object.assign(\n    {\n      name: options.display?.name ? options.display.name : generateID(),\n      ...getColor(options, usedColors),\n      isVisible: true,\n      isPeaksMarkersVisible: true,\n      isRealSpectrumVisible: true,\n    },\n    options.display,\n  );\n\n  datum.info = Object.assign(\n    {\n      nucleus: '1H', // 1H, 13C, 19F, ...\n      isFid: false,\n      isComplex: false, // if isComplex is true that mean it contains real/ imaginary  x set, if not hid re/im button .\n      dimension: 1,\n    },\n    options.info,\n  );\n\n  datum.originalInfo = datum.info;\n\n  datum.meta = Object.assign({}, options.meta);\n  datum.data = Object.assign(\n    {\n      x: [],\n      re: [],\n      im: [],\n    },\n    options.data,\n  );\n  datum.originalData = datum.data;\n\n  datum.filters = Object.assign([], options.filters); //array of object {name: \"FilterName\", options: FilterOptions = {value | object} }\n\n  datum.peaks = initiatePeaks(options, datum as Datum1D);\n\n  // array of object {index: xIndex, xShift}\n  // in case the peak does not exactly correspond to the point value\n  // we can think about a second attributed `xShift`\n  datum.integrals = initiateIntegrals(options); // array of object (from: xIndex, to: xIndex)\n  datum.ranges = initiateRanges(options, datum as Datum1D);\n\n  //reapply filters after load the original data\n  FiltersManager.reapplyFilters(datum);\n\n  preprocessing(datum);\n  return datum as Datum1D;\n}\n\nfunction getColor(options, usedColors) {\n  let color = 'black';\n  if (options?.display?.color === undefined) {\n    color = get1dColor(false, usedColors['1d'] || []);\n  } else {\n    color = options.display.color;\n  }\n\n  if (usedColors['1d']) {\n    usedColors['1d'].push(color);\n  }\n\n  return { color };\n}\n\nfunction preprocessing(datum) {\n  if (\n    datum.info.isFid &&\n    datum.filters.findIndex((f) => f.name === FiltersTypes.digitalFilter.id) ===\n      -1 &&\n    datum.info.digitalFilter\n  ) {\n    FiltersManager.applyFilter(datum, [\n      {\n        name: FiltersTypes.digitalFilter.id,\n        options: {\n          digitalFilterValue: datum.info.digitalFilter,\n        },\n        isDeleteAllow: false,\n      },\n    ]);\n  }\n}\n","import { rangesToXY } from 'nmr-processing';\n\nimport { UsedColors } from '../../../../types/UsedColors';\nimport { Datum1D, Range } from '../../../types/data1d';\nimport { initiateDatum1D } from '../initiateDatum1D';\n\nimport { mapRanges } from './mapRanges';\n\nexport function generateSpectrumFromRanges(\n  ranges: Range[],\n  info: {\n    nucleus: string;\n    solvent: string;\n    name?: string;\n    frequency?: number;\n    color?: string;\n  },\n  usedColors: UsedColors,\n): Datum1D {\n  const { nucleus, solvent, name = null, frequency = 400 } = info;\n  const { x, y } = rangesToXY(ranges, {\n    frequency,\n    nbPoints: 524288,\n  });\n\n  const datum = initiateDatum1D(\n    {\n      data: { x, im: null, re: y },\n      display: { name },\n      info: {\n        nucleus,\n        originFrequency: frequency,\n        baseFrequency: frequency,\n        pulseSequence: '',\n        solvent,\n        isFt: true,\n      },\n    },\n    usedColors,\n  );\n  datum.ranges.values = mapRanges(ranges, datum);\n\n  return datum;\n}\n","import { resurrect } from 'nmr-processing';\n\nimport { UsedColors } from '../../../types/UsedColors';\nimport { Datum1D } from '../../types/data1d';\n\nimport { generateSpectrumFromRanges } from './ranges/generateSpectrumFromRanges';\n\nexport function generateSpectrumFromPublicationString(\n  publicationString: string,\n  usedColors: UsedColors,\n): Datum1D {\n  const {\n    ranges,\n    experiment: { nucleus, solvent },\n    parts,\n  } = resurrect(publicationString);\n  return generateSpectrumFromRanges(\n    ranges,\n    { nucleus, solvent, name: parts[0] },\n    usedColors,\n  );\n}\n","import { Datum1D } from '../../types/data1d';\n\n/**\n * @typedef {Object} datum\n * @property {number[]} x - The X points series\n * @property {number[]} y - The Y points series\n */\n\n/**\n *\n * @param spectrum 1d spectrum\n * @returns {datum} datum object includes x and y series\n */\n\nexport function get1DDataXY(spectrum: Datum1D): {\n  x: number[];\n  y: number[];\n} {\n  const {\n    display: { isRealSpectrumVisible },\n    data: { x, re, im },\n  } = spectrum;\n\n  return { x, y: isRealSpectrumVisible ? re : im };\n}\n","interface ReferenceInfo {\n  from: number;\n  to: number;\n  nbPeaks: number;\n  delta: number;\n}\n\nexport const REFERENCES: Record<string, Record<string, ReferenceInfo>> = {\n  '1H': {\n    tms: {\n      from: -0.1,\n      to: 0.1,\n      nbPeaks: 1,\n      delta: 0,\n    },\n    tsp: {\n      from: -0.1,\n      to: 0.1,\n      nbPeaks: 1,\n      delta: 0,\n    },\n    glucose: {\n      from: 5.18,\n      to: 5.28,\n      nbPeaks: 2,\n      delta: 5.23,\n    },\n  },\n  '13C': {},\n};\n\nexport function getRange(\n  options: { nucleus?: string; reference?: string } = {},\n): ReferenceInfo {\n  const { nucleus = '1H', reference = 'tms' } = options;\n\n  if (!REFERENCES[nucleus]) {\n    throw new Error(`Nucleus not found: ${nucleus}`);\n  }\n\n  const info = REFERENCES[nucleus][reference.toLowerCase()];\n\n  if (!info) {\n    throw new Error(`Reference not found: ${reference}`);\n  }\n\n  return {\n    from: info.delta - 0.05,\n    to: info.delta + 0.05,\n    delta: info.delta,\n    nbPeaks: info.nbPeaks,\n  };\n}\n","import type { DataXY } from 'cheminfo-types';\nimport mean from 'ml-array-mean';\nimport { gsd } from 'ml-gsd';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\n\nimport { getRange } from '../../constants/References';\n\n/**\n *\n * @param {*} datum1D\n * @param {object} [options={}]\n * @param {number} [options.from]\n * @param {number} [options.to] Define the from zone where the reference is expected to be found\n * @param {number} [options.from]\n * @param {number} [options.nbPeaks]\n * @param {number} [options.targetX]\n * @param {string} [options.reference]\n */\nexport function getReferenceShift(datum1D, options) {\n  let { from, to, nbPeaks, targetX, reference } = options;\n  if (reference) {\n    let data = getRange({ reference: reference, nucleus: datum1D.nucleus });\n    from = data.from;\n    to = data.to;\n    nbPeaks = data.nbPeaks;\n    targetX = data.delta;\n  }\n\n  const { re, x } = datum1D.data;\n  return xyCalibrate({ x, y: re }, { from, to }, { nbPeaks, targetX });\n}\n\n// This is a copy of the function defined in https://github.com/cheminfo/spectra-processor/blob/b87f6f6c4d45a64dc16f3f9692d5f5dc7e398e5e/src/spectrum/xyCalibrate.js\nfunction xyCalibrate(\n  data: DataXY,\n  range: { to?: number; from?: number } = {},\n  options: {\n    targetX?: number;\n    nbPeaks?: number;\n    gsd?: {\n      minMaxRatio: number;\n      realTopDetection: boolean;\n      smoothY: boolean;\n      sgOptions: {\n        windowSize: number;\n        polynomial: number;\n      };\n    };\n  } = {},\n): number {\n  const {\n    targetX = 0,\n    nbPeaks = 1,\n    gsd: gsdOptions = {\n      minMaxRatio: 0.1,\n      realTopDetection: true,\n      smoothY: true,\n      sgOptions: {\n        windowSize: 7,\n        polynomial: 3,\n      },\n    },\n  } = options;\n  let { from, to } = range;\n  if (from === undefined || to === undefined) return 0;\n\n  const fromIndex = xFindClosestIndex(data.x, from);\n  const toIndex = xFindClosestIndex(data.x, to);\n  const sliceddata = {\n    x: data.x.slice(fromIndex, toIndex) as number[],\n    y: data.y.slice(fromIndex, toIndex) as number[],\n  };\n\n  let peaks = gsd(sliceddata, gsdOptions)\n    .sort((a, b) => b.y - a.y)\n    .slice(0, nbPeaks);\n\n  if (peaks.length === 0) return 0;\n\n  const middle = mean(peaks.map((peak) => peak.x));\n\n  return targetX - middle;\n}\n","import { Datum1D, Integral } from '../../../types/data1d';\n\nexport function changeIntegralsRelative(\n  datum: Datum1D,\n  newIntegral: { id: string; value: number },\n) {\n  const index = datum.integrals.values.findIndex(\n    (integral) => integral.id === newIntegral.id,\n  );\n  if (index !== -1) {\n    const ratio = datum.integrals.values[index].absolute / newIntegral.value;\n    const { values, sum } = datum.integrals.values.reduce<{\n      sum: number;\n      values: Integral[];\n    }>(\n      (acc, integral, index) => {\n        const newIntegralValue = integral.absolute / ratio;\n        acc.sum += newIntegralValue;\n        acc.values[index] = {\n          ...integral,\n          integral: newIntegralValue,\n        };\n\n        return acc;\n      },\n      { values: [], sum: 0 },\n    );\n\n    datum.integrals.values = values;\n    datum.integrals.options = {\n      ...datum.integrals.options,\n      mf: undefined,\n      moleculeKey: undefined,\n      sumAuto: false,\n      sum,\n    };\n  }\n}\n","import { SignalKindsToInclude } from '../../../constants/SignalsKinds';\nimport { Integral } from '../../../types/data1d';\n\n/**\n * check whether integral based on its kind can be included in another operation or not\n * @param integral  integral\n * @returns {boolean}\n */\nexport function checkIntegralKind(integral: Integral): boolean {\n  return SignalKindsToInclude.includes(integral.kind);\n}\n","/**\n * Sum values for specific key in the object\n * @param values array of object\n * @param key key\n * @param check custom check function to to indicate if certain object included or not in the summation\n * @returns number\n */\n\nexport function getSum<Type>(\n  values: Type[],\n  key: keyof Extract<Type, string>,\n  check: ((value: Type) => boolean) | null = null,\n) {\n  return values.reduce((sum, current) => {\n    return check && check(current) === true\n      ? (sum += Math.abs(current[key as string]))\n      : sum;\n  }, 0);\n}\n","import { Integral, Range, Integrals, Ranges } from '../../../types/data1d';\nimport { getSum } from '../../../utilities/getSum';\n\nexport function updateRelatives<Type extends Integral | Range>(\n  data: Type extends Integral ? Integrals : Ranges,\n  key: keyof Type,\n  check: (value: Type) => boolean,\n  forceCalculateIntegral = false,\n): void {\n  const { values, options } = data;\n\n  const currentSum = getSum<Type>(values as Type[], 'absolute', check);\n\n  let factor = 0;\n  if (options.sum) {\n    if (data.options.isSumConstant || forceCalculateIntegral) {\n      factor = currentSum > 0 ? options.sum / currentSum : 0.0;\n    } else {\n      if (data.values?.[0]) {\n        const item = data.values[0];\n        factor =\n          (item[key as string] ? item[key as string] : options.sum) /\n          item.absolute;\n      }\n    }\n  }\n  data.values = data.values.map((value) => {\n    return {\n      ...value,\n      ...(check(value) && {\n        [key as string]: value.absolute * factor,\n      }),\n    };\n  });\n\n  if (!data.options.isSumConstant && !forceCalculateIntegral) {\n    data.options.sum = getSum<Type>(data.values as Type[], key, check);\n  }\n}\n","import { Datum1D, Integral } from '../../../types/data1d';\n\nimport { checkIntegralKind } from './checkIntegralKind';\nimport { updateRelatives } from './updateRelatives';\n\nexport function updateIntegralsRelativeValues(\n  datum: Datum1D,\n  forceCalculateIntegral = false,\n) {\n  updateRelatives<Integral>(\n    datum.integrals,\n    'integral',\n    checkIntegralKind,\n    forceCalculateIntegral,\n  );\n}\n","import { Datum1D } from '../../types/data1d';\nimport { Datum2D } from '../../types/data2d';\n\nexport function isSpectrum1D(spectrum: Datum1D | Datum2D): spectrum is Datum1D {\n  return spectrum.info.dimension === 1;\n}\n","import median from 'ml-array-median';\nimport { xyAutoPeaksPicking } from 'nmr-processing';\n\nimport { Datum1D, Peak } from '../../../types/data1d';\n\nimport { mapPeaks } from './mapPeaks';\n\nexport function autoPeakPicking(datum1D: Datum1D, options) {\n  const {\n    minMaxRatio,\n    maxNumberOfPeaks,\n    noiseFactor,\n    lookNegative,\n    windowFromIndex,\n    windowToIndex,\n  } = options;\n  // we calculate the noise but this could be improved\n  const noise = median(datum1D.data.re.map((y) => Math.abs(y)));\n\n  let { re, x } = datum1D.data;\n\n  if (windowFromIndex !== undefined && windowToIndex !== undefined) {\n    x = x.slice(windowFromIndex, windowToIndex);\n    re = re.slice(windowFromIndex, windowToIndex);\n  }\n\n  let peaks = xyAutoPeaksPicking(\n    { x, y: re },\n    {\n      lookNegative,\n      noiseLevel: noise * noiseFactor,\n      minMaxRatio: minMaxRatio, // Threshold to determine if a given peak should be considered as a noise\n      realTopDetection: true,\n      smoothY: false,\n      sgOptions: { windowSize: 15, polynomial: 3 },\n    },\n  );\n  peaks.sort((a, b) => b.y - a.y);\n  if (maxNumberOfPeaks < peaks.length) peaks = peaks.slice(0, maxNumberOfPeaks);\n\n  return mapPeaks(peaks as Peak[], datum1D);\n}\n","import max from 'ml-array-max';\n\nimport { Data1D } from '../../../types/data1d/Data1D';\n\n// Lookup for apeak while the mouse move\n/**\n *\n * @param {object<{x:Array<number>,re:Array<number>}>} data\n * @param  {object<{from:number,to:number}>} options\n */\n\ninterface LookupPeakOptions {\n  from: number;\n  to: number;\n}\ninterface LookupPeakResult {\n  x: number;\n  y: number;\n  xIndex: number;\n}\n\nexport function lookupPeak(\n  data: Data1D,\n  options: LookupPeakOptions,\n): LookupPeakResult | null {\n  const { from, to } = options;\n  let minIndex = data.x.findIndex((number) => number >= from);\n  let maxIndex = data.x.findIndex((number) => number >= to) - 1;\n\n  if (minIndex > maxIndex) {\n    minIndex = maxIndex;\n    maxIndex = minIndex;\n  }\n  const dataRange = data.re.slice(minIndex, maxIndex);\n  if (dataRange && dataRange.length > 0) {\n    const yValue = max(dataRange);\n    const xIndex = dataRange.findIndex((value) => value === yValue);\n    const xValue = data.x[minIndex + xIndex];\n\n    return { x: xValue, y: yValue, xIndex: minIndex + xIndex };\n  }\n  return null;\n}\n","export default function getAtom(nucleus: string): string {\n  return nucleus?.replace(/[0-9]/g, '') || '';\n}\n","import { Draft } from 'immer';\n\nimport { State } from '../../../component/reducer/Reducer';\nimport { Molecule } from '../../molecules/Molecule';\nimport { Datum1D, Integrals, Ranges } from '../../types/data1d';\nimport { SumOptions } from '../../types/data1d/SumOptions';\nimport getAtom from '../../utilities/getAtom';\n\nimport {\n  isSpectrum1D,\n  updateRangesRelativeValues,\n  updateIntegralsRelativeValues,\n} from '.';\n\nexport interface SumParams {\n  nucleus: string;\n  molecules: Molecule[];\n}\n\nexport type SetSumOptions = Omit<SumOptions, 'isSumConstant'>;\n\nexport function initSumOptions(options: SumOptions, params: SumParams) {\n  let newOptions = { ...options };\n  const { molecules, nucleus } = params;\n\n  if (options.sumAuto && Array.isArray(molecules) && molecules.length > 0) {\n    const { mf, key } = molecules[0];\n    newOptions = { ...newOptions, sumAuto: true, mf, moleculeKey: key };\n  } else {\n    const { mf, moleculeKey, ...resOptions } = newOptions;\n    newOptions = { ...resOptions, sumAuto: false };\n  }\n  if (!newOptions.sum) {\n    newOptions.sum = getSum(newOptions.mf || null, nucleus);\n  }\n\n  return newOptions;\n}\n\nexport function getSum(mf: string | null | undefined, nucleus: string) {\n  const defaultSum = 100;\n\n  if (!mf || !nucleus) return defaultSum;\n\n  const atom = getAtom(nucleus);\n  const atoms = getAtoms(mf);\n\n  return atoms[atom] ? atoms[atom] : defaultSum;\n}\n\nexport function setSumOptions(\n  data: Ranges | Integrals,\n  params: { options: SetSumOptions; nucleus: string },\n) {\n  const { nucleus, options } = params;\n  if (options.sumAuto) {\n    const { mf, moleculeKey } = options;\n    const sum = getSum(mf, nucleus);\n    data.options = { ...data.options, sumAuto: true, moleculeKey, mf, sum };\n  } else {\n    const { mf, moleculeKey, ...resOptions } = data.options;\n    data.options = { ...resOptions, sumAuto: false, sum: options.sum };\n  }\n}\n\nexport function getAtoms(mf: string): Record<string, number> {\n  const result = {};\n  // eslint-disable-next-line prefer-named-capture-group\n  const data = mf.split(/(\\d+)/);\n  for (let i = 0; i < data.length - 1; i = i + 2) {\n    result[data[i]] = Number(data[i + 1]);\n  }\n  return result;\n}\n\n/**\n * change the sum for ranges and integrals in all spectra based on molecule\n * it handle three cases\n * 1 - edit and existing molecule\n * 2- delete molecule / edit molecule and as a result of that it generate more than one molecule\n * 3- add a molecule for the first time\n * @param draft     State draft\n * @param molKey    Molecule key\n * @param molecule  Molecules list\n */\nexport function changeSpectraRelativeSum(\n  draft: Draft<State>,\n  molKey: string,\n  molecule: Molecule,\n) {\n  const keys: (keyof Datum1D)[] = ['ranges', 'integrals'];\n\n  for (const spectrum of draft.data) {\n    if (isSpectrum1D(spectrum)) {\n      for (const key of keys) {\n        const { moleculeKey, mf, sumAuto } = spectrum[key].options;\n\n        if ((molKey === moleculeKey || (!moleculeKey && !mf)) && sumAuto) {\n          const options: Partial<SetSumOptions> = molecule\n            ? {\n                mf: molecule.mf,\n                moleculeKey: molecule.key,\n              }\n            : {\n                mf: undefined,\n                moleculeKey: undefined,\n              };\n\n          setSumOptions(spectrum[key], {\n            nucleus: spectrum.info.nucleus,\n            options: { ...options, sumAuto: true, sum: undefined },\n          });\n          updateRangesRelativeValues(spectrum, true);\n          updateIntegralsRelativeValues(spectrum, true);\n        }\n      }\n    }\n  }\n}\n","import { DatumKind } from '../constants/SignalsKinds';\nimport { Range } from '../types/data1d';\n\nexport function getDiaIDs(range: Range): string[] {\n  return ([] as string[]).concat(\n    range.diaIDs || [],\n    range.signals\n      ? range.signals.map((_signal) => _signal.diaIDs || []).flat()\n      : [],\n  );\n}\n\nexport function getNbAtoms(range: Range, signalIndex?: number): number {\n  if (signalIndex === undefined) {\n    return range.signals\n      ? range.signals.reduce(\n          (sum, signal) => (signal.nbAtoms ? signal.nbAtoms + sum : sum),\n          0,\n        )\n      : 0;\n  }\n\n  return range.signals[signalIndex].nbAtoms || 0;\n}\n\nexport function setNbAtoms(range: Range, signalIndex?: number): void {\n  range.nbAtoms = getNbAtoms(range, signalIndex);\n  if (range.nbAtoms === 0) {\n    delete range.nbAtoms;\n  }\n}\n\nexport function resetDiaIDs(range: Range): void {\n  delete range.diaIDs;\n  delete range.nbAtoms;\n  range.signals.forEach((_signal) => {\n    delete _signal.diaIDs;\n    delete _signal.nbAtoms;\n  });\n  delete range.nbAtoms;\n}\n\n/**\n *\n * @param {object} range\n * @param {String('both' | 'range' | 'signal')} unlinkType\n * @param {object} options\n * @param {number} [options.signalIndex]\n * @returns {object}\n */\nexport function unlink(\n  range: Range,\n  unlinkType = 'both',\n  options: any = {},\n): Range {\n  switch (unlinkType) {\n    case 'both':\n      resetDiaIDs(range);\n      break;\n    case 'range':\n      delete range.diaIDs;\n      delete range.nbAtoms;\n      break;\n    case 'signal':\n      delete range.signals[options.signalIndex].diaIDs;\n      delete range.signals[options.signalIndex].nbAtoms;\n      break;\n    default:\n      break;\n  }\n\n  setNbAtoms(range);\n\n  return range;\n}\n\nexport function addDefaultSignal(range) {\n  range.signals.push({\n    multiplicity: 'm',\n    kind: 'signal',\n    delta: (range.to + range.from) / 2,\n  });\n}\n\nexport function checkRangeKind(range) {\n  return range.kind === DatumKind.signal;\n}\n\nexport function checkSignalKinds(range, kinds) {\n  return !range.signals.some(\n    (_signal) => _signal.kind === undefined || !kinds.includes(_signal.kind),\n  );\n}\n\nexport function unlinkInAssignmentData(\n  assignmentData,\n  ranges: Partial<Range>[],\n) {\n  const ids = ranges.reduce((acc: string[], range) => {\n    if (range.id) {\n      acc.push(range.id);\n    }\n    if (range.signals) {\n      acc = acc.concat(range.signals.map((signal) => signal.id, []));\n    }\n    return acc;\n  }, []);\n  assignmentData.dispatch({\n    type: 'REMOVE_ALL',\n    payload: { id: ids, axis: 'x' },\n  });\n}\n","import { SignalKindsToInclude } from '../../../constants/SignalsKinds';\nimport { Range } from '../../../types/data1d';\nimport { checkSignalKinds } from '../../../utilities/RangeUtilities';\n\nexport function checkRangeKind(range: Range): boolean {\n  return range.signals && checkSignalKinds(range, SignalKindsToInclude);\n}\n","import { Datum1D } from '../../../types/data1d/Datum1D';\nimport { updateRelatives } from '../integrals/updateRelatives';\n\nimport { checkRangeKind } from './checkRangeKind';\n\nexport function updateRangesRelativeValues(\n  datum: Datum1D,\n  forceCalculateIntegral = false,\n) {\n  updateRelatives(\n    datum.ranges,\n    'integration',\n    checkRangeKind,\n    forceCalculateIntegral,\n  );\n}\n","import { xyIntegration } from 'ml-spectra-processing';\n\nimport { DatumKind } from '../../../constants/SignalsKinds';\nimport { Datum1D } from '../../../types/data1d/Datum1D';\nimport generateID from '../../../utilities/generateID';\nimport { initSumOptions, SumParams } from '../SumManager';\n\nimport detectSignal from './detectSignal';\nimport { mapRanges } from './mapRanges';\nimport { updateRangesRelativeValues } from './updateRangesRelativeValues';\n\ninterface AddRangeOptions {\n  from: number;\n  to: number;\n}\n\nexport function addRange(datum: Datum1D, options: AddRangeOptions & SumParams) {\n  const { from, to, molecules, nucleus } = options;\n  const { x, re } = datum.data;\n  const absolute = xyIntegration({ x, y: re }, { from, to, reverse: true });\n\n  // detectSignal use the advance multiplet-analysis that can crash if too many points\n  const signal = detectSignal(\n    x as unknown as Float64Array,\n    re as unknown as Float64Array,\n    from,\n    to,\n    datum.info.originFrequency,\n  );\n  if (!signal) return;\n  try {\n    const range = {\n      id: generateID(),\n      from,\n      to,\n      absolute, // the real value,\n      signals: [{ id: generateID(), ...signal }],\n      kind: DatumKind.signal,\n      integration: 0,\n    };\n\n    datum.ranges.options = initSumOptions(datum.ranges.options, {\n      molecules,\n      nucleus,\n    });\n\n    datum.ranges.values = datum.ranges.values.concat(mapRanges([range], datum));\n    updateRangesRelativeValues(datum);\n  } catch (e) {\n    throw new Error('Could not calculate the multiplicity');\n  }\n}\n","import { xyIntegration } from 'ml-spectra-processing';\n\nimport { Datum1D, Range } from '../../../types/data1d';\n\nimport { updateRangesRelativeValues } from './updateRangesRelativeValues';\n\nexport function changeRange(datum: Datum1D, range: Range) {\n  const { from, to } = range;\n  const { x, re } = datum.data;\n\n  const index = datum.ranges.values.findIndex((i) => i.id === range.id);\n  const absolute = xyIntegration({ x, y: re }, { from, to, reverse: true });\n\n  if (index !== -1) {\n    datum.ranges.values[index] = {\n      ...datum.ranges.values[index],\n      originFrom: from,\n      originTo: to,\n      ...range,\n      absolute,\n    };\n    updateRangesRelativeValues(datum);\n  }\n}\n","import { Datum1D } from '../../../types/data1d';\n\ninterface RangeProps {\n  id: string; // id of the selected range\n  value: number; // New relative value\n}\n\n/**\n * Change Range relative value and re-calculate the relative values for the other ranges\n * @param {Datum1D} datum  spectrum 1d\n * @param {RangeProps} newRange\n */\nexport function changeRangeRelativeValue(datum: Datum1D, newRange: RangeProps) {\n  const index = datum.ranges.values.findIndex(\n    (range) => range.id === newRange.id,\n  );\n  if (index !== -1 && datum.ranges.options.sum) {\n    const { absolute, integration } = datum.ranges.values[index];\n    const ratio = absolute / newRange.value;\n    const sum = (newRange.value / integration) * datum.ranges.options.sum;\n    datum.ranges.options = {\n      ...datum.ranges.options,\n      mf: undefined,\n      moleculeKey: undefined,\n      sumAuto: false,\n      sum,\n    };\n\n    datum.ranges.values = datum.ranges.values.map((range) => {\n      return {\n        ...range,\n        integration: range.absolute / ratio,\n      };\n    });\n  }\n}\n","import { Datum1D } from '../../../types/data1d/Datum1D';\n\ninterface RangeSignalOption {\n  rangeID: string;\n  signalID: string;\n  newSignalValue: number;\n}\n\nexport function changeRangeSignal(datum: Datum1D, options: RangeSignalOption) {\n  const { rangeID, signalID, newSignalValue } = options;\n\n  let shiftValue = 0;\n  const rangeIndex = datum.ranges.values.findIndex(\n    (range) => range.id === rangeID,\n  );\n  if (rangeIndex !== -1) {\n    const signalIndex = datum.ranges.values[rangeIndex].signals.findIndex(\n      (signal) => signal.id === signalID,\n    );\n    shiftValue =\n      newSignalValue -\n      datum.ranges.values[rangeIndex].signals[signalIndex].delta;\n    datum.ranges.values[rangeIndex].signals[signalIndex].delta = newSignalValue;\n  }\n  return shiftValue;\n}\n","import { xyIntegration, xyMaxYPoint, xyMinYPoint } from 'ml-spectra-processing';\n\nimport { RangeDetectionResult, Datum1D } from '../../../types/data1d';\nimport generateID from '../../../utilities/generateID';\nimport { getShiftX } from '../shift/getShiftX';\n\ninterface DetectRangeOptions {\n  from: number;\n  to: number;\n}\n\nexport function detectRange(\n  datum: Datum1D,\n  options: DetectRangeOptions,\n): RangeDetectionResult {\n  const { from, to } = options;\n  const { x, re: y } = datum.data;\n\n  const absolute = xyIntegration({ x, y }, { from, to, reverse: true });\n  const min = xyMinYPoint({ x, y }, { from, to }).y;\n  const max = xyMaxYPoint({ x, y }, { from, to }).y;\n\n  const shiftX = getShiftX(datum);\n\n  return {\n    id: generateID(),\n    originFrom: from - shiftX,\n    originTo: to - shiftX,\n    from,\n    to,\n    absolute, // the real value,\n    min,\n    max,\n  };\n}\n","import { xyAutoRangesPicking } from 'nmr-processing';\n\nimport { Datum1D, Range } from '../../../types/data1d';\n\nconst defaultPeakPickingOptions = {\n  minMaxRatio: 1,\n  realTopDetection: true,\n  maxCriteria: true,\n  smoothY: false,\n  integrationSum: 100,\n  factorStd: 5,\n  clean: true,\n  sgOptions: { windowSize: 7, polynomial: 3 },\n};\n\nexport default function autoRangesDetection(\n  datum1D: Datum1D,\n  options: any = {},\n): Range[] {\n  // we calculate the noise but this could be improved\n\n  let { re, x } = datum1D.data;\n\n  const { originFrequency, nucleus } = datum1D.info;\n\n  const { windowFromIndex, windowToIndex, peakPicking } = options;\n\n  const peakPickingOptions = {\n    ...defaultPeakPickingOptions,\n    ...peakPicking,\n  };\n\n  const rangesOptions = {\n    frequency: originFrequency,\n    nucleus,\n    compile: true,\n    frequencyCluster: 13,\n    keepPeaks: true,\n  };\n\n  if (windowFromIndex !== undefined && windowToIndex !== undefined) {\n    x = x.slice(windowFromIndex, windowToIndex);\n    re = re.slice(windowFromIndex, windowToIndex);\n  }\n\n  if (originFrequency) {\n    // we calculate the number of points per Hz\n    let pointsPerHz = 1 / originFrequency / (x[1] - x[0]);\n    // we can consider a peak with of 0.5 Hz for the windowSize\n    let ws = Math.max(Math.round(pointsPerHz / 2), 5);\n    peakPickingOptions.sgOptions = {\n      windowSize: ws - (ws % 2) + 1,\n      polynomial: 3,\n    };\n  }\n  peakPickingOptions.smoothY = undefined;\n  peakPickingOptions.sgOptions = undefined;\n\n  const ranges = xyAutoRangesPicking(\n    { x, y: re },\n    {\n      peakPicking: peakPickingOptions,\n      ranges: rangesOptions,\n    },\n  );\n  return ranges as Range[];\n}\n","import { Datum1D } from '../../../types/data1d/Datum1D';\nimport { initSumOptions, SumParams } from '../SumManager';\n\nimport autoRangesDetection from './autoRangesDetection';\nimport { mapRanges } from './mapRanges';\nimport { updateRangesRelativeValues } from './updateRangesRelativeValues';\n\ninterface DetectRangesOptions {\n  windowFromIndex?: number;\n  windowToIndex?: number;\n  peakPicking: {\n    factorStd: number; // default 8\n    minMaxRatio: number; // default 0.1\n    integrationSum: number; // default 100\n    compile: boolean; //default true\n    frequencyCluster: number; // default 16\n    clean: boolean; // default true\n    keepPeaks: boolean; //default true\n  };\n  impurities?: {\n    solvent: string;\n  };\n}\n\nexport function detectRanges(\n  datum: Datum1D,\n  options: DetectRangesOptions & SumParams,\n) {\n  const { molecules, nucleus, ...detectOptions } = options;\n  detectOptions.impurities = { solvent: datum.info.solvent || '' };\n  const ranges = autoRangesDetection(datum, detectOptions);\n  datum.ranges.options = initSumOptions(datum.ranges.options, {\n    molecules,\n    nucleus,\n  });\n  datum.ranges.values = datum.ranges.values.concat(mapRanges(ranges, datum));\n  updateRangesRelativeValues(datum);\n}\n","import { Datum1D } from '../../../../types/data1d';\n\nexport function updateIntegralXShift(datum: Datum1D, shiftValue: number) {\n  datum.integrals.values = datum.integrals.values.map((integral) => ({\n    ...integral,\n    from: integral.originFrom + shiftValue,\n    to: integral.originTo + shiftValue,\n  }));\n}\n","import { xFindClosestIndex } from 'ml-spectra-processing';\n\nimport { Datum1D, Peak } from '../../../../types/data1d';\n\nexport function updatePeaksXShift(datum: Datum1D, shiftValue: number) {\n  datum.peaks.values = datum.peaks.values.map<Peak>((peak) => {\n    const delta = peak.originalX + shiftValue;\n    const xIndex = xFindClosestIndex(datum.data.x, delta);\n    return {\n      ...peak,\n      y: datum.data.re[xIndex],\n      x: peak.originalX + shiftValue,\n    };\n  });\n}\n","import { Datum1D } from '../../../../types/data1d';\n\nexport function updateRangesXShift(datum: Datum1D, shiftValue: number) {\n  datum.ranges.values = datum.ranges.values.map((range) => ({\n    ...range,\n    from: (range.originFrom || 0) + shiftValue,\n    to: (range.originTo || 0) + shiftValue,\n    signals:\n      range?.signals &&\n      range.signals.map((s) => ({\n        ...s,\n        delta: (s.originDelta || 0) + shiftValue,\n      })),\n  }));\n}\n","import { Datum1D } from '../../../types/data1d';\n\nimport { getShiftX } from './getShiftX';\nimport { updateIntegralXShift } from './internal/updateIntegralXShift';\nimport { updatePeaksXShift } from './internal/updatePeaksXShift';\nimport { updateRangesXShift } from './internal/updateRangesXShift';\n\nexport function updateXShift(datum: Datum1D) {\n  const shiftX = getShiftX(datum);\n  updatePeaksXShift(datum, shiftX);\n  updateRangesXShift(datum, shiftX);\n  updateIntegralXShift(datum, shiftX);\n}\n","export const DEFAULT_YAXIS_SHIFT_VALUE = 20;\n\nexport enum DISPLAYER_MODE {\n  DM_1D = '1D',\n  DM_2D = '2D',\n}\n\nexport const MARGIN = {\n  '2D': { top: 100, right: 50, bottom: 70, left: 100 },\n  '1D': {\n    top: 10,\n    right: 10,\n    bottom: 70,\n    left: 10,\n  },\n};\n","import { initiateDatum1D } from './Spectrum1D';\n\nexport function fromBruker(result, options = {}, usedColors = {}) {\n  const { dependentVariables, info, meta, source } = result;\n  let data = getData(dependentVariables[0].components);\n  if (data.im) info.isComplex = true;\n\n  if (Array.isArray(info.nucleus)) info.nucleus = info.nucleus[0];\n\n  const datum1D = initiateDatum1D(\n    {\n      ...options,\n      source,\n      info,\n      meta,\n      data,\n    },\n    usedColors,\n  );\n\n  return datum1D;\n}\n\nexport function fromCSD(result, options = {}, usedColors = {}) {\n  let dimension = result.dimensions[0];\n  let dependentVariables = result.dependentVariables;\n\n  let quantityName = dimension.quantityName;\n  let n = dimension.count;\n  let incr = dimension.increment.magnitude;\n  let origin = dimension.originOffset.magnitude;\n  let offset = dimension.coordinatesOffset.magnitude;\n\n  let buffer = dependentVariables[0].components[0];\n  let re: number[] = [];\n  let im: number[] = [];\n  for (let i = buffer.length - 1; i > 0; i -= 2) {\n    re.push(buffer[i - 1]);\n    im.push(buffer[i]);\n  }\n\n  let data: any = {};\n  let i, x0;\n  switch (quantityName) {\n    case 'frequency':\n      x0 = 0 + (offset / origin) * 1000000;\n      i = (incr / origin) * 1000000;\n      data.re = re;\n      data.im = im;\n      break;\n    case 'time':\n      x0 = origin;\n      i = incr;\n      data.re = re.reverse();\n      data.im = im.reverse().map((z) => -z);\n      break;\n    default:\n      break;\n  }\n\n  let scale: number[] = [];\n  for (let x = 0; x < n; x++) {\n    scale.push(x0 + x * i);\n  }\n\n  data.x = scale;\n\n  const datum1D = initiateDatum1D(\n    {\n      ...options,\n      data,\n    },\n    usedColors,\n  );\n  return datum1D;\n}\n\nexport function fromParsedJcamp(\n  parsedJcamp,\n  options,\n  usedColors,\n  jcampSpectrumIndex: number,\n) {\n  const { dependentVariables, info, meta } = parsedJcamp;\n  let data = getData(dependentVariables[0].components);\n  if (Array.isArray(info.nucleus)) info.nucleus = info.nucleus[0];\n  const datum1D = initiateDatum1D(\n    {\n      ...options,\n      source: { ...options.source, jcampSpectrumIndex },\n      display: {\n        ...options.display,\n        name: options?.display?.name ? options.display.name : info?.title,\n      },\n      info,\n      meta,\n      data,\n    },\n    usedColors,\n  );\n\n  return datum1D;\n}\n\nfunction getData(spectra) {\n  let x = spectra[0]?.data?.x ? spectra[0].data.x : [];\n  let re = spectra[0]?.data?.y ? spectra[0].data.y : [];\n  let im = spectra[1]?.data?.y ? spectra[1].data.y : null;\n\n  if (x[0] > x[1]) {\n    x.reverse();\n    re.reverse();\n    if (im) im.reverse();\n  }\n  return { x, re, im };\n}\n","import { zoneToX } from 'ml-spectra-processing';\n\nimport { UsedColors } from '../../../types/UsedColors';\nimport { initiateDatum1D } from '../../data1d/Spectrum1D';\nimport { Datum2D } from '../../types/data2d/Datum2D';\n\n/**\n * calculate the missing projection\n */\n\nexport function getMissingProjection(\n  datum: Datum2D,\n  nucleus: string,\n  usedColors: UsedColors,\n) {\n  let index = datum.info.nucleus.indexOf(nucleus);\n  // temporary because nucleus was undefined;\n  if (index === -1) index = 0;\n\n  let info = {\n    nucleus: datum.info.nucleus[index], // 1H, 13C, 19F, ...\n    isFid: false,\n    isComplex: false, // if isComplex is true that mean it contains real/ imaginary  x set, if not hid re/im button .\n    dimension: 1,\n  };\n\n  let from = index === 0 ? datum.data.minX : datum.data.minY;\n  let to = index === 0 ? datum.data.maxX : datum.data.maxY;\n  let nbPoints = index === 0 ? datum.data.z[0].length : datum.data.z.length;\n  let projection = new Float64Array(nbPoints);\n  if (index === 1) {\n    for (let i = 0; i < datum.data.z.length; i++) {\n      for (let j = 0; j < datum.data.z[0].length; j++) {\n        projection[i] += datum.data.z[i][j];\n      }\n    }\n  } else {\n    for (let i = 0; i < datum.data.z[0].length; i++) {\n      for (const z of datum.data.z) {\n        projection[i] += z[i];\n      }\n    }\n  }\n\n  let data = {\n    x: zoneToX({ from, to }, nbPoints),\n    re: projection,\n  };\n  return initiateDatum1D({ info, data }, usedColors);\n}\n","import { zoneToX } from 'ml-spectra-processing';\n\nimport { initiateDatum1D } from '../../data1d/Spectrum1D';\nimport { Datum2D } from '../../types/data2d';\n\n/** get 2d projection\n * @param {number} x in ppm\n * @param {number} y in ppm\n */\n\ninterface SlicePosition {\n  x: number;\n  y: number;\n}\n\nexport function getSlice(spectrum: Datum2D, position: SlicePosition) {\n  const data = spectrum.data;\n  const xStep = (data.maxX - data.minX) / (data.z[0].length - 1);\n  const yStep = (data.maxY - data.minY) / (data.z.length - 1);\n  const xIndex = Math.floor((position.x - data.minX) / xStep);\n  const yIndex = Math.floor((position.y - data.minY) / yStep);\n\n  if (xIndex < 0 || xIndex >= data.z[0].length) return;\n  if (yIndex < 0 || yIndex >= data.z.length) return;\n\n  let infoX = {\n    nucleus: spectrum.info.nucleus[0], // 1H, 13C, 19F, ...\n    isFid: false,\n    isComplex: false, // if isComplex is true that mean it contains real/ imaginary  x set, if not hid re/im button .\n    dimension: 1,\n  };\n\n  let dataX = {\n    x: zoneToX(\n      { from: spectrum.data.minX, to: spectrum.data.maxX },\n      spectrum.data.z[0].length,\n    ),\n    re: new Float64Array(spectrum.data.z[0].length),\n  };\n\n  for (let i = 0; i < spectrum.data.z[0].length; i++) {\n    dataX.re[i] += spectrum.data.z[yIndex][i];\n  }\n\n  let infoY = {\n    nucleus: spectrum.info.nucleus[1], // 1H, 13C, 19F, ...\n    isFid: false,\n    isComplex: false, // if isComplex is true that mean it contains real/ imaginary  x set, if not hid re/im button .\n    dimension: 1,\n  };\n\n  let dataY = {\n    x: zoneToX(\n      { from: spectrum.data.minY, to: spectrum.data.maxY },\n      spectrum.data.z.length,\n    ),\n    re: new Float64Array(spectrum.data.z.length),\n  };\n\n  let index = spectrum.data.z.length - 1;\n  for (let i = 0; i < spectrum.data.z.length; i++) {\n    dataY.re[i] += spectrum.data.z[index--][xIndex];\n  }\n\n  const horizontal = initiateDatum1D({ info: infoX, data: dataX }, {});\n  const vertical = initiateDatum1D({ info: infoY, data: dataY }, {});\n  return { horizontal, vertical };\n}\n","import { Conrec } from 'ml-conrec';\n\nexport const defaultContourOptions = {\n  positive: {\n    contourLevels: [0, 21],\n    numberOfLayers: 10,\n  },\n  negative: {\n    contourLevels: [0, 21],\n    numberOfLayers: 10,\n  },\n};\n\nexport default class Processing2D {\n  private options: any;\n  private currentLevelPositive: number;\n  private currentLevelNegative: number;\n  private conrec: Conrec;\n  private median: number;\n  private minMax: any;\n\n  public constructor(\n    minMax: any,\n    options: any = defaultContourOptions,\n    defaultLevel: any = {\n      positive: 10,\n      negative: 10,\n    },\n  ) {\n    this.options = options;\n    const { positive, negative } = defaultLevel;\n\n    this.currentLevelPositive = positive;\n    this.currentLevelNegative = negative;\n\n    const xs = getRange(minMax.minX, minMax.maxX, minMax.z[0].length);\n\n    const ys = getRange(minMax.minY, minMax.maxY, minMax.z.length);\n\n    this.conrec = new Conrec(minMax.z, { xs, ys, swapAxes: false });\n\n    this.median = minMax.noise;\n\n    this.minMax = minMax;\n  }\n\n  public getLevel() {\n    return {\n      levelPositive: this.currentLevelPositive,\n      levelNegative: this.currentLevelNegative,\n    };\n  }\n\n  public setLevel(levelPositive, levelNegative) {\n    this.currentLevelPositive = levelPositive;\n    this.currentLevelNegative = levelNegative;\n  }\n\n  public setOptions(options) {\n    const positiveBoundary = options.positive.contourLevels;\n    const negativeBoundary = options.negative.contourLevels;\n\n    if (this.currentLevelPositive >= positiveBoundary[1]) {\n      this.currentLevelPositive = positiveBoundary[1];\n    } else if (this.currentLevelPositive <= positiveBoundary[0]) {\n      this.currentLevelPositive = positiveBoundary[0];\n    }\n\n    if (this.currentLevelNegative >= negativeBoundary[1]) {\n      this.currentLevelNegative = negativeBoundary[1];\n    } else if (this.currentLevelNegative <= negativeBoundary[0]) {\n      this.currentLevelNegative = negativeBoundary[0];\n    }\n\n    this.options = options;\n  }\n\n  public wheel(value) {\n    const sign = Math.sign(value);\n    const positiveBoundary = this.options.positive.contourLevels;\n    const negativeBoundary = this.options.negative.contourLevels;\n\n    if (\n      (this.currentLevelPositive > positiveBoundary[0] && sign === -1) ||\n      (this.currentLevelPositive < positiveBoundary[1] && sign === 1)\n    ) {\n      this.currentLevelPositive += sign;\n    }\n\n    if (\n      (this.currentLevelNegative > negativeBoundary[0] && sign === -1) ||\n      (this.currentLevelNegative < negativeBoundary[1] && sign === 1)\n    ) {\n      this.currentLevelNegative += sign;\n    }\n  }\n\n  public shiftWheel(value) {\n    const sign = Math.sign(value);\n    const [min, max] = this.options.positive.contourLevels;\n    if (\n      (this.currentLevelPositive === min && sign === -1) ||\n      (this.currentLevelPositive >= max && sign === 1)\n    ) {\n      return;\n    }\n\n    this.currentLevelPositive += sign;\n    return [];\n  }\n\n  public drawContours() {\n    const zoomPositive = this.currentLevelPositive / 2 + 1;\n    const zoomNegative = this.currentLevelNegative / 2 + 1;\n    const {\n      positive: { numberOfLayers: numberOfPositiveLayer },\n      negative: { numberOfLayers: numberOfNegativeLayer },\n    } = this.options;\n    return {\n      positive: this.getContours(zoomPositive, {\n        nbLevels: numberOfPositiveLayer,\n      }),\n      negative: this.getContours(zoomNegative, {\n        negative: true,\n        nbLevels: numberOfNegativeLayer,\n      }),\n    };\n  }\n\n  public getContours(zoomLevel, options: any = {}) {\n    const { negative = false, timeout = 2000, nbLevels = 10 } = options;\n\n    const max = Math.max(\n      Math.abs(this.minMax.maxZ),\n      Math.abs(this.minMax.minZ),\n    );\n\n    let _range = getRange(\n      this.median * 1 * Math.pow(2, zoomLevel),\n      max,\n      nbLevels,\n      2,\n    );\n\n    if (negative) {\n      _range = _range.map((value) => -value);\n    }\n    let contours = [];\n    try {\n      contours = this.conrec.drawContour({\n        contourDrawer: 'basic', // shape or basic\n        levels: _range,\n        timeout: timeout,\n      });\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log(e);\n      throw e;\n    }\n\n    return contours;\n  }\n}\n\nfunction getRange(min: number, max: number, length: number, exp?: number) {\n  if (exp !== undefined) {\n    const factors: number[] = [];\n\n    factors[0] = 0;\n\n    for (let i = 1; i <= length; i++) {\n      factors[i] = factors[i - 1] + (exp - 1) / Math.pow(exp, i);\n    }\n\n    const lastFactor = factors[length];\n\n    const result = new Array(length);\n\n    for (let i = 0; i < length; i++) {\n      result[i] = (max - min) * (1 - factors[i + 1] / lastFactor) + min;\n    }\n\n    return result;\n  } else {\n    const step = (max - min) / (length - 1);\n\n    return range(min, max + step / 2, step);\n  }\n}\n\nfunction range(from: number, to: number, step: number) {\n  const result: number[] = [];\n\n  for (let i = from; i < to; i += step) {\n    result.push(i);\n  }\n\n  return result;\n}\n","import * as FiltersManager from '../../FiltersManager';\nimport { Datum2D } from '../../types/data2d';\nimport generateID from '../../utilities/generateID';\nimport { get2DColor } from '../../utilities/getColor';\nimport Processing2D, { defaultContourOptions } from '../Processing2D';\n\nexport function initiateDatum2D(options: any, usedColors = {}): Datum2D {\n  const datum: any = {};\n\n  datum.id = options.id || generateID();\n  datum.source = Object.assign(\n    {\n      jcampURL: null,\n    },\n    options.source,\n  );\n  datum.display = Object.assign(\n    {\n      name: options.display?.name ? options.display.name : generateID(),\n      ...getColor(options, usedColors),\n      isPositiveVisible: true,\n      isNegativeVisible: true,\n      isVisible: true,\n      contourOptions: defaultContourOptions,\n      dimension: 2,\n    },\n    options.display,\n  );\n\n  datum.info = Object.assign(\n    {\n      nucleus: ['1H', '1H'],\n      isFt: true,\n      isFid: false,\n      isComplex: false, // if isComplex is true that mean it contains real/ imaginary  x set, if not hid re/im button .\n      dimension: 2,\n    },\n    options.info,\n  );\n\n  datum.originalInfo = datum.info;\n  datum.meta = Object.assign({}, options.meta);\n  datum.data = Object.assign(\n    {\n      z: [],\n      minX: 0,\n      minY: 0,\n      maxX: 0,\n      maxY: 0,\n    },\n    options.data,\n  );\n  datum.originalData = datum.data;\n  datum.filters = Object.assign([], options.filters);\n\n  datum.zones = Object.assign({ values: [], options: {} }, options.zones);\n\n  datum.processingController = new Processing2D(\n    datum.data,\n    datum.display.contourOptions,\n  );\n\n  //reapply filters after load the original data\n  FiltersManager.reapplyFilters(datum);\n\n  return datum;\n}\n\nfunction getColor(options, usedColors) {\n  let color = { positiveColor: 'red', negativeColor: 'blue' };\n  if (\n    options?.display?.negativeColor === undefined ||\n    options?.display?.positiveColor === undefined\n  ) {\n    color = get2DColor(options.info.experiment, usedColors['2d'] || []);\n  }\n\n  if (usedColors['2d']) {\n    usedColors['2d'].push(color.positiveColor);\n  }\n  return color;\n}\n","import { Datum1D } from '../../types/data1d';\nimport { Datum2D } from '../../types/data2d';\n\nexport function isSpectrum2D(spectrum: Datum1D | Datum2D): spectrum is Datum2D {\n  return spectrum.info.dimension === 2;\n}\n","import * as Filters from '../../../Filters';\nimport { Datum2D } from '../../../types/data2d';\n\nexport function getShift(datum: Datum2D): { xShift: number; yShift: number } {\n  let shift: any = { xShift: 0, yShift: 0 };\n  if (datum?.filters) {\n    shift = datum.filters.reduce(\n      (acc, filter) => {\n        if (filter.name === Filters.shift2DX.id) {\n          acc.xShift = filter?.flag ? filter.value : 0;\n        }\n        if (filter.name === Filters.shift2DY.id) {\n          acc.yShift = filter?.flag ? filter.value : 0;\n        }\n        return acc;\n      },\n      { xShift: 0, yShift: 0 },\n    );\n  }\n\n  return shift;\n}\n","import { Datum2D } from '../../../types/data2d';\n\nimport { getShift } from './getShift';\n\nexport function updateShift(datum: Datum2D) {\n  const { xShift, yShift } = getShift(datum);\n  updateZonesShift(datum, {\n    xShift,\n    yShift,\n  });\n}\n\nfunction updateZonesShift(datum: Datum2D, { xShift, yShift }) {\n  datum.zones.values = datum.zones.values.map((zone) => ({\n    ...zone,\n    signals: zone.signals?.map((signal) => ({\n      ...signal,\n      x: { ...signal.x, delta: signal.x.originDelta + xShift },\n      y: { ...signal.y, delta: signal.y.originDelta + yShift },\n    })),\n  }));\n}\n","import { DataExportOptions, DataExportOptionsType } from '../../SpectraManager';\nimport { Datum2D } from '../../types/data2d';\n\nexport function toJSON(\n  datum: Datum2D,\n  dataExportOption: DataExportOptionsType,\n) {\n  return {\n    id: datum.id,\n\n    ...(dataExportOption === DataExportOptions.ROW_DATA ||\n    (dataExportOption === DataExportOptions.DATA_SOURCE &&\n      !datum.source.jcampURL)\n      ? {\n          data: datum.originalData,\n          info: datum.originalInfo,\n          meta: datum.meta,\n          source: {\n            jcampURL: null,\n          },\n        }\n      : {\n          source: {\n            jcampURL: datum.source.jcampURL,\n            jcampSpectrumIndex: datum.source.jcampSpectrumIndex,\n          },\n        }),\n    zones: datum.zones,\n    filters: datum.filters,\n    display: datum.display,\n  };\n}\n","import { Datum2D } from '../../../types/data2d';\n\n/**\n *\n * @param {number} zoneID\n * @param {object} signal\n * @param {number} signal.x\n * @param {number} signal.y\n * @param {string} signal.id\n */\nexport function changeZoneSignal(\n  datum: Datum2D,\n  zoneID,\n  newSignal,\n): { xShift: number; yShift: number } {\n  const zoneIndex = datum.zones.values.findIndex((zone) => zone.id === zoneID);\n  if (zoneIndex !== -1) {\n    const signalIndex = datum.zones.values[zoneIndex].signals.findIndex(\n      (s) => s.id === newSignal.id,\n    );\n\n    const zone = datum.zones.values[zoneIndex];\n    if (signalIndex !== -1) {\n      const originalSignal: any = zone.signals[signalIndex];\n      const xShift =\n        newSignal?.x || newSignal?.x === 0\n          ? newSignal.x - originalSignal.x.delta\n          : 0;\n      const yShift =\n        newSignal?.y || newSignal?.y === 0\n          ? newSignal.y - originalSignal.y?.delta\n          : 0;\n\n      return { xShift, yShift };\n    }\n  }\n  return { xShift: 0, yShift: 0 };\n}\n","import { xyzAutoZonesPicking } from 'nmr-processing';\n\nimport { Datum2D } from '../../../types/data2d';\n\nexport interface DetectionZonesOptions {\n  selectedZone: {\n    fromX: number;\n    fromY: number;\n    toX: number;\n    toY: number;\n  };\n  thresholdFactor: number;\n  convolutionByFFT?: boolean;\n  enhanceSymmetry?: boolean;\n}\n\n/**\n *\n * @param {object} options\n * @param {object} options.selectedZone\n * @param {number} options.selectedZone.fromX\n * @param {number} options.selectedZone.fromY\n * @param {number} options.selectedZone.toX\n * @param {number} options.selectedZone.toY\n * @param {number} options.thresholdFactor\n * @param {boolean} options.convolutionByFFT\n */\nexport function getDetectionZones(\n  datum: Datum2D,\n  options: DetectionZonesOptions,\n) {\n  let dataMatrix = {};\n  if (options.selectedZone) {\n    options.enhanceSymmetry = false;\n    dataMatrix = getSubMatrix(datum, options.selectedZone);\n  } else {\n    dataMatrix = datum.data;\n  }\n  return autoZonesDetection(dataMatrix, { ...options, info: datum.info });\n}\n\nfunction autoZonesDetection(data, options) {\n  const { thresholdFactor, clean, maxPercentCutOff, convolutionByFFT } =\n    options;\n\n  const { nucleus: nuclei, originFrequency } = options.info;\n  const { enhanceSymmetry = nuclei[0] === nuclei[1] } = options;\n\n  let zones = xyzAutoZonesPicking(data, {\n    nuclei,\n    observedFrequencies: originFrequency,\n    thresholdFactor,\n    clean,\n    maxPercentCutOff,\n    enhanceSymmetry,\n    convolutionByFFT,\n  });\n\n  return zones;\n}\n\nfunction getSubMatrix(datum, selectedZone) {\n  const { fromX, toX, fromY, toY } = selectedZone;\n  const data = datum.data;\n  const xStep = (data.maxX - data.minX) / (data.z[0].length - 1);\n  const yStep = (data.maxY - data.minY) / (data.z.length - 1);\n  let xIndexFrom = Math.max(Math.floor((fromX - data.minX) / xStep), 0);\n  let yIndexFrom = Math.max(Math.floor((fromY - data.minY) / yStep), 0);\n  let xIndexTo = Math.min(\n    Math.floor((toX - data.minX) / xStep),\n    data.z[0].length - 1,\n  );\n  let yIndexTo = Math.min(\n    Math.floor((toY - data.minY) / yStep),\n    data.z.length - 1,\n  );\n\n  if (xIndexFrom > xIndexTo) [xIndexFrom, xIndexTo] = [xIndexTo, xIndexFrom];\n  if (yIndexFrom > yIndexTo) [yIndexFrom, yIndexTo] = [yIndexTo, yIndexFrom];\n\n  let dataMatrix: any = {\n    z: [],\n    maxX: data.minX + xIndexTo * xStep,\n    minX: data.minX + xIndexFrom * xStep,\n    maxY: data.minY + yIndexTo * yStep,\n    minY: data.minY + yIndexFrom * yStep,\n  };\n  let maxZ = Number.MIN_SAFE_INTEGER;\n  let minZ = Number.MAX_SAFE_INTEGER;\n\n  let nbXPoints = xIndexTo - xIndexFrom + 1;\n\n  for (let j = yIndexFrom; j < yIndexTo; j++) {\n    let row = new Float32Array(nbXPoints);\n    let xIndex = xIndexFrom;\n    for (let i = 0; i < nbXPoints; i++) {\n      row[i] = data.z[j][xIndex++];\n    }\n    for (let rowValue of row) {\n      if (maxZ < rowValue) maxZ = rowValue;\n      if (minZ > rowValue) minZ = rowValue;\n    }\n    dataMatrix.z.push(Array.from(row));\n  }\n  dataMatrix.minZ = minZ;\n  dataMatrix.maxZ = maxZ;\n  return dataMatrix;\n}\n","import { NMRZone } from 'nmr-processing';\n\nimport { DatumKind } from '../../../constants/SignalsKinds';\nimport { Zone } from '../../../types/data2d';\nimport generateID from '../../../utilities/generateID';\nimport { getShift } from '../shift/getShift';\n\nimport { DetectionZonesOptions, getDetectionZones } from './getDetectionZones';\n\nexport function detectZones(datum, options: DetectionZonesOptions): Zone[] {\n  const zones = getDetectionZones(datum, options);\n  const { xShift, yShift } = getShift(datum);\n\n  const { minX, maxX, minY, maxY } = datum.data;\n  const xError = Math.abs(maxX - minX) / 10000;\n  const yError = Math.abs(maxY - minY) / 10000;\n\n  const formattedZones = zones.reduce((acc: Zone[], zone: NMRZone) => {\n    const newXRange = zone.x || { from: 0, to: 0 };\n    const newYRange = zone.y || { from: 0, to: 0 };\n\n    // check if the zone is already exists\n    for (const { x, y } of datum.zones.values) {\n      if (\n        Math.abs(newXRange.from - x.from) < xError &&\n        Math.abs(newXRange.to - x.to) < xError &&\n        Math.abs(newYRange.from - y.from) < yError &&\n        Math.abs(newYRange.to - y.to) < yError\n      ) {\n        return acc;\n      }\n    }\n\n    const signals = zone.signals.map((signal) => {\n      return {\n        id: generateID(),\n        peaks: signal.peaks,\n        x: {\n          originDelta: signal.x.delta - xShift,\n          ...signal.x,\n        },\n        y: {\n          originDelta: signal.y.delta - yShift,\n          ...signal.y,\n        },\n        kind: 'signal',\n      };\n    });\n\n    acc.push({\n      id: generateID(),\n      x: { from: newXRange.from, to: newXRange.to },\n      y: { from: newYRange.from, to: newYRange.to },\n      signals,\n      kind: DatumKind.signal,\n    });\n\n    return acc;\n  }, []);\n  return formattedZones;\n}\n","import { DatumKind } from '../../../constants/SignalsKinds';\nimport { Zone } from '../../../types/data2d';\nimport generateID from '../../../utilities/generateID';\nimport { getShift } from '../shift/getShift';\n\nimport { DetectionZonesOptions, getDetectionZones } from './getDetectionZones';\n\n/**\n *\n * @param {object} options\n * @param {object} options.selectedZone\n * @param {number} options.selectedZone.fromX\n * @param {number} options.selectedZone.fromY\n * @param {number} options.selectedZone.toX\n * @param {number} options.selectedZone.toY\n * @param {number} options.thresholdFactor\n * @param {boolean} options.convolutionByFFT\n */\nexport function detectZonesManual(datum, options: DetectionZonesOptions) {\n  const zones = getDetectionZones(datum, options);\n  const { xShift, yShift } = getShift(datum);\n  const formattedZones: Zone[] = zones.map((zone) => {\n    const signals = zone.signals.map((signal) => {\n      return {\n        id: generateID(),\n        peaks: signal.peaks,\n        x: {\n          originDelta: signal.x.delta - xShift,\n          ...signal.x,\n        },\n        y: {\n          originDelta: signal.y.delta - yShift,\n          ...signal.y,\n        },\n        kind: signal.kind || 'signal',\n      };\n    });\n    return {\n      id: generateID(),\n      x: zone.x,\n      y: zone.y,\n      signals,\n      kind: DatumKind.signal,\n    };\n  }, []);\n\n  return formattedZones;\n}\n","import { initiateDatum2D } from './Spectrum2D';\n\nexport function fromParsedJcamp(\n  parsedJcamp,\n  options,\n  usedColors,\n  jcampSpectrumIndex: number,\n) {\n  const { dependentVariables, info, meta } = parsedJcamp;\n  let data = dependentVariables[0].components;\n  const ob = initiateDatum2D(\n    {\n      ...options,\n      source: { ...options?.source, jcampSpectrumIndex },\n      display: {\n        ...options.display,\n        name: options?.display?.name ? options.display.name : info?.title,\n      },\n      info,\n      meta,\n      data,\n    },\n    usedColors,\n  );\n  return ob;\n}\n\nexport function fromBruker(result, options = {}, usedColors = {}) {\n  const { dependentVariables, meta, source } = result;\n  let data = dependentVariables[0].components;\n  const datum2D = initiateDatum2D(\n    {\n      ...options,\n      source,\n      meta,\n      data,\n    },\n    usedColors,\n  );\n\n  return datum2D;\n}\n\n// TODO: implement this.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function fromCSD(result, options = {}, usedColors = {}) {\n  const datum2D = initiateDatum2D({}, usedColors);\n  return datum2D;\n}\n","export function changeKeys(data, changedKeys) {\n  return JSON.parse(JSON.stringify(data), function reviver(key, value) {\n    if (key in changedKeys) {\n      this[changedKeys[key]] = value;\n      return;\n    }\n    return value;\n  });\n}\n","import { changeKeys } from './changeKeys';\n\n/**\n * changes from version 0 to version 1:\n * all change done on objects keys naming\n *  j         =>   js\n *  signal    =>   signals\n *  integral  =>   integration\n *  peak      =>   peaks\n *  diaID     =>   diaIDs\n *\n */\n\nexport default function migrateToVersion1(data: any): any {\n  if (data?.version === 1) return data;\n\n  const newData = { ...data, version: 1 };\n  const changedKeys = {\n    j: 'js',\n    signal: 'signals',\n    integral: 'integration',\n    peak: 'peaks',\n    diaID: 'diaIDs',\n  };\n\n  for (const spectrum of newData.spectra) {\n    if (spectrum.ranges) {\n      spectrum.ranges = changeKeys(spectrum.ranges, changedKeys);\n    } else if (spectrum.zones) {\n      spectrum.zones = changeKeys(spectrum.zones, changedKeys);\n    }\n  }\n\n  return newData;\n}\n","import { changeKeys } from './changeKeys';\n\n/*\n    * changes from version 1 to version 2:\n           1- peaks :\n                delta => x , originDelta => originalX, intensity => y,\n               paths:\n               - peak\n\n           2- range/signals :\n                atomIDs => atoms , intensity => y,\n\n              paths:\n               - range > signals\n               - range > signals > js\n               - range > signals > peaks\n\n           3- zone/signals :\n              we have two cases the\n              a)\n                get out the inner object fromTo:{from,to} => {from,to}\n              paths:\n               - zone > signals > x\n               - zone > signals > y\n              b)\n                { fromTo,deltaX,resolutionX,nucleusX,deltaY,resolutionY,nucleusY,shiftX,shiftY} =>\n                {\n                  x: {\n                    from: fromTo[0].from,\n                    to: fromTo[0].to,\n                    delta: deltaX,\n                    resolution: resolutionX,\n                    nucleus: nucleusX,\n                  },\n                  y: {\n                    from: fromTo[1].from,\n                    to: fromTo[1].to,\n                    delta: deltaY,\n                    resolution: resolutionY,\n                    nucleus: nucleusY,\n                  },\n                  }\n\n                paths:\n                -zone>signals\n    */\n\nexport default function migrateToVersion2(data: any): any {\n  if (data?.version === 2) return data;\n\n  const newData = { ...data, version: 2 };\n\n  const changedKeys = {\n    peaks: {\n      delta: 'x',\n      originDelta: 'originalX',\n      intensity: 'y',\n    },\n    ranges: {\n      atomIDs: 'atoms', // signal\n      intensity: 'y', // signal > peaks\n    },\n  };\n\n  for (const spectrum of newData.spectra) {\n    if (spectrum.peaks) {\n      spectrum.peaks = changeKeys(spectrum.peaks, changedKeys.peaks);\n    } else if (spectrum.ranges) {\n      spectrum.ranges = changeKeys(spectrum.ranges, changedKeys.ranges);\n    } else if (spectrum.zones) {\n      spectrum.zones.values = mapZones(spectrum.zones.values);\n    }\n  }\n\n  return newData;\n}\n\nfunction mapZones(zones) {\n  return zones.map((zone) => {\n    if (zone.signals) {\n      zone.signals = zone.signals.map((signal) => {\n        if (signal.x && signal.y) {\n          const {\n            x: { fromTo: fromToX, ...resX },\n            y: { fromTo: fromToY, ...resY },\n          } = signal;\n          signal = {\n            ...signal,\n            x: { ...resX, ...fromToX },\n            y: { ...resY, ...fromToY },\n          };\n        } else {\n          const {\n            fromTo,\n            deltaX,\n            resolutionX,\n            nucleusX,\n            deltaY,\n            resolutionY,\n            nucleusY,\n\n            shiftX,\n            shiftY,\n            ...resSignal\n          } = signal;\n          signal = {\n            ...resSignal,\n            x: {\n              from: fromTo[0].from,\n              to: fromTo[0].to,\n              delta: deltaX,\n              resolution: resolutionX,\n              nucleus: nucleusX,\n            },\n            y: {\n              from: fromTo[1].from,\n              to: fromTo[1].to,\n              delta: deltaY,\n              resolution: resolutionY,\n              nucleus: nucleusY,\n            },\n          };\n        }\n        return signal;\n      }, []);\n    }\n    return zone;\n  }, []);\n}\n","import migrateToVersion1 from './migrateToVersion1';\nimport migrateToVersion2 from './migrateToVersion2';\n\nexport const CURRENT_EXPORT_VERSION = 2;\n\nfunction migrationPipe(functions: ((data: any) => any)[]) {\n  return (input: any) => functions.reduce((input, func) => func(input), input);\n}\n\nexport function migrate(data: any): any {\n  let migrationsFuncs: ((data: any) => any)[] = [\n    migrateToVersion1,\n    migrateToVersion2,\n  ];\n  let index = data?.version || 0;\n\n  if (index > CURRENT_EXPORT_VERSION) {\n    throw new Error(\n      'This file can not be imported using the current NMRium version, Please move to the new one !!! ',\n    );\n  }\n\n  return migrationPipe(migrationsFuncs.slice(index))(data);\n}\n","const mfCheck = /^(?:[A-Z][a-z]?\\d* *)+$/;\n\nexport default function getAtomsFromMF(mf: string): Record<string, number> {\n  if (!mfCheck.test(mf)) {\n    throw Error(`MF can not be parsed: ${mf}`);\n  }\n  const atoms = {};\n  const parts = mf.matchAll(/(?<atom>[A-Z][a-z]?)(?<number>[0-9]*)/g);\n  for (const part of parts) {\n    const { atom, number } = part.groups as { atom: string; number: string };\n    if (!atoms[atom]) {\n      atoms[atom] = 0;\n    }\n    atoms[atom] += number === '' ? 1 : Number(number);\n  }\n\n  return atoms;\n}\n","import { Molecule as OCLMolecule } from 'openchemlib/full';\n\nimport generateID from '../utilities/generateID';\nimport getAtomsFromMF from '../utilities/getAtomsFromMF';\n\ninterface MoleculeInnerProps {\n  key: string;\n  molfile: string;\n}\nexport interface Molecule extends MoleculeInnerProps {\n  mf: string;\n  em: number;\n  mw: number;\n  svg: string;\n  atoms: Record<string, number>;\n}\n\nexport function initMolecule(\n  options: Partial<MoleculeInnerProps> = {},\n): Molecule {\n  const key = options.key || generateID();\n  const molfile = options.molfile || '';\n\n  const mol = OCLMolecule.fromMolfile(molfile);\n  const mfInfo = mol.getMolecularFormula();\n\n  return {\n    key,\n    molfile,\n    mf: mfInfo.formula,\n    em: mfInfo.absoluteWeight,\n    mw: mfInfo.relativeWeight,\n    svg: mol.toSVG(50, 50),\n    atoms: getAtomsFromMF(mfInfo.formula),\n  };\n}\n\nexport function toJSON(molecule: Molecule): { molfile: string } {\n  return {\n    molfile: molecule.molfile,\n  };\n}\n","import { fromJEOL, fromJCAMP, fromBruker } from 'nmr-parser';\n\nimport { DISPLAYER_MODE } from '../component/reducer/core/Constants';\n\nimport * as Data1DManager from './data1d/Data1DManager';\nimport * as Datum1D from './data1d/Spectrum1D';\nimport * as Data2DManager from './data2d/Data2DManager';\nimport * as Datum2D from './data2d/Spectrum2D';\nimport { CURRENT_EXPORT_VERSION } from './migration/MigrationManager';\nimport * as Molecule from './molecules/Molecule';\n\nexport enum DataExportOptions {\n  ROW_DATA = 'ROW_DATA',\n  DATA_SOURCE = 'DATA_SOURCE',\n}\n\nexport type DataExportOptionsType = keyof typeof DataExportOptions;\n\nexport function addJcampFromURL(spectra, jcampURL, options, usedColors) {\n  return fetch(jcampURL)\n    .then((response) => response.arrayBuffer())\n    .then((jcamp) => {\n      addJcamp(spectra, jcamp, options, usedColors);\n    });\n}\n\nexport function addJcamp(spectra, jcamp, options, usedColors) {\n  options = options || {};\n  const entries = fromJCAMP(jcamp, {\n    noContour: true,\n    xy: true,\n    keepRecordsRegExp: /.*/,\n    profiling: true,\n  });\n  if (entries.length === 0) return;\n  // Should be improved when we have a more complex case\n  for (let index = 0; index < entries.length; index++) {\n    let entry = entries[index];\n\n    const components = entry.dependentVariables?.[0]?.components;\n    if (components && (components.length > 0 || components.z)) {\n      addJcampSS(spectra, { index, entry }, options, usedColors);\n    }\n  }\n}\n\nfunction addJcampSS(spectra, jcampDatum, options, usedColors) {\n  const source = options?.source || {};\n\n  if (\n    !('jcampSpectrumIndex' in source) ||\n    source.jcampSpectrumIndex === jcampDatum.index\n  ) {\n    const dimension = jcampDatum.entry.info.dimension;\n\n    if (dimension === 1) {\n      spectra.push(\n        Data1DManager.fromParsedJcamp(\n          jcampDatum.entry,\n          options,\n          usedColors,\n          jcampDatum.index,\n        ),\n      );\n    }\n    if (dimension === 2) {\n      // console.log(options, jcampDatum.entry);\n\n      spectra.push(\n        Data2DManager.fromParsedJcamp(\n          jcampDatum.entry,\n          options,\n          usedColors,\n          jcampDatum.index,\n        ),\n      );\n    }\n  }\n}\n\nfunction addData(spectra, datum, usedColors) {\n  const dimension = datum.info.dimension;\n  if (dimension === 1) {\n    spectra.push(Datum1D.initiateDatum1D(datum, usedColors));\n  }\n  if (dimension === 2) {\n    spectra.push(Datum2D.initiateDatum2D(datum, usedColors));\n  }\n}\n\nexport function addJDF(spectra, jdf, options: any = {}, usedColors: any = {}) {\n  // need to parse the jcamp\n  let converted = fromJEOL(jdf, {});\n  converted = converted[0];\n  let info = converted.description;\n  let metadata = info.metadata;\n  delete info.metadata;\n  info.acquisitionMode = 0;\n  info.experiment = info.dimension === 1 ? '1d' : '2d';\n  info.type = 'NMR SPECTRUM';\n  info.nucleus = info.nucleus[0];\n  info.numberOfPoints = info.numberOfPoints[0];\n  info.acquisitionTime = info.acquisitionTime[0];\n\n  info.baseFrequency = info.baseFrequency[0];\n  info.frequencyOffset = info.frequencyOffset[0];\n\n  info.spectralWidthClipped = converted.application.spectralWidthClipped;\n\n  if (info.dimension === 1) {\n    if (converted.dependentVariables) {\n      spectra.push(\n        Data1DManager.fromCSD(\n          converted,\n          {\n            ...options,\n            display: { ...options.display },\n            info: info,\n            meta: metadata,\n          },\n          usedColors,\n        ),\n      );\n    }\n  }\n  if (info.dimension === 2 && info.isFt) {\n    spectra.push(\n      Data2DManager.fromCSD(\n        converted,\n        {\n          ...options,\n          display: { ...options.display },\n          info,\n        },\n        usedColors,\n      ),\n    );\n  }\n}\n\nexport async function fromJSON(data: any[] = [], usedColors: any = {}) {\n  const spectra: any[] = [];\n  let promises: any[] = [];\n\n  for (let datum of data) {\n    const { jcamp, jcampURL } = datum?.source || {};\n    if (jcamp != null) {\n      addJcamp(spectra, jcamp, datum, usedColors);\n    } else if (jcampURL != null) {\n      promises.push(addJcampFromURL(spectra, jcampURL, datum, usedColors));\n    } else {\n      addData(spectra, datum, usedColors);\n    }\n  }\n  await Promise.all(promises);\n  return spectra;\n}\n\nexport async function addBruker(options, data, usedColors) {\n  const spectra: any[] = [];\n  let result = await fromBruker(data, {\n    xy: true,\n    noContours: true,\n    keepOriginal: true,\n  });\n  let entries = result;\n  for (let entry of entries) {\n    let { info, dependentVariables } = entry;\n    if (info.dimension === 1) {\n      if (dependentVariables[0].components) {\n        spectra.push(\n          Data1DManager.fromBruker(\n            entry,\n            {\n              ...options,\n              display: { ...options.display },\n            },\n            usedColors,\n          ),\n        );\n      }\n    } else if (info.dimension === 2) {\n      if (info.isFt) {\n        spectra.push(\n          Data2DManager.fromBruker(\n            entry,\n            {\n              ...options,\n              info,\n              display: { ...options.display },\n            },\n            usedColors,\n          ),\n        );\n      } else {\n        // in case of 2D FID spectrum\n      }\n    }\n  }\n  return spectra;\n}\n\n// handle zip files\nexport async function fromZip(zipFiles) {\n  const spectra = [];\n  for (let zipFile of zipFiles) {\n    await addBruker(\n      spectra,\n      { display: { name: zipFile.name } },\n      zipFile.binary,\n    );\n  }\n  return spectra;\n}\n\nexport function addJDFs(files, usedColors) {\n  const spectra = [];\n  for (const file of files) {\n    addJDF(\n      spectra,\n      file.binary,\n      {\n        display: {\n          name: file.name,\n        },\n        source: {\n          jcampURL: file.jcampURL ? file.jcampURL : null,\n          file,\n        },\n      },\n      usedColors,\n    );\n  }\n  return spectra;\n}\n\nexport function addJcamps(files, usedColors) {\n  const spectra = [];\n  for (const file of files) {\n    addJcamp(\n      spectra,\n      file.binary,\n      {\n        display: {\n          name: file.name,\n        },\n        source: {\n          jcampURL: file.jcampURL ? file.jcampURL : null,\n          file,\n        },\n      },\n      usedColors,\n    );\n  }\n  return spectra;\n}\n\nfunction getPreferences(state) {\n  const {\n    activeTab,\n    verticalAlign: { align },\n  } = state;\n  return {\n    activeTab,\n    ...(state.displayerMode === DISPLAYER_MODE.DM_1D\n      ? { verticalAlign: align }\n      : {}),\n  };\n}\n\n/**\n *\n * @param {object} state\n */\nexport function toJSON(\n  state,\n  dataExportOption: DataExportOptionsType = DataExportOptions.DATA_SOURCE,\n) {\n  const {\n    data,\n    molecules: mols,\n    correlations,\n    multipleAnalysis,\n    toolOptions: {\n      data: { exclusionZones },\n    },\n  } = state || {\n    data: [],\n    molecules: [],\n    correlations: {},\n    multipleAnalysis: {},\n    exclusionZones: {},\n  };\n  const spectra = data.map((ob) => {\n    return ob.info.dimension === 1\n      ? Datum1D.toJSON(ob, dataExportOption)\n      : Datum2D.toJSON(ob, dataExportOption);\n  });\n\n  const preferences = getPreferences(state);\n  const molecules = mols.map((mol) => Molecule.toJSON(mol));\n\n  return {\n    spectra,\n    molecules,\n    correlations,\n    multipleAnalysis,\n    exclusionZones,\n    version: CURRENT_EXPORT_VERSION,\n    preferences,\n  };\n}\n","import { DataExportOptions, DataExportOptionsType } from '../../SpectraManager';\nimport { Datum1D } from '../../types/data1d/Datum1D';\n\nexport function toJSON(\n  datum1D: Datum1D,\n  dataExportOption: DataExportOptionsType,\n) {\n  return {\n    id: datum1D.id,\n    display: datum1D.display,\n    ...(dataExportOption === DataExportOptions.ROW_DATA ||\n    (dataExportOption === DataExportOptions.DATA_SOURCE &&\n      !datum1D.source.jcampURL)\n      ? {\n          data: datum1D.originalData,\n          info: datum1D.originalInfo,\n          meta: datum1D.meta,\n          source: {\n            jcampURL: null,\n          },\n        }\n      : {\n          source: {\n            jcampURL: datum1D.source.jcampURL,\n            jcampSpectrumIndex: datum1D.source.jcampSpectrumIndex,\n          },\n        }),\n    peaks: datum1D.peaks,\n    integrals: datum1D.integrals,\n    ranges: datum1D.ranges,\n    filters: datum1D.filters,\n  };\n}\n","import {\n  predictAll,\n  signalsToXY,\n  signals2DToZ,\n  getFrequency,\n} from 'nmr-processing';\nimport OCL from 'openchemlib/full';\n\nimport { DatumKind } from './constants/SignalsKinds';\nimport {\n  initiateDatum1D,\n  mapRanges,\n  updateIntegralsRelativeValues,\n} from './data1d/Spectrum1D';\nimport { initiateDatum2D } from './data2d/Spectrum2D';\nimport { Datum1D } from './types/data1d';\nimport { Datum2D, Signal2D, Zone } from './types/data2d';\nimport generateID from './utilities/generateID';\nimport { adjustAlpha } from './utilities/getColor';\n\nexport interface PredictionOptions {\n  name: string;\n  frequency: number;\n  '1d': {\n    '1H': { from: number; to: number };\n    '13C': { from: number; to: number };\n    nbPoints: number;\n    lineWidth: number;\n  };\n  '2d': {\n    nbPoints: { x: number; y: number };\n  };\n  spectra: {\n    proton: boolean;\n    carbon: boolean;\n    cosy: boolean;\n    hsqc: boolean;\n    hmbc: boolean;\n  };\n}\n\nexport const defaultPredictionOptions: PredictionOptions = {\n  name: '',\n  frequency: 400,\n  '1d': {\n    '1H': { from: -1, to: 12 },\n    '13C': { from: -5, to: 220 },\n    nbPoints: 2 ** 17,\n    lineWidth: 1,\n  },\n  '2d': {\n    nbPoints: { x: 1024, y: 1024 },\n  },\n  spectra: {\n    proton: true,\n    carbon: true,\n    cosy: true,\n    hsqc: true,\n    hmbc: true,\n  },\n};\n\nexport const FREQUENCIES: Array<{ key: number; value: number; label: string }> =\n  [\n    { key: 1, value: 60, label: '60 MHz' },\n    { key: 2, value: 100, label: '100 MHz' },\n    { key: 3, value: 200, label: '200 MHz' },\n    { key: 4, value: 300, label: '300 MHz' },\n    { key: 5, value: 400, label: '400 MHz' },\n    { key: 6, value: 500, label: '500 MHz' },\n    { key: 7, value: 600, label: '600 MHz' },\n    { key: 8, value: 800, label: '800 MHz' },\n    { key: 9, value: 1000, label: '1000 MHz' },\n    { key: 10, value: 1200, label: '1200 MHz' },\n  ];\n\nconst baseURL = 'https://nmr-prediction.service.zakodium.com';\n\nexport async function predictSpectra(molfile: string): Promise<any> {\n  const molecule = OCL.Molecule.fromMolfile(molfile);\n\n  return predictAll(molecule, {\n    predictOptions: {\n      C: {\n        webserviceURL: `${baseURL}/v1/predict/carbon`,\n      },\n    },\n  });\n}\n\nexport function generateSpectra(\n  data: Record<string, any>,\n  inputOptions: PredictionOptions,\n  color: string,\n): Array<Datum1D | Datum2D> {\n  const spectra: Array<Datum1D | Datum2D> = [];\n  for (const experiment in data) {\n    if (inputOptions.spectra[experiment]) {\n      const spectrum = data[experiment];\n      switch (experiment) {\n        case 'proton':\n        case 'carbon': {\n          const datum = generated1DSpectrum({\n            spectrum,\n            inputOptions,\n            experiment,\n            color,\n          });\n          spectra.push(datum);\n\n          break;\n        }\n        case 'cosy':\n        case 'hsqc':\n        case 'hmbc': {\n          const datum = generated2DSpectrum({\n            spectrum,\n            inputOptions,\n            experiment,\n            color,\n          });\n          spectra.push(datum);\n\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n  return spectra;\n}\n\nfunction generated1DSpectrum(params: {\n  inputOptions: PredictionOptions;\n  spectrum: any;\n  experiment: string;\n  color: string;\n}) {\n  const { spectrum, inputOptions, experiment, color } = params;\n\n  const { signals, ranges, nucleus } = spectrum;\n\n  const {\n    name,\n    '1d': { nbPoints },\n    frequency: freq,\n  } = inputOptions;\n  const frequency = calculateFrequency(nucleus, freq);\n  const { x, y } = signalsToXY(signals, {\n    ...inputOptions['1d'][nucleus],\n    frequency,\n    nbPoints,\n  });\n  const datum = initiateDatum1D(\n    {\n      data: { x, im: null, re: y },\n      display: {\n        name,\n        color,\n      },\n      info: {\n        nucleus,\n        originFrequency: frequency,\n        baseFrequency: frequency,\n        pulseSequence: 'prediction',\n        solvent: '',\n        experiment,\n        isFt: true,\n      },\n    },\n    [],\n  );\n  datum.ranges.values = mapRanges(ranges, datum);\n  updateIntegralsRelativeValues(datum);\n  return datum;\n}\n\nfunction mapZones(zones: Array<Partial<Zone>>) {\n  return zones.reduce<Array<Zone>>((zonesAcc, zone: any) => {\n    const { signals, ...resZone } = zone;\n    const newSignals = signals.reduce(\n      (signalsAcc: Signal2D[], signal: Signal2D) => {\n        const { x, y, id, ...resSignal } = signal;\n        signalsAcc.push({\n          id: id || generateID(),\n          kind: 'signal',\n          x: { ...x, originDelta: x.delta || 0 },\n          y: { ...y, originDelta: y.delta || 0 },\n          ...resSignal,\n        });\n        return signalsAcc;\n      },\n      [],\n    );\n\n    zonesAcc.push({\n      id: generateID(),\n      ...resZone,\n      signals: newSignals,\n      kind: DatumKind.signal,\n    });\n    return zonesAcc;\n  }, []);\n}\n\nfunction generated2DSpectrum(params: {\n  inputOptions: PredictionOptions;\n  spectrum: any;\n  experiment: string;\n  color: string;\n}) {\n  const { spectrum, inputOptions, experiment, color } = params;\n  const { signals, zones, nuclei } = spectrum;\n\n  const xOption = inputOptions['1d'][nuclei[0]];\n  const yOption = inputOptions['1d'][nuclei[1]];\n\n  const width = get2DWidth(nuclei);\n  const frequency = calculateFrequency(nuclei, inputOptions.frequency);\n\n  const spectrumData = signals2DToZ(signals, {\n    from: { x: xOption.from, y: yOption.from },\n    to: { x: xOption.to, y: yOption.to },\n    nbPoints: {\n      x: inputOptions['2d'].nbPoints.x,\n      y: inputOptions['2d'].nbPoints.y,\n    },\n    width,\n    factor: 3,\n  });\n\n  const datum = initiateDatum2D(\n    {\n      data: { ...spectrumData, noise: 0.01 },\n      display: {\n        name: inputOptions.name,\n        positiveColor: color,\n        negativeColor: adjustAlpha(color, 40),\n      },\n      info: {\n        nucleus: nuclei,\n        originFrequency: frequency,\n        baseFrequency: frequency,\n        pulseSequence: experiment,\n        experiment: '2d',\n      },\n    },\n    [],\n  );\n  datum.zones.values = mapZones(zones);\n  return datum;\n}\n\nfunction get2DWidth(nucleus: string[]) {\n  return nucleus[0] === nucleus[1] ? 0.02 : { x: 0.02, y: 0.2133 };\n}\n\nfunction calculateFrequency(\n  nucleus: string | string[],\n  frequency: number,\n): number | string {\n  if (typeof nucleus === 'string') {\n    return getFrequency(nucleus, { nucleus: '1H', frequency });\n  } else {\n    if (nucleus[0] === nucleus[1]) {\n      return `${frequency},${frequency}`;\n    } else {\n      return `${frequency},${getFrequency(nucleus[1], {\n        nucleus: nucleus[0],\n        frequency,\n      })}`;\n    }\n  }\n}\n","// error colors in priority order\nconst ErrorColors: Array<{ key: string; color: string }> = [\n  { key: 'outOfLimit', color: 'red' },\n  { key: 'ambiguousAttachment', color: 'orange' },\n  { key: 'notAttached', color: 'blue' },\n  { key: 'incomplete', color: 'red' },\n];\n\nconst Errors = ErrorColors.map((errorColor) => errorColor.key);\n\nconst Hybridizations: Array<{ key: string; label: string; value: string }> = [\n  {\n    key: '-',\n    label: '',\n    value: '',\n  },\n  {\n    key: 'sp',\n    label: 'sp',\n    value: 'SP',\n  },\n  {\n    key: 'sp2',\n    label: 'sp2',\n    value: 'SP2',\n  },\n  {\n    key: 'sp3',\n    label: 'sp3',\n    value: 'SP3',\n  },\n];\n\nconst DefaultTolerance = {\n  C: 0.25,\n  H: 0.02,\n  N: 0.25,\n  F: 0.25,\n  Si: 0.25,\n  P: 0.25,\n};\n\nexport { DefaultTolerance, Errors, ErrorColors, Hybridizations };\n","import * as Filters from '../../data/Filters';\n\ninterface OptionItem {\n  id: string;\n  label: string;\n  hasOptionPanel: boolean;\n  isFilter: boolean;\n}\n\ntype RecordOptions = Record<\n  | 'zoom'\n  | 'peakPicking'\n  | 'integral'\n  | 'zone2D'\n  | 'slicingTool'\n  | 'HMove'\n  | 'equalizerTool'\n  | 'rangesPicking'\n  | 'zeroFilling'\n  | 'phaseCorrection'\n  | 'baseLineCorrection'\n  | 'generalSelector'\n  | 'editRange'\n  | 'multipleSpectraAnalysis'\n  | 'exclusionZones'\n  | 'databaseRangesSelection',\n  OptionItem\n>;\n\nexport const options: RecordOptions = {\n  zoom: {\n    id: 'zoom',\n    label: 'Zoom',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  peakPicking: {\n    id: 'peakPicking',\n    label: 'Peaks Picking',\n    hasOptionPanel: true,\n    isFilter: false,\n  },\n  integral: {\n    id: 'integral',\n    label: 'integral Tool',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  zone2D: {\n    id: 'zone2D',\n    label: 'Zone Tool',\n    hasOptionPanel: true,\n    isFilter: false,\n  },\n  slicingTool: {\n    id: 'slicingTool',\n    label: 'Slicing Tool',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  HMove: {\n    id: 'HMove',\n    label: 'Move spectrum horizontally',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  equalizerTool: {\n    id: 'equalizerTool',\n    label: 'Equalizer Tool',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  rangesPicking: {\n    id: 'rangesPicking',\n    label: 'Ranges Picking',\n    hasOptionPanel: true,\n    isFilter: false,\n  },\n  zeroFilling: {\n    id: Filters.zeroFilling.id,\n    label: Filters.zeroFilling.name,\n    hasOptionPanel: true,\n    isFilter: true,\n  },\n  phaseCorrection: {\n    id: Filters.phaseCorrection.id,\n    label: Filters.phaseCorrection.name,\n    hasOptionPanel: true,\n    isFilter: true,\n  },\n  baseLineCorrection: {\n    id: 'baseLineCorrection',\n    label: 'baseline correction',\n    hasOptionPanel: true,\n    isFilter: true,\n  },\n  generalSelector: {\n    id: 'generalSelector',\n    label: 'range general selector',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n\n  editRange: {\n    id: 'editRange',\n    label: 'edit range',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n\n  multipleSpectraAnalysis: {\n    id: 'multipleSpectraAnalysis',\n    label: 'Multiple Spectra Analysis',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  exclusionZones: {\n    id: 'exclusionZones',\n    label: 'Exclusion Zones',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n  databaseRangesSelection: {\n    id: 'databaseRangesSelection',\n    label: 'Filter Database',\n    hasOptionPanel: false,\n    isFilter: false,\n  },\n};\n","import { mapRanges } from '../../../../data/data1d/Spectrum1D';\n\nexport function addRanges(signals, datum) {\n  let ranges: Array<any> = [];\n  const { baseFrequency: frequency = 500 } = datum;\n  for (const signal of signals) {\n    const {\n      jCoupling: js,\n      delta,\n      diaIDs = [],\n      multiplicity,\n      integration,\n    } = signal;\n    const fromTo = computeFromTo({ delta, js, frequency });\n    if (js && multiplicity) {\n      if (js.length === multiplicity.length) {\n        js.sort((a, b) => b - a);\n        for (let i = 0; i < js.length; i++) {\n          js[i].multiplicity = multiplicity[i];\n        }\n      }\n    }\n\n    ranges.push({\n      ...fromTo,\n      integration,\n      signals: [\n        {\n          js,\n          delta,\n          diaIDs,\n          multiplicity,\n        },\n      ],\n    });\n  }\n  datum.ranges.values = mapRanges(joinRanges(ranges), datum);\n}\n\ninterface ComputeFromToOptions {\n  delta?: any;\n  js?: any;\n  couplings?: Array<any>;\n  frequency?: any;\n}\n\nfunction computeFromTo(options: ComputeFromToOptions = {}) {\n  const { delta, js: couplings = [], frequency } = options;\n  let width = 0.5;\n  for (let j of couplings) {\n    width += j.coupling;\n  }\n  width /= frequency;\n  return { from: delta - width, to: delta + width };\n}\n\nfunction joinRanges(ranges) {\n  ranges.sort((a, b) => a.from - b.from);\n  for (let i = 0; i < ranges.length - 1; i++) {\n    if (ranges[i].to > ranges[i + 1].from) {\n      ranges[i].to = Math.max(ranges[i + 1].to, ranges[i].to);\n      ranges[i].signals = ranges[i].signals.concat(ranges[i + 1].signals);\n      ranges[i].integration += ranges[i + 1].integration;\n      ranges.splice(i + 1, 1);\n      i--;\n    }\n  }\n  return ranges;\n}\n","import { getShift } from '../../../../data/data2d/Spectrum2D';\nimport generateID from '../../../../data/utilities/generateID';\n\nconst axisLabels = ['y', 'x'];\n\nexport function addZones(signals, datum) {\n  let zones: Array<any> = [];\n  const shift = getShift(datum);\n  const { baseFrequency } = datum.info;\n  const frequency = { x: baseFrequency[0], y: baseFrequency[1] };\n\n  for (const signal of signals) {\n    let zone = { x: {}, y: {}, id: generateID(), kind: 'signal' };\n    let signalFormated = { id: generateID(), kind: 'signal', peaks: [] };\n    let width = { x: 10, y: 10 };\n    for (let axis of axisLabels) {\n      let { coupling = [], delta, diaIDs = [] } = signal[axis];\n      for (let j of coupling) {\n        width[axis] += j.coupling;\n      }\n      if (signal.activeCoupling) {\n        const { activeCoupling = [] } = signal;\n        for (let j of activeCoupling) {\n          width[axis] += j.coupling;\n        }\n      }\n      width[axis] /= frequency[axis];\n\n      zone[axis] = {\n        from: delta - width[axis],\n        to: delta + width[axis],\n      };\n\n      signalFormated[axis] = {\n        delta,\n        diaIDs,\n        originDelta: delta - shift[`${axis}Shift`],\n      };\n    }\n    zones.push({\n      ...zone,\n      signals: [signalFormated],\n    });\n  }\n  datum.zones.values = zones;\n}\n","import Jszip from 'jszip';\nimport { NmrRecord, parseSDF } from 'nmredata';\n\nimport { addBruker, addJcamps } from '../../data/SpectraManager';\n\nimport { addRanges } from './util/nmredata/addRanges';\nimport { addZones } from './util/nmredata/addZones';\n\nexport async function nmredataToNmrium(file, usedColors) {\n  const jszip = new Jszip();\n  const zip = await jszip.loadAsync(file.binary);\n  const sdfFiles = await getSDF(zip.files);\n  const jsonData = await NmrRecord.toJSON({\n    sdf: sdfFiles[0],\n    zipFiles: zip.files,\n  });\n\n  let { spectra, molecules = [] } = jsonData;\n\n  let nmrium: { spectra: any[]; molecules: any[] } = {\n    spectra: [],\n    molecules,\n  };\n\n  for (const data of spectra) {\n    const { file, jcampURL } = data.source;\n\n    let spectrum = (await getSpectra(file, { jcampURL }, usedColors)) || [];\n\n    for (const spectrumData of spectrum) {\n      const { info } = spectrumData;\n\n      if (info.isFid) continue;\n\n      if (info.dimension > 1) {\n        addZones(data.signals, spectrumData);\n      } else {\n        addRanges(data.signals, spectrumData);\n      }\n    }\n\n    nmrium.spectra.push(...spectrum);\n  }\n\n  return nmrium;\n}\n\ninterface GetSpectraOptions {\n  xy?: boolean;\n  noContours?: boolean;\n  keepOriginal?: boolean;\n  jcampURL?: string;\n}\n\nasync function getSpectra(\n  file,\n  options: GetSpectraOptions = {},\n  usedColors = {},\n) {\n  const {\n    xy = true,\n    noContours = true,\n    keepOriginal = true,\n    jcampURL,\n  } = options;\n  switch (file.extension) {\n    case 'jdx':\n    case 'dx':\n      return addJcamps([file], usedColors);\n    case 'zip':\n      return addBruker(\n        { xy, noContours, keepOriginal },\n        file.binary,\n        usedColors,\n      );\n    default:\n      if (!jcampURL) {\n        new Error('file extension is not supported');\n        return;\n      }\n  }\n}\n\nasync function getSDF(zipFiles) {\n  let result: any[] = [];\n  for (const file in zipFiles) {\n    const pathFile = file.split('/');\n    if (/^[^.].+sdf$/.exec(pathFile[pathFile.length - 1])) {\n      const filename = pathFile[pathFile.length - 1].replace(/\\.sdf/, '');\n      const root = pathFile.slice(0, pathFile.length - 1).join('/');\n      const sdf = await zipFiles[file].async('string');\n      let parserResult = parseSDF(`${sdf}`, { mixedEOL: true });\n      parserResult.filename = filename;\n      parserResult.root = root !== '' ? `${root}/` : '';\n      result.push(parserResult);\n    }\n  }\n  return result;\n}\n","import { Draft } from 'immer';\nimport { SpectraData1D, SpectraData2D } from 'nmr-processing';\n\nimport { Datum1D, Range } from '../../../data/types/data1d';\nimport { Datum2D, Zone } from '../../../data/types/data2d';\nimport { State } from '../Reducer';\n\nfunction setAutomaticAssignmentsHandler(\n  draft: Draft<State>,\n  action: { payload: { assignments: (SpectraData1D | SpectraData2D)[] } },\n) {\n  const assignments = action.payload.assignments;\n\n  for (let datum of assignments) {\n    const index = draft.data.findIndex((spectrum) => spectrum.id === datum.id);\n    if (index !== -1) {\n      const dimension = draft.data[index].info.dimension;\n      if (dimension === 1) {\n        (draft.data[index] as Datum1D).ranges.values = (datum as SpectraData1D)\n          .ranges as Range[];\n      } else if (dimension === 2) {\n        (draft.data[index] as Datum2D).zones.values = (datum as SpectraData2D)\n          .zones as Zone[];\n      }\n    }\n  }\n}\n\nexport { setAutomaticAssignmentsHandler };\n","import { Spectra } from '../../component/NMRium';\nimport { Datum1D, Range, Signal1D } from '../types/data1d';\nimport { Datum2D, Signal2D, Zone } from '../types/data2d';\n\nfunction findSpectrum(\n  spectraData: Spectra,\n  spectrumID: string,\n  checkIsVisible: boolean,\n): Datum1D | Datum2D | undefined {\n  const spectrum = spectraData.find((_spectrum) => _spectrum.id === spectrumID);\n  if (\n    spectrum &&\n    checkIsVisible === true &&\n    spectrum.display.isVisible === false\n  ) {\n    return undefined;\n  }\n\n  return spectrum;\n}\n\nfunction findSignal1D(\n  spectrum: Datum1D,\n  signalID: string,\n): Signal1D | undefined {\n  for (let range of spectrum.ranges.values) {\n    const signalIndex = range.signals.findIndex(\n      (_signal) => _signal.id === signalID,\n    );\n    if (signalIndex >= 0) {\n      return range.signals[signalIndex];\n    }\n  }\n}\n\nfunction findSignal2D(\n  spectrum: Datum2D,\n  signalID: string,\n): Signal2D | undefined {\n  for (let zone of spectrum.zones.values) {\n    const signalIndex = zone.signals.findIndex(\n      (_signal) => _signal.id === signalID,\n    );\n    if (signalIndex >= 0) {\n      return zone.signals[signalIndex];\n    }\n  }\n}\n\nfunction findRange(spectrum: Datum1D, signalID: string): Range | undefined {\n  for (let range of spectrum.ranges.values) {\n    const signalIndex = range.signals.findIndex(\n      (_signal) => _signal.id === signalID,\n    );\n    if (signalIndex >= 0) {\n      return range;\n    }\n  }\n}\n\nfunction findZone(spectrum: Datum2D, signalID: string): Zone | undefined {\n  for (let zone of spectrum.zones.values) {\n    const signalIndex = zone.signals.findIndex(\n      (_signal) => _signal.id === signalID,\n    );\n    if (signalIndex >= 0) {\n      return zone;\n    }\n  }\n}\n\nfunction findRangeOrZoneID(\n  spectraData: Spectra,\n  experimentID: string,\n  signalID: string,\n  checkIsVisible: boolean,\n) {\n  const spectrum = findSpectrum(spectraData, experimentID, checkIsVisible);\n  if (spectrum) {\n    if (spectrum.info.dimension === 1) {\n      const range = findRange(spectrum as Datum1D, signalID);\n      if (range) return range.id;\n    } else if (spectrum.info.dimension === 2) {\n      const zone = findZone(spectrum as Datum2D, signalID);\n      if (zone) return zone.id;\n    }\n  }\n}\n\nexport {\n  findRange,\n  findRangeOrZoneID,\n  findSignal1D,\n  findSignal2D,\n  findSpectrum,\n  findZone,\n};\n","import { scaleLinear, zoomIdentity } from 'd3';\n\nfunction getXScale(state, spectrumId: number | null | string = null) {\n  const { width, margin, xDomains, xDomain, mode } = state;\n  const range =\n    mode === 'RTL'\n      ? [width - margin.right, margin.left]\n      : [margin.left, width - margin.right];\n  return scaleLinear(spectrumId ? xDomains[spectrumId] : xDomain, range);\n}\n\nfunction getYScale(state, spectrumId: number | null | string = null) {\n  const { height, margin, verticalAlign, yDomain, yDomains } = state;\n  const _height =\n    verticalAlign.align === 'center'\n      ? (height - 30) / 2\n      : height - margin.bottom - 30;\n  let domainY: [number, number] | [] = [];\n  if (spectrumId === null || yDomains[spectrumId] === undefined) {\n    domainY = [0, yDomain[1]];\n  } else {\n    domainY = [0, yDomains[spectrumId][1]];\n  }\n  return scaleLinear(domainY, [_height, margin.top]);\n}\n\nfunction getIntegralYScale(state) {\n  const { height, margin, verticalAlign, integralsYDomains, activeSpectrum } =\n    state;\n  const _height = verticalAlign.align === 'center' ? height / 2 : height;\n  return scaleLinear(\n    activeSpectrum?.id &&\n      integralsYDomains &&\n      integralsYDomains[activeSpectrum?.id]\n      ? integralsYDomains[activeSpectrum?.id]\n      : [0, 0],\n    [_height * 0.3, margin.top + _height * 0.1],\n  );\n}\n\nfunction reScaleY(scale: number, { domain, height, margin }) {\n  const _scale = scaleLinear(domain, [height - margin.bottom, margin.top]);\n\n  const t = zoomIdentity\n    .translate(0, _scale(0))\n    .scale(scale)\n    .translate(0, -_scale(0));\n\n  return t.rescaleY(_scale).domain();\n}\n\nexport { getXScale, getYScale, getIntegralYScale, reScaleY };\n","import { getXScale } from '../../1d/utilities/scale';\n\ninterface RangeOptions {\n  startX: number;\n  endX: number;\n}\n\nexport default function getRange(\n  draft,\n  options: RangeOptions,\n): [number, number] {\n  const { startX, endX } = options;\n  const scaleX = getXScale(draft);\n\n  const start = scaleX.invert(startX);\n  const end = scaleX.invert(endX);\n  const range: [number, number] = [0, 0];\n  if (start > end) {\n    range[0] = end;\n    range[1] = start;\n  } else {\n    range[0] = start;\n    range[1] = end;\n  }\n  return range;\n}\n","export default function nucleusToString(nucleus) {\n  return typeof nucleus === 'string' ? nucleus : nucleus.join(',');\n}\n","import { extent } from 'd3';\nimport { Draft } from 'immer';\n\nimport { get1DDataXY } from '../../../data/data1d/Spectrum1D/get1DDataXY';\nimport { isSpectrum2D } from '../../../data/data2d/Spectrum2D';\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport nucleusToString from '../../utility/nucleusToString';\nimport { State } from '../Reducer';\nimport { DISPLAYER_MODE } from '../core/Constants';\n\nfunction getActiveData(draft: Draft<State>): Array<Datum1D> {\n  let data = draft.data.filter(\n    (datum) =>\n      nucleusToString(datum.info.nucleus) === draft.activeTab &&\n      datum.info.dimension === 1,\n  );\n\n  if (draft.activeSpectrum) {\n    const activeSpectrumIndex = data.findIndex(\n      (datum) => datum.id === draft.activeSpectrum?.id,\n    );\n    if (activeSpectrumIndex !== -1) {\n      const isFid = data[activeSpectrumIndex].info.isFid || false;\n      data = data.filter((datum) => datum.info.isFid === isFid);\n    }\n  } else {\n    data = data.filter((datum) => datum.info.isFid === false);\n  }\n\n  return data as Array<Datum1D>;\n}\n\nfunction getDomain(drfat: Draft<State>) {\n  let xArray: Array<number> = [];\n  let yArray: Array<number> = [];\n  let yDomains = {};\n  let xDomains = {};\n\n  const data = getActiveData(drfat);\n  try {\n    xArray = data.reduce<Array<number>>((acc, d: Datum1D) => {\n      const { display, data } = d;\n      const domain = [data.x[0], data.x[data.x.length - 1]];\n      xDomains[d.id] = domain;\n      if (display.isVisible) {\n        acc = acc.concat(domain);\n      }\n      return acc;\n    }, []);\n\n    yArray = data.reduce<Array<number>>((acc, d: Datum1D) => {\n      const { display } = d;\n      const data = get1DDataXY(d);\n\n      const _extent = extent(data.y) as Array<number>;\n      yDomains[d.id] = _extent;\n\n      if (display.isVisible) {\n        acc = acc.concat(_extent);\n      }\n      return acc;\n    }, []);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n\n  return {\n    xDomain: extent(xArray),\n    yDomain: extent(yArray),\n    yDomains,\n    xDomains,\n  };\n}\nfunction get2DDomain(state) {\n  let xArray = [];\n  let yArray = [];\n  let yDomains = {};\n  let xDomains = {};\n\n  const { activeTab, tabActiveSpectrum, data } = state;\n\n  const nucleus = activeTab.split(',');\n\n  try {\n    xArray = data.reduce((acc, datum: Datum1D | Datum2D) => {\n      if (\n        isSpectrum2D(datum) &&\n        datum.info.nucleus?.join(',') === activeTab &&\n        datum.info.isFt\n      ) {\n        acc = acc.concat([datum.data.minX, datum.data.maxX]);\n      }\n      return acc;\n    }, []);\n\n    yArray = data.reduce((acc, datum: Datum1D | Datum2D) => {\n      if (\n        isSpectrum2D(datum) &&\n        datum.info.nucleus?.join(',') === activeTab &&\n        datum.info.isFt\n      ) {\n        acc = acc.concat([datum.data.minY, datum.data.maxY]);\n      }\n      return acc;\n    }, []);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n\n  const spectrumsIDs = nucleus.map((n) => tabActiveSpectrum[n]?.id);\n\n  const filteredData = data.reduce((acc, datum: Datum1D | Datum2D) => {\n    return spectrumsIDs.includes(datum.id) && datum.info.dimension === 1\n      ? acc.concat(datum)\n      : acc.concat([]);\n  }, []);\n  try {\n    xDomains = filteredData.reduce((acc, d: Datum1D) => {\n      const { x } = d.data;\n      const domain = [x[0], x[x.length - 1]];\n      acc[d.id] = domain;\n      return acc;\n    }, {});\n\n    yDomains = filteredData.reduce((acc, d: Datum1D) => {\n      const _extent = extent(d.data.re);\n      acc[d.id] = _extent;\n      return acc;\n    }, {});\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n\n  return {\n    xDomain: extent(xArray),\n    yDomain: extent(yArray),\n    yDomains,\n    xDomains,\n  };\n}\n\nexport interface SetDomainOptions {\n  yDomain?: {\n    isChanged?: boolean;\n    isShared?: boolean;\n  };\n}\n\nfunction setDomain(draft: Draft<State>, options?: SetDomainOptions) {\n  const { yDomain = { isChanged: true, isShared: true } } = options || {};\n  let domain;\n\n  if (draft.activeTab) {\n    if (draft.displayerMode === DISPLAYER_MODE.DM_1D) {\n      domain = getDomain(draft);\n    } else {\n      domain = get2DDomain(draft);\n    }\n    draft.xDomain = domain.xDomain;\n    draft.xDomains = domain.xDomains;\n    draft.originDomain = domain;\n\n    if (yDomain.isChanged) {\n      draft.yDomain = domain.yDomain;\n      if (draft.displayerMode === DISPLAYER_MODE.DM_1D && yDomain.isShared) {\n        draft.yDomains = Object.keys(domain.yDomains).reduce((acc, key) => {\n          acc[key] = domain.yDomain;\n          return acc;\n        }, {});\n      } else {\n        draft.yDomains = domain.yDomains;\n      }\n    } else {\n      draft.originDomain = {\n        ...draft.originDomain,\n        xDomain: domain.xDomain,\n        xDomains: domain.xDomains,\n      };\n    }\n  }\n}\n\nfunction getSpectrumIntegralsDomain(datum: Datum1D) {\n  const { integrals, ranges } = datum;\n  let max = Number.NEGATIVE_INFINITY;\n  for (const integral of integrals.values) {\n    max = Math.max(max, integral.absolute);\n  }\n  for (const range of ranges.values) {\n    max = Math.max(max, range.absolute);\n  }\n  return [0, max];\n}\nfunction setIntegralsYDomain(draft: Draft<State>, data: Datum1D[] | Datum1D) {\n  for (const spectrum of Array.isArray(data) ? data : [data]) {\n    if (spectrum?.info?.dimension === 1) {\n      draft.integralsYDomains[spectrum.id] =\n        getSpectrumIntegralsDomain(spectrum);\n    }\n  }\n}\n\nfunction setOriginalDomain(draft: Draft<State>, originDomain) {\n  draft.originDomain = originDomain;\n}\n\nfunction setXDomain(draft: Draft<State>, xDomain) {\n  draft.xDomain = xDomain;\n}\n\nfunction setYDomain(draft: Draft<State>, yDomain) {\n  draft.yDomain = yDomain;\n}\n\nfunction handelResetDomain(draft: Draft<State>) {\n  const { xDomain, yDomain, xDomains, yDomains } = draft.originDomain;\n  draft.xDomain = xDomain;\n  draft.yDomain = yDomain;\n  draft.xDomains = xDomains;\n  draft.yDomains = yDomains;\n}\n\nfunction setMode(draft: Draft<State>) {\n  const data = draft.data.filter(\n    (datum) =>\n      draft.xDomains[datum.id] &&\n      nucleusToString(datum.info.nucleus) === draft.activeTab,\n  );\n  draft.mode = (data[0] as Datum1D)?.info.isFid ? 'LTR' : 'RTL';\n}\n\nexport {\n  getDomain,\n  setOriginalDomain,\n  setXDomain,\n  setYDomain,\n  handelResetDomain,\n  setDomain,\n  setMode,\n  setIntegralsYDomain,\n};\n","import { Draft, original } from 'immer';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\n\nimport * as Filters from '../../../data/Filters';\nimport * as FiltersManager from '../../../data/FiltersManager';\nimport {\n  DatumKind,\n  SignalKindsToInclude,\n} from '../../../data/constants/SignalsKinds';\nimport {\n  addRange,\n  changeRangeSignal,\n  detectRanges,\n  updateRangesRelativeValues,\n  changeRange,\n  changeRangeRelativeValue,\n  updateXShift,\n} from '../../../data/data1d/Spectrum1D';\nimport { setSumOptions } from '../../../data/data1d/Spectrum1D/SumManager';\nimport { Datum1D } from '../../../data/types/data1d';\nimport {\n  unlink,\n  unlinkInAssignmentData,\n} from '../../../data/utilities/RangeUtilities';\nimport { State } from '../Reducer';\nimport getRange from '../helper/getRange';\n\nimport { handleUpdateCorrelations } from './CorrelationsActions';\nimport { setDomain, setIntegralsYDomain } from './DomainActions';\n\nfunction handleAutoRangesDetection(draft: Draft<State>, options) {\n  const {\n    activeSpectrum,\n    data,\n    xDomain,\n    molecules,\n    activeTab: nucleus,\n  } = draft;\n  if (activeSpectrum?.id) {\n    const { index } = activeSpectrum;\n    const datum = data[index] as Datum1D;\n\n    const [from, to] = xDomain;\n    const windowFromIndex = xFindClosestIndex(datum.data.x, from);\n    const windowToIndex = xFindClosestIndex(datum.data.x, to);\n\n    const detectionOptions = {\n      factorStd: 8,\n      integrationSum: 100,\n      compile: true,\n      frequencyCluster: 16,\n      clean: true,\n      keepPeaks: true,\n      ...options, // minMaxRatio default 0.05, lookNegative default false,\n    };\n\n    detectRanges(datum, {\n      ...detectionOptions,\n      windowFromIndex,\n      windowToIndex,\n      molecules,\n      nucleus,\n    });\n    handleOnChangeRangesData(draft);\n    setIntegralsYDomain(draft, datum);\n  }\n}\n\nfunction handleAutoSpectraRangesDetection(draft: Draft<State>) {\n  const peakPicking = {\n    factorStd: 8,\n    minMaxRatio: 0.05,\n    integrationSum: 100,\n    compile: true,\n    frequencyCluster: 16,\n    clean: true,\n    keepPeaks: true,\n  };\n  const { data, activeTab: nucleus, molecules } = draft;\n  for (const datum of data) {\n    if (datum.info.dimension === 1) {\n      detectRanges(datum as Datum1D, { peakPicking, molecules, nucleus });\n      handleOnChangeRangesData(draft);\n    }\n  }\n}\n\nfunction getRangeIndex(draft: Draft<State>, spectrumIndex, rangeID) {\n  return (draft.data[spectrumIndex] as Datum1D).ranges.values.findIndex(\n    (range) => range.id === rangeID,\n  );\n}\n\nfunction handleDeleteRange(draft: Draft<State>, action) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    const { id = null, assignmentData } = action.payload.data;\n    const datum = draft.data[index] as Datum1D;\n    if (id) {\n      const rangeIndex = getRangeIndex(draft, index, id);\n      unlinkInAssignmentData(assignmentData, [datum.ranges.values[rangeIndex]]);\n      datum.ranges.values.splice(rangeIndex, 1);\n    } else {\n      unlinkInAssignmentData(assignmentData, datum.ranges.values);\n      datum.ranges.values = [];\n    }\n    updateRangesRelativeValues(datum);\n    handleOnChangeRangesData(draft);\n  }\n}\n\nfunction handleChangeRangeSignalKind(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const { rowData, value } = action.payload.data;\n    const rangeIndex = getRangeIndex(state, index, rowData.id);\n    const _range = (draft.data[index] as Datum1D).ranges.values[rangeIndex];\n    if (_range?.signals) {\n      _range.signals[rowData.tableMetaInfo.signalIndex].kind = value;\n      _range.kind = SignalKindsToInclude.includes(value)\n        ? DatumKind.signal\n        : DatumKind.mixed;\n      updateRangesRelativeValues(draft.data[index] as Datum1D);\n      handleOnChangeRangesData(draft);\n    }\n  }\n}\n\nfunction handleSaveEditedRange(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const { editedRowData, assignmentData } = action.payload;\n\n    // reset temp range\n    draft.toolOptions.data.tempRange = null;\n\n    // remove assignments in global state\n\n    const _editedRowData: any = unlink(editedRowData);\n\n    delete _editedRowData.tableMetaInfo;\n    delete _editedRowData.rowKey;\n    // remove assignments in assignment hook data\n    // for now: clear all assignments for this range because signals or levels to store might have changed\n    unlinkInAssignmentData(assignmentData, [_editedRowData]);\n    const rangeIndex = getRangeIndex(state, index, _editedRowData.id);\n    (draft.data[index] as Datum1D).ranges.values[rangeIndex] = _editedRowData;\n    updateRangesRelativeValues(draft.data[index] as Datum1D);\n    handleOnChangeRangesData(draft);\n  }\n}\n\nfunction handleDeleteSignal(draft: Draft<State>, action) {\n  const {\n    spectrum,\n    range,\n    signal,\n    assignmentData,\n    unlinkSignalInAssignmentData = true,\n  } = action.payload;\n\n  if (spectrum && range) {\n    const datum1D = draft.data.find(\n      (datum) => datum.id === spectrum.id,\n    ) as Datum1D;\n    const rangeIndex = datum1D.ranges.values.findIndex(\n      (_range) => _range.id === range.id,\n    );\n    const signalIndex = range.signals.findIndex(\n      (_signal) => _signal.id === signal.id,\n    );\n    // remove assignments for the signal range object in global state\n    const _range = unlink(cloneDeep(range), 'signal', { signalIndex });\n    if (unlinkSignalInAssignmentData === true) {\n      unlinkInAssignmentData(assignmentData, [{ signals: [signal] }]);\n    }\n    _range.signals.splice(signalIndex, 1);\n    datum1D.ranges.values[rangeIndex] = _range;\n    // if no signals are existing in a range anymore then delete this range\n    if (_range.signals.length === 0) {\n      unlinkInAssignmentData(assignmentData, [_range]);\n      datum1D.ranges.values.splice(rangeIndex, 1);\n    }\n\n    handleOnChangeRangesData(draft);\n  }\n}\n\nfunction handleUnlinkRange(draft: Draft<State>, action) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    const {\n      assignmentData,\n      rangeData = null,\n      signalIndex = -1,\n    } = action.payload;\n\n    // remove assignments in global state\n    if (rangeData) {\n      const rangeIndex = getRangeIndex(draft, index, rangeData.id);\n      const range = cloneDeep(\n        (draft.data[index] as Datum1D).ranges.values[rangeIndex],\n      );\n\n      let newRange: any = {};\n      let id = rangeData.id;\n      if (rangeData && signalIndex === -1) {\n        newRange = unlink(range, 'range');\n      } else {\n        newRange = unlink(range, 'signal', { signalIndex });\n        id = rangeData.signals[signalIndex].id;\n      }\n      // remove assignments in assignment hook data\n      unlinkInAssignmentData(assignmentData, [\n        {\n          id,\n        },\n      ]);\n      (draft.data[index] as Datum1D).ranges.values[rangeIndex] = newRange;\n    } else {\n      const ranges = (draft.data[index] as Datum1D).ranges.values.map(\n        (range) => {\n          return unlink(range);\n        },\n      );\n      (draft.data[index] as Datum1D).ranges.values = ranges;\n\n      unlinkInAssignmentData(assignmentData, ranges);\n    }\n  }\n}\n\nfunction handleSetDiaIDRange(draft: Draft<State>, action) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    const { rangeData, diaIDs, signalIndex, nbAtoms } = action.payload;\n    const getNbAtoms = (input, current = 0) => input + current;\n    const rangeIndex = getRangeIndex(draft, index, rangeData.id);\n    const _range = (draft.data[index] as Datum1D).ranges.values[rangeIndex];\n    if (signalIndex === undefined) {\n      _range.diaIDs = diaIDs;\n      _range.nbAtoms = getNbAtoms(nbAtoms, _range.nbAtoms);\n    } else {\n      _range.signals[signalIndex].diaIDs = diaIDs;\n      _range.signals[signalIndex].nbAtoms = getNbAtoms(\n        nbAtoms,\n        _range.signals[signalIndex].nbAtoms,\n      );\n    }\n    // _range.nbAtoms = getNbAtoms(_range);\n  }\n}\n\nfunction handleResizeRange(draft: Draft<State>, action) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    changeRange(draft.data[index] as Datum1D, action.data);\n  }\n}\n\nfunction handleChangeRangeSum(draft: Draft<State>, options) {\n  const { data, activeSpectrum, activeTab: nucleus } = draft;\n  if (activeSpectrum?.id) {\n    const { index } = activeSpectrum;\n    const datum = data[index] as Datum1D;\n    setSumOptions(datum.ranges, { options, nucleus });\n    updateRangesRelativeValues(datum, true);\n  }\n}\n\nfunction handleAddRange(draft: Draft<State>, action) {\n  const { startX, endX } = action.payload;\n  const { activeSpectrum, activeTab: nucleus, molecules } = draft;\n  const range = getRange(draft, { startX, endX });\n\n  if (activeSpectrum?.id) {\n    const { index } = activeSpectrum;\n    const [from, to] = range;\n    addRange(draft.data[index] as Datum1D, { from, to, nucleus, molecules });\n    handleOnChangeRangesData(draft);\n    setIntegralsYDomain(draft, draft.data[index] as Datum1D);\n  }\n}\n\nfunction handleChangeRangeRelativeValue(draft, action) {\n  const data = action.payload.data;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    changeRangeRelativeValue(draft.data[index], data);\n  }\n}\n\nfunction handleChangeRangeSignalValue(draft, action) {\n  const { rangeID, signalID, value } = action.payload;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    const shift = changeRangeSignal(draft.data[index], {\n      rangeID,\n      signalID,\n      newSignalValue: value,\n    });\n    FiltersManager.applyFilter(draft.data[index], [\n      { name: Filters.shiftX.id, options: shift },\n    ]);\n\n    updateXShift(draft.data[index] as Datum1D);\n\n    handleOnChangeRangesData(draft);\n    setDomain(draft);\n  }\n}\n\nfunction handleOnChangeRangesData(draft) {\n  handleUpdateCorrelations(draft);\n}\n\nfunction handleChangeRangesSumFlag(draft, action) {\n  const flag = action.payload;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    draft.data[index].ranges.options.isSumConstant = !flag;\n  }\n}\n\nfunction handleChangeTempRange(draft: Draft<State>, action) {\n  draft.toolOptions.data.tempRange = action.payload.tempRange;\n}\n\nfunction handleShowMultiplicityTrees(draft: Draft<State>) {\n  draft.toolOptions.data.showMultiplicityTrees =\n    !draft.toolOptions.data.showMultiplicityTrees;\n}\n\nfunction handleShowRangesIntegrals(draft: Draft<State>) {\n  draft.toolOptions.data.showRangesIntegrals =\n    !draft.toolOptions.data.showRangesIntegrals;\n}\n\nfunction handleShowJGraph(draft: Draft<State>) {\n  draft.toolOptions.data.showJGraph = !draft.toolOptions.data.showJGraph;\n}\n\nexport {\n  handleAutoRangesDetection,\n  handleDeleteRange,\n  handleDeleteSignal,\n  handleChangeRangeSum,\n  handleAddRange,\n  handleResizeRange,\n  handleChangeRangeRelativeValue,\n  handleChangeRangeSignalValue,\n  handleChangeRangeSignalKind,\n  handleSaveEditedRange,\n  handleUnlinkRange,\n  handleSetDiaIDRange,\n  handleChangeRangesSumFlag,\n  handleChangeTempRange,\n  handleShowMultiplicityTrees,\n  handleShowRangesIntegrals,\n  handleAutoSpectraRangesDetection,\n  handleShowJGraph,\n};\n","import { DatumKind } from '../constants/SignalsKinds';\nimport { Zone } from '../types/data2d';\n\nexport function getDiaIDs(zone: Zone, axis: string): string[] {\n  return ([] as string[]).concat(\n    zone[axis].diaIDs || [],\n    zone.signals\n      ? zone.signals.map((signal) => signal[axis].diaIDs || []).flat()\n      : [],\n  );\n}\n\nexport function getNbAtoms(zone: Zone, axis: string) {\n  return zone.signals\n    ? zone.signals.reduce(\n        (sum, signal) =>\n          signal[axis].nbAtoms ? sum + signal[axis].nbAtoms : sum,\n        0,\n      )\n    : 0;\n}\n\nexport function setNbAtoms(zone: Zone, axis: string): void {\n  zone[axis].nbAtoms = getNbAtoms(zone, axis);\n  if (zone[axis].nbAtoms === 0) {\n    delete zone[axis].nbAtoms;\n  }\n}\n\nexport function resetDiaIDs(zone: Zone, axis: string) {\n  delete zone[axis].diaIDs;\n  delete zone[axis].nbAtoms;\n  zone.signals.forEach((signal) => {\n    delete signal[axis].diaIDs;\n    delete signal[axis].nbAtoms;\n  });\n  return zone;\n}\n\nexport function checkZoneKind(zone: Zone): boolean {\n  return zone.kind === DatumKind.signal;\n}\n\nexport function checkSignalKinds(zone: Zone, kinds: string[]): boolean {\n  return !zone.signals.some(\n    (_signal) => _signal.kind === undefined || !kinds.includes(_signal.kind),\n  );\n}\n\nexport function unlink(\n  zone: Zone,\n  isOnZoneLevel?: boolean,\n  signalIndex?: number,\n  axis?: string,\n): Zone {\n  if (isOnZoneLevel !== undefined && axis !== undefined) {\n    if (isOnZoneLevel === true) {\n      delete zone[axis].diaIDs;\n      delete zone[axis].nbAtoms;\n    } else if (\n      typeof signalIndex === 'number' &&\n      signalIndex !== -1 &&\n      zone.signals[signalIndex]\n    ) {\n      delete zone.signals[signalIndex][axis].diaIDs;\n      delete zone.signals[signalIndex][axis].nbAtoms;\n    }\n    setNbAtoms(zone, axis);\n  } else if (axis !== undefined) {\n    resetDiaIDs(zone, axis);\n    setNbAtoms(zone, axis);\n  } else {\n    ['x', 'y'].forEach((key) => {\n      resetDiaIDs(zone, key);\n      setNbAtoms(zone, key);\n    });\n  }\n  return zone;\n}\n\nexport function unlinkInAssignmentData(\n  assignmentData,\n  zones: Partial<Zone>[],\n  axis?: string,\n): void {\n  const ids = zones.reduce((acc: string[], zone) => {\n    if (zone.id) {\n      acc.push(zone.id);\n    }\n    if (zone.signals) {\n      acc = acc.concat(zone.signals.map((signal) => signal.id, []));\n    }\n    return acc;\n  }, []);\n\n  if (axis) {\n    assignmentData.dispatch({\n      type: 'REMOVE_ALL',\n      payload: { id: ids, axis },\n    });\n  } else {\n    assignmentData.dispatch({\n      type: 'REMOVE_ALL',\n      payload: { id: ids, axis: 'x' },\n    });\n    assignmentData.dispatch({\n      type: 'REMOVE_ALL',\n      payload: { id: ids, axis: 'y' },\n    });\n  }\n}\n","const LAYOUT = {\n  TOP_1D: 'TOP_1D',\n  LEFT_1D: 'LEFT_1D',\n  CENTER_2D: 'CENTER_2D',\n};\n\ninterface MarginProps {\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n}\n\nfunction get2DDimensionLayout({\n  width,\n  height,\n  margin,\n}: {\n  width: number;\n  height: number;\n  margin: MarginProps;\n}) {\n  return {\n    CENTER_2D: {\n      startX: margin.left,\n      startY: margin.top,\n      endX: width - margin.right,\n      endY: height - margin.bottom,\n    },\n    TOP_1D: {\n      startX: margin.left,\n      startY: 0,\n      endX: width - margin.right,\n      endY: margin.top,\n    },\n    LEFT_1D: {\n      startX: 0,\n      startY: margin.top,\n      endX: margin.left,\n      endY: height - margin.bottom,\n    },\n  };\n}\n\ninterface StartEndProps {\n  startX: number;\n  endX?: number;\n  startY: number;\n  endY?: number;\n}\n\ninterface DimensionType {\n  CENTER_2D: {\n    startX: number;\n    startY: number;\n    endX: number;\n    endY: number;\n  };\n  TOP_1D: {\n    startX: number;\n    startY: number;\n    endX: number;\n    endY: number;\n  };\n  LEFT_1D: {\n    startX: number;\n    startY: number;\n    endX: number;\n    endY: number;\n  };\n}\n\nfunction getLayoutID(dimension: DimensionType, brushData: StartEndProps) {\n  for (const key of Object.keys(dimension)) {\n    if (\n      brushData.startX >= dimension[key].startX &&\n      brushData.startX <= dimension[key].endX &&\n      brushData.startY >= dimension[key].startY &&\n      brushData.startY <= dimension[key].endY\n    ) {\n      return key;\n    }\n  }\n  return null;\n}\n\nexport { LAYOUT, get2DDimensionLayout, getLayoutID };\n","import { scaleLinear } from 'd3';\n\nimport { LAYOUT } from './DimensionLayout';\n\nfunction get2DXScale(props: {\n  width: number;\n  margin: { right: number; left: number };\n  xDomain: Array<number>;\n}) {\n  const { width, margin, xDomain } = props;\n  return scaleLinear(xDomain, [width - margin.right, margin.left]);\n}\n\nfunction get2DYScale(\n  props: {\n    height: number;\n    margin: { bottom: number; top: number };\n    yDomain: Array<number>;\n  },\n  reverse = false,\n) {\n  const { height, margin, yDomain } = props;\n  return scaleLinear(\n    yDomain,\n    reverse\n      ? [height - margin.bottom, margin.top]\n      : [margin.top, height - margin.bottom],\n  );\n}\n\ninterface TopLayout {\n  width: number;\n  margin: { right: number; left: number };\n  xDomain: Array<number>;\n}\n\ninterface LeftLayout {\n  height: number;\n  margin: { bottom: number; top: number };\n  yDomain: Array<number>;\n}\n\nfunction get1DXScale(props: TopLayout | LeftLayout, layout: string) {\n  if (![LAYOUT.TOP_1D, LAYOUT.LEFT_1D].includes(layout)) {\n    throw new Error(\n      `layout is required and must be ${LAYOUT.TOP_1D} or ${LAYOUT.LEFT_1D}  `,\n    );\n  }\n\n  switch (layout) {\n    case LAYOUT.TOP_1D: {\n      const { width, margin, xDomain } = props as TopLayout;\n      return scaleLinear(xDomain, [width - margin.right, margin.left]);\n    }\n    case LAYOUT.LEFT_1D: {\n      const { height, margin, yDomain } = props as LeftLayout;\n      return scaleLinear(yDomain, [height - margin.bottom, margin.top]);\n    }\n    default:\n      break;\n  }\n}\n\nfunction get1DYScale(yDomain: Array<number>, height: number, margin = 10) {\n  return scaleLinear(yDomain, [height - margin, margin]);\n}\n\nexport { get2DXScale, get2DYScale, get1DXScale, get1DYScale };\n","import { get2DXScale, get2DYScale } from '../../2d/utilities/scale';\n\nexport default function get2DRange(draft, options) {\n  const { startX, startY, endX, endY } = options;\n  const scaleX = get2DXScale(draft);\n  const scaleY = get2DYScale(draft);\n  const x1 = startX * 1000000 > endX * 1000000 ? endX : startX;\n  const x2 = startX * 1000000 > endX * 1000000 ? startX : endX;\n  const y1 = startY * 1000000 > endY * 1000000 ? endY : startY;\n  const y2 = startY * 1000000 > endY * 1000000 ? startY : endY;\n\n  const fromY = scaleY.invert(y1);\n  const fromX = scaleX.invert(x1);\n  const toY = scaleY.invert(y2);\n  const toX = scaleX.invert(x2);\n  return { fromX, fromY, toX, toY };\n}\n","import { FromTo } from 'cheminfo-types';\nimport { Draft, original } from 'immer';\nimport lodashCloneDeep from 'lodash/cloneDeep';\nimport { setPathLength } from 'nmr-correlation';\n\nimport * as Filters from '../../../data/Filters';\nimport * as FiltersManager from '../../../data/FiltersManager';\nimport {\n  DatumKind,\n  SignalKindsToInclude,\n} from '../../../data/constants/SignalsKinds';\nimport {\n  changeZoneSignal,\n  detectZones,\n  detectZonesManual,\n  updateShift,\n} from '../../../data/data2d/Spectrum2D';\nimport { Datum2D, Signal2D } from '../../../data/types/data2d';\nimport {\n  unlink,\n  unlinkInAssignmentData,\n} from '../../../data/utilities/ZoneUtilities';\nimport { State } from '../Reducer';\nimport get2DRange from '../helper/get2DRange';\n\nimport { handleUpdateCorrelations } from './CorrelationsActions';\nimport { setDomain } from './DomainActions';\n\nfunction changeZonesFactorHandler(draft: Draft<State>, action) {\n  draft.toolOptions.data.zonesNoiseFactor = action.payload;\n}\n\nfunction add2dZoneHandler(draft: Draft<State>, action) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    const drawnZone = get2DRange(draft, action);\n    const datum = draft.data[index] as Datum2D;\n\n    const zones = detectZonesManual(original(datum), {\n      selectedZone: drawnZone,\n      thresholdFactor: draft.toolOptions.data.zonesNoiseFactor,\n      convolutionByFFT: false,\n    });\n\n    datum.zones.values = datum.zones.values.concat(zones);\n\n    handleOnChangeZonesData(draft);\n  }\n}\nfunction handleAutoZonesDetection(draft: Draft<State>, detectionOptions) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    const [fromX, toX] = draft.xDomain;\n    const [fromY, toY] = draft.yDomain;\n    detectionOptions.selectedZone = { fromX, toX, fromY, toY };\n    const datum = draft.data[index] as Datum2D;\n    const zones = detectZones(original(datum), detectionOptions);\n    datum.zones.values = datum.zones.values.concat(zones);\n    handleOnChangeZonesData(draft);\n  }\n}\nfunction handleAutoSpectraZonesDetection(draft: Draft<State>) {\n  for (const datum of draft.data) {\n    if (datum.info.dimension === 2) {\n      const { minX, maxX, minY, maxY } = (datum as Datum2D).data;\n      const detectionOptions = {\n        selectedZone: { fromX: minX, toX: maxX, fromY: minY, toY: maxY },\n        thresholdFactor: 1,\n      };\n\n      const zones = detectZones(original(datum), detectionOptions);\n      (datum as Datum2D).zones.values = (datum as Datum2D).zones.values.concat(\n        zones,\n      );\n\n      handleOnChangeZonesData(draft);\n    }\n  }\n}\n\nfunction changeZoneSignalDelta(draft: Draft<State>, action) {\n  const { zoneID, signal } = action.payload;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    const { xShift, yShift } = changeZoneSignal(\n      draft.data[index] as Datum2D,\n      zoneID,\n      signal,\n    );\n    let filters: any = [];\n    if (xShift !== 0) {\n      filters.push({ name: Filters.shift2DX.id, options: xShift });\n    }\n    if (yShift !== 0) {\n      filters.push({ name: Filters.shift2DY.id, options: yShift });\n    }\n\n    FiltersManager.applyFilter(draft.data[index], filters);\n\n    updateShift(draft.data[index] as Datum2D);\n\n    setDomain(draft);\n    handleOnChangeZonesData(draft);\n  }\n}\n\nfunction getZoneIndex(state, spectrumIndex, zoneID) {\n  return state.data[spectrumIndex].zones.values.findIndex(\n    (zone) => zone.id === zoneID,\n  );\n}\n\nfunction handleChangeZoneSignalKind(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const { rowData, value } = action.payload;\n    const zoneIndex = getZoneIndex(state, index, rowData.id);\n    const _zone = (draft.data[index] as Datum2D).zones.values[zoneIndex];\n    _zone.signals[rowData.tableMetaInfo.signalIndex].kind = value;\n    _zone.kind = SignalKindsToInclude.includes(value)\n      ? DatumKind.signal\n      : DatumKind.mixed;\n    handleOnChangeZonesData(draft);\n  }\n}\n\nfunction handleDeleteZone(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const { id, assignmentData } = action.payload;\n    if (id) {\n      const zone = (draft.data[index] as Datum2D).zones.values.find(\n        (zone) => zone.id === id,\n      );\n      unlinkInAssignmentData(assignmentData, [zone || {}]);\n      const zoneIndex = getZoneIndex(state, index, id);\n      (draft.data[index] as Datum2D).zones.values.splice(zoneIndex, 1);\n    } else {\n      unlinkInAssignmentData(\n        assignmentData,\n        (draft.data[index] as Datum2D).zones.values,\n      );\n      (draft.data[index] as Datum2D).zones.values = [];\n    }\n    handleOnChangeZonesData(draft);\n  }\n}\n\nfunction handleDeleteSignal(draft: Draft<State>, action) {\n  const {\n    spectrum,\n    zone,\n    signal,\n    assignmentData,\n    unlinkSignalInAssignmentData = true,\n  } = action.payload;\n\n  if (spectrum && zone) {\n    const datum2D = draft.data.find(\n      (datum) => datum.id === spectrum.id,\n    ) as Datum2D;\n    const zoneIndex = datum2D.zones.values.findIndex(\n      (_zone) => _zone.id === zone.id,\n    );\n    const signalIndex = zone.signals.findIndex(\n      (_signal) => _signal.id === signal.id,\n    );\n    // remove assignments for the signal in zone object and global state\n    const _zone = unlink(lodashCloneDeep(zone), false, signalIndex, undefined);\n    if (unlinkSignalInAssignmentData === true) {\n      unlinkInAssignmentData(\n        assignmentData,\n        [{ signals: [signal] }],\n        undefined,\n      );\n    }\n    _zone.signals.splice(signalIndex, 1);\n    datum2D.zones.values[zoneIndex] = _zone;\n    // if no signals are existing in a zone anymore then delete this zone\n    if (_zone.signals.length === 0) {\n      unlinkInAssignmentData(assignmentData, [_zone]);\n      datum2D.zones.values.splice(zoneIndex, 1);\n    }\n\n    handleOnChangeZonesData(draft);\n  }\n}\n\nfunction handleSetSignalPathLength(draft: Draft<State>, action) {\n  const { spectrum, zone, signal, pathLength } = action.payload;\n  if (spectrum && zone) {\n    const datum2D = draft.data.find(\n      (datum) => datum.id === spectrum.id,\n    ) as Datum2D;\n    const zoneIndex = datum2D.zones.values.findIndex(\n      (_zone) => _zone.id === zone.id,\n    );\n    const signalIndex = zone.signals.findIndex(\n      (_signal) => _signal.id === signal.id,\n    );\n    const _zone = unlink(lodashCloneDeep(zone), false, signalIndex, undefined);\n    _zone.signals[signalIndex].j = {\n      ..._zone.signals[signalIndex].j,\n      pathLength,\n    };\n    datum2D.zones.values[zoneIndex] = _zone;\n\n    handleOnChangeZonesData(draft);\n  }\n}\n\nfunction handleUnlinkZone(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const {\n      zoneData = null,\n      assignmentData,\n      isOnZoneLevel = undefined,\n      signalIndex = -1,\n      axis = undefined,\n    } = action.payload;\n\n    if (zoneData) {\n      // remove assignments in global state\n\n      const zoneIndex = getZoneIndex(state, index, zoneData.id);\n\n      const zone = lodashCloneDeep(\n        (draft.data[index] as Datum2D).zones.values[zoneIndex],\n      );\n      const _zoneData = unlink(zone, isOnZoneLevel, signalIndex, axis);\n\n      unlinkInAssignmentData(\n        assignmentData,\n        [{ id: zoneData.signals[signalIndex].id }],\n        axis,\n      );\n      (draft.data[index] as Datum2D).zones.values[zoneIndex] = _zoneData;\n    } else {\n      const zones = (draft.data[index] as Datum2D).zones.values.map((zone) => {\n        return unlink(zone);\n      });\n      (draft.data[index] as Datum2D).zones.values = zones;\n\n      unlinkInAssignmentData(assignmentData, zones);\n    }\n  }\n}\n\nfunction handleSetDiaIDZone(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const { zoneData, diaIDs, axis, signalIndex, nbAtoms } = action.payload;\n    const getNbAtoms = (input, current = 0) => input + current;\n    const zoneIndex = getZoneIndex(state, index, zoneData.id);\n    const _zone = (draft.data[index] as Datum2D).zones.values[zoneIndex];\n    if (signalIndex === undefined) {\n      _zone[axis].diaIDs = diaIDs;\n      _zone[axis].nbAtoms = getNbAtoms(nbAtoms, _zone[axis].nbAtoms);\n    } else {\n      _zone.signals[signalIndex][axis].diaIDs = diaIDs;\n      _zone.signals[signalIndex][axis].nbAtoms = getNbAtoms(\n        nbAtoms,\n        _zone.signals[signalIndex][axis].nbAtoms,\n      );\n    }\n  }\n}\n\nfunction handleSaveEditedZone(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (state.activeSpectrum?.id) {\n    const { index } = state.activeSpectrum;\n    const { editedRowData } = action.payload;\n\n    delete editedRowData.tableMetaInfo;\n\n    const zoneIndex = getZoneIndex(state, index, editedRowData.id);\n    (draft.data[index] as Datum2D).zones.values[zoneIndex] = editedRowData;\n\n    if (editedRowData.signals) {\n      editedRowData.signals.forEach((signal: Signal2D) => {\n        setPathLength(\n          draft.correlations.values,\n          signal.id,\n          signal.j?.pathLength as FromTo,\n        );\n      });\n    }\n\n    handleOnChangeZonesData(draft);\n  }\n}\n\nfunction handleOnChangeZonesData(draft) {\n  handleUpdateCorrelations(draft);\n}\n\nexport {\n  add2dZoneHandler,\n  handleAutoZonesDetection,\n  handleDeleteSignal,\n  handleDeleteZone,\n  changeZoneSignalDelta,\n  handleChangeZoneSignalKind,\n  handleUnlinkZone,\n  handleSaveEditedZone,\n  handleSetDiaIDZone,\n  handleSetSignalPathLength,\n  changeZonesFactorHandler,\n  handleAutoSpectraZonesDetection,\n};\n","import { original, Draft } from 'immer';\nimport lodashCloneDeep from 'lodash/cloneDeep';\nimport {\n  buildCorrelationData,\n  setCorrelation,\n  Tolerance,\n  Options as CorrelationOptions,\n  Correlation,\n  Spectra,\n  Values as CorrelationValues,\n} from 'nmr-correlation';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport {\n  findRange,\n  findSignal1D,\n  findSignal2D,\n  findSpectrum,\n  findZone,\n} from '../../../data/utilities/FindUtilities';\nimport { State } from '../Reducer';\n\nimport { handleDeleteSignal as handleDeleteSignal1D } from './RangesActions';\nimport { handleDeleteSignal as handleDeleteSignal2D } from './ZonesActions';\n\nfunction handleUpdateCorrelations(draft: Draft<State>) {\n  const { data: spectra, correlations } = draft;\n  draft.correlations = buildCorrelationData(spectra as Spectra, {\n    ...correlations.options,\n    values: lodashCloneDeep(correlations.values),\n  });\n}\n\nfunction handleSetMF(draft: Draft<State>, payload: { mf: string }) {\n  const state = original(draft) as State;\n  const { data: spectra, correlations } = state;\n  const { mf } = payload;\n  // update of correlation data is needed only if the following is true\n  if (correlations.options.mf === '' || correlations.options.mf !== mf) {\n    draft.correlations = buildCorrelationData(spectra as Spectra, {\n      ...correlations.options,\n      mf,\n      values: lodashCloneDeep(correlations.values),\n    });\n  }\n}\n\nfunction handleSetTolerance(\n  draft: Draft<State>,\n  payload: { tolerance: Tolerance },\n) {\n  const state = original(draft) as State;\n  const { data: spectra, correlations } = state;\n  const { tolerance } = payload;\n  draft.correlations = buildCorrelationData(spectra as Spectra, {\n    ...correlations.options,\n    tolerance,\n    values: lodashCloneDeep(correlations.values),\n  });\n}\n\nfunction handleSetCorrelation(\n  draft: Draft<State>,\n  payload: {\n    id: string;\n    correlation: Correlation;\n    options: CorrelationOptions;\n  },\n) {\n  const state = original(draft) as State;\n  const { correlations } = state;\n  const { id, correlation, options } = payload;\n  draft.correlations = setCorrelation(correlations, id, correlation);\n  if (options) {\n    draft.correlations = {\n      ...draft.correlations,\n      options: { ...draft.correlations.options, ...options },\n    };\n  }\n  handleUpdateCorrelations(draft);\n}\n\nfunction handleSetCorrelations(\n  draft: Draft<State>,\n  payload: {\n    correlations: CorrelationValues;\n    options: CorrelationOptions;\n  },\n) {\n  const { correlations, options } = payload;\n  const state = original(draft) as State;\n  let correlationsData = lodashCloneDeep(state.correlations);\n  correlations.forEach((correlation) => {\n    correlationsData = setCorrelation(\n      correlationsData,\n      correlation.id,\n      correlation,\n    );\n  });\n  draft.correlations = correlationsData;\n  if (options) {\n    draft.correlations = {\n      ...draft.correlations,\n      options: { ...draft.correlations.options, ...options },\n    };\n  }\n  handleUpdateCorrelations(draft);\n}\n\nfunction handleDeleteCorrelation(\n  draft: Draft<State>,\n  payload: { correlation: Correlation; assignmentData },\n) {\n  const { correlation, assignmentData } = payload;\n  // delete all signals linked to the correlation\n  correlation.link.forEach((link) => {\n    const spectrum = findSpectrum(draft.data, link.experimentID, false);\n    if (spectrum) {\n      if (spectrum.info.dimension === 1) {\n        const range = findRange(spectrum as Datum1D, link.signal.id);\n        const signal = findSignal1D(spectrum as Datum1D, link.signal.id);\n        handleDeleteSignal1D(draft, {\n          payload: {\n            spectrum,\n            range,\n            signal,\n            assignmentData,\n          },\n        });\n      } else if (spectrum.info.dimension === 2) {\n        const zone = findZone(spectrum as Datum2D, link.signal.id);\n        const signal = findSignal2D(spectrum as Datum2D, link.signal.id);\n        handleDeleteSignal2D(draft, {\n          payload: {\n            spectrum,\n            zone,\n            signal,\n            assignmentData,\n          },\n        });\n      }\n    }\n  });\n}\n\nexport {\n  handleDeleteCorrelation,\n  handleSetCorrelation,\n  handleSetCorrelations,\n  handleSetMF,\n  handleSetTolerance,\n  handleUpdateCorrelations,\n};\n","import { zoomIdentity, scaleLinear } from 'd3';\nimport { Draft } from 'immer';\n\nimport { State } from '../Reducer';\n\nexport const ZoomType = {\n  HORIZONTAL: 'HORIZONTAL',\n  VERTICAL: 'VERTICAL',\n  STEP_HORIZONTAL: 'STEP_HORIZONTAL',\n  FULL: 'FULL',\n};\ninterface ZoomOptions {\n  factor?: number;\n  invert?: boolean;\n}\nfunction wheelZoom(\n  event: WheelEvent,\n  domain: number[],\n  zoomOptions: ZoomOptions = {},\n): number[] {\n  const { factor = 1, invert = false } = zoomOptions;\n  const deltaY =\n    Math.abs(event.deltaY) < 100 ? event.deltaY * 100 : event.deltaY;\n  const delta = deltaY * (invert ? -0.001 : 0.001) * factor;\n  const ratio = delta < 0 ? -1 / (delta - 1) : 1 + delta;\n\n  const [min, max] = domain;\n\n  return [min * ratio, max * ratio];\n}\n\nfunction setZoom(\n  draft: Draft<State>,\n  options: {\n    scale?: number;\n    spectrumID?: string;\n  } = {},\n) {\n  const { height, margin, activeSpectrum } = draft;\n  const { scale = 1, spectrumID = null } = options;\n\n  if (activeSpectrum === null && spectrumID === null) {\n    const { shareYDomain, yDomain, yDomains } = draft.originDomain;\n    draft.yDomains = Object.keys(draft.yDomains).reduce((acc, id) => {\n      const _scale = scaleLinear(shareYDomain ? yDomain : yDomains[id], [\n        height - margin.bottom,\n        margin.top,\n      ]);\n      const [min, max] = shareYDomain ? yDomain : yDomains[id];\n      const maxPoint = Math.max(Math.abs(max), Math.abs(min));\n      const scalePoint = maxPoint === max ? 0 : min;\n      const t = zoomIdentity\n        .translate(\n          0,\n          Math.sign(scalePoint) >= 0 ? _scale(scalePoint) : _scale(scalePoint),\n        )\n        .scale(scale)\n        .translate(0, -_scale(0));\n      const newYDomain = t.rescaleY(_scale).domain();\n      acc[id] = newYDomain;\n      return acc;\n    }, {});\n  } else {\n    const spectrumId = spectrumID || activeSpectrum?.id;\n    if (spectrumId) {\n      const _scale = scaleLinear(draft.originDomain.yDomains[spectrumId], [\n        height - margin.bottom,\n        margin.top,\n      ]);\n      const t = zoomIdentity\n        .translate(0, _scale(0))\n        .scale(scale)\n        .translate(0, -_scale(0));\n      const yDomain = t.rescaleY(_scale).domain();\n\n      draft.yDomains = {\n        ...draft.yDomains,\n        [spectrumId]: yDomain,\n      };\n    }\n  }\n}\n\nexport { setZoom, wheelZoom };\n","import { Draft } from 'immer';\n\nimport { generateSpectrumFromRanges } from '../../../data/data1d/Spectrum1D/ranges/generateSpectrumFromRanges';\nimport { State } from '../Reducer';\nimport { setZoom } from '../helper/Zoom1DManager';\n\nimport { setDomain } from './DomainActions';\n\nfunction handleRangeResurrecting(draft: Draft<State>, action) {\n  const { ranges, info } = action.payload;\n\n  const datum = generateSpectrumFromRanges(ranges, info, draft.usedColors);\n  draft.data.push(datum);\n  setDomain(draft, { yDomain: { isShared: false } });\n  setZoom(draft, { scale: 0.8, spectrumID: datum.id });\n}\n\nexport { handleRangeResurrecting };\n","import { Draft } from 'immer';\n\nimport { State } from '../Reducer';\n\nfunction setWidth(draft: Draft<State>, width) {\n  draft.width = width;\n}\n\nfunction handleSetDimensions(draft: Draft<State>, width, height) {\n  draft.width = width;\n  draft.height = height;\n}\n\nexport { setWidth, handleSetDimensions };\n","import { Datum1D } from '../../data/types/data1d/Datum1D';\nimport { Datum2D } from '../../data/types/data2d';\n\nimport nucleusToString from './nucleusToString';\n\nexport function getSpectraByNucleus(\n  nucleus: string,\n  data: (Datum1D | Datum2D)[],\n) {\n  return data.filter(\n    (spectrum) => nucleusToString(spectrum.info.nucleus) === nucleus,\n  );\n}\n","interface HistoryItem {\n  xDomain: Array<number>;\n  yDomain: Array<number>;\n}\n\nexport interface ZoomHistory {\n  [key: string]: Array<HistoryItem>;\n}\ninterface ZoomHistoryManager {\n  historyStack: Array<HistoryItem>;\n  push: (value: HistoryItem) => void;\n  pop: () => HistoryItem;\n  getLast: () => HistoryItem;\n  clear: () => void;\n}\n\nexport default function zoomHistoryManager(\n  zoomHistory: ZoomHistory,\n  nucleus: string,\n): ZoomHistoryManager {\n  if (!zoomHistory[nucleus] && !Array.isArray(zoomHistory[nucleus])) {\n    zoomHistory[nucleus] = [];\n  }\n\n  const push = preparePush(zoomHistory[nucleus]);\n  const pop = preparePop(zoomHistory[nucleus]);\n  const getLast = prepareGetLast(zoomHistory[nucleus]);\n  const clear = () => (zoomHistory[nucleus] = []);\n  return { historyStack: zoomHistory[nucleus], push, pop, getLast, clear };\n}\n\nfunction preparePush(historyStack) {\n  return (val: HistoryItem) => {\n    historyStack.push(val);\n  };\n}\n\nfunction preparePop(historyStack) {\n  return () => {\n    const val = historyStack.pop();\n    return val ? historyStack[historyStack.length - 1] : null;\n  };\n}\n\nfunction prepareGetLast(historyStack) {\n  return () => {\n    if (historyStack.length === 0) return null;\n    return historyStack[historyStack.length - 1];\n  };\n}\n","function getNucleusSum(input) {\n  const nucleus = input.split(',');\n  return nucleus.reduce((acc, i) => {\n    const additions = nucleus.length === 2 ? 100 : 0;\n    acc += Number(i.replace(/\\D/g, '')) + additions;\n    return acc;\n  }, 0);\n}\n\nexport default function GroupByInfoKey(key) {\n  return (array, orderByNucleus = false) => {\n    const unorderedGroup = array.reduce((objectsByKeyValue, obj) => {\n      const value = obj.info[key];\n      objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\n      return objectsByKeyValue;\n    }, {});\n\n    if (!orderByNucleus) {\n      return unorderedGroup;\n    } else {\n      return Object.keys(unorderedGroup)\n        .sort((a, b) => getNucleusSum(a) - getNucleusSum(b))\n        .reduce((acc, key) => {\n          acc[key] = unorderedGroup[key];\n          return acc;\n        }, {});\n    }\n  };\n}\n","import { Draft } from 'immer';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport GroupByInfoKey from '../../utility/GroupByInfoKey';\nimport nucleusToString from '../../utility/nucleusToString';\nimport { State, VerticalAlignment } from '../Reducer';\nimport { DEFAULT_YAXIS_SHIFT_VALUE, DISPLAYER_MODE } from '../core/Constants';\n\nimport { setDomain } from './DomainActions';\n\ninterface AlignmentOptions {\n  align?: VerticalAlignment | 'auto-check';\n  checkData?: boolean;\n  activeTab?: string;\n}\n\nfunction changeSpectrumVerticalAlignment(\n  draft: Draft<State>,\n  options: AlignmentOptions,\n) {\n  if (draft.data && draft.data.length > 0) {\n    let dataPerNucleus: Datum1D[] = [];\n    if (['auto-check', 'stack'].includes(options.align || '')) {\n      dataPerNucleus = (draft.data as Datum1D[]).filter((datum) =>\n        datum.info.nucleus === options?.activeTab\n          ? options.activeTab\n          : draft.activeTab && datum.info.dimension === 1,\n      );\n    }\n\n    switch (options.align) {\n      case 'auto-check':\n      case 'bottom':\n      case 'center': {\n        if (\n          options.align === 'center' ||\n          (options.align === 'auto-check' &&\n            dataPerNucleus[0]?.info.isFid &&\n            !dataPerNucleus.some((d) => d.info.isFid === false))\n        ) {\n          const YAxisShift = draft.height / 2;\n          draft.verticalAlign.align = 'center';\n          draft.verticalAlign.verticalShift = YAxisShift;\n        } else {\n          draft.verticalAlign.align = 'bottom';\n          draft.verticalAlign.verticalShift = DEFAULT_YAXIS_SHIFT_VALUE;\n        }\n        break;\n      }\n\n      case 'stack': {\n        draft.verticalAlign.align = 'stack';\n        const visibleSpectra = dataPerNucleus.filter(\n          (datum) => datum.display.isVisible === true,\n        );\n        draft.verticalAlign.verticalShift = Math.abs(\n          Math.floor(\n            (draft.height - draft.margin.bottom) / (visibleSpectra.length + 2),\n          ),\n        );\n        break;\n      }\n\n      default:\n        return;\n    }\n  }\n}\n\nfunction setKeyPreferencesHandler(draft: Draft<State>, keyCode) {\n  const {\n    activeTab,\n    data,\n    activeSpectrum,\n    zoom,\n    xDomain,\n    xDomains,\n    yDomain,\n    yDomains,\n    originDomain,\n    margin,\n    displayerMode,\n    tabActiveSpectrum,\n  } = draft;\n\n  if (activeTab) {\n    const groupByNucleus = GroupByInfoKey('nucleus');\n\n    const spectrumsGroupsList = groupByNucleus(data);\n\n    const level =\n      displayerMode === DISPLAYER_MODE.DM_2D\n        ? spectrumsGroupsList[activeTab].reduce((acc, datum) => {\n            acc[datum.id] = datum.processingController.getLevel();\n            return acc;\n          }, {})\n        : null;\n\n    draft.keysPreferences[keyCode] = {\n      activeTab,\n      activeSpectrum,\n      displayerMode,\n      tabActiveSpectrum,\n      zoom,\n      xDomain,\n      xDomains,\n      yDomain,\n      yDomains,\n      originDomain,\n      level,\n      margin,\n      data: spectrumsGroupsList[activeTab].reduce((acc, datum) => {\n        acc[datum.id] = {\n          display: {\n            color: datum.display.color,\n            isVisible: datum.display.isVisible,\n            isPeaksMarkersVisible: datum.display.isPeaksMarkersVisible,\n          },\n        };\n        return acc;\n      }, {}),\n    };\n  }\n}\n\nfunction applyKeyPreferencesHandler(draft: Draft<State>, keyCode) {\n  const preferences = draft.keysPreferences[keyCode];\n  if (preferences) {\n    draft.activeTab = preferences.activeTab;\n    (draft.data as Datum1D[] | Datum2D[]).forEach((datum, index) => {\n      if (nucleusToString(datum.info.nucleus) === preferences.activeTab) {\n        draft.data[index].display = Object.assign(\n          cloneDeep(datum.display),\n          preferences.data[datum.id].display,\n        );\n      }\n    });\n    draft.displayerMode = preferences.displayerMode;\n    draft.tabActiveSpectrum = preferences.tabActiveSpectrum;\n    draft.activeSpectrum = preferences.activeSpectrum;\n\n    draft.margin = preferences.margin;\n\n    setDomain(draft);\n\n    draft.xDomain = preferences.xDomain;\n    draft.xDomains = preferences.xDomains;\n    draft.yDomain = preferences.yDomain;\n    draft.originDomain = preferences.originDomain;\n    draft.yDomains = preferences.yDomains;\n\n    if (draft.displayerMode === DISPLAYER_MODE.DM_2D) {\n      for (const datumID of Object.keys(preferences.level)) {\n        const { levelPositive, levelNegative } = preferences.level[datumID];\n        const index = draft.data.findIndex((datum) => datum.id === datumID);\n        const processController = (draft.data[index] as Datum2D)\n          .processingController;\n        processController.setLevel(levelPositive, levelNegative);\n\n        draft.contours[datumID] = processController.drawContours();\n      }\n    } else {\n      draft.zoom = preferences.zoom;\n    }\n  }\n}\n\nexport {\n  changeSpectrumVerticalAlignment,\n  setKeyPreferencesHandler,\n  applyKeyPreferencesHandler,\n};\n","import { max } from 'd3';\nimport { original, Draft, current } from 'immer';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\n\nimport * as Filters from '../../../data/Filters';\nimport { Data1D, Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport generateID from '../../../data/utilities/generateID';\nimport { getYScale, getXScale } from '../../1d/utilities/scale';\nimport { LAYOUT } from '../../2d/utilities/DimensionLayout';\nimport { get2DYScale } from '../../2d/utilities/scale';\nimport { options } from '../../toolbar/ToolTypes';\nimport GroupByInfoKey from '../../utility/GroupByInfoKey';\nimport { getSpectraByNucleus } from '../../utility/getSpectraByNucleus';\nimport { State } from '../Reducer';\nimport { DISPLAYER_MODE, MARGIN } from '../core/Constants';\nimport { setZoom, wheelZoom, ZoomType } from '../helper/Zoom1DManager';\nimport zoomHistoryManager from '../helper/ZoomHistoryManager';\n\nimport {\n  setDomain,\n  SetDomainOptions,\n  setIntegralsYDomain,\n  setMode,\n} from './DomainActions';\nimport { resetSpectrumByFilter } from './FiltersActions';\nimport { changeSpectrumVerticalAlignment } from './PreferencesActions';\n\nfunction getStrongestPeak(draft: Draft<State>) {\n  const { activeSpectrum, data } = draft;\n  if (activeSpectrum) {\n    const activeData = data[activeSpectrum?.index].data as Data1D;\n    const strongestPeakValue = max(activeData.re);\n    const index = activeData.re.findIndex((val) => val === strongestPeakValue);\n    return {\n      xValue: activeData.x[index],\n      yValue: strongestPeakValue,\n      index: index,\n    };\n  }\n}\n\nfunction setFilterChanges(draft: Draft<State>, selectedFilter) {\n  const activeSpectrumId = draft.activeSpectrum?.id;\n\n  //save reduced snapshot\n  //select the equalizer tool when you enable manual phase correction filter\n  if (selectedFilter === Filters.phaseCorrection.id) {\n    const datumAfterPhaseCorrection = resetSpectrumByFilter(\n      draft,\n      Filters.phaseCorrection.id,\n      {\n        rollback: true,\n        searchBy: 'name',\n        returnCurrentDatum: true,\n      },\n    );\n    draft.tempData = current(draft).data;\n    if (datumAfterPhaseCorrection) {\n      draft.tempData[datumAfterPhaseCorrection?.index] =\n        datumAfterPhaseCorrection?.datum;\n    }\n    const { xValue, index } = getStrongestPeak(draft) || {\n      xValue: 0,\n      index: 0,\n    };\n\n    draft.toolOptions.data.pivot = { value: xValue, index };\n  } else {\n    if (draft.toolOptions.selectedTool === options.phaseCorrection.id) {\n      draft.toolOptions.data.activeFilterID = null;\n      const spectrumIndex = draft.data.findIndex(\n        (spectrum) => spectrum.id === activeSpectrumId,\n      );\n\n      draft.data[spectrumIndex].data = draft.tempData[spectrumIndex].data;\n    }\n  }\n}\n\nfunction resetTool(draft: Draft<State>, setDefaultTool = true) {\n  // reset temp range\n  draft.toolOptions.data.tempRange = null;\n\n  setSelectedOptionPanel(draft, null);\n  if (setDefaultTool) {\n    draft.toolOptions.selectedTool = options.zoom.id;\n  }\n  draft.toolOptions.data.baseLineZones = [];\n\n  if (draft.toolOptions.data.activeFilterID) {\n    resetSpectrumByFilter(draft);\n  }\n\n  if (draft.tempData) {\n    draft.tempData = null;\n    setDomain(draft);\n  }\n}\n\nfunction resetSelectedTool(draft: Draft<State>, filterOnly = false) {\n  if (\n    (draft.toolOptions.selectedTool &&\n      options[draft.toolOptions.selectedTool].isFilter) ||\n    !filterOnly\n  ) {\n    resetTool(draft);\n  }\n}\n\nfunction setSelectedTool(draft: Draft<State>, action) {\n  const { selectedTool } = action.payload;\n\n  if (draft?.data.length > 0) {\n    if (selectedTool) {\n      // start Range edit mode\n      if (selectedTool === options.editRange.id) {\n        draft.toolOptions.data.tempRange = action.payload.tempRange;\n      } else {\n        draft.toolOptions.data.tempRange = null;\n      }\n\n      if (selectedTool !== draft.toolOptions.selectedTool) {\n        resetTool(draft, false);\n      }\n\n      draft.toolOptions.selectedTool = selectedTool;\n\n      if (options[selectedTool].hasOptionPanel) {\n        setSelectedOptionPanel(draft, selectedTool);\n      }\n\n      if (options[selectedTool].isFilter) {\n        setFilterChanges(draft, selectedTool);\n      }\n    } else {\n      resetTool(draft, false);\n    }\n    setMargin(draft);\n  }\n}\n\nfunction setSelectedOptionPanel(draft: Draft<State>, selectedOptionPanel) {\n  draft.toolOptions.selectedOptionPanel = selectedOptionPanel;\n}\n\nfunction setSpectrumsVerticalAlign(draft: Draft<State>) {\n  const align = ['stack', 'center'].includes(draft.verticalAlign.align)\n    ? 'bottom'\n    : 'center';\n  changeSpectrumVerticalAlignment(draft, { align });\n}\n\nfunction handleChangeSpectrumDisplayMode(draft: Draft<State>) {\n  const align = draft.verticalAlign.align === 'stack' ? 'bottom' : 'stack';\n  changeSpectrumVerticalAlignment(draft, { align });\n}\n\nfunction handleAddBaseLineZone(draft: Draft<State>, { from, to }) {\n  const scaleX = getXScale(draft);\n\n  let start = scaleX.invert(from);\n  const end = scaleX.invert(to);\n\n  let zone: any = [];\n  if (start > end) {\n    zone = [end, start];\n  } else {\n    zone = [start, end];\n  }\n\n  const zones = draft.toolOptions.data.baseLineZones.slice();\n  zones.push({\n    id: generateID(),\n    from: zone[0],\n    to: zone[1],\n  });\n  draft.toolOptions.data.baseLineZones = zones;\n}\n\nfunction handleDeleteBaseLineZone(draft: Draft<State>, id) {\n  const state = original(draft) as State;\n  draft.toolOptions.data.baseLineZones =\n    state.toolOptions.data.baseLineZones.baseLineZones.filter(\n      (zone) => zone.id !== id,\n    );\n}\n\nfunction handleToggleRealImaginaryVisibility(draft) {\n  if (draft.activeSpectrum != null) {\n    const { index } = draft.activeSpectrum;\n\n    draft.data[index].display.isRealSpectrumVisible =\n      !draft.data[index].display.isRealSpectrumVisible;\n\n    setDomain(draft);\n  }\n}\n\nfunction handleBrushEnd(draft: Draft<State>, action) {\n  const is2D = draft.displayerMode === DISPLAYER_MODE.DM_2D;\n  const xScale = getXScale(draft);\n\n  const yScale = is2D ? get2DYScale(draft) : getYScale(draft);\n\n  const startX = xScale.invert(action.startX);\n  const endX = xScale.invert(action.endX);\n  const startY = yScale.invert(action.startY);\n  const endY = yScale.invert(action.endY);\n  const domainX = startX > endX ? [endX, startX] : [startX, endX];\n  const domainY = startY > endY ? [endY, startY] : [startY, endY];\n  const brushHistory = zoomHistoryManager(draft.zoom.history, draft.activeTab);\n  if (draft.displayerMode === DISPLAYER_MODE.DM_2D) {\n    switch (action.trackID) {\n      case LAYOUT.CENTER_2D:\n        draft.xDomain = domainX;\n        draft.yDomain = domainY;\n        break;\n      case LAYOUT.TOP_1D:\n        draft.xDomain = domainX;\n        break;\n      case LAYOUT.LEFT_1D:\n        draft.yDomain = domainY;\n        break;\n      default:\n        break;\n    }\n    if (brushHistory) {\n      brushHistory.push({ xDomain: draft.xDomain, yDomain: draft.yDomain });\n    }\n  } else {\n    draft.xDomain = domainX;\n    if (brushHistory) {\n      brushHistory.push({ xDomain: domainX, yDomain: domainY });\n    }\n  }\n}\nfunction setVerticalIndicatorXPosition(draft: Draft<State>, position) {\n  if (draft.activeSpectrum?.id) {\n    const scaleX = getXScale(draft);\n    const value = scaleX.invert(position);\n    const datum = draft.data[draft.activeSpectrum.index] as Datum1D;\n    const index = xFindClosestIndex(datum.data.x, value);\n    draft.toolOptions.data.pivot = { value, index };\n  }\n}\n\nfunction getSpectrumID(draft: Draft<State>, index): string | null {\n  const spectrum = draft.tabActiveSpectrum[draft.activeTab.split(',')[index]];\n  return spectrum?.id ? spectrum.id : null;\n}\n\nfunction handleZoom(draft: Draft<State>, action) {\n  const { event, trackID, selectedTool } = action;\n  const {\n    activeSpectrum,\n    toolOptions: {\n      data: { showRangesIntegrals },\n    },\n    displayerMode,\n  } = draft;\n  if (displayerMode === DISPLAYER_MODE.DM_2D) {\n    const index =\n      trackID === LAYOUT.TOP_1D ? 0 : trackID === LAYOUT.LEFT_1D ? 1 : null;\n    if (index !== null) {\n      const id = getSpectrumID(draft, index);\n      if (id) {\n        const domain = draft.yDomains[id];\n        draft.yDomains[id] = wheelZoom(event, domain);\n      }\n    }\n  } else {\n    if (activeSpectrum?.id) {\n      if (\n        (showRangesIntegrals || selectedTool === options.integral.id) &&\n        event.shiftKey\n      ) {\n        const domain = draft.integralsYDomains[activeSpectrum?.id];\n        draft.integralsYDomains[activeSpectrum?.id] = wheelZoom(event, domain);\n      } else {\n        const domain = draft.yDomains[activeSpectrum?.id];\n        draft.yDomains[activeSpectrum?.id] = wheelZoom(event, domain);\n      }\n    } else {\n      const spectra = getSpectraByNucleus(\n        draft.activeTab,\n        draft.data,\n      ) as Datum1D[];\n      for (const spectrum of spectra) {\n        const domain = draft.yDomains[spectrum.id];\n        draft.yDomains[spectrum.id] = wheelZoom(event, domain);\n      }\n    }\n  }\n}\n\nfunction zoomOut(draft: Draft<State>, action) {\n  if (draft?.data.length > 0) {\n    const { zoomType, trackID } = action;\n    const zoomHistory = zoomHistoryManager(draft.zoom.history, draft.activeTab);\n\n    if (draft.displayerMode === DISPLAYER_MODE.DM_1D) {\n      switch (zoomType) {\n        case ZoomType.HORIZONTAL: {\n          draft.xDomain = draft.originDomain.xDomain;\n          zoomHistory.clear();\n          break;\n        }\n        case ZoomType.VERTICAL:\n          setZoom(draft, { scale: 0.8 });\n          break;\n        case ZoomType.STEP_HORIZONTAL: {\n          const zoomValue = zoomHistory.pop();\n          draft.xDomain = zoomValue\n            ? zoomValue.xDomain\n            : draft.originDomain.xDomain;\n          setZoom(draft, { scale: 0.8 });\n          break;\n        }\n        default: {\n          draft.xDomain = draft.originDomain.xDomain;\n          setZoom(draft, { scale: 0.8 });\n          break;\n        }\n      }\n    } else {\n      const { xDomain, yDomain, yDomains } = draft.originDomain;\n\n      if ([LAYOUT.TOP_1D, LAYOUT.LEFT_1D, LAYOUT.CENTER_2D].includes(trackID)) {\n        const zoomValue = zoomHistory.pop();\n        draft.xDomain = zoomValue ? zoomValue.xDomain : xDomain;\n        draft.yDomain = zoomValue ? zoomValue.yDomain : yDomain;\n      } else {\n        zoomHistory.clear();\n        draft.xDomain = xDomain;\n        draft.yDomain = yDomain;\n        draft.yDomains = yDomains;\n      }\n    }\n  }\n}\n\nfunction hasAcceptedSpectrum(draft: Draft<State>, index) {\n  const nucleuses = draft.activeTab.split(',');\n  const activeSpectrum = draft.tabActiveSpectrum[nucleuses[index]];\n  return (\n    activeSpectrum?.id &&\n    !(draft.data[activeSpectrum.index] as Datum1D).info.isFid\n  );\n}\n\nfunction setMargin(draft: Draft<State>) {\n  if (\n    draft.displayerMode === DISPLAYER_MODE.DM_2D &&\n    draft.toolOptions.selectedTool !== options.slicingTool.id\n  ) {\n    const top = hasAcceptedSpectrum(draft, 0)\n      ? MARGIN['2D'].top\n      : MARGIN['1D'].top;\n    const left = hasAcceptedSpectrum(draft, 1)\n      ? MARGIN['2D'].left\n      : MARGIN['1D'].left;\n    draft.margin = { ...MARGIN['2D'], top, left };\n  } else if (draft.toolOptions.selectedTool === options.slicingTool.id) {\n    draft.margin = MARGIN['2D'];\n  } else if (draft.displayerMode === DISPLAYER_MODE.DM_1D) {\n    draft.margin = MARGIN['1D'];\n  }\n}\n\nfunction Processing2DData(draft: Draft<State>, data) {\n  if (draft.displayerMode === DISPLAYER_MODE.DM_2D) {\n    let _data = {};\n    for (const datum of data[draft.activeTab]) {\n      _data[datum.id] = datum.processingController.drawContours();\n    }\n    draft.contours = _data;\n  }\n}\n\nfunction setDisplayerMode(draft: Draft<State>, data) {\n  draft.displayerMode =\n    data && (data as Datum1D[] | Datum2D[]).some((d) => d.info.dimension === 2)\n      ? DISPLAYER_MODE.DM_2D\n      : DISPLAYER_MODE.DM_1D;\n}\n\nfunction setTabActiveSpectrum(draft: Draft<State>, dataGroupByTab) {\n  let tabs2D: any[] = [];\n  const tabActiveSpectrum = {};\n\n  const tabkeys = Object.keys(dataGroupByTab).sort((a, b) =>\n    a.split(',').length > b.split(',').length ? -1 : 1,\n  );\n  for (let tabKey of tabkeys) {\n    const data = dataGroupByTab[tabKey];\n    const nucleusLength = tabKey.split(',').length;\n    if (nucleusLength === 2) {\n      tabs2D.push(tabKey);\n    }\n\n    if (data.length === 1) {\n      const index = draft.data.findIndex((datum) => datum.id === data[0].id);\n      tabActiveSpectrum[tabKey] = { id: data[0].id, index };\n    } else {\n      const tabSpectra = dataGroupByTab[tabKey];\n      const tabSpectraLength = tabSpectra.length;\n      if (tabSpectraLength >= 2) {\n        const FTSpectrums = tabSpectra.filter((d) => !d.info.isFid);\n        if (\n          FTSpectrums.length > 0 &&\n          (nucleusLength === 2 ||\n            (nucleusLength === 1 && tabSpectraLength !== FTSpectrums.length))\n        ) {\n          const index = draft.data.findIndex(\n            (datum) => datum.id === FTSpectrums[0].id,\n          );\n          tabActiveSpectrum[tabKey] = { id: FTSpectrums[0].id, index };\n        } else {\n          tabActiveSpectrum[tabKey] = null;\n        }\n      } else {\n        tabActiveSpectrum[tabKey] = null;\n      }\n    }\n  }\n  draft.tabActiveSpectrum = tabActiveSpectrum;\n  return tabs2D;\n}\n\nfunction setTab(draft: Draft<State>, dataGroupByTab, tab, refresh = false) {\n  const groupByTab = Object.keys(dataGroupByTab).sort((a, b) =>\n    a.split(',').length > b.split(',').length ? -1 : 1,\n  );\n\n  if (\n    JSON.stringify(groupByTab) !==\n      JSON.stringify(Object.keys(draft.tabActiveSpectrum)) ||\n    refresh\n  ) {\n    const tabs2D = setTabActiveSpectrum(draft, dataGroupByTab);\n\n    if (tabs2D.length > 0 && tab == null) {\n      draft.activeSpectrum = draft.tabActiveSpectrum[tabs2D[0]];\n      draft.activeTab = tabs2D[0];\n    } else {\n      draft.activeSpectrum = tab ? draft.tabActiveSpectrum[tab] : tab;\n      draft.activeTab = tab;\n    }\n  } else {\n    draft.activeTab = tab;\n    draft.activeSpectrum = draft.tabActiveSpectrum[tab];\n  }\n\n  setDisplayerMode(draft, dataGroupByTab[draft.activeTab]);\n  setMargin(draft);\n}\n\ninterface SetActiveTabOptions {\n  tab?: string | null;\n  refreshActiveTab?: boolean;\n  domainOptions?: SetDomainOptions;\n}\n\nfunction setActiveTab(draft: Draft<State>, options?: SetActiveTabOptions) {\n  const {\n    tab = null,\n    refreshActiveTab = false,\n    domainOptions = {},\n  } = options || {};\n\n  const groupByNucleus = GroupByInfoKey('nucleus');\n  const dataGroupByNucleus = groupByNucleus(draft.data, true);\n  const tabs = Object.keys(dataGroupByNucleus);\n  const currentTab = !tab || !tabs.includes(tab || '') ? tabs[0] : tab;\n  setTab(draft, dataGroupByNucleus, currentTab, refreshActiveTab);\n  resetTool(draft);\n\n  Processing2DData(draft, dataGroupByNucleus);\n\n  setDomain(draft, domainOptions);\n  setIntegralsYDomain(draft, dataGroupByNucleus[currentTab]);\n\n  const zoomHistory = zoomHistoryManager(draft.zoom.history, draft.activeTab);\n  const zoomValue = zoomHistory.getLast();\n  if (zoomValue) {\n    draft.xDomain = zoomValue.xDomain;\n    draft.yDomain = zoomValue.yDomain;\n  }\n  setMode(draft);\n}\n\nfunction handelSetActiveTab(draft: Draft<State>, tab) {\n  if (tab) {\n    setActiveTab(draft, { tab });\n  }\n}\n\nfunction levelChangeHandler(draft: Draft<State>, { deltaY, shiftKey }) {\n  try {\n    if (draft.activeSpectrum?.id) {\n      const { index, id } = draft.activeSpectrum;\n      const processingController = (draft.data[index] as Datum2D)\n        .processingController;\n      if (shiftKey) {\n        processingController.shiftWheel(deltaY);\n      } else {\n        processingController.wheel(deltaY);\n      }\n      const contours = Object.freeze(processingController.drawContours());\n      draft.contours[id] = contours;\n    }\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n}\n\nfunction setSpectraSameTopHandler(draft: Draft<State>) {\n  if (draft.displayerMode === DISPLAYER_MODE.DM_1D) {\n    draft.originDomain.shareYDomain = false;\n    setZoom(draft, { scale: 0.8 });\n  }\n}\nfunction resetSpectraScale(draft: Draft<State>) {\n  draft.originDomain.shareYDomain = true;\n  draft.yDomains = draft.originDomain.yDomains;\n  draft.yDomain = draft.originDomain.yDomain;\n  setZoom(draft, { scale: 0.8 });\n}\n\nexport {\n  resetSelectedTool,\n  setSelectedTool,\n  setSelectedOptionPanel,\n  setSpectrumsVerticalAlign,\n  handleChangeSpectrumDisplayMode,\n  handleAddBaseLineZone,\n  handleDeleteBaseLineZone,\n  handleToggleRealImaginaryVisibility,\n  handleBrushEnd,\n  setVerticalIndicatorXPosition,\n  handleZoom,\n  zoomOut,\n  handelSetActiveTab,\n  levelChangeHandler,\n  setActiveTab,\n  setTab,\n  setSpectraSameTopHandler,\n  resetSpectraScale,\n};\n","import { current, Draft } from 'immer';\n\nimport * as Filters from '../../../data/Filters';\nimport * as FiltersManager from '../../../data/FiltersManager';\nimport { updateXShift } from '../../../data/data1d/Spectrum1D';\nimport { apply as autoPhaseCorrection } from '../../../data/data1d/filter1d/autoPhaseCorrection';\nimport { apply as phaseCorrection } from '../../../data/data1d/filter1d/phaseCorrection';\nimport { updateShift as update2dShift } from '../../../data/data2d/Spectrum2D';\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport generateID from '../../../data/utilities/generateID';\nimport { getSpectraByNucleus } from '../../utility/getSpectraByNucleus';\nimport nucleusToString from '../../utility/nucleusToString';\nimport { ActiveSpectrum, State } from '../Reducer';\nimport zoomHistoryManager from '../helper/ZoomHistoryManager';\nimport getRange from '../helper/getRange';\n\nimport { setDomain, setMode } from './DomainActions';\nimport { changeSpectrumVerticalAlignment } from './PreferencesActions';\nimport { resetSelectedTool } from './ToolsActions';\n\nfunction shiftSpectrumAlongXAxis(draft: Draft<State>, shiftValue) {\n  //apply filter into the spectrum\n  if (draft.activeSpectrum?.id) {\n    const index = draft.activeSpectrum?.index;\n\n    FiltersManager.applyFilter(draft.data[index], [\n      { name: Filters.shiftX.id, options: shiftValue },\n    ]);\n    updateXShift(draft.data[index] as Datum1D);\n    resetSelectedTool(draft);\n    setDomain(draft);\n  }\n}\n\nfunction applyZeroFillingFilter(draft: Draft<State>, filterOptions) {\n  if (draft.activeSpectrum?.id) {\n    const index = draft.activeSpectrum.index;\n    const filters = [\n      { name: Filters.zeroFilling.id, options: filterOptions.zeroFillingSize },\n      {\n        name: Filters.lineBroadening.id,\n        options: filterOptions.lineBroadeningValue,\n      },\n    ];\n    FiltersManager.applyFilter(draft.data[index], filters);\n    resetSelectedTool(draft);\n    setDomain(draft);\n    setMode(draft);\n  }\n}\nfunction applyFFTFilter(draft: Draft<State>) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    //apply filter into the spectrum\n    FiltersManager.applyFilter(draft.data[index], [\n      { name: Filters.fft.id, options: {} },\n    ]);\n    resetSelectedTool(draft);\n    changeSpectrumVerticalAlignment(draft, { align: 'bottom' });\n\n    setDomain(draft, { yDomain: { isChanged: true } });\n    setMode(draft);\n  }\n}\nfunction applyManualPhaseCorrectionFilter(draft: Draft<State>, filterOptions) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    const { ph0, ph1 } = filterOptions;\n\n    FiltersManager.applyFilter(draft.data[index], [\n      { name: Filters.phaseCorrection.id, options: { ph0, ph1 } },\n    ]);\n\n    resetSelectedTool(draft);\n    draft.tempData = null;\n    setDomain(draft);\n  }\n}\nfunction applyAbsoluteFilter(draft: Draft<State>) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    FiltersManager.applyFilter(draft.data[index], [\n      { name: Filters.absolute.id, options: {} },\n    ]);\n\n    resetSelectedTool(draft);\n    draft.tempData = null;\n    setDomain(draft);\n  }\n}\n\nfunction applyAutoPhaseCorrectionFilter(draft: Draft<State>) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    const { ph0, ph1 } = autoPhaseCorrection(draft.data[index]);\n\n    FiltersManager.applyFilter(draft.data[index], [\n      { name: Filters.phaseCorrection.id, options: { ph0, ph1 } },\n    ]);\n\n    resetSelectedTool(draft);\n    draft.tempData = null;\n    setDomain(draft);\n  }\n}\n\nfunction calculateManualPhaseCorrection(draft: Draft<State>, filterOptions) {\n  if (draft.activeSpectrum) {\n    const { index } = draft.activeSpectrum;\n    const {\n      data: { x, re, im },\n      info,\n    } = draft.data[index] as Datum1D;\n\n    const { ph0, ph1 } = filterOptions;\n    let _data = { data: { x: x, re: re, im }, info };\n    phaseCorrection(_data, { ph0, ph1 });\n    const { im: newIm, re: newRe } = _data.data;\n    draft.tempData[index].data.im = newIm;\n    draft.tempData[index].data.re = newRe;\n  }\n}\n\nfunction enableFilter(draft: Draft<State>, filterID, checked) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    //apply filter into the spectrum\n    FiltersManager.enableFilter(draft.data[index], filterID, checked);\n\n    if (draft.data[index].info?.dimension === 1) {\n      updateXShift(draft.data[index] as Datum1D);\n    } else if (draft.data[index].info?.dimension === 2) {\n      update2dShift(draft.data[index] as Datum2D);\n    }\n\n    resetSelectedTool(draft);\n    setDomain(draft);\n    setMode(draft);\n\n    const zoomHistory = zoomHistoryManager(draft.zoom.history, draft.activeTab);\n    const zoomValue = zoomHistory.getLast();\n    if (zoomValue) {\n      draft.xDomain = zoomValue.xDomain;\n      draft.yDomain = zoomValue.yDomain;\n    }\n  }\n}\n\nfunction deleteFilter(draft: Draft<State>, actions) {\n  const filterID = actions.payload.id;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    //apply filter into the spectrum\n    FiltersManager.deleteFilter(draft.data[index], filterID);\n\n    if (draft.data[index].info?.dimension === 1) {\n      updateXShift(draft.data[index] as Datum1D);\n    } else if (draft.data[index].info?.dimension === 2) {\n      update2dShift(draft.data[index] as Datum2D);\n    }\n\n    resetSelectedTool(draft);\n    setDomain(draft);\n    setMode(draft);\n  }\n}\nfunction deleteSpectraFilter(draft: Draft<State>, actions) {\n  const filterType = actions.payload.filterType;\n\n  if (draft.activeTab) {\n    for (const datum of draft.data) {\n      if (nucleusToString(datum?.info?.nucleus) === draft.activeTab) {\n        const filtersResult =\n          datum.filters?.filter((filter) => filter.name === filterType) || [];\n\n        filtersResult.forEach((filter) => {\n          FiltersManager.deleteFilter(datum, filter.id);\n\n          if (datum.info?.dimension === 1) {\n            updateXShift(datum as Datum1D);\n          } else if (datum.info?.dimension === 2) {\n            update2dShift(datum as Datum2D);\n          }\n        });\n      }\n    }\n\n    resetSelectedTool(draft);\n    setDomain(draft);\n    setMode(draft);\n  }\n}\n\nfunction handleBaseLineCorrectionFilter(draft: Draft<State>, action) {\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    FiltersManager.applyFilter(draft.data[index], [\n      {\n        name: Filters.baselineCorrection.id,\n        options: {\n          zones: draft.toolOptions.data.baseLineZones,\n          ...action.options,\n        },\n      },\n    ]);\n\n    draft.toolOptions.data.baseLineZones = [];\n    const xDomainSnapshot = draft.xDomain.slice();\n\n    resetSelectedTool(draft);\n    setDomain(draft);\n    draft.xDomain = xDomainSnapshot;\n  }\n}\n\n/**\n * reset spectrum data for specific point of time (Filter)\n * @param {object} draft\n * @param {string} id Filter id\n * @param {object} options\n * @param {boolean=} options.resetTool\n * @param {boolean=} options.updateDomain\n * @param {boolean=} options.rollback\n */\nfunction resetSpectrumByFilter(\n  draft,\n  id: string | null = null,\n  options: {\n    rollback?: boolean;\n    resetTool?: boolean;\n    updateDomain?: boolean;\n    returnCurrentDatum?: boolean;\n    searchBy?: 'id' | 'name';\n  } = {},\n  activeSpectrum: ActiveSpectrum | null = null,\n) {\n  const {\n    updateDomain = true,\n    rollback = false,\n    searchBy = 'id',\n    returnCurrentDatum = false,\n  } = options;\n\n  let currentDatum: any = null;\n\n  const currentActiveSpectrum = activeSpectrum\n    ? activeSpectrum\n    : draft.activeSpectrum;\n\n  if (currentActiveSpectrum?.id) {\n    const index = currentActiveSpectrum.index;\n    const datum = draft.data[index] as Datum1D | Datum2D;\n\n    if (id && draft.toolOptions.data.activeFilterID !== id) {\n      const filterIndex = datum.filters.findIndex((f) => f[searchBy] === id);\n      let filters: any[] = [];\n      if (filterIndex !== -1) {\n        filters = datum.filters.slice(\n          0,\n          rollback ? filterIndex : filterIndex + 1,\n        );\n\n        if (filters.length > 1) {\n          draft.toolOptions.data.activeFilterID =\n            datum.filters[rollback ? filterIndex - 1 : filterIndex]?.id;\n        } else {\n          draft.toolOptions.data.activeFilterID = null;\n        }\n\n        FiltersManager.reapplyFilters(datum, filters);\n\n        if (returnCurrentDatum) {\n          const { name, value: options } = datum.filters[filterIndex];\n          const newDatum = current(draft).data[index];\n          if (newDatum.info?.dimension === 1) {\n            FiltersManager.applyFilter(newDatum, [{ name, options }]);\n          }\n\n          currentDatum = { datum: newDatum, index };\n        }\n      }\n    } else {\n      //close filter snapshot mode and replay all enabled filters\n      draft.toolOptions.data.activeFilterID = null;\n      FiltersManager.reapplyFilters(datum);\n    }\n\n    if (datum.info?.dimension === 1) {\n      updateXShift(datum as Datum1D);\n    } else if (datum.info?.dimension === 2) {\n      update2dShift(datum as Datum2D);\n    }\n\n    if (updateDomain) {\n      setDomain(draft);\n      setMode(draft);\n    }\n  }\n  if (returnCurrentDatum) {\n    return currentDatum;\n  }\n}\n\nfunction filterSnapshotHandler(draft: Draft<State>, action) {\n  resetSpectrumByFilter(draft, action.id);\n}\n\nfunction handleMultipleSpectraFilter(draft: Draft<State>, action) {\n  const spectra = getSpectraByNucleus(draft.activeTab, draft.data);\n\n  if (spectra && spectra.length > 0 && Array.isArray(action.payload)) {\n    const exclusions =\n      spectra[0].filters.find((f) => f.name === Filters.exclusionZones.id)\n        ?.value || [];\n\n    for (const spectrum of spectra) {\n      const filters = action.payload.map((filter) => {\n        if (filter.name === Filters.equallySpaced.id) {\n          return {\n            ...filter,\n            options: { ...filter.options, exclusions },\n          };\n        }\n        return filter;\n      });\n\n      FiltersManager.applyFilter(spectrum, filters);\n    }\n  }\n  setDomain(draft);\n}\n\nfunction handleAddExclusionZone(draft: Draft<State>, action) {\n  const { from: startX, to: endX } = action.payload;\n  const range = getRange(draft, { startX, endX });\n\n  let spectra: Datum1D[];\n\n  if (draft.activeSpectrum?.id) {\n    const index = draft.activeSpectrum?.index;\n    spectra = [draft.data[index] as Datum1D];\n  } else {\n    spectra = getSpectraByNucleus(draft.activeTab, draft.data) as Datum1D[];\n  }\n\n  for (const spectrum of spectra) {\n    FiltersManager.applyFilter(spectrum, [\n      {\n        name: Filters.exclusionZones.id,\n        options: [\n          {\n            id: generateID(),\n            from: range[0],\n            to: range[1],\n          },\n        ],\n      },\n    ]);\n  }\n\n  setDomain(draft);\n}\n\nfunction handleDeleteExclusionZone(draft: Draft<State>, action) {\n  const { id, spectrumID } = action.payload;\n  const spectrumIndex = draft.data.findIndex(\n    (spectrum) => spectrum.id === spectrumID,\n  );\n  const exclusionZonesFilter = draft.data[spectrumIndex].filters.find(\n    (filter) => filter.name === Filters.exclusionZones.id,\n  );\n  if (exclusionZonesFilter) {\n    if (exclusionZonesFilter.value.length === 1) {\n      FiltersManager.deleteFilter(\n        draft.data[spectrumIndex],\n        exclusionZonesFilter.id,\n      );\n    } else {\n      exclusionZonesFilter.value = exclusionZonesFilter.value.filter(\n        (zone) => zone.id !== id,\n      );\n      FiltersManager.reapplyFilters(draft.data[spectrumIndex]);\n    }\n  }\n}\n\nexport {\n  shiftSpectrumAlongXAxis,\n  applyZeroFillingFilter,\n  applyFFTFilter,\n  applyManualPhaseCorrectionFilter,\n  applyAutoPhaseCorrectionFilter,\n  applyAbsoluteFilter,\n  calculateManualPhaseCorrection,\n  handleMultipleSpectraFilter,\n  enableFilter,\n  deleteFilter,\n  deleteSpectraFilter,\n  handleBaseLineCorrectionFilter,\n  filterSnapshotHandler,\n  resetSpectrumByFilter,\n  handleAddExclusionZone,\n  handleDeleteExclusionZone,\n};\n","import { Draft } from 'immer';\n\nimport { State } from '../Reducer';\n\nfunction setIsOverDisplayer(draft: Draft<State>, actions) {\n  draft.overDisplayer = actions.payload;\n}\nexport { setIsOverDisplayer };\n","import { setDomain, getDomain } from './DomainActions';\n\nfunction handleHistoryUndo(draft) {\n  const { past, present, future } = draft.history;\n  const previous = past[past.length - 1];\n  const newPast = past.slice(0, past.length - 1);\n  const newfuture = [present, ...future];\n\n  const hasRedo = newfuture.length !== 0;\n  const hasUndo = past.length !== 0;\n\n  const domain = getDomain(draft.data);\n  const history = {\n    past: newPast,\n    present: previous,\n    future: newfuture,\n    hasRedo,\n    hasUndo,\n  };\n\n  draft.xDomain = domain.xDomain;\n  draft.yDomain = domain.yDomain;\n  draft.originDomain = domain;\n  draft.history = history;\n}\n\nfunction handleHistoryRedo(draft) {\n  const { history } = draft;\n  const newPresent = history.future.shift();\n  history.past.push(history.present);\n  history.present = newPresent;\n  history.hasUndo = true;\n  history.hasRedo = history.future.length > 0;\n\n  setDomain(draft.data);\n}\n\nfunction handleHistoryReset(draft, action) {\n  draft.history = {\n    past: [],\n    present: action,\n    future: [],\n    hasRedo: false,\n    hasUndo: false,\n  };\n}\n\nexport { handleHistoryUndo, handleHistoryRedo, handleHistoryReset };\n","import { Draft, original } from 'immer';\nimport { xyIntegration } from 'ml-spectra-processing';\n\nimport {\n  updateIntegralsRelativeValues,\n  changeIntegralsRelative,\n  getShiftX,\n} from '../../../data/data1d/Spectrum1D';\nimport {\n  initSumOptions,\n  setSumOptions,\n} from '../../../data/data1d/Spectrum1D/SumManager';\nimport { Datum1D } from '../../../data/types/data1d';\nimport generateID from '../../../data/utilities/generateID';\nimport { State } from '../Reducer';\nimport getRange from '../helper/getRange';\n\nimport { setIntegralsYDomain } from './DomainActions';\n\nfunction handleChangeIntegralSum(draft: Draft<State>, options) {\n  const { data, activeSpectrum, activeTab: nucleus } = draft;\n  if (activeSpectrum?.id) {\n    const { index } = activeSpectrum;\n    const datum = data[index] as Datum1D;\n    setSumOptions(datum.integrals, { options, nucleus });\n    updateIntegralsRelativeValues(datum, true);\n  }\n}\n\nfunction addIntegral(draft: Draft<State>, action) {\n  const { startX, endX } = action;\n  const { data, molecules, activeTab: nucleus, activeSpectrum } = draft;\n  const [from, to] = getRange(draft, { startX, endX });\n\n  if (activeSpectrum?.id) {\n    const datum = data[activeSpectrum.index] as Datum1D;\n\n    const { x, re } = datum.data;\n\n    const shiftX = getShiftX(datum);\n\n    const integral = {\n      id: generateID(),\n      originFrom: from - shiftX,\n      originTo: to - shiftX,\n      from,\n      to,\n      absolute: xyIntegration({ x, y: re }, { from, to, reverse: true }), // the real value\n      kind: 'signal',\n    };\n    datum.integrals.values.push(integral);\n    datum.integrals.options = initSumOptions(datum.integrals.options, {\n      molecules,\n      nucleus,\n    });\n    updateIntegralsRelativeValues(datum);\n    setIntegralsYDomain(draft, datum);\n  }\n}\n\nfunction deleteIntegral(draft: Draft<State>, action) {\n  if (draft.activeSpectrum) {\n    const state = original(draft) as State;\n    const { index } = draft.activeSpectrum;\n    const { integralID } = action;\n\n    const datum = draft.data[index] as Datum1D;\n\n    if (integralID == null) {\n      datum.integrals.values = [];\n    } else {\n      const peakIndex = (\n        state.data[index] as Datum1D\n      ).integrals.values.findIndex((p) => p.id === integralID);\n      datum.integrals.values.splice(peakIndex, 1);\n      updateIntegralsRelativeValues(datum);\n    }\n  }\n}\n\nfunction changeIntegral(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  const integral = action.payload.data;\n\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n\n    const originalDatum = state.data[index] as Datum1D;\n    const datum = draft.data[index] as Datum1D;\n\n    const { x, re } = originalDatum.data;\n    const integralIndex = originalDatum.integrals.values.findIndex(\n      (i) => i.id === integral.id,\n    );\n\n    if (integralIndex !== -1) {\n      datum.integrals.values[integralIndex] = {\n        originFrom: integral.from,\n        originTo: integral.to,\n        ...integral,\n        absolute: xyIntegration(\n          { x, y: re },\n          { from: integral.from, to: integral.to, reverse: true },\n        ),\n      };\n      updateIntegralsRelativeValues(datum);\n    }\n  }\n}\n\nfunction handleChangeIntegralsRelativeValue(draft: Draft<State>, action) {\n  const data = action.payload.data;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    changeIntegralsRelative(draft.data[index] as Datum1D, data);\n  }\n}\n\nfunction handleChangeIntegralsSumFlag(draft, action) {\n  const flag = action.payload;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    draft.data[index].integrals.options.isSumConstant = !flag;\n  }\n}\n\nexport {\n  handleChangeIntegralSum,\n  addIntegral,\n  deleteIntegral,\n  changeIntegral,\n  handleChangeIntegralsRelativeValue,\n  handleChangeIntegralsSumFlag,\n};\n","import { Molecule as OCLMolecule } from 'openchemlib/full';\n\nimport { initMolecule, Molecule } from './Molecule';\n\nexport function fromJSON(mols: any[] = []) {\n  const molecules: Molecule[] = [];\n  for (const mol of mols) {\n    const molecule = OCLMolecule.fromMolfile(mol.molfile);\n    const fragments = molecule.getFragments();\n    for (let fragment of fragments) {\n      molecules.push(\n        initMolecule({\n          molfile: fragment.toMolfileV3(),\n        }),\n      );\n    }\n  }\n\n  return molecules;\n}\n\nexport function addMolfile(molecules, molfile) {\n  // try to parse molfile\n  // this will throw if the molecule can not be parsed !\n  const molecule = OCLMolecule.fromMolfile(molfile);\n  let fragments = molecule.getFragments();\n  for (let fragment of fragments) {\n    molecules.push(\n      initMolecule({\n        molfile: fragment.toMolfileV3(),\n      }),\n    );\n  }\n  // we will split if we have many fragments\n}\n\nexport function setMolfile(molecules, molfile, key) {\n  // try to parse molfile\n  // this will throw if the molecule can not be parsed !\n  let molecule = OCLMolecule.fromMolfile(molfile);\n  let fragments = molecule.getFragments();\n\n  if (fragments.length > 1) {\n    molecules = molecules.filter((m) => m.key !== key);\n\n    for (let fragment of fragments) {\n      molecules.push(\n        initMolecule({\n          molfile: fragment.toMolfileV3(),\n        }),\n      );\n    }\n  } else if (fragments.length === 1) {\n    const fragment = fragments[0];\n    const _mol = initMolecule({\n      molfile: fragment.toMolfileV3(),\n      key: key,\n    });\n    let molIndex = molecules.findIndex((m) => m.key === key);\n    molecules.splice(molIndex, 1, _mol);\n  }\n\n  // we will split if we have many fragments\n}\n","export type ActionType<Action, Payload = void> = Payload extends void\n  ? { type: Action }\n  : { type: Action; payload: Payload };\n\nexport const INITIATE = 'INITIATE';\nexport const SAVE_DATA_AS_JSON = 'SAVE_DATA_AS_JSON';\nexport const LOAD_JSON_FILE = 'LOAD_JSON_FILE';\nexport const LOAD_JCAMP_FILE = 'LOAD_JCAMP_FILE';\nexport const LOAD_NMREDATA_FILE = 'LOAD_NMREDATA_FILE';\nexport const LOAD_MOL_FILE = 'LOAD_MOL_FILE';\nexport const LOAD_ZIP_FILE = 'LOAD_ZIP_FILE';\nexport const LOAD_JDF_FILE = 'LOAD_JDF_FILE';\nexport const ADD_PEAK = 'ADD_PEAK';\nexport const ADD_PEAKS = 'ADD_PEAKS';\nexport const DELETE_PEAK_NOTATION = 'DELETE_PEAK_NOTATION';\nexport const SHIFT_SPECTRUM = 'SHIFT_SPECTRUM';\nexport const SET_X_DOMAIN = 'SET_X_DOMAIN';\nexport const SET_Y_DOMAIN = 'SET_Y_DOMAIN';\nexport const SET_ORIGINAL_DOMAIN = 'SET_ORIGINAL_DOMAIN';\nexport const SET_WIDTH = 'SET_WIDTH';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const SET_SELECTED_TOOL = 'SET_SELECTED_TOOL';\nexport const SET_SELECTED_FILTER = 'SET_SELECTED_FILTER';\nexport const CHANGE_SPECTRUM_SETTING = 'CHANGE_SPECTRUM_SETTING';\nexport const CHANGE_SPECTRUM_TYPE = 'CHANGE_SPECTRUM_TYPE';\nexport const FULL_ZOOM_OUT = 'FULL_ZOOM_OUT';\nexport const CHANGE_VISIBILITY = 'CHANGE_VISIBILITY';\nexport const CHANGE_PEAKS_MARKERS_VISIBILITY =\n  'CHANGE_PEAKS_MARKERS_VISIBILITY';\nexport const CHANGE_ACTIVE_SPECTRUM = 'CHANGE_ACTIVE_SPECTRUM';\nexport const CHANGE_SPECTRUM_COLOR = 'CHANGE_SPECTRUM_COLOR';\nexport const ADD_INTEGRAL = 'ADD_INTEGRAL';\nexport const DELETE_INTEGRAL = 'DELETE_INTEGRAL';\nexport const TOGGLE_REAL_IMAGINARY_VISIBILITY =\n  'TOGGLE_REAL_IMAGINARY_VISIBILITY';\nexport const SET_ZOOM = 'SET_ZOOM';\nexport const ADD_MOLECULE = 'ADD_MOLECULE';\nexport const SET_MOLECULE = 'SET_MOLECULE';\nexport const DELETE_MOLECULE = 'DELETE_MOLECULE';\nexport const SET_CORRELATION = 'SET_CORRELATION';\nexport const SET_CORRELATIONS = 'SET_CORRELATIONS';\nexport const DELETE_CORRELATION = 'DELETE_CORRELATION';\nexport const SET_CORRELATIONS_MF = 'SET_CORRELATIONS_MF';\nexport const SET_CORRELATIONS_TOLERANCE = 'SET_CORRELATIONS_TOLERANCE';\nexport const DELETE_SPECTRA = 'DELETE_SPECTRA';\nexport const CHANGE_SPECTRUM_DISPLAY_VIEW_MODE =\n  'CHANGE_SPECTRUM_DISPLAY_VIEW_MODE';\nexport const RESIZE_INTEGRAL = 'RESIZE_INTEGRAL';\nexport const BRUSH_END = 'BRUSH_END';\nexport const RESET_DOMAIN = 'RESET_X_DOMAIN';\nexport const ENABLE_FILTER = 'ENABLE_FILTER';\nexport const DELETE_FILTER = 'DELETE_FILTER';\nexport const DELETE_SPECTRA_FILTER = 'DELETE_SPECTRA_FILTER';\nexport const APPLY_ZERO_FILLING_FILTER = 'APPLY_ZERO_FILLING_FILTER';\nexport const APPLY_FFT_FILTER = 'APPLY_FFT_FILTER';\nexport const CALCULATE_MANUAL_PHASE_CORRECTION_FILTER =\n  'CALCULATE_MANUAL_PHASE_CORRECTION_FILTER';\nexport const APPLY_MANUAL_PHASE_CORRECTION_FILTER =\n  'APPLY_MANUAL_PHASE_CORRECTION_FILTER';\nexport const APPLY_AUTO_PHASE_CORRECTION_FILTER =\n  'APPLY_AUTO_PHASE_CORRECTION_FILTER';\nexport const APPLY_ABSOLUTE_FILTER = 'APPLY_ABSOLUTE_FILTER';\nexport const SET_VERTICAL_INDICATOR_X_POSITION =\n  'SET_VERTICAL_INDICATOR_X_POSITION';\nexport const AUTO_PEAK_PICKING = 'AUTO_PEAK_PICKING';\nexport const AUTO_RANGES_DETECTION = 'AUTO_RANGES_DETECTION';\nexport const AUTO_ZONES_DETECTION = 'AUTO_ZONES_DETECTION';\nexport const DELETE_RANGE = 'DELETE_RANGE';\nexport const DELETE_1D_SIGNAL = 'DELETE_1D_SIGNAL';\nexport const SET_SELECTED_OPTIONS_PANEL = 'SET_SELECTED_OPTIONS_PANEL';\nexport const SET_LOADING_FLAG = 'SET_LOADING_FLAG';\nexport const RESET_SELECTED_TOOL = 'RESET_SELECTED_TOOL';\nexport const SET_SPECTRUMS_VERTICAL_ALIGN = 'SET_SPECTRUMS_VERTICAL_AlIGN';\nexport const SAVE_AS_SVG = 'SAVE_AS_SVG';\nexport const CHANGE_INTEGRAL_DATA = 'CHANGE_INTEGRAL_DATA';\nexport const SET_ACTIVE_TAB = 'SET_ACTIVE_TAB';\nexport const CHANGE_INTEGRAL_SUM = 'CHANGE_INTEGRAL_SUM';\nexport const ADD_BASE_LINE_ZONE = 'ADD_BASE_LINE_ZONE';\nexport const DELETE_BASE_LINE_ZONE = 'DELETE_BASE_LINE_ZONE';\nexport const APPLY_BASE_LINE_CORRECTION_FILTER =\n  'APPLY_BASE_LINE_CORRECTION_FILTER';\nexport const SET_KEY_PREFERENCES = 'SET_KEY_PREFERENCES';\nexport const APPLY_KEY_PREFERENCES = 'APPLY_KEY_PREFERENCES';\nexport const RESIZE_RANGE = 'RESIZE_RANGE';\nexport const CHANGE_RANGE_SUM = 'CHANGE_RANGE_SUM';\nexport const ADD_RANGE = 'ADD_RANGE';\nexport const SET_2D_LEVEL = 'SET_2D_LEVEL';\nexport const ADD_2D_ZONE = 'ADD_2D_ZONE';\nexport const DELETE_2D_ZONE = 'DELETE_2D_ZONE';\nexport const DELETE_2D_SIGNAL = 'DELETE_2D_SIGNAL';\nexport const SET_2D_SIGNAL_PATH_LENGTH = 'SET_2D_SIGNAL_PATH_LENGTH';\nexport const ADD_MISSING_PROJECTION = 'ADD_MISSING_PROJECTION';\nexport const SET_FILTER_SNAPSHOT = 'SET_FILTER_SNAPSHOT';\nexport const CHANGE_RANGE_RELATIVE = 'CHANGE_RANGE_RELATIVE';\nexport const CHANGE_RANGE_SIGNAL_VALUE = 'CHANGE_RANGE_SIGNAL_VALUE';\nexport const CHANGE_RANGE_SIGNAL_KIND = 'CHANGE_RANGE_SIGNAL_KIND';\nexport const SAVE_EDITED_RANGE = 'SAVE_EDITED_RANGE';\nexport const UNLINK_RANGE = 'UNLINK_RANGE';\nexport const SET_DIAID_RANGE = 'SET_DIAID_RANGE';\nexport const CHANGE_INTEGRAL_RELATIVE = 'CHANGE_INTEGRAL_RELATIVE';\nexport const ANALYZE_SPECTRA = 'ANALYZE_SPECTRA';\nexport const DELETE_ANALYZE_SPECTRA_RANGE = 'DELETE_ANALYZE_SPECTRA_RANGE';\nexport const RESIZE_ANALYZE_SPECTRA_RANGE = 'RESIZE_ANALYZE_SPECTRA_RANGE';\nexport const SET_ANALYZE_SPECTRA_COLUMNS = 'SET_ANALYZE_SPECTRA_COLUMNS';\nexport const FILTER_SPECTRA_COLUMN = 'FILTER_SPECTRA_COLUMN';\nexport const ALIGN_SPECTRA = 'ALIGN_SPECTRA';\nexport const CHANGE_ZONE_SIGNAL_VALUE = 'CHANGE_ZONE_SIGNAL_VALUE';\nexport const CHANGE_ZONE_SIGNAL_KIND = 'CHANGE_ZONE_SIGNAL_KIND';\nexport const SAVE_EDITED_ZONE = 'SAVE_EDITED_ZONE';\nexport const UNLINK_ZONE = 'UNLINK_ZONE';\nexport const SET_DIAID_ZONE = 'SET_DIAID_ZONE';\nexport const PREDICT_SPECTRA = 'PREDICT_SPECTRA';\nexport const SET_SPECTRA_SAME_TOP = 'SET_SPECTRA_SAME_TOP';\nexport const RESET_SPECTRA_SCALE = 'RESET_SPECTRA_SCALE';\nexport const SET_MOUSE_OVER_DISPLAYER = 'SET_MOUSE_OVER_DISPLAYER';\nexport const APPLY_MULTIPLE_SPECTRA_FILTER = 'APPLY_MULTIPLE_SPECTRA_FILTER';\nexport const ADD_EXCLUSION_ZONE = 'ADD_EXCLUSION_ZONE';\nexport const DELETE_EXCLUSION_ZONE = 'DELETE_EXCLUSION_ZONE';\nexport const CHANGE_RANGES_SUM_FLAG = 'CHANGE_RANGES_SUM_FLAG';\nexport const CHANGE_INTEGRALS_SUM_FLAG = 'CHANGE_INTEGRALS_SUM_FLAG';\nexport const CHANGE_ZONES_NOISE_FACTOR = 'CHANGE_ZONES_NOISE_FACTOR';\nexport const CHANGE_TEMP_RANGE = 'CHANGE_TEMP_RANGE';\nexport const SHOW_MULTIPLICTY_TREES = 'SHOW_MULTIPLICTY_TREES';\nexport const SHOW_RANGES_INTEGRALS = 'SHOW_RANGES_INTEGRALS';\nexport const AUTO_RANGES_SPECTRA_PICKING = 'AUTO_RANGES_SPECTRA_PICKING';\nexport const AUTO_ZONES_SPECTRA_PICKING = 'AUTO_ZONES_SPECTRA_PICKING';\nexport const GENERATE_SPECTRUM_FROM_PUBLICATION_STRING =\n  'GENERATE_SPECTRUM_FROM_PUBLICATION_STRING';\nexport const RESURRECTING_SPECTRUM_FROM_RANGES =\n  'RESURRECTING_SPECTRUM_FROM_RANGES';\nexport const SHOW_J_GRAPH = 'SHOW_J_GRAPH';\nexport const SET_AUTOMATIC_ASSIGNMENTS = 'SET_AUTOMATIC_ASSIGNMENTS';\n","import { Draft } from 'immer';\nimport { buildCorrelationData, CorrelationData } from 'nmr-correlation';\n\nimport { addJcamps, addJDFs } from '../../../data/SpectraManager';\nimport * as MoleculeManager from '../../../data/molecules/MoleculeManager';\nimport { UsedColors } from '../../../types/UsedColors';\nimport { Molecules, NMRiumPreferences, Spectra } from '../../NMRium';\nimport { DefaultTolerance } from '../../panels/SummaryPanel/CorrelationTable/Constants';\nimport { getInitialState, State } from '../Reducer';\nimport { INITIATE, LOAD_JSON_FILE, LOAD_NMREDATA_FILE } from '../types/Types';\n\nimport { changeSpectrumVerticalAlignment } from './PreferencesActions';\nimport { setActiveTab } from './ToolsActions';\n\nfunction setIsLoading(draft: Draft<State>, isLoading: boolean) {\n  draft.isLoading = isLoading;\n}\n\nfunction setColors(draft: Draft<State>, colors: UsedColors) {\n  draft.usedColors['1d'] = draft.usedColors['1d'].concat(colors['1d']);\n  draft.usedColors['2d'] = draft.usedColors['2d'].concat(colors['2d']);\n}\n\nfunction setData(\n  draft: Draft<State>,\n  data: {\n    spectra: Spectra;\n    molecules: Molecules;\n    preferences: NMRiumPreferences;\n    correlations: CorrelationData;\n    usedColors: UsedColors;\n  },\n) {\n  const { spectra, molecules, correlations, usedColors } = data || {\n    spectra: [],\n    molecules: [],\n    correlations: {},\n    multipleAnalysis: {},\n    exclusionZones: [],\n  };\n\n  setColors(draft, usedColors);\n  draft.data = spectra;\n  draft.molecules = MoleculeManager.fromJSON(molecules);\n\n  if (!correlations || Object.keys(correlations).length === 0) {\n    draft.correlations = buildCorrelationData([], {\n      tolerance: DefaultTolerance,\n    });\n  } else {\n    // in case of older NMRium data are imported, convert hybridization string to number array\n    // @TODO remove following command to overwrite correlations at some point in future\n    draft.correlations =\n      convertHybridizationStringValuesInCorrelations(correlations);\n\n    // draft.correlations = correlations // original command without overwriting\n  }\n}\n\nfunction convertHybridizationStringValuesInCorrelations(\n  correlations: CorrelationData,\n): CorrelationData {\n  return {\n    ...correlations,\n    values: correlations.values.map((correlation) => {\n      if (typeof correlation.hybridization === 'string') {\n        let values: number[] = [];\n        if (correlation.hybridization.length > 0) {\n          const hybridizationString: string =\n            correlation.hybridization.replaceAll('SP', '');\n          const value = Number(hybridizationString);\n          values.push(value);\n        }\n        correlation.hybridization = values;\n      }\n      return correlation;\n    }),\n  };\n}\n\nfunction setPreferences(draft: Draft<State>, data) {\n  const emptyPreferences = {\n    verticalAlign: null,\n  };\n\n  const { verticalAlign = null } = data || emptyPreferences;\n\n  if (verticalAlign) {\n    changeSpectrumVerticalAlignment(draft, {\n      align: verticalAlign,\n    });\n  } else {\n    changeSpectrumVerticalAlignment(draft, { align: 'auto-check' });\n  }\n}\n\nfunction initiate(draft: Draft<State>, action) {\n  const state = getInitialState();\n\n  setData(state, action.payload);\n  const preferences = action.payload?.preferences || {};\n  setActiveTab(state, { tab: preferences?.activeTab || '' });\n  state.width = draft.width;\n  state.height = draft.height;\n  setPreferences(state, action.payload);\n  state.isLoading = false;\n  state.actionType = INITIATE;\n  return state;\n}\n\nfunction loadJDFFile(draft: Draft<State>, actions) {\n  const { files } = actions;\n  const spectra = addJDFs(files, draft.usedColors);\n  for (const spectrum of spectra) {\n    draft.data.push(spectrum);\n  }\n\n  setActiveTab(draft);\n\n  draft.isLoading = false;\n}\n\nfunction loadJcampFile(draft: Draft<State>, actions) {\n  const { files } = actions;\n  const spectra = addJcamps(files, draft.usedColors);\n  for (const spectrum of spectra) {\n    draft.data.push(spectrum);\n  }\n  setActiveTab(draft);\n  changeSpectrumVerticalAlignment(draft, { align: 'auto-check' });\n\n  draft.isLoading = false;\n}\n\nfunction handleLoadJsonFile(draft: Draft<State>, action) {\n  const state = getInitialState();\n\n  setData(state, action.payload);\n  const preferences = action.payload?.preferences || {};\n  setActiveTab(state, { tab: preferences?.activeTab || '' });\n  state.width = draft.width;\n  state.height = draft.height;\n  setPreferences(state, preferences);\n  state.isLoading = false;\n  state.actionType = LOAD_JSON_FILE;\n  return state;\n}\n\nfunction handleLoadMOLFile(draft: Draft<State>, actions) {\n  const { files } = actions;\n  for (let file of files) {\n    MoleculeManager.addMolfile(draft.molecules, file.binary.toString());\n  }\n  draft.isLoading = false;\n}\n\nfunction handleLoadZIPFile(draft: Draft<State>, action) {\n  const { data, usedColors } = action.payload;\n  draft.data = draft.data.concat(data);\n  setColors(draft, usedColors);\n\n  setActiveTab(draft);\n  changeSpectrumVerticalAlignment(draft, { align: 'auto-check' });\n\n  draft.isLoading = false;\n}\n\nfunction handleLoadNmredata(draft: Draft<State>, action) {\n  const state = getInitialState();\n\n  setData(state, action.payload);\n  setActiveTab(state);\n  changeSpectrumVerticalAlignment(state, { align: 'auto-check' });\n  state.isLoading = false;\n  state.width = draft.width;\n  state.height = draft.height;\n  state.actionType = LOAD_NMREDATA_FILE;\n\n  return state;\n}\n\nexport {\n  setIsLoading,\n  initiate,\n  loadJcampFile,\n  loadJDFFile,\n  handleLoadJsonFile,\n  handleLoadNmredata,\n  handleLoadMOLFile,\n  handleLoadZIPFile,\n};\n","import { Draft } from 'immer';\n\nimport { generateSpectra } from '../../../data/PredictionManager';\nimport { changeSpectraRelativeSum } from '../../../data/data1d/Spectrum1D/SumManager';\nimport * as MoleculeManager from '../../../data/molecules/MoleculeManager';\nimport getColor from '../../../data/utilities/getColor';\nimport nucleusToString from '../../utility/nucleusToString';\nimport { State } from '../Reducer';\nimport { DISPLAYER_MODE } from '../core/Constants';\n\nimport { handleUnlinkRange } from './RangesActions';\nimport { setActiveTab } from './ToolsActions';\nimport { handleUnlinkZone } from './ZonesActions';\n\nfunction addMoleculeHandler(draft: Draft<State>, molfile) {\n  const isEmpty = draft.molecules.length === 0;\n  MoleculeManager.addMolfile(draft.molecules, molfile);\n\n  /**\n   *  if it's the first creation of a molecule after the molecules list was empty,\n   * set the relative sum for ranges and integrals base on the first molecule\n   */\n  const molecule = draft.molecules[0] || null;\n\n  if (isEmpty && molecule) {\n    changeSpectraRelativeSum(draft, molecule.key, molecule);\n  }\n}\n\nfunction setMoleculeHandler(draft: Draft<State>, molfile, key) {\n  MoleculeManager.setMolfile(draft.molecules, molfile, key);\n\n  /**\n   * update all spectra that its sum was based on this molecule with the new molecule\n   */\n  const index = draft.molecules.findIndex((molecule) => molecule.key === key);\n\n  changeSpectraRelativeSum(\n    draft,\n    key,\n    index !== -1 ? draft.molecules[index] : draft.molecules[0] || null,\n  );\n}\n\nfunction removeAssignments(draft: Draft<State>, assignmentData: any) {\n  if (draft.displayerMode === DISPLAYER_MODE.DM_1D) {\n    handleUnlinkRange(draft, { payload: { assignmentData, rangeData: null } });\n  }\n  if (draft.displayerMode === DISPLAYER_MODE.DM_2D) {\n    handleUnlinkZone(draft, { payload: { assignmentData, zoneData: null } });\n  }\n}\n\nfunction deleteMoleculeHandler(draft: Draft<State>, action) {\n  const { key, assignmentData } = action.payload;\n  // remove Assignments links of the active spectrum\n  removeAssignments(draft, assignmentData);\n\n  const moleculeIndex = draft.molecules.findIndex(\n    (molecule) => molecule.key === key,\n  );\n  draft.molecules.splice(moleculeIndex, 1);\n  /**\n   * update all spectra that its sum was based on this molecule with the first molecule\n   * from molecules list and if no remains molecules it sum will be 100\n   */\n  changeSpectraRelativeSum(draft, key, draft.molecules[0] || null);\n}\n\nfunction predictSpectraFromMoleculeHandler(draft: Draft<State>, action) {\n  const { data, options } = action.payload;\n  if (!data) {\n    draft.isLoading = false;\n  } else {\n    const color = getColor(false, draft.usedColors['1d']);\n    for (const spectrum of generateSpectra(data, options, color)) {\n      draft.data.push(spectrum);\n      draft.tabActiveSpectrum[nucleusToString(spectrum.info.nucleus)] = {\n        id: spectrum.id,\n        index: draft.data.length - 1,\n      };\n    }\n    draft.usedColors['1d'].push(color);\n  }\n  draft.toolOptions.data.predictionIndex++;\n  setActiveTab(draft);\n  draft.isLoading = false;\n}\n\nexport {\n  addMoleculeHandler,\n  setMoleculeHandler,\n  deleteMoleculeHandler,\n  predictSpectraFromMoleculeHandler,\n};\n","import { Draft, original } from 'immer';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\n\nimport {\n  getShiftX,\n  lookupPeak,\n  autoPeakPicking,\n} from '../../../data/data1d/Spectrum1D';\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Data1D } from '../../../data/types/data1d/Data1D';\nimport { Peak } from '../../../data/types/data1d/Peak';\nimport generateID from '../../../data/utilities/generateID';\nimport { options } from '../../toolbar/ToolTypes';\nimport { State } from '../Reducer';\nimport getRange from '../helper/getRange';\n\nfunction addPeak(draft: Draft<State>, mouseCoordinates) {\n  const state = original(draft) as State;\n  if (draft.activeSpectrum?.id && state) {\n    const { index } = draft.activeSpectrum;\n    const xShift = 10;\n    const startX = mouseCoordinates.x - xShift;\n    const endX = mouseCoordinates.x + xShift;\n    const [from, to] = getRange(draft, { startX, endX });\n    const candidatePeak = lookupPeak(state.data[index].data as Data1D, {\n      from,\n      to,\n    });\n\n    const shiftX = getShiftX(draft.data[index] as Datum1D);\n\n    if (candidatePeak) {\n      const peak: Peak = {\n        id: generateID(),\n        originalX: candidatePeak.x - shiftX,\n        x: candidatePeak.x,\n        y: candidatePeak.y,\n        width: 0,\n      };\n      (draft.data[index] as Datum1D).peaks.values.push(peak);\n    }\n  }\n}\n\nfunction addPeaks(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n\n  if (draft.activeSpectrum) {\n    const { index } = draft.activeSpectrum;\n    const datumOriginal = state.data[index] as Datum1D;\n\n    const { startX, endX } = action;\n    const [from, to] = getRange(draft, { startX, endX });\n\n    if (from !== to) {\n      const peak = lookupPeak(datumOriginal.data, { from, to });\n\n      const shiftX = getShiftX(draft.data[index] as Datum1D);\n\n      if (peak && !datumOriginal.peaks.values.some((p) => p.x === peak.x)) {\n        const newPeak: Peak = {\n          id: generateID(),\n          originalX: peak.x - shiftX,\n          x: peak.x,\n          y: peak.y,\n          width: 0,\n        };\n        (draft.data[index] as Datum1D).peaks.values.push(newPeak);\n      }\n    }\n  }\n}\n\nfunction deletePeak(draft: Draft<State>, peakData) {\n  if (draft.activeSpectrum) {\n    const { index } = draft.activeSpectrum;\n    const state = original(draft) as State;\n\n    if (peakData == null) {\n      (draft.data[index] as Datum1D).peaks.values = [];\n    } else {\n      const peakIndex = (state.data[index] as Datum1D).peaks.values.findIndex(\n        (p) => p.id === peakData.id,\n      );\n      (draft.data[index] as Datum1D).peaks.values.splice(peakIndex, 1);\n    }\n  }\n}\n\nfunction handleAutoPeakPicking(draft: Draft<State>, autOptions) {\n  if (draft.activeSpectrum?.id) {\n    draft.toolOptions.selectedTool = options.zoom.id;\n    draft.toolOptions.selectedOptionPanel = null;\n    const { index } = draft.activeSpectrum;\n    const datum = draft.data[index] as Datum1D;\n\n    const [from, to] = draft.xDomain;\n    const windowFromIndex = xFindClosestIndex(datum.data.x, from);\n    const windowToIndex = xFindClosestIndex(datum.data.x, to);\n\n    const peaks = autoPeakPicking(draft.data[index] as Datum1D, {\n      ...autOptions,\n      windowFromIndex,\n      windowToIndex,\n    });\n\n    datum.peaks.values = datum.peaks.values.concat(peaks);\n  }\n}\n\nexport { addPeak, addPeaks, deletePeak, handleAutoPeakPicking };\n","export default function generateChar(index: number): string {\n  const aPotions = 'a'.charCodeAt(0);\n  const zPostion = 'z'.charCodeAt(0);\n  const len = zPostion - aPotions + 1;\n\n  let chartResult = '';\n  while (index >= 0) {\n    chartResult = String.fromCharCode((index % len) + aPotions) + chartResult;\n    index = Math.floor(index / len) - 1;\n  }\n  return chartResult;\n}\n","import lodashGet from 'lodash/get';\n\nimport { Spectra } from '../../component/NMRium';\nimport { RangeDetectionResult } from '../types/data1d';\nimport generateChar from '../utilities/generateChar';\n\nimport { detectRange, isSpectrum1D } from './Spectrum1D';\n\nexport enum COLUMNS_TYPES {\n  NORMAL = 'NORMAL',\n  FORMULA = 'FORMULA',\n}\nexport enum COLUMNS_VALUES_KEYS {\n  RELATIVE = 'relative',\n  ABSOLUTE = 'absolute',\n  MIN = 'min',\n  MAX = 'max',\n}\n\nexport type ColumnType = keyof typeof COLUMNS_TYPES;\n\ninterface Column {\n  type: ColumnType;\n  valueKey: COLUMNS_VALUES_KEYS;\n  from: number;\n  to: number;\n  formula?: string;\n  index: number;\n}\n\ntype Columns = Record<string, Column>;\n\ninterface AnalysisOptions {\n  sum: number;\n  code: string | null;\n  columns: Columns;\n  columnIndex: number;\n}\n\ninterface AnalysisRow extends RangeDetectionResult {\n  SID: string;\n  colKey?: string;\n  value?: number;\n}\n\ninterface SpectraAnalysisData {\n  options: AnalysisOptions;\n  values: Record<string, AnalysisRow>;\n}\n\nexport type SpectraAnalysis = Record<string, SpectraAnalysisData>;\n\nfunction addColumnKey(\n  spectraAnalysis: SpectraAnalysis,\n  nucleus: string,\n  columnProps: Column,\n  columnKey: string,\n) {\n  const key = columnKey\n    ? columnKey\n    : generateChar(spectraAnalysis[nucleus].options.columnIndex).toUpperCase();\n  spectraAnalysis[nucleus].options.columns[key] = columnProps;\n  spectraAnalysis[nucleus].options.columnIndex++;\n  return key;\n}\n\nexport function getColumns(spectraAnalysis: SpectraAnalysis, nucleus: string) {\n  return spectraAnalysis[nucleus].options.columns;\n}\n\nexport function getValue(colKey: string, columns: Columns, data) {\n  return data[columns[colKey].valueKey];\n}\n\nexport function getSpectraAnalysis(\n  spectra: Spectra,\n  options,\n): { values: Array<AnalysisRow>; sum: number } {\n  const { from, to, nucleus } = options;\n  return spectra.reduce<{ values: Array<AnalysisRow>; sum: number }>(\n    (acc, datum) => {\n      if (\n        isSpectrum1D(datum) &&\n        datum.info.nucleus === nucleus &&\n        !datum.info.isFid\n      ) {\n        const range = detectRange(datum, { from, to });\n        acc.sum += range.absolute;\n        acc.values.push({ SID: datum.id, ...range });\n      }\n      return acc;\n    },\n    { values: [], sum: 0 },\n  );\n}\n\nfunction init(spectraAnalysis: SpectraAnalysis, nucleus: string) {\n  if (spectraAnalysis[nucleus] === undefined) {\n    spectraAnalysis[nucleus] = {\n      options: {\n        sum: 100,\n        code: null,\n        columns: {},\n        columnIndex: 0,\n      },\n      values: {},\n    };\n  }\n}\n\nexport function changeColumnValueKey(\n  spectraAnalysis: SpectraAnalysis,\n  nucleus: string,\n  columnKey: string,\n  newKey: COLUMNS_VALUES_KEYS,\n) {\n  spectraAnalysis[nucleus].options.columns[columnKey].valueKey = newKey;\n\n  spectraAnalysis[nucleus].values = refreshCalculation(\n    spectraAnalysis,\n    nucleus,\n  );\n}\n\nexport function setColumn(\n  spectraAnalysis: SpectraAnalysis,\n  nucleus: string,\n  { columns: inputColumns, code },\n) {\n  init(spectraAnalysis, nucleus);\n  spectraAnalysis[nucleus].options.code = code;\n  spectraAnalysis[nucleus].options.columns = Object.values(\n    inputColumns,\n  ).reduce<any>((acc, value: any) => {\n    const data = { ...value };\n    delete data.tempKey;\n    acc[value.tempKey] = data;\n    return acc;\n  }, {});\n\n  const { columns: newColumns } = spectraAnalysis[nucleus].options;\n\n  let data = Object.entries(spectraAnalysis[nucleus].values).reduce<any>(\n    (outerAcc, [spectraKey, spectra]) => {\n      outerAcc[spectraKey] = Object.keys(inputColumns).reduce((acc, key) => {\n        const newKey = inputColumns[key].tempKey;\n        if (spectra[key]) {\n          acc[newKey] = spectra[key];\n        }\n        return acc;\n      }, {});\n      return outerAcc;\n    },\n    {},\n  );\n\n  data = Object.entries(data).reduce((acc, spectra: any) => {\n    acc[spectra[0]] = Object.keys(newColumns).reduce((acc, key) => {\n      const isFormula = newColumns[key].type === COLUMNS_TYPES.FORMULA;\n      acc[key] = isFormula\n        ? {\n            colKey: key,\n            value: calculate(\n              newColumns,\n              data[spectra[0]],\n              newColumns[key].formula,\n            ),\n          }\n        : { ...spectra[1][key], colKey: key };\n\n      return acc;\n    }, {});\n\n    return acc;\n  }, {});\n  spectraAnalysis[nucleus].values = data;\n}\n\nfunction refreshByRow(row, columns) {\n  return Object.keys(columns).reduce((acc, key) => {\n    if (columns[key].type === COLUMNS_TYPES.FORMULA) {\n      acc[key] = {\n        colKey: key,\n        ...row,\n        value: calculate(columns, row, columns[key].formula),\n      };\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction refreshCalculation(spectraAnalysis: SpectraAnalysis, nucleus: string) {\n  const { columns } = spectraAnalysis[nucleus].options;\n\n  const data = Object.entries(spectraAnalysis[nucleus].values).reduce(\n    (acc, spectra) => {\n      const [id, row] = spectra;\n      acc[id] = {\n        ...row,\n        ...refreshByRow(row, columns),\n      };\n      return acc;\n    },\n    {},\n  );\n\n  return data;\n}\n\nexport function analyzeSpectra(\n  spectra,\n  spectraAnalysis: SpectraAnalysis,\n  options,\n) {\n  const { from, to, nucleus, columnKey = null } = options;\n  init(spectraAnalysis, nucleus);\n  const colKey = addColumnKey(\n    spectraAnalysis,\n    nucleus,\n    {\n      type: COLUMNS_TYPES.NORMAL,\n      valueKey: COLUMNS_VALUES_KEYS.RELATIVE,\n      from,\n      to,\n      index: 1,\n    },\n    columnKey,\n  );\n\n  const { sum } = spectraAnalysis[nucleus].options;\n\n  const { values: result, sum: spectraSum } = getSpectraAnalysis(spectra, {\n    from,\n    to,\n    nucleus,\n  });\n\n  const prevNucleusData = lodashGet(spectraAnalysis, `${nucleus}.values`, {});\n\n  let data = result.reduce((acc, row) => {\n    const factor = spectraSum > 0 ? sum / spectraSum : 0.0;\n\n    acc[row.SID] = {\n      ...prevNucleusData[row.SID],\n      [colKey]: {\n        colKey,\n        ...row,\n        relative: Math.abs(row.absolute) * factor,\n      },\n    };\n    return acc;\n  }, {});\n\n  spectraAnalysis[nucleus].values = data;\n  spectraAnalysis[nucleus].values = refreshCalculation(\n    spectraAnalysis,\n    nucleus,\n  );\n}\n\nexport function deleteSpectraAnalysis(\n  spectraAnalysis: SpectraAnalysis,\n  colKey: string,\n  nucleus: string,\n) {\n  const result = Object.entries(spectraAnalysis[nucleus].values).reduce(\n    (acc, item: any) => {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete item[1][colKey];\n      if (item[1] && Object.keys(item[1]).length > 0) {\n        acc[item[0]] = item[1];\n        return acc;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  const { [colKey]: deletedColumnKey, ...resColumns } =\n    spectraAnalysis[nucleus].options.columns;\n\n  const currentColumns = Object.keys(spectraAnalysis[nucleus].options.columns);\n\n  if (currentColumns.length === 1) {\n    spectraAnalysis[nucleus].options.columnIndex = 0;\n  }\n\n  spectraAnalysis[nucleus].options.columns = resColumns;\n  spectraAnalysis[nucleus].values = result;\n  spectraAnalysis[nucleus].values = refreshCalculation(\n    spectraAnalysis,\n    nucleus,\n  );\n}\n\nfunction calculate(columns: Columns, data: AnalysisRow, formula = '') {\n  const array = formula.split(/\\+|-|\\*|\\/|%|\\(|\\)/);\n\n  const variables: string[] = [];\n\n  for (const col of array) {\n    const column = col.trim();\n    if (columns[column]) {\n      variables.push(column);\n    }\n  }\n\n  const params = variables.map((key) =>\n    data[key] ? data[key][columns[key].valueKey] : null,\n  );\n\n  let result;\n  try {\n    result = new Function(...variables, `return ${formula}`)(...params);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    result = new Error(`Invalid Formula ( ${formula} ) `);\n  }\n  return result;\n}\n\nexport function getDataAsString(\n  spectraAnalysis: SpectraAnalysis,\n  nucleus: string,\n) {\n  if (spectraAnalysis?.[nucleus]) {\n    const {\n      values,\n      options: { columns },\n    } = spectraAnalysis[nucleus];\n\n    let result = '';\n\n    for (const letter in columns) {\n      result += `${letter}\\t`;\n    }\n    result += '\\n';\n\n    for (const spectrum of Object.values(values)) {\n      for (const letter in columns) {\n        result += `${spectrum[letter][columns[letter].valueKey]}\\t`;\n      }\n      result += '\\n';\n    }\n    return result;\n  }\n  return null;\n}\n","import { Draft } from 'immer';\n\nimport * as MultipleAnalysis from '../../../data/data1d/MultipleAnalysis';\nimport { State } from '../Reducer';\nimport getRange from '../helper/getRange';\n\nfunction analyzeSpectra(draft: Draft<State>, action) {\n  const [from, to] = getRange(draft, action);\n  MultipleAnalysis.analyzeSpectra(draft.data, draft.spectraAnalysis, {\n    from,\n    to,\n    nucleus: draft.activeTab,\n  });\n}\n\nfunction handleDeleteSpectraRanges(draft: Draft<State>, action) {\n  const { colKey } = action;\n\n  MultipleAnalysis.deleteSpectraAnalysis(\n    draft.spectraAnalysis,\n    colKey,\n    draft.activeTab,\n  );\n}\nfunction handleResizeSpectraRange(draft: Draft<State>, action) {\n  const { columnKey, from, to } = action.payload;\n  MultipleAnalysis.analyzeSpectra(draft.data, draft.spectraAnalysis, {\n    from,\n    to,\n    nucleus: draft.activeTab,\n    columnKey,\n  });\n}\nfunction handleSetColumns(draft: Draft<State>, action) {\n  const data = action.payload;\n\n  MultipleAnalysis.setColumn(draft.spectraAnalysis, draft.activeTab, data);\n}\nfunction handleFilterColumn(draft: Draft<State>, action) {\n  const { columnKey, valueKey } = action.payload;\n\n  MultipleAnalysis.changeColumnValueKey(\n    draft.spectraAnalysis,\n    draft.activeTab,\n    columnKey,\n    valueKey,\n  );\n}\n\nexport {\n  analyzeSpectra,\n  handleDeleteSpectraRanges,\n  handleResizeSpectraRange,\n  handleSetColumns,\n  handleFilterColumn,\n};\n","import { Draft, original } from 'immer';\n\nimport * as Filters from '../../../data/Filters';\nimport { applyFilter } from '../../../data/FiltersManager';\nimport {\n  generateSpectrumFromPublicationString,\n  getReferenceShift,\n} from '../../../data/data1d/Spectrum1D';\nimport { getMissingProjection } from '../../../data/data2d/Spectrum2D';\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport { options } from '../../toolbar/ToolTypes';\nimport GroupByInfoKey from '../../utility/GroupByInfoKey';\nimport { State } from '../Reducer';\nimport { setZoom } from '../helper/Zoom1DManager';\n\nimport { setDomain, setMode } from './DomainActions';\nimport { resetSpectrumByFilter } from './FiltersActions';\nimport { setTab, setActiveTab } from './ToolsActions';\n\nfunction checkIsVisible2D(datum: Datum2D): boolean {\n  if (\n    datum.display.isPositiveVisible === false &&\n    datum.display.isNegativeVisible === false\n  ) {\n    return false;\n  }\n  return true;\n}\n\nfunction setVisible(datum, flag) {\n  if (datum.info.dimension === 2) {\n    (datum as Datum2D).display.isPositiveVisible = flag;\n    (datum as Datum2D).display.isNegativeVisible = flag;\n    (datum as Datum2D).display.isVisible = checkIsVisible2D(datum as Datum2D);\n  } else {\n    (datum as Datum1D).display.isVisible = flag;\n  }\n}\n\nfunction handleSpectrumVisibility(draft: Draft<State>, action) {\n  if (Array.isArray(action.id)) {\n    const IDs = action.id;\n    if (IDs.length === 0) {\n      for (const datum of draft.data) {\n        setVisible(datum, false);\n      }\n    } else {\n      for (const datum of draft.data) {\n        if (IDs.includes(datum.id)) {\n          setVisible(datum, true);\n        } else {\n          setVisible(datum, false);\n        }\n      }\n    }\n  } else {\n    const index = draft.data.findIndex((d) => d.id === action.id);\n    (draft.data[index] as Datum1D | Datum2D).display[action.key] = action.value;\n\n    if ((draft.data[index] as Datum1D | Datum2D).info.dimension === 2) {\n      (draft.data[index] as Datum2D).display.isVisible = checkIsVisible2D(\n        draft.data[index] as Datum2D,\n      );\n    }\n  }\n}\n\nfunction handleChangePeaksMarkersVisibility(draft: Draft<State>, data) {\n  for (let datum of draft.data) {\n    if (\n      datum.info?.dimension === 1 &&\n      data.some((activeData) => activeData.id === datum.id)\n    ) {\n      (datum as Datum1D).display.isPeaksMarkersVisible = true;\n    } else {\n      (datum as Datum1D).display.isPeaksMarkersVisible = false;\n    }\n  }\n}\n\nfunction handleChangeActiveSpectrum(draft: Draft<State>, activeSpectrum) {\n  let refreshDomain = false;\n\n  const currentActiveSpectrum = draft.activeSpectrum;\n  if (activeSpectrum) {\n    const newIndex = draft.data.findIndex((d) => d.id === activeSpectrum.id);\n    const oldIndex = draft.data.findIndex(\n      (d) => d.id === draft.activeSpectrum?.id,\n    );\n    if (newIndex !== -1) {\n      const newActiveSpectrum = draft.data[newIndex] as Datum1D | Datum2D;\n\n      newActiveSpectrum.display.isVisible = true;\n\n      if (oldIndex !== -1) {\n        refreshDomain =\n          (draft.data[oldIndex] as Datum1D | Datum2D).info.isFid ===\n          newActiveSpectrum.info.isFid\n            ? false\n            : true;\n      } else {\n        refreshDomain = newActiveSpectrum.info.isFid || false;\n      }\n    }\n    activeSpectrum = { ...activeSpectrum, index: newIndex };\n    draft.activeSpectrum = activeSpectrum;\n    draft.tabActiveSpectrum[draft.activeTab] = activeSpectrum;\n  } else {\n    if (currentActiveSpectrum) {\n      const index = draft.data.findIndex(\n        (d) => d.id === currentActiveSpectrum.id,\n      );\n      refreshDomain = draft.data[index].info.isFid;\n    } else {\n      refreshDomain = false;\n    }\n    draft.activeSpectrum = null;\n    draft.tabActiveSpectrum[draft.activeTab] = null;\n  }\n\n  if (options[draft.toolOptions.selectedTool].isFilter) {\n    draft.toolOptions.selectedTool = options.zoom.id;\n    draft.toolOptions.data.baseLineZones = [];\n    draft.toolOptions.selectedOptionPanel = null;\n    draft.tempData = null;\n  }\n\n  /**\n   * if the active spectrum not is FID then dont refresh the domain and the mode when the first time you activate soectrum\n   * if the new active spectrum different than the previous active spectrum fid then refresh the domain andf the mode.\n   */\n  if (draft.toolOptions.data.activeFilterID) {\n    resetSpectrumByFilter(draft, null, {}, currentActiveSpectrum);\n  } else if (refreshDomain) {\n    setDomain(draft);\n    setMode(draft);\n  }\n}\n\nfunction changeSpectrumSetting(draft: Draft<State>, { id, display }) {\n  const state = original(draft) as State;\n  const index = state.data.findIndex((d) => d.id === id);\n  if (index !== -1) {\n    draft.data[index].display = display;\n  }\n}\nfunction handleChangeSpectrumColor(draft: Draft<State>, { id, color, key }) {\n  const state = original(draft) as State;\n  const index = state.data.findIndex((d) => d.id === id);\n  if (index !== -1) {\n    (draft.data[index] as Datum1D | Datum2D).display[key] = color;\n  }\n}\n\nfunction handleDeleteSpectra(draft: Draft<State>, action) {\n  const state = original(draft) as State;\n  if (action.id) {\n    const index = state.data.findIndex((d) => d.id === action.id);\n    draft.data.splice(index, 1);\n  } else {\n    draft.data = [];\n  }\n  setActiveTab(draft, { tab: draft.activeTab, refreshActiveTab: true });\n}\nfunction addMissingProjectionHandler(draft, action) {\n  const state = original(draft);\n  const { nucleus } = action;\n  if (draft.activeSpectrum?.id) {\n    const { index } = draft.activeSpectrum;\n    for (let n of nucleus) {\n      const datum1D = getMissingProjection(\n        state.data[index],\n        n,\n        draft.usedColors,\n      );\n      draft.data.push(datum1D);\n    }\n    const groupByNucleus = GroupByInfoKey('nucleus');\n    const dataGroupByNucleus = groupByNucleus(draft.data);\n    setTab(draft, dataGroupByNucleus, draft.activeTab, true);\n    setDomain(draft);\n    setMode(draft);\n  }\n}\nfunction alignSpectraHandler(draft: Draft<State>, action) {\n  if (draft.data && draft.data.length > 0) {\n    for (let datum of draft.data) {\n      if (\n        datum.info?.dimension === 1 &&\n        datum.info.nucleus === draft.activeTab &&\n        !datum.info?.isFid\n      ) {\n        const shift = getReferenceShift(datum, { ...action.payload });\n        applyFilter(datum, [\n          {\n            name: Filters.shiftX.id,\n            options: shift,\n          },\n        ]);\n      }\n    }\n  }\n\n  setDomain(draft);\n  setMode(draft);\n}\n\nfunction generateSpectrumFromPublicationStringHandler(\n  draft: Draft<State>,\n  action,\n) {\n  const publicationString = action.payload.publicationText;\n\n  const spectrum = generateSpectrumFromPublicationString(\n    publicationString,\n    draft.usedColors,\n  );\n  draft.data.push(spectrum);\n  setActiveTab(draft);\n  setZoom(draft, { scale: 0.8, spectrumID: spectrum.id });\n}\n\nexport {\n  handleSpectrumVisibility,\n  handleChangePeaksMarkersVisibility,\n  handleChangeActiveSpectrum,\n  handleChangeSpectrumColor,\n  changeSpectrumSetting,\n  handleDeleteSpectra,\n  addMissingProjectionHandler,\n  alignSpectraHandler,\n  generateSpectrumFromPublicationStringHandler,\n};\n","export const UNDO = 'undo';\nexport const REDO = 'redo';\nexport const SET = 'set';\nexport const RESET = 'reset';\n","import { Draft, produce } from 'immer';\nimport { buildCorrelationData, CorrelationData } from 'nmr-correlation';\n\nimport { predictSpectra } from '../../data/PredictionManager';\nimport * as SpectraManager from '../../data/SpectraManager';\nimport { SpectraAnalysis } from '../../data/data1d/MultipleAnalysis';\nimport { migrate } from '../../data/migration/MigrationManager';\nimport { Molecule } from '../../data/molecules/Molecule';\nimport { Range } from '../../data/types/data1d';\nimport { Contours } from '../../data/types/data2d/Contours';\nimport generateID from '../../data/utilities/generateID';\nimport { UsedColors } from '../../types/UsedColors';\nimport { Spectra } from '../NMRium';\nimport { DefaultTolerance } from '../panels/SummaryPanel/CorrelationTable/Constants';\nimport { options } from '../toolbar/ToolTypes';\nimport { nmredataToNmrium } from '../utility/nmredataToNmrium';\n\nimport * as AssignmentsActions from './actions/AssignmentsActions';\nimport * as CorrelationsActions from './actions/CorrelationsActions';\nimport * as DatabaseActions from './actions/DatabaseActions';\nimport { setWidth, handleSetDimensions } from './actions/DimensionsActions';\nimport * as DomainActions from './actions/DomainActions';\nimport * as FiltersActions from './actions/FiltersActions';\nimport * as GlobalActions from './actions/GlobalActions';\nimport {\n  handleHistoryUndo,\n  handleHistoryRedo,\n  handleHistoryReset,\n} from './actions/HistoryActions';\nimport * as IntegralsActions from './actions/IntegralsActions';\nimport * as LoadActions from './actions/LoadActions';\nimport * as MoleculeActions from './actions/MoleculeActions';\nimport * as PeaksActions from './actions/PeaksActions';\nimport {\n  setKeyPreferencesHandler,\n  applyKeyPreferencesHandler,\n} from './actions/PreferencesActions';\nimport * as RangesActions from './actions/RangesActions';\nimport * as SpectraAnalysisActions from './actions/SpectraAnalysisAction';\nimport * as SpectrumsActions from './actions/SpectrumsActions';\nimport * as ToolsActions from './actions/ToolsActions';\nimport * as ZonesActions from './actions/ZonesActions';\nimport { DEFAULT_YAXIS_SHIFT_VALUE, DISPLAYER_MODE } from './core/Constants';\nimport { ZoomHistory } from './helper/ZoomHistoryManager';\nimport { UNDO, REDO, RESET } from './types/HistoryTypes';\nimport * as types from './types/Types';\n\nexport interface ActiveSpectrum {\n  id: string;\n  index: number;\n}\n\nexport interface Margin {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\nexport const getInitialState = (): State => ({\n  actionType: '',\n  data: [],\n  contours: {} as Contours,\n  tempData: null,\n  xDomain: [],\n  yDomain: [],\n  yDomains: {},\n  xDomains: {},\n  originDomain: {\n    xDomain: [],\n    yDomain: [],\n    xDomains: {},\n    yDomains: {},\n    shareYDomain: false,\n  },\n  integralsYDomains: {},\n  activeTab: '',\n  width: 0,\n  height: 0,\n  margin: {\n    top: 10,\n    right: 20,\n    bottom: 70,\n    left: 0,\n  },\n  activeSpectrum: null,\n  mode: 'RTL',\n  molecules: [],\n  verticalAlign: {\n    align: 'bottom',\n    verticalShift: DEFAULT_YAXIS_SHIFT_VALUE,\n  },\n  history: {\n    past: [],\n    present: null,\n    future: [],\n    hasUndo: false,\n    hasRedo: false,\n  },\n  isLoading: false,\n  keysPreferences: {},\n  displayerMode: DISPLAYER_MODE.DM_1D,\n  tabActiveSpectrum: {},\n  spectraAnalysis: {},\n  correlations: {},\n  displayerKey: '',\n  zoom: {\n    history: {} as ZoomHistory,\n  },\n  overDisplayer: false,\n  toolOptions: {\n    selectedTool: options.zoom.id,\n    selectedOptionPanel: null,\n    data: {\n      baseLineZones: [],\n      pivot: { value: 0, index: 0 },\n      zonesNoiseFactor: 1,\n      activeFilterID: null,\n      tempRange: null,\n      showMultiplicityTrees: false,\n      showRangesIntegrals: true,\n      showJGraph: false,\n      predictionIndex: 0,\n    },\n  },\n  usedColors: { '1d': [], '2d': [] },\n});\n\nexport const initialState = getInitialState();\n\nexport type VerticalAlignment = 'bottom' | 'center' | 'stack';\nexport interface VerticalAlign {\n  align: VerticalAlignment;\n  verticalShift: number;\n}\nexport interface State {\n  /**\n   * Last action type\n   *  base on the action type we can decide to trigger or not the callback function (onDataChange)\n   */\n  actionType: string;\n  /**\n   * spectra list (1d and 2d)\n   */\n  data: Spectra;\n  /**\n   * calculated contours for 2d spectra\n   */\n  contours: Contours;\n  /**\n   * snapshot of the spectra data once phase correction activated\n   *\n   */\n  tempData: any;\n  /**\n   * X axis domain\n   * value change when zooming in/out\n   * @default []\n   */\n  xDomain: Array<number>;\n  /**\n   * Y axis domain\n   * value change when vertical scale change for all spectra\n   * @default []\n   */\n  yDomain: Array<number>;\n\n  /**\n   * Y axis domain per spectrum\n   * value change when vertical scale change for the selected spectrum\n   * @default {}\n   */\n  yDomains: Record<string, Array<number>>;\n  /**\n   * X axis domain per spectrum\n   * value change when zooming in/out for the selected spectrum\n   * @default {}\n   */\n  xDomains: Record<string, Array<number>>;\n  /**\n   * Domain for X and Y axis once it calculated and it change in one case  when we load new spectra\n   * @default {}\n   */\n  originDomain: {\n    xDomain: Array<number>;\n    yDomain: Array<number>;\n    xDomains: Record<string, Array<number>>;\n    yDomains: Record<string, Array<number>>;\n    shareYDomain: boolean;\n  };\n  /**\n   * y axis domain per spectrum for integrals\n   * value change when vertical scale change for the integrals\n   * @default {}\n   */\n  integralsYDomains: Record<string, Array<number>>;\n\n  /**\n   * current select tab (nucleus)\n   * @default null\n   */\n  activeTab: string;\n  /**\n   * plot chart area width\n   * @default 0\n   */\n  width: number;\n  /**\n   * plot chart area height\n   * @default 0\n   */\n  height: number;\n  /**\n   * The margin Around the plot chart area\n   * @default {top: 10,right: 20,bottom: 70,left: 0}\n   */\n  margin: Margin;\n  /**\n   * current active spectrum\n   * @default null\n   */\n  activeSpectrum: ActiveSpectrum | null;\n  /**\n   * Scale direction\n   * @default 'RTL'\n   */\n  mode: 'RTL' | 'LTR';\n  /**\n   * molecules\n   * @default []\n   */\n  molecules: Array<Molecule>;\n  /**\n   * options to control spectra vertical alignment\n   * @default {align: 'bottom',value: DEFAULT_YAXIS_SHIFT_VALUE}\n   */\n  verticalAlign: VerticalAlign;\n  /**\n   * @todo for undo /redo features\n   */\n  history: Partial<{\n    past: Array<any>;\n    present: any;\n    future: Array<any>;\n    hasUndo: boolean;\n    hasRedo: boolean;\n  }>;\n\n  /**\n   * hide/show main loading indicator\n   * @default false\n   */\n  isLoading: boolean;\n\n  /**\n   * temporary snapshot of state once the user press on number from 1-9\n   */\n  keysPreferences: any;\n\n  /**\n   * displayer mode '1D' or '2D'\n   * @default '1D'\n   */\n  displayerMode: DISPLAYER_MODE;\n\n  /**\n   * active spectrum per nucleus\n   * @default {}\n   */\n  tabActiveSpectrum: Record<string, ActiveSpectrum | null>;\n\n  /**\n   * Multiple spectra analysis data\n   */\n\n  spectraAnalysis: SpectraAnalysis;\n  /**\n   * unique key identifier per Displayer instance\n   */\n  displayerKey: string;\n\n  /**\n   * Correlation data\n   */\n  correlations: CorrelationData;\n\n  /**\n   * Zoom Manager for vertical scale for spectra, integral, And undo zoom in per tab (nucleus)\n   * @default  {history: {},spectra: {},integral: {}}\n   */\n  zoom: {\n    history: ZoomHistory;\n  };\n\n  /**\n   * boolean indicator to check if the mouse over the displayer or not\n   * value change to true once the mouse come over the displayer and vice versa true once the mouse out of the displayer\n   * @default false\n   */\n  overDisplayer: boolean;\n\n  /**\n   * Basic options for the tools\n   */\n  toolOptions: {\n    /**\n     * The current selected tool\n     * @default `options.zoom.id`\n     */\n    selectedTool: string;\n    /**\n     * The current active options panel\n     * Part of tools has an options panel for more control over the tool, once the user select the tool then the options panel will be shown in the header\n     * @default null\n     */\n    selectedOptionPanel: string | null;\n\n    /**\n     * extra data for tools\n     */\n    data: {\n      /**\n       * list of zones for Baseline correction filter\n       */\n      baseLineZones: any;\n      /**\n       * pivot point for manual phase correction\n       * @default {value:0,index:0}\n       */\n      pivot: { value: number; index: number };\n      /**\n       * Noise factor for auto zones detection\n       * @default 1\n       */\n      zonesNoiseFactor: number;\n\n      /**\n       * The current active Filter\n       * @default null\n       */\n      activeFilterID: string | null;\n\n      /**\n       * copy of the range that the user start editing for multiplicity tree live updating\n       */\n      tempRange: Range | null;\n      /**\n       * boolean indicator to hide/show multiplicity tree\n       * @default false\n       */\n      showMultiplicityTrees: boolean;\n      /**\n       * boolean indicator to hide/show integrals for the spectrum ranges\n       * @default false\n       */\n      showRangesIntegrals: boolean;\n\n      /**\n       * boolean indicator to hide/show J graph for spectrum signals\n       * @default false\n       */\n\n      showJGraph: boolean;\n\n      /**\n       * prediction Index\n       * @default 0\n       */\n      predictionIndex: number;\n    };\n  };\n\n  usedColors: UsedColors;\n}\n\nexport function initState(state: State): State {\n  const displayerKey = generateID();\n  const correlations = buildCorrelationData([], {\n    tolerance: DefaultTolerance,\n  });\n\n  return {\n    ...state,\n    correlations,\n    displayerKey,\n    history: {},\n  };\n}\n\nexport function dispatchMiddleware(dispatch) {\n  const usedColors: UsedColors = { '1d': [], '2d': [] };\n\n  return (action) => {\n    switch (action.type) {\n      case types.INITIATE: {\n        if (action.payload) {\n          const { spectra, ...res } = migrate(action.payload);\n          void SpectraManager.fromJSON(spectra, usedColors).then((data) => {\n            action.payload = { spectra: data, ...res, usedColors };\n            dispatch(action);\n          });\n        }\n\n        break;\n      }\n      case types.LOAD_JSON_FILE: {\n        const parsedData = JSON.parse(action.files[0].binary.toString());\n        const data = migrate(parsedData);\n        void SpectraManager.fromJSON(data.spectra, usedColors).then(\n          (spectra) => {\n            action.payload = Object.assign(data, { spectra, usedColors });\n            dispatch(action);\n          },\n        );\n        break;\n      }\n      case types.LOAD_ZIP_FILE: {\n        for (let zipFile of action.files) {\n          void SpectraManager.addBruker(\n            { display: { name: zipFile.name } },\n            zipFile.binary,\n            usedColors,\n          ).then((data) => {\n            action.payload = { data, usedColors };\n            dispatch(action);\n          });\n        }\n        break;\n      }\n      case types.LOAD_NMREDATA_FILE: {\n        void nmredataToNmrium(action.file, usedColors).then((data) => {\n          action.payload = Object.assign(data, { usedColors });\n          dispatch(action);\n        });\n        break;\n      }\n      case types.PREDICT_SPECTRA: {\n        const {\n          mol: { molfile },\n          options,\n        } = action.payload;\n        void predictSpectra(molfile).then(\n          (data) => {\n            action.payload = { data, options };\n            dispatch(action);\n          },\n          () => {\n            dispatch(action);\n          },\n        );\n\n        break;\n      }\n\n      default:\n        action.usedColors = usedColors;\n        dispatch(action);\n\n        break;\n    }\n  };\n}\n\nfunction innerSpectrumReducer(draft: Draft<State>, action) {\n  if (\n    ![types.LOAD_JSON_FILE, types.LOAD_NMREDATA_FILE, types.INITIATE].includes(\n      action.type,\n    )\n  ) {\n    draft.actionType = action.type;\n  }\n\n  switch (action.type) {\n    case types.INITIATE:\n      return LoadActions.initiate(draft, action);\n    case types.SET_LOADING_FLAG:\n      return LoadActions.setIsLoading(draft, action.isLoading);\n    case types.LOAD_JSON_FILE:\n      return LoadActions.handleLoadJsonFile(draft, action);\n    case types.LOAD_JCAMP_FILE:\n      return LoadActions.loadJcampFile(draft, action);\n    case types.LOAD_JDF_FILE:\n      return LoadActions.loadJDFFile(draft, action);\n    case types.LOAD_MOL_FILE:\n      return LoadActions.handleLoadMOLFile(draft, action);\n    case types.LOAD_ZIP_FILE:\n      return LoadActions.handleLoadZIPFile(draft, action);\n    case types.LOAD_NMREDATA_FILE:\n      return LoadActions.handleLoadNmredata(draft, action);\n    case types.ADD_PEAK:\n      return PeaksActions.addPeak(draft, action.mouseCoordinates);\n    case types.ADD_PEAKS:\n      return PeaksActions.addPeaks(draft, action);\n\n    case types.DELETE_PEAK_NOTATION:\n      return PeaksActions.deletePeak(draft, action.data);\n\n    case types.ADD_INTEGRAL:\n      return IntegralsActions.addIntegral(draft, action);\n    case types.DELETE_INTEGRAL:\n      return IntegralsActions.deleteIntegral(draft, action);\n    case types.CHANGE_INTEGRAL_DATA:\n      return IntegralsActions.changeIntegral(draft, action);\n    case types.RESIZE_INTEGRAL:\n      return IntegralsActions.changeIntegral(draft, action);\n    case types.CHANGE_INTEGRAL_SUM:\n      return IntegralsActions.handleChangeIntegralSum(draft, action.value);\n    case types.CHANGE_INTEGRALS_SUM_FLAG:\n      return IntegralsActions.handleChangeIntegralsSumFlag(draft, action);\n    case types.CHANGE_INTEGRAL_RELATIVE:\n      return IntegralsActions.handleChangeIntegralsRelativeValue(draft, action);\n\n    case types.SET_ORIGINAL_DOMAIN:\n      return DomainActions.setOriginalDomain(draft, action.domain);\n\n    case types.SET_X_DOMAIN:\n      return DomainActions.setXDomain(draft, action.xDomain);\n\n    case types.SET_Y_DOMAIN:\n      return DomainActions.setYDomain(draft, action.yDomain);\n\n    case types.SET_WIDTH:\n      return setWidth(draft, action.width);\n\n    case types.SET_DIMENSIONS:\n      return handleSetDimensions(draft, action.width, action.height);\n\n    case types.SET_SELECTED_TOOL:\n      return ToolsActions.setSelectedTool(draft, action);\n    case types.RESET_SELECTED_TOOL:\n      return ToolsActions.resetSelectedTool(draft);\n    case types.SET_SELECTED_OPTIONS_PANEL:\n      return ToolsActions.setSelectedOptionPanel(\n        draft,\n        action.selectedOptionPanel,\n      );\n    case types.FULL_ZOOM_OUT:\n      return ToolsActions.zoomOut(draft, action);\n    case types.SHIFT_SPECTRUM:\n      return FiltersActions.shiftSpectrumAlongXAxis(draft, action.shiftValue);\n    case types.APPLY_ZERO_FILLING_FILTER:\n      return FiltersActions.applyZeroFillingFilter(draft, action.value);\n    case types.APPLY_FFT_FILTER:\n      return FiltersActions.applyFFTFilter(draft);\n    case types.APPLY_MANUAL_PHASE_CORRECTION_FILTER:\n      return FiltersActions.applyManualPhaseCorrectionFilter(\n        draft,\n        action.value,\n      );\n    case types.APPLY_AUTO_PHASE_CORRECTION_FILTER:\n      return FiltersActions.applyAutoPhaseCorrectionFilter(draft);\n    case types.APPLY_ABSOLUTE_FILTER:\n      return FiltersActions.applyAbsoluteFilter(draft);\n    case types.CALCULATE_MANUAL_PHASE_CORRECTION_FILTER:\n      return FiltersActions.calculateManualPhaseCorrection(draft, action.value);\n    case types.ENABLE_FILTER:\n      return FiltersActions.enableFilter(draft, action.id, action.checked);\n    case types.DELETE_FILTER:\n      return FiltersActions.deleteFilter(draft, action);\n    case types.DELETE_SPECTRA_FILTER:\n      return FiltersActions.deleteSpectraFilter(draft, action);\n    case types.SET_FILTER_SNAPSHOT:\n      return FiltersActions.filterSnapshotHandler(draft, action);\n    case types.APPLY_MULTIPLE_SPECTRA_FILTER:\n      return FiltersActions.handleMultipleSpectraFilter(draft, action);\n    case types.ADD_EXCLUSION_ZONE:\n      return FiltersActions.handleAddExclusionZone(draft, action);\n    case types.DELETE_EXCLUSION_ZONE:\n      return FiltersActions.handleDeleteExclusionZone(draft, action);\n\n    case types.CHANGE_VISIBILITY:\n      return SpectrumsActions.handleSpectrumVisibility(draft, action);\n\n    case types.CHANGE_PEAKS_MARKERS_VISIBILITY:\n      return SpectrumsActions.handleChangePeaksMarkersVisibility(\n        draft,\n        action.data,\n      );\n    case types.CHANGE_ACTIVE_SPECTRUM:\n      return SpectrumsActions.handleChangeActiveSpectrum(draft, action.data);\n    case types.CHANGE_SPECTRUM_COLOR:\n      return SpectrumsActions.handleChangeSpectrumColor(draft, action.data);\n    case types.CHANGE_SPECTRUM_SETTING:\n      return SpectrumsActions.changeSpectrumSetting(draft, action);\n    case types.ALIGN_SPECTRA:\n      return SpectrumsActions.alignSpectraHandler(draft, action);\n    case types.DELETE_SPECTRA:\n      return SpectrumsActions.handleDeleteSpectra(draft, action);\n    case types.ADD_MISSING_PROJECTION:\n      return SpectrumsActions.addMissingProjectionHandler(draft, action);\n    case types.GENERATE_SPECTRUM_FROM_PUBLICATION_STRING:\n      return SpectrumsActions.generateSpectrumFromPublicationStringHandler(\n        draft,\n        action,\n      );\n\n    case types.TOGGLE_REAL_IMAGINARY_VISIBILITY:\n      return ToolsActions.handleToggleRealImaginaryVisibility(draft);\n    case types.SET_ZOOM:\n      return ToolsActions.handleZoom(draft, action);\n    case types.SET_SPECTRA_SAME_TOP:\n      return ToolsActions.setSpectraSameTopHandler(draft);\n    case types.RESET_SPECTRA_SCALE:\n      return ToolsActions.resetSpectraScale(draft);\n\n    case types.CHANGE_SPECTRUM_DISPLAY_VIEW_MODE:\n      return ToolsActions.handleChangeSpectrumDisplayMode(draft);\n\n    case types.ADD_MOLECULE:\n      return MoleculeActions.addMoleculeHandler(draft, action.molfile);\n\n    case types.SET_MOLECULE:\n      return MoleculeActions.setMoleculeHandler(\n        draft,\n        action.molfile,\n        action.key,\n      );\n\n    case types.DELETE_MOLECULE:\n      return MoleculeActions.deleteMoleculeHandler(draft, action);\n\n    case types.PREDICT_SPECTRA:\n      return MoleculeActions.predictSpectraFromMoleculeHandler(draft, action);\n\n    case types.SET_CORRELATIONS_MF:\n      return CorrelationsActions.handleSetMF(draft, action.payload);\n\n    case types.SET_CORRELATIONS_TOLERANCE:\n      return CorrelationsActions.handleSetTolerance(draft, action.payload);\n\n    case types.SET_CORRELATION:\n      return CorrelationsActions.handleSetCorrelation(draft, action.payload);\n\n    case types.SET_CORRELATIONS:\n      return CorrelationsActions.handleSetCorrelations(draft, action.payload);\n\n    case types.DELETE_CORRELATION:\n      return CorrelationsActions.handleDeleteCorrelation(draft, action.payload);\n\n    case types.BRUSH_END:\n      return ToolsActions.handleBrushEnd(draft, action);\n\n    case types.SET_VERTICAL_INDICATOR_X_POSITION:\n      return ToolsActions.setVerticalIndicatorXPosition(draft, action.position);\n    case types.SET_SPECTRUMS_VERTICAL_ALIGN:\n      return ToolsActions.setSpectrumsVerticalAlign(draft);\n\n    case types.AUTO_PEAK_PICKING:\n      return PeaksActions.handleAutoPeakPicking(draft, action.options);\n\n    case types.AUTO_ZONES_DETECTION:\n      return ZonesActions.handleAutoZonesDetection(draft, action.options);\n    case types.CHANGE_ZONES_NOISE_FACTOR:\n      return ZonesActions.changeZonesFactorHandler(draft, action);\n    case types.AUTO_RANGES_DETECTION:\n      return RangesActions.handleAutoRangesDetection(draft, action.options);\n    case types.ADD_RANGE:\n      return RangesActions.handleAddRange(draft, action);\n    case types.DELETE_RANGE:\n      return RangesActions.handleDeleteRange(draft, action);\n    case types.DELETE_1D_SIGNAL:\n      return RangesActions.handleDeleteSignal(draft, action);\n    case types.RESIZE_RANGE:\n      return RangesActions.handleResizeRange(draft, action);\n    case types.CHANGE_RANGE_SUM:\n      return RangesActions.handleChangeRangeSum(draft, action.value);\n    case types.CHANGE_RANGES_SUM_FLAG:\n      return RangesActions.handleChangeRangesSumFlag(draft, action);\n    case types.CHANGE_RANGE_RELATIVE:\n      return RangesActions.handleChangeRangeRelativeValue(draft, action);\n    case types.CHANGE_RANGE_SIGNAL_VALUE:\n      return RangesActions.handleChangeRangeSignalValue(draft, action);\n    case types.CHANGE_RANGE_SIGNAL_KIND:\n      return RangesActions.handleChangeRangeSignalKind(draft, action);\n    case types.SAVE_EDITED_RANGE:\n      return RangesActions.handleSaveEditedRange(draft, action);\n    case types.UNLINK_RANGE:\n      return RangesActions.handleUnlinkRange(draft, action);\n    case types.SET_DIAID_RANGE:\n      return RangesActions.handleSetDiaIDRange(draft, action);\n    case types.CHANGE_TEMP_RANGE:\n      return RangesActions.handleChangeTempRange(draft, action);\n    case types.SHOW_MULTIPLICTY_TREES:\n      return RangesActions.handleShowMultiplicityTrees(draft);\n    case types.SHOW_RANGES_INTEGRALS:\n      return RangesActions.handleShowRangesIntegrals(draft);\n    case types.AUTO_RANGES_SPECTRA_PICKING:\n      return RangesActions.handleAutoSpectraRangesDetection(draft);\n    case types.SHOW_J_GRAPH:\n      return RangesActions.handleShowJGraph(draft);\n\n    case types.SET_ACTIVE_TAB:\n      return ToolsActions.handelSetActiveTab(draft, action.tab);\n    case types.ADD_BASE_LINE_ZONE:\n      return ToolsActions.handleAddBaseLineZone(draft, action.zone);\n    case types.DELETE_BASE_LINE_ZONE:\n      return ToolsActions.handleDeleteBaseLineZone(draft, action.id);\n\n    case types.APPLY_BASE_LINE_CORRECTION_FILTER:\n      return FiltersActions.handleBaseLineCorrectionFilter(draft, action);\n    case types.SET_KEY_PREFERENCES:\n      return setKeyPreferencesHandler(draft, action.keyCode);\n    case types.APPLY_KEY_PREFERENCES:\n      return applyKeyPreferencesHandler(draft, action.keyCode);\n    case types.SET_2D_LEVEL:\n      return ToolsActions.levelChangeHandler(draft, action);\n    case types.ADD_2D_ZONE:\n      return ZonesActions.add2dZoneHandler(draft, action);\n    case types.DELETE_2D_ZONE:\n      return ZonesActions.handleDeleteZone(draft, action);\n    case types.DELETE_2D_SIGNAL:\n      return ZonesActions.handleDeleteSignal(draft, action);\n    case types.SET_2D_SIGNAL_PATH_LENGTH:\n      return ZonesActions.handleSetSignalPathLength(draft, action);\n    case types.RESET_DOMAIN:\n      return DomainActions.handelResetDomain(draft);\n    case types.CHANGE_ZONE_SIGNAL_VALUE:\n      return ZonesActions.changeZoneSignalDelta(draft, action);\n    case types.CHANGE_ZONE_SIGNAL_KIND:\n      return ZonesActions.handleChangeZoneSignalKind(draft, action);\n    case types.UNLINK_ZONE:\n      return ZonesActions.handleUnlinkZone(draft, action);\n    case types.SET_DIAID_ZONE:\n      return ZonesActions.handleSetDiaIDZone(draft, action);\n    case types.AUTO_ZONES_SPECTRA_PICKING:\n      return ZonesActions.handleAutoSpectraZonesDetection(draft);\n    case types.SAVE_EDITED_ZONE:\n      return ZonesActions.handleSaveEditedZone(draft, action);\n\n    case types.ANALYZE_SPECTRA:\n      return SpectraAnalysisActions.analyzeSpectra(draft, action);\n    case types.DELETE_ANALYZE_SPECTRA_RANGE:\n      return SpectraAnalysisActions.handleDeleteSpectraRanges(draft, action);\n    case types.RESIZE_ANALYZE_SPECTRA_RANGE:\n      return SpectraAnalysisActions.handleResizeSpectraRange(draft, action);\n    case types.SET_ANALYZE_SPECTRA_COLUMNS:\n      return SpectraAnalysisActions.handleSetColumns(draft, action);\n    case types.FILTER_SPECTRA_COLUMN:\n      return SpectraAnalysisActions.handleFilterColumn(draft, action);\n\n    case types.RESURRECTING_SPECTRUM_FROM_RANGES:\n      return DatabaseActions.handleRangeResurrecting(draft, action);\n\n    case types.SET_AUTOMATIC_ASSIGNMENTS:\n      return AssignmentsActions.setAutomaticAssignmentsHandler(draft, action);\n\n    case UNDO:\n      return handleHistoryUndo(draft);\n\n    case REDO:\n      return handleHistoryRedo(draft);\n\n    case RESET:\n      return handleHistoryReset(draft, action);\n\n    case types.SET_MOUSE_OVER_DISPLAYER:\n      return GlobalActions.setIsOverDisplayer(draft, action);\n\n    default:\n      return;\n  }\n}\n\nexport const spectrumReducer = produce(innerSpectrumReducer);\n","import { createContext, useContext } from 'react';\n\nimport { initialState, State } from '../reducer/Reducer';\n\nexport const ChartContext = createContext<State>(initialState);\nexport const ChartDataProvider = ChartContext.Provider;\n\nexport function useChartData() {\n  return useContext(ChartContext);\n}\n","import { createContext, useContext } from 'react';\n\nexport const dispatchContext = createContext<any>({});\n\nexport const DispatchProvider = dispatchContext.Provider;\n\nexport function useDispatch() {\n  return useContext(dispatchContext);\n}\n","import { useMemo } from 'react';\n\nimport { Datum1D } from '../../data/types/data1d';\nimport { Datum2D } from '../../data/types/data2d';\nimport { useChartData } from '../context/ChartContext';\n\nexport default function useSpectrum(defaultValue: any) {\n  const { data, activeSpectrum } = useChartData();\n\n  return useMemo<Datum1D | Datum2D>(() => {\n    if (data && activeSpectrum && activeSpectrum.id) {\n      const datum =\n        data.find((datum) => datum.id === activeSpectrum.id) || defaultValue;\n      return datum;\n    }\n    return defaultValue;\n  }, [activeSpectrum, data, defaultValue]);\n}\n","import { createContext, useContext } from 'react';\n\nfunction defaultLoader() {\n  // Empty\n}\n\nconst LoaderContext = createContext<() => void>(defaultLoader);\n\nexport const LoaderProvider = LoaderContext.Provider;\n\nexport function useLoader() {\n  return useContext(LoaderContext);\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { ReactNode } from 'react';\n\nimport { useLoader } from '../context/LoaderContext';\n\nconst styles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(255, 255, 255, 0.25);\n  flex-direction: column;\n  user-select: none;\n  width: 100%;\n  height: 100%;\n  outline: 10px dashed rgba(0, 0, 0, 0.3);\n  outline-offset: -10px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  p {\n    padding: 15px 30px;\n    background-color:rgba(0, 0, 0, 0.5);\n    border-radius: 39px;\n    color: white;\n    font-size: x-large;\n    font-weight: bold;\n\n  }\n}\n`;\n\ninterface NoDataProps {\n  isEmpty?: boolean;\n  canOpenLoader?: boolean;\n  emptyText?: ReactNode;\n}\n\nfunction NoData({\n  isEmpty = true,\n  emptyText = 'Drag and drop here a JCAMP-DX, zipped Bruker folder, Jeol jdf or NMRium file',\n  canOpenLoader = true,\n}: NoDataProps) {\n  const openLoader = useLoader();\n\n  if (!isEmpty) {\n    return null;\n  }\n\n  return (\n    <div css={styles} {...(canOpenLoader && { onClick: openLoader })}>\n      <p>{emptyText}</p>\n    </div>\n  );\n}\n\nexport default NoData;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nconst styles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(255, 255, 255, 0.25);\n  height: 100%;\n  flex-direction: column;\n  user-select: none;\n  position: absolute;\n  width: 100%;\n\n  svg {\n    animation-duration: 0.5s;\n    animation-name: spinAnimation;\n    animation-iteration-count: infinite;\n    animation-fill-mode: forwards;\n    animation-direction: inherit;\n    animation-timing-function: linear;\n    animation-duration: 1s;\n    width: 100px;\n    height: 100px;\n  }\n\n  @keyframes spinAnimation {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default function DefaultSpinnerComponent() {\n  return (\n    <div css={styles}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\">\n        <g fill=\"#61DAFB\">\n          <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\" />\n          <path d=\"M520.5 78.1z\" />\n        </g>\n      </svg>\n      <p>Loading ...</p>\n    </div>\n  );\n}\n","import { createContext, ReactElement } from 'react';\n\nimport DefaultSpinnerComponent from './DefaultSpinnerComponent';\n\nexport function defaultGetSpinner() {\n  return <DefaultSpinnerComponent />;\n}\n\nexport const spinnerContext =\n  createContext<() => ReactElement>(defaultGetSpinner);\n\nexport const SpinnerProvider = spinnerContext.Provider;\n","import { useState, Fragment, useEffect, useContext, ReactNode } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nimport NoData from './NoData';\nimport { spinnerContext } from './SpinnerContext';\n\ninterface SpinnerProps {\n  isLoading?: boolean;\n  emptyText?: ReactNode;\n}\n\nfunction Spinner({ isLoading = true, emptyText = undefined }: SpinnerProps) {\n  const { data } = useChartData();\n  const [checkEmpty, startCheckEmpty] = useState(false);\n\n  useEffect(() => {\n    let timeout: any = null;\n    if (!isLoading) {\n      timeout = setTimeout(() => {\n        startCheckEmpty(true);\n      }, 500);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [isLoading]);\n\n  const getSpinner = useContext(spinnerContext);\n\n  return (\n    <Fragment>\n      {isLoading && getSpinner()}\n      {checkEmpty && !isLoading && (\n        <NoData isEmpty={data && data.length === 0} emptyText={emptyText} />\n      )}\n    </Fragment>\n  );\n}\n\nexport default Spinner;\n","import { CSSProperties, useContext } from 'react';\n\nimport { BrushContext } from '../EventsTrackers/BrushTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { options } from '../toolbar/ToolTypes';\n\nconst styles: Record<'container', CSSProperties> = {\n  container: {\n    transformOrigin: 'top left',\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    zoom: '100%',\n  },\n};\n\nconst allowTools: Array<string | number> = [\n  options.zoom.id,\n  options.zeroFilling.id,\n  options.peakPicking.id,\n  options.integral.id,\n  options.phaseCorrection.id,\n  options.baseLineCorrection.id,\n  options.rangesPicking.id,\n  options.zone2D.id,\n  options.slicingTool.id,\n  options.editRange.id,\n  options.multipleSpectraAnalysis.id,\n  options.exclusionZones.id,\n  options.databaseRangesSelection.id,\n];\n\nexport const BRUSH_TYPE = {\n  X: 1,\n  Y: 2,\n  XY: 3,\n};\n\nconst defaultDimensionBorder: {\n  startX: number;\n  startY: number;\n  endX?: number;\n  endY?: number;\n} = {\n  startX: 0,\n  startY: 0,\n};\n\ninterface BrushXYProps {\n  brushType: number;\n  dimensionBorder?: {\n    startX: number;\n    startY: number;\n    endX?: number;\n    endY?: number;\n  };\n  width?: number;\n  height?: number;\n}\n\nexport default function BrushXY({\n  brushType = BRUSH_TYPE.XY,\n  dimensionBorder = defaultDimensionBorder,\n  width: widthProps,\n  height: heightProps,\n}: BrushXYProps) {\n  let {\n    width,\n    height,\n    toolOptions: { selectedTool },\n  } = useChartData();\n  let { startX, endX, startY, endY, step } = useContext(BrushContext);\n\n  if (\n    !allowTools.includes(selectedTool) ||\n    step !== 'brushing' ||\n    !dimensionBorder ||\n    (dimensionBorder.startX && startX < dimensionBorder.startX) ||\n    (dimensionBorder.startY && startY < dimensionBorder.startY) ||\n    ((dimensionBorder.endX && Math.sign(endX - startX) === 1\n      ? endX > dimensionBorder.endX\n      : endX < dimensionBorder.startX) &&\n      (dimensionBorder.endX &&\n      dimensionBorder.endY &&\n      Math.sign(endY - startY) === 1\n        ? endY > dimensionBorder.endY\n        : endY < dimensionBorder.startY))\n  ) {\n    return null;\n  }\n\n  width = widthProps ? widthProps : width;\n\n  height = heightProps ? heightProps : height;\n\n  endX =\n    dimensionBorder.endX && endX > dimensionBorder.endX\n      ? dimensionBorder.endX\n      : dimensionBorder.startX && endX < dimensionBorder.startX\n      ? dimensionBorder.startX\n      : endX;\n  endY =\n    dimensionBorder.endY && endY > dimensionBorder.endY\n      ? dimensionBorder.endY\n      : dimensionBorder.startY && endY < dimensionBorder.startY\n      ? dimensionBorder.startY\n      : endY;\n\n  const scaleX =\n    brushType === BRUSH_TYPE.X || brushType === BRUSH_TYPE.XY\n      ? (endX - startX) / width\n      : 1;\n  startX =\n    brushType === BRUSH_TYPE.X || brushType === BRUSH_TYPE.XY ? startX : 0;\n\n  const scaleY =\n    brushType === BRUSH_TYPE.Y || brushType === BRUSH_TYPE.XY\n      ? (endY - startY) / height\n      : 1;\n  startY =\n    brushType === BRUSH_TYPE.Y || brushType === BRUSH_TYPE.XY ? startY : 0;\n  return (\n    <div\n      style={{\n        ...styles.container,\n        transform: `translate(${startX}px, ${startY}px) scale(${scaleX},${scaleY})`,\n        willChange: 'transform',\n      }}\n    >\n      <svg width={width} height={height}>\n        <rect\n          x=\"0\"\n          y=\"0\"\n          width={width}\n          height={height}\n          fill=\"gray\"\n          opacity=\"0.2\"\n        />\n      </svg>\n    </div>\n  );\n}\n","import { CSSProperties, useContext } from 'react';\n\nimport { BrushContext } from '../EventsTrackers/BrushTracker';\nimport { MouseContext } from '../EventsTrackers/MouseTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { options } from '../toolbar/ToolTypes';\n\nconst styles: Record<'line', CSSProperties> = {\n  line: {\n    stroke: 'black',\n    strokeOpacity: 1,\n    shapeRendering: 'crispEdges',\n    strokeWidth: '1',\n    willChange: 'transform',\n  },\n};\n\nconst allowTools: Array<string | number> = [\n  options.zoom.id,\n  options.equalizerTool.id,\n  options.baseLineCorrection.id,\n  options.zone2D.id,\n  options.slicingTool.id,\n  options.integral.id,\n  options.rangesPicking.id,\n  options.editRange.id,\n  options.multipleSpectraAnalysis.id,\n  options.exclusionZones.id,\n  options.databaseRangesSelection.id,\n];\n\nfunction CrossLinePointer() {\n  const {\n    height,\n    width,\n    margin,\n    toolOptions: { selectedTool },\n  } = useChartData();\n  let position = useContext(MouseContext);\n  const brushState = useContext(BrushContext);\n\n  if (\n    !allowTools.includes(selectedTool) ||\n    brushState.step === 'brushing' ||\n    !position ||\n    position.x > width - margin.right ||\n    position.y > height - margin.bottom ||\n    !width ||\n    !height\n  ) {\n    return null;\n  }\n  return (\n    <div\n      key=\"crossLine\"\n      style={{\n        willChange: 'transform',\n        cursor: 'crosshair',\n        transform: `translate(${-width + position.x}px, ${\n          -height + position.y\n        }px)`,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        pointerEvents: 'none',\n        overflow: 'visible',\n        width: 2 * width,\n        height: 2 * height,\n      }}\n    >\n      <svg width={2 * width} height={2 * height}>\n        <line\n          style={styles.line}\n          x1={width}\n          y1=\"0\"\n          x2={width}\n          y2={height * 2}\n          key=\"vertical_line\"\n        />\n        <line\n          style={styles.line}\n          x1=\"0\"\n          y1={height}\n          x2={width * 2}\n          y2={height}\n          key=\"horizontal_line\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default CrossLinePointer;\n","import lodashGet from 'lodash/get';\nimport lodashSet from 'lodash/set';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nexport function useStateWithLocalStorage(localStorageKey, key?: string) {\n  const [value, setValue] = useState(\n    localStorage.getItem(localStorageKey) || '{}',\n  );\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, value);\n  }, [localStorageKey, value]);\n\n  const setData = useCallback(\n    (data, key = null) => {\n      let castData = JSON.parse(value);\n      if (key) {\n        lodashSet(castData, key, data);\n      } else {\n        castData = { ...castData, ...data };\n      }\n      setValue(JSON.stringify(castData));\n    },\n    [value],\n  );\n\n  return useMemo(() => {\n    return [\n      key ? lodashGet(JSON.parse(value), key, {}) : JSON.parse(value),\n      setData,\n    ];\n  }, [key, setData, value]);\n}\n\nexport function getLocalStorage(localStorageKey, isJson = true) {\n  const settings = localStorage.getItem(localStorageKey);\n  return settings && isJson ? JSON.parse(settings) : settings;\n}\n\nexport function storeData(localStorageKey, value) {\n  localStorage.setItem(localStorageKey, value);\n}\n\nexport function removeData(localStorageKey) {\n  localStorage.removeItem(localStorageKey);\n}\n\nexport function getValue(object, keyPath, defaultValue: any = null) {\n  return lodashGet(object, keyPath, defaultValue);\n}\n","import { Workspace } from './Workspace';\n\nexport const basic: Workspace = {\n  version: 1,\n  label: 'Default workspace',\n  display: {\n    general: {\n      disableMultipletAnalysis: false,\n      hideSetSumFromMolecule: false,\n      hideGeneralSettings: false,\n      experimentalFeatures: { display: true },\n    },\n\n    panels: {\n      spectraPanel: { display: true, open: true },\n      informationPanel: { display: true, open: false },\n      peaksPanel: { display: true, open: false },\n      integralsPanel: { display: true, open: false },\n      rangesPanel: { display: true, open: false },\n      structuresPanel: { display: true, open: false },\n      filtersPanel: { display: true, open: false },\n      zonesPanel: { display: true, open: false },\n      summaryPanel: { display: false, open: false },\n      multipleSpectraAnalysisPanel: { display: false, open: false },\n      databasePanel: { display: false, open: false },\n      predictionPanel: { display: false, open: false },\n    },\n  },\n\n  controllers: {\n    dimmedSpectraTransparency: 0.1,\n  },\n  formatting: {\n    nuclei: {\n      '1h': { name: '1H', ppm: '0.00', hz: '0.00' },\n      '13c': { name: '13C', ppm: '0.00', hz: '0.00' },\n      '15n': { name: '15N', ppm: '0.00', hz: '0.00' },\n      '19f': { name: '19F', ppm: '0.00', hz: '0.00' },\n      '29si': { name: '29Si', ppm: '0.00', hz: '0.00' },\n      '31p': { name: '31P', ppm: '0.00', hz: '0.00' },\n    },\n    panels: {},\n  },\n  databases: [\n    {\n      label: 'Toc',\n      url: 'https://data.cheminfo.org/nmr/database/toc.json',\n      enabled: true,\n    },\n  ],\n};\n","import { Workspace } from './Workspace';\nimport { basic } from './basic';\n\nexport const embedded: Workspace = {\n  version: 1,\n  label: 'Embedded workspace',\n  display: {\n    general: {\n      disableMultipletAnalysis: false,\n      hideSetSumFromMolecule: false,\n      hideGeneralSettings: false,\n      experimentalFeatures: { display: true },\n      hidePanelOnLoad: true,\n    },\n\n    panels: {\n      spectraPanel: { display: true, open: true },\n      informationPanel: { display: true, open: false },\n      peaksPanel: { display: true, open: false },\n      integralsPanel: { display: true, open: false },\n      rangesPanel: { display: true, open: false },\n      structuresPanel: { display: true, open: false },\n      filtersPanel: { display: true, open: false },\n      zonesPanel: { display: true, open: false },\n      summaryPanel: { display: false, open: false },\n      multipleSpectraAnalysisPanel: { display: false, open: false },\n      databasePanel: { display: false, open: false },\n      predictionPanel: { display: false, open: false },\n    },\n  },\n  controllers: basic.controllers,\n  formatting: basic.formatting,\n};\n","import { Workspace } from './Workspace';\nimport { basic } from './basic';\n\nexport const exercise: Workspace = {\n  version: 1,\n  label: 'Exercise workspace',\n  display: {\n    general: {\n      disableMultipletAnalysis: true,\n      hideSetSumFromMolecule: true,\n      hideGeneralSettings: true,\n      experimentalFeatures: { hidden: true },\n    },\n\n    panels: {\n      spectraPanel: { display: true, open: true },\n      informationPanel: { hidden: true },\n      peaksPanel: { hidden: true },\n      integralsPanel: { display: true },\n      rangesPanel: { hidden: true },\n      structuresPanel: { hidden: true },\n      filtersPanel: { hidden: true },\n      zonesPanel: { hidden: true },\n      summaryPanel: { hidden: true },\n      multipleSpectraAnalysisPanel: { hidden: true },\n      databasePanel: { hidden: true },\n      predictionPanel: { hidden: true },\n    },\n\n    toolBarButtons: {\n      zoomTool: true,\n      zoomOutTool: true,\n      import: false,\n      exportAs: false,\n      spectraStackAlignments: true,\n      spectraCenterAlignments: true,\n      realImaginary: false,\n      peakTool: true,\n      integralTool: true,\n      zonePickingTool: false,\n      slicingTool: false,\n      autoRangesTool: false,\n      zeroFillingTool: false,\n      phaseCorrectionTool: false,\n      baseLineCorrectionTool: false,\n      FFTTool: false,\n      multipleSpectraAnalysisTool: false,\n      exclusionZonesTool: false,\n    },\n  },\n  controllers: basic.controllers,\n  formatting: basic.formatting,\n  databases: basic.databases,\n};\n","import { Workspace } from './Workspace';\nimport { basic } from './basic';\n\nexport const prediction: Workspace = {\n  version: 1,\n  label: 'Prediction workspace',\n  display: {\n    general: {\n      experimentalFeatures: { display: false },\n    },\n    panels: {\n      spectraPanel: { display: true },\n      rangesPanel: { display: true },\n      zonesPanel: { display: true },\n      predictionPanel: { display: true, open: true },\n      informationPanel: { display: false },\n      peaksPanel: { display: false },\n      integralsPanel: { display: false },\n      structuresPanel: { display: false },\n      filtersPanel: { display: false },\n      summaryPanel: { display: false },\n      multipleSpectraAnalysisPanel: { display: false },\n      databasePanel: { display: false },\n    },\n  },\n  controllers: basic.controllers,\n  formatting: basic.formatting,\n  databases: basic.databases,\n};\n","import { Workspace } from './Workspace';\nimport { basic } from './basic';\n\nexport const process1D: Workspace = {\n  version: 1,\n  label: 'Process 1D workspace',\n  display: {\n    general: {\n      disableMultipletAnalysis: true,\n    },\n\n    panels: {\n      zonesPanel: { display: true },\n      summaryPanel: { display: true },\n      multipleSpectraAnalysisPanel: { display: true, open: true },\n      spectraPanel: { display: true, open: true },\n      informationPanel: { hidden: true },\n      peaksPanel: { hidden: true },\n      integralsPanel: { hidden: true },\n      rangesPanel: { hidden: true },\n      structuresPanel: { hidden: true },\n      filtersPanel: { hidden: true },\n      databasePanel: { hidden: true },\n      predictionPanel: { hidden: true },\n    },\n\n    toolBarButtons: {\n      import: false,\n      exportAs: false,\n      autoRangesTool: false,\n      multipleSpectraAnalysisTool: false,\n      exclusionZonesTool: false,\n    },\n  },\n  controllers: basic.controllers,\n  formatting: basic.formatting,\n  databases: basic.databases,\n};\n","import { basic } from './basic';\nimport { embedded } from './embedded';\nimport { exercise } from './exercise';\nimport { prediction } from './prediction';\nimport { process1D } from './process1D';\n\nexport default { exercise, default: basic, process1D, prediction, embedded };\n","import { Draft, produce, original } from 'immer';\nimport lodashMerge from 'lodash/merge';\n\nimport generateID from '../../data/utilities/generateID';\nimport { NMRiumWorkspace, NMRiumPreferences } from '../NMRium';\nimport {\n  getLocalStorage,\n  removeData,\n  storeData,\n} from '../utility/LocalStorage';\nimport Workspaces from '../workspaces';\nimport { Formatting, Workspace } from '../workspaces/Workspace';\n\nimport { ActionType } from './types/Types';\n\ntype InitPreferencesAction = ActionType<\n  'INIT_PREFERENCES',\n  { display: NMRiumPreferences; workspace: NMRiumWorkspace; dispatch: any }\n>;\ntype SetPreferencesAction = ActionType<\n  'SET_PREFERENCES',\n  Omit<Workspace, 'version' | 'label'>\n>;\ntype SetPanelsPreferencesAction = ActionType<\n  'SET_PANELS_PREFERENCES',\n  { key: string; value: string }\n>;\n\ntype WorkspaceAction = ActionType<\n  'SET_WORKSPACE' | 'REMOVE_WORKSPACE',\n  { workspace: string }\n>;\ntype AddWorkspaceAction = ActionType<\n  'ADD_WORKSPACE',\n  { workspace: string; data: Omit<Workspace, 'version' | 'label'> }\n>;\n\ntype PreferencesActions =\n  | InitPreferencesAction\n  | SetPreferencesAction\n  | ActionType<'RESET_PREFERENCES'>\n  | SetPanelsPreferencesAction\n  | WorkspaceAction\n  | AddWorkspaceAction;\n\nconst LOCAL_STORAGE_VERSION = 7;\n\nexport const WORKSPACES: Array<{\n  key: NMRiumWorkspace;\n  label: string;\n}> = [\n  {\n    key: 'default',\n    label: Workspaces.default.label,\n  },\n  {\n    key: 'process1D',\n    label: Workspaces.process1D.label,\n  },\n  {\n    key: 'exercise',\n    label: Workspaces.exercise.label,\n  },\n  {\n    key: 'prediction',\n    label: Workspaces.prediction.label,\n  },\n  {\n    key: 'embedded',\n    label: Workspaces.embedded.label,\n  },\n];\n\nfunction getPreferencesByWorkspace(workspace: NMRiumWorkspace) {\n  return Workspaces?.[workspace] || {};\n}\n\nexport interface PreferencesState {\n  version: number;\n  workspaces: Record<string, Workspace>;\n  dispatch: (action?: PreferencesActions) => void;\n  workspace: {\n    current: NMRiumWorkspace;\n    base: NMRiumWorkspace | null;\n  };\n}\n\nfunction getActiveWorkspace(draft: Draft<PreferencesState>) {\n  return draft.workspaces[draft.workspace.current || 'default'];\n}\n\nexport const preferencesInitialState: PreferencesState = {\n  version: LOCAL_STORAGE_VERSION,\n  workspaces: {},\n  dispatch: () => null,\n  workspace: {\n    current: 'default',\n    base: null,\n  },\n};\n\nfunction filterObject(data: any) {\n  return JSON.parse(JSON.stringify(data), (key, value) => {\n    if (value?.hidden !== true) {\n      return value;\n    }\n  });\n}\nfunction FlatObject(data: any) {\n  let result = {};\n  JSON.parse(JSON.stringify(data), (key, value) => {\n    if (value?.hidden !== true && key) {\n      result[key] = result[key]++ || 1;\n    }\n  });\n  return result;\n}\n\nfunction checkKeysExists(sourceObject, targetObject) {\n  const source = FlatObject(sourceObject);\n  const target = FlatObject(targetObject);\n\n  if (Object.keys(target).length === 0) {\n    return false;\n  }\n\n  for (const [key, value] of Object.entries(source)) {\n    if (!target[key] || target[key] !== value) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction mapNucleiFormatting(formatting: Formatting) {\n  const { nuclei, ...res } = formatting;\n  const _nuclei = Object.keys(nuclei).reduce((nucleusFormatting, key) => {\n    nucleusFormatting[nuclei[key].name.trim().toLowerCase()] = nuclei[key];\n    return nucleusFormatting;\n  }, {});\n  return { nuclei: _nuclei, ...res };\n}\n\nexport function initPreferencesState(\n  state: PreferencesState,\n): PreferencesState {\n  const nmrLocalStorageVersion = getLocalStorage(\n    'nmr-local-storage-version',\n    false,\n  );\n\n  let localData = getLocalStorage('nmr-general-settings');\n\n  // remove old nmr-local-storage-version key\n  if (nmrLocalStorageVersion && localData?.version) {\n    removeData('nmr-local-storage-version');\n  }\n\n  //  if the local setting version != current settings version number\n  if (!localData?.version || localData?.version !== LOCAL_STORAGE_VERSION) {\n    removeData('nmr-general-settings');\n  }\n  return {\n    ...state,\n    workspaces: localData?.workspaces || { default: Workspaces.default },\n  };\n}\n\nfunction handleInit(draft: Draft<PreferencesState>, action) {\n  if (action.payload) {\n    const localData = getLocalStorage('nmr-general-settings');\n\n    const { dispatch, workspace, ...resProps } = action.payload;\n    /**\n     * set the current workspace what the user-defined in the setting if the workspace is not defined at the level of component, otherwise\n     * use the default workspace\n     *\n     */\n    draft.workspace =\n      !workspace && localData?.currentWorkspace\n        ? { current: localData.currentWorkspace, base: null }\n        : { current: workspace || 'default', base: workspace };\n\n    const workspacePreferences = lodashMerge(\n      {},\n      getPreferencesByWorkspace(draft.workspace.current),\n      resProps,\n    );\n    const currentWorkspacePreferences = getActiveWorkspace(draft);\n\n    /**\n     * Update the local storage general preferences\n     * 1- if local storage is empty.\n     * 2- if predefine workspaces.\n     * 3- b) if workspace not exists in the local storage\n     *    c) if the local setting workspace version != current workspace version number\n     *    d) if hard code workspace parameters !=  current workspace parameters\n     */\n    if (\n      (Workspaces[draft.workspace.current] &&\n        (!currentWorkspacePreferences ||\n          workspacePreferences?.version !==\n            currentWorkspacePreferences?.version ||\n          !checkKeysExists(\n            workspacePreferences.display,\n            currentWorkspacePreferences?.display,\n          ))) ||\n      !localData\n    ) {\n      const {\n        workspaces,\n        version,\n        workspace: { current },\n      } = draft || {};\n      const display = filterObject(workspacePreferences.display);\n\n      const data = {\n        version,\n        ...(localData?.currentWorkspace && {\n          currentWorkspace: localData?.currentWorkspace,\n        }),\n        workspaces: {\n          ...workspaces,\n          [current]: {\n            ...workspacePreferences,\n            display,\n          },\n        },\n      };\n\n      draft.workspaces[current] = lodashMerge(\n        {},\n        currentWorkspacePreferences,\n        workspacePreferences,\n      );\n      storeData('nmr-general-settings', JSON.stringify(data));\n    } else {\n      currentWorkspacePreferences.display = lodashMerge(\n        {},\n        workspacePreferences.display,\n        currentWorkspacePreferences.display,\n      );\n    }\n\n    draft.dispatch = dispatch;\n  }\n}\n\nfunction handleSetPreferences(draft: Draft<PreferencesState>, action) {\n  if (action.payload) {\n    const currentWorkspacePreferences = getActiveWorkspace(draft);\n\n    let { controllers, formatting, display, databases } = action.payload;\n    formatting = mapNucleiFormatting(formatting);\n    let localData = getLocalStorage('nmr-general-settings');\n    localData.currentWorkspace = draft.workspace.current;\n    localData.workspaces = {\n      ...localData.workspaces,\n      [draft.workspace.current]: {\n        ...localData.workspaces[draft.workspace.current],\n        controllers,\n        formatting,\n        display,\n        databases,\n      },\n    };\n\n    storeData('nmr-general-settings', JSON.stringify(localData));\n\n    currentWorkspacePreferences.controllers = controllers;\n    currentWorkspacePreferences.formatting = formatting;\n    currentWorkspacePreferences.databases = databases;\n    currentWorkspacePreferences.display = {\n      ...currentWorkspacePreferences.display,\n      panels: display.panels,\n      general: {\n        ...(currentWorkspacePreferences.display.general || {}),\n        experimentalFeatures: display.general.experimentalFeatures,\n      },\n    };\n  }\n}\nfunction handleSetPanelsPreferences(draft: Draft<PreferencesState>, action) {\n  if (action.payload) {\n    const currentWorkspacePreferences = getActiveWorkspace(draft);\n\n    const { key, value } = action.payload;\n    let localData = getLocalStorage('nmr-general-settings');\n    localData.workspaces[draft.workspace.current].formatting.panels[key] =\n      value;\n    storeData('nmr-general-settings', JSON.stringify(localData));\n    currentWorkspacePreferences.formatting.panels[key] = value;\n  }\n}\nfunction handleResetPreferences(draft: Draft<PreferencesState>) {\n  const currentWorkspacePreferences = getActiveWorkspace(draft);\n  let localData = getLocalStorage('nmr-general-settings');\n  const workSpaceDisplayPreferences = getPreferencesByWorkspace(\n    draft.workspace.current,\n  ).display;\n\n  if (localData.workspaces[draft.workspace.current]) {\n    localData.workspaces[draft.workspace.current].display =\n      workSpaceDisplayPreferences;\n    storeData('nmr-general-settings', JSON.stringify(localData));\n  }\n  currentWorkspacePreferences.display = workSpaceDisplayPreferences;\n}\nfunction handleSetWorkspace(\n  draft: Draft<PreferencesState>,\n  action: WorkspaceAction,\n) {\n  const workspaceKey = action.payload.workspace;\n  if (!draft.workspaces[workspaceKey]) {\n    draft.workspaces[workspaceKey] = getPreferencesByWorkspace(\n      workspaceKey as NMRiumWorkspace,\n    );\n  }\n  draft.workspace.current = workspaceKey as NMRiumWorkspace;\n}\nfunction handleAddWorkspace(\n  draft: Draft<PreferencesState>,\n  action: AddWorkspaceAction,\n) {\n  const {\n    workspace: workspaceName,\n    data: { display, controllers, formatting, databases },\n  } = action.payload;\n  const newWorkSpace = {\n    version: 1,\n    label: workspaceName,\n    display,\n    controllers,\n    formatting,\n    databases,\n  };\n  const newWorkspaceKey = generateID();\n  const localData = getLocalStorage('nmr-general-settings');\n\n  localData.workspaces[newWorkspaceKey] = newWorkSpace;\n  storeData('nmr-general-settings', JSON.stringify(localData));\n  draft.workspaces[newWorkspaceKey] = newWorkSpace;\n  draft.workspace.current = newWorkspaceKey as any;\n}\nfunction handleRemoveWorkspace(\n  draft: Draft<PreferencesState>,\n  action: WorkspaceAction,\n) {\n  const { workspace } = action.payload;\n\n  if (workspace === draft.workspace.current) {\n    draft.workspace.current = 'default';\n  }\n\n  let localData = getLocalStorage('nmr-general-settings');\n  const storedWorkspaces = original(draft)?.workspaces || {};\n  const workspaces = Object.keys(storedWorkspaces).reduce((acc, key) => {\n    if (key !== workspace) {\n      acc[key] = storedWorkspaces[key];\n    }\n    return acc;\n  }, {});\n  draft.workspaces = workspaces;\n  localData.workspaces = filterObject(workspaces);\n  storeData('nmr-general-settings', JSON.stringify(localData));\n}\n\nfunction innerPreferencesReducer(\n  draft: Draft<PreferencesState>,\n  action: PreferencesActions,\n) {\n  switch (action.type) {\n    case 'INIT_PREFERENCES':\n      return handleInit(draft, action);\n    case 'SET_PREFERENCES':\n      return handleSetPreferences(draft, action);\n    case 'SET_PANELS_PREFERENCES':\n      return handleSetPanelsPreferences(draft, action);\n    case 'RESET_PREFERENCES':\n      return handleResetPreferences(draft);\n    case 'SET_WORKSPACE':\n      return handleSetWorkspace(draft, action);\n    case 'ADD_WORKSPACE':\n      return handleAddWorkspace(draft, action);\n    case 'REMOVE_WORKSPACE':\n      return handleRemoveWorkspace(draft, action);\n    default:\n      return draft;\n  }\n}\nconst preferencesReducer = produce(innerPreferencesReducer);\n\nexport default preferencesReducer;\n","import { createContext, useContext, useMemo } from 'react';\n\nimport {\n  preferencesInitialState,\n  PreferencesState,\n  WORKSPACES,\n} from '../reducer/preferencesReducer';\nimport Workspaces from '../workspaces';\n\nexport const PreferencesContext = createContext<PreferencesState>(\n  preferencesInitialState,\n);\nexport const PreferencesProvider = PreferencesContext.Provider;\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Preferences context was not found');\n  }\n\n  const { workspace, workspaces, dispatch } = context;\n\n  return useMemo(() => {\n    return {\n      current: workspaces[workspace.current] || {},\n      workspace,\n      workspaces,\n      dispatch,\n    };\n  }, [dispatch, workspace, workspaces]);\n}\n\nexport function useWorkspacesList() {\n  const { workspaces } = usePreferences();\n  return useMemo(() => {\n    const currentWorkspaces = Object.keys(workspaces).reduce<\n      { key: string; label: string }[]\n    >((acc, key) => {\n      if (!Workspaces[key]) {\n        acc.push({ key, label: workspaces[key].label });\n      }\n      return acc;\n    }, []);\n\n    return [...WORKSPACES, ...currentWorkspaces];\n  }, [workspaces]);\n}\n","export class PathBuilder {\n  private array: Array<string> = [];\n\n  public moveTo(x: number, y: number) {\n    this.array.push(`M ${x} ${y}`);\n  }\n\n  public lineTo(x: number, y: number) {\n    this.array.push(`L ${x} ${y}`);\n  }\n\n  public closePath() {\n    this.array.push('Z');\n  }\n\n  public toString() {\n    return this.array.join(' ');\n  }\n}\n","import get from 'lodash/get';\nimport { memo, useMemo } from 'react';\n\nimport { getShift } from '../../data/data2d/Spectrum2D';\nimport { Datum2D } from '../../data/types/data2d';\nimport { useChartData } from '../context/ChartContext';\nimport { usePreferences } from '../context/PreferencesContext';\nimport { PathBuilder } from '../utility/PathBuilder';\n\nimport { get2DXScale, get2DYScale } from './utilities/scale';\n\ninterface ContoursPathsProps {\n  id: string;\n  color: string;\n  sign: string;\n  datum: Datum2D;\n}\n\nfunction ContoursPaths({\n  id: spectrumID,\n  sign,\n  color,\n  datum,\n}: ContoursPathsProps) {\n  const { margin, width, height, xDomain, yDomain, contours, activeSpectrum } =\n    useChartData();\n\n  const preferences = usePreferences();\n  const { xShift, yShift } = getShift(datum);\n\n  const isActive = useMemo(() => {\n    return activeSpectrum === null\n      ? true\n      : spectrumID === activeSpectrum.id\n      ? true\n      : false;\n  }, [activeSpectrum, spectrumID]);\n\n  function buildContourPath(data) {\n    const _scaleX = get2DXScale({ margin, width, xDomain });\n    const _scaleY = get2DYScale({ margin, height, yDomain });\n    const path = new PathBuilder();\n\n    for (const element of data) {\n      if (element.lines) {\n        const lines = element.lines;\n        if (lines.length < 1e6) {\n          for (let i = 0; i < lines.length; i += 4) {\n            path.moveTo(\n              _scaleX(lines[i] + xShift),\n              _scaleY(lines[i + 1] + yShift),\n            );\n            path.lineTo(\n              _scaleX(lines[i + 2] + xShift),\n              _scaleY(lines[i + 3] + yShift),\n            );\n          }\n        }\n      } else {\n        path.moveTo(\n          _scaleX(element[0].x + xShift),\n          _scaleY(element[0].y + yShift),\n        );\n\n        for (let j = 1; j < element.length; j++) {\n          path.lineTo(\n            _scaleX(element[j].x + xShift),\n            _scaleY(element[j].y + yShift),\n          );\n        }\n      }\n    }\n\n    path.closePath();\n    return path.toString();\n  }\n\n  const data = useMemo(() => {\n    return get(contours, `${spectrumID}.${sign}`, []);\n  }, [contours, sign, spectrumID]);\n\n  return (\n    <path\n      fill=\"none\"\n      data-test-id=\"spectrum-line\"\n      stroke={color}\n      strokeWidth=\"1\"\n      style={{\n        opacity: isActive\n          ? 1\n          : get(\n              preferences.current,\n              'controllers.dimmedSpectraTransparency',\n              0.1,\n            ),\n      }}\n      d={buildContourPath(data)}\n    />\n  );\n}\n\ninterface ContoursInnerProps {\n  data: Array<Datum2D>;\n  displayerKey: string;\n}\n\nfunction ContoursInner({ data, displayerKey }: ContoursInnerProps) {\n  return (\n    <g clipPath={`url(#${displayerKey}clip-chart-2d)`} className=\"contours\">\n      {data?.map((datum, index) => (\n        <g key={`${datum.id + index}`}>\n          {datum.display.isPositiveVisible && (\n            <ContoursPaths\n              id={datum.id}\n              sign=\"positive\"\n              datum={datum}\n              color={datum.display.positiveColor}\n            />\n          )}\n          {datum.display.isNegativeVisible && (\n            <ContoursPaths\n              id={datum.id}\n              sign=\"negative\"\n              datum={datum}\n              color={datum.display.negativeColor}\n            />\n          )}\n        </g>\n      ))}\n    </g>\n  );\n}\n\nconst MemoizedContours = memo(ContoursInner);\n\nexport default function Contours() {\n  const { data: spectra, displayerKey } = useChartData();\n  const data = useMemo<Array<Datum2D>>(() => {\n    return spectra.filter(\n      (datum) => datum.info.dimension === 2 && datum.info.isFt,\n    ) as Array<Datum2D>;\n  }, [spectra]);\n\n  return <MemoizedContours {...{ data, displayerKey }} />;\n}\n","import { DataXY, DoubleArray } from 'cheminfo-types';\nimport { xyReduce } from 'ml-spectra-processing';\nimport { useCallback } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nexport enum XYReducerDomainAxis {\n  XAxis = 'XAxis',\n  YAxis = 'YAxis',\n}\n\ntype XYReducerDomainAxisType = keyof typeof XYReducerDomainAxis;\n\nexport default function useXYReduce(\n  domainAxis: XYReducerDomainAxisType,\n): (data: { x: number[]; y: number[] }) => DataXY<DoubleArray> {\n  const { width, xDomain, yDomain } = useChartData();\n\n  return useCallback(\n    (data: { x: number[]; y: number[] }) => {\n      const { x, y } = data;\n      const [from, to] =\n        domainAxis === XYReducerDomainAxis.XAxis ? xDomain : yDomain;\n      return xyReduce(\n        { x, y },\n        { from, to, nbPoints: width * 4, optimize: true },\n      );\n    },\n    [domainAxis, width, xDomain, yDomain],\n  );\n}\n","import { useMemo, memo } from 'react';\n\nimport { Datum1D } from '../../data/types/data1d';\nimport { useChartData } from '../context/ChartContext';\nimport useXYReduce, { XYReducerDomainAxis } from '../hooks/useXYReduce';\nimport { PathBuilder } from '../utility/PathBuilder';\n\nimport { get1DYScale, get2DYScale } from './utilities/scale';\n\ninterface Left1DChartProps {\n  margin?: number;\n  data: Datum1D;\n}\n\nfunction Left1DChart({\n  margin: marignValue = 10,\n  data: spectrum,\n}: Left1DChartProps) {\n  const {\n    height: originHeight,\n    margin,\n    yDomain,\n    yDomains,\n    displayerKey,\n  } = useChartData();\n  const xyReduce = useXYReduce(XYReducerDomainAxis.YAxis);\n\n  const height = margin.left;\n\n  const paths = useMemo(() => {\n    if (spectrum) {\n      const scaleX = get2DYScale({\n        height: originHeight,\n        yDomain: [yDomain[0], yDomain[1]],\n        margin,\n      });\n      const scaleY = get1DYScale(yDomains[spectrum.id], height, marignValue);\n\n      const { x, re: y } = spectrum.data;\n      const pathPoints = xyReduce({ x, y });\n\n      const pathBuilder = new PathBuilder();\n\n      pathBuilder.moveTo(\n        scaleY(pathPoints.y[pathPoints.y.length - 1]),\n        scaleX(pathPoints.x.length - 1),\n      );\n\n      for (let i = pathPoints.x.length - 2; i >= 0; i--) {\n        pathBuilder.lineTo(scaleY(pathPoints.y[i]), scaleX(pathPoints.x[i]));\n      }\n\n      return pathBuilder.toString();\n    } else {\n      return undefined;\n    }\n  }, [\n    height,\n    margin,\n    marignValue,\n    originHeight,\n    spectrum,\n    xyReduce,\n    yDomain,\n    yDomains,\n  ]);\n\n  const mainHeight = originHeight - margin.bottom - margin.top;\n\n  if (!mainHeight || !height) return null;\n\n  return (\n    <svg\n      viewBox={`0 0 ${height} ${mainHeight + margin.top}`}\n      width={height}\n      height={mainHeight + margin.top}\n    >\n      <defs>\n        <clipPath id={`${displayerKey}clip-left`}>\n          <rect width={height} height={mainHeight} x=\"0\" y={margin.top} />\n        </clipPath>\n      </defs>\n      <g clipPath={`url(#${displayerKey}clip-left)`}>\n        <path className=\"line\" stroke=\"black\" fill=\"none\" d={paths} />\n      </g>\n    </svg>\n  );\n}\n\nexport default memo(Left1DChart);\n","import { useMemo, memo } from 'react';\n\nimport { Datum1D } from '../../data/types/data1d';\nimport { useChartData } from '../context/ChartContext';\nimport useXYReduce, { XYReducerDomainAxis } from '../hooks/useXYReduce';\nimport { PathBuilder } from '../utility/PathBuilder';\n\nimport { get1DYScale, get2DXScale } from './utilities/scale';\n\ninterface Top1DChartProps {\n  margin?: number;\n  data: Datum1D;\n}\n\nfunction Top1DChart({\n  margin: marginProps = 10,\n  data: spectrum,\n}: Top1DChartProps) {\n  const {\n    width,\n    margin: originMargin,\n    xDomain,\n    yDomains,\n    displayerKey,\n  } = useChartData();\n  const xyReduce = useXYReduce(XYReducerDomainAxis.XAxis);\n  const height = originMargin.top;\n\n  const paths = useMemo(() => {\n    if (spectrum) {\n      const scaleX = get2DXScale({ width, xDomain, margin: originMargin });\n      const scaleY = get1DYScale(yDomains[spectrum.id], height, marginProps);\n      const { x, re: y } = spectrum.data;\n      const pathPoints = xyReduce({ x, y });\n\n      const pathBuilder = new PathBuilder();\n      pathBuilder.moveTo(scaleX(pathPoints.x[0]), scaleY(pathPoints.y[0]));\n      for (let i = 1; i < pathPoints.x.length; i++) {\n        pathBuilder.lineTo(scaleX(pathPoints.x[i]), scaleY(pathPoints.y[i]));\n      }\n\n      return pathBuilder.toString();\n    } else {\n      return undefined;\n    }\n  }, [\n    height,\n    marginProps,\n    originMargin,\n    spectrum,\n    width,\n    xDomain,\n    xyReduce,\n    yDomains,\n  ]);\n\n  if (!width || !height) {\n    return null;\n  }\n\n  return (\n    <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\n      <defs>\n        <clipPath id={`${displayerKey}clip-top`}>\n          <rect\n            width={width - originMargin.left - originMargin.right}\n            height={height}\n            x={originMargin.left}\n            y={`${0}`}\n          />\n        </clipPath>\n      </defs>\n      <g clipPath={`url(#${displayerKey}clip-top)`}>\n        <path\n          className=\"line\"\n          stroke=\"red\"\n          fill=\"none\"\n          strokeWidth=\"1px\"\n          d={paths}\n        />\n      </g>\n    </svg>\n  );\n}\n\nexport default memo(Top1DChart);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport * as d3 from 'd3';\nimport { useEffect, useRef, memo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nimport { get2DXScale } from './utilities/scale';\n\nconst axisStyles = css`\n  user-select: none;\n\n  path,\n  line {\n    fill: none;\n    stroke: black;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n    user-select: none;\n  }\n`;\n\nconst defaultMargin = { right: 100, top: 0, left: 0, bottom: 0 };\n\ninterface XAxisProps {\n  show?: boolean;\n  label?: string;\n  margin?: {\n    top: number;\n    right: number;\n    bottom: number;\n    left: number;\n  };\n}\n\nfunction XAxis(props: XAxisProps) {\n  const {\n    show = true,\n    label = 'δ [ppm]',\n    margin: marginProps = defaultMargin,\n  } = props;\n\n  const state = useChartData();\n  const { xDomain, height, width, margin, tabActiveSpectrum, activeTab } =\n    state;\n\n  const refAxis = useRef<SVGGElement>(null);\n\n  useEffect(() => {\n    if (!show) return;\n    const scaleX = get2DXScale({ width, margin, xDomain });\n    const xAxis = d3.axisBottom(scaleX).ticks(8).tickFormat(d3.format('0'));\n\n    // @ts-expect-error actually well typed\n    d3.select(refAxis.current).call(xAxis);\n  }, [\n    activeTab,\n    height,\n    margin,\n    margin.bottom,\n    margin.left,\n    margin.right,\n    margin.top,\n    show,\n    tabActiveSpectrum,\n    width,\n    xDomain,\n  ]);\n\n  if (!width || !height) {\n    return null;\n  }\n\n  return (\n    <>\n      {show && (\n        <g\n          className=\"x\"\n          css={axisStyles}\n          transform={`translate(0,${\n            height - (margin.bottom + marginProps.bottom)\n          })`}\n          ref={refAxis}\n        >\n          <text fill=\"#000\" x={width - 60} y=\"20\" dy=\"0.71em\" textAnchor=\"end\">\n            {label}\n          </text>\n        </g>\n      )}\n    </>\n  );\n}\n\nexport default memo(XAxis);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport * as d3 from 'd3';\nimport { useEffect, useRef, memo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nimport { get2DYScale } from './utilities/scale';\n\nconst axisStyles = css`\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n\n  path,\n  line {\n    fill: none;\n    stroke: black;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n    user-select: 'none';\n    -webkit-user-select: none; /* Chrome all / Safari all */\n    -moz-user-select: none; /* Firefox all */\n  }\n`;\n\nconst defaultMargin = { right: 50, top: 0, bottom: 0, left: 0 };\n\ninterface YAxisProps {\n  show?: boolean;\n  label?: string;\n  margin?: {\n    right: number;\n    top: number;\n    bottom: number;\n    left: number;\n  };\n}\n\nfunction YAxis(props: YAxisProps) {\n  const {\n    show = true,\n    label = '',\n    margin: marginProps = defaultMargin,\n  } = props;\n\n  const refAxis = useRef<SVGGElement>(null);\n\n  const state = useChartData();\n  const { yDomain, width, height, activeTab, tabActiveSpectrum, margin } =\n    state;\n\n  useEffect(() => {\n    if (!show || !yDomain) return;\n    const scaleY = get2DYScale({ height, yDomain, margin });\n\n    const axis = d3.axisRight(scaleY).ticks(8).tickFormat(d3.format('0'));\n\n    // @ts-expect-error well typed\n    d3.select(refAxis.current).call(axis);\n  }, [show, yDomain, activeTab, tabActiveSpectrum, height, margin]);\n\n  if (!width || !height) {\n    return null;\n  }\n\n  return (\n    <>\n      <g\n        className=\"y\"\n        css={axisStyles}\n        transform={`translate(${width - marginProps.right})`}\n        ref={refAxis}\n      >\n        <text\n          fill=\"#000\"\n          x={-marginProps.top}\n          y={-(marginProps.right - 5)}\n          dy=\"0.71em\"\n          transform=\"rotate(-90)\"\n          textAnchor=\"end\"\n        >\n          {label}\n        </text>\n      </g>\n    </>\n  );\n}\n\nexport default memo(YAxis);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState, useEffect, useMemo } from 'react';\n\nimport { SignalKindsToInclude } from '../../../data/constants/SignalsKinds';\nimport { isSpectrum1D } from '../../../data/data1d/Spectrum1D';\nimport { useChartData } from '../../context/ChartContext';\nimport { get2DXScale, get2DYScale } from '../utilities/scale';\n\nconst lineStyle = css`\n  stroke: lightgrey;\n  opacity: 0.7;\n`;\n\ninterface IndicationLinesProps {\n  show: boolean;\n  axis: 'X' | 'Y';\n}\n\nfunction IndicationLines({ axis, show }: IndicationLinesProps) {\n  const {\n    data,\n    activeTab,\n    margin,\n    width,\n    height,\n    xDomain,\n    yDomain,\n    displayerMode,\n  } = useChartData();\n  const [deltas1D, setDeltas1D] = useState<Array<number>>([]);\n\n  const scaleX = get2DXScale({ margin, width, xDomain });\n  const scaleY = get2DYScale({ margin, height, yDomain });\n\n  useEffect(() => {\n    const split = activeTab.split(',');\n\n    const nucleus = axis === 'X' ? split[0] : axis === 'Y' ? split[1] : null;\n    if (nucleus !== null) {\n      const ranges = data\n        .filter(\n          (_datum) =>\n            _datum.display.isVisible === true &&\n            _datum.info.nucleus === nucleus,\n        )\n        .filter(isSpectrum1D)\n        .map((_datum) => _datum.ranges.values)\n        .flat();\n\n      const deltas = ranges\n        .map((_range) =>\n          _range.signals\n            .filter((_signal) =>\n              SignalKindsToInclude.some((_kind) => _signal.kind === _kind),\n            )\n            .map((_signal) => _signal.delta),\n        )\n        .flat();\n      setDeltas1D(deltas);\n    } else {\n      setDeltas1D([]);\n    }\n  }, [activeTab, axis, data, displayerMode]);\n\n  const indicationLines = useMemo(() => {\n    if (show === true && deltas1D.length > 0) {\n      const lines = deltas1D.map((_delta, i) => {\n        return axis === 'X' ? (\n          <line\n            css={lineStyle}\n            // eslint-disable-next-line react/no-array-index-key\n            key={`indicationLine${axis}${i}`}\n            x1={scaleX(_delta)}\n            x2={scaleX(_delta)}\n            y1={scaleY(yDomain[0])}\n            y2={scaleY(yDomain[1])}\n          />\n        ) : axis === 'Y' ? (\n          <line\n            css={lineStyle}\n            // eslint-disable-next-line react/no-array-index-key\n            key={`indicationLine${axis}${i}`}\n            x1={scaleX(xDomain[0])}\n            x2={scaleX(xDomain[1])}\n            y1={scaleY(_delta)}\n            y2={scaleY(_delta)}\n          />\n        ) : null;\n      });\n      return lines;\n    }\n  }, [axis, deltas1D, scaleX, scaleY, show, xDomain, yDomain]);\n\n  return <g>{indicationLines}</g>;\n}\n\nexport default IndicationLines;\n","import EventEmitter from 'eventemitter3';\n\nconst eventEmitter = new EventEmitter();\n\nconst Emitter = {\n  on: (event, fn) => eventEmitter.on(event, fn),\n  once: (event, fn) => eventEmitter.once(event, fn),\n  off: (event, fn) => eventEmitter.off(event, fn),\n  emit: (event, payload) => eventEmitter.emit(event, payload),\n};\n\nObject.freeze(Emitter);\n\nexport default Emitter;\n","import { createContext, useCallback, useContext, useMemo } from 'react';\n\nimport { AssignmentsActions } from './AssignmentsReducer';\n\nexport type Axis = 'x' | 'y';\nexport type Assignment = Record<Axis, string[]>;\nexport type Assignments = Record<string, Assignment>;\n\nexport type AssignmentDimension = '1D' | '2D';\nexport interface AssignmentAction {\n  id: string;\n  axis: Axis | null;\n}\nexport interface AssignmentState {\n  assignments: Assignments;\n  activated: AssignmentAction | null;\n  highlighted: AssignmentAction | null;\n}\nexport interface AssignmentContext {\n  data: AssignmentState;\n  dispatch: (action: AssignmentsActions) => void;\n}\n\nexport interface AssignmentsData\n  extends Pick<AssignmentState, 'activated' | 'highlighted'> {\n  id: string;\n  isActive: boolean;\n  isOver: boolean;\n  assigned: Record<Axis, string[]>;\n  removeAll: (axis: Axis) => void;\n  toggle: (atomIDs: string[], dimension: AssignmentDimension) => void;\n  setActive: (axis: Axis) => void;\n  show: (axis?: Axis) => void;\n  hide: () => void;\n}\n\nexport const assignmentState: AssignmentState = {\n  assignments: {},\n  activated: null,\n  highlighted: null,\n};\n\nexport const assignmentContext = createContext<AssignmentContext>({\n  data: assignmentState,\n  dispatch: () => null,\n});\n\nexport const AssignmentProvider = assignmentContext.Provider;\n\nexport function useAssignmentData() {\n  const context = useContext(assignmentContext);\n\n  if (!context) {\n    throw new Error('Assignment context was not found');\n  }\n\n  return context;\n}\n\n// key can be signal id,range id or zone id\nexport function useAssignment(key): AssignmentsData {\n  const {\n    data: { activated, highlighted, assignments },\n    dispatch,\n  } = useAssignmentData();\n\n  if ((typeof key !== 'string' && typeof key !== 'number') || key === '') {\n    throw new Error(`assignment key must be a non-empty string or number`);\n  }\n  const id = String(key);\n\n  const isActive = useMemo(() => {\n    return activated?.id === id;\n  }, [activated?.id, id]);\n  const isOver = useMemo(() => {\n    return highlighted?.id === id;\n  }, [highlighted?.id, id]);\n\n  const assigned = useMemo(() => {\n    return assignments[id] || null;\n  }, [assignments, id]);\n\n  const removeAll = useCallback(\n    (axis: Axis) => {\n      dispatch({\n        type: 'REMOVE',\n        payload: { ids: [id], axis },\n      });\n    },\n    [dispatch, id],\n  );\n\n  const toggle = useCallback(\n    (atomIDs: string[], dimension: AssignmentDimension) => {\n      dispatch({\n        type: 'TOGGLE',\n        payload: { atomIDs, id, dimension },\n      });\n    },\n    [dispatch, id],\n  );\n\n  const setActive = useCallback(\n    (axis: Axis) => {\n      dispatch({\n        type: 'SET_ACTIVE',\n        payload: {\n          id,\n          axis,\n        },\n      });\n    },\n    [dispatch, id],\n  );\n\n  const show = useCallback(\n    (axis?: Axis) => {\n      dispatch({\n        type: 'SHOW',\n        payload: {\n          id,\n          axis,\n        },\n      });\n    },\n    [dispatch, id],\n  );\n  const hide = useCallback(() => {\n    dispatch({\n      type: 'HIDE',\n    });\n  }, [dispatch]);\n\n  return {\n    id,\n    activated,\n    isActive,\n    isOver,\n    highlighted,\n    assigned,\n    removeAll,\n    toggle,\n    setActive,\n    show,\n    hide,\n  };\n}\n","import {\n  createContext,\n  useReducer,\n  useMemo,\n  useContext,\n  useCallback,\n  useEffect,\n} from 'react';\n\nexport enum HighlightedSource {\n  PEAK = 'PEAK',\n  INTEGRAL = 'INTEGRAL',\n  SIGNAL = 'SIGNAL',\n  RANGE = 'RANGE',\n  ZONE = 'ZONE',\n  EXCLUSION_ZONE = 'EXCLUSION_ZONE',\n  DATABASE = 'DATABASE',\n  UNKNOWN = 'UNKNOWN',\n}\n\ntype HighlightedSourceType = keyof typeof HighlightedSource;\n\ninterface SourceData {\n  type: HighlightedSourceType;\n  extra?: any;\n}\n\ntype HighlightActions = 'HIDE' | 'SHOW' | 'SET_PERMANENT' | 'UNSET_PERMANENT';\n\ninterface HighlightState {\n  highlights: Record<string, number>;\n  highlighted: string[];\n  highlightedPermanently: string[];\n  sourceData: SourceData | null;\n}\n\ninterface HighlightContextProps {\n  highlight: HighlightState;\n  dispatch: (props: { type: HighlightActions; payload?: any }) => void;\n  remove: () => void;\n}\n\nconst emptyState = {\n  highlight: {\n    highlights: {},\n    highlighted: [],\n    highlightedPermanently: [],\n    sourceData: null,\n  },\n  dispatch: () => null,\n  remove: () => null,\n};\n\nconst highlightContext = createContext<HighlightContextProps>(emptyState);\n\nfunction highlightReducer(state, action) {\n  switch (action.type) {\n    case 'SHOW': {\n      const { convertedHighlights, sourceData } = action.payload;\n      const { type = HighlightedSource.UNKNOWN, extra = null } =\n        sourceData || {};\n\n      const newState = {\n        ...state,\n        highlights: { ...state.highlights },\n        sourceData: { type, extra },\n      };\n      for (const value of convertedHighlights) {\n        if (!(value in newState.highlights)) {\n          newState.highlights[value] = 1;\n        }\n      }\n      newState.highlighted = Object.keys(newState.highlights);\n\n      return newState;\n    }\n    case 'HIDE': {\n      const { convertedHighlights } = action.payload;\n\n      const newState = {\n        ...state,\n        highlights: { ...state.highlights },\n        sourceData: null,\n      };\n      for (const value of convertedHighlights) {\n        if (value in newState.highlights) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete newState.highlights[value];\n        }\n      }\n      newState.highlighted = Object.keys(newState.highlights);\n      return newState;\n    }\n    case 'SET_PERMANENT': {\n      const newState = {\n        ...state,\n        // allow just one permanent highlights group at same time\n        highlightedPermanently: action.payload,\n      };\n\n      return newState;\n    }\n    case 'UNSET_PERMANENT': {\n      const newState = {\n        ...state,\n        highlightedPermanently: [],\n      };\n\n      return newState;\n    }\n    default: {\n      throw new Error(`unknown action type: ${action.type}`);\n    }\n  }\n}\n\nexport function HighlightProvider(props) {\n  const [highlight, dispatch] = useReducer(\n    highlightReducer,\n    emptyState.highlight,\n  );\n\n  const contextValue = useMemo(() => {\n    function remove() {\n      dispatch({\n        type: 'HIDE',\n        payload: { convertedHighlights: highlight.highlighted },\n      });\n    }\n    return { highlight, dispatch, remove };\n  }, [highlight]);\n\n  return (\n    <highlightContext.Provider value={contextValue}>\n      {props.children}\n    </highlightContext.Provider>\n  );\n}\n\nexport function useHighlightData() {\n  return useContext(highlightContext);\n}\n\n/**\n * @param {Array<string | number>}  highlights\n * @param {SourceData = null} sourceData\n */\nexport function useHighlight(\n  highlights: (string | number)[],\n  sourceData: SourceData | null = null,\n) {\n  if (!Array.isArray(highlights)) {\n    throw new Error('highlights must be an array');\n  }\n  const { dispatch, highlight } = useHighlightData();\n\n  const convertedHighlights = useMemo(() => {\n    const newHighlights: Array<any> = [];\n    for (const highlight of highlights) {\n      if (typeof highlight !== 'string' && typeof highlight !== 'number') {\n        throw new Error(`highlight key must be a string or number`);\n      }\n      if (highlight !== '') {\n        newHighlights.push(String(highlight));\n      }\n    }\n    return newHighlights;\n  }, [highlights]);\n\n  useEffect(() => {\n    // if deletion of component then also delete its highlight information -> componentWillUnmount\n    return () => {\n      dispatch({\n        type: 'HIDE',\n        payload: { convertedHighlights: [] },\n      });\n      dispatch({\n        type: 'UNSET_PERMANENT',\n      });\n    };\n  }, [dispatch]);\n\n  const isActive = useMemo(() => {\n    return highlight.highlighted.some((key) =>\n      convertedHighlights.includes(key),\n    );\n  }, [convertedHighlights, highlight.highlighted]);\n\n  const isActivePermanently = useMemo(() => {\n    return highlight.highlightedPermanently.some((key) =>\n      convertedHighlights.includes(key),\n    );\n  }, [convertedHighlights, highlight.highlightedPermanently]);\n\n  const show = useCallback(() => {\n    dispatch({\n      type: 'SHOW',\n      payload: {\n        convertedHighlights,\n        sourceData,\n      },\n    });\n  }, [dispatch, convertedHighlights, sourceData]);\n\n  const hide = useCallback(() => {\n    dispatch({\n      type: 'HIDE',\n      payload: {\n        convertedHighlights,\n      },\n    });\n  }, [convertedHighlights, dispatch]);\n\n  const add = useCallback(\n    (id) => {\n      dispatch({\n        type: 'SHOW',\n        payload: { convertedHighlights: [], id },\n      });\n    },\n    [dispatch],\n  );\n\n  const remove = useCallback(\n    (id) => {\n      dispatch({\n        type: 'HIDE',\n        payload: { convertedHighlights: [], id },\n      });\n    },\n    [dispatch],\n  );\n\n  const click = useCallback(\n    (e) => {\n      if (e) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      if (!isActivePermanently) {\n        dispatch({\n          type: 'SET_PERMANENT',\n          payload: convertedHighlights,\n        });\n      } else {\n        dispatch({\n          type: 'UNSET_PERMANENT',\n        });\n      }\n    },\n    [convertedHighlights, dispatch, isActivePermanently],\n  );\n\n  return useMemo(() => {\n    return {\n      isActive,\n      onHover: {\n        onMouseEnter: show,\n        onMouseLeave: hide,\n      },\n      onClick: click,\n      show,\n      hide,\n      isActivePermanently,\n      click,\n      add,\n      remove,\n    };\n  }, [add, click, hide, isActive, isActivePermanently, remove, show]);\n}\n","export const ConcatenationString = '___';\n\nexport function buildID(prefix: string, suffix: string): string {\n  return `${prefix}${ConcatenationString}${suffix}`;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useMemo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nimport { get2DXScale, get2DYScale } from './utilities/scale';\n\nconst lineStyle = css`\n  stroke: green;\n  stroke-width: 2;\n  opacity: 0.5;\n`;\n\ninterface SignalDeltaLineProps {\n  delta: number;\n  axis: 'X' | 'Y';\n  show: boolean;\n}\n\nfunction SignalDeltaLine({ delta, axis, show }: SignalDeltaLineProps) {\n  const { margin, width, height, xDomain, yDomain } = useChartData();\n  const scaleX = get2DXScale({ margin, width, xDomain });\n  const scaleY = get2DYScale({ margin, height, yDomain });\n\n  const line = useMemo(() => {\n    return show === true ? (\n      axis === 'X' ? (\n        <line\n          css={lineStyle}\n          key={`signalLine_${delta}_X`}\n          x1={scaleX(delta)}\n          x2={scaleX(delta)}\n          y1={scaleY(yDomain[0])}\n          y2={scaleY(yDomain[1])}\n        />\n      ) : axis === 'Y' ? (\n        <line\n          css={lineStyle}\n          key={`signalLine_${delta}_Y`}\n          x1={scaleX(xDomain[0])}\n          x2={scaleX(xDomain[1])}\n          y1={scaleY(delta)}\n          y2={scaleY(delta)}\n        />\n      ) : null\n    ) : null;\n  }, [axis, delta, scaleX, scaleY, show, xDomain, yDomain]);\n\n  return <g>{line}</g>;\n}\n\nexport default SignalDeltaLine;\n","/** @jsxImportSource @emotion/react */\n\nimport { useMemo } from 'react';\n\nimport { Signal2D } from '../../../data/types/data2d';\nimport { buildID } from '../../../data/utilities/Concatenation';\nimport { useHighlight } from '../../highlight';\nimport SignalDeltaLine from '../SignalDeltaLine';\n\ninterface SignalCrosshairProps {\n  signal: Signal2D;\n}\n\nfunction SignalCrosshair({ signal }: SignalCrosshairProps) {\n  const highlightIDsX = useMemo(() => {\n    return [buildID(signal.id, 'Crosshair'), buildID(signal.id, 'Crosshair_X')];\n  }, [signal.id]);\n\n  const highlightIDsY = useMemo(() => {\n    return [buildID(signal.id, 'Crosshair'), buildID(signal.id, 'Crosshair_Y')];\n  }, [signal.id]);\n\n  const highlightX = useHighlight(highlightIDsX);\n  const highlightY = useHighlight(highlightIDsY);\n  const highlight = useHighlight([signal.id]);\n\n  if (!signal?.x?.delta || !signal?.y?.delta) return null;\n\n  return (\n    <g>\n      <SignalDeltaLine\n        delta={signal.x.delta}\n        axis=\"X\"\n        show={highlightX.isActive || highlight.isActive}\n      />\n      <SignalDeltaLine\n        delta={signal.y.delta}\n        axis=\"Y\"\n        show={highlightY.isActive || highlight.isActive}\n      />\n    </g>\n  );\n}\n\nexport default SignalCrosshair;\n","/** @jsxImportSource @emotion/react */\n\nimport { memo, useState, useEffect, useCallback } from 'react';\n\nimport { Signal2D } from '../../../data/types/data2d';\nimport { buildID } from '../../../data/utilities/Concatenation';\nimport { useAssignment } from '../../assignment/AssignmentsContext';\nimport { useChartData } from '../../context/ChartContext';\nimport { useHighlightData, useHighlight } from '../../highlight';\nimport { get2DXScale, get2DYScale } from '../utilities/scale';\n\nimport SignalCrosshair from './SignalCrosshair';\n\ninterface SignalProps {\n  signal: Signal2D;\n  isVisible: {\n    signals?: boolean;\n    peaks?: boolean;\n    zones?: boolean;\n  };\n}\n\nconst Signal = memo(({ signal, isVisible }: SignalProps) => {\n  const { margin, width, height, xDomain, yDomain } = useChartData();\n  const scaleX = get2DXScale({ margin, width, xDomain });\n  const scaleY = get2DYScale({ margin, height, yDomain });\n\n  const buildIDs = useCallback((id) => {\n    return [id].concat(buildID(id, 'X'), buildID(id, 'Y'));\n  }, []);\n\n  const assignment = useAssignment(signal.id);\n  const highlight = useHighlight(buildIDs(assignment.id));\n  const highlightData = useHighlightData();\n\n  const [isHighlighted, setIsHighlighted] = useState(false);\n\n  useEffect(() => {\n    if (\n      highlightData.highlight.highlighted.some((_highlighted) =>\n        buildIDs(signal.id).includes(_highlighted),\n      ) ||\n      assignment.isActive\n    ) {\n      setIsHighlighted(true);\n    } else {\n      setIsHighlighted(false);\n    }\n  }, [\n    assignment.isActive,\n    buildIDs,\n    highlightData.highlight.highlighted,\n    signal.id,\n  ]);\n\n  if (!signal) return null;\n\n  return (\n    <g className=\"zone-signal\">\n      {isVisible.signals && (\n        <g>\n          <SignalCrosshair signal={signal} />\n          <circle\n            onMouseEnter={() => {\n              assignment.show();\n              highlight.show();\n            }}\n            onMouseLeave={() => {\n              assignment.hide();\n              highlight.hide();\n            }}\n            key={signal.id}\n            cx={scaleX(signal.x.delta || 0)}\n            cy={scaleY(signal.y.delta || 0)}\n            r={isHighlighted ? 6 : 4}\n            fill={isHighlighted ? 'green' : 'darkgreen'}\n          />\n        </g>\n      )}\n      <g className=\"zone-signal-peak\" style={{ pointerEvents: 'none' }}>\n        {isVisible.peaks &&\n          signal.peaks &&\n          signal.peaks.map((peak, i) => (\n            <circle\n              key={`${signal.id + i}`}\n              cx={scaleX(peak.x)}\n              cy={scaleY(peak.y)}\n              r={2}\n              fill=\"black\"\n            />\n          ))}\n      </g>\n    </g>\n  );\n});\n\nexport default Signal;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState, useEffect } from 'react';\n\nimport { Zone as ZoneDataProps } from '../../../data/types/data2d';\nimport { checkZoneKind } from '../../../data/utilities/ZoneUtilities';\nimport { useAssignment } from '../../assignment/AssignmentsContext';\nimport { useChartData } from '../../context/ChartContext';\nimport { HighlightedSource, useHighlight } from '../../highlight';\nimport { get2DXScale, get2DYScale } from '../utilities/scale';\n\nimport Signal from './Signal';\n\nconst stylesOnHover = css`\n  pointer-events: bounding-box;\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n\n  .delete-button {\n    visibility: hidden;\n  }\n`;\n\nconst stylesHighlighted = css`\n  pointer-events: bounding-box;\n\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  .Integral-area {\n    fill: #ff6f0057;\n  }\n  .delete-button {\n    visibility: visible;\n    cursor: pointer;\n  }\n`;\n\ninterface ZoneProps {\n  zoneData: ZoneDataProps;\n  isVisible: {\n    zones: boolean;\n  };\n}\n\nconst Zone = ({ zoneData, isVisible }: ZoneProps) => {\n  const { x, y, id, signals } = zoneData;\n  const assignmentZone = useAssignment(id);\n  const highlightZone = useHighlight([assignmentZone.id], {\n    type: HighlightedSource.ZONE,\n    extra: { id: assignmentZone.id },\n  });\n  const { margin, width, height, xDomain, yDomain } = useChartData();\n  const scaleX = get2DXScale({ margin, width, xDomain });\n  const scaleY = get2DYScale({ margin, height, yDomain });\n\n  const { from: x1 = 0, to: x2 = 0 } = x;\n  const { from: y1 = 0, to: y2 = 0 } = y;\n\n  const [reduceOpacity, setReduceOpacity] = useState(false);\n\n  useEffect(() => {\n    setReduceOpacity(!checkZoneKind(zoneData));\n  }, [zoneData]);\n\n  return (\n    <g\n      css={\n        highlightZone.isActive || assignmentZone.isActive\n          ? stylesHighlighted\n          : stylesOnHover\n      }\n      key={id}\n      onMouseEnter={() => {\n        assignmentZone.show();\n        highlightZone.show();\n      }}\n      onMouseLeave={() => {\n        assignmentZone.hide();\n        highlightZone.hide();\n      }}\n    >\n      {isVisible.zones && (\n        <g transform={`translate(${scaleX(x2)},${scaleY(y1)})`}>\n          <rect\n            x=\"0\"\n            width={scaleX(x1) - scaleX(x2)}\n            height={scaleY(y2) - scaleY(y1)}\n            className=\"Integral-area\"\n            fill=\"#0000000f\"\n            stroke={reduceOpacity ? '#343a40' : 'darkgreen'}\n            strokeWidth={reduceOpacity ? '0' : '1'}\n          />\n        </g>\n      )}\n      {signals.map((_signal, i) => (\n        <Signal key={`${id + i}`} signal={_signal} isVisible={isVisible} />\n      ))}\n    </g>\n  );\n};\n\nexport default Zone;\n","import { useEffect, useState, memo } from 'react';\n\nimport {\n  Datum2D,\n  Display2D,\n  Zones as ZonesProps,\n} from '../../../data/types/data2d';\nimport { useChartData } from '../../context/ChartContext';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport Events from '../../utility/Events';\n\nimport Zone from './Zone';\n\ninterface ZonesInnerProps {\n  zones: ZonesProps;\n  display: Display2D;\n  displayerKey: string;\n}\n\nfunction ZonesInner({ zones, display, displayerKey }: ZonesInnerProps) {\n  const [isVisible, setVisibility] = useState({\n    zones: true,\n    signals: true,\n    peaks: true,\n  });\n\n  useEffect(() => {\n    Events.on('onZonesVisibilityChange', ({ key }) => {\n      setVisibility((prevVisiblity) => ({\n        ...prevVisiblity,\n        [key]: !prevVisiblity[key],\n      }));\n    });\n  }, []);\n\n  return (\n    <g clipPath={`url(#${displayerKey}clip-chart-2d)`} className=\"2D-Zones\">\n      {display.isVisible &&\n        zones.values.map((zone) => (\n          <g className=\"zone\" key={zone.id}>\n            <Zone zoneData={zone} isVisible={isVisible} />\n          </g>\n        ))}\n    </g>\n  );\n}\n\nconst MemoizedZones = memo(ZonesInner);\n\nconst emptyData = { zones: {}, display: {} };\n\nexport default function Zones() {\n  const { displayerKey } = useChartData();\n\n  const { zones, display } = useSpectrum(emptyData) as Datum2D;\n\n  return <MemoizedZones {...{ zones, display, displayerKey }} />;\n}\n","import { memo } from 'react';\n\nimport { Datum1D } from '../../data/types/data1d';\nimport { useChartData } from '../context/ChartContext';\nimport { Margin } from '../reducer/Reducer';\n\nimport Contours from './Contours';\nimport Left1DChart from './Left1DChart';\nimport Top1DChart from './Top1DChart';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport IndicationLines from './zones/IndicationLines';\nimport Zones from './zones/Zones';\n\ninterface Chart2DProps {\n  spectra?: Datum1D[];\n}\n\ninterface Chart2DInnerProps extends Chart2DProps {\n  width: number;\n  height: number;\n  margin: Margin;\n  displayerKey: string;\n}\n\nfunction chart2DInner({\n  spectra,\n  width,\n  height,\n  margin,\n  displayerKey,\n}: Chart2DInnerProps) {\n  return (\n    <svg\n      viewBox={`0 0 ${width} ${height}`}\n      width={width}\n      height={height}\n      id=\"nmrSVG\"\n    >\n      <defs>\n        <clipPath id={`${displayerKey}clip-chart-2d`}>\n          <rect\n            width={width - margin.left - margin.right}\n            height={height - margin.top - margin.bottom}\n            x={margin.left}\n            y={margin.top}\n          />\n        </clipPath>\n      </defs>\n      <rect\n        width={width - margin.left - margin.right}\n        height={height - margin.top - margin.bottom}\n        x={margin.left}\n        y={margin.top}\n        stroke=\"black\"\n        strokeWidth=\"1\"\n        fill=\"transparent\"\n      />\n      {spectra?.[0] && <Top1DChart data={spectra[0]} />}\n      {spectra?.[1] && <Left1DChart data={spectra[1]} />}\n      <Contours />\n      <Zones />\n      <IndicationLines axis=\"X\" show />\n      <IndicationLines axis=\"Y\" show />\n\n      <g className=\"container\" style={{ pointerEvents: 'none' }}>\n        <XAxis />\n        <YAxis />\n      </g>\n    </svg>\n  );\n}\n\nconst MemoizedChart2D = memo(chart2DInner);\n\nexport default function Chart2D({ spectra }: Chart2DProps) {\n  const { width, height, margin, displayerKey } = useChartData();\n\n  return (\n    <MemoizedChart2D {...{ spectra, width, height, margin, displayerKey }} />\n  );\n}\n","import lodashGet from 'lodash/get';\nimport Numeral from 'numeral';\nimport { useMemo } from 'react';\n\nimport { usePreferences } from '../context/PreferencesContext';\n\nfunction FormatNumber(value, format, prefix = '', suffix = '') {\n  return prefix + Numeral(value).format(format) + suffix;\n}\n\ntype ReturnFunction = (\n  value?: number | string,\n  formatKey?: string,\n  prefix?: string,\n  suffix?: string,\n) => string;\n\nexport function useFormatNumberByNucleus(\n  nucleus?: Array<string>,\n): Array<ReturnFunction>;\nexport function useFormatNumberByNucleus(nucleus?: string): ReturnFunction;\nexport function useFormatNumberByNucleus(nucleus?: string | Array<string>) {\n  const preferences = usePreferences();\n  const nucleusByKey = lodashGet(preferences.current, `formatting.nuclei`, {\n    ppm: '0.0',\n    hz: '0.0',\n  });\n\n  return useMemo(() => {\n    function formatFun(n: string) {\n      return (value: any, formatKey = 'ppm', prefix = '', suffix = '') => {\n        return (\n          prefix +\n          Numeral(Number(value)).format(\n            lodashGet(nucleusByKey, `${n.toLowerCase()}.${formatKey}`, '0.0'),\n          ) +\n          suffix\n        );\n      };\n    }\n\n    if (!nucleus) {\n      return () => undefined;\n    }\n\n    if (typeof nucleus === 'string') {\n      return formatFun(nucleus);\n    } else if (Array.isArray(nucleus)) {\n      return nucleus.map((n) => formatFun(n));\n    } else {\n      throw Error('nuclus must be string or array of string');\n    }\n  }, [nucleus, nucleusByKey]);\n}\n\nexport function getNumberOfDecimals(value: number | string) {\n  value = String(value).trim();\n  const lastIndex = value.lastIndexOf('.');\n  return lastIndex > 0 ? value.substr(lastIndex).split('').length - 1 : 0;\n}\n\nexport default FormatNumber;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\nimport { useContext, useMemo, Fragment } from 'react';\nimport { MF } from 'react-mf';\n\nimport { get1DDataXY } from '../../data/data1d/Spectrum1D/get1DDataXY';\nimport { BrushContext } from '../EventsTrackers/BrushTracker';\nimport { MouseContext } from '../EventsTrackers/MouseTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { options } from '../toolbar/ToolTypes';\nimport { useFormatNumberByNucleus } from '../utility/FormatNumber';\n\nimport { getLayoutID, LAYOUT } from './utilities/DimensionLayout';\nimport { get2DXScale, get1DYScale, get2DYScale } from './utilities/scale';\n\nconst styles = css`\n  display: flex;\n  flex-firection: row;\n  align-items: center;\n  pointer-events: bounding-box;\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n  background-color: #f7f7f7;\n  height: 30px;\n  padding: 6px;\n  color: #8d0018;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  div {\n    margin: 0px 10px;\n    display: inline-block;\n\n    .label {\n      font-size: 12px;\n      color: #4d4d4d;\n      font-weight: bold;\n    }\n    .value {\n      font-weight: bold;\n      font-size: 14px;\n    }\n    .unit {\n      font-weight: bold;\n      font-size: 10px;\n    }\n  }\n`;\n\nfunction FooterBanner({ layout, data1D }) {\n  const position = useContext(MouseContext);\n  const { startX, endX, startY, endY, step } = useContext(BrushContext);\n  const {\n    margin,\n    width,\n    height,\n    activeSpectrum,\n    xDomain,\n    yDomain,\n    yDomains,\n    activeTab,\n    data,\n    toolOptions: { selectedTool },\n  } = useChartData();\n\n  const trackID =\n    position &&\n    getLayoutID(layout, {\n      startX: position.x,\n      startY: position.y,\n    });\n\n  const nucleuses = activeTab.split(',');\n  const [formatX, formatY] = useFormatNumberByNucleus(nucleuses);\n\n  const scaleX = useMemo(() => {\n    if (!data1D || data1D.length === 0) {\n      return get2DXScale({ width, margin, xDomain });\n    }\n    if (selectedTool !== options.slicingTool.id) {\n      switch (trackID) {\n        case LAYOUT.TOP_1D:\n        case LAYOUT.CENTER_2D: {\n          return get2DXScale({ width, margin, xDomain });\n        }\n        case LAYOUT.LEFT_1D: {\n          return get2DYScale({ height, margin, yDomain });\n        }\n        default:\n          return null;\n      }\n    }\n    return null;\n  }, [data1D, height, margin, selectedTool, trackID, width, xDomain, yDomain]);\n\n  const scaleY = useMemo(() => {\n    if (!data1D || data1D.length === 0) {\n      return get2DYScale({ height, margin, yDomain });\n    }\n    if (selectedTool !== options.slicingTool.id) {\n      switch (trackID) {\n        case LAYOUT.CENTER_2D: {\n          return get2DYScale({ height, margin, yDomain });\n        }\n        case LAYOUT.TOP_1D: {\n          return data1D[0]\n            ? get1DYScale(yDomains[data1D[0].id], margin.top)\n            : null;\n        }\n        case LAYOUT.LEFT_1D: {\n          return data1D[1]\n            ? get1DYScale(yDomains[data1D[1].id], margin.left)\n            : null;\n        }\n        default:\n          return null;\n      }\n    }\n    return null;\n  }, [data1D, height, margin, selectedTool, trackID, yDomain, yDomains]);\n\n  if (\n    !activeSpectrum ||\n    !position ||\n    position.y < 10 ||\n    position.x < 10 ||\n    position.x > width - margin.right ||\n    position.y > height - margin.bottom\n  ) {\n    return <div css={styles} />;\n  }\n  const getRealYValue = (cordinate) => {\n    let index: number | null = null;\n    if (trackID === LAYOUT.TOP_1D) {\n      index = 0;\n    } else if (trackID === LAYOUT.LEFT_1D) {\n      index = 1;\n    }\n    if (index != null && scaleX != null) {\n      const datum = get1DDataXY(data1D[index]);\n      const xIndex = xFindClosestIndex(datum.x, scaleX.invert(cordinate));\n      return datum.y[xIndex];\n    }\n    return 1;\n  };\n\n  const getXValue = (x: number | null = null) => {\n    if (scaleX != null) {\n      switch (trackID) {\n        case LAYOUT.CENTER_2D:\n        case LAYOUT.TOP_1D: {\n          return scaleX.invert(x ? x : position.x);\n        }\n        case LAYOUT.LEFT_1D: {\n          return scaleX.invert(x ? x : position.y);\n        }\n        default:\n          return 0;\n      }\n    }\n    return 0;\n  };\n\n  const getYValue = () => {\n    if (scaleY != null) {\n      switch (trackID) {\n        case LAYOUT.CENTER_2D:\n        case LAYOUT.TOP_1D: {\n          return scaleY.invert(position.y);\n        }\n        case LAYOUT.LEFT_1D: {\n          return scaleY.invert(position.x);\n        }\n        default:\n          return 0;\n      }\n    }\n    return 0;\n  };\n\n  const getRation = () => {\n    switch (trackID) {\n      case LAYOUT.TOP_1D: {\n        return (\n          (getRealYValue(startX) / (getRealYValue(endX) || Number.MIN_VALUE)) *\n          100\n        ).toFixed(2);\n      }\n      case LAYOUT.LEFT_1D: {\n        return (\n          (getRealYValue(startY) / (getRealYValue(endY) || Number.MIN_VALUE)) *\n          100\n        ).toFixed(2);\n      }\n      default:\n        return 0;\n    }\n  };\n\n  const getDeltaX = () => {\n    switch (trackID) {\n      case LAYOUT.TOP_1D: {\n        return (getXValue(startX) - getXValue(endX)).toPrecision(6);\n      }\n      case LAYOUT.LEFT_1D: {\n        return (getXValue(startY) - getXValue(endY)).toPrecision(6);\n      }\n      default:\n        return 0;\n    }\n  };\n\n  const getLabel = (label2d, labelld, nucleus) => {\n    return trackID === LAYOUT.CENTER_2D ? (\n      <Fragment>\n        {label2d} ( <MF mf={nucleus} /> )\n      </Fragment>\n    ) : (\n      labelld\n    );\n  };\n\n  const getZValue = () => {\n    if (trackID === LAYOUT.CENTER_2D) {\n      const { maxX, maxY, minX, minY, z } = data[activeSpectrum.index]\n        .data as any;\n\n      const xStep = (maxX - minX) / (z[0].length - 1);\n      const yStep = (maxY - minY) / (z.length - 1);\n      const xIndex = Math.floor((getXValue() - minX) / xStep);\n      const yIndex = Math.floor((getYValue() - minY) / yStep);\n\n      if (xIndex < 0 || xIndex >= z[0].length) return 0;\n      if (yIndex < 0 || yIndex >= z.length) return 0;\n\n      return z[yIndex][xIndex];\n    }\n    return 0;\n  };\n\n  return (\n    <div css={styles}>\n      <div>\n        <span className=\"label\">{getLabel('F2', 'X', nucleuses[0])} :</span>\n        <span className=\"value\">{formatX(getXValue())}</span>\n        <span className=\"unit\">ppm</span>\n      </div>\n\n      <div>\n        <span className=\"label\">{getLabel('F1', 'Y', nucleuses[1])} :</span>\n        <span className=\"value\">{formatY(getYValue())}</span>\n        <span className=\"unit\">ppm</span>\n      </div>\n      <div>\n        <span className=\"label\">Intensity :</span>\n        <span className=\"value\">{getZValue()}</span>\n      </div>\n      {step === 'brushing' && (\n        <div>\n          <span className=\"label\"> Δppm :</span>\n          <span className=\"value\">{getDeltaX()}</span>\n        </div>\n      )}\n\n      {step === 'brushing' && (\n        <div>\n          <span className=\"label\"> ratio :</span>\n          <span className=\"value\">{getRation()}%</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FooterBanner;\n","import { useContext, useMemo, CSSProperties } from 'react';\n\nimport { BrushContext } from '../../EventsTrackers/BrushTracker';\nimport { MouseContext } from '../../EventsTrackers/MouseTracker';\nimport { useChartData } from '../../context/ChartContext';\nimport { useFormatNumberByNucleus } from '../../utility/FormatNumber';\nimport { getLayoutID, LAYOUT } from '../utilities/DimensionLayout';\nimport { get2DXScale, get2DYScale, get1DYScale } from '../utilities/scale';\n\nconst style: CSSProperties = {\n  cursor: 'crosshair',\n  transformOrigin: 'bottom right',\n  position: 'absolute',\n  top: '-18px',\n  left: '-88px',\n  fontWeight: 'bold',\n  pointerEvents: 'none',\n  overflow: 'visible',\n  userSelect: 'none',\n  width: '85px',\n  textAlign: 'right',\n};\n\nfunction XYLabelPointer({ layout, data1D }) {\n  const position = useContext(MouseContext);\n  const { step } = useContext(BrushContext);\n  const {\n    margin,\n    width,\n    height,\n    xDomain,\n    yDomain,\n    yDomains,\n    activeTab,\n    activeSpectrum,\n  } = useChartData();\n\n  const trackID =\n    position &&\n    getLayoutID(layout, {\n      startX: position.x,\n      startY: position.y,\n    });\n\n  const nucleuses = activeTab.split(',');\n  const [formatX, formatY] = useFormatNumberByNucleus(nucleuses);\n\n  const scaleX = useMemo(() => {\n    if (!activeSpectrum || !data1D || data1D.length === 0) {\n      return get2DXScale({ width, margin, xDomain });\n    }\n\n    switch (trackID) {\n      case LAYOUT.TOP_1D:\n      case LAYOUT.CENTER_2D: {\n        return get2DXScale({ width, margin, xDomain });\n      }\n      case LAYOUT.LEFT_1D: {\n        return get2DYScale({ height, margin, yDomain });\n      }\n      default:\n        return null;\n    }\n  }, [\n    activeSpectrum,\n    data1D,\n    height,\n    margin,\n    trackID,\n    width,\n    xDomain,\n    yDomain,\n  ]);\n\n  const scaleY = useMemo(() => {\n    if (!activeSpectrum || !data1D || data1D.length === 0) {\n      return get2DYScale({ height, margin, yDomain });\n    }\n\n    switch (trackID) {\n      case LAYOUT.CENTER_2D: {\n        return get2DYScale({ height, margin, yDomain });\n      }\n      case LAYOUT.TOP_1D: {\n        return data1D[0]\n          ? get1DYScale(yDomains[data1D[0].id], margin.top)\n          : null;\n      }\n      case LAYOUT.LEFT_1D: {\n        return data1D[1]\n          ? get1DYScale(yDomains[data1D[1].id], margin.left)\n          : null;\n      }\n      default:\n        return null;\n    }\n  }, [activeSpectrum, data1D, height, margin, trackID, yDomain, yDomains]);\n\n  if (\n    step === 'brushing' ||\n    !position ||\n    position.y < margin.top ||\n    position.x < margin.left ||\n    position.x > width - margin.right ||\n    position.y > height - margin.bottom\n  ) {\n    return null;\n  }\n\n  const getXValue = (x = null) => {\n    switch (trackID) {\n      case LAYOUT.CENTER_2D:\n      case LAYOUT.TOP_1D: {\n        return scaleX?.invert(x ? x : position.x);\n      }\n      case LAYOUT.LEFT_1D: {\n        return scaleX?.invert(x ? x : position.y);\n      }\n      default:\n        return 0;\n    }\n  };\n\n  const getYValue = () => {\n    switch (trackID) {\n      case LAYOUT.CENTER_2D:\n      case LAYOUT.TOP_1D: {\n        return scaleY?.invert(position.y);\n      }\n      case LAYOUT.LEFT_1D: {\n        return scaleY?.invert(position.x);\n      }\n      default:\n        return 0;\n    }\n  };\n\n  return (\n    <div\n      key=\"xLabelPointer\"\n      style={{\n        ...style,\n        transform: `translate(${position.x}px, ${position.y}px)`,\n      }}\n    >\n      <span>{formatY(getYValue())}</span>\n      <span style={{ color: 'gray' }}>{','}</span>\n      <span style={{ color: 'red' }}>{formatX(getXValue())}</span>\n    </div>\n  );\n}\n\nexport default XYLabelPointer;\n","import { extent, scaleLinear } from 'd3';\n\nfunction getTopXScale(\n  width: number,\n  margin: { right: number; left: number },\n  x: Array<number>,\n) {\n  const xDomain = extent<number>(x);\n  const scaleX = scaleLinear(extent(x) as number[], [\n    width - margin.right,\n    margin.left,\n  ]);\n\n  return {\n    xDomain,\n    scaleX,\n  };\n}\n\nfunction getLeftXScale(\n  width: number,\n  margin: { bottom: number; top: number },\n  x: Array<number>,\n) {\n  const xDomain = extent(x);\n\n  const scaleX = scaleLinear(extent(x) as number[], [\n    width - margin.bottom,\n    margin.top,\n  ]);\n\n  return {\n    xDomain,\n    scaleX,\n  };\n}\n\nfunction getYScale(height: number, y: Array<number>, margin = 10) {\n  return scaleLinear(extent(y) as number[], [height - margin, margin]);\n}\n\nexport { getTopXScale, getLeftXScale, getYScale };\n","import { useMemo, memo } from 'react';\n\nimport { useChartData } from '../../../context/ChartContext';\nimport useXYReduce, { XYReducerDomainAxis } from '../../../hooks/useXYReduce';\nimport { PathBuilder } from '../../../utility/PathBuilder';\nimport { get2DXScale } from '../../utilities/scale';\n\nimport { getYScale } from './SliceScale';\n\ninterface HorizontalSliceChartProps {\n  margin?: number;\n  data: {\n    x: Array<number>;\n    re: Array<number>;\n  };\n}\n\nfunction HorizontalSliceChart({\n  margin: marginProps = 10,\n  data,\n}: HorizontalSliceChartProps) {\n  const { width, margin: originMargin, xDomain, displayerKey } = useChartData();\n  const xyReduce = useXYReduce(XYReducerDomainAxis.XAxis);\n\n  const height = originMargin.top;\n\n  const paths = useMemo(() => {\n    if (data) {\n      const { x, re: y } = data;\n      const scaleX = get2DXScale({ margin: originMargin, width, xDomain });\n\n      const scaleY = getYScale(height, y, marginProps);\n      const pathPoints = xyReduce({ x, y });\n\n      const pathBuilder = new PathBuilder();\n      pathBuilder.moveTo(scaleX(pathPoints.x[0]), scaleY(pathPoints.y[0]));\n      for (let i = 1; i < pathPoints.x.length; i++) {\n        pathBuilder.lineTo(scaleX(pathPoints.x[i]), scaleY(pathPoints.y[i]));\n      }\n\n      return pathBuilder.toString();\n    } else {\n      return undefined;\n    }\n  }, [data, height, marginProps, originMargin, width, xDomain, xyReduce]);\n\n  if (!width || !height) {\n    return null;\n  }\n\n  return (\n    <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\n      <defs>\n        <clipPath id={`${displayerKey}clip-top`}>\n          <rect\n            width={width - originMargin.left - originMargin.right}\n            height={height}\n            x={originMargin.left}\n            y={`${0}`}\n          />\n        </clipPath>\n      </defs>\n      <g clipPath={`url(#${displayerKey}clip-top)`}>\n        <rect\n          width={width - originMargin.left - originMargin.right}\n          height={height}\n          x={originMargin.left}\n          y={`${0}`}\n          fillOpacity=\"0\"\n        />\n        <path className=\"line\" stroke=\"red\" fill=\"none\" d={paths} />\n      </g>\n    </svg>\n  );\n}\n\nexport default memo(HorizontalSliceChart);\n","import { useMemo, memo } from 'react';\n\nimport { useChartData } from '../../../context/ChartContext';\nimport useXYReduce, { XYReducerDomainAxis } from '../../../hooks/useXYReduce';\nimport { PathBuilder } from '../../../utility/PathBuilder';\nimport { get2DYScale } from '../../utilities/scale';\n\nimport { getYScale } from './SliceScale';\n\ninterface VerticalSliceChartProps {\n  margin?: number;\n  data: {\n    x: Array<number>;\n    re: Array<number>;\n  };\n}\n\nfunction VerticalSliceChart({\n  margin: marignValue = 10,\n  data,\n}: VerticalSliceChartProps) {\n  const {\n    height: originHeight,\n    margin,\n    yDomain,\n    displayerKey,\n  } = useChartData();\n  const xyReduce = useXYReduce(XYReducerDomainAxis.YAxis);\n\n  const height = margin.left;\n\n  const paths = useMemo(() => {\n    if (data) {\n      const { x, re: y } = data;\n      const scaleX = get2DYScale({ height: originHeight, margin, yDomain });\n\n      const scaleY = getYScale(height, y, marignValue);\n\n      const pathPoints = xyReduce({ x, y });\n\n      const pathBuilder = new PathBuilder();\n\n      pathBuilder.moveTo(\n        scaleY(pathPoints.y[pathPoints.y.length - 1]),\n        scaleX(pathPoints.x.length - 1),\n      );\n\n      for (let i = pathPoints.x.length - 2; i >= 0; i--) {\n        pathBuilder.lineTo(scaleY(pathPoints.y[i]), scaleX(pathPoints.x[i]));\n      }\n\n      return pathBuilder.toString();\n    } else {\n      return undefined;\n    }\n  }, [data, height, margin, marignValue, originHeight, xyReduce, yDomain]);\n\n  const mainHeight = originHeight - margin.bottom - margin.top;\n\n  if (!mainHeight || !height) return null;\n\n  return (\n    <svg\n      viewBox={`0 0 ${height} ${mainHeight + margin.top}`}\n      width={height}\n      height={mainHeight + margin.top}\n    >\n      <defs>\n        <clipPath id={`${displayerKey}clip-left`}>\n          <rect width={height} height={mainHeight} x=\"0\" y={margin.top} />\n        </clipPath>\n      </defs>\n      <g clipPath={`url(#${displayerKey}clip-left)`}>\n        <path className=\"line\" stroke=\"red\" fill=\"none\" d={paths} />\n      </g>\n    </svg>\n  );\n}\n\nexport default memo(VerticalSliceChart);\n","import { useMemo } from 'react';\n\nimport { getSlice } from '../../../../data/data2d/Spectrum2D';\nimport { Datum2D } from '../../../../data/types/data2d/Datum2D';\nimport { useMouseTracker } from '../../../EventsTrackers/MouseTracker';\nimport { useChartData } from '../../../context/ChartContext';\nimport { get2DXScale, get2DYScale } from '../../utilities/scale';\n\nimport HorizontalSliceChart from './HorizontalSliceChart';\nimport VerticalSliceChart from './VerticalSliceChart';\n\nfunction SlicingView() {\n  const {\n    width,\n    height,\n    margin,\n    activeSpectrum,\n    data: spectra,\n    xDomain,\n    yDomain,\n  } = useChartData();\n  const position = useMouseTracker();\n\n  const chart2d = useMemo(() => {\n    if (position && activeSpectrum && activeSpectrum.id) {\n      const { x, y } = position;\n      const scale2dX = get2DXScale({ margin, width, xDomain });\n      const scale2dY = get2DYScale({ margin, height, yDomain });\n      const data = getSlice(spectra[activeSpectrum.index] as Datum2D, {\n        x: scale2dX.invert(x),\n        y: scale2dY.invert(y),\n      });\n      return (\n        <svg\n          viewBox={`0 0 ${width} ${height}`}\n          width={width}\n          height={height}\n          style={{\n            position: 'absolute',\n            backgroundColor: 'rgba(255,255,255,0.8)',\n          }}\n        >\n          {data?.horizontal && (\n            <HorizontalSliceChart data={data.horizontal.data} />\n          )}\n          {data?.vertical && <VerticalSliceChart data={data.vertical.data} />}\n        </svg>\n      );\n    }\n    return null;\n  }, [\n    position,\n    activeSpectrum,\n    margin,\n    width,\n    xDomain,\n    height,\n    yDomain,\n    spectra,\n  ]);\n\n  if (!position) {\n    return null;\n  }\n\n  return chart2d;\n}\n\nexport default SlicingView;\n","import { useCallback, useEffect, useMemo, ReactNode } from 'react';\nimport { ResponsiveChart } from 'react-d3-utils';\n\nimport { BrushTracker } from '../EventsTrackers/BrushTracker';\nimport { MouseTracker } from '../EventsTrackers/MouseTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport useSpectrum from '../hooks/useSpectrum';\nimport NoData from '../loader/NoData';\nimport Spinner from '../loader/Spinner';\nimport {\n  BRUSH_END,\n  FULL_ZOOM_OUT,\n  SET_DIMENSIONS,\n  SET_2D_LEVEL,\n  SET_ZOOM,\n  ADD_2D_ZONE,\n} from '../reducer/types/Types';\nimport BrushXY, { BRUSH_TYPE } from '../tool/BrushXY';\nimport CrossLinePointer from '../tool/CrossLinePointer';\nimport { options } from '../toolbar/ToolTypes';\n\nimport Chart2D from './Chart2D';\nimport FooterBanner from './FooterBanner';\nimport XYLabelPointer from './tools/XYLabelPointer';\nimport SlicingView from './tools/slicing/SlicingView';\nimport { get2DDimensionLayout, getLayoutID } from './utilities/DimensionLayout';\n\ninterface Viewer2DProps {\n  emptyText: ReactNode;\n}\n\nfunction Viewer2D({ emptyText = undefined }: Viewer2DProps) {\n  const state = useChartData();\n  const {\n    toolOptions: { selectedTool },\n    isLoading,\n    data,\n    margin,\n    tabActiveSpectrum,\n    activeTab,\n  } = state;\n\n  const dispatch = useDispatch();\n  const { info } = useSpectrum({ info: {} });\n  const isVisible = info.isFt || !('isFt' in info);\n\n  const spectrumData = useMemo(() => {\n    const nucleuses = activeTab.split(',');\n    return nucleuses.reduce<any>((acc, n) => {\n      if (tabActiveSpectrum[n]?.id) {\n        const id = tabActiveSpectrum[n]?.id;\n        const spectrum = data.find(\n          (datum) => datum.id === id && !datum.info.isFid,\n        );\n        if (spectrum) {\n          acc.push(spectrum);\n        }\n      } else {\n        acc.push(null);\n      }\n      return acc;\n    }, []);\n  }, [activeTab, data, tabActiveSpectrum]);\n\n  const DIMENSION = get2DDimensionLayout(state);\n\n  const handelBrushEnd = useCallback(\n    (brushData) => {\n      const trackID = getLayoutID(DIMENSION, brushData);\n      if (trackID) {\n        if (brushData.altKey) {\n          switch (selectedTool) {\n            default:\n              break;\n          }\n        } else if (brushData.shiftKey) {\n          switch (selectedTool) {\n            case options.zone2D.id:\n              dispatch({ type: ADD_2D_ZONE, ...brushData });\n              break;\n            default:\n              break;\n          }\n        } else {\n          switch (selectedTool) {\n            default:\n              if (selectedTool != null) {\n                return dispatch({\n                  type: BRUSH_END,\n                  ...brushData,\n                  trackID: getLayoutID(DIMENSION, brushData),\n                });\n              }\n          }\n        }\n      }\n    },\n    [selectedTool, dispatch, DIMENSION],\n  );\n\n  const handelOnDoubleClick = useCallback(\n    (e) => {\n      const { x: startX, y: startY } = e;\n      const trackID = getLayoutID(DIMENSION, { startX, startY });\n      if (trackID) {\n        dispatch({ type: FULL_ZOOM_OUT, trackID });\n      }\n    },\n    [DIMENSION, dispatch],\n  );\n\n  const handleZoom = (event) => {\n    const { x: startX, y: startY } = event;\n    const trackID = getLayoutID(DIMENSION, { startX, startY });\n\n    if (trackID) {\n      if (trackID === 'CENTER_2D') {\n        dispatch({ type: SET_2D_LEVEL, ...event });\n      } else {\n        dispatch({ type: SET_ZOOM, event, trackID });\n      }\n    }\n  };\n\n  const mouseClick = useCallback(\n    (position) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { x, y } = position;\n      switch (selectedTool) {\n        default:\n          break;\n      }\n    },\n    [selectedTool],\n  );\n\n  if (!isVisible) {\n    return (\n      <NoData\n        emptyText=\"Currently FID can not be displayed for 2D spectra\"\n        canOpenLoader={false}\n      />\n    );\n  }\n\n  return (\n    <ResponsiveChart>\n      {({ width, height }) => (\n        <ViewerResponsiveWrapper width={width} height={height}>\n          <Spinner isLoading={isLoading} emptyText={emptyText} />\n          {data && data.length > 0 && (\n            <BrushTracker\n              onBrush={handelBrushEnd}\n              onDoubleClick={handelOnDoubleClick}\n              onClick={mouseClick}\n              onZoom={handleZoom}\n              style={{\n                width: '100%',\n                height: '100%',\n                margin: 'auto',\n                position: 'relative',\n                overflow: 'hidden',\n              }}\n            >\n              <MouseTracker\n                style={{ width: '100%', height: `100%`, position: 'absolute' }}\n              >\n                {selectedTool && selectedTool === options.slicingTool.id && (\n                  <SlicingView />\n                )}\n\n                <CrossLinePointer />\n                {spectrumData && (\n                  <XYLabelPointer data1D={spectrumData} layout={DIMENSION} />\n                )}\n\n                <BrushXY\n                  brushType={BRUSH_TYPE.XY}\n                  dimensionBorder={DIMENSION.CENTER_2D}\n                />\n                <>\n                  {spectrumData?.[0] && (\n                    <BrushXY\n                      brushType={BRUSH_TYPE.X}\n                      dimensionBorder={DIMENSION.TOP_1D}\n                      height={margin.top}\n                    />\n                  )}\n                  {spectrumData?.[1] && (\n                    <BrushXY\n                      brushType={BRUSH_TYPE.Y}\n                      dimensionBorder={DIMENSION.LEFT_1D}\n                      width={margin.left}\n                    />\n                  )}\n                </>\n                {spectrumData && (\n                  <FooterBanner data1D={spectrumData} layout={DIMENSION} />\n                )}\n\n                <Chart2D spectra={spectrumData} />\n              </MouseTracker>\n            </BrushTracker>\n          )}\n        </ViewerResponsiveWrapper>\n      )}\n    </ResponsiveChart>\n  );\n}\n\ninterface ViewerResponsiveWrapperProps {\n  width: number;\n  height: number;\n  children: any;\n}\n\nexport function ViewerResponsiveWrapper(props: ViewerResponsiveWrapperProps) {\n  const dispatch = useDispatch();\n  const { width, height, children } = props;\n\n  useEffect(() => {\n    dispatch({ type: SET_DIMENSIONS, ...{ width, height } });\n  }, [width, height, dispatch]);\n\n  return children;\n}\n\nexport default Viewer2D;\n","import { ScaleLinear } from 'd3';\nimport { produce } from 'immer';\n\nimport { getXScale, getYScale } from '../1d/utilities/scale';\n\nexport const SET_X_SCALE = 'SET_X_SCALE';\nexport const SET_Y_SCALE = 'SET_Y_SCALE';\nexport const SET_SCALE = 'SET_SCALE';\n\ntype ScaleLinearNumberFunction = (\n  spectrumId?: number | null | string,\n) => ScaleLinear<number, number, number>;\n\nexport interface ScaleState {\n  scaleX: ScaleLinearNumberFunction | null;\n  scaleY: ScaleLinearNumberFunction | null;\n}\n\nexport const scaleInitialState: ScaleState = {\n  scaleX: null,\n  scaleY: null,\n};\n\nfunction innerScaleReducer(draft: ScaleState, action) {\n  switch (action.type) {\n    case SET_X_SCALE:\n      draft.scaleX = (spectrumId = null) => getXScale(action, spectrumId);\n      break;\n\n    case SET_Y_SCALE:\n      draft.scaleY = (spectrumId = null) => getYScale(action, spectrumId);\n      break;\n\n    case SET_SCALE: {\n      draft.scaleX = (spectrumId = null) =>\n        getXScale(action.payload, spectrumId);\n      draft.scaleY = (spectrumId = null) =>\n        getYScale(action.payload, spectrumId);\n      break;\n    }\n    default:\n      return draft;\n  }\n}\n\nconst scaleReducer = produce(innerScaleReducer);\nexport default scaleReducer;\n","import { createContext, useContext } from 'react';\n\nimport { scaleInitialState, ScaleState } from '../reducer/scaleReducer';\n\nexport const scaleContext = createContext<ScaleState>(scaleInitialState);\nexport const ScaleProvider = scaleContext.Provider;\n\nexport function useScale() {\n  return useContext(scaleContext);\n}\n\ntype CheckedScaleState = {\n  [key in keyof ScaleState]: Exclude<ScaleState[key], null>;\n};\n\nexport function useScaleChecked(): CheckedScaleState {\n  const scale = useScale();\n\n  if (!scale.scaleX || !scale.scaleY) {\n    throw new Error('scale cannot be null');\n  }\n\n  return scale as CheckedScaleState;\n}\n","export const positions = {\n  TOP_LEFT: 'top left',\n  TOP_CENTER: 'top center',\n  TOP_RIGHT: 'top right',\n  MIDDLE_LEFT: 'middle left',\n  MIDDLE: 'middle',\n  MIDDLE_RIGHT: 'middle right',\n  BOTTOM_LEFT: 'bottom left',\n  BOTTOM_CENTER: 'bottom center',\n  BOTTOM_RIGHT: 'bottom right',\n};\n\nexport const types = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PROGRESS_INDICATOR: 'progress_indicator',\n};\n\nexport const transitions = {\n  FADE: 'fade',\n  SCALE: 'scale',\n  SLIDE_RIGHT: 'slide_right',\n  SLIDE_LEFT: 'slide_left',\n  SLIDE_TOP: 'slide_top',\n  SLIDE_BOTTOM: 'slide_bottom',\n};\n","import { createContext, useContext } from 'react';\n\nconst AlertContext = createContext<any>({});\n\nexport const AlertProvider = AlertContext.Provider;\n\nexport function useAlert() {\n  return useContext(AlertContext);\n}\n","import { CSSProperties, ReactNode, useRef } from 'react';\nimport { Transition as ContainerTransition } from 'react-transition-group';\n\nimport { transitions } from './options';\n\nconst duration = 250;\n\nconst defaultStyle: Record<string, CSSProperties> = {\n  [transitions.FADE]: {\n    transition: `opacity ${duration}ms ease`,\n    opacity: 0,\n  },\n  [transitions.SCALE]: {\n    transform: 'scale(1)',\n    transition: `all ${duration}ms ease-in-out`,\n  },\n};\n\ntype TransitionStyles = Record<\n  string,\n  Partial<{\n    entering: CSSProperties;\n    entered: CSSProperties;\n    exiting: CSSProperties;\n    exited: CSSProperties;\n  }>\n>;\n\nconst defaultTransitionStyles: TransitionStyles = {\n  [transitions.FADE]: {\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n  },\n  [transitions.SCALE]: {\n    entering: { transform: 'scale(0)' },\n    entered: { transform: 'scale(1)' },\n    exiting: { transform: 'scale(0)' },\n    exited: { transform: 'scale(1)' },\n  },\n};\n\ninterface TransitionProps {\n  children: ReactNode;\n  type: string;\n  transitionStyles?: TransitionStyles;\n}\n\nexport default function Transtion({\n  children,\n  type,\n  transitionStyles = defaultTransitionStyles,\n  ...props\n}: TransitionProps) {\n  const ref = useRef(null);\n  return (\n    <ContainerTransition nodeRef={ref} {...props} timeout={duration}>\n      {(state) => (\n        <div\n          ref={ref}\n          style={{\n            ...defaultStyle[type],\n            ...transitionStyles[type][state],\n            ...transitionStyles.default,\n          }}\n        >\n          {children}\n        </div>\n      )}\n    </ContainerTransition>\n  );\n}\n","import { useMemo } from 'react';\n\nimport { positions } from './options';\n\nfunction getStyles(position, containerStyle): any {\n  const initialStyles = {\n    position: 'fixed',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    pointerEvents: 'none',\n    overflow: 'visible',\n    ...(containerStyle\n      ? {\n          top: `${containerStyle.top}px`,\n          left: `${containerStyle.left}px`,\n          height: `${containerStyle.height}px`,\n          width: `${containerStyle.width}px`,\n        }\n      : { width: '100%', height: '100%' }),\n  };\n\n  switch (position) {\n    case positions.TOP_LEFT:\n      return {\n        ...initialStyles,\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n      };\n    case positions.TOP_CENTER:\n      return {\n        ...initialStyles,\n        justifyContent: 'flex-start',\n      };\n    case positions.TOP_RIGHT:\n      return {\n        ...initialStyles,\n        justifyContent: 'flex-start',\n        alignItems: 'flex-end',\n      };\n    case positions.MIDDLE_LEFT:\n      return {\n        ...initialStyles,\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n      };\n    case positions.MIDDLE: {\n      return {\n        ...initialStyles,\n        justifyContent: 'center',\n      };\n    }\n    case positions.MIDDLE_RIGHT:\n      return {\n        ...initialStyles,\n        justifyContent: 'center',\n\n        alignItems: 'flex-end',\n      };\n\n    case positions.BOTTOM_LEFT:\n      return {\n        ...initialStyles,\n        justifyContent: 'flex-end',\n\n        alignItems: 'flex-start',\n      };\n    case positions.BOTTOM_CENTER:\n      return {\n        ...initialStyles,\n        justifyContent: 'flex-end',\n      };\n    case positions.BOTTOM_RIGHT:\n      return {\n        ...initialStyles,\n        justifyContent: 'flex-end',\n\n        alignItems: 'flex-end',\n      };\n\n    default: {\n      return initialStyles;\n    }\n  }\n}\n\nexport default function Wrapper({\n  children,\n  options: { position },\n  containerStyle,\n  ...props\n}) {\n  const styles = useMemo(\n    () => getStyles(position, containerStyle),\n    [position, containerStyle],\n  );\n\n  return (\n    children.length > 0 && (\n      <div style={styles} {...props}>\n        {children}\n      </div>\n    )\n  );\n}\n","export function groupBy(\n  array: Array<any>,\n  fn: (item: any) => string,\n): Array<any> {\n  return array.reduce((result, item) => {\n    const key = fn(item);\n    if (!result[key]) result[key] = [];\n    result[key].push(item);\n    return result;\n  }, {});\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nconst styles = css`\n  width: 40px;\n  height: 40px;\n  margin: 0 auto;\n  :after {\n    content: ' ';\n    display: block;\n    width: 30px;\n    height: 30px;\n    margin-top: 10px;\n    border-radius: 50%;\n    border: 4px solid;\n    border-color: #fff transparent #fff transparent;\n    animation: ring-animation 1s linear infinite;\n  }\n  @keyframes ring-animation {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default function ProgressIndicator() {\n  return <div css={styles} />;\n}\n","import {\n  Fragment,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  useMemo,\n  memo,\n  CSSProperties,\n  ReactNode,\n} from 'react';\nimport { createPortal } from 'react-dom';\nimport { FaTimes } from 'react-icons/fa';\nimport { TransitionGroup } from 'react-transition-group';\n\nimport Transition from '../Transition';\nimport Wrapper from '../Wrapper';\nimport { groupBy } from '../helpers';\nimport { positions, transitions, types } from '../options';\n\nimport { AlertProvider } from './Context';\nimport ProgressIndicator from './ProgressIndicator';\n\ninterface ProviderProps {\n  children: ReactNode;\n  offset?: string;\n  position?: any;\n  timeout?: number;\n  type?: any;\n  transition?: any;\n  containerStyle?: CSSProperties;\n  wrapperRef?: any;\n  context?: {\n    Provider?: any;\n    Consumer?: any;\n  };\n}\n\nfunction Provider({\n  children,\n  wrapperRef = null,\n  offset = '5px',\n  position = positions.BOTTOM_CENTER,\n  timeout = 3000,\n  type,\n  transition = transitions.FADE,\n  ...props\n}: ProviderProps) {\n  const root = useRef<any>(null);\n  const timersId = useRef<any>([]);\n  const [alerts, setAlerts] = useState<any[]>([]);\n\n  useEffect(() => {\n    root.current = document.createElement('div');\n    const ref = root.current;\n    const timersIdRef = timersId.current;\n\n    if (wrapperRef) {\n      wrapperRef.appendChild(ref);\n    }\n    return () => {\n      if (ref) {\n        if (wrapperRef) {\n          timersIdRef.forEach(clearTimeout);\n\n          wrapperRef.removeChild(ref);\n        }\n      }\n    };\n  }, [wrapperRef]);\n\n  const remove = useCallback((alert) => {\n    setAlerts((currentAlerts) => {\n      const lengthBeforeRemove = currentAlerts.length;\n      const filteredAlerts = currentAlerts.filter((a) => a.id !== alert.id);\n\n      if (lengthBeforeRemove > filteredAlerts.length && alert.options.onClose) {\n        alert.options.onClose();\n      }\n\n      return filteredAlerts;\n    });\n  }, []);\n\n  const show = useCallback(\n    (message = '', options: any = {}) => {\n      const id = Math.random().toString(36).substr(2, 9);\n\n      const alertOptions = {\n        position: options.position || position,\n        timeout,\n        type,\n        backgroundColor: 'black',\n        color: 'white',\n        ...options,\n      };\n\n      const alert: any = {\n        id,\n        message,\n        options: alertOptions,\n      };\n\n      alert.close = () => remove(alert);\n\n      if (alert.options.timeout) {\n        const timerId = setTimeout(() => {\n          remove(alert);\n\n          timersId.current.splice(timersId.current.indexOf(timerId), 1);\n        }, alert.options.timeout);\n\n        timersId.current.push(timerId);\n      }\n\n      setAlerts((state) => state.concat(alert));\n      if (alert.options.onOpen) alert.options.onOpen();\n\n      return alert;\n    },\n    [position, remove, timeout, type],\n  );\n\n  const success = useCallback(\n    (message = '', options: any = {}) => {\n      options.type = types.SUCCESS;\n      options = { backgroundColor: '#28ba62', color: 'white', ...options };\n\n      return show(message, options);\n    },\n    [show],\n  );\n\n  const error = useCallback(\n    (message = '', options: any = {}) => {\n      options.type = types.ERROR;\n      options = { backgroundColor: '#cf3c4f', color: 'white', ...options };\n      return show(message, options);\n    },\n    [show],\n  );\n\n  const info = useCallback(\n    (message = '', options: any = {}) => {\n      options.type = types.INFO;\n      options.color = '#28ba62';\n      return show(message, options);\n    },\n    [show],\n  );\n\n  const showLoading = useCallback(\n    (message = 'Process in progress', options: any = {}) => {\n      options.type = types.PROGRESS_INDICATOR;\n      options.timeout = 0;\n      options.backgroundColor = '#232323';\n\n      return new Promise((resolve) => {\n        const alert = show(message, options);\n        setTimeout(() => {\n          resolve(() => remove(alert));\n        }, 500);\n      });\n    },\n    [remove, show],\n  );\n\n  const closeHandler = useCallback(\n    (alert) => {\n      remove(alert);\n    },\n    [remove],\n  );\n\n  const alertsByPosition = groupBy(alerts, (alert) => alert.options.position);\n\n  const parentStyle = useMemo(() => {\n    return wrapperRef\n      ? wrapperRef.getBoundingClientRect()\n      : {\n          top: 0,\n          left: 0,\n          width: window.innerWidth,\n          height: window.innerHeight,\n        };\n  }, [wrapperRef]);\n\n  const alertContextValue = useMemo(\n    () => ({ show, success, error, info, showLoading }),\n    [show, success, error, info, showLoading],\n  );\n\n  return (\n    <AlertProvider value={alertContextValue}>\n      {children}\n      {root.current &&\n        createPortal(\n          <Fragment>\n            {Object.keys(positions).map((key) => {\n              const position = positions[key];\n\n              return (\n                <TransitionGroup\n                  appear\n                  key={position}\n                  options={{ position, zIndex: 999999 }}\n                  component={Wrapper}\n                  containerStyle={parentStyle}\n                  {...props}\n                >\n                  {alertsByPosition[position]\n                    ? alertsByPosition[position].map((alert) => (\n                        <Transition type={transition} key={alert.id}>\n                          <div\n                            style={{\n                              margin: offset,\n                              padding: '25px',\n                              borderRadius: '10px',\n                              pointerEvents: 'all',\n                              backgroundColor: alert.options.backgroundColor,\n                              color: alert.options.color,\n                              minHeight: '60px',\n                              position: 'relative',\n                            }}\n                            key={alert.id}\n                          >\n                            <button\n                              style={{\n                                position: 'absolute',\n                                right: '5px',\n                                top: '5px',\n                                border: 'none',\n                                backgroundColor: 'transparent',\n                                color: 'white',\n                              }}\n                              type=\"button\"\n                              onClick={() => closeHandler(alert)}\n                            >\n                              <FaTimes />\n                            </button>\n\n                            <span>{alert.message}</span>\n                            {alert.options.type ===\n                              types.PROGRESS_INDICATOR && <ProgressIndicator />}\n                          </div>\n                        </Transition>\n                      ))\n                    : null}\n                </TransitionGroup>\n              );\n            })}\n          </Fragment>,\n          root.current,\n        )}\n    </AlertProvider>\n  );\n}\n\nexport default memo(Provider);\n","import { createContext, useContext } from 'react';\n\nconst ModalContext = createContext<any>({});\nexport const ModalProvider = ModalContext.Provider;\n\nexport function useModal() {\n  return useContext(ModalContext);\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { CSSProperties, useCallback } from 'react';\n\nconst styles = css`\n  display: block;\n  border-radius: 5px;\n  overflow: hidden;\n  width: 300px;\n  border-top: 10px solid #ed0000;\n\n  .message {\n    font-weight: bold;\n    font-size: 14px;\n    text-align: center;\n    color: #af0000;\n    text-align: center;\n    padding: 25px;\n    display: block;\n  }\n  .buttons-container {\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: flex-end;\n    padding: 5px;\n    border-top: 1px solid #efefef;\n\n    button:last-of-type {\n      border-radius: 5px 0 0 5px;\n    }\n    button:first-of-type {\n      border-radius: 0px 5px 5px 0px;\n      border-width: 1px;\n    }\n    button {\n      border-color: #dcdcdc;\n      border-width: 1px 0px 1px 1px;\n      background-color: white;\n      display: inline-block;\n      cursor: pointer;\n      color: #363636;\n      font-weight: bold;\n      padding: 6px 24px;\n      text-decoration: none;\n    }\n    button:hover {\n      background: -webkit-gradient(\n        linear,\n        left top,\n        left bottom,\n        color-stop(0.05, #f6f6f6),\n        color-stop(1, #ffffff)\n      );\n      background: -moz-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n      background: -webkit-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n      background: -o-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n      background: -ms-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n      background: linear-gradient(to bottom, #f6f6f6 5%, #ffffff 100%);\n      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#f6f6f6', endColorstr='#ffffff',GradientType=0);\n      background-color: #f6f6f6;\n    }\n  }\n`;\n\ninterface ConfirmationDialogProps {\n  style?: CSSProperties;\n  buttons: Array<{ handler: () => void; text: string; style?: CSSProperties }>;\n  onClose: () => void;\n  message: string;\n}\n\nfunction ConfirmationDialog({\n  style = {},\n  buttons = [],\n  onClose,\n  message,\n}: ConfirmationDialogProps) {\n  const optionsHandler = useCallback(\n    (\n      e: React.MouseEvent,\n      { handler = () => null }: { handler: (e: React.MouseEvent) => void },\n    ) => {\n      handler(e);\n      onClose();\n    },\n    [onClose],\n  );\n\n  return (\n    <div style={style} css={styles}>\n      <p className=\"message\">{message}</p>\n      <div className=\"buttons-container\">\n        {buttons.map((option) => (\n          <button\n            key={option.text}\n            type=\"button\"\n            onClick={(e) => optionsHandler(e, option)}\n            style={option.style && option.style}\n          >\n            {option.text}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ConfirmationDialog;\n","import { useRef, useEffect, cloneElement } from 'react';\nimport { useSize } from 'react-use';\n\nconst ModalContent = ({ modal, onClose, onLayout }) => {\n  const contentSize = useRef<any>();\n\n  const [Content, { width, height }] = useSize(() => {\n    return (\n      <div\n        style={{\n          height: '100%',\n          display: 'block',\n          overflow: 'auto',\n        }}\n      >\n        {cloneElement(modal.component, {\n          ...modal.options,\n          onClose: onClose,\n          style: { cursor: 'default' },\n        })}\n      </div>\n    );\n  });\n\n  useEffect(() => {\n    if (isFinite(height) && isFinite(width) && !contentSize.current) {\n      contentSize.current = { width, height };\n      onLayout({ modal, layout: { width, height } });\n    }\n  }, [width, height, contentSize, onLayout, modal]);\n\n  return Content;\n};\n\nexport default ModalContent;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  useRef,\n  useState,\n  useEffect,\n  useCallback,\n  Fragment,\n  useMemo,\n  CSSProperties,\n  ReactNode,\n} from 'react';\nimport { createPortal } from 'react-dom';\nimport { Rnd } from 'react-rnd';\nimport { TransitionGroup } from 'react-transition-group';\n\nimport Transition from '../Transition';\nimport Wrapper from '../Wrapper';\nimport { positions, transitions } from '../options';\n\nimport ConfirmDialog from './ConfirmDialog';\nimport { ModalProvider } from './Context';\nimport ModalContent from './ModalContent';\n\nconst transitionStyles: any = {\n  [transitions.FADE]: {\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n  },\n  [transitions.SCALE]: {\n    entering: { transform: 'scale(0)' },\n    entered: { transform: 'scale(1)' },\n    exiting: { transform: 'scale(0)' },\n    exited: { transform: 'scale(0)' },\n  },\n};\n\ninterface ProviderProps {\n  children: ReactNode;\n  style?: CSSProperties;\n  offset?: string;\n  position?: any;\n  transition?: any;\n  wrapperRef?: any;\n}\n\nfunction Provider({\n  children,\n  style = undefined,\n  offset = '0px',\n  position = positions.MIDDLE,\n  transition = transitions.SCALE,\n  wrapperRef = null,\n}: ProviderProps) {\n  const root = useRef<any>();\n  const modalRef = useRef<any>();\n  const [modal, setModal] = useState<any>();\n\n  useEffect(() => {\n    root.current = document.createElement('div');\n    const ref = root.current;\n    if (wrapperRef) {\n      wrapperRef.appendChild(ref);\n    }\n    return () => {\n      if (ref) {\n        if (wrapperRef) {\n          wrapperRef.removeChild(ref);\n        }\n      }\n    };\n  }, [wrapperRef]);\n\n  const close = useCallback(\n    function close() {\n      setModal(null);\n    },\n    [setModal],\n  );\n\n  const parentStyle = useMemo(() => {\n    return wrapperRef\n      ? wrapperRef.getBoundingClientRect()\n      : {\n          top: 0,\n          left: 0,\n          width: window.innerWidth,\n          height: window.innerHeight,\n        };\n  }, [wrapperRef]);\n\n  /**\n   *\n   * @param {*} component  <component />\n   * @param {object} options    {onYest:()=>{}, prop1, .... etc}\n   * @param {transitions} options.transition\n   * @param {positions} options.position\n   * @param {boolean} options.isBackgroundBlur\n   * @param {boolean} options.enableResizing\n   */\n  const show = useCallback(\n    (component, options = {}) => {\n      const _modal: any = {\n        component,\n        options: { isBackgroundBlur: true, enableResizing: false, ...options },\n      };\n\n      _modal.close = close;\n\n      setModal(_modal);\n      if (_modal.options.onOpen) _modal.options.onOpen();\n      return _modal;\n    },\n    [close],\n  );\n\n  /**\n   * @param {object} dialogOptions\n   * @param {object} dialogOptions.message\n   * @param {Array<{ handler: Function,text: string,style: object}>} dialogOptions.buttons\n   * @param {object} dialogOptions.tyle\n   */\n  const showConfirmDialog = useCallback(\n    (dialogOptions, options = { enableResizing: false }) => {\n      const _modal: any = {\n        component: <ConfirmDialog {...dialogOptions} />,\n        options: { isBackgroundBlur: true, ...options },\n      };\n\n      _modal.close = close;\n\n      setModal(_modal);\n      if (_modal.options.onOpen) _modal.options.onOpen();\n\n      return _modal;\n    },\n    [close],\n  );\n\n  useEffect(() => {\n    function keyHandler(e) {\n      if (['Escape', 'Esc'].includes(e.key)) {\n        close();\n      }\n    }\n    document.addEventListener('keydown', keyHandler, false);\n    return () => document.removeEventListener('keydown', keyHandler, false);\n  }, [close]);\n\n  const styles = css`\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 0;\n    pointer-events: all;\n    .handle {\n      cursor: move;\n    }\n\n    .rnd-container {\n      box-sizing: initial;\n      background-color: #fff;\n      box-shadow: 0 0 0 0, 0 8px 16px rgba(0, 0, 0, 0.3);\n      border-radius: 5px;\n    }\n  `;\n\n  const outerStyle: CSSProperties = modal?.options.isBackgroundBlur\n    ? { backgroundColor: 'rgba(255,255,255,0.8)' }\n    : { pointerEvents: 'none' };\n\n  const modalContextValue = useMemo(\n    () => ({ show, close, showConfirmDialog }),\n    [show, close, showConfirmDialog],\n  );\n\n  const contentLayoutHandler = useCallback(\n    ({ modal, layout }) => {\n      const width = modal.options.width\n        ? modal.options.width\n        : layout.width > parentStyle.width\n        ? parentStyle.width\n        : layout.width;\n      const height = modal.options.height\n        ? modal.options.height\n        : layout.height > parentStyle.height\n        ? parentStyle.height\n        : layout.height;\n\n      modalRef.current.updateSize({ width, height });\n    },\n    [parentStyle.height, parentStyle.width],\n  );\n\n  return (\n    <ModalProvider value={modalContextValue}>\n      {children}\n      {root.current &&\n        createPortal(\n          <Fragment>\n            {modal ? (\n              <div\n                css={styles}\n                style={{\n                  ...outerStyle,\n                }}\n              >\n                <TransitionGroup\n                  appear\n                  key={\n                    positions[\n                      modal.options.transition\n                        ? modal.options.transition\n                        : transition\n                    ]\n                  }\n                  options={{\n                    position: modal.options.position\n                      ? modal.options.position\n                      : position,\n                  }}\n                  containerStyle={parentStyle}\n                  component={Wrapper}\n                >\n                  <Transition\n                    type={\n                      modal.options.transition\n                        ? modal.options.transition\n                        : transition\n                    }\n                    transitionStyles={{\n                      ...transitionStyles,\n                      default: {\n                        width: modal.options.width\n                          ? `${modal.options.width}px`\n                          : 'auto',\n                      },\n                      height: modal.options.height\n                        ? `${modal.options.height}px`\n                        : 'auto',\n                    }}\n                    key={modal.id}\n                  >\n                    <Rnd\n                      maxWidth={parentStyle.width}\n                      maxHeight={parentStyle.height}\n                      ref={modalRef}\n                      default={{\n                        width: modal.options.width\n                          ? modal.options.width\n                          : 'auto',\n                        height: modal.options.height\n                          ? modal.options.height\n                          : 'auto',\n                        x: 0,\n                        y: 0,\n                      }}\n                      className=\"rnd-container\"\n                      style={{\n                        ...style,\n                        margin: offset,\n                        position: 'static',\n                        pointerEvents: 'all',\n                        userSelect: 'none',\n                      }}\n                      enableResizing={modal.options.enableResizing}\n                      dragHandleClassName=\"handle\"\n                      enableUserSelectHack={false}\n                    >\n                      <ModalContent\n                        modal={modal}\n                        onClose={close}\n                        onLayout={contentLayoutHandler}\n                      />\n                    </Rnd>\n                  </Transition>\n                </TransitionGroup>\n              </div>\n            ) : null}\n          </Fragment>,\n          root.current,\n        )}\n    </ModalProvider>\n  );\n}\n\nexport default Provider;\n","import { createContext, useContext } from 'react';\n\nexport const GlobalConetxt = createContext<{\n  rootRef: HTMLDivElement | null;\n  elementsWrapperRef: HTMLDivElement | null;\n}>({ rootRef: null, elementsWrapperRef: null });\n\nexport const GlobalProvider = GlobalConetxt.Provider;\n\nexport function useGlobal() {\n  return useContext(GlobalConetxt);\n}\n","import {\n  useRef,\n  useLayoutEffect,\n  useCallback,\n  useState,\n  memo,\n  Fragment,\n  CSSProperties,\n  ReactNode,\n} from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { useGlobal } from '../../context/GlobalContext';\n\nconst styles: Record<'popup', CSSProperties> = {\n  popup: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    pointerEvents: 'none',\n    backgroundColor: 'gray',\n    padding: '3px',\n    borderRadius: '2px',\n    color: 'white',\n    whiteSpace: 'nowrap',\n    fontSize: '10px',\n    fontFamily: 'tahoma',\n    textShadow: 'none',\n  },\n};\n\ninterface ToolTipProps {\n  style?: any;\n  className?: string;\n  popupPlacement: string;\n  children: ReactNode;\n  title: string;\n  offset?: { x: number; y: number };\n}\n\nfunction ToolTip({\n  style = { popup: {}, mainContainer: {} },\n  className = '',\n  popupPlacement = 'right',\n  children,\n  title,\n  offset = { x: 0, y: 0 },\n}: ToolTipProps) {\n  const refChild = useRef<HTMLDivElement>(null);\n  const refContent = useRef<HTMLDivElement>(null);\n\n  const [placement, setPlacement] = useState({ x: 0, y: 0 });\n  const [show, showToolTip] = useState(false);\n  const { elementsWrapperRef } = useGlobal();\n\n  useLayoutEffect(() => {\n    const getPopupPlacement = () => {\n      let x: number;\n      let y: number;\n\n      if (refChild.current === null || refContent.current === null) {\n        return null;\n      }\n\n      const childBounding = refChild.current.getBoundingClientRect();\n      const contentBounding = refContent.current.getBoundingClientRect();\n\n      switch (popupPlacement) {\n        case 'left':\n          x = -contentBounding.width;\n          y =\n            childBounding.height / 2 -\n            ((childBounding.height / 2) * contentBounding.height) /\n              childBounding.height;\n          break;\n        case 'right':\n          x = childBounding.width;\n          y =\n            childBounding.height / 2 -\n            ((childBounding.height / 2) * contentBounding.height) /\n              childBounding.height;\n          break;\n        case 'top':\n          x =\n            childBounding.width / 2 -\n            ((childBounding.width / 2) * contentBounding.width) /\n              childBounding.width;\n          y = -childBounding.height;\n          break;\n        case 'bottom':\n          x =\n            childBounding.width / 2 -\n            ((childBounding.width / 2) * contentBounding.width) /\n              childBounding.width;\n          y = childBounding.height;\n          break;\n        default:\n          x = 0;\n          y = 0;\n          break;\n      }\n      return { x: x + childBounding.x, y: y + childBounding.y };\n    };\n\n    if (show) {\n      const pl = getPopupPlacement();\n\n      if (pl) {\n        setPlacement(pl);\n      }\n    }\n  }, [popupPlacement, show]);\n\n  const mouseOverHandler = useCallback(() => {\n    showToolTip(true);\n  }, []);\n\n  const mouseLeaveHandler = useCallback(() => {\n    showToolTip(false);\n  }, []);\n\n  return (\n    <Fragment>\n      <div\n        style={{\n          position: 'relative',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          ...style.mainContainer,\n        }}\n        ref={refChild}\n        onMouseOver={mouseOverHandler}\n        onMouseOut={mouseLeaveHandler}\n      >\n        {children}\n      </div>\n      {show &&\n        elementsWrapperRef &&\n        createPortal(\n          <div\n            ref={refContent}\n            style={{\n              ...styles.popup,\n              transform: `translate(${placement.x + offset.x}px,${\n                placement.y + offset.y\n              }px)`,\n              zIndex: 999999999,\n              ...style.popup,\n            }}\n            className={className}\n          >\n            <span style={{ pointerEvents: 'none' }}>{title}</span>\n          </div>,\n          elementsWrapperRef,\n        )}\n    </Fragment>\n  );\n}\n\nexport default memo(ToolTip);\n","import { CSSProperties, memo } from 'react';\nimport { FaTimes } from 'react-icons/fa';\n\nimport ToolTip from './ToolTip/ToolTip';\n\nconst styles: Record<'button' | 'svg', CSSProperties> = {\n  button: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  svg: {\n    fill: '#ca0000',\n    fontSize: '16px',\n  },\n};\n\ninterface CloseButtonProps {\n  onClick?: () => void;\n  popupTitle?: string;\n  popupPlacement?: string;\n  className?: string;\n}\n\nfunction CloseButton(props: CloseButtonProps) {\n  const {\n    onClick = () => null,\n    popupTitle = 'Close',\n    popupPlacement = 'left',\n    className = '',\n  } = props;\n  return (\n    <div className={className}>\n      <ToolTip title={popupTitle} popupPlacement={popupPlacement}>\n        <button style={styles.button} type=\"button\" onClick={onClick}>\n          <FaTimes style={styles.svg} />\n        </button>\n      </ToolTip>\n    </div>\n  );\n}\n\nexport default memo(CloseButton);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { xGetFromToIndex, xyToXYObject } from 'ml-spectra-processing';\nimport { analyseMultiplet } from 'multiplet-analysis';\nimport { useState, useEffect } from 'react';\nimport { Plot, LineSeries, Axis } from 'react-plot';\n\nimport { isSpectrum2D } from '../../data/data2d/Spectrum2D';\nimport { Spectra } from '../NMRium';\nimport CloseButton from '../elements/CloseButton';\nimport { ActiveSpectrum } from '../reducer/Reducer';\n\nconst styles = css`\n  display: flex;\n  flex-direction: column;\n  width: 900px;\n  height: 400px;\n  padding: 5px;\n  button:focus {\n    outline: none;\n  }\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    span {\n      color: #464646;\n      font-size: 15px;\n      flex: 1;\n    }\n\n    button {\n      background-color: transparent;\n      border: none;\n      svg {\n        height: 16px;\n      }\n    }\n  }\n  .container {\n    overflow-y: auto;\n    background-color: white;\n    padding-top: 10px;\n\n    .row {\n      outline: none;\n      display: flex !important;\n      flex-direction: row;\n      margin: 0;\n      div {\n        flex: 4;\n      }\n      .multiplicity {\n        flex: 2;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    }\n\n    .row:nth-child(odd) {\n      background: #fafafa;\n    }\n  }\n`;\n\nconst loaderStyles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  user-select: none;\n  width: 900px;\n  height: 400px;\n\n  svg {\n    animation-duration: 0.5s;\n    animation-name: spinAnimation;\n    animation-iteration-count: infinite;\n    animation-fill-mode: forwards;\n    animation-direction: inherit;\n    animation-timing-function: linear;\n    animation-duration: 1s;\n    width: 100px;\n    height: 100px;\n  }\n\n  @keyframes spinAnimation {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\ninterface MultipletAnalysisModalProps {\n  data: Spectra;\n  activeSpectrum: ActiveSpectrum;\n  scaleX: any;\n  startX: any;\n  endX: any;\n  onClose: (element?: string) => void;\n}\n\nexport default function MultipletAnalysisModal({\n  data,\n  activeSpectrum,\n  scaleX,\n  startX,\n  endX,\n  onClose,\n}: MultipletAnalysisModalProps) {\n  const [analysisData, setAnalysisData] = useState<any>();\n  const [calcStart, setCalcStartStatus] = useState(false);\n  const [isCalcFinished, setCalcFinished] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCalcStartStatus(true);\n    }, 400);\n  }, []);\n\n  useEffect(() => {\n    if (activeSpectrum && startX && endX && calcStart) {\n      const spectrum = data[activeSpectrum.index];\n      if (isSpectrum2D(spectrum)) {\n        throw new Error('unreachable');\n      }\n\n      const {\n        data: { x, re },\n        info,\n      } = spectrum;\n\n      const from = scaleX().invert(startX);\n      const to = scaleX().invert(endX);\n\n      const { fromIndex, toIndex } = xGetFromToIndex(x, {\n        from,\n        to,\n      });\n      const analysesProps = {\n        x: x.slice(fromIndex, toIndex),\n        y: re.slice(fromIndex, toIndex),\n      };\n      try {\n        const result = analyseMultiplet(analysesProps, {\n          frequency: info.originFrequency,\n          takeBestPartMultiplet: true,\n          symmetrizeEachStep: true,\n          debug: true,\n        });\n        setCalcFinished(true);\n        setAnalysisData(result);\n      } catch (err) {\n        // eslint-disable-next-line no-console\n        console.log(err);\n      }\n    }\n  }, [startX, endX, data, scaleX, activeSpectrum, calcStart]);\n\n  if (!isCalcFinished) {\n    return (\n      <div css={loaderStyles}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\">\n          <g fill=\"#61DAFB\">\n            <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\" />\n            <path d=\"M520.5 78.1z\" />\n          </g>\n        </svg>\n        <p>Analyse Multiplet in progress. Please wait ...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div css={styles}>\n      <div className=\"header handle\">\n        <span>Analyse Multiplet</span>\n\n        <CloseButton onClick={onClose} />\n      </div>\n      <div className=\"container\">\n        {analysisData?.debug?.steps.map((d, index) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <div key={index} className=\"row\">\n              <Plot\n                width={400}\n                height={200}\n                svgStyle={{ overflow: 'visible' }}\n                seriesViewportStyle={{ stroke: 'black' }}\n              >\n                <LineSeries data={xyToXYObject(d.multiplet)} />\n                <Axis\n                  id=\"y\"\n                  position=\"left\"\n                  tickPosition=\"inner\"\n                  displayPrimaryGridLines\n                  hiddenTicks\n                  paddingStart={0.1}\n                  paddingEnd={0.1}\n                />\n                <Axis\n                  id=\"x\"\n                  position=\"bottom\"\n                  tickPosition=\"inner\"\n                  displayPrimaryGridLines\n                />\n              </Plot>\n              <div className=\"multiplicity\">\n                <p>\n                  {analysisData.js[index]\n                    ? `${\n                        analysisData.js[index]?.multiplicity\n                      }: ${analysisData.js[index]?.coupling.toFixed(3)} Hz`\n                    : ''}\n                </p>\n              </div>\n              <Plot\n                width={400}\n                height={200}\n                seriesViewportStyle={{ stroke: 'black' }}\n              >\n                <LineSeries\n                  data={xyToXYObject(d.errorFunction)}\n                  lineStyle={{ strokeWidth: 1 }}\n                />\n                <Axis\n                  id=\"y\"\n                  position=\"left\"\n                  tickPosition=\"inner\"\n                  displayPrimaryGridLines\n                  hiddenTicks\n                  paddingStart={0.1}\n                  paddingEnd={0.1}\n                />\n                <Axis\n                  id=\"x\"\n                  position=\"bottom\"\n                  tickPosition=\"inner\"\n                  displayPrimaryGridLines\n                />\n              </Plot>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { useMemo } from 'react';\n\nimport { Datum1D } from '../../data/types/data1d';\nimport { Datum2D } from '../../data/types/data2d';\nimport { useChartData } from '../context/ChartContext';\nimport nucleusToString from '../utility/nucleusToString';\n\nexport default function useSpectraByActiveNucleus() {\n  const { data, activeTab } = useChartData();\n\n  return useMemo<Array<Datum1D | Datum2D>>(() => {\n    if (data) {\n      return (\n        data.filter(\n          (spectrum) => activeTab === nucleusToString(spectrum.info.nucleus),\n        ) || []\n      );\n    }\n    return [];\n  }, [activeTab, data]);\n}\n","import get from 'lodash/get';\nimport { useMemo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\nimport { usePreferences } from '../context/PreferencesContext';\n\ninterface ActiveSpectrumOptionsResult {\n  isActive: boolean;\n  opacity: number;\n}\n\nexport default function useActiveSpectrumStyleOptions(\n  id: string,\n): ActiveSpectrumOptionsResult {\n  const { activeSpectrum } = useChartData();\n  const preferences = usePreferences();\n\n  return useMemo(() => {\n    const isActive =\n      activeSpectrum === null ? true : id === activeSpectrum.id ? true : false;\n    const opacity = isActive\n      ? 1\n      : get(preferences.current, 'controllers.dimmedSpectraTransparency', 0.1);\n    return { isActive, opacity };\n  }, [activeSpectrum, id, preferences]);\n}\n","import { memo } from 'react';\n\nimport { ExclusionZone } from '../../data/types/data1d/ExclusionZone';\nimport { useScaleChecked } from '../context/ScaleContext';\nimport { HighlightedSource, useHighlight } from '../highlight';\nimport useActiveSpectrumStyleOptions from '../hooks/useActiveSpectrumStyleOptions';\n\ninterface ExclusionZoneProps {\n  zone: ExclusionZone;\n  color: string;\n  vAlign: number;\n  spectrumID: string;\n}\n\nfunction ExclusionZoneAnnotation({\n  zone,\n  color,\n  vAlign,\n  spectrumID,\n}: ExclusionZoneProps) {\n  const { scaleX, scaleY } = useScaleChecked();\n  const highlight = useHighlight([zone.id], {\n    type: HighlightedSource.EXCLUSION_ZONE,\n    extra: { id: zone.id, spectrumID },\n  });\n\n  const { opacity } = useActiveSpectrumStyleOptions(spectrumID);\n\n  return (\n    <g key={zone.id} transform={`translate(${scaleX()(zone.to)},0)`}>\n      <rect\n        x=\"0\"\n        transform={`translate(0,${scaleY()(0) - (vAlign + 5)})`}\n        width={`${scaleX()(zone.from) - scaleX()(zone.to)}`}\n        height=\"10px\"\n        style={{\n          fill: highlight.isActive ? '#ff6f0057' : color,\n          opacity,\n        }}\n        {...highlight.onHover}\n      />\n    </g>\n  );\n}\n\nexport default memo(ExclusionZoneAnnotation);\n","import { VerticalAlign, VerticalAlignment } from '../../reducer/Reducer';\n\nexport default function getVerticalShift(\n  verticalAlign: VerticalAlign,\n  option: { index?: number; align?: VerticalAlignment },\n) {\n  const { index = 1, align = 'stack' } = option || {\n    index: 1,\n    align: 'stack',\n  };\n\n  return verticalAlign.align === align\n    ? index * verticalAlign.verticalShift\n    : 0;\n}\n","import { memo } from 'react';\n\nimport * as Filters from '../../data/Filters';\nimport { Datum1D } from '../../data/types/data1d';\nimport { ExclusionZone } from '../../data/types/data1d/ExclusionZone';\nimport { useChartData } from '../context/ChartContext';\nimport useSpectraByActiveNucleus from '../hooks/useSpectraPerNucleus';\nimport { VerticalAlign } from '../reducer/Reducer';\nimport { DISPLAYER_MODE } from '../reducer/core/Constants';\n\nimport ExclusionZoneAnnotation from './ExclusionZoneAnnotation';\nimport getVerticalShift from './utilities/getVerticalShift';\n\ninterface ExclusionZonesAnnotationsInnerProps {\n  displayerKey: string;\n  spectra: Datum1D[];\n  xDomains: any;\n  verticalAlign: VerticalAlign;\n}\n\nfunction ExclusionZonesAnnotationsInner({\n  displayerKey,\n  xDomains,\n  spectra,\n  verticalAlign,\n}: ExclusionZonesAnnotationsInnerProps) {\n  return (\n    <g\n      className=\"spectrum-exclusion-zones-group\"\n      clipPath={`url(#${displayerKey}clip-chart-1d)`}\n    >\n      {spectra\n        .filter((d) => d.display.isVisible === true && xDomains[d.id])\n        .map((d, index) =>\n          getExclusionZones(d).map((zone) => {\n            return (\n              <ExclusionZoneAnnotation\n                key={zone.id}\n                spectrumID={d.id}\n                vAlign={getVerticalShift(verticalAlign, { index })}\n                zone={zone}\n                color={d.display.color}\n              />\n            );\n          }),\n        )}\n    </g>\n  );\n}\n\nconst MemoizedPeakAnnotations = memo(ExclusionZonesAnnotationsInner);\n\nfunction ExclusionZonesAnnotations() {\n  const { displayerKey, xDomains, displayerMode, verticalAlign } =\n    useChartData();\n\n  const spectra = useSpectraByActiveNucleus() as Datum1D[];\n\n  if (displayerMode !== DISPLAYER_MODE.DM_1D) return null;\n\n  return (\n    <MemoizedPeakAnnotations\n      spectra={spectra}\n      displayerKey={displayerKey}\n      xDomains={xDomains}\n      verticalAlign={verticalAlign}\n    />\n  );\n}\n\nexport default ExclusionZonesAnnotations;\n\nfunction getExclusionZones(data: Datum1D): ExclusionZone[] {\n  return (\n    data.filters.find(\n      (filter) => filter.name === Filters.exclusionZones.id && filter.flag,\n    )?.value || []\n  );\n}\n","import { ScaleLinear } from 'd3';\nimport { useMemo } from 'react';\n\nimport { getXScale } from '../1d/utilities/scale';\nimport { useChartData } from '../context/ChartContext';\n\nexport function useXScale(): ScaleLinear<any, any, never> {\n  const { width, margin, xDomains, xDomain, mode } = useChartData();\n\n  return useMemo(\n    () => getXScale({ width, margin, xDomains, xDomain, mode }),\n    [margin, mode, width, xDomain, xDomains],\n  );\n}\n","import { ScaleLinear } from 'd3';\nimport { xyIntegral, xyReduce } from 'ml-spectra-processing';\nimport { useMemo } from 'react';\n\nimport { Data1D } from '../../data/types/data1d';\nimport { getIntegralYScale } from '../1d/utilities/scale';\nimport { useChartData } from '../context/ChartContext';\nimport { PathBuilder } from '../utility/PathBuilder';\n\nimport { useXScale } from './useXScale';\n\nfunction useIntegralYDomain(): ScaleLinear<number, number, number> {\n  const { height, margin, verticalAlign, activeSpectrum, integralsYDomains } =\n    useChartData();\n\n  return useMemo(\n    () =>\n      getIntegralYScale({\n        height,\n        margin,\n        verticalAlign,\n        activeSpectrum,\n        integralsYDomains,\n      }),\n    [activeSpectrum, height, integralsYDomains, margin, verticalAlign],\n  );\n}\n\nexport default function useIntegralPath(integralOptions: {\n  from: number;\n  to: number;\n}) {\n  const { data, activeSpectrum } = useChartData();\n\n  const scaleX = useXScale();\n  const scaleY = useIntegralYDomain();\n  const integral = useMemo(() => {\n    if (activeSpectrum) {\n      const { x, re } = data[activeSpectrum?.index].data as Data1D;\n      const { from, to } = integralOptions;\n      return xyIntegral(\n        { x, y: re },\n        {\n          from,\n          to,\n          reverse: true,\n        },\n      );\n    }\n    return { x: [], y: [] };\n  }, [activeSpectrum, data, integralOptions]);\n\n  const paths = useMemo(() => {\n    if (integral) {\n      const xySeries = xyReduce(integral, {\n        // from: xDomain[0],\n        // to: xDomain[1],\n        nbPoints: 200,\n        optimize: true,\n      });\n\n      const pathBuilder = new PathBuilder();\n      pathBuilder.moveTo(scaleX(xySeries.x[0]), scaleY(xySeries.y[0]));\n      for (let i = 1; i < xySeries.x.length; i++) {\n        pathBuilder.lineTo(scaleX(xySeries.x[i]), scaleY(xySeries.y[i]));\n      }\n\n      return pathBuilder.toString();\n    } else {\n      return '';\n    }\n  }, [integral, scaleX, scaleY]);\n\n  return paths;\n}\n","const integralDefaultValues = {\n  showAbsolute: false,\n  absoluteFormat: '0.00',\n  showRelative: true,\n  relativeFormat: '0.00',\n  color: '#000000',\n  strokeWidth: 1,\n};\n\nconst zoneDefaultValues = {\n  showFrom: false,\n  fromFormat: '0.00',\n  showTo: false,\n  toFormat: '0.00',\n  showAbsolute: false,\n  absoluteFormat: '0.00',\n  showRelative: true,\n  relativeFormat: '0.00',\n};\n\nconst getRangeDefaultValues = (nucleus?: string) => ({\n  showFrom: false,\n  fromFormat: '0.00',\n  showTo: false,\n  toFormat: '0.00',\n  showAbsolute: false,\n  absoluteFormat: '0.00',\n  showRelative: true,\n  relativeFormat: '0.00',\n  jGraphTolerance: nucleus === '1H' ? 0.2 : nucleus === '13C' ? 2 : 0, //J Graph tolerance for: 1H: 0.2Hz 13C: 2Hz\n});\n\nconst peaksDefaultValues = {\n  showPeakNumber: true,\n  peakNumberFormat: '0',\n  showPeakIndex: false,\n  peakIndexFormat: '0.00',\n  showDeltaPPM: true,\n  deltaPPMFormat: '0.00',\n  showDeltaHz: false,\n  deltaHzFormat: '0.00',\n  showPeakWidth: false,\n  peakWidthFormat: '00.0000',\n  showIntensity: true,\n  intensityFormat: '0.00',\n};\n\nconst databaseDefaultValues = {\n  showSmiles: true,\n  showSolvent: false,\n  showNames: true,\n  showRange: false,\n  showDelta: true,\n  showAssignment: false,\n  showCoupling: true,\n  showMultiplicity: true,\n};\n\nexport {\n  peaksDefaultValues,\n  integralDefaultValues,\n  getRangeDefaultValues,\n  zoneDefaultValues,\n  databaseDefaultValues,\n};\n","import { useCallback, useEffect, useRef, useState } from 'react';\n\ninterface UseDraggable {\n  x: number;\n  anchor: Anchor;\n}\nexport interface Draggable {\n  onMouseDown: (\n    event: React.MouseEvent<HTMLDivElement | SVGElement, MouseEvent>,\n  ) => void;\n  position: { x: number; action: Action };\n  previousPosition: number;\n  isActive: boolean;\n  anchor: Anchor;\n}\ntype Action = 'start' | 'move' | 'end' | null;\n\nexport type Anchor = 'RIGHT' | 'LEFT';\n\nexport default function useDraggable(props: UseDraggable): Draggable {\n  const { x, anchor } = props;\n  const isActive = useRef<boolean>(false);\n  const positionRef = useRef<{ relativeX: number; x: number }>({\n    relativeX: x,\n    x,\n  });\n  const [position, setPosition] = useState<{ x: number; action: Action }>({\n    x,\n    action: null,\n  });\n\n  useEffect(() => {\n    positionRef.current = { relativeX: x, x };\n    setPosition({ x, action: null });\n  }, [x]);\n\n  const onMouseDown = useCallback(\n    (e: React.MouseEvent<HTMLDivElement | SVGElement, MouseEvent>) => {\n      setPosition({ x: positionRef.current.x, action: 'start' });\n\n      positionRef.current.relativeX = e.clientX - positionRef.current.relativeX;\n      isActive.current = true;\n      e.stopPropagation();\n      function onMouseUp(e: MouseEvent) {\n        e.stopPropagation();\n\n        if (isActive.current) {\n          const x = e.clientX - positionRef.current.relativeX;\n          positionRef.current = { relativeX: x, x };\n          setPosition({ x, action: 'end' });\n          isActive.current = false;\n        }\n\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n      }\n      function onMouseMove(e: MouseEvent) {\n        e.stopPropagation();\n\n        if (isActive.current) {\n          setPosition({\n            x: e.clientX - positionRef.current.relativeX,\n            action: 'move',\n          });\n        }\n      }\n\n      window.addEventListener('mousemove', onMouseMove);\n      window.addEventListener('mouseup', onMouseUp);\n    },\n    [],\n  );\n\n  return {\n    onMouseDown,\n    position,\n    previousPosition: positionRef.current.x,\n    isActive: isActive.current,\n    anchor,\n  };\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { CSSProperties, useEffect } from 'react';\n\nimport { Position, ResizerProps } from './Resizer';\nimport useDraggable, { Anchor, Draggable } from './useDraggable';\n\nconst anchorStyle: CSSProperties = {\n  marginLeft: '5px',\n  width: '2px',\n  height: '100%',\n  pointerEvents: 'none',\n  position: 'relative',\n};\nconst styles = {\n  container: (position: number) => css`\n    position: absolute;\n    height: 100%;\n    width: 10px;\n    left: -5px;\n    cursor: e-resize;\n    transform: translateX(${position}px);\n    user-select: none;\n    z-index: 99999999;\n\n    &:hover {\n      div {\n        background-color: red;\n      }\n    }\n  `,\n\n  content: (anchorSide: Anchor | '', left: Draggable, right: Draggable) => {\n    const width = right.previousPosition - left.previousPosition;\n\n    const baseCss = css`\n      position: absolute;\n      width: ${width}px;\n      overflow: hidden;\n    `;\n    if (right.position.action === 'move' || left.position.action === 'move') {\n      const scale = (right.position.x - left.position.x) / width;\n      if (anchorSide === 'RIGHT') {\n        return [\n          baseCss,\n          css`\n            transform: translateX(${left.position.x}px) scaleX(${scale});\n            transform-origin: left center;\n          `,\n        ];\n      } else if (anchorSide === 'LEFT') {\n        return css([\n          baseCss,\n          css`\n            transform: translateX(${left.position.x}px) scaleX(${scale});\n            transform-origin: left center;\n          `,\n        ]);\n      }\n    } else {\n      return css([\n        baseCss,\n        css`\n          transform: translateX(${left.position.x}px);\n        `,\n      ]);\n    }\n  },\n};\n\nexport default function DivResizer(props: ResizerProps) {\n  const {\n    children,\n    initialPosition = { x1: 10, x2: 40 },\n    onStart,\n    onMove,\n    onEnd,\n  } = props;\n\n  const right = useDraggable({\n    x: initialPosition.x2,\n    anchor: 'RIGHT',\n  });\n  const left = useDraggable({\n    x: initialPosition.x1,\n    anchor: 'LEFT',\n  });\n\n  const anchor = left.isActive\n    ? left.anchor\n    : right.isActive\n    ? right.anchor\n    : '';\n\n  useEffect(() => {\n    const position: Position = { x1: left.position.x, x2: right.position.x };\n    const status = left.isActive\n      ? left.position.action\n      : right.isActive\n      ? right.position.action\n      : '';\n    switch (status) {\n      case 'start':\n        onStart?.(position);\n        break;\n      case 'move':\n        onMove?.(position);\n        break;\n      case 'end':\n        onEnd?.(position);\n        break;\n      default:\n        break;\n    }\n  }, [left, onEnd, onMove, onStart, right]);\n\n  return (\n    <>\n      <div\n        data-no-export=\"true\"\n        onMouseDown={right.onMouseDown}\n        css={styles.container(right.position.x)}\n      >\n        <div style={anchorStyle} />\n      </div>\n      <div css={styles.content(anchor, left, right)}>\n        {typeof children === 'function'\n          ? children?.(left.position.x, right.position.x)\n          : children}\n      </div>\n      <div\n        data-no-export=\"true\"\n        onMouseDown={left.onMouseDown}\n        css={styles.container(left.position.x)}\n      >\n        <div style={anchorStyle} />\n      </div>\n    </>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { CSSProperties, useEffect, MouseEventHandler } from 'react';\n\nimport { Position, ResizerProps } from './Resizer';\nimport useDraggable from './useDraggable';\n\nconst anchorStyle: CSSProperties = {\n  width: '2px',\n  height: '100%',\n  pointerEvents: 'none',\n  fill: 'transparent',\n};\nconst styles = {\n  container: (position: number) => css`\n    transform: translateX(${position}px);\n\n    &:hover {\n      rect:last-child {\n        fill: red !important;\n      }\n    }\n  `,\n  innerContainer: css`\n    position: absolute;\n    height: 100%;\n    fill: transparent;\n    width: 10px;\n    cursor: e-resize;\n    user-select: none;\n    z-index: 99999999;\n  `,\n};\n\nexport default function SVGResizer(props: ResizerProps) {\n  const {\n    children,\n    initialPosition = { x1: 10, x2: 40 },\n    onStart,\n    onMove,\n    onEnd,\n  } = props;\n\n  const right = useDraggable({\n    x: initialPosition.x2,\n    anchor: 'RIGHT',\n  });\n  const left = useDraggable({\n    x: initialPosition.x1,\n    anchor: 'LEFT',\n  });\n\n  useEffect(() => {\n    const position: Position = { x1: left.position.x, x2: right.position.x };\n    const status = left.isActive\n      ? left.position.action\n      : right.isActive\n      ? right.position.action\n      : '';\n    switch (status) {\n      case 'start':\n        onStart?.(position);\n        break;\n      case 'move':\n        onMove?.(position);\n        break;\n      case 'end':\n        onEnd?.(position);\n        break;\n      default:\n        break;\n    }\n  }, [left, onEnd, onMove, onStart, right]);\n\n  return (\n    <g\n      style={{\n        transform: `translateX(${left.position.x}px)`,\n      }}\n    >\n      {typeof children === 'function'\n        ? children(left.position.x, right.position.x)\n        : children}\n      <SVGResizerHandle onMouseDown={left.onMouseDown} position={0} />\n      <SVGResizerHandle\n        onMouseDown={right.onMouseDown}\n        position={right.position.x - left.position.x}\n      />\n    </g>\n  );\n}\n\nfunction SVGResizerHandle(props: {\n  onMouseDown: MouseEventHandler<SVGGElement>;\n  position: number;\n}) {\n  return (\n    <g\n      onMouseDown={props.onMouseDown}\n      css={styles.container(props.position)}\n      data-no-export=\"true\"\n    >\n      <rect x=\"-5px\" css={styles.innerContainer} />\n      <rect x=\"-2.5px\" style={anchorStyle} />\n    </g>\n  );\n}\n","import { ReactFragment } from 'react';\n\nimport DivResizer from './DivResizer';\nimport SVGResizer from './SVGResizer';\n\nexport interface Position {\n  x1: number;\n  x2: number;\n}\n\ntype ChildType =\n  | Array<React.ReactElement>\n  | React.ReactElement\n  | ReactFragment\n  | boolean\n  | null;\n\nexport interface ResizerProps {\n  children?: ChildType | ((x1: number, x2: number) => ChildType);\n  initialPosition?: Position;\n  position?: Position;\n  onStart?: PositionChangeHandler;\n  onMove?: PositionChangeHandler;\n  onEnd?: PositionChangeHandler;\n  tag?: 'div' | 'svg';\n}\n\ntype PositionChangeHandler = (data: Position) => void;\n\nexport default function Resizer(props: ResizerProps) {\n  const { tag = 'div', ...resProps } = props;\n  if (tag === 'div') {\n    return <DivResizer {...resProps} />;\n  } else {\n    return <SVGResizer {...resProps} />;\n  }\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport { useScaleChecked } from '../context/ScaleContext';\nimport Resizer from '../elements/resizer/Resizer';\nimport { HighlightedSource, useHighlight } from '../highlight/index';\nimport { RESIZE_INTEGRAL } from '../reducer/types/Types';\n\nconst stylesOnHover = css`\n  pointer-events: bounding-box;\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  .highlight {\n    fill: transparent;\n  }\n  .target {\n    visibility: hidden;\n  }\n`;\n\nconst stylesHighlighted = css`\n  pointer-events: bounding-box;\n\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  fill: #ff6f0057;\n\n  .target {\n    visibility: visible;\n  }\n`;\n\ninterface IntegralResizableProps {\n  integralData: {\n    id: string;\n    from: number;\n    to: number;\n    integral?: number;\n  };\n}\n\nfunction IntegralResizable({ integralData }: IntegralResizableProps) {\n  const { height, margin } = useChartData();\n  const { scaleX } = useScaleChecked();\n  const dispatch = useDispatch();\n  const { id, from, to, integral } = integralData;\n  const highlight = useHighlight([id], {\n    type: HighlightedSource.INTEGRAL,\n    extra: { id },\n  });\n\n  const handleOnStopResizing = useCallback(\n    (position) => {\n      dispatch({\n        type: RESIZE_INTEGRAL,\n        payload: {\n          data: {\n            ...integralData,\n            from: scaleX().invert(position.x2),\n            to: scaleX().invert(position.x1),\n          },\n        },\n      });\n    },\n    [dispatch, integralData, scaleX],\n  );\n\n  const handleOnEnterNotation = useCallback(() => {\n    highlight.show();\n  }, [highlight]);\n\n  const handleOnMouseLeaveNotation = useCallback(() => {\n    highlight.hide();\n  }, [highlight]);\n\n  const x0 = from ? scaleX()(from) : 0;\n  const x1 = to ? scaleX()(to) : 0;\n\n  return (\n    <g\n      css={highlight.isActive ? stylesHighlighted : stylesOnHover}\n      onMouseEnter={handleOnEnterNotation}\n      onMouseLeave={handleOnMouseLeaveNotation}\n    >\n      <Resizer\n        tag=\"svg\"\n        initialPosition={{ x1: x1, x2: x0 }}\n        onEnd={handleOnStopResizing}\n      >\n        {(x1, x2) => (\n          <g>\n            <rect\n              x=\"0\"\n              y=\"0\"\n              width={x2 - x1}\n              height={height - margin.bottom}\n              className=\"highlight\"\n              data-no-export=\"true\"\n            />\n            <text\n              x={0}\n              y={height - margin.bottom + 30}\n              fill=\"black\"\n              style={{ fontSize: '12px', fontWeight: 'bold' }}\n            >\n              {integral !== undefined ? integral.toFixed(2) : ''}\n            </text>\n          </g>\n        )}\n      </Resizer>\n    </g>\n  );\n}\n\nexport default IntegralResizable;\n","import { useMemo } from 'react';\n\nimport { usePreferences } from '../context/PreferencesContext';\nimport useIntegralPath from '../hooks/useIntegralPath';\nimport { integralDefaultValues } from '../panels/extra/preferences/defaultValues';\nimport { getValue } from '../utility/LocalStorage';\n\nimport IntegralResizable from './IntegralResizable';\n\ninterface IntegralProps {\n  integral: { id: string; from: number; to: number; integral?: number };\n  isActive: boolean;\n}\n\nfunction Integral({ integral, isActive }: IntegralProps) {\n  const preferences = usePreferences();\n  const path = useIntegralPath(integral);\n\n  const integralSettings = useMemo(() => {\n    let {\n      color = integralDefaultValues.color,\n      strokeWidth = integralDefaultValues.strokeWidth,\n    } = getValue(preferences.current, 'formatting.panels.integrals') || {};\n    return { color, strokeWidth };\n  }, [preferences]);\n\n  return (\n    <g>\n      <path\n        className=\"line\"\n        stroke={integralSettings.color}\n        strokeWidth={integralSettings.strokeWidth}\n        fill=\"none\"\n        style={{\n          opacity: isActive ? 1 : 0.2,\n        }}\n        d={path}\n      />\n\n      <IntegralResizable integralData={integral} />\n    </g>\n  );\n}\n\nexport default Integral;\n","import { useMemo } from 'react';\n\nimport { isSpectrum1D } from '../../data/data1d/Spectrum1D';\nimport { useChartData } from '../context/ChartContext';\n\nimport Integral from './Integral';\n\nfunction IntegralsSeries() {\n  const { xDomains, activeSpectrum, data, displayerKey } = useChartData();\n\n  const Integrals = useMemo(() => {\n    const isActive = (id) => {\n      return activeSpectrum === null\n        ? true\n        : id === activeSpectrum.id\n        ? true\n        : false;\n    };\n\n    return (\n      <g className=\"integrals\">\n        {data?.[0] &&\n          data\n            .filter((d) => d.display.isVisible === true && xDomains[d.id])\n            .filter(isSpectrum1D)\n            .map((spectrum) =>\n              spectrum.integrals.values.map((integral) => (\n                <Integral\n                  key={integral.id}\n                  integral={integral}\n                  isActive={isActive(spectrum.id)}\n                />\n              )),\n            )}\n      </g>\n    );\n  }, [activeSpectrum, data, xDomains]);\n\n  return <g clipPath={`url(#${displayerKey}clip-chart-1d)`}>{Integrals}</g>;\n}\n\nexport default IntegralsSeries;\n","import { CSSProperties, useMemo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\nimport { useScaleChecked } from '../context/ScaleContext';\nimport useActiveSpectrumStyleOptions from '../hooks/useActiveSpectrumStyleOptions';\nimport useXYReduce, { XYReducerDomainAxis } from '../hooks/useXYReduce';\nimport { PathBuilder } from '../utility/PathBuilder';\n\nimport getVerticalShift from './utilities/getVerticalShift';\n\ninterface LineProps {\n  data?: {\n    x: Array<number>;\n    y: Array<number>;\n  };\n  id: string;\n  display: {\n    color: CSSProperties['stroke'];\n  };\n  index: number;\n}\n\nfunction Line({ data, id, display, index }: LineProps) {\n  const { verticalAlign } = useChartData();\n  const { scaleX, scaleY } = useScaleChecked();\n  const xyReduce = useXYReduce(XYReducerDomainAxis.XAxis);\n  const { opacity } = useActiveSpectrumStyleOptions(id);\n\n  const vAlign = useMemo(() => {\n    return getVerticalShift(verticalAlign, { index });\n  }, [index, verticalAlign]);\n\n  const paths = useMemo(() => {\n    const _scaleX = scaleX();\n    const _scaleY = scaleY(id);\n\n    const pathBuilder = new PathBuilder();\n    if (data?.x && data?.y && _scaleX(0)) {\n      const pathPoints = xyReduce(data);\n\n      pathBuilder.moveTo(_scaleX(pathPoints.x[0]), _scaleY(pathPoints.y[0]));\n      for (let i = 1; i < pathPoints.x.length; i++) {\n        pathBuilder.lineTo(_scaleX(pathPoints.x[i]), _scaleY(pathPoints.y[i]));\n      }\n\n      return pathBuilder.toString();\n    } else {\n      return '';\n    }\n  }, [scaleX, scaleY, id, data, xyReduce]);\n\n  return (\n    <path\n      className=\"line\"\n      data-test-id=\"spectrum-line\"\n      key={id}\n      stroke={display.color}\n      fill=\"none\"\n      style={{\n        opacity,\n      }}\n      d={paths}\n      transform={`translate(0,-${vAlign})`}\n    />\n  );\n}\n\nexport default Line;\n","import { get1DDataXY } from '../../data/data1d/Spectrum1D/get1DDataXY';\nimport { useChartData } from '../context/ChartContext';\n\nimport Line from './Line';\n\nfunction LinesSeries() {\n  const { data, tempData, displayerKey, xDomains } = useChartData();\n  const _data = tempData ? tempData : data;\n\n  return (\n    <g clipPath={`url(#${displayerKey}clip-chart-1d)`} className=\"spectrums\">\n      {_data\n        ?.filter((d) => d.display.isVisible === true && xDomains[d.id])\n        .map((d, i) => (\n          <Line key={d.id} {...d} data={get1DDataXY(d)} index={i} />\n        ))}\n    </g>\n  );\n}\n\nexport default LinesSeries;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  useRef,\n  useState,\n  useCallback,\n  useLayoutEffect,\n  useEffect,\n  useMemo,\n} from 'react';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport { HighlightedSource, useHighlight } from '../highlight';\nimport { SHIFT_SPECTRUM } from '../reducer/types/Types';\nimport { useFormatNumberByNucleus } from '../utility/FormatNumber';\n\nconst styles = css`\n  input {\n    -webkit-user-select: text; /* Safari 3.1+ */\n    -moz-user-select: text; /* Firefox 2+ */\n    -ms-user-select: text; /* IE 10+ */\n    user-select: text; /* Standard syntax */\n  }\n\n  input[type='number']::-webkit-outer-spin-button,\n  input[type='number']::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  .notification-input-normal {\n    opacity: 1;\n    left: 4px;\n    position: fixed;\n    font-size: 10px;\n    outline: none;\n    background-color: transparent;\n  }\n\n  .notification-input-normal input:focus {\n    outline: none;\n    background-color: white;\n  }\n\n  .input-over {\n    background-color: white;\n    outline: none;\n  }\n`;\n\ninterface PeakAnnotationProps {\n  id: string;\n  x: number;\n  y: number;\n  sign: number;\n  color: string;\n  isActive: boolean;\n  value: number;\n  nucleus: string;\n}\n\nfunction PeakAnnotation({\n  id,\n  x,\n  y,\n  sign, // 1 positive -1 negative\n  value,\n  color,\n  isActive,\n  nucleus,\n}: PeakAnnotationProps) {\n  const refText = useRef<SVGTextElement>(null);\n  const [isSelected, setIsSelected] = useState(false);\n  const [_value, setValue] = useState(value);\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 });\n  const format = useFormatNumberByNucleus(nucleus);\n  const highlight = useHighlight([id], {\n    type: HighlightedSource.PEAK,\n    extra: { id },\n  });\n\n  const dispatch = useDispatch();\n\n  const handleOnPeakChange = useCallback(\n    (e) => dispatch({ type: SHIFT_SPECTRUM, shiftValue: e.shiftValue }),\n    [dispatch],\n  );\n\n  useLayoutEffect(() => {\n    const textBox = refText.current?.getBBox();\n    setContainerSize({\n      width: textBox?.width || 0,\n      height: textBox?.height || 0,\n    });\n  }, [isSelected]);\n\n  useEffect(() => {\n    setValue(value);\n  }, [value]);\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        const newValue = event.currentTarget.valueAsNumber;\n        if (!isNaN(newValue)) {\n          const shiftValue = newValue - value;\n\n          handleOnPeakChange({\n            id,\n            value: newValue,\n            oldValue: value,\n            shiftValue: shiftValue,\n          });\n\n          event.currentTarget.blur();\n          setIsSelected(false);\n        }\n      } else if (event.key === 'Escape') {\n        setValue(value);\n        event.currentTarget.blur();\n        setIsSelected(false);\n      }\n    },\n    [value, handleOnPeakChange, id],\n  );\n\n  const handleChange = useCallback((event) => {\n    setValue(event.target.value);\n  }, []);\n\n  const handleSelectPeakAnnotation = useCallback((e) => {\n    e.stopPropagation();\n    setIsSelected(true);\n    return false;\n  }, []);\n\n  const handleOnEnterNotation = useCallback(() => {\n    highlight.show();\n  }, [highlight]);\n\n  const handleOnMouseLeaveNotation = useCallback(() => {\n    highlight.hide();\n  }, [highlight]);\n\n  const newValue = useMemo(\n    () => (isSelected ? value : format(value)),\n    [format, isSelected, value],\n  );\n  const oldValue = useMemo(\n    () => (isSelected ? _value : format(_value)),\n    [_value, format, isSelected],\n  );\n\n  return (\n    <g\n      css={styles}\n      id={id}\n      style={{ outline: 'none' }}\n      transform={`translate(${x}, ${y})`}\n      onMouseEnter={handleOnEnterNotation}\n      onMouseLeave={handleOnMouseLeaveNotation}\n    >\n      <line\n        x1=\"0\"\n        x2=\"0\"\n        y1={sign === -1 ? 10 : 0}\n        y2={sign === -1 ? 28 : -18}\n        stroke={color}\n        strokeWidth={highlight.isActive ? '7px' : '1px'}\n      />\n      <text\n        ref={refText}\n        className=\"peaks-text\"\n        x=\"0\"\n        y={sign === -1 ? 28 : -12}\n        dy=\"0\"\n        dx=\"0.35em\"\n        fill=\"transparent\"\n        fontSize=\"10px\"\n        fontWeight=\"100\"\n        style={{\n          position: 'absolute',\n        }}\n      >\n        {newValue}\n      </text>\n      <foreignObject\n        x=\"0\"\n        y={sign === -1 ? 16 : -22}\n        dy=\"0.1em\"\n        dx=\"0.35em\"\n        width={containerSize.width + 20}\n        height=\"40px\"\n        data-no-export=\"true\"\n      >\n        <div\n          style={{\n            width: containerSize.width + 20,\n            height: '100%',\n            paddingRight: 5,\n          }}\n        >\n          <input\n            onClick={handleSelectPeakAnnotation}\n            className={isSelected ? 'input-over' : 'notification-input-normal'}\n            style={{\n              width: 'inherit',\n              border: isSelected ? `1px solid ${color}` : `0`,\n              opacity: isActive ? 1 : 0.2,\n              userSelect: 'none',\n              color: color,\n            }}\n            value={oldValue}\n            onKeyDown={handleKeyDown}\n            onChange={handleChange}\n            type=\"number\"\n            disabled={!isActive}\n          />\n        </div>\n      </foreignObject>\n    </g>\n  );\n}\n\nexport default PeakAnnotation;\n","import { useMemo } from 'react';\n\nimport { isSpectrum1D } from '../../data/data1d/Spectrum1D';\nimport { useChartData } from '../context/ChartContext';\nimport { useScaleChecked } from '../context/ScaleContext';\n\nimport PeakAnnotation from './PeakAnnotation';\nimport getVerticalShift from './utilities/getVerticalShift';\n\nfunction PeakAnnotations() {\n  const { data, activeSpectrum, verticalAlign, displayerKey, xDomains } =\n    useChartData();\n  const { scaleX, scaleY } = useScaleChecked();\n\n  const Peaks = useMemo(() => {\n    const getVerticalAlign = (id) => {\n      const index = data.findIndex((d) => d.id === id);\n      return getVerticalShift(verticalAlign, { index });\n    };\n\n    const reSortData = () => {\n      const _data = [...data];\n      return activeSpectrum\n        ? _data.sort((x, y) => {\n            return x.id === activeSpectrum.id\n              ? 1\n              : y.id === activeSpectrum.id\n              ? -1\n              : 0;\n          })\n        : _data;\n    };\n\n    return (\n      data &&\n      reSortData()\n        .filter((d) => d.display.isVisible === true && xDomains[d.id])\n        .filter(isSpectrum1D)\n        .map((d) => {\n          return (\n            d.peaks?.values &&\n            d.display.isPeaksMarkersVisible && (\n              <g\n                key={d.id}\n                transform={`translate(0,-${getVerticalAlign(d.id)})`}\n              >\n                {d.peaks.values.map(({ x, y, id }) => (\n                  <PeakAnnotation\n                    key={id}\n                    x={scaleX()(x)}\n                    y={scaleY(d.id)(y) - 5}\n                    sign={Math.sign(y)}\n                    id={id}\n                    value={x}\n                    color=\"#730000\"\n                    nucleus={d.info.nucleus}\n                    isActive={\n                      activeSpectrum == null\n                        ? false\n                        : activeSpectrum.id === d.id\n                        ? true\n                        : false\n                    }\n                  />\n                ))}\n              </g>\n            )\n          );\n        })\n    );\n  }, [data, verticalAlign, activeSpectrum, xDomains, scaleX, scaleY]);\n\n  return (\n    <g className=\"peaks\" clipPath={`url(#${displayerKey}clip-chart-1d)`}>\n      {Peaks}\n    </g>\n  );\n}\n\nexport default PeakAnnotations;\n","import { extent } from 'd3';\nimport { rangesToXY } from 'nmr-processing';\n\nimport { Datum1D } from '../../data/types/data1d';\nimport { useChartData } from '../context/ChartContext';\nimport { useScaleChecked } from '../context/ScaleContext';\nimport { HighlightedSource, useHighlightData } from '../highlight';\nimport useSpectrum from '../hooks/useSpectrum';\n\nimport { getYScale } from './utilities/scale';\n\nconst emptyData = { info: { originFrequency: 400 } };\n\nfunction ResurrectedDatabaseRanges() {\n  const { displayerKey, verticalAlign, height, margin } = useChartData();\n  const { info } = useSpectrum(emptyData) as Datum1D;\n  const { highlight } = useHighlightData();\n  const { scaleX } = useScaleChecked();\n\n  if (highlight.sourceData?.type !== HighlightedSource.DATABASE) {\n    return null;\n  }\n\n  const fullHeight = height - margin.bottom;\n  const blockHight = fullHeight / 4;\n\n  const { ranges } = highlight.sourceData.extra || [];\n\n  let yDomain: any[] = [0, 0];\n\n  const spectra = ranges.map((range) => {\n    const { from, to } = range;\n    const diff = Math.abs(from - to) / 2;\n    const newForm = from - diff;\n    const newTo = to + diff;\n    const data = rangesToXY([range], {\n      frequency: info.originFrequency,\n      from: newForm,\n      to: newTo,\n      nbPoints: 256,\n    });\n    //calculate y domain\n    const domain = extent(data.y) as number[];\n    yDomain[0] = domain[0] < yDomain[0] ? domain[0] : yDomain[0];\n    yDomain[1] = domain[1] > yDomain[1] ? domain[1] : yDomain[1];\n\n    return { data, from: newForm, to: newTo };\n  }, []);\n\n  const scaleY = getYScale({\n    height: blockHight,\n    margin: { top: 0, bottom: 0 },\n    verticalAlign,\n    yDomain,\n  });\n\n  const paths = spectra.map(({ data: { x, y }, from, to }) => {\n    let path = `M ${scaleX()(x[0])} ${scaleY(y[0])} `;\n    path += x.slice(1).reduce((accumulator, point, i) => {\n      accumulator += ` L ${scaleX()(point)} ${scaleY(y[i + 1])}`;\n      return accumulator;\n    }, '');\n    return { path, from, to };\n  }, []);\n\n  return (\n    <g\n      clipPath={`url(#${displayerKey}clip-chart-1d)`}\n      className=\"resurrected-database-ranges\"\n      width=\"100%\"\n      height=\"100%\"\n    >\n      {paths.map(({ path, from, to }, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <g key={`${index}`}>\n          <g transform={`translate(${scaleX()(to)},0)`}>\n            <rect\n              x=\"0\"\n              width={Math.abs(scaleX()(to) - scaleX()(from))}\n              height=\"100%\"\n              fill=\"#ff6f0057\"\n            />\n          </g>\n          <path\n            transform={`translate(0,${fullHeight - blockHight * 2})`}\n            stroke=\"black\"\n            fill=\"none\"\n            d={path}\n          />\n        </g>\n      ))}\n    </g>\n  );\n}\n\nexport default ResurrectedDatabaseRanges;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport * as d3 from 'd3';\nimport { useEffect, useRef } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\nimport { useScale } from '../context/ScaleContext';\n\nconst axisStyles = css`\n  user-select: none;\n\n  path,\n  line {\n    fill: none;\n    stroke: black;\n    stroke-width: 1;\n    shape-rendering: crispEdges;\n    user-select: none;\n  }\n`;\n\nconst gridStyles = css`\n  user-select: none;\n\n  line {\n    stroke: rgb(104, 104, 104);\n    stroke-opacity: 0.2;\n    shape-rendering: crispEdges;\n    stroke-dasharray: 3;\n    stroke-width: 1;\n    user-select: none;\n  }\n\n  path {\n    stroke-width: 0;\n  }\n`;\n\ninterface XAxisProps {\n  show?: boolean;\n  showGrid?: boolean;\n  mode?: string;\n  label?: string;\n}\n\nfunction XAxis(props: XAxisProps) {\n  const { show = true, showGrid = false, mode, label: labelProp } = props;\n  const { xDomain, height, width, margin } = useChartData();\n  const { scaleX } = useScale();\n\n  const refAxis = useRef<SVGGElement>(null);\n  const refGrid = useRef<SVGGElement>(null);\n\n  const label = labelProp ? labelProp : mode === 'RTL' ? 'δ [ppm]' : 'time [s]';\n\n  useEffect(() => {\n    if (!show || !scaleX) return;\n\n    const xAxis = d3\n      .axisBottom(scaleX().domain(xDomain))\n      .ticks(8)\n      .tickFormat(d3.format('0'));\n\n    const grid = d3\n      .axisBottom(scaleX().domain(xDomain))\n      .ticks(50)\n      .tickSize(-(height - margin.top - margin.bottom))\n      .tickFormat(() => '');\n\n    // @ts-expect-error This line of code is actually well typed ...\n    d3.select(refAxis.current).call(xAxis);\n\n    // @ts-expect-error ditto\n    d3.select(refGrid.current).call(grid);\n  }, [height, margin.bottom, margin.top, scaleX, show, xDomain]);\n\n  if (!width || !height || !scaleX) {\n    return null;\n  }\n\n  return (\n    <>\n      {show && (\n        <g\n          className=\"x\"\n          css={axisStyles}\n          transform={`translate(0,${height - margin.bottom})`}\n          ref={refAxis}\n        >\n          <text fill=\"#000\" x={width - 10} y=\"30\" dy=\"0.70em\" textAnchor=\"end\">\n            {label}\n          </text>\n        </g>\n      )}\n      {showGrid && (\n        <g\n          css={gridStyles}\n          className=\"grid\"\n          ref={refGrid}\n          transform={`translate(0,${height - margin.bottom})`}\n        />\n      )}\n    </>\n  );\n}\n\nexport default XAxis;\n","import { Jcoupling } from 'nmr-processing';\n\nimport { Range, Signal1D } from '../../types/data1d';\nimport generateID from '../../utilities/generateID';\n/**\n * Links object that use coupling as key and value is an array of objects {id:signal id ,x:signal delta,y:coupling}\n */\n\ninterface Coupling {\n  coupling: number;\n  delta: number;\n}\n\nexport interface CouplingLink {\n  id: string;\n  couplings: Coupling[];\n  from: number;\n  to: number;\n}\n\ninterface GenerateJGraphDataResult {\n  signals: Signal1D[];\n  jCouplingMax: number;\n  links: CouplingLink[];\n}\n\nexport default function generateJGraphData(\n  ranges: Range[],\n  jGraphTolerance: number,\n): GenerateJGraphDataResult | null {\n  if (!ranges && !Array.isArray(ranges)) return null;\n\n  let signals: Signal1D[] = [];\n  let jCouplingMax = 0;\n  let links: CouplingLink[] = createLinks(ranges, jGraphTolerance);\n  for (const range of ranges) {\n    for (const signal of range.signals) {\n      const { id: signalId, ...restSignal } = signal;\n\n      if (restSignal.js) {\n        signals.push({ id: `${range.id}${signalId}`, ...restSignal });\n        const tempMax = getJsCouplingMax(restSignal.js);\n        jCouplingMax = tempMax > jCouplingMax ? tempMax : jCouplingMax;\n      }\n    }\n  }\n\n  return { signals, jCouplingMax, links };\n}\n\nfunction getJsCouplingMax(js: Jcoupling[]): number {\n  let max = -Infinity;\n  for (const { coupling } of js) {\n    max = coupling > max ? coupling : max;\n  }\n  return max;\n}\n\nfunction getCouplings(ranges: Range[]): Coupling[] {\n  const couplings: Coupling[] = [];\n  for (let range of ranges) {\n    for (const { delta, js } of range.signals) {\n      for (const { coupling } of js || []) {\n        couplings.push({ coupling, delta });\n      }\n    }\n  }\n  return couplings;\n}\n\nfunction initLink(coupling: Coupling): CouplingLink {\n  const { delta } = coupling;\n  return {\n    id: generateID(),\n    from: delta,\n    to: delta,\n    couplings: [coupling],\n  };\n}\n\nfunction createLinks(ranges: Range[], jGraphTolerance = 0) {\n  const couplings = getCouplings(ranges).sort(\n    (a, b) => a.coupling - b.coupling,\n  );\n\n  if (!couplings || couplings.length === 0) return [];\n\n  const links: CouplingLink[] = [initLink(couplings[0])];\n\n  let index = 0;\n  let start = index;\n  let end = 1;\n\n  while (end < couplings.length) {\n    const nextCoupling = couplings[end];\n    if (\n      Math.abs(couplings[start].coupling - nextCoupling.coupling) <\n      jGraphTolerance\n    ) {\n      links[index].couplings.push(nextCoupling);\n\n      if (nextCoupling.delta > links[index].to) {\n        links[index].to = nextCoupling.delta;\n      } else if (nextCoupling.delta < links[index].from) {\n        links[index].from = nextCoupling.delta;\n      }\n\n      end++;\n    } else {\n      if (\n        Math.abs(couplings[end - 1].coupling - nextCoupling.coupling) <\n        jGraphTolerance\n      ) {\n        start = end - 1;\n      } else {\n        index++;\n        links[index] = initLink(couplings[end]);\n        start = end;\n        end = end + 1;\n      }\n    }\n  }\n\n  return links;\n}\n","import { ScaleLinear } from 'd3';\nimport { useContext, createContext } from 'react';\n\ninterface JGraphState {\n  scaleY: ScaleLinear<number, number, never> | null;\n  height: number;\n  maxValue: number;\n}\n\nconst JGraphContext = createContext<JGraphState>({\n  scaleY: null,\n  height: 0,\n  maxValue: 0,\n});\n\nexport const JGraphContextProvider = JGraphContext.Provider;\n\nexport function useJGraph() {\n  const jGraphState = useContext(JGraphContext);\n  if (!jGraphState.scaleY) {\n    throw new Error('scale cannot be null');\n  }\n\n  return jGraphState;\n}\n","import { ScaleLinear } from 'd3';\nimport { forwardRef, useRef, MutableRefObject } from 'react';\nimport { useLinearPrimaryTicks } from 'react-d3-utils';\n\ninterface BaseAxis {\n  x: number;\n  y: number;\n}\ninterface ScaleAxis {\n  scale: ScaleLinear<number, number>;\n}\n\ninterface Vertical {\n  height: number;\n  showGrid?: false;\n}\n\ninterface VerticalGrid {\n  height: number;\n  showGrid: true;\n  width: number;\n}\n\ninterface Ticks {\n  label: string;\n  position: number;\n}\n\ninterface TickAxis {\n  ticks: Ticks[];\n  // eslint-disable-next-line react/no-unused-prop-types\n  ref: MutableRefObject<SVGGElement | null>;\n}\n\ntype VerticalAxisProps = BaseAxis & (Vertical | VerticalGrid) & ScaleAxis;\ntype VerticalRenderProps = BaseAxis & (Vertical | VerticalGrid) & TickAxis;\n\nconst VerticalAxis = forwardRef<SVGGElement | null, VerticalRenderProps>(\n  (props, ref) => {\n    const { x, y, height, showGrid, ticks } = props;\n    return (\n      <g ref={ref} transform={`translate(${x}, ${y})`}>\n        <line y2={height} x1={15} x2={15} stroke=\"black\" />\n        {ticks.map(({ label, position }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <g key={index + label + position}>\n            {showGrid && props.width && (\n              <line\n                y1={position}\n                y2={position}\n                x1={15}\n                x2={props.width - x}\n                stroke=\"lightgray\"\n              />\n            )}\n            <line y1={position} y2={position} x1={15} x2={10} stroke=\"black\" />\n            <text y={position} dominantBaseline=\"middle\" textAnchor=\"end\">\n              {label}\n            </text>\n          </g>\n        ))}\n      </g>\n    );\n  },\n);\n\nexport function LinearVerticalAxis(props: VerticalAxisProps) {\n  const { scale, ...other } = props;\n  const ref = useRef<SVGGElement>(null);\n  const ticks = useLinearPrimaryTicks(scale, 'vertical', ref);\n  return <VerticalAxis {...other} ticks={ticks} ref={ref} />;\n}\n","import { useChartData } from '../../context/ChartContext';\nimport { LinearVerticalAxis } from '../../elements/linearAxis/LinearVerticalAxis';\n\nimport { useJGraph } from './JGraphContext';\n\nexport function JGraphVerticalAxis() {\n  const { width, margin } = useChartData();\n  const { height, scaleY } = useJGraph();\n\n  if (!scaleY) return null;\n\n  return (\n    <svg style={{ overflow: 'visible' }} height={height + 20} width={60}>\n      <LinearVerticalAxis\n        x={20}\n        y={0}\n        scale={scaleY}\n        height={height}\n        showGrid\n        width={width - margin.right}\n      />\n    </svg>\n  );\n}\n","import { useCallback } from 'react';\n\nimport { CouplingLink } from '../../../data/data1d/Spectrum1D/generateJGraphData';\nimport { useScaleChecked } from '../../context/ScaleContext';\n\nimport { useJGraph } from './JGraphContext';\n\ninterface JsCouplingLinksProps {\n  links: CouplingLink[];\n}\n\nexport default function JsCouplingLinks(props: JsCouplingLinksProps) {\n  const { links } = props;\n  const { scaleX } = useScaleChecked();\n  const { scaleY, maxValue } = useJGraph();\n  const generatePath = useCallback(\n    (link: CouplingLink): string => {\n      if (!scaleY) return '';\n\n      const { from, to, couplings } = link;\n      let paths: string[] = [];\n      for (const coupling of couplings) {\n        paths.push(\n          `M${scaleX()(from)},${scaleY(coupling.coupling)} L${scaleX()(\n            to,\n          )},${scaleY(coupling.coupling)}`,\n        );\n      }\n      return paths.join(' ');\n    },\n    [scaleX, scaleY],\n  );\n\n  return (\n    <g className=\"js-coupling-links\">\n      {links\n        .filter((link) => link.couplings.length > 1)\n        .map((link) => {\n          return (\n            <path\n              key={link.id}\n              d={generatePath(link)}\n              style={{\n                stroke: `hsl(${\n                  (link.couplings[0].coupling * 360) / maxValue\n                },100%,50%)`,\n              }}\n              strokeWidth=\"1\"\n            />\n          );\n        })}\n    </g>\n  );\n}\n","import { useState } from 'react';\n\nimport { useJGraph } from './JGraphContext';\n\ninterface JsCouplingProps {\n  value: number;\n}\n\nexport default function JsCoupling({ value }: JsCouplingProps) {\n  const { scaleY, maxValue } = useJGraph();\n  const [isOver, setOver] = useState<boolean>(false);\n\n  if (!scaleY) return null;\n\n  return (\n    <g\n      className=\"coupling\"\n      style={{ transform: `translate(0px,${scaleY(value)}px)` }}\n    >\n      <circle\n        onMouseEnter={() => setOver(true)}\n        onMouseLeave={() => setOver(false)}\n        cx={0}\n        cy={0}\n        r={4}\n        fill={`hsl(${(value * 360) / maxValue},100%,${isOver ? 45 : 50}%)`}\n        pointerEvents=\"all\"\n      />\n      {isOver && (\n        <g style={{ transform: `translate(0px,15px)` }}>\n          <text\n            pointerEvents=\"none\"\n            stroke=\"white\"\n            strokeWidth=\"0.6em\"\n            fontSize=\"11px\"\n            dominantBaseline=\"middle\"\n            textAnchor=\"end\"\n          >{`${value.toFixed(1)} Hz`}</text>\n          <text\n            pointerEvents=\"none\"\n            stroke=\"black\"\n            fontSize=\"11px\"\n            dominantBaseline=\"middle\"\n            textAnchor=\"end\"\n          >{`${value.toFixed(1)} Hz`}</text>\n        </g>\n      )}\n    </g>\n  );\n}\n","import { Signal1D } from '../../../data/types/data1d';\nimport { useScaleChecked } from '../../context/ScaleContext';\n\nimport { useJGraph } from './JGraphContext';\nimport JsCoupling from './JsCoupling';\n\ninterface JsCouplingsProps {\n  signals: Signal1D[];\n}\n\nexport default function JsCouplings(props: JsCouplingsProps) {\n  const { scaleX } = useScaleChecked();\n  const { height } = useJGraph();\n\n  return (\n    <g className=\"js-coupling\">\n      {props.signals.map((signal) => {\n        return (\n          <g\n            key={signal.id}\n            transform={`translate(${scaleX()(signal.delta)},0)`}\n          >\n            <line\n              x1=\"0\"\n              y1={height}\n              x2=\"0\"\n              y2=\"0\"\n              stroke=\"black\"\n              strokeWidth=\"1\"\n            />\n            {signal.js?.map((j) => {\n              return <JsCoupling key={`${j.coupling}`} value={j.coupling} />;\n            })}\n          </g>\n        );\n      })}\n    </g>\n  );\n}\n","import { scaleLinear } from 'd3';\nimport lodashGet from 'lodash/get';\nimport { memo, useMemo } from 'react';\n\nimport generateJGraphData, {\n  CouplingLink,\n} from '../../../data/data1d/Spectrum1D/generateJGraphData';\nimport { Signal1D } from '../../../data/types/data1d';\nimport { Datum1D } from '../../../data/types/data1d/Datum1D';\nimport { useChartData } from '../../context/ChartContext';\nimport { usePreferences } from '../../context/PreferencesContext';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport { getRangeDefaultValues } from '../../panels/extra/preferences/defaultValues';\n\nimport { JGraphContextProvider } from './JGraphContext';\nimport { JGraphVerticalAxis } from './JGraphVerticalAxis';\nimport JCouplingLinks from './JsCouplingLinks';\nimport JsCouplings from './JsCouplings';\n\nconst marginTop = 50;\n\ninterface innerJGraphProps {\n  signals: Signal1D[];\n  links: CouplingLink[];\n}\n\nfunction InnerJGraph(props: innerJGraphProps) {\n  const { signals, links } = props;\n  return (\n    <g className=\"j-graph\" transform={`translate(0,${marginTop})`}>\n      <JGraphVerticalAxis />\n      <JCouplingLinks links={links} />\n      <JsCouplings signals={signals} />\n    </g>\n  );\n}\n\nconst emptyData = { ranges: {} };\nconst MemoizedJGraph = memo(InnerJGraph);\n\nexport default function JGraph() {\n  const preferences = usePreferences();\n\n  const {\n    height,\n    toolOptions: {\n      data: { showJGraph },\n    },\n    activeTab,\n  } = useChartData();\n\n  const graphHeight = height / 4;\n\n  const { ranges } = useSpectrum(emptyData) as Datum1D;\n\n  const jGraphTolerance = useMemo(() => {\n    const _preferences =\n      lodashGet(\n        preferences.current,\n        `formatting.panels.ranges.[${activeTab}]`,\n      ) || getRangeDefaultValues(activeTab);\n\n    return _preferences.jGraphTolerance;\n  }, [activeTab, preferences]);\n\n  const {\n    signals,\n    jCouplingMax: maxValue,\n    links,\n  } = useMemo(\n    () =>\n      generateJGraphData(ranges.values, jGraphTolerance) || {\n        signals: [],\n        jCouplingMax: 0,\n        links: [],\n      },\n    [jGraphTolerance, ranges.values],\n  );\n\n  const scaleY = useMemo(() => {\n    const maxRange = maxValue + maxValue * 0.1;\n    return scaleLinear().range([graphHeight, 0]).domain([0, maxRange]);\n  }, [graphHeight, maxValue]);\n\n  const JGraphState = useMemo(() => {\n    return { scaleY, height: graphHeight, maxValue };\n  }, [graphHeight, scaleY, maxValue]);\n\n  if (!showJGraph) return null;\n\n  return (\n    <JGraphContextProvider value={JGraphState}>\n      <MemoizedJGraph signals={signals} links={links} />\n    </JGraphContextProvider>\n  );\n}\n","interface DeleteButtonProps {\n  onDelete?: () => void;\n  fill?: string;\n  x: string | number;\n  y: string | number;\n}\n\nfunction DeleteButton(props: DeleteButtonProps) {\n  const {\n    x = 'initial',\n    y = 'initial',\n    onDelete = () => null,\n    fill = '#c81121',\n  } = props;\n\n  return (\n    <svg\n      className=\"delete-button\"\n      x={x}\n      y={y}\n      onClick={onDelete}\n      data-no-export=\"true\"\n    >\n      <rect rx=\"5\" width=\"16\" height=\"16\" fill={fill} />\n      <line x1=\"5\" x2=\"10\" y1=\"8\" y2=\"8\" stroke=\"white\" strokeWidth=\"2\" />\n    </svg>\n  );\n}\n\nexport default DeleteButton;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback } from 'react';\n\nimport { useDispatch } from '../../context/DispatchContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport DeleteButton from '../../elements/DeleteButton';\nimport Resizer from '../../elements/resizer/Resizer';\nimport { useHighlight } from '../../highlight';\nimport {\n  DELETE_ANALYZE_SPECTRA_RANGE,\n  RESIZE_ANALYZE_SPECTRA_RANGE,\n} from '../../reducer/types/Types';\n\nconst styles = {\n  common: css`\n    pointer-events: bounding-box;\n\n    @-moz-document url-prefix() {\n      pointer-events: fill;\n    }\n  `,\n  hover: css`\n    .delete-button {\n      visibility: hidden;\n    }\n  `,\n  Highlighted: css`\n    .range-area {\n      height: 100%;\n      fill: #ff6f0057;\n    }\n    .delete-button {\n      visibility: visible;\n      cursor: pointer;\n    }\n  `,\n};\n\ninterface AnalysisRangeProps {\n  columnKey: string;\n  rangeData: {\n    from: number;\n    to: number;\n  };\n}\n\nfunction AnalysisRange({ rangeData, columnKey }: AnalysisRangeProps) {\n  const { from, to } = rangeData;\n  const highlight = useHighlight([columnKey]);\n  const { scaleX } = useScaleChecked();\n  const dispatch = useDispatch();\n\n  const deleteHandler = useCallback(() => {\n    dispatch({ type: DELETE_ANALYZE_SPECTRA_RANGE, colKey: columnKey });\n  }, [columnKey, dispatch]);\n\n  const resizeEndHandler = useCallback(\n    (resized) => {\n      dispatch({\n        type: RESIZE_ANALYZE_SPECTRA_RANGE,\n        payload: { ...rangeData, ...resized, columnKey },\n      });\n    },\n    [columnKey, dispatch, rangeData],\n  );\n\n  return (\n    <g\n      {...highlight.onHover}\n      css={[\n        styles.common,\n        highlight.isActive ? styles.Highlighted : styles.hover,\n      ]}\n    >\n      <Resizer\n        tag=\"svg\"\n        onEnd={resizeEndHandler}\n        initialPosition={{ x2: scaleX()(from), x1: scaleX()(to) }}\n      >\n        {(x1, x2) => (\n          <>\n            <g transform={`translate(0,25)`}>\n              <rect\n                x=\"0\"\n                width={x2 - x1}\n                height=\"6\"\n                className=\"range-area\"\n                fill=\"green\"\n              />\n              <text\n                textAnchor=\"middle\"\n                x={(x2 - x1) / 2}\n                y=\"-5\"\n                fontSize=\"12\"\n                fill=\"red\"\n                fontWeight=\"bolder\"\n                fillOpacity={highlight.isActive ? 1 : 0.6}\n              >\n                {columnKey}\n              </text>\n            </g>\n            <DeleteButton x={-20} y={10} onDelete={deleteHandler} />\n          </>\n        )}\n      </Resizer>\n    </g>\n  );\n}\n\nexport default AnalysisRange;\n","import { memo, useMemo } from 'react';\n\nimport { SpectraAnalysis } from '../../../data/data1d/MultipleAnalysis';\nimport { useChartData } from '../../context/ChartContext';\n\nimport AnalysisRange from './AnalysisRange';\n\ninterface MultiAnalysisRangesInnerProps {\n  activeTab: string;\n  displayerKey: string;\n  spectraAnalysis: SpectraAnalysis;\n}\n\nfunction MultiAnalysisRangesInner({\n  activeTab,\n  spectraAnalysis,\n  displayerKey,\n}: MultiAnalysisRangesInnerProps) {\n  const columns = useMemo(() => {\n    const {\n      options: { columns },\n    } = spectraAnalysis[activeTab] || {\n      options: { columns: {} },\n    };\n    return columns;\n  }, [activeTab, spectraAnalysis]);\n\n  const ranges = useMemo(() => {\n    return Object.keys(columns).map((key) => key, []);\n  }, [columns]);\n\n  if (!ranges || ranges.length === 0) {\n    return null;\n  }\n\n  return (\n    <g clipPath={`url(#${displayerKey}clip-chart-1d)`}>\n      {ranges.map((columnKey) => (\n        <AnalysisRange\n          key={columnKey}\n          columnKey={columnKey}\n          rangeData={columns[columnKey]}\n        />\n      ))}\n    </g>\n  );\n}\n\nconst MemoizedMultiAnalysisRanges = memo(MultiAnalysisRangesInner);\n\nexport default function MultiAnalysisRanges() {\n  const { activeTab, spectraAnalysis, displayerKey } = useChartData();\n\n  return (\n    <MemoizedMultiAnalysisRanges\n      {...{ activeTab, spectraAnalysis, displayerKey }}\n    />\n  );\n}\n","import { AssignmentContext } from '../AssignmentsContext';\n\nexport function filterForIDsWithAssignment(\n  assignmentData: AssignmentContext,\n  ids: string[],\n) {\n  return ids.filter((id) =>\n    Object.keys(assignmentData.data).filter((_id) => _id === id),\n  );\n}\n","export interface MultipletDefinition {\n  label: string;\n  value: string;\n  multiplicity: number | null;\n}\n\nexport const Multiplets: MultipletDefinition[] = [\n  { label: 'massive (m)', value: 'm', multiplicity: null },\n  { label: 'singlet (s)', value: 's', multiplicity: 1 },\n  { label: 'doublet (d)', value: 'd', multiplicity: 2 },\n  { label: 'triplet (t)', value: 't', multiplicity: 3 },\n  { label: 'quartet (q)', value: 'q', multiplicity: 4 },\n  { label: 'quintet (i)', value: 'i', multiplicity: 5 },\n  { label: 'sextet (x)', value: 'x', multiplicity: 6 },\n  { label: 'septet (p)', value: 'p', multiplicity: 7 },\n  { label: 'octet (o)', value: 'o', multiplicity: 8 },\n  { label: 'nonet (n)', value: 'n', multiplicity: 9 },\n];\n","import { Multiplets } from '../../../../data/constants/Multiplets';\n\nfunction getMultiplicityNumber(string) {\n  const multiplet = Multiplets.find(\n    (_multiplet) => string === _multiplet.label || string === _multiplet.value,\n  );\n\n  return multiplet ? multiplet.multiplicity : null;\n}\n\nfunction checkMultiplet(multiplet, rejected: Array<any> = []) {\n  // options to determine whether a massive (m), for example, should be considered as rejected multiplet\n  if (multiplet === undefined || multiplet.length === 0) {\n    return false;\n  }\n  const _multiplet = Multiplets.find(\n    (m) => m.value === multiplet || m.label === multiplet,\n  );\n  return (\n    _multiplet &&\n    !rejected.includes(_multiplet.value) &&\n    !rejected.includes(_multiplet.label)\n  );\n}\n\nfunction checkMultiplicity(multiplicity, rejected: Array<string> = []) {\n  // options to determine whether a massive (m), for example, should be considered as rejected multiplicity\n  if (multiplicity === undefined || multiplicity.length === 0) {\n    return false;\n  }\n  return !multiplicity\n    .split('')\n    .find((_multiplet) => !checkMultiplet(_multiplet, rejected));\n}\n\nfunction translateMultiplet(multiplet) {\n  return multiplet.length === 1\n    ? Multiplets.find((_multiplet) => _multiplet.value === multiplet)?.label\n    : Multiplets.find((_multiplet) => _multiplet.label === multiplet)?.value;\n}\n\nfunction hasCouplingConstant(multiplet) {\n  if (multiplet.length > 1) {\n    multiplet = translateMultiplet(multiplet);\n  }\n  // with the pre-set rejected ones, we check the given multiplicity for the need of having a coupling constant (massive and singlet do not)\n  return checkMultiplicity(multiplet, ['m', 's']);\n}\n\nfunction getPascal(n, spin) {\n  if (n === undefined || n === 0 || spin === undefined) return [1];\n  let mult = 2 * spin + 1;\n  let previousLine: Array<any> = [];\n  for (let j = 0; j < mult - 1; j++) previousLine.push(1);\n  // complete with \"1 1\" or \"1 1 1\" for spin 1/2 and 1 respectively\n  for (let i = 0; i < n - 1; i++) {\n    // copy the line\n    let _line = previousLine.slice();\n    for (let j = 1; j < mult; j++) {\n      for (let k = 0; k < previousLine.length - 1; k++) {\n        _line[k + j] += previousLine[k];\n      } // add the previous line\n      _line.push(1); // complete the line\n    }\n    previousLine = _line.slice();\n  }\n  return previousLine;\n}\n\nexport {\n  checkMultiplet,\n  checkMultiplicity,\n  getMultiplicityNumber,\n  getPascal,\n  hasCouplingConstant,\n  translateMultiplet,\n};\n","export const TREE_LEVEL_COLORS: Array<string> = [\n  'red',\n  'green',\n  'blue',\n  'magenta',\n];\n","import { Signal1D } from '../../../data/types/data1d';\nimport { useScaleChecked } from '../../context/ScaleContext';\n\nimport { TREE_LEVEL_COLORS } from './TreeColors';\n\ninterface LevelNodeProps {\n  signal: Signal1D;\n  startY: number;\n  levelHeight: number;\n}\n\nfunction LevelNode({ signal, startY, levelHeight }: LevelNodeProps) {\n  const { scaleX } = useScaleChecked();\n\n  return (\n    <line\n      key={`startLevelNode_${signal.id}`}\n      x1={scaleX()(signal.delta)}\n      y1={startY}\n      x2={scaleX()(signal.delta)}\n      y2={startY + levelHeight}\n      stroke={TREE_LEVEL_COLORS[0]}\n    />\n  );\n}\n\nexport default LevelNode;\n","/* eslint-disable import/order */\nimport { CSSProperties } from 'react';\n\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport { Signal1D } from '../../../data/types/data1d/Signal1D';\n\ninterface StringNodeProps {\n  signal: Signal1D;\n  startY: number;\n  levelHeight: number;\n  fontSize: CSSProperties['fontSize'];\n  showLabels: boolean;\n}\n\nfunction StringNode({\n  signal,\n  startY,\n  levelHeight,\n  fontSize,\n  showLabels,\n}: StringNodeProps) {\n  const { scaleX } = useScaleChecked();\n  return (\n    <text\n      key={`multiplicityString_${signal.id}`}\n      textAnchor=\"middle\"\n      x={scaleX()(signal.delta)}\n      y={startY + levelHeight / 2}\n      fontSize={fontSize}\n      lengthAdjust=\"spacing\"\n      fill=\"black\"\n      visibility={showLabels ? 'visible' : 'hidden'}\n    >\n      {signal.multiplicity}\n    </text>\n  );\n}\n\nexport default StringNode;\n","/* eslint-disable react/no-unused-prop-types */\nimport { CSSProperties, useCallback } from 'react';\n\nimport { useScaleChecked } from '../../context/ScaleContext';\n\ninterface NodeData {\n  startX: number;\n  _startX: number;\n  ratio: number;\n  multiplicityIndex: number;\n  color: string;\n}\n\ninterface TreeNodesProps {\n  showLabels: boolean;\n  startY: number;\n  signalID: string;\n  levelHeight: number;\n  nodesData: Array<NodeData>;\n  labelOptions: {\n    distance: number;\n    fontSize: CSSProperties['fontSize'];\n  };\n}\n\nfunction TreeNodes({\n  nodesData,\n  levelHeight,\n  startY,\n  signalID,\n  labelOptions,\n  showLabels,\n}: TreeNodesProps) {\n  const { scaleX } = useScaleChecked();\n  const buildTreeNodeAndEdge = useCallback(\n    ({ startX, _startX, ratio, multiplicityIndex, color }: NodeData) => {\n      const edgeLevel = 2 * multiplicityIndex + 2;\n      const _startYEdge = startY + edgeLevel * levelHeight;\n      const _startYNode = startY + (edgeLevel + 1) * levelHeight;\n\n      return (\n        <g\n          key={`${multiplicityIndex}_${signalID}_${startX}_${_startX}_${ratio}`}\n        >\n          {/* ratio text */}\n          <text\n            textAnchor=\"middle\"\n            x={scaleX()(_startX) + labelOptions.distance}\n            y={_startYNode + 2 * (levelHeight / 3)}\n            fontSize={labelOptions.fontSize}\n            fill={color}\n            visibility={showLabels ? 'visible' : 'hidden'}\n          >\n            {ratio}\n          </text>\n\n          <line\n            x1={scaleX()(startX)}\n            y1={_startYEdge}\n            x2={scaleX()(_startX)}\n            y2={_startYNode}\n            stroke={color}\n          />\n\n          <line\n            x1={scaleX()(_startX)}\n            y1={_startYNode}\n            x2={scaleX()(_startX)}\n            y2={_startYNode + levelHeight}\n            stroke={color}\n          />\n        </g>\n      );\n    },\n    [\n      signalID,\n      labelOptions.distance,\n      labelOptions.fontSize,\n      scaleX,\n      showLabels,\n      startY,\n      levelHeight,\n    ],\n  );\n\n  return <>{nodesData?.map((node) => buildTreeNodeAndEdge(node))}</>;\n}\n\nexport default TreeNodes;\n","import lodashGet from 'lodash/get';\n\nimport { Signal1D } from '../../../data/types/data1d';\nimport {\n  getMultiplicityNumber,\n  getPascal,\n} from '../../panels/extra/utilities/MultiplicityUtilities';\n\nimport { TREE_LEVEL_COLORS } from './TreeColors';\n\nfunction createTreeNodes(signal: Signal1D, spectrumData) {\n  function buildTreeNodesData(\n    multiplicityIndex,\n    jIndices,\n    treeNodesData,\n    startX,\n  ) {\n    if (!signal.multiplicity) {\n      return null;\n    }\n\n    if (multiplicityIndex >= signal.multiplicity.length) {\n      return treeNodesData;\n    }\n    // re-use colors if needed\n    const color =\n      TREE_LEVEL_COLORS[multiplicityIndex % TREE_LEVEL_COLORS.length];\n\n    const jIndex = jIndices.findIndex(\n      (_jIndex) => _jIndex === multiplicityIndex,\n    );\n    const frequency = lodashGet(spectrumData, 'info.originFrequency', 0);\n\n    const coupling =\n      jIndex >= 0 && frequency > 0 && signal?.js?.[jIndex]\n        ? signal.js[jIndex].coupling / frequency // convert to ppm\n        : null;\n\n    // in case of \"s\": no coupling constant and build one tree node only\n    if (!coupling) {\n      treeNodesData.push({\n        startX,\n        _startX: startX,\n        ratio: 1,\n        multiplicityIndex,\n        color,\n      });\n      // go to next multiplet in multiplicity string\n      buildTreeNodesData(\n        multiplicityIndex + 1,\n        jIndices,\n        treeNodesData,\n        startX,\n      );\n    } else {\n      // in case of other multiplets\n      const multiplicity = signal.multiplicity || '';\n      const pascal = getPascal(\n        getMultiplicityNumber(multiplicity.charAt(multiplicityIndex)),\n        0.5,\n      ); // @TODO for now we use the default spin of 1 / 2 only\n\n      let _startX =\n        pascal.length % 2 === 0\n          ? startX - (pascal.length / 2) * coupling + coupling / 2 // in case of even number of nodes\n          : startX - (pascal.length / 2 - 0.5) * coupling; // in case of odd number of nodes\n\n      pascal.forEach((ratio, k) => {\n        if (k > 0) {\n          _startX += coupling;\n        }\n        treeNodesData.push({\n          startX,\n          _startX,\n          ratio,\n          multiplicityIndex,\n          color,\n        });\n        // go to next multiplet in multiplicity string\n        buildTreeNodesData(\n          multiplicityIndex + 1,\n          jIndices,\n          treeNodesData,\n          _startX,\n        );\n      });\n    }\n\n    return treeNodesData;\n  }\n  return buildTreeNodesData;\n}\n\nexport default createTreeNodes;\n","/** @jsxImportSource @emotion/react */\nimport lodashGet from 'lodash/get';\nimport { useMemo, useState, useEffect, CSSProperties } from 'react';\n\nimport { Signal1D } from '../../../data/types/data1d';\nimport { useAssignment } from '../../assignment/AssignmentsContext';\nimport { useChartData } from '../../context/ChartContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport { HighlightedSource, useHighlight } from '../../highlight';\nimport {\n  hasCouplingConstant,\n  checkMultiplicity,\n} from '../../panels/extra/utilities/MultiplicityUtilities';\nimport { options } from '../../toolbar/ToolTypes';\n\nimport LevelNode from './LevelNode';\nimport StringNode from './StringNode';\nimport TreeNodes from './TreeNodes';\nimport createTreeNodes from './buildTreeNode';\n\nconst styles = {\n  cursor: 'default',\n  opacity: 0.6,\n  strokeWidth: 1,\n};\n\n// export interface SignalNodeProps {\n//   id: string;\n//   delta: number;\n//   multiplicity: string;\n// }\n\ninterface MultiplicityTreeProps {\n  rangeFrom: number;\n  rangeTo: number;\n  signal: Signal1D;\n  labelOptions?: {\n    distance: number;\n    fontSize: CSSProperties['fontSize'];\n  };\n}\n\nfunction extractID(assignment) {\n  return [assignment.id].concat(assignment.assigned?.x || []);\n}\n\nfunction MultiplicityTree({\n  rangeFrom,\n  rangeTo,\n  signal,\n  labelOptions = {\n    distance: 10,\n    fontSize: 11,\n  },\n}: MultiplicityTreeProps) {\n  const { scaleX, scaleY } = useScaleChecked();\n  const {\n    data: spectraData,\n    activeSpectrum,\n    toolOptions: { selectedTool },\n    width,\n  } = useChartData();\n  const assignment = useAssignment(signal.id);\n  const highlight = useHighlight(extractID(assignment), {\n    type: HighlightedSource.SIGNAL,\n    extra: extractID(assignment),\n  });\n\n  const spectrumData = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      lodashGet(spectraData, `${activeSpectrum?.index}`, null),\n    [activeSpectrum, spectraData],\n  );\n\n  const [xRange, setXRange] = useState({ x1: signal.delta, x2: signal.delta });\n  const [treeProps, setTreeProps] = useState({\n    width: 0,\n    height: 0,\n    levelHeight: 0,\n  });\n  const [drawInFullRange, setDrawInFullRange] = useState(false);\n  const [showLabels, setShowLabels] = useState(false);\n\n  useEffect(() => {\n    const _drawInFullRange = !checkMultiplicity(signal.multiplicity, ['m']);\n    const _treeWidth = _drawInFullRange\n      ? Math.abs(scaleX()(xRange.x1) - scaleX()(xRange.x2))\n      : Math.abs(scaleX()(xRange.x1) - scaleX()(xRange.x2)) +\n        labelOptions.distance;\n    const _treeHeight = _drawInFullRange ? _treeWidth / 3 : _treeWidth / 2;\n    // +2 because of multiplicity text and start level node before the actual tree starts\n    // 2* for levels between nodes (edges)\n    const length = signal?.multiplicity?.length || 0;\n    const _treeLevelHeight = _drawInFullRange\n      ? _treeHeight / (length + 2)\n      : _treeHeight / (2 * length + 2);\n\n    setTreeProps({\n      width: _treeWidth,\n      height: _treeHeight,\n      levelHeight: _treeLevelHeight,\n    });\n    setDrawInFullRange(_drawInFullRange);\n  }, [\n    labelOptions.distance,\n    scaleX,\n    signal.multiplicity,\n    xRange.x1,\n    xRange.x2,\n  ]);\n\n  useEffect(() => {\n    if (treeProps.width / width >= 0.1) {\n      setShowLabels(true);\n    } else {\n      setShowLabels(false);\n    }\n  }, [treeProps.width, width]);\n\n  const startY = useMemo(() => {\n    let yMax;\n    spectrumData.data.x.forEach((_x, i) => {\n      if (\n        _x >= rangeFrom &&\n        _x <= rangeTo &&\n        (!yMax || spectrumData.data.re[i] > yMax)\n      ) {\n        yMax = spectrumData.data.re[i];\n      }\n    });\n\n    return scaleY(spectrumData.id)(yMax) - treeProps.height - 30;\n  }, [\n    spectrumData.data.x,\n    spectrumData.data.re,\n    spectrumData.id,\n    scaleY,\n    treeProps.height,\n    rangeFrom,\n    rangeTo,\n  ]);\n\n  const treeNodesData = useMemo(() => {\n    if (signal.multiplicity) {\n      const buildTreeNodesData = createTreeNodes(signal, spectrumData);\n      const jIndices = signal.multiplicity\n        .split('')\n        .map((_mult, i) => (hasCouplingConstant(_mult) ? i : undefined))\n        .filter((_i) => _i !== undefined);\n\n      return buildTreeNodesData(0, jIndices, [], signal.delta);\n    }\n    return [];\n  }, [signal, spectrumData]);\n\n  useEffect(() => {\n    if (drawInFullRange) {\n      setXRange({ x1: rangeFrom, x2: rangeTo });\n    } else {\n      const _xRange = { x1: signal.delta, x2: signal.delta };\n      treeNodesData.forEach((_treeNodeData) => {\n        if (_treeNodeData.startX < _xRange.x1) {\n          _xRange.x1 = _treeNodeData.startX;\n        }\n        if (_treeNodeData.startX > _xRange.x2) {\n          _xRange.x2 = _treeNodeData.startX;\n        }\n        if (_treeNodeData._startX < _xRange.x1) {\n          _xRange.x1 = _treeNodeData._startX;\n        }\n        if (_treeNodeData._startX > _xRange.x2) {\n          _xRange.x2 = _treeNodeData._startX;\n        }\n      });\n      setXRange(_xRange);\n    }\n  }, [\n    drawInFullRange,\n    rangeFrom,\n    rangeTo,\n    signal.delta,\n    signal.multiplicity,\n    treeNodesData,\n  ]);\n\n  const multiplicityTree = useMemo(() => {\n    const { levelHeight } = treeProps;\n    // first tree level\n    const firstLevelStartY = startY;\n    let _startY = firstLevelStartY;\n    // second tree level\n    const secondLevelStartY = startY + levelHeight;\n    _startY = secondLevelStartY;\n\n    // third tree level\n    _startY += levelHeight;\n\n    if (drawInFullRange) {\n      const _rangeFrom = scaleX()(rangeFrom);\n      const _rangeTo = scaleX()(rangeTo);\n\n      const pathData = `M ${_rangeFrom} ${\n        _startY + levelHeight\n      } ${_rangeFrom} ${_startY} ${scaleX()(\n        signal.delta,\n      )} ${_startY} ${_rangeTo} ${_startY} ${_rangeTo} ${\n        _startY + levelHeight\n      }`;\n\n      return (\n        <g>\n          <StringNode\n            signal={signal}\n            startY={firstLevelStartY}\n            levelHeight={levelHeight}\n            fontSize={labelOptions.fontSize}\n            showLabels={showLabels}\n          />\n          <LevelNode\n            signal={signal}\n            startY={secondLevelStartY}\n            levelHeight={levelHeight}\n          />\n          <path d={pathData} stroke=\"blue\" fill=\"none\" />\n        </g>\n      );\n    }\n\n    return (\n      <g>\n        <StringNode\n          signal={signal}\n          startY={firstLevelStartY}\n          levelHeight={levelHeight}\n          fontSize={labelOptions.fontSize}\n          showLabels={showLabels}\n        />\n        <LevelNode\n          signal={signal}\n          startY={secondLevelStartY}\n          levelHeight={levelHeight}\n        />\n        <TreeNodes\n          nodesData={treeNodesData}\n          signalID={treeNodesData}\n          showLabels={showLabels}\n          startY={startY}\n          labelOptions={labelOptions}\n          levelHeight={levelHeight}\n        />\n      </g>\n    );\n  }, [\n    treeProps,\n    startY,\n    drawInFullRange,\n    signal,\n    labelOptions,\n    showLabels,\n    treeNodesData,\n    scaleX,\n    rangeFrom,\n    rangeTo,\n  ]);\n\n  return (\n    <g\n      css={\n        highlight.isActive || assignment.isActive\n          ? { ...styles, opacity: 1, strokeWidth: 1.5 }\n          : styles\n      }\n      {...{\n        onMouseEnter: () => {\n          assignment.show('x');\n          highlight.show();\n        },\n        onMouseLeave: () => {\n          assignment.hide();\n          highlight.hide();\n        },\n      }}\n      {...{\n        onClick:\n          selectedTool && selectedTool === options.editRange.id\n            ? () => {\n                return null;\n              }\n            : (e) => {\n                if (e.shiftKey) {\n                  e.stopPropagation();\n                  assignment.setActive('x');\n                }\n              },\n      }}\n    >\n      {multiplicityTree}\n    </g>\n  );\n}\n\nexport default MultiplicityTree;\n","import { memo } from 'react';\n\nimport { useChartData } from '../../context/ChartContext';\n\nimport MultiplicityTree from './MultiplicityTree';\n\ninterface TempMultiplicityTreeInnerProps {\n  range: any;\n}\n\nfunction TempMultiplicityTreeInner({ range }: TempMultiplicityTreeInnerProps) {\n  return (\n    range?.signals &&\n    range.signals.length > 0 &&\n    range.signals.map((signal) => (\n      <MultiplicityTree\n        rangeFrom={range.from}\n        rangeTo={range.to}\n        signal={signal}\n        key={signal.id}\n      />\n    ))\n  );\n}\n\nconst MemoizedTempMultiplicityTree = memo(TempMultiplicityTreeInner);\n\nexport default function TempMultiplicityTree() {\n  const {\n    toolOptions: {\n      data: { tempRange },\n    },\n  } = useChartData();\n\n  return <MemoizedTempMultiplicityTree range={tempRange} />;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useState, useEffect } from 'react';\n\nimport { Signal1D } from '../../../data/types/data1d';\nimport { checkRangeKind } from '../../../data/utilities/RangeUtilities';\nimport {\n  useAssignment,\n  useAssignmentData,\n} from '../../assignment/AssignmentsContext';\nimport { filterForIDsWithAssignment } from '../../assignment/utilities/filterForIDsWithAssignment';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport Resizer from '../../elements/resizer/Resizer';\nimport { HighlightedSource, useHighlight } from '../../highlight';\nimport { RESIZE_RANGE } from '../../reducer/types/Types';\nimport { options } from '../../toolbar/ToolTypes';\nimport MultiplicityTree from '../multiplicityTree/MultiplicityTree';\nimport TempMultiplicityTree from '../multiplicityTree/TempMultiplicityTree';\n\nconst stylesOnHover = css`\n  pointer-events: bounding-box;\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n\n  .delete-button {\n    visibility: hidden;\n  }\n`;\n\nconst stylesHighlighted = css`\n  pointer-events: bounding-box;\n\n  @-moz-document url-prefix() {\n    pointer-events: fill;\n  }\n  .range-area {\n    height: 100%;\n    fill: #ff6f0057;\n  }\n  .delete-button {\n    visibility: visible;\n    cursor: pointer;\n  }\n`;\n\nexport interface RangeData {\n  id: string;\n  from: number;\n  to: number;\n  integration: number;\n  signals: Signal1D[];\n}\n\ninterface RangeProps {\n  showMultiplicityTrees: boolean;\n  selectedTool: string;\n  rangeData: RangeData;\n  startEditMode: boolean;\n}\n\nfunction Range({\n  rangeData,\n  showMultiplicityTrees,\n  selectedTool,\n  startEditMode,\n}: RangeProps) {\n  const { id, from, to, integration, signals } = rangeData;\n  const assignmentData = useAssignmentData();\n  const assignmentRange = useAssignment(id);\n  const highlightRange = useHighlight(\n    [assignmentRange.id].concat(assignmentRange.assigned?.x || []).concat(\n      filterForIDsWithAssignment(\n        assignmentData,\n        signals.map((_signal) => _signal.id),\n      ),\n    ),\n    { type: HighlightedSource.RANGE, extra: { id } },\n  );\n\n  const { scaleX } = useScaleChecked();\n  const dispatch = useDispatch();\n\n  const [reduceOpacity, setReduceOpacity] = useState(false);\n  const [isBlockedByEditing, setIsBlockedByEditing] = useState(false);\n\n  useEffect(() => {\n    if (selectedTool && selectedTool === options.editRange.id) {\n      setIsBlockedByEditing(true);\n    } else {\n      setIsBlockedByEditing(false);\n    }\n  }, [selectedTool]);\n\n  useEffect(() => {\n    setReduceOpacity(!checkRangeKind(rangeData));\n  }, [rangeData]);\n\n  const handleOnStopResizing = useCallback(\n    (position) => {\n      dispatch({\n        type: RESIZE_RANGE,\n        data: {\n          ...rangeData,\n          from: scaleX().invert(position.x2),\n          to: scaleX().invert(position.x1),\n        },\n      });\n    },\n    [dispatch, rangeData, scaleX],\n  );\n\n  const mouseEnterHandler = useCallback(() => {\n    assignmentRange.show('x');\n    highlightRange.show();\n  }, [assignmentRange, highlightRange]);\n\n  const mouseLeaveHandler = useCallback(() => {\n    assignmentRange.hide();\n    highlightRange.hide();\n  }, [assignmentRange, highlightRange]);\n\n  const assignHandler = useCallback(\n    (e) => {\n      if (\n        selectedTool === options.rangesPicking.id &&\n        e.shiftKey &&\n        !isBlockedByEditing\n      ) {\n        assignmentRange.setActive('x');\n      }\n    },\n    [assignmentRange, isBlockedByEditing, selectedTool],\n  );\n\n  return (\n    <g\n      data-test-id=\"range\"\n      style={{ outline: 'none' }}\n      css={\n        isBlockedByEditing ||\n        highlightRange.isActive ||\n        assignmentRange.isActive\n          ? stylesHighlighted\n          : stylesOnHover\n      }\n      key={id}\n      onMouseEnter={mouseEnterHandler}\n      onMouseLeave={mouseLeaveHandler}\n      onClick={assignHandler}\n    >\n      <Resizer\n        tag=\"svg\"\n        initialPosition={{ x1: scaleX()(to), x2: scaleX()(from) }}\n        onEnd={handleOnStopResizing}\n      >\n        {(x1, x2) => (\n          <g transform={`translate(0,10)`}>\n            <rect\n              data-no-export=\"true\"\n              x=\"0\"\n              width={x2 - x1}\n              height=\"6\"\n              className=\"range-area\"\n              fill=\"green\"\n              fillOpacity={\n                !reduceOpacity ||\n                highlightRange.isActive ||\n                assignmentRange.isActive\n                  ? 1\n                  : 0.4\n              }\n            />\n            <text\n              textAnchor=\"middle\"\n              x={(x2 - x1) / 2}\n              y=\"20\"\n              fontSize=\"10\"\n              fill=\"red\"\n              fillOpacity={\n                !reduceOpacity ||\n                highlightRange.isActive ||\n                assignmentRange.isActive\n                  ? 1\n                  : 0.6\n              }\n            >\n              {integration !== undefined ? integration.toFixed(2) : ''}\n            </text>\n          </g>\n        )}\n      </Resizer>\n\n      {startEditMode ? (\n        <TempMultiplicityTree />\n      ) : (\n        showMultiplicityTrees &&\n        signals &&\n        signals.length > 0 &&\n        signals.map((_signal) => (\n          <MultiplicityTree\n            rangeFrom={from}\n            rangeTo={to}\n            signal={_signal}\n            key={_signal.id}\n          />\n        ))\n      )}\n    </g>\n  );\n}\n\nexport default Range;\n","import useIntegralPath from '../../hooks/useIntegralPath';\n\ninterface IntegralProps {\n  range: { id: string; from: number; to: number; integral?: number };\n}\n\nfunction RangeIntegral({ range }: IntegralProps) {\n  const path = useIntegralPath(range);\n\n  return (\n    <path\n      className=\"line\"\n      stroke=\"black\"\n      strokeWidth=\"1\"\n      fill=\"none\"\n      d={path}\n    />\n  );\n}\n\nexport default RangeIntegral;\n","import { Fragment, memo } from 'react';\n\nimport { Datum1D, Ranges as RangesProps } from '../../../data/types/data1d';\nimport { useChartData } from '../../context/ChartContext';\nimport useSpectrum from '../../hooks/useSpectrum';\n\nimport Range from './Range';\nimport RangeIntegral from './RangeIntegral';\n\ninterface RangesInnerProps {\n  displayerKey: string;\n  selectedTool: string;\n  ranges: RangesProps;\n  editRangeID: string;\n  showMultiplicityTrees: boolean;\n  showRangesIntegrals: boolean;\n}\n\nfunction RangesInner({\n  ranges,\n  displayerKey,\n  selectedTool,\n  editRangeID,\n  showMultiplicityTrees,\n  showRangesIntegrals,\n}: RangesInnerProps) {\n  return (\n    <g clipPath={`url(#${displayerKey}clip-chart-1d)`}>\n      {ranges?.values?.map((range) => (\n        <Fragment key={range.id}>\n          <Range\n            rangeData={range}\n            selectedTool={selectedTool}\n            showMultiplicityTrees={showMultiplicityTrees}\n            startEditMode={\n              editRangeID && editRangeID === range.id ? true : false\n            }\n          />\n          {showRangesIntegrals && <RangeIntegral range={range} />}\n        </Fragment>\n      ))}\n    </g>\n  );\n}\n\nconst MemoizedRanges = memo(RangesInner);\n\nconst empyData = { ranges: {} };\n\nexport default function Ranges() {\n  const {\n    displayerKey,\n    toolOptions: {\n      selectedTool,\n      data: { tempRange, showMultiplicityTrees, showRangesIntegrals },\n    },\n  } = useChartData();\n\n  const { ranges } = useSpectrum(empyData) as Datum1D;\n\n  return (\n    <MemoizedRanges\n      {...{\n        ranges,\n        showMultiplicityTrees,\n        showRangesIntegrals,\n        selectedTool,\n        displayerKey,\n        editRangeID: tempRange?.id || '',\n      }}\n    />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useMemo } from 'react';\n\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport DeleteButton from '../../elements/DeleteButton';\nimport { DELETE_BASE_LINE_ZONE } from '../../reducer/types/Types';\n\nconst styles = css`\n  pointer-events: bounding-box;\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n\n  .zone-area {\n    height: 100%;\n    fill: #b8b8b857;\n    cursor: pointer;\n  }\n  .delete-button {\n    display: none;\n    cursor: pointer;\n  }\n  :hover .delete-button {\n    display: block;\n  }\n`;\n\nfunction BaseLineZones() {\n  const { toolOptions } = useChartData();\n\n  const { scaleX } = useScaleChecked();\n  const dispatch = useDispatch();\n\n  const deleteRangeHandler = useCallback(\n    (id) => {\n      dispatch({ type: DELETE_BASE_LINE_ZONE, id });\n    },\n    [dispatch],\n  );\n\n  const baseLineZones = useMemo(() => {\n    return toolOptions.data.baseLineZones;\n  }, [toolOptions]);\n\n  return (\n    <>\n      {baseLineZones.length > 0 && (\n        <g>\n          {baseLineZones.map((zone) => (\n            <g\n              key={zone.id}\n              transform={`translate(${scaleX()(zone.to)},0)`}\n              css={styles}\n            >\n              <DeleteButton\n                x={-20}\n                y={10}\n                onDelete={() => deleteRangeHandler(zone.id)}\n              />\n              <rect\n                x=\"0\"\n                width={`${scaleX()(zone.from) - scaleX()(zone.to)}`}\n                className=\"zone-area\"\n              />\n            </g>\n          ))}\n        </g>\n      )}\n    </>\n  );\n}\n\nexport default BaseLineZones;\n","import ExclusionZonesAnnotations from './ExclusionZonesAnnotations';\nimport IntegralsSeries from './IntegralsSeries';\nimport LinesSeries from './LinesSeries';\nimport PeakAnnotations from './PeakAnnotations';\nimport ResurrectedDatabaseRanges from './ResurrectedDatabaseRanges';\nimport XAxis from './XAxis';\nimport JGraph from './jCouplingGraph/JGraph';\nimport MultiAnalysisRanges from './multiAnalysis/MultiAnalysisRanges';\nimport Ranges from './ranges/Ranges';\nimport BaseLineZones from './tool/BaseLineZones';\n\nfunction Chart1D({ mode, width, height, margin, displayerKey }) {\n  return (\n    <svg\n      viewBox={`0 0 ${width} ${height}`}\n      width={width}\n      height={height}\n      id=\"nmrSVG\"\n    >\n      <defs>\n        <clipPath id={`${displayerKey}clip-chart-1d`}>\n          <rect\n            width={`${width - margin.left - margin.right}`}\n            height={`${height}`}\n            x={`${margin.left}`}\n            y={`${0}`}\n          />\n        </clipPath>\n      </defs>\n\n      <LinesSeries />\n      <IntegralsSeries />\n      <PeakAnnotations />\n      <Ranges />\n      <JGraph />\n      <MultiAnalysisRanges />\n      <BaseLineZones />\n      <ExclusionZonesAnnotations />\n      <ResurrectedDatabaseRanges />\n\n      <g className=\"container\" style={{ pointerEvents: 'none' }}>\n        <XAxis showGrid mode={mode} />\n      </g>\n    </svg>\n  );\n}\n\nexport default Chart1D;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\nimport { useContext, useCallback, Fragment, memo } from 'react';\nimport { BsCursor } from 'react-icons/bs';\nimport { IoPulseSharp } from 'react-icons/io5';\n\nimport { get1DDataXY } from '../../data/data1d/Spectrum1D/get1DDataXY';\nimport { Datum1D } from '../../data/types/data1d';\nimport { BrushContext } from '../EventsTrackers/BrushTracker';\nimport { MouseContext } from '../EventsTrackers/MouseTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { useScaleChecked } from '../context/ScaleContext';\nimport useSpectrum from '../hooks/useSpectrum';\nimport { ActiveSpectrum } from '../reducer/Reducer';\nimport { useFormatNumberByNucleus } from '../utility/FormatNumber';\n\nconst styles = css`\n  display: flex;\n  flex-firection: row;\n  align-items: center;\n  pointer-events: bounding-box;\n  user-select: 'none';\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n  background-color: #f7f7f7;\n  height: 30px;\n  padding: 6px;\n  color: #8d0018;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n\n  div {\n    margin: 0px 10px;\n    display: inline-block;\n\n    .label {\n      font-size: 12px;\n      color: #4d4d4d;\n      font-weight: bold;\n    }\n    .value {\n      font-weight: bold;\n      font-size: 14px;\n      display: inline-block;\n    }\n    .unit {\n      font-weight: bold;\n      font-size: 10px;\n    }\n    .xvalue {\n      min-width: 50px;\n    }\n    .yvalue {\n      min-width: 80px;\n    }\n  }\n\n  .separator {\n    border-left: 2px solid gray;\n    margin: 0 20px;\n    width: 1px;\n    height: 100%;\n  }\n`;\n\ninterface FooterBannerInnerProps {\n  margin: {\n    top: number;\n    left: number;\n    right: number;\n    bottom: number;\n  };\n  width: number;\n  height: number;\n  activeSpectrum: ActiveSpectrum | null;\n  spectrum: Datum1D;\n  activeTab: string;\n}\n\nfunction FooterBannerInner({\n  margin,\n  width,\n  height,\n  activeSpectrum,\n  spectrum,\n  activeTab,\n}: FooterBannerInnerProps) {\n  let position = useContext(MouseContext);\n  const { startX, endX, step } = useContext(BrushContext);\n  const { scaleX } = useScaleChecked();\n\n  const format = useFormatNumberByNucleus(activeTab);\n\n  const getYValue = useCallback(\n    (xPosition) => {\n      if (spectrum) {\n        const data = get1DDataXY(spectrum);\n        const xIndex = xFindClosestIndex(data.x, scaleX().invert(xPosition));\n        return data.y[xIndex];\n      }\n      return 1;\n    },\n    [spectrum, scaleX],\n  );\n\n  if (\n    !position ||\n    position.y < margin.top ||\n    position.x < margin.left ||\n    position.x > width - margin.right ||\n    position.y > height - margin.bottom\n  ) {\n    return <div css={styles} />;\n  }\n\n  return (\n    <div css={styles}>\n      <BsCursor />\n      <div>\n        <span className=\"label\"> 𝛅: </span>\n        <span className=\"value\">{format(scaleX().invert(position.x))}</span>\n        <span className=\"unit\">ppm</span>\n        {activeSpectrum && spectrum?.info?.originFrequency && (\n          <>\n            <span className=\"value\">\n              &nbsp;(\n              {format(\n                scaleX().invert(position.x) * spectrum?.info?.originFrequency,\n                'hz',\n              )}\n            </span>\n            <span className=\"unit\">Hz</span>\n            <span className=\"value\">) </span>\n          </>\n        )}\n      </div>\n\n      {step === 'brushing' && (\n        <div>\n          <span className=\"label\"> Δppm: </span>\n          <span className=\"value\">\n            {(scaleX().invert(startX) - scaleX().invert(endX)).toPrecision(6)}\n          </span>\n        </div>\n      )}\n\n      {activeSpectrum && (\n        <Fragment>\n          {spectrum?.info?.originFrequency && step === 'brushing' && (\n            <div>\n              <span className=\"label\"> ΔHz: </span>\n              <span className=\"value\">\n                {(\n                  (scaleX().invert(startX) - scaleX().invert(endX)) *\n                  spectrum?.info?.originFrequency\n                ).toPrecision(5)}\n              </span>\n            </div>\n          )}\n          {step === 'brushing' && (\n            <div>\n              <span className=\"label\"> ratio :</span>\n              <span className=\"value\">\n                {(\n                  (getYValue(startX) / (getYValue(endX) || Number.MIN_VALUE)) *\n                  100\n                ).toFixed(2)}\n                %\n              </span>\n            </div>\n          )}\n        </Fragment>\n      )}\n\n      {activeSpectrum && (\n        <Fragment>\n          <div className=\"separator\" />\n          <IoPulseSharp />\n          <div>\n            <span className=\"label\">Intensity: </span>\n            <span className=\"value yvalue\">\n              {format(getYValue(position.x))}\n            </span>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nconst MemoizedFooterBanner = memo(FooterBannerInner);\n\nexport default function FooterBanner() {\n  const { margin, width, height, activeSpectrum, activeTab } = useChartData();\n  const spectrum = useSpectrum(null) as Datum1D;\n  return (\n    <MemoizedFooterBanner\n      {...{ margin, width, height, activeSpectrum, spectrum, activeTab }}\n    />\n  );\n}\n","import { xFindClosestIndex } from 'ml-spectra-processing';\nimport { CSSProperties, useContext, useEffect, useMemo, useState } from 'react';\n\nimport { get1DDataXY } from '../../data/data1d/Spectrum1D/get1DDataXY';\nimport { Datum1D } from '../../data/types/data1d';\nimport { MouseContext } from '../EventsTrackers/MouseTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { useScale } from '../context/ScaleContext';\nimport Events from '../utility/Events';\n\nconst styles: Record<\n  'container' | 'value' | 'colorIndicator' | 'name',\n  CSSProperties\n> = {\n  container: {\n    position: 'absolute',\n    left: '10px',\n    top: '10px',\n  },\n  value: {\n    width: '67px',\n    display: 'inline-block',\n    margin: '0 5px',\n    fontSize: '12px',\n  },\n  colorIndicator: {\n    width: '10px',\n    height: '1px',\n    borderBottom: `2px solid`,\n    display: 'inline-block',\n    marginBottom: '3px',\n  },\n  name: {\n    fontSize: '12px',\n  },\n};\n\ninterface YTrackerProps {\n  datum: {\n    x: Array<number>;\n    y: Array<number>;\n  };\n}\n\nfunction YTracker({ datum }: YTrackerProps) {\n  const { scaleX } = useScale();\n  const position = useContext(MouseContext);\n\n  if (!scaleX || !position) {\n    return null;\n  }\n\n  const xIndex = xFindClosestIndex(datum.x, scaleX().invert(position.x));\n\n  return <span style={styles.value}>{datum.y[xIndex]}</span>;\n}\n\nfunction SpectraTracker() {\n  const { data, activeTab, xDomains } = useChartData();\n  const [isVisible, ToggleVisibility] = useState(false);\n\n  useEffect(() => {\n    function handler(flag) {\n      ToggleVisibility(flag);\n    }\n\n    Events.on('showYSpectraTrackers', handler);\n\n    return () => {\n      Events.off('showYSpectraTrackers', handler);\n    };\n  }, []);\n\n  const trackers = useMemo(() => {\n    return (\n      isVisible &&\n      data.map(\n        (spectrum) =>\n          spectrum.display.isVisible &&\n          xDomains[spectrum.id] &&\n          spectrum.info.nucleus === activeTab && (\n            <div style={{ display: 'block' }} key={spectrum.id}>\n              <span\n                style={{\n                  ...styles.colorIndicator,\n                  borderColor: (spectrum as Datum1D).display.color,\n                }}\n              />\n              <YTracker datum={get1DDataXY(spectrum as Datum1D)} />\n              <span style={styles.value}>{spectrum.display.name}</span>\n            </div>\n          ),\n        [],\n      )\n    );\n  }, [activeTab, data, isVisible, xDomains]);\n\n  if (!isVisible) return null;\n\n  return <div style={styles.container}>{trackers}</div>;\n}\n\nexport default SpectraTracker;\n","import max from 'ml-array-max';\nimport { useContext, useEffect, useState } from 'react';\n\nimport { get1DDataXY } from '../../../data/data1d/Spectrum1D/get1DDataXY';\nimport { Datum1D } from '../../../data/types/data1d';\nimport { BrushContext } from '../../EventsTrackers/BrushTracker';\nimport { MouseContext } from '../../EventsTrackers/MouseTracker';\nimport { useChartData } from '../../context/ChartContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport { options } from '../../toolbar/ToolTypes';\nimport getVerticalShift from '../utilities/getVerticalShift';\n\nconst styles = {\n  radius: 10,\n  borderColor: '#1f1f1f',\n  strokeWidth: 1,\n  fillOpacity: 0,\n  SVGPadding: 1,\n};\n\ninterface PeakPosition {\n  x: number;\n  y: number;\n  xIndex: number;\n}\n\nfunction PeakPointer() {\n  const {\n    height,\n    width,\n    margin,\n    activeSpectrum,\n    data,\n    mode,\n    toolOptions: { selectedTool },\n    verticalAlign,\n  } = useChartData();\n  const { scaleX, scaleY } = useScaleChecked();\n\n  let position = useContext(MouseContext);\n  const brushState = useContext(BrushContext);\n  const [closePeakPosition, setPosition] = useState<PeakPosition | null>();\n\n  useEffect(() => {\n    const vShift = activeSpectrum\n      ? getVerticalShift(verticalAlign, {\n          index: activeSpectrum?.index || 1,\n          align: 'center',\n        })\n      : 0;\n\n    const getClosePeak = (xShift, mouseCoordinates) => {\n      if (\n        activeSpectrum &&\n        position &&\n        selectedTool === options.peakPicking.id\n      ) {\n        const range = [\n          scaleX().invert(mouseCoordinates.x - xShift),\n          scaleX().invert(mouseCoordinates.x + xShift),\n        ].sort((a, b) => {\n          return a - b;\n        });\n\n        //get the active sepectrum data by looking for it by id\n        const spectrum = data.find(\n          (d) => d.id === activeSpectrum.id,\n        ) as Datum1D;\n\n        if (!spectrum) throw new Error('Unreachable');\n        const datum = get1DDataXY(spectrum);\n        const maxIndex = datum.x.findIndex((number) => number >= range[1]) - 1;\n        const minIndex = datum.x.findIndex((number) => number >= range[0]);\n\n        const yDataRange = datum.y.slice(minIndex, maxIndex);\n        if (yDataRange && yDataRange.length > 0) {\n          const yValue = max(yDataRange);\n          const xIndex = yDataRange.findIndex((value) => value === yValue);\n          const xValue = datum.x[minIndex + xIndex];\n          return {\n            x: scaleX()(xValue),\n            y: scaleY(activeSpectrum.id)(yValue) - vShift,\n            xIndex: minIndex + xIndex,\n          };\n        }\n      }\n      return null;\n    };\n\n    const candidatePeakPosition = getClosePeak(10, position);\n    setPosition(candidatePeakPosition);\n  }, [\n    activeSpectrum,\n    data,\n    mode,\n    position,\n    scaleX,\n    scaleY,\n    selectedTool,\n    verticalAlign,\n  ]);\n\n  if (\n    selectedTool !== options.peakPicking.id ||\n    !closePeakPosition ||\n    !activeSpectrum ||\n    brushState.step === 'brushing' ||\n    !position ||\n    position.y < margin.top ||\n    position.left < margin.left ||\n    position.x > width - margin.right ||\n    position.y > height - margin.bottom\n  ) {\n    return null;\n  }\n\n  return (\n    <div\n      key=\"peakPointer\"\n      style={{\n        cursor: 'crosshair',\n        transform: `translate(${closePeakPosition.x}px, ${closePeakPosition.y}px)`,\n        transformOrigin: 'top left',\n        position: 'absolute',\n        top: -(styles.radius + styles.SVGPadding),\n        left: -(styles.radius + styles.SVGPadding),\n        pointerEvents: 'none',\n        overflow: 'visible',\n      }}\n    >\n      <svg\n        width={styles.radius * 2 + styles.SVGPadding * 2}\n        height={styles.radius * 2 + styles.SVGPadding * 2}\n      >\n        <circle\n          cx={styles.radius + styles.SVGPadding}\n          cy={styles.radius + styles.SVGPadding}\n          r={styles.radius}\n          stroke={styles.borderColor}\n          strokeWidth={styles.strokeWidth}\n          fillOpacity={styles.fillOpacity}\n        />\n        <line\n          x1={styles.radius + styles.SVGPadding}\n          y1={styles.SVGPadding}\n          x2={styles.radius + styles.SVGPadding}\n          y2={styles.radius * 2 + styles.SVGPadding}\n          stroke={styles.borderColor}\n          strokeWidth={styles.strokeWidth}\n        />\n        <line\n          x1={styles.SVGPadding}\n          y1={styles.radius + styles.SVGPadding}\n          x2={styles.radius * 2 + styles.SVGPadding}\n          y2={styles.radius + styles.SVGPadding}\n          stroke={styles.borderColor}\n          strokeWidth={styles.strokeWidth}\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default PeakPointer;\n","import { CSSProperties } from 'react';\n\nimport { useChartData } from '../../context/ChartContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport { options } from '../../toolbar/ToolTypes';\n\nconst styles: CSSProperties = {\n  transformOrigin: 'top left',\n  position: 'absolute',\n  top: '0px',\n  left: '0px',\n  width: 1,\n  backgroundColor: 'red',\n};\n\nfunction VerticalIndicator() {\n  const {\n    height,\n    toolOptions: {\n      selectedTool,\n      data: { pivot },\n    },\n  } = useChartData();\n  const { scaleX } = useScaleChecked();\n\n  if (options.phaseCorrection.id !== selectedTool) return null;\n  return (\n    <div\n      style={{\n        ...styles,\n        transform: `translate(${scaleX()(pivot.value)}px, 0px)`,\n        height: height,\n      }}\n    />\n  );\n}\n\nexport default VerticalIndicator;\n","import { useContext, useCallback, useMemo, CSSProperties } from 'react';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { BrushContext } from '../../EventsTrackers/BrushTracker';\nimport { MouseContext } from '../../EventsTrackers/MouseTracker';\nimport { useChartData } from '../../context/ChartContext';\nimport { useScaleChecked } from '../../context/ScaleContext';\nimport { useFormatNumberByNucleus } from '../../utility/FormatNumber';\n\nconst style: CSSProperties = {\n  cursor: 'crosshair',\n  transformOrigin: 'bottom right',\n  position: 'absolute',\n  top: '-18px',\n  left: '-30px',\n  pointerEvents: 'none',\n  overflow: 'visible',\n  userSelect: 'none',\n};\n\nfunction XLabelPointer() {\n  const { height, width, margin, data, activeSpectrum } = useChartData();\n  const { scaleX } = useScaleChecked();\n\n  const position = useContext(MouseContext);\n  const brushState = useContext(BrushContext);\n  const activeSpectrumData = useMemo(() => {\n    const spectrumData = activeSpectrum\n      ? data.find((d) => d.id === activeSpectrum.id)\n      : null;\n    return spectrumData;\n  }, [activeSpectrum, data]);\n\n  const format = useFormatNumberByNucleus(\n    (activeSpectrumData as Datum1D)?.info.nucleus,\n  );\n\n  const getXValue = useCallback(\n    (xVal) => {\n      if (activeSpectrumData) {\n        const xInvert = scaleX().invert(xVal);\n        return format(xInvert);\n      }\n    },\n    [activeSpectrumData, format, scaleX],\n  );\n\n  if (\n    !activeSpectrum ||\n    brushState.step === 'brushing' ||\n    !position ||\n    position.y < margin.top ||\n    position.x < margin.left ||\n    position.x > width - margin.right ||\n    position.y > height - margin.bottom\n  ) {\n    return null;\n  }\n  return (\n    <div\n      key=\"xLabelPointer\"\n      style={{\n        ...style,\n        transform: `translate(${position.x}px, ${position.y}px)`,\n      }}\n    >\n      <span>{getXValue(position.x)}</span>\n    </div>\n  );\n}\n\nexport default XLabelPointer;\n","import { xGetFromToIndex } from 'ml-spectra-processing';\nimport { useCallback, useEffect, useReducer, ReactNode } from 'react';\nimport { ResponsiveChart } from 'react-d3-utils';\n\nimport { MAX_LENGTH } from '../../data/data1d/Spectrum1D/ranges/detectSignal';\nimport { Datum1D } from '../../data/types/data1d';\nimport { ViewerResponsiveWrapper } from '../2d/Viewer2D';\nimport { BrushTracker } from '../EventsTrackers/BrushTracker';\nimport { MouseTracker } from '../EventsTrackers/MouseTracker';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport { usePreferences } from '../context/PreferencesContext';\nimport { ScaleProvider } from '../context/ScaleContext';\nimport { useAlert } from '../elements/popup/Alert';\nimport { useModal } from '../elements/popup/Modal';\nimport Spinner from '../loader/Spinner';\nimport MultipletAnalysisModal from '../modal/MultipletAnalysisModal';\nimport { ZoomType } from '../reducer/helper/Zoom1DManager';\nimport getRange from '../reducer/helper/getRange';\nimport scaleReducer, {\n  scaleInitialState,\n  SET_SCALE,\n} from '../reducer/scaleReducer';\nimport {\n  ADD_INTEGRAL,\n  ADD_PEAKS,\n  ADD_BASE_LINE_ZONE,\n  BRUSH_END,\n  FULL_ZOOM_OUT,\n  SET_ZOOM,\n  ADD_PEAK,\n  SET_VERTICAL_INDICATOR_X_POSITION,\n  ADD_RANGE,\n  ANALYZE_SPECTRA,\n  ADD_EXCLUSION_ZONE,\n} from '../reducer/types/Types';\nimport BrushXY, { BRUSH_TYPE } from '../tool/BrushXY';\nimport CrossLinePointer from '../tool/CrossLinePointer';\nimport { options } from '../toolbar/ToolTypes';\nimport Events from '../utility/Events';\n\nimport Chart1D from './Chart1D';\nimport FooterBanner from './FooterBanner';\nimport SpectraTracker from './SpectraTracker';\nimport PeakPointer from './tool/PeakPointer';\nimport VerticalIndicator from './tool/VerticalIndicator';\nimport XLabelPointer from './tool/XLabelPointer';\n\ninterface Viewer1DProps {\n  emptyText?: ReactNode;\n}\n\nfunction Viewer1D({ emptyText = undefined }: Viewer1DProps) {\n  const {\n    current: {\n      display: { general },\n    },\n  } = usePreferences();\n  const state = useChartData();\n\n  const {\n    toolOptions: { selectedTool },\n    isLoading,\n    data,\n    mode,\n    width: widthProp,\n    height: heightProp,\n    margin,\n    activeSpectrum,\n    xDomain,\n    xDomains,\n    yDomain,\n    yDomains,\n    verticalAlign,\n    displayerKey,\n  } = state;\n\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const alert = useAlert();\n\n  const [scaleState, dispatchScale] = useReducer(\n    scaleReducer,\n    scaleInitialState,\n  );\n\n  useEffect(() => {\n    if (xDomain.length > 0 && yDomain.length > 0 && widthProp && heightProp) {\n      dispatchScale({\n        type: SET_SCALE,\n        payload: {\n          yDomain,\n          yDomains,\n          xDomain,\n          xDomains,\n          margin,\n          height: heightProp,\n          width: widthProp,\n          verticalAlign,\n          mode,\n        },\n      });\n    }\n  }, [\n    heightProp,\n    margin,\n    mode,\n    verticalAlign,\n    widthProp,\n    xDomain,\n    xDomains,\n    yDomain,\n    yDomains,\n  ]);\n\n  const handelBrushEnd = useCallback(\n    (brushData) => {\n      const propagateEvent = () => {\n        if (!scaleState.scaleX || !scaleState.scaleY) return;\n\n        const { startX, endX } = brushData;\n        const startXPPM = scaleState.scaleX().invert(startX);\n        const endXPPM = scaleState.scaleX().invert(endX);\n        Events.emit('brushEnd', {\n          ...brushData,\n          range: [startXPPM, endXPPM].sort((a, b) => a - b),\n        });\n      };\n\n      if (brushData.altKey) {\n        switch (selectedTool) {\n          case options.rangesPicking.id: {\n            if (!general?.disableMultipletAnalysis) {\n              modal.show(\n                <MultipletAnalysisModal\n                  data={data}\n                  activeSpectrum={activeSpectrum}\n                  scaleX={scaleState.scaleX}\n                  {...brushData}\n                />,\n                {\n                  onClose: () => {\n                    modal.close();\n                  },\n                },\n              );\n            }\n            break;\n          }\n          default:\n            break;\n        }\n      } else if (brushData.shiftKey) {\n        switch (selectedTool) {\n          case options.integral.id:\n            dispatch({\n              type: ADD_INTEGRAL,\n              ...brushData,\n            });\n            break;\n          case options.rangesPicking.id: {\n            const [from, to] = getRange(state, {\n              startX: brushData.startX,\n              endX: brushData.endX,\n            });\n\n            if (!activeSpectrum) break;\n\n            const {\n              data: { x },\n            } = state.data[activeSpectrum.index] as Datum1D;\n\n            const { fromIndex, toIndex } = xGetFromToIndex(x, { from, to });\n\n            if (toIndex - fromIndex <= MAX_LENGTH) {\n              dispatch({\n                type: ADD_RANGE,\n                payload: {\n                  ...brushData,\n                },\n              });\n            } else {\n              alert.error(\n                `Advanced peak picking only available for area up to ${MAX_LENGTH} points`,\n              );\n            }\n\n            break;\n          }\n          case options.multipleSpectraAnalysis.id:\n            dispatch({\n              type: ANALYZE_SPECTRA,\n              ...brushData,\n            });\n            break;\n\n          case options.peakPicking.id:\n            dispatch({\n              type: ADD_PEAKS,\n              ...brushData,\n            });\n            break;\n\n          case options.baseLineCorrection.id:\n            dispatch({\n              type: ADD_BASE_LINE_ZONE,\n              zone: { from: brushData.startX, to: brushData.endX },\n            });\n            break;\n\n          case options.exclusionZones.id:\n            dispatch({\n              type: ADD_EXCLUSION_ZONE,\n              payload: { from: brushData.startX, to: brushData.endX },\n            });\n            break;\n\n          default:\n            propagateEvent();\n            break;\n        }\n      } else {\n        switch (selectedTool) {\n          default:\n            if (selectedTool != null) {\n              dispatch({ type: BRUSH_END, ...brushData });\n            }\n            break;\n        }\n      }\n    },\n    [\n      scaleState,\n      selectedTool,\n      general?.disableMultipletAnalysis,\n      modal,\n      data,\n      activeSpectrum,\n      dispatch,\n      state,\n      alert,\n    ],\n  );\n\n  const handelOnDoubleClick = useCallback(() => {\n    dispatch({ type: FULL_ZOOM_OUT, zoomType: ZoomType.STEP_HORIZONTAL });\n  }, [dispatch]);\n\n  const handleZoom = useCallback(\n    (event) => {\n      dispatch({ type: SET_ZOOM, event, selectedTool });\n    },\n    [dispatch, selectedTool],\n  );\n\n  const mouseClick = useCallback(\n    (position) => {\n      const propagateEvent = () => {\n        if (!scaleState.scaleX) return;\n\n        const xPPM = scaleState.scaleX().invert(position.x);\n        Events.emit('mouseClick', {\n          ...position,\n          xPPM,\n        });\n      };\n\n      if (position.shiftKey) {\n        switch (selectedTool) {\n          case options.peakPicking.id:\n            dispatch({\n              type: ADD_PEAK,\n              mouseCoordinates: position,\n            });\n            break;\n          case options.editRange.id:\n            propagateEvent();\n            break;\n          default:\n            break;\n        }\n      } else {\n        switch (selectedTool) {\n          case options.phaseCorrection.id:\n            dispatch({\n              type: SET_VERTICAL_INDICATOR_X_POSITION,\n              position: position.x,\n            });\n            break;\n\n          default:\n        }\n      }\n    },\n    [dispatch, scaleState, selectedTool],\n  );\n\n  return (\n    <ScaleProvider value={scaleState}>\n      <ResponsiveChart>\n        {({ height, width }) => (\n          <ViewerResponsiveWrapper height={height} width={width}>\n            <div style={{ height: '100%', position: 'relative' }}>\n              <Spinner isLoading={isLoading} emptyText={emptyText} />\n\n              {scaleState.scaleX &&\n                scaleState.scaleY &&\n                data &&\n                data.length > 0 && (\n                  <BrushTracker\n                    onBrush={handelBrushEnd}\n                    onDoubleClick={handelOnDoubleClick}\n                    onClick={mouseClick}\n                    onZoom={handleZoom}\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      margin: 'auto',\n                      position: 'relative',\n                      overflow: 'hidden',\n                    }}\n                  >\n                    <MouseTracker\n                      style={{\n                        width: '100%',\n                        height: `100%`,\n                        position: 'absolute',\n                      }}\n                    >\n                      <SpectraTracker />\n                      <CrossLinePointer />\n                      <BrushXY brushType={BRUSH_TYPE.X} />\n                      <XLabelPointer />\n                      <PeakPointer />\n                      <VerticalIndicator />\n                      <FooterBanner />\n                      <Chart1D\n                        width={widthProp}\n                        height={heightProp}\n                        margin={margin}\n                        mode={mode}\n                        displayerKey={displayerKey}\n                      />\n                    </MouseTracker>\n                  </BrushTracker>\n                )}\n            </div>\n          </ViewerResponsiveWrapper>\n        )}\n      </ResponsiveChart>\n    </ScaleProvider>\n  );\n}\n\nexport default Viewer1D;\n","import { CSSProperties } from 'react';\nimport { FallbackProps } from 'react-error-boundary';\n\ntype RecordKey = 'container' | 'header' | 'title' | 'body';\n\nconst styles: Record<RecordKey, CSSProperties> = {\n  container: {\n    margin: '25px',\n  },\n\n  header: {\n    backgroundColor: '#ffffff',\n    padding: '20px',\n    borderRadius: '10px',\n    fontSize: '30px',\n    textAlign: 'center',\n  },\n\n  title: {\n    textDecoration: 'underline',\n  },\n\n  body: {\n    marginTop: '10px',\n    whiteSpace: 'pre-wrap',\n    backgroundColor: 'white',\n    padding: '20px',\n    borderRadius: '10px',\n    color: 'red',\n  },\n};\n\nexport default function ErrorOverlay(props: FallbackProps) {\n  return (\n    <div style={styles.container}>\n      <p style={styles.header}>Something went wrong.</p>\n      <details style={styles.body}>\n        <p style={styles.title}>{props.error.message}</p>\n        {props.error.stack}\n      </details>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css, CSSObject, SerializedStyles } from '@emotion/react';\nimport {\n  ReactNode,\n  ButtonHTMLAttributes,\n  CSSProperties,\n  MouseEvent,\n} from 'react';\n\ntype Size = 'xSmall' | 'small' | 'medium' | 'large';\n\ntype Color = CSSProperties['color'];\n\ninterface BaseColor {\n  base: Color;\n  hover: Color;\n  active?: Color;\n}\n\ntype Fill = 'clear' | 'outline' | 'solid';\n\ntype ColorTheme = 'success' | 'danger' | 'warning' | 'medium' | 'light';\n\ntype ColorPalettes = Record<\n  ColorTheme,\n  {\n    base: Color;\n    shade: Color;\n    tint: Color;\n  }\n>;\n\nconst colorPalettes: ColorPalettes = {\n  success: {\n    base: '#2dd36f',\n    shade: '#28ba62',\n    tint: '#42d77d',\n  },\n  danger: {\n    base: '#eb445a',\n    shade: '#cf3c4f',\n    tint: '#ed576b',\n  },\n  warning: {\n    base: '#ffc409',\n    shade: '#e0ac08',\n    tint: '#ffca22',\n  },\n  medium: {\n    base: '#92949c',\n    shade: '#808289',\n    tint: '#9d9fa6',\n  },\n  light: {\n    base: '#f4f5f8',\n    shade: '#d7d8da',\n    tint: '#f5f6f9',\n  },\n};\n\nconst sizeConfig: Record<\n  Size,\n  Pick<CSSProperties, 'fontSize' | 'padding' | 'borderRadius'>\n> = {\n  xSmall: {\n    fontSize: '0.75rem',\n    padding: '0.15rem 0.3rem',\n    borderRadius: '0.15rem',\n  },\n  small: {\n    fontSize: '0.8rem',\n    padding: '0.25rem 0.5rem',\n    borderRadius: '0.2rem',\n  },\n  medium: {\n    fontSize: '1rem',\n    padding: '0.375rem 0.75rem',\n    borderRadius: '0.25rem',\n  },\n  large: {\n    fontSize: '1.25rem',\n    padding: '0.5rem 1rem',\n    borderRadius: '0.3rem',\n  },\n};\n\ninterface ButtonStyle {\n  color: BaseColor;\n  size: Size;\n  borderColor: Color;\n  backgroundColor: BaseColor;\n  borderRadius?: CSSProperties['borderRadius'];\n  fill?: Fill;\n  style?: CSSObject;\n}\n\ninterface Style {\n  button: (props: ButtonStyle) => SerializedStyles;\n}\n\nfunction getFillStyle(props: ButtonStyle) {\n  const { borderColor, fill, backgroundColor, color } = props;\n\n  switch (fill) {\n    case 'solid': {\n      return css`\n        border-color: transparent;\n        background-color: ${backgroundColor.base};\n        color: ${color.hover};\n      `;\n    }\n    case 'outline': {\n      return css`\n        border-style: solid;\n        border-color: ${backgroundColor.base};\n        background-color: transparent;\n        color: ${color.base};\n      `;\n    }\n\n    case 'clear': {\n      return css`\n        border-color: transparent;\n        background-color: transparent;\n        color: ${color.base};\n      `;\n    }\n    default:\n      return css`\n        background-color: ${backgroundColor.base};\n        color: ${color.base};\n        border-color: ${borderColor};\n      `;\n  }\n}\n\nconst styles: Style = {\n  button: (props) => {\n    const { size, backgroundColor, color, borderRadius } = props;\n\n    const basic = css`\n      display: flex;\n      flex-direction: row;\n      border-width: 1px;\n      align-items: center;\n    `;\n\n    const fillStyle = getFillStyle(props);\n\n    const colorStyle = css`\n      &:not([disabled]):hover {\n        background-color: ${backgroundColor.hover};\n        color: ${color.hover};\n      }\n      &:not([disabled]):active {\n        background-color: ${backgroundColor?.active || backgroundColor.hover};\n        color: ${color?.active || color.hover};\n      }\n\n      &:disabled {\n        opacity: 0.25;\n      }\n    `;\n    return css([\n      basic,\n      sizeConfig[size],\n      fillStyle,\n      colorStyle,\n      { borderRadius },\n    ]);\n  },\n};\n\ninterface ButtonProps\n  extends Partial<ButtonStyle>,\n    Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'color' | 'style'> {\n  onClick?: (event?: MouseEvent<HTMLButtonElement>) => void;\n  children: ReactNode;\n}\n\nconst Button = (props: ButtonProps) => {\n  const {\n    onClick,\n    size = 'small',\n    color = { base: 'black', hover: 'white' },\n    backgroundColor = { base: 'white', hover: 'black', active: 'black' },\n    borderColor = 'transparent',\n    fill,\n    borderRadius,\n    style = {},\n    ...restProps\n  } = props;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      css={[\n        styles.button({\n          size,\n          backgroundColor,\n          color,\n          borderColor,\n          fill,\n          borderRadius,\n        }),\n        style,\n      ]}\n      {...restProps}\n    >\n      <span style={{ flex: 1 }}> {props.children}</span>\n    </button>\n  );\n};\n\nfunction ThemeButton(props: { colorTheme: ColorTheme } & ButtonProps) {\n  const { colorTheme, ...buttonProps } = props;\n  const { base, shade, tint } = colorPalettes[props.colorTheme];\n\n  const {\n    color = { base: shade, hover: 'white' },\n    backgroundColor = {\n      base: base,\n      hover: shade,\n      active: tint,\n    },\n    fill = 'solid',\n    ...restProps\n  } = buttonProps;\n  return <Button {...{ fill, ...restProps, backgroundColor, color }} />;\n}\n\nButton.Done = (props: ButtonProps) => {\n  return <ThemeButton {...props} colorTheme=\"success\" />;\n};\nButton.Danger = (props: ButtonProps) => {\n  return <ThemeButton {...props} colorTheme=\"danger\" />;\n};\nButton.Action = (props: ButtonProps) => {\n  return <ThemeButton {...props} colorTheme=\"medium\" />;\n};\n\nexport default Button;\n","import { CSSProperties, MouseEvent } from 'react';\n\nimport Button from './Button';\n\ninterface ActionButtonsProps {\n  onDone: (event?: MouseEvent) => void;\n  onCancel: (event?: MouseEvent) => void;\n  doneLabel?: string;\n  cancelLabel?: string;\n  style?: CSSProperties;\n}\n\nexport default function ActionButtons(props: ActionButtonsProps) {\n  const {\n    onDone,\n    onCancel,\n    doneLabel = 'Apply',\n    cancelLabel = 'Cancel',\n    style = {},\n  } = props;\n  return (\n    <div style={{ margin: '0 10px', display: 'flex', ...style }}>\n      <Button.Done\n        onClick={onDone}\n        style={\n          style?.flexDirection === 'row-reverse'\n            ? {\n                marginLeft: '10px',\n              }\n            : {}\n        }\n      >\n        {doneLabel}\n      </Button.Done>\n      <Button.Danger\n        fill=\"outline\"\n        onClick={onCancel}\n        style={\n          !style.flexDirection || style.flexDirection === 'row'\n            ? {\n                marginLeft: '10px',\n              }\n            : {}\n        }\n      >\n        {cancelLabel}\n      </Button.Danger>\n    </div>\n  );\n}\n","import {\n  useState,\n  useCallback,\n  ChangeEvent,\n  forwardRef,\n  ForwardedRef,\n  CSSProperties,\n} from 'react';\n\nexport interface CheckBoxProps {\n  onChange?: (value: ChangeEvent<HTMLInputElement>) => void;\n  name?: string;\n  disabled?: boolean;\n  checked?: boolean;\n  style?: CSSProperties;\n}\n\nconst CheckBox = forwardRef(\n  (props: CheckBoxProps, ref: ForwardedRef<HTMLInputElement>) => {\n    const {\n      checked: checkProps = false,\n      disabled = false,\n      name = '',\n      onChange = () => null,\n      style = {},\n    } = props;\n\n    const [checked, setCheck] = useState<boolean>(checkProps);\n\n    const handleCheck = useCallback(\n      (e) => {\n        setCheck(!checked);\n        onChange(e);\n      },\n      [checked, onChange],\n    );\n\n    return (\n      <input\n        ref={ref}\n        type=\"checkbox\"\n        name={name}\n        id={name}\n        onChange={handleCheck}\n        defaultChecked={checkProps}\n        disabled={disabled}\n        style={style}\n      />\n    );\n  },\n);\n\nexport default CheckBox;\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { CSSProperties, useCallback } from 'react';\n\nimport CheckBox, { CheckBoxProps } from '../CheckBox';\n\ninterface FormikCheckBoxProps extends Omit<CheckBoxProps, 'style'> {\n  name: string;\n  label?: string;\n  className?: string;\n  reverse?: boolean;\n  style?: {\n    container?: CSSProperties;\n    label?: CSSProperties;\n    checkbox?: CSSProperties;\n  };\n}\n\nfunction FormikCheckBox(props: FormikCheckBoxProps) {\n  const {\n    label,\n    name,\n    onChange = () => null,\n    className = 'checkbox',\n    reverse = false,\n    style = { container: {}, label: {}, checkbox: {} },\n    ...resProps\n  } = props;\n\n  const { values, setFieldValue } = useFormikContext();\n  const value = reverse ? !lodashGet(values, name) : lodashGet(values, name);\n\n  const changeHandler = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      e.persist();\n      onChange(e);\n      setFieldValue(name, reverse ? value : !value);\n    },\n    [name, onChange, reverse, setFieldValue, value],\n  );\n\n  return (\n    <div\n      className={`${className} check-${value}`}\n      style={style.container ? style.container : {}}\n    >\n      {label && (\n        <label\n          htmlFor={name}\n          className=\"checkbox-label\"\n          style={style.label ? style.label : {}}\n        >\n          {label}\n        </label>\n      )}\n      <CheckBox\n        {...resProps}\n        name={name}\n        checked={value}\n        onChange={changeHandler}\n        style={style.checkbox ? style.checkbox : {}}\n      />\n    </div>\n  );\n}\n\nexport default FormikCheckBox;\n","import { Formik, FormikHelpers, FormikProps } from 'formik';\nimport { ForwardedRef, forwardRef, ReactNode } from 'react';\n\ninterface FormikFormProps {\n  initialValues?: any;\n  onSubmit?: (values: any, helpers: FormikHelpers<any>) => void;\n  validationSchema?: any;\n  children?: Array<ReactNode> | ReactNode;\n}\n\nconst FormikForm = forwardRef(\n  (props: FormikFormProps, ref: ForwardedRef<FormikProps<any>>) => {\n    const {\n      onSubmit = () => null,\n      initialValues = {},\n      validationSchema = null,\n    } = props;\n\n    return (\n      <Formik\n        innerRef={ref}\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        <>{props.children}</>\n      </Formik>\n    );\n  },\n);\n\nexport default FormikForm;\n","import { LegacyRef, MutableRefObject, useEffect, useRef } from 'react';\n\nexport default function useCombinedRefs(\n  refs: Array<MutableRefObject<any> | LegacyRef<any>>,\n) {\n  const targetRef = useRef<any>();\n\n  useEffect(() => {\n    refs.forEach((ref) => {\n      if (!ref) return;\n      if (typeof ref === 'function') {\n        ref(targetRef.current);\n      } else {\n        (ref as MutableRefObject<any>).current = targetRef.current;\n      }\n    });\n  }, [refs]);\n\n  return targetRef;\n}\n","import debounce from 'lodash/debounce';\nimport {\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  CSSProperties,\n  forwardRef,\n  ForwardedRef,\n  ReactElement,\n} from 'react';\n\nimport useCombinedRefs from '../hooks/useCombinedRefs';\n\nconst styles: Record<\n  'label' | 'input' | 'inputWrapper' | 'clearButton',\n  CSSProperties\n> = {\n  label: {\n    lineHeight: 2,\n    userSelect: 'none',\n  },\n\n  inputWrapper: {\n    height: '100%',\n    width: '100px',\n    borderRadius: '5px',\n    borderWidth: '0.55px',\n    borderColor: '#c7c7c7',\n    borderStyle: 'solid',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  input: {\n    outline: 'none',\n    flex: 1,\n    height: '100%',\n    textAlign: 'center',\n    width: '100%',\n  },\n  clearButton: {\n    height: 'calc(100% - 4px)',\n    borderRadius: '50%',\n    backgroundColor: 'gray',\n    color: 'white',\n    aspectRatio: '1',\n    fontSize: '60%',\n    padding: 0,\n  },\n};\n\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'style'> {\n  style?: {\n    input?: CSSProperties;\n    inputWrapper?: CSSProperties;\n  };\n  enableAutoSelect?: boolean;\n  debounceTime?: number;\n  checkValue?: (element: number | string) => boolean;\n  format?: () => (element: string) => number | string;\n  renderIcon?: (() => ReactElement) | null;\n  canClear?: boolean;\n  onClear?: () => void;\n}\n\nconst Input = forwardRef(\n  (\n    {\n      value = '',\n      name,\n      style = {\n        input: {},\n        inputWrapper: {},\n      },\n      onChange = () => null,\n      debounceTime = 0,\n      onKeyDown = () => null,\n      checkValue = () => true,\n      type = 'text',\n      enableAutoSelect = false,\n      className,\n      format = () => (value) => value,\n      onBlur = () => null,\n      onFocus = () => null,\n      renderIcon = null,\n      canClear = false,\n      onClear,\n      ...props\n    }: InputProps,\n    ref: ForwardedRef<HTMLInputElement>,\n  ) => {\n    const [val, setVal] = useState(value);\n    const localRef = useRef<any>();\n    const combinedRef = useCombinedRefs([ref, localRef]);\n\n    const debounceOnChange = useRef(\n      debounce((value) => {\n        onChange(value);\n      }, debounceTime),\n    ).current;\n\n    useEffect(() => {\n      setVal(value);\n    }, [value]);\n\n    useEffect(() => {\n      if (enableAutoSelect) {\n        combinedRef?.current?.select();\n      }\n    }, [enableAutoSelect, combinedRef]);\n\n    const getValue = useCallback(\n      (value) => {\n        const formatValue = format();\n        return formatValue(\n          type === 'number'\n            ? String(value).trim() === '-'\n              ? Number(0)\n              : Number(value)\n            : value,\n        );\n      },\n      [format, type],\n    );\n\n    const onChangeHandler = useCallback(\n      (e) => {\n        e.persist();\n        e.stopPropagation();\n        e.preventDefault();\n        function check(value) {\n          if (type === 'number') {\n            const pattern = /^(?:-?[0-9]*|[0-9]\\d*)(?:\\.\\d{0,20})?$/;\n            if (value.trim() === '' || pattern.test(value)) {\n              return true;\n            }\n            return false;\n          }\n          return true;\n        }\n\n        const _value: string = e.target.value;\n        if (check(_value) && checkValue(_value)) {\n          const formatValue = format();\n\n          setVal(formatValue(_value));\n\n          const val = {\n            ...e,\n            target: { name: e.target.name, value: getValue(_value) },\n          };\n\n          if (debounceTime) {\n            debounceOnChange(val);\n          } else {\n            onChange(val);\n          }\n        }\n      },\n      [\n        checkValue,\n        debounceOnChange,\n        debounceTime,\n        format,\n        getValue,\n        onChange,\n        type,\n      ],\n    );\n\n    const handleKeyDown = useCallback(\n      (event) => {\n        event.persist();\n        onKeyDown({\n          ...event,\n          target: { name: event.target.name, value: getValue(val) },\n        });\n      },\n      [getValue, onKeyDown, val],\n    );\n    const preventPropagate = useCallback((event) => {\n      event.stopPropagation();\n    }, []);\n\n    const clearHandler = useCallback(() => {\n      setVal('');\n      onClear?.();\n    }, [onClear]);\n\n    return (\n      <div\n        style={{\n          ...styles.inputWrapper,\n          ...(style?.inputWrapper ? style.inputWrapper : {}),\n        }}\n        className={`input ${className || ''}`}\n      >\n        {renderIcon?.()}\n        <input\n          {...props}\n          ref={combinedRef}\n          name={name}\n          style={{\n            ...styles.input,\n            ...(style?.input ? style.input : {}),\n          }}\n          data-test-id={name ? `input-${name}` : ''}\n          type=\"text\"\n          value={val}\n          onChange={onChangeHandler}\n          onKeyDown={handleKeyDown}\n          onKeyPress={preventPropagate}\n          onDoubleClick={(e) => e.stopPropagation()}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        />\n        {canClear && val && (\n          <button\n            type=\"button\"\n            style={styles.clearButton}\n            onClick={clearHandler}\n          >\n            <span style={{ display: 'block', margin: '0 auto' }}>&#10005;</span>\n          </button>\n        )}\n      </div>\n    );\n  },\n);\n\nexport default Input;\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, useEffect, useMemo } from 'react';\n\nimport Input, { InputProps } from '../Input';\n\ninterface FormikInputProps extends InputProps {\n  name: string;\n  checkErrorAfterInputTouched?: boolean;\n}\n\nfunction FormikInput(props: FormikInputProps) {\n  const {\n    name,\n    style = { label: {}, input: {} },\n    onChange = () => null,\n    checkValue = () => true,\n    type = 'text',\n    className = '',\n    value = null,\n    format = () => (value) => value,\n    checkErrorAfterInputTouched = true,\n    ...resProps\n  } = props;\n\n  const { values, handleChange, setFieldValue, errors, touched } =\n    useFormikContext();\n\n  const changeHandler = useCallback(\n    (e) => {\n      onChange(e);\n      handleChange(e);\n    },\n    [handleChange, onChange],\n  );\n\n  useEffect(() => {\n    if (value) {\n      setFieldValue(name, value);\n    }\n  }, [name, setFieldValue, value]);\n\n  const isInvalid = useMemo(() => {\n    if (checkErrorAfterInputTouched) {\n      return lodashGet(errors, name) && lodashGet(touched, name);\n    }\n    return lodashGet(errors, name);\n  }, [checkErrorAfterInputTouched, errors, name, touched]);\n\n  return (\n    <Input\n      name={name}\n      value={value ? value : lodashGet(values, name)}\n      onChange={changeHandler}\n      type={type}\n      style={{\n        ...style,\n        inputWrapper: {\n          ...style.input,\n          ...(isInvalid && { borderColor: 'red', outline: 'none' }),\n        },\n      }}\n      checkValue={checkValue}\n      className={className}\n      format={format}\n      {...resProps}\n    />\n  );\n}\n\nexport default FormikInput;\n","import { css } from '@emotion/react';\n\nexport const ModalStyles = css`\n  overflow: auto;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  .header {\n    text-align: center;\n    padding: 10px 0 10px 0px;\n    margin: 0px;\n    color: #005d9e;\n    place-items: normal;\n    text-transform: none;\n    background-color: #fcfcfc;\n  }\n\n  .tab-content {\n    width: 100%;\n  }\n  .row {\n    display: flex;\n  }\n\n  .inner-content {\n    padding: 15px 30px;\n    width: 100%;\n    overflow: auto;\n  }\n\n  .footer-container {\n    display: flex;\n    flex-direction: row;\n    align-items: end;\n    justify-content: end;\n\n    background: rgb(242, 242, 242);\n    background: -moz-linear-gradient(\n      0deg,\n      rgba(242, 242, 242, 1) 0%,\n      rgba(245, 245, 245, 1) 37%,\n      rgba(255, 255, 255, 1) 90%\n    );\n    background: -webkit-linear-gradient(\n      0deg,\n      rgba(242, 242, 242, 1) 0%,\n      rgba(245, 245, 245, 1) 37%,\n      rgba(255, 255, 255, 1) 90%\n    );\n    background: linear-gradient(\n      0deg,\n      rgba(242, 242, 242, 1) 0%,\n      rgba(245, 245, 245, 1) 37%,\n      rgba(255, 255, 255, 1) 90%\n    );\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#f2f2f2\",endColorstr=\"#ffffff\",GradientType=1);\n    padding: 6px 15px;\n    height: 55px;\n  }\n\n  .section-header {\n    font-size: 13px;\n    color: #2ca8ff;\n    margin-bottom: 10px;\n    border-bottom: 0.55px solid #f9f9f9;\n    padding: 6px 2px;\n  }\n\n  .custom-label {\n    font-size: 12px;\n    font-weight: bold;\n    margin-right: 10px;\n    width: 120px;\n  }\n  .margin-10 {\n    margin: 10px 0;\n  }\n  .padding-h-10 {\n    margin: 10px;\n  }\n\n  .input {\n    font-size: 14px;\n    border-radius: 5px;\n    border: 1px solid #cccccc;\n    padding: 5px;\n    width: 100px;\n    margin-right: 10px;\n    height: initial !important;\n  }\n\n  .close-bt {\n    border: none;\n    color: red;\n    background-color: transparent;\n    outline: none;\n    position: absolute;\n    right: 10px;\n    top: 2px;\n    width: 30px;\n    height: 30px;\n  }\n`;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Field } from 'formik';\nimport { useCallback, useRef } from 'react';\n\nimport { DataExportOptions } from '../../data/SpectraManager';\nimport ActionButtons from '../elements/ActionButtons';\nimport CloseButton from '../elements/CloseButton';\nimport FormikCheckBox from '../elements/formik/FormikCheckBox';\nimport FormikForm from '../elements/formik/FormikForm';\nimport FormikInput from '../elements/formik/FormikInput';\n\nimport { ModalStyles } from './ModalStyle';\n\nconst styles = css`\n  .row {\n    align-items: center;\n  }\n\n  .inner-content {\n    flex: 1;\n  }\n\n  .custom-label {\n    width: 80px;\n  }\n\n  .name {\n    width: 100% !important;\n    text-align: left !important;\n  }\n\n  .data-export-group {\n    label:first-child {\n      margin-right: 10px;\n    }\n    label {\n      display: inline-block;\n    }\n    input[type='radio'] {\n      margin-right: 5px;\n    }\n  }\n`;\n\nconst INITIAL_VALUE = {\n  name: '',\n  compressed: false,\n  pretty: false,\n  dataExportOption: DataExportOptions.ROW_DATA,\n};\n\ninterface SaveAsModalProps {\n  onClose?: (event?: MouseEvent) => void;\n  onSave: (element: any) => void;\n  name: string;\n}\n\nfunction SaveAsModal({ onClose, onSave, name }: SaveAsModalProps) {\n  const refForm = useRef<any>();\n\n  const handleSave = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n\n  const submitHandler = useCallback(\n    (values) => {\n      onSave(values);\n      onClose?.();\n    },\n    [onClose, onSave],\n  );\n\n  return (\n    <div css={[ModalStyles, styles]}>\n      <div className=\"header handle\">\n        <span>Save as ... </span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"inner-content\">\n        <FormikForm\n          ref={refForm}\n          initialValues={{ ...INITIAL_VALUE, name }}\n          onSubmit={submitHandler}\n        >\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Name</span>\n            <FormikInput\n              name=\"name\"\n              className=\"name\"\n              style={{\n                inputWrapper: { width: '100%' },\n              }}\n            />\n          </div>\n\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Compressed</span>\n            <FormikCheckBox name=\"compressed\" />\n          </div>\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Pretty Format</span>\n            <FormikCheckBox name=\"pretty\" />\n          </div>\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\"> Include </span>\n            <div className=\"data-export-group\">\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"dataExportOption\"\n                  value={DataExportOptions.ROW_DATA}\n                />\n                Raw Data\n              </label>\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"dataExportOption\"\n                  value={DataExportOptions.DATA_SOURCE}\n                />\n                Data Source\n              </label>\n            </div>\n          </div>\n        </FormikForm>\n      </div>\n      <div className=\"footer-container\">\n        <ActionButtons\n          style={{ flexDirection: 'row-reverse', margin: 0 }}\n          onDone={handleSave}\n          doneLabel=\"Save\"\n          onCancel={() => onClose?.()}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default SaveAsModal;\n","import { saveAs } from 'file-saver';\nimport JSZip from 'jszip';\n\nfunction copyFormattedHtml(html) {\n  // Create an iframe (isolated container) for the HTML\n  let container = document.createElement('div');\n  container.innerHTML = html;\n\n  // Hide element\n  container.style.position = 'fixed';\n  container.style.pointerEvents = 'none';\n  container.style.opacity = '0';\n\n  // Detect all style sheets of the page\n  let activeSheets = Array.prototype.slice\n    .call(document.styleSheets)\n    .filter((sheet) => {\n      return !sheet.disabled;\n    });\n\n  // Mount the iframe to the DOM to make `contentWindow` available\n  document.body.appendChild(container);\n\n  // Copy to clipboard\n  window.getSelection()?.removeAllRanges();\n\n  let range = document.createRange();\n  range.selectNode(container);\n  window.getSelection()?.addRange(range);\n\n  document.execCommand('copy');\n  for (const active of activeSheets) {\n    active.disabled = true;\n  }\n\n  document.execCommand('copy');\n  for (const active of activeSheets) {\n    active.disabled = false;\n  }\n\n  // Remove the iframe\n  document.body.removeChild(container);\n}\n\nasync function copyHTMLToClipboard(data) {\n  try {\n    copyFormattedHtml(data);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nasync function copyTextToClipboard(data) {\n  try {\n    await navigator.clipboard.writeText(data);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n/**\n * export the experiments result in JSON format\n * @param {*} data\n */\nasync function exportAsJSON(\n  data,\n  fileName = 'experiment',\n  spaceIndent = 0,\n  isCompressed = false,\n) {\n  const fileData = JSON.stringify(\n    data,\n    (key, value) =>\n      ArrayBuffer.isView(value) ? Array.from(value as any) : value,\n    spaceIndent,\n  );\n  if (!isCompressed) {\n    const blob = new Blob([fileData], { type: 'text/plain' });\n    saveAs(blob, `${fileName}.nmrium`);\n  } else {\n    try {\n      const zip = new JSZip();\n      zip.file(`${fileName}.nmrium`, fileData);\n      const blob = await zip.generateAsync({\n        type: 'blob',\n        compression: 'DEFLATE',\n        compressionOptions: {\n          level: 9,\n        },\n      });\n      saveAs(blob, `${fileName}.nmrium`);\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log(e);\n    }\n  }\n}\n\nfunction exportAsMatrix(data, options, fileName = 'experiment') {\n  //columns labels\n  const columnsLables = ['name', 'experiment'];\n  for (const value of data[0].data.x) {\n    columnsLables.push(value);\n  }\n  let matrix = `${columnsLables.join('\\t')}\\n`;\n\n  for (const spectrum of data) {\n    const {\n      data: { re },\n      info: { experiment },\n      display: { name },\n    } = spectrum;\n    const cellsValues = [name, experiment];\n    for (const value of re) {\n      cellsValues.push(value);\n    }\n    matrix += `${cellsValues.join('\\t')}\\n`;\n  }\n\n  const blob = new Blob([matrix], { type: 'text/tab-separated-values' });\n  saveAs(blob, `${fileName}.tsv`);\n}\n\nfunction exportAsNMRE(data, fileName = 'experiment') {\n  data.generateAsync({ type: 'blob' }).then((content) => {\n    saveAs(content, `${fileName}.nmredata`);\n  });\n}\n\nfunction exportAsMol(data, fileName = 'mol') {\n  const blob = new Blob([data], { type: 'text/plain' });\n  saveAs(blob, `${fileName}.mol`);\n}\n/**\n * export the vitalization result as SVG, if you need to remove some content during exportation process enclose the the content with <!-- export-remove --> ${content} <!-- export-remove -->\n */\nfunction exportAsSVG(\n  rootRef: HTMLDivElement,\n  elementID: string,\n  fileName = 'experiment',\n) {\n  const { blob } = getBlob(rootRef, elementID);\n  saveAs(blob, `${fileName}.svg`);\n}\n\nfunction exportAsPng(\n  rootRef: HTMLDivElement,\n  elementID: string,\n  fileName = 'experiment',\n) {\n  const { blob, width, height } = getBlob(rootRef, elementID);\n  try {\n    let canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    let context = canvas.getContext('2d');\n\n    if (context) {\n      context.fillStyle = 'white';\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    let img = new Image();\n    let url = URL.createObjectURL(blob);\n    img.onload = async () => {\n      context?.drawImage(img, 0, 0);\n      let png = canvas.toDataURL('image/png', 1);\n      saveAs(png, `${fileName}.png`);\n      URL.revokeObjectURL(png);\n    };\n    img.src = url;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n}\n\nfunction copyDataURLCliboard(image) {\n  const img = document.createElement('img');\n  img.src = image;\n\n  img.style.position = 'fixed';\n  img.style.pointerEvents = 'none';\n  img.style.opacity = '0';\n\n  document.body.appendChild(img);\n  const range = document.createRange();\n  range.selectNode(img);\n  window.getSelection()?.addRange(range);\n  document.execCommand('Copy');\n  document.body.removeChild(img);\n}\n\nfunction copyBlobToCliboard(canvas) {\n  canvas.toBlob((b) => {\n    const clip = new ClipboardItem({\n      [b.type]: b,\n    });\n\n    navigator.clipboard.write([clip]).then(\n      () => {\n        // eslint-disable-next-line no-console\n        console.log('experiment copied.');\n      },\n      (err) => {\n        // eslint-disable-next-line no-console\n        console.log(err);\n      },\n    );\n  });\n}\n\nfunction copyPNGToClipboard(rootRef: HTMLDivElement, elementID: string) {\n  const { blob, width, height } = getBlob(rootRef, elementID);\n  try {\n    let canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    let context = canvas.getContext('2d');\n\n    if (context) {\n      context.fillStyle = 'white';\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    let img = new Image();\n    const url = URL.createObjectURL(blob);\n    img.onload = async () => {\n      context?.drawImage(img, 0, 0);\n      const png = canvas.toDataURL('image/png', 1);\n\n      // @ts-expect-error write exists in some browsers\n      if (navigator.clipboard.write) {\n        copyBlobToCliboard(canvas);\n      } else {\n        copyDataURLCliboard(png);\n      }\n\n      URL.revokeObjectURL(png);\n    };\n    img.src = url;\n  } catch (e) {\n    if (e instanceof ReferenceError) {\n      // eslint-disable-next-line no-alert\n      alert(\n        'Your browser does not support this feature, please use Google Chrome',\n      );\n    }\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n}\n\nfunction getBlob(rootRef: HTMLDivElement, elementID: string) {\n  let _svg: any = (rootRef.getRootNode() as Document)\n    .getElementById(elementID)\n    ?.cloneNode(true);\n  const width = _svg?.getAttribute('width').replace('px', '');\n  const height = _svg?.getAttribute('height').replace('px', '');\n  _svg\n    .querySelectorAll('[data-no-export=\"true\"]')\n    .forEach((element) => element.remove());\n  const head = `<svg class=\"nmr-svg\"  viewBox='0 0 ${width} ${height}' width=\"${width}\"  height=\"${height}\"  version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">`;\n  const style = `<style>.grid line,.grid path{stroke:none;} .peaks-text{fill:#730000} .x path{stroke-width:1px} .x text{\n    font-size: 12px;\n    font-weight: bold;\n  } \n \n  .nmr-svg,.contours{\n    background-color:white;\n    fill:white;\n  }\n  \n\n  \n  </style>`;\n  const svg = `${head + style + _svg.innerHTML}</svg>`;\n  const blob = new Blob([svg], { type: 'image/svg+xml' });\n  return { blob, width, height };\n}\n\nexport {\n  exportAsSVG,\n  exportAsJSON,\n  exportAsNMRE,\n  exportAsPng,\n  copyPNGToClipboard,\n  copyTextToClipboard,\n  copyHTMLToClipboard,\n  exportAsMol,\n  exportAsMatrix,\n};\n","import Jszip from 'jszip';\n\nconst jszip = new Jszip();\n\ninterface addSourceOptions {\n  spectrum?: any;\n  source?: any;\n}\n\nexport async function addSource(nmrRecord, options: addSourceOptions = {}) {\n  const { spectrum, source } = options;\n  const { file = {}, jcampURL } = source;\n  let tag = '';\n  const dimension = `${spectrum.info.dimension}d`;\n  switch (file.extension) {\n    case 'jdx':\n    case 'dx':\n      tag += `\\nJcamp_Location=file:jcamp/${dimension}/${spectrum.display.name}\\\\`;\n      nmrRecord.file(\n        `jcamp/${dimension}/${spectrum.display.name}`,\n        file.binary,\n      );\n      break;\n    case 'zip':\n      if (!file.binary) return;\n      void jszip.loadAsync(file.binary).then(async (zip) => {\n        for (const file in zip.files) {\n          if (file.endsWith('/')) continue;\n          nmrRecord.file(\n            `Bruker/${file}`,\n            await zip.file(file)?.async('arraybuffer'),\n          );\n        }\n        tag += `\\nSpectrum_Location=file:Bruker/${getPathFromZip(zip)}\\\\`;\n      });\n      break;\n    default:\n      if (!jcampURL) break;\n      void (await fetch(jcampURL).then(async (jcamp) => {\n        if (!jcamp) return;\n        let name = jcampURL.split('/').slice(-1);\n        const path = `jcamp/${dimension}/${name}`;\n        tag += `\\nJcamp_Location=file:${path}\\\\`;\n        nmrRecord.file(path, await jcamp.arrayBuffer());\n      }));\n  }\n\n  return tag;\n}\n\nfunction getPathFromZip(zip) {\n  let files = zip.filter((relativePath) => {\n    if (relativePath.match('__MACOSX')) return false;\n    if (\n      relativePath.endsWith('fid') ||\n      relativePath.endsWith('1r') ||\n      relativePath.endsWith('ser') ||\n      relativePath.endsWith('2rr')\n    ) {\n      return true;\n    }\n    return false;\n  });\n  const index = files.findIndex(\n    (file) => file.name.endsWith('1r') || file.name.endsWith('2rr'),\n  );\n  return index > -1 ? files[index].name : files[0].name;\n}\n","export function getToFix(nucleusArray: string | Array<string>) {\n  if (!Array.isArray(nucleusArray)) nucleusArray = [nucleusArray];\n  let toFix: Array<number> = [];\n  for (let nucleus of nucleusArray) {\n    toFix.push(chooseDecimal(nucleus));\n  }\n  return toFix;\n}\n\nfunction chooseDecimal(nucleus: string) {\n  switch (nucleus.toUpperCase()) {\n    case '1H':\n      return 2;\n    case '13C':\n      return 1;\n    default:\n      return 1;\n  }\n}\n","import { addSource } from './addSource';\nimport { getToFix } from './getToFix';\n\ninterface Get1DSignalsOptions {\n  prefix?: string;\n  labels: {\n    byDiaID: Array<{ label: string }>;\n  };\n}\n\nexport async function get1DSignals(\n  data,\n  nmrRecord,\n  options: Get1DSignalsOptions = { labels: { byDiaID: [] } },\n) {\n  let { prefix = '', labels } = options;\n  let str = '';\n  let nucleusArray: Array<Array<any>> = [];\n  for (let spectrum of data) {\n    const { info } = spectrum;\n    if (info.isFid || info.dimension > 1) continue;\n    let partTag = '';\n    let ranges = spectrum.ranges.values || [];\n\n    let nucleus = spectrum.info.nucleus;\n    let counter = 1;\n    let subfix = '';\n    nucleusArray.forEach((e) => {\n      if (e === nucleus) counter++;\n    });\n    nucleusArray.push(nucleus);\n\n    if (counter > 1) subfix = `#${counter}`;\n\n    partTag += `${prefix}1D_${nucleus.toUpperCase()}${subfix}>`;\n\n    if (spectrum.info.baseFrequency) {\n      partTag += `\\nLarmor=${Number(spectrum.info.baseFrequency).toFixed(2)}\\\\`;\n    }\n\n    const { source = {} } = spectrum;\n\n    partTag += await addSource(nmrRecord, {\n      spectrum,\n      source,\n    });\n\n    let toFix = getToFix(nucleus)[0];\n\n    for (let range of ranges) {\n      let signals = range.signals;\n\n      for (let signal of signals) {\n        let { multiplicity } = signal;\n        if ((!multiplicity || multiplicity === 'm') && nucleus === '1H') {\n          partTag += `\\n${Number(range.from).toFixed(toFix)}-${Number(\n            range.to,\n          ).toFixed(toFix)}`;\n        } else if (signal.delta) {\n          partTag += `\\n${Number(signal.delta).toFixed(toFix)}`;\n        } else {\n          continue;\n        }\n\n        let signalLabel = '';\n\n        if (signal.diaIDs && signal.diaIDs.length > 0) {\n          signal.diaIDs.forEach((diaID, i, arr) => {\n            let separator = ', ';\n            if (i === arr.length - 1) separator = '';\n            let label = labels.byDiaID[diaID].label || diaID;\n            signalLabel += `${label}${separator}`;\n          });\n          partTag += `, L=${signalLabel}`;\n        }\n\n        if (nucleus === '1H') {\n          if (signal.multiplicity) partTag += `, S=${signal.multiplicity}`;\n\n          let jCoupling = signal.js;\n          if (Array.isArray(jCoupling) && jCoupling.length) {\n            let separator = ', J=';\n\n            for (const jCouplingElement of jCoupling) {\n              partTag += `${separator}${Number(\n                jCouplingElement.coupling,\n              ).toFixed(3)}`;\n              if (jCouplingElement.diaIDs) {\n                let { diaIDs } = jCouplingElement;\n                if (!Array.isArray(diaIDs)) diaIDs = [diaIDs];\n                if (!diaIDs.length) continue;\n                let jCouple =\n                  labels.byDiaID[diaIDs[0]].label || String(diaIDs[0]);\n                partTag += `(${jCouple})`;\n              }\n              separator = ', ';\n            }\n          }\n          if (range.integration) {\n            partTag += `, E=${Number(range.integration).toFixed(toFix)}`;\n          } else if (range.nbAtoms) {\n            partTag += `, E=${range.nbAtoms.toFixed(toFix)}`;\n          } else if (range.signals[0].nbAtoms !== undefined) {\n            partTag += `, E=${range.signals[0].nbAtoms}`;\n          }\n        }\n      }\n      if (signals.length) partTag += '\\\\';\n    }\n    partTag += '\\n';\n\n    if (/\\n/.exec(partTag)) str += partTag;\n  }\n  return str;\n}\n","export function getCouplingObserved(experiment: string) {\n  switch (experiment.toLowerCase()) {\n    case 'hsqc':\n    case 'cosy':\n      return '1J';\n    case 'hmbc':\n      return 'NJ';\n    default:\n      return 'NJ';\n  }\n}\n","import { addSource } from './addSource';\nimport { getCouplingObserved } from './getCouplingObserved';\nimport { getToFix } from './getToFix';\n\nconst isArray = Array.isArray;\n\ninterface Get2DSignalsOptions {\n  labels: { byDiaID?: string };\n  prefix?: string;\n}\n\nexport async function get2DSignals(\n  data,\n  nmrRecord,\n  options: Get2DSignalsOptions = { labels: {} },\n) {\n  const { byDiaID } = options.labels;\n  let str = '';\n  let nucleusRecorded: Array<Array<any>> = [];\n  const prefix = `\\n> <NMREDATA_2D_`;\n  for (let spectrum of data) {\n    if (spectrum.info.dimension < 2) continue;\n    let partTag = '';\n    const { info, source } = spectrum;\n    let { nucleus, experiment, pulseSequence } = info;\n\n    nucleusRecorded.push(nucleus);\n\n    let couplingObserved = getCouplingObserved(experiment);\n    if (nucleus) {\n      partTag += `${prefix}${nucleus[1]}_${couplingObserved}_${nucleus[0]}>`;\n    }\n    let toFix = getToFix(nucleus);\n\n    partTag += await addSource(nmrRecord, {\n      spectrum,\n      source,\n    });\n\n    if (experiment) partTag += `\\nCorType=${experiment} \\\\`;\n    if (pulseSequence) partTag += `\\nPulseProgram=${pulseSequence} \\\\`;\n\n    if (spectrum.info.baseFrequency) {\n      partTag += `\\nLarmor=${Number(spectrum.info.baseFrequency[0]).toFixed(\n        2,\n      )}\\\\`;\n    }\n\n    let zones = spectrum.zones.values || [];\n    for (let zone of zones) {\n      let signals = zone.signals;\n      for (let signal of signals) {\n        let { x, y, peaks } = signal;\n        let xLabel = getAssignment(x, byDiaID, toFix[0]);\n        let yLabel = getAssignment(y, byDiaID, toFix[1]);\n        let intensity = Math.max(...peaks.map((e) => e.z));\n        partTag += `\\n${xLabel}/${yLabel}, I=${intensity.toFixed(2)}\\\\`;\n      }\n    }\n    str += partTag;\n  }\n  return str.length > 0 ? `${str}\\n` : '';\n}\n\nfunction getAssignment(axis, labels, toFix) {\n  let { diaIDs, delta } = axis;\n  if (diaIDs) {\n    if (!isArray(diaIDs)) diaIDs = [diaIDs];\n    if (diaIDs.length < 1) return Number(delta).toFixed(toFix);\n    let label = diaIDs.map((diaID) => labels[diaID].label).join(',');\n    return diaIDs.length > 1 ? `(${label})` : label;\n  }\n  return Number(delta).toFixed(toFix);\n}\n","export function flat2DSignals(signals) {\n  let flattedSignal: Array<any> = [];\n  for (const { x, y } of signals) {\n    flattedSignal.push(x, y);\n  }\n  return flattedSignal;\n}\n","import { getShortestPaths } from 'openchemlib-utils';\n\nimport { flat2DSignals } from './flat2DSignals';\nimport { getToFix } from './getToFix';\n\ninterface GetLabelsOptions {\n  molecule?: any;\n  groupedDiaIDs: Array<any>;\n}\n\nexport function getLabels(\n  data,\n  options: GetLabelsOptions = { groupedDiaIDs: [] },\n) {\n  const { groupedDiaIDs, molecule } = options;\n\n  let connections = getShortestPaths(molecule, { toLabel: 'H', maxLength: 1 });\n\n  let byDiaID = {};\n  let byAssignNumber = {};\n  for (let spectrum of data) {\n    let { dimension, nucleus } = spectrum.info;\n    let toFix = getToFix(nucleus);\n\n    let [roiKey, flatSignals] =\n      dimension > 1 ? ['zones', flat2DSignals] : ['ranges', (s) => s || []];\n\n    let rois = spectrum[roiKey].values || [];\n    for (let roi of rois) {\n      let signals = flatSignals(roi.signals);\n      for (let i = 0; i < signals.length; i++) {\n        let diaIDs = signals[i].diaIDs || [];\n        for (let diaID of diaIDs) {\n          let delta = Number(signals[i].delta).toFixed(toFix[i % dimension]);\n          // get atomLabel\n          let groupedOclID = groupedDiaIDs.find((dia) => {\n            if (dia.oclID === diaID) return true;\n            return false;\n          });\n          // the addition of one in atom number it is because the atoms enumeration starts from zero\n\n          let labelOptions = {\n            atom: groupedOclID.atoms[0],\n            molecule,\n            connections,\n            atomLabel: groupedOclID.atomLabel,\n          };\n\n          byDiaID[diaID] = {\n            atoms: groupedOclID.atoms.map((e) => e + 1),\n            shift: delta,\n            label: createLabel(labelOptions),\n          };\n\n          for (let atom of groupedOclID.atoms) {\n            labelOptions.atom = atom;\n            byAssignNumber[atom] = {\n              shift: delta,\n              diaID,\n              label: createLabel(labelOptions),\n            };\n          }\n        }\n      }\n    }\n  }\n  return { byAssignNumber, byDiaID };\n}\n\nfunction createLabel(options) {\n  const { atom, molecule, atomLabel, connections } = options;\n  let label = '';\n  if (atomLabel !== 'C') {\n    let connectedTo = connections[atom];\n    let path = connectedTo.find((e) => e && e.length > 1);\n    let pLabel = `${atomLabel}${path[0] + 1}`;\n    let hLabel = `${molecule.getAtomLabel(path[1])}${path[1] + 1}`;\n    label = `${pLabel}${hLabel}`;\n  } else {\n    label = `${atomLabel}${atom + 1}`;\n  }\n  return label;\n}\n","import jszip from 'jszip';\nimport { getGroupedDiastereotopicAtomIDs } from 'openchemlib-utils';\nimport { Molecule as OCLMolecule } from 'openchemlib/full';\n\nimport { get1DSignals } from './util/nmredata/get1DSignals';\nimport { get2DSignals } from './util/nmredata/get2DSignals';\nimport { getLabels } from './util/nmredata/getLabels';\n\nconst tags = {\n  solvent: 'SOLVENT',\n  temperature: 'TEMPERATURE',\n  assignment: 'ASSIGNMENT',\n  j: 'J',\n  signals: 'SIGNALS',\n  id: 'ID',\n};\n\nexport async function nmriumToNmredata(state, options = {}) {\n  const {\n    data, // it would be changed depending of the final location\n    molecules,\n  } = state || {\n    data: [], // it would be changed depending of the final location\n    molecules: [],\n  };\n\n  let nmrRecord = new jszip();\n\n  for (const molecule of molecules) {\n    await addNMReDATA(data, nmrRecord, {\n      ...options,\n      molecule,\n    });\n  }\n\n  if (!molecules.length) await addNMReDATA(data, nmrRecord, options);\n  return nmrRecord;\n}\n\ninterface AddNMReDATAOptions {\n  id?: string;\n  prefix?: string;\n  filename?: string;\n  molecule?: any;\n}\n\nasync function addNMReDATA(data, nmrRecord, options: AddNMReDATAOptions = {}) {\n  let {\n    id,\n    prefix = '\\n> <NMREDATA_',\n    filename = 'nmredata',\n    molecule,\n  } = options;\n\n  let sdfResult = '';\n\n  let groupedDiaIDs;\n  if (molecule) {\n    molecule = OCLMolecule.fromMolfile(molecule.molfile);\n    sdfResult += molecule.toMolfile();\n    molecule.addImplicitHydrogens();\n    groupedDiaIDs = getGroupedDiastereotopicAtomIDs(molecule);\n  }\n\n  let labels: { byDiaID: any; byAssignNumber: any } = molecule\n    ? getLabels(data, { groupedDiaIDs, molecule })\n    : { byDiaID: undefined, byAssignNumber: undefined };\n\n  sdfResult += `${prefix}VERSION>\\n1.1\\\\\\n`;\n  sdfResult += putTag(data, 'temperature', { prefix });\n  sdfResult += putTag(data, 'solvent', { prefix });\n\n  if (id) sdfResult += `${prefix + tags.id}>\\nid\\\\\\n`;\n  sdfResult += formatAssignments(labels.byDiaID, { prefix });\n  sdfResult += await get1DSignals(data, nmrRecord, { prefix, labels });\n  sdfResult += await get2DSignals(data, nmrRecord, { prefix, labels });\n  sdfResult += '\\n$$$$\\n';\n  nmrRecord.file(`${filename}.sdf`, sdfResult);\n}\n\nfunction formatAssignments(labels, options) {\n  if (!labels) return '';\n  const { prefix } = options;\n  let str = `${prefix + tags.assignment}>\\n`;\n  for (let l in labels) {\n    let atoms = labels[l].atoms;\n    str += `${labels[l].label}, ${labels[l].shift}`; // change to add label\n    for (let atom of atoms) str += `, ${atom}`;\n    str += '\\\\\\n';\n  }\n  return str;\n}\n\nfunction putTag(spectra, tag, options: { prefix?: string } = { prefix: '' }) {\n  const { prefix } = options;\n  let str = '';\n  for (let spectrum of spectra) {\n    if (spectrum.info[tag]) {\n      str += `${prefix + tags[tag]}>\\n${String(spectrum.info[tag])}\\\\\\n`;\n      break;\n    }\n  }\n  return str;\n}\n","import { useCallback } from 'react';\n\nimport { toJSON } from '../../data/SpectraManager';\nimport { useChartData } from '../context/ChartContext';\nimport { useGlobal } from '../context/GlobalContext';\nimport { useAlert } from '../elements/popup/Alert';\nimport { positions, useModal } from '../elements/popup/Modal';\nimport SaveAsModal from '../modal/SaveAsModal';\nimport {\n  copyPNGToClipboard,\n  exportAsJSON,\n  exportAsNMRE,\n  exportAsPng,\n  exportAsSVG,\n} from '../utility/Export';\nimport { nmriumToNmredata } from '../utility/nmriumToNmredata';\n\nexport default function useExport() {\n  const { rootRef } = useGlobal();\n  const modal = useModal();\n  const alert = useAlert();\n  const state = useChartData();\n\n  const saveToClipboardHandler = useCallback(async () => {\n    if (state.data.length > 0 && rootRef) {\n      const hideLoading = await alert.showLoading(\n        'Exporting as NMRium process in progress',\n      );\n      setTimeout(() => {\n        copyPNGToClipboard(rootRef, 'nmrSVG');\n        hideLoading();\n        alert.success('Image copied to clipboard');\n      }, 0);\n    }\n  }, [rootRef, alert, state]);\n\n  const saveAsJSONHandler = useCallback(\n    async (spaceIndent = 0, isCompressed = true) => {\n      if (state.data.length > 0) {\n        const hideLoading = await alert.showLoading(\n          'Exporting as NMRium process in progress',\n        );\n\n        setTimeout(() => {\n          async function handle() {\n            //exported file name by default will be the first spectrum name\n            const fileName = state.data[0]?.display?.name;\n            const exportedData = toJSON(state);\n            await exportAsJSON(\n              exportedData,\n              fileName,\n              spaceIndent,\n              isCompressed,\n            );\n            hideLoading();\n          }\n\n          void handle();\n        }, 0);\n      }\n    },\n    [alert, state],\n  );\n\n  const saveAsNMREHandler = useCallback(async () => {\n    if (state.data.length > 0) {\n      const hideLoading = await alert.showLoading(\n        'Exporting as NMRE process in progress',\n      );\n      setTimeout(() => {\n        async function handle() {\n          const fileName = state.data[0]?.display?.name;\n          const exportedData = await nmriumToNmredata(state);\n          exportAsNMRE(exportedData, fileName);\n          hideLoading();\n        }\n\n        void handle();\n      }, 0);\n    }\n  }, [alert, state]);\n\n  const saveAsSVGHandler = useCallback(async () => {\n    if (state.data.length > 0 && rootRef) {\n      const hideLoading = await alert.showLoading(\n        'Exporting as SVG process in progress',\n      );\n      setTimeout(() => {\n        const fileName = state.data[0]?.display?.name;\n        exportAsSVG(rootRef, 'nmrSVG', fileName);\n        hideLoading();\n      }, 0);\n    }\n  }, [rootRef, alert, state.data]);\n\n  const saveAsPNGHandler = useCallback(async () => {\n    if (state.data.length > 0 && rootRef) {\n      const hideLoading = await alert.showLoading(\n        'Exporting as PNG process in progress',\n      );\n      setTimeout(() => {\n        const fileName = state.data[0]?.display?.name;\n        exportAsPng(rootRef, 'nmrSVG', fileName);\n        hideLoading();\n      }, 0);\n    }\n  }, [rootRef, alert, state.data]);\n\n  const saveHandler = useCallback(\n    (options) => {\n      async function handler() {\n        const { name, pretty, compressed, dataExportOption } = options;\n        const hideLoading = await alert.showLoading(\n          `Exporting as ${name}.nmrium process in progress`,\n        );\n        setTimeout(() => {\n          void (async () => {\n            const exportedData = toJSON(state, dataExportOption);\n            const spaceIndent = pretty ? 2 : 0;\n            await exportAsJSON(exportedData, name, spaceIndent, compressed);\n            hideLoading();\n          })();\n        }, 0);\n      }\n\n      void handler();\n    },\n    [alert, state],\n  );\n  const saveAsHandler = useCallback(async () => {\n    if (state.data.length > 0) {\n      const fileName = state.data[0]?.display?.name;\n      modal.show(<SaveAsModal name={fileName} onSave={saveHandler} />, {\n        isBackgroundBlur: false,\n        position: positions.TOP_CENTER,\n        width: 400,\n      });\n    }\n  }, [modal, saveHandler, state.data]);\n\n  return {\n    saveToClipboardHandler,\n    saveAsJSONHandler,\n    saveAsNMREHandler,\n    saveAsSVGHandler,\n    saveAsPNGHandler,\n    saveAsHandler,\n  };\n}\n","import lodashGet from 'lodash/get';\n\nimport { usePreferences } from '../context/PreferencesContext';\n\nexport default function useCheckExperimentalFeature(): boolean {\n  const preferences = usePreferences();\n  const value = lodashGet(\n    preferences.current,\n    'display.general.experimentalFeatures',\n    false,\n  );\n\n  if (value?.hidden === true || value?.display === false) {\n    return false;\n  }\n\n  return true;\n}\n","import { CSSProperties, InputHTMLAttributes, ReactNode } from 'react';\n\nimport ToolTip from './ToolTip/ToolTip';\n\ninterface ButtonToolTipProps\n  extends Omit<InputHTMLAttributes<HTMLButtonElement>, 'type'> {\n  popupTitle?: string;\n  popupPlacement?: string;\n  style?: CSSProperties;\n  children?: ReactNode;\n}\n\nfunction ButtonToolTip({\n  children,\n  style = {},\n  onClick = () => null,\n  popupTitle = '',\n  popupPlacement = 'right',\n  ...props\n}: ButtonToolTipProps) {\n  return (\n    <ToolTip title={popupTitle} popupPlacement={popupPlacement}>\n      <button style={style} type=\"button\" onClick={onClick} {...props}>\n        {children}\n      </button>\n    </ToolTip>\n  );\n}\n\nexport default ButtonToolTip;\n","import { css } from '@emotion/react';\n\nexport const tablePanelStyle = css`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n\n  .inner-container {\n    height: 100%;\n    overflow: hidden;\n    isolation: isolate;\n  }\n\n  .table-container {\n    overflow: auto;\n    height: 100%;\n    display: block;\n    background-color: white;\n  }\n`;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { CSSProperties, memo, ReactNode, useCallback, useState } from 'react';\n\nimport ToolTip from './ToolTip/ToolTip';\n\nconst styles = css`\n  background-color: #f5f5f5;\n  border: none;\n  border-radius: 5px;\n\n  &:hover {\n    background-color: lightgray !important;\n    color: black !important;\n  }\n\n  &.toggle-active {\n    background-color: gray;\n    color: white;\n  }\n`;\n\ninterface ToggleButtonProps {\n  popupTitle: string;\n  popupPlacement: string;\n  style?: CSSProperties;\n  defaultValue?: boolean;\n  onClick: (element: boolean) => void;\n  disabled?: boolean;\n  children: ReactNode;\n  className?: string;\n}\n\nfunction ToggleButton({\n  children,\n  style = {},\n  onClick = () => null,\n  popupTitle = '',\n  popupPlacement = 'right',\n  defaultValue = false,\n  disabled = false,\n  className = '',\n}: ToggleButtonProps) {\n  const [flag, Toggle] = useState<boolean>(defaultValue);\n\n  const toggleHandler = useCallback(() => {\n    onClick(!flag);\n\n    Toggle(!flag);\n  }, [onClick, flag]);\n  return (\n    <ToolTip title={popupTitle} popupPlacement={popupPlacement}>\n      <button\n        disabled={disabled}\n        css={styles}\n        style={style}\n        className={(flag ? 'toggle toggle-active ' : 'toggle ') + className}\n        type=\"button\"\n        onClick={toggleHandler}\n      >\n        {children}\n      </button>\n    </ToolTip>\n  );\n}\n\nexport default memo(ToggleButton);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { CSSProperties, memo, ReactNode } from 'react';\nimport { FaRegTrashAlt, FaCog, FaFilter } from 'react-icons/fa';\n\nimport ToggleButton from '../../elements/ToggleButton';\nimport ToolTip from '../../elements/ToolTip/ToolTip';\n\nconst styles = css`\n  display: flex;\n  flex-direction: row;\n  border-bottom: 0.55px solid rgb(240, 240, 240);\n  padding: 0px 5px;\n\n  .left-container {\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n  }\n  button {\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n  }\n\n  button:disabled {\n    opacity: 0.6;\n  }\n\n  .counter-label {\n    margin: 0;\n    text-align: right;\n    line-height: 22px;\n    padding: 0px 10px;\n    white-space: nowrap;\n  }\n`;\n\ninterface DefaultPanelHeaderProps {\n  counter?: number;\n  counterFiltered?: number;\n  deleteToolTip?: string;\n  filterToolTip?: string;\n  onDelete?: () => void;\n  onFilter?: () => void;\n  onSettingClick?: () => void;\n  filterIsActive?: boolean;\n  canDelete?: boolean;\n  showSettingButton?: boolean;\n  showCounter?: boolean;\n  children?: ReactNode;\n  style?: CSSProperties;\n  className?: string;\n}\n\nfunction DefaultPanelHeader({\n  counter,\n  onDelete = () => null,\n  deleteToolTip = 'Delete',\n  onFilter = () => null,\n  filterToolTip = '',\n  filterIsActive = false,\n  counterFiltered = 0,\n  children,\n  onSettingClick = () => null,\n  showSettingButton = false,\n  canDelete = true,\n  style = {},\n  className = '',\n}: DefaultPanelHeaderProps) {\n  return (\n    <div css={styles} {...{ style, className }}>\n      <div className=\"left-container\">\n        {canDelete && (\n          <ToolTip title={deleteToolTip} popupPlacement=\"right\">\n            <button type=\"button\" onClick={onDelete} disabled={counter === 0}>\n              <FaRegTrashAlt />\n            </button>\n          </ToolTip>\n        )}\n\n        {/* Optional if there is no filter needed, e.g. in spectra panel */}\n        {filterToolTip ? (\n          <ToggleButton\n            popupTitle={filterToolTip}\n            popupPlacement=\"right\"\n            onClick={onFilter}\n            defaultValue={filterIsActive}\n          >\n            <FaFilter style={{ pointerEvents: 'none', fontSize: '12px' }} />\n          </ToggleButton>\n        ) : null}\n\n        {children}\n      </div>\n      {counter !== undefined && (\n        <p className=\"counter-label\">\n          [{' '}\n          {filterIsActive &&\n          filterIsActive === true &&\n          counterFiltered !== undefined\n            ? `${counterFiltered}/${counter}`\n            : counter}{' '}\n          ]\n        </p>\n      )}\n      {showSettingButton && (\n        <ToolTip title=\"preferences\" popupPlacement=\"left\">\n          <button type=\"button\" onClick={onSettingClick}>\n            <FaCog />\n          </button>\n        </ToolTip>\n      )}\n    </div>\n  );\n}\n\nexport default memo(DefaultPanelHeader);\n","import lodashGet from 'lodash/get';\n\nimport { usePreferences } from '../context/PreferencesContext';\n\nexport function useCheckToolsVisibility(): (toolKey: string) => boolean {\n  const preferences = usePreferences();\n\n  return (toolKey) =>\n    lodashGet(preferences.current, `display.toolBarButtons.${toolKey}`, true);\n}\n","import { SvgNmrRangePicking } from 'cheminfo-font';\nimport { useCallback } from 'react';\n\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport Button from '../../elements/ButtonToolTip';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { useCheckToolsVisibility } from '../../hooks/useCheckToolsVisibility';\nimport {\n  AUTO_RANGES_SPECTRA_PICKING,\n  AUTO_ZONES_SPECTRA_PICKING,\n} from '../../reducer/types/Types';\n\nexport function SpectraAutomaticPickingButton() {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const { data } = useChartData();\n  const isToolVisible = useCheckToolsVisibility();\n\n  const automaticPickingHandler = useCallback(() => {\n    void (async () => {\n      const hideLoading = await alert.showLoading(\n        'Automatic Ranges/Zones detection for all spectra in progress',\n      );\n      setTimeout(() => {\n        dispatch({ type: AUTO_RANGES_SPECTRA_PICKING });\n        dispatch({ type: AUTO_ZONES_SPECTRA_PICKING });\n        hideLoading();\n      }, 0);\n    })();\n  }, [dispatch, alert]);\n\n  if (\n    (Array.isArray(data) && data.length === 0) ||\n    !isToolVisible('autoRangesTool')\n  ) {\n    return null;\n  }\n\n  return (\n    <Button\n      popupTitle=\"Automatic Ranges/Zones picking for all spectra\"\n      onClick={automaticPickingHandler}\n    >\n      <SvgNmrRangePicking />\n    </Button>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  useState,\n  useImperativeHandle,\n  useCallback,\n  useRef,\n  useEffect,\n  forwardRef,\n} from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { useGlobal } from '../context/GlobalContext';\n\nconst styles = css`\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.25);\n  padding: 0px;\n  margin: 0px;\n  border-radius: 2px;\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  z-index: 99999;\n  padding: 2px;\n  background-color: white;\n  width: 150px;\n  pointer-events: all;\n\n  button {\n    background-color: transparent;\n    border: none;\n    border-bottom: 0.55px solid #f0f0f0;\n    font-size: 11px;\n    padding: 5px;\n    text-align: left;\n    outline: none;\n  }\n  button:hover {\n    background-color: #fafafa;\n    outline: none;\n  }\n\n  button:active {\n    background-color: #eaeaea;\n    outline: none;\n  }\n\n  button:last-of-type {\n    border: none;\n  }\n`;\n\n// TODO: remove this hacky ref usage.\nfunction ContextMenu({ context }, ref: any) {\n  const [position, setPosition] = useState<{ left: any; top: any }>({\n    left: 0,\n    top: 0,\n  });\n  const { rootRef, elementsWrapperRef } = useGlobal();\n  const [data, setData] = useState();\n  const [isVisible, show] = useState<boolean>();\n  const [sourceElement, setSourceElement] = useState(null);\n  const root = useRef<any>();\n\n  useEffect(() => {\n    root.current = document.createElement('div');\n    if (elementsWrapperRef) {\n      elementsWrapperRef.appendChild(root.current);\n    }\n    return () => {\n      if (root.current && elementsWrapperRef) {\n        elementsWrapperRef.removeChild(root.current);\n      }\n    };\n  }, [elementsWrapperRef]);\n\n  const contextMenuHandler = (event) => {\n    event.preventDefault();\n    setSourceElement(event.target.parentElement);\n    show(true);\n    const clickX = event.clientX;\n    const clickY = event.clientY;\n\n    const screenW = window.innerWidth;\n    const screenH = window.innerHeight;\n    const rootW = 150;\n    const rootH = 0;\n\n    const right = screenW - clickX > rootW;\n    let left: any = !right;\n    let top: any = screenH - clickY > rootH;\n    const bottom = !top;\n    if (right) {\n      left = `${clickX + 5}px`;\n    }\n\n    if (left) {\n      left = `${clickX - rootW - 5}px`;\n    }\n\n    if (top) {\n      top = `${clickY + 5}px`;\n    }\n\n    if (bottom) {\n      top = `${clickY - rootH - 5}px`;\n    }\n\n    setPosition({ left, top });\n  };\n\n  useImperativeHandle(ref, () => ({\n    handleContextMenu: (e, _data) => {\n      setData(_data);\n      contextMenuHandler(e);\n    },\n  }));\n\n  const clickHandler = useCallback(\n    (event, click) => {\n      event.preventDefault();\n      click(data);\n      show(false);\n    },\n    [data],\n  );\n\n  useEffect(() => {\n    const _handleGlobalClick = (event) => {\n      const wasOutside =\n        sourceElement &&\n        event.target.parentElement &&\n        !event.target.parentElement.isSameNode(sourceElement);\n      if (wasOutside && isVisible) show(false);\n    };\n    if (rootRef) {\n      rootRef.addEventListener('click', _handleGlobalClick);\n    }\n    return () => {\n      if (rootRef) {\n        rootRef.removeEventListener('click', _handleGlobalClick);\n      }\n    };\n  }, [isVisible, ref, rootRef, sourceElement]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    root.current &&\n    createPortal(\n      context && (\n        <div ref={ref} css={[styles, position]}>\n          {context.map((c, index) => (\n            <button\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n              type=\"button\"\n              onClick={(e) => clickHandler(e, c.onClick)}\n            >\n              {c.label}\n            </button>\n          ))}\n        </div>\n      ),\n      root.current,\n    )\n  );\n}\n\nexport default forwardRef(ContextMenu);\n","import { memo } from 'react';\n\ninterface ReactTableHeaderProps {\n  headerGroups: any;\n}\n\nfunction ReactTableHeader({ headerGroups }: ReactTableHeaderProps) {\n  return (\n    <thead>\n      {headerGroups.map((headerGroup) => (\n        <tr\n          key={headerGroup.getHeaderGroupProps().key}\n          {...headerGroup.getHeaderGroupProps()}\n        >\n          {headerGroup.headers.map((column) => (\n            <th\n              key={column.getHeaderProps().key}\n              {...column.getHeaderProps(column.getSortByToggleProps())}\n              style={column.style}\n            >\n              {column.render('Header')}\n              <span>\n                {column.isSorted ? (column.isSortedDesc ? ' ▼' : ' ▲') : ''}\n              </span>\n            </th>\n          ))}\n        </tr>\n      ))}\n    </thead>\n  );\n}\n\nexport default memo(ReactTableHeader);\n","/** @jsxImportSource @emotion/react */\n\nimport { css, CSSObject } from '@emotion/react';\nimport { useMemo, forwardRef, useEffect, useCallback } from 'react';\n\nimport { HighlightedSource, useHighlight } from '../../../highlight/index';\n\nfunction highlightStyle(isActive: boolean, row): CSSObject {\n  if (isActive) {\n    return { backgroundColor: '#ff6f0057' };\n  } else if (row.original?.isConstantlyHighlighted === true) {\n    return { backgroundColor: '#f5f5dc' };\n  }\n  return {};\n}\n\nconst rowCss = css`\n  &:hover {\n    background-color: #ff6f0091 !important;\n  }\n\n  &:active {\n    background-color: #ff6f0070 !important;\n  }\n`;\n\nexport interface ClickEvent {\n  onClick?: (event: Event, data: unknown) => void;\n}\ninterface ReactTableRowProps extends ClickEvent {\n  row: any;\n  highlightedSource?: HighlightedSource;\n  onContextMenu: () => void;\n  isVisible: boolean;\n  isRowActive: boolean;\n}\n\nfunction getIDs(row: any): string[] {\n  const id = row.original.id;\n  if (id) {\n    if (id instanceof Array) {\n      return id;\n    } else {\n      return [String(id)];\n    }\n  }\n  return [''];\n}\nfunction ReactTableRow(props: ReactTableRowProps, ref) {\n  const {\n    row,\n    highlightedSource = HighlightedSource.UNKNOWN,\n    onContextMenu,\n    onClick,\n    isRowActive = false,\n  } = props;\n  const data = useMemo(\n    () => ({\n      type: highlightedSource,\n      extra: row.original,\n    }),\n    [highlightedSource, row],\n  );\n  const highlight = useHighlight(getIDs(row), data);\n\n  useEffect(() => {\n    return () => {\n      highlight.hide();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const clickHandler = useCallback(\n    (event: Event) => {\n      onClick?.(event, row);\n    },\n    [onClick, row],\n  );\n\n  return useMemo(() => {\n    return (\n      <tr\n        ref={ref}\n        onContextMenu={onContextMenu}\n        key={row.getRowProps().key}\n        css={[\n          highlightStyle(highlight.isActive || isRowActive, row),\n          onClick && rowCss,\n        ]}\n        {...row.getRowProps()}\n        {...highlight.onHover}\n      >\n        {row.cells.map((cell) => {\n          const { style, padding } = cell.column;\n\n          if (cell.isRowSpanned) {\n            return null;\n          } else {\n            return (\n              <td\n                rowSpan={cell.rowSpan}\n                key={cell.key}\n                {...cell.getCellProps()}\n                onContextMenu={(e) => {\n                  e.preventDefault();\n\n                  return false;\n                }}\n                style={{ padding, ...style }}\n                onClick={clickHandler}\n              >\n                {cell.render('Cell')}\n              </td>\n            );\n          }\n        })}\n      </tr>\n    );\n  }, [\n    clickHandler,\n    highlight.isActive,\n    highlight.onHover,\n    onClick,\n    onContextMenu,\n    ref,\n    row,\n  ]);\n}\n\nexport default forwardRef(ReactTableRow);\n","import { css } from '@emotion/react';\n\nconst ReactTableStyle = css`\n  border-spacing: 0;\n  border: 1px solid #dedede;\n  width: 100%;\n  max-height: 100%;\n  font-size: 12px;\n\n  .react-contextmenu-wrapper {\n    display: contents;\n  }\n\n  tr {\n    :last-child {\n      td {\n        border-bottom: 0;\n      }\n    }\n  }\n\n  th {\n    position: sticky;\n    background-color: white;\n    z-index: 0;\n    top: 0;\n  }\n  th,\n  td {\n    margin: 0;\n    padding: 0.15rem 0.4rem;\n    border-bottom: 1px solid #dedede;\n    border-right: 1px solid #dedede;\n\n    // :last-child {\n    //   border-right: 0;\n    // }\n    button {\n      background-color: transparent;\n      border: none;\n    }\n  }\n`;\n\nexport { ReactTableStyle };\n","import { createContext, useContext } from 'react';\n\nimport { TableVirtualConfig } from '../ReactTable';\n\nconst reactContext = createContext<TableVirtualConfig | null>(null);\nexport const ReactTableProvider = reactContext.Provider;\n\nexport function useReactTableContext() {\n  const context = useContext(reactContext);\n  if (!context) {\n    throw new Error('react table context was not found ');\n  }\n  return context;\n}\n","export default function useRowSpan(hooks) {\n  hooks.useInstance.push(reducer);\n}\n\nfunction reducer(instance) {\n  const { allColumns } = instance;\n\n  let rowSpanHeaders: any[] = [];\n\n  allColumns.forEach((column) => {\n    const { id, enableRowSpan } = column;\n\n    if (enableRowSpan !== undefined && enableRowSpan !== false) {\n      rowSpanHeaders.push({ id, cellValue: null, cellIndex: 0 });\n    }\n  });\n\n  Object.assign(instance, {\n    rowSpanHeaders,\n  });\n}\n\nexport function prepareRowSpan(rows, index, rowSpanHeaders, groupKey?: string) {\n  const row = rows[index];\n  for (let j = 0; j < row.allCells.length; j++) {\n    const cell = row.allCells[j];\n    const rowSpanHeader = rowSpanHeaders.find((x) => x.id === cell.column.id);\n    if (rowSpanHeader !== undefined) {\n      const cellValue = groupKey\n        ? `${cell.value}-${row.original[groupKey]}`\n        : cell.value;\n\n      if (\n        rowSpanHeader.cellValue === null ||\n        rowSpanHeader.cellValue !== cellValue\n      ) {\n        cell.isRowSpanned = false;\n        rowSpanHeader.cellValue = cellValue;\n        rowSpanHeader.cellIndex = index;\n        cell.rowSpan = 1;\n      } else {\n        rows[rowSpanHeader.cellIndex].allCells[j].rowSpan++;\n        cell.isRowSpanned = true;\n      }\n    }\n  }\n}\n","/** @jsxImportSource @emotion/react */\nimport {\n  useRef,\n  useCallback,\n  memo,\n  forwardRef,\n  useState,\n  Ref,\n  useEffect,\n  UIEvent,\n} from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport { useMeasure } from 'react-use';\n\nimport checkModifierKeyActivated from '../../../data/utilities/checkModifierKeyActivated';\nimport { HighlightedSource } from '../../highlight';\nimport useCombinedRefs from '../../hooks/useCombinedRefs';\nimport ContextMenu from '../ContextMenu';\n\nimport ReactTableHeader from './Elements/ReactTableHeader';\nimport ReactTableRow, { ClickEvent } from './Elements/ReactTableRow';\nimport { ReactTableStyle } from './Style';\nimport {\n  ReactTableProvider,\n  useReactTableContext,\n} from './utility/ReactTableContext';\nimport useRowSpan, { prepareRowSpan } from './utility/useRowSpan';\n\ninterface ReactTableProps extends ClickEvent {\n  data: any;\n  columns: any;\n  highlightedSource?: HighlightedSource;\n  context?: Array<{ label: string; onClick: () => void }> | null;\n  approxItemHeight?: number;\n  groupKey?: string;\n  enableVirtualScroll?: boolean;\n  highlightActiveRow?: boolean;\n}\n\ninterface ReactTableInnerProps extends ReactTableProps {\n  onScroll: (event: UIEvent<HTMLDivElement>) => void;\n}\n\nconst styles = {\n  table: (enableVirtualScroll: boolean) => {\n    if (enableVirtualScroll) {\n      return { position: 'sticky', top: 0 };\n    }\n  },\n};\n\nconst ReactTableInner = forwardRef(function ReactTableInner(\n  props: ReactTableInnerProps,\n  ref: Ref<HTMLDivElement>,\n) {\n  const {\n    data,\n    columns,\n    highlightedSource,\n    context = null,\n    onScroll,\n    approxItemHeight = 40,\n    enableVirtualScroll = false,\n    groupKey,\n    onClick,\n    highlightActiveRow = false,\n  } = props;\n\n  const contextRef = useRef<any>(null);\n  const { index: indexBoundary } = useReactTableContext();\n  const [rowIndex, setRowIndex] = useState<number>();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    rowSpanHeaders,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy,\n    useRowSpan,\n  );\n  const contextMenuHandler = useCallback(\n    (e, row) => {\n      if (!checkModifierKeyActivated(e)) {\n        e.preventDefault();\n        contextRef.current.handleContextMenu(e, row.original);\n      }\n    },\n    [contextRef],\n  );\n\n  const rowsData = enableVirtualScroll\n    ? rows.slice(indexBoundary.start, indexBoundary.end)\n    : rows;\n\n  const clickHandler = useCallback(\n    (event, row) => {\n      setRowIndex(row.index);\n      onClick?.(event, row);\n    },\n    [onClick],\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"table-container\"\n      style={{\n        overflowY: 'auto',\n        position: 'relative',\n        height: '100%',\n      }}\n      {...(enableVirtualScroll && { onScroll })}\n    >\n      {enableVirtualScroll && (\n        <div\n          style={{\n            height: approxItemHeight * data.length,\n            position: 'absolute',\n            width: '100%',\n            pointerEvents: 'none',\n          }}\n        />\n      )}\n      <table\n        {...getTableProps()}\n        css={ReactTableStyle}\n        style={styles.table(enableVirtualScroll)}\n      >\n        <ReactTableHeader headerGroups={headerGroups} />\n        <tbody {...getTableBodyProps()}>\n          {rowsData.map((row, index) => {\n            prepareRow(row);\n            prepareRowSpan(\n              rows,\n              enableVirtualScroll ? index + indexBoundary.start : index,\n              rowSpanHeaders,\n              groupKey,\n            );\n\n            return (\n              <ReactTableRow\n                key={row.key}\n                row={row}\n                {...row.getRowProps()}\n                onContextMenu={(e) => contextMenuHandler(e, row)}\n                onClick={highlightActiveRow ? clickHandler : onClick}\n                highlightedSource={highlightedSource}\n                isRowActive={rowIndex === index}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n      <ContextMenu ref={contextRef} context={context} />\n    </div>\n  );\n});\n\nexport interface TableVirtualConfig {\n  offsetHeight: number;\n  scrollHeight: number;\n  numberOfVisibleRows: number;\n  index: { start: number; end: number };\n}\n\nfunction ReactTable(props: ReactTableProps) {\n  const { data, approxItemHeight = 40, groupKey } = props;\n  const ref = useRef<HTMLDivElement | null>(null);\n  const [mRef, { height }] = useMeasure();\n  const combineRef = useCombinedRefs([mRef, ref]);\n\n  const [tableVirtualConfig, setTableVirtualConfig] =\n    useState<TableVirtualConfig>({\n      offsetHeight: 0,\n      scrollHeight: 0,\n      numberOfVisibleRows: 0,\n      index: { start: 0, end: 0 },\n    });\n\n  useEffect(() => {\n    if (combineRef.current) {\n      const { scrollHeight } = combineRef.current;\n      const numberOfVisibleRows = Math.ceil(height / approxItemHeight);\n      setTableVirtualConfig((prev) => ({\n        ...prev,\n        offsetHeight: height,\n        scrollHeight,\n        numberOfVisibleRows,\n        index: { start: 0, end: numberOfVisibleRows + 1 },\n      }));\n    }\n  }, [approxItemHeight, combineRef, height]);\n\n  const lookForGroupIndex = useCallback(\n    (currentIndex: number, side: 1 | -1) => {\n      const currentItem = data[currentIndex];\n      if (currentItem.index && groupKey) {\n        switch (side) {\n          case -1: {\n            let index = currentIndex - 1;\n            while (index > 0) {\n              if (data[index][groupKey] !== currentItem[groupKey]) {\n                return index + 1;\n              }\n              index--;\n            }\n            return currentIndex;\n          }\n          case 1: {\n            let index = currentIndex + 1;\n            while (index < data.length) {\n              if (data[index][groupKey] !== currentItem[groupKey]) {\n                return index - 1;\n              }\n              index++;\n            }\n            return currentIndex;\n          }\n          default:\n            return currentIndex;\n        }\n      }\n\n      return currentIndex;\n    },\n    [data, groupKey],\n  );\n\n  const findStartIndex = useCallback(\n    (index: number, numberOfVisibleRows: number) => {\n      const newIndex = index - numberOfVisibleRows;\n      const currentIndx = newIndex >= data.length ? newIndex : index;\n      // return currentIndx;\n      // Look for the first index of the group\n      return lookForGroupIndex(currentIndx, -1);\n    },\n    [data.length, lookForGroupIndex],\n  );\n  const findEndIndex = useCallback(\n    (index: number, numberOfVisibleRows: number) => {\n      const newIndex = index + numberOfVisibleRows;\n      const currentIndx = newIndex >= data.length ? data.length - 1 : newIndex;\n      // return currentIndx;\n      // Look for the last index of the group\n      return lookForGroupIndex(currentIndx, 1);\n    },\n    [data.length, lookForGroupIndex],\n  );\n\n  const scrollHandler = useCallback(() => {\n    if (ref.current && tableVirtualConfig) {\n      const { scrollTop } = ref.current;\n      const { numberOfVisibleRows, index } = tableVirtualConfig;\n      const currentIndx = Math.ceil(scrollTop / approxItemHeight);\n      const start = findStartIndex(currentIndx, numberOfVisibleRows);\n\n      if (currentIndx !== index.start) {\n        const end = findEndIndex(currentIndx, numberOfVisibleRows);\n        setTableVirtualConfig({\n          ...tableVirtualConfig,\n          index: { start, end: end + 1 },\n        });\n      }\n    }\n  }, [approxItemHeight, findEndIndex, findStartIndex, tableVirtualConfig]);\n\n  return (\n    <ReactTableProvider value={tableVirtualConfig}>\n      <ReactTableInner\n        onScroll={scrollHandler}\n        ref={combineRef}\n        {...{ ...props }}\n      />\n    </ReactTableProvider>\n  );\n}\n\nexport default memo(ReactTable);\n","import { CSSProperties } from 'react';\n\nconst styles: Record<'label' | 'container', CSSProperties> = {\n  container: {\n    height: '100%',\n    backgroundColor: 'white',\n  },\n  label: {\n    textAlign: 'center',\n    width: '100%',\n    fontSize: '11px',\n    padding: '5px',\n    color: 'gray',\n  },\n};\n\n// placeholder for empty tables if no data is available to show (e.g. peaks, integrals, ranges)\nfunction NoTableData({ text = 'No Data' }) {\n  return (\n    <div style={styles.container}>\n      <p style={styles.label}>{text}</p>\n    </div>\n  );\n}\n\nexport default NoTableData;\n","import { SvgNmrAssignment } from 'cheminfo-font';\nimport { useCallback, useMemo, memo } from 'react';\n\nimport { useDispatch } from '../../context/DispatchContext';\nimport ReactTable from '../../elements/ReactTable/ReactTable';\nimport { CustomColumn } from '../../elements/ReactTable/utility/addCustomColumn';\nimport { SET_AUTOMATIC_ASSIGNMENTS } from '../../reducer/types/Types';\nimport NoTableData from '../extra/placeholder/NoTableData';\n\nimport { AutoAssignmentsData } from './useAutoAssignments';\n\ninterface AutomaticAssignmentTableProps {\n  data: AutoAssignmentsData[];\n}\n\nfunction AutomaticAssignmentTable({ data }: AutomaticAssignmentTableProps) {\n  const dispatch = useDispatch();\n\n  const assignHandler = useCallback(\n    (e, row) => {\n      e.preventDefault();\n      e.stopPropagation();\n      const assignments = row.original.assignment;\n      dispatch({\n        type: SET_AUTOMATIC_ASSIGNMENTS,\n        payload: { assignments },\n      });\n    },\n    [dispatch],\n  );\n\n  const COLUMNS: CustomColumn[] = useMemo(\n    () => [\n      {\n        index: 1,\n        Header: '#',\n        Cell: ({ row }) => row.index + 1,\n        style: { width: '1%', maxWidth: '40px', minWidth: '40px' },\n      },\n      {\n        index: 2,\n        Header: 'Score',\n        accessor: 'score',\n      },\n      {\n        index: 3,\n        Header: '',\n        style: {\n          width: '1%',\n          maxWidth: '24px',\n          minWidth: '24px',\n        },\n        id: 'assign-button',\n        Cell: ({ row }) => (\n          <button\n            type=\"button\"\n            className=\"assign-button\"\n            onClick={(e) => assignHandler(e, row)}\n          >\n            <SvgNmrAssignment />\n          </button>\n        ),\n      },\n    ],\n    [assignHandler],\n  );\n\n  return data && data.length > 0 ? (\n    <ReactTable\n      data={data}\n      columns={COLUMNS}\n      onClick={assignHandler}\n      highlightActiveRow\n    />\n  ) : (\n    <NoTableData />\n  );\n}\n\nexport default memo(AutomaticAssignmentTable);\n","import {\n  getAssignments as getAssignmentsData,\n  SpectraData,\n  SpectraData1D,\n  SpectraData2D,\n} from 'nmr-processing';\nimport OCL from 'openchemlib/full';\nimport { useCallback, useMemo, useRef, useState } from 'react';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d/Datum2D';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { SET_AUTOMATIC_ASSIGNMENTS } from '../../reducer/types/Types';\n\nexport interface AutoAssignmentsData {\n  score: number;\n  assignment: (SpectraData1D | SpectraData2D)[];\n}\n\nfunction mapSpectra(data: (Datum1D | Datum2D)[]) {\n  return data.reduce<SpectraData[]>((acc, spectrum) => {\n    const { id, info } = spectrum;\n    const dimension = spectrum.info.dimension;\n    if (dimension === 1) {\n      const ranges = (spectrum as Datum1D).ranges.values;\n      acc.push({ id, info, ranges });\n    } else if (dimension === 2) {\n      const zones = (spectrum as Datum2D).zones.values;\n      acc.push({ id, info, zones });\n    }\n    return acc;\n  }, []);\n}\n\nexport function useAutoAssignments() {\n  const dispatch = useDispatch();\n  const { data, molecules } = useChartData();\n  const originData = useRef<SpectraData[]>();\n  const alert = useAlert();\n  const [assignments, setAssignments] = useState<AutoAssignmentsData[]>([]);\n\n  const restAssignments = useCallback(() => {\n    dispatch({\n      type: SET_AUTOMATIC_ASSIGNMENTS,\n      payload: { assignments: originData.current },\n    });\n  }, [dispatch]);\n\n  const getAssignments = useCallback(() => {\n    void (async () => {\n      const hideLoading = await alert.showLoading('Auto Assignments');\n      const molecule = OCL.Molecule.fromMolfile(molecules[0]?.molfile || '');\n      const spectra = mapSpectra(data);\n\n      if (!originData.current) {\n        originData.current = spectra;\n      }\n\n      const result = await getAssignmentsData(\n        {\n          spectra,\n          molecule,\n        },\n        { minScore: 0 },\n      );\n\n      if (result[0]?.assignment) {\n        dispatch({\n          type: SET_AUTOMATIC_ASSIGNMENTS,\n          payload: { assignments: result[0].assignment },\n        });\n      } else {\n        alert.error(\n          'Could not assign molecule, please check that all the ranges are defined correctly',\n        );\n      }\n\n      setAssignments(result);\n      hideLoading();\n    })();\n  }, [alert, data, dispatch, molecules]);\n\n  return useMemo(\n    () => ({\n      getAssignments,\n      assignments,\n      restAssignments,\n    }),\n\n    [assignments, getAssignments, restAssignments],\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { SvgNmrAssignment2 } from 'cheminfo-font';\nimport { FaBolt } from 'react-icons/fa';\n\nimport Button from '../../elements/ButtonToolTip';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\nimport { SpectraAutomaticPickingButton } from '../header/SpectraAutomaticPickingButton';\n\nimport AutomaticAssignmentTable from './AutomaticAssignmentTable';\nimport { useAutoAssignments } from './useAutoAssignments';\n\nfunction AutomaticAssignment() {\n  const { getAssignments, assignments, restAssignments } = useAutoAssignments();\n  return (\n    <div css={tablePanelStyle}>\n      {\n        <DefaultPanelHeader showSettingButton={false} canDelete={false}>\n          <SpectraAutomaticPickingButton />\n          <Button popupTitle=\"automatic assignment\" onClick={getAssignments}>\n            <SvgNmrAssignment2 style={{ fontSize: '18px' }} />\n          </Button>\n          <Button popupTitle=\"reset assignment\" onClick={restAssignments}>\n            <FaBolt />\n          </Button>\n        </DefaultPanelHeader>\n      }\n\n      <div className=\"inner-container\">\n        <AutomaticAssignmentTable data={assignments} />\n      </div>\n    </div>\n  );\n}\n\nexport default AutomaticAssignment;\n","/** @jsxImportSource @emotion/react */\n\nimport { memo } from 'react';\nimport { useTable, useSortBy, useFlexLayout } from 'react-table';\n\nimport { ReactTableStyle } from './Style';\n\ninterface ReactTableFlexLayoutProps {\n  data: any;\n  columns: any;\n  onMouseDown?: () => void;\n}\n\nfunction ReactTableFlexLayout({\n  data,\n  columns,\n  onMouseDown = () => null,\n}: ReactTableFlexLayoutProps) {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable(\n      {\n        columns,\n        data,\n      },\n      useSortBy,\n      useFlexLayout,\n    );\n  return (\n    <table\n      {...getTableProps()}\n      css={ReactTableStyle}\n      style={{ height: '100%' }}\n    >\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr\n            key={headerGroup.getHeaderGroupProps().key}\n            {...headerGroup.getHeaderGroupProps()}\n          >\n            {headerGroup.headers.map((column) => (\n              <th\n                key={column.getHeaderProps().key}\n                {...column.getHeaderProps(column.getSortByToggleProps())}\n              >\n                {column.render('Header')}\n                <span>\n                  {column.isSorted ? (column.isSortedDesc ? ' ▼' : ' ▲') : ''}\n                </span>\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody\n        {...getTableBodyProps()}\n        style={{ display: 'block', height: '100%', overflowY: 'auto' }}\n      >\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr\n              key={row.getRowProps().key}\n              {...row.getRowProps()}\n              onMouseDown={onMouseDown}\n            >\n              {row.cells.map((cell) => {\n                return (\n                  <td\n                    key={cell.getCellProps().key}\n                    {...cell.getCellProps()}\n                    style={{ ...cell.getCellProps().style, padding: '0px' }}\n                  >\n                    {cell.render('Cell')}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default memo(ReactTableFlexLayout);\n","import {\n  useState,\n  useCallback,\n  useEffect,\n  memo,\n  useMemo,\n  useRef,\n  CSSProperties,\n} from 'react';\n\nimport ReactTableFlexLayout from '../elements/ReactTable/ReactTableFlexLayout';\nimport useSpectrum from '../hooks/useSpectrum';\n\nconst styles: Record<\n  'container' | 'tableContainer' | 'searchInput',\n  CSSProperties\n> = {\n  container: {\n    height: '100%',\n    flexDirection: 'column',\n    display: 'flex',\n    width: '100%',\n  },\n  tableContainer: {\n    height: 'calc(100% - 30px)',\n    overflow: 'auto',\n    display: 'block',\n  },\n\n  searchInput: {\n    width: '100%',\n    borderRadius: '5px',\n    border: '0.55px solid gray',\n    padding: '5px',\n    marginBottom: '2px',\n  },\n};\n\ninterface InformationPanelInnerProps {\n  info: any;\n  meta: any;\n}\n\nfunction InformationPanelInner({ info, meta }: InformationPanelInnerProps) {\n  const [information, setInformation] = useState({});\n  const [matches, setMatchesData] = useState<string[]>([]);\n  const searchRef = useRef<HTMLInputElement>(null);\n\n  const handleSearch = useCallback(\n    (e) => {\n      const values = Object.keys(information).filter((key) =>\n        key\n          .toLowerCase()\n          .includes(e.target ? e.target.value.toLowerCase() : e.toLowerCase()),\n      );\n      setMatchesData(values);\n    },\n    [information],\n  );\n\n  useEffect(() => {\n    if (searchRef.current) {\n      handleSearch(searchRef.current.value);\n    }\n  }, [handleSearch, searchRef]);\n\n  useEffect(() => {\n    if (info && meta) {\n      const keys = Object.keys(info).concat(Object.keys(meta));\n      setMatchesData(keys);\n      setInformation({\n        ...info,\n        ...meta,\n      });\n    }\n  }, [info, meta]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Parameter',\n        sortType: 'basic',\n        minWidth: 100,\n        width: 20,\n        maxWidth: 20,\n        Cell: ({ row }) => (\n          <p style={{ padding: '5px', backgroundColor: 'white' }}>\n            {row.original}\n          </p>\n        ),\n      },\n      {\n        Header: 'Value',\n        sortType: 'basic',\n        resizable: true,\n        Cell: ({ row }) => (\n          <p\n            style={{\n              backgroundColor: '#efefef',\n              height: '100%',\n              padding: '5px',\n              fontFamily: 'monospace',\n              whiteSpace: 'pre',\n              overflow: 'hidden',\n            }}\n          >\n            {`${information[row.original]}`}\n          </p>\n        ),\n      },\n    ],\n    [information],\n  );\n\n  return (\n    <div style={styles.container}>\n      <div>\n        <input\n          type=\"text\"\n          style={styles.searchInput}\n          placeholder=\"Search for parameter...\"\n          onChange={handleSearch}\n          ref={searchRef}\n        />\n      </div>\n      <div style={styles.tableContainer}>\n        <ReactTableFlexLayout data={matches} columns={columns} />\n      </div>\n    </div>\n  );\n}\n\nconst MemoizedInformationPanel = memo(InformationPanelInner);\n\nconst emptyData = { info: {}, meta: {} };\n\nexport default function InformationPanel() {\n  const { info, meta } = useSpectrum(emptyData);\n\n  return <MemoizedInformationPanel {...{ info, meta }} />;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FaTimes } from 'react-icons/fa';\n\nconst styles = css`\n  border-radius: 50%;\n  width: 16px;\n  height: 16px;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :hover {\n    background-color: red;\n    border-radius: 50%;\n\n    .icon {\n      color: white;\n    }\n  }\n\n  .icon {\n    color: #252525;\n    width: 8px;\n  }\n`;\n\ninterface DeleteButtonProps {\n  onDelete: (element: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  className?: string;\n}\n\nfunction DeleteButton({ onDelete, className = 'delete' }: DeleteButtonProps) {\n  return (\n    <button css={styles} className={className} type=\"button\" onClick={onDelete}>\n      <FaTimes className=\"icon\" />\n    </button>\n  );\n}\n\nexport default DeleteButton;\n","/** @jsxImportSource @emotion/react */\nimport { css, SerializedStyles } from '@emotion/react';\nimport { CSSProperties, ReactNode, useCallback } from 'react';\n\nimport DeleteButton from './DeleteButton';\n\nconst styles = (styles) => css`\n  position: relative;\n\n  .delete {\n    position: absolute;\n    top: 2px;\n    left: 2px;\n  }\n\n  ${styles}\n`;\n\nexport interface InternalTabProps {\n  tabid: string;\n  tablabel?: string;\n  isActive: boolean;\n  tabstyles?: CSSProperties | SerializedStyles;\n  canDelete?: boolean;\n  onDelete?: (element: any) => void;\n  onClick?: (element: any) => void;\n  render?: ({\n    isActive,\n    title,\n    id,\n  }: {\n    isActive: boolean;\n    title: string;\n    id: string | number;\n  }) => any;\n}\n\n/* eslint-disable react/no-unused-prop-types */\nexport interface TabProps {\n  tabid: string;\n  tablabel?: string;\n  canDelete?: boolean;\n  onDelete?: (element: any) => void;\n  tabstyles?: CSSProperties | SerializedStyles;\n  children: ReactNode;\n  render?: () => ReactNode;\n  className?: string;\n}\n/* eslint-enable react/no-unused-prop-types */\n\nexport function InternalTab({\n  tabid,\n  tablabel,\n  isActive,\n  onClick = () => null,\n  canDelete,\n  onDelete = () => null,\n  tabstyles,\n  render,\n}: InternalTabProps) {\n  let className = 'tab-list-item';\n\n  // use tab identifier if given (higher priority)\n  if (isActive) {\n    className += ' tab-list-active';\n  }\n\n  const clickHandler = useCallback(\n    (e) => {\n      onClick({ ...e, tablabel, tabid });\n    },\n    [onClick, tablabel, tabid],\n  );\n\n  const deleteHandler = useCallback(\n    (e) => {\n      // stop propagation here to not have set it\n      // as active tab too (via tab click event triggering)\n      e.stopPropagation();\n      onDelete({ ...e, tablabel, tabid });\n    },\n    [onDelete, tablabel, tabid],\n  );\n\n  return (\n    <li\n      className={className}\n      onClick={clickHandler}\n      css={styles(tabstyles)}\n      data-test-id={`tab-${tabid}`}\n    >\n      {canDelete && <DeleteButton onDelete={deleteHandler} />}\n      {render\n        ? render({ isActive, title: tablabel || '', id: tabid })\n        : tablabel}\n    </li>\n  );\n}\n\nexport default function Tab(props: TabProps) {\n  return <>{props.children}</>;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  isValidElement,\n  useCallback,\n  useMemo,\n  Children,\n  memo,\n  ReactElement,\n} from 'react';\n\nimport { InternalTab, TabProps } from './Tab';\n\nconst topStyles = css`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  .tab-list {\n    border-bottom: 1px solid #ccc;\n    padding-left: 0;\n    margin: 0;\n  }\n\n  .tab-list li:first-of-type {\n    margin-left: 5px;\n  }\n\n  .tab-list li:hover {\n    background-color: #f7f7f7;\n  }\n\n  .tab-list-item {\n    display: inline-block;\n    list-style: none;\n    padding: 0.5rem 2rem;\n  }\n\n  .tab-list-active {\n    background-color: white;\n    border: solid #ccc;\n    border-width: 1px 1px 0 1px;\n  }\n\n  .tab-content {\n    height: 100%;\n    overflow: auto;\n  }\n`;\n\nconst leftStyles = css`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  .tab-list {\n    border-right: 1px solid #ccc;\n    padding-left: 0;\n    margin: 0;\n  }\n\n  .tab-list li:hover {\n    background-color: #f7f7f7;\n  }\n\n  .tab-list li:first-of-type {\n    margin-top: 10px;\n  }\n\n  .tab-list-item {\n    display: block;\n    list-style: none;\n    margin-right: -1px;\n    padding: 0.5rem 0.75rem;\n  }\n\n  .tab-list-active {\n    background-color: white;\n    border: solid #ccc;\n    border-width: 1px 0px 1px 1px;\n  }\n\n  .tab-content {\n    height: 100%;\n    overflow: auto;\n  }\n`;\n\nexport enum PositionsEnum {\n  TOP = 'TOP',\n  LEFT = 'LEFT',\n}\n\ninterface TabsProps {\n  children: Array<ReactElement<TabProps> | boolean>;\n  onClick: (element: any) => void;\n  activeTab: string;\n  position?: PositionsEnum;\n  onDelete?: (element: any) => void;\n}\n\nfunction Tabs({\n  children,\n  onClick,\n  position,\n  onDelete = () => null,\n  activeTab,\n}: TabsProps) {\n  const onClickTabHandler = useCallback(\n    (tab) => {\n      const { tablabel, tabid } = tab;\n      onClick({ tablabel, tabid });\n    },\n    [onClick],\n  );\n\n  let contentChild;\n  const tabs = Children.map(children, (child) => {\n    if (!isValidElement(child)) return null;\n\n    const { tabid } = child.props;\n\n    if (tabid === activeTab) {\n      contentChild = child.props.children;\n    }\n\n    return (\n      <InternalTab\n        {...child.props}\n        isActive={tabid === activeTab}\n        onClick={onClickTabHandler}\n        onDelete={onDelete}\n      />\n    );\n  });\n\n  const styles = useMemo(() => {\n    switch (position) {\n      case PositionsEnum.TOP:\n        return topStyles;\n      case PositionsEnum.LEFT:\n        return leftStyles;\n      default:\n        return topStyles;\n    }\n  }, [position]);\n\n  return (\n    <div className=\"tabs\" css={styles}>\n      <ol className=\"tab-list\">{tabs}</ol>\n      <div className=\"tab-content\">{contentChild}</div>\n    </div>\n  );\n}\n\nexport default memo(Tabs);\n","/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport {\n  ReactNode,\n  useState,\n  Children,\n  useMemo,\n  useEffect,\n  useCallback,\n  memo,\n} from 'react';\nimport { FaAngleLeft } from 'react-icons/fa';\nimport { useMeasure } from 'react-use';\n\ninterface ArrowProps {\n  direction: 'right' | 'left';\n  onClick: () => void;\n}\n\nfunction Arrow({ direction, onClick }: ArrowProps) {\n  return (\n    <div\n      onClick={onClick}\n      css={css`\n        display: flex;\n        position: absolute;\n        top: calc(50% - 20px);\n        ${direction === 'right' ? `right: 25px` : `left: 25px`};\n        height: 40px;\n        width: 40px;\n        justify-content: center;\n        background: white;\n        border-radius: 50%;\n        cursor: pointer;\n        align-items: center;\n        border: none;\n        transition: transform ease-in 0.1s;\n        background-color: #f7f7f7;\n\n        &:hover {\n          transform: scale(1.1);\n          background-color: #607d8b !important;\n          color: white;\n        }\n        img {\n          transform: translateX(${direction === 'left' ? '-2' : '2'}px);\n          &:focus {\n            outline: 0;\n          }\n        }\n      `}\n    >\n      <FaAngleLeft\n        style={{ transform: `scaleX(${direction === 'right' ? '-1' : '1'})` }}\n      />\n    </div>\n  );\n}\n\nconst transition = 0.45;\n\ninterface NextPrevProps {\n  children: ReactNode;\n  loop?: boolean;\n  defaultIndex?: number;\n  onChange?: (element: number) => void;\n}\n\nfunction NextPrev({\n  children,\n  loop = false,\n  defaultIndex = 0,\n  onChange = () => null,\n}: NextPrevProps) {\n  const [ref, { width }] = useMeasure<HTMLDivElement>();\n  const [activeIndex, setActiveIndex] = useState(0);\n  useEffect(() => {\n    setActiveIndex(defaultIndex);\n  }, [defaultIndex]);\n\n  const Sliders = useMemo(\n    () =>\n      Children.map(children, (child: any) => {\n        return (\n          <div\n            key={child.key}\n            css={css`\n              width: ${width}px;\n              height: 100%;\n            `}\n          >\n            {child}\n          </div>\n        );\n      }),\n    [children, width],\n  );\n\n  const nextHandler = useCallback(() => {\n    setActiveIndex((preActiveIndex) => {\n      if (Sliders && preActiveIndex === Sliders.length - 1) {\n        onChange(preActiveIndex);\n\n        if (loop) {\n          return 0;\n        } else {\n          return preActiveIndex;\n        }\n      }\n\n      const nextIndex = preActiveIndex + 1;\n      onChange(nextIndex);\n\n      return nextIndex;\n    });\n  }, [Sliders, loop, onChange]);\n\n  const prevHandler = useCallback(() => {\n    setActiveIndex((preActiveIndex) => {\n      if (preActiveIndex === 0) {\n        onChange(preActiveIndex);\n        if (loop) {\n          return 0;\n        } else {\n          return preActiveIndex;\n        }\n      }\n      const prevIndex = preActiveIndex - 1;\n\n      onChange(prevIndex);\n\n      return prevIndex;\n    });\n  }, [loop, onChange]);\n\n  if (!width && !Sliders) return null;\n  return (\n    <div\n      css={css`\n        position: relative;\n        height: 100%;\n        width: 100%;\n        margin: 0 auto;\n        overflow: hidden;\n        display: block;\n      `}\n      ref={ref}\n    >\n      <div\n        css={css`\n          transform: translateX(-${width * activeIndex}px);\n          transition: transform ease-out ${transition}s;\n          height: 100%;\n          width: ${width * (Sliders ? Sliders.length : 1)}px;\n          display: flex;\n        `}\n      >\n        {Sliders}\n      </div>\n\n      {activeIndex !== 0 && <Arrow direction=\"left\" onClick={prevHandler} />}\n      {Sliders && activeIndex !== Sliders.length - 1 && (\n        <Arrow direction=\"right\" onClick={nextHandler} />\n      )}\n    </div>\n  );\n}\n\nexport default memo(NextPrev);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\nimport MF from 'react-mf/lib/components/MF';\nimport { MolfileSvgRenderer } from 'react-ocl/full';\n\nimport { Molecule } from '../../data/molecules/Molecule';\n\nimport NextPrev from './NextPrev';\n\nconst toolbarStyle = css`\n  display: flex;\n  flex-direction: row;\n  border-top: 0.55px solid rgb(240, 240, 240);\n  border-bottom: 0.55px solid rgb(240, 240, 240);\n  padding: 0px 5px;\n\n  p {\n    margin: 0;\n    text-align: right;\n    width: 100%;\n    line-height: 22px;\n    padding: 0px 10px;\n  }\n`;\n\nconst moleculeContainerStyle = css`\n  width: 100%;\n  position: relative;\n  .slider {\n    height: 180px;\n    width: 100%;\n    padding: 0px;\n    padding: 0px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n  }\n  .slider p {\n    width: 100%;\n    margin: 0 auto;\n    display: block;\n    position: relative;\n    text-align: center;\n  }\n  .slider svg polygon {\n    fill: gray !important;\n  }\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 36px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 20%;\n\n    color: white;\n    background-color: gray;\n  }\n`;\n\ninterface MoleculeSelectionProps {\n  molecules: Array<Molecule>;\n  onChange: (element: number) => void;\n  index?: number;\n}\n\nexport default function MoleculeSelection(props: MoleculeSelectionProps) {\n  const { molecules, onChange = () => null, index } = props;\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  useEffect(() => {\n    const _index = index && index < molecules.length ? index : 0;\n    if (molecules && molecules.length > 0) {\n      setCurrentIndex(_index);\n    }\n  }, [index, molecules]);\n\n  const onChangeHandler = useCallback(\n    (slideIndex) => {\n      setCurrentIndex(slideIndex);\n      onChange(slideIndex);\n    },\n    [onChange],\n  );\n\n  return (\n    <div>\n      <div css={toolbarStyle}>\n        <p>\n          {molecules &&\n            molecules.length > 0 &&\n            `${+(currentIndex + 1)} / ${molecules.length}`}{' '}\n        </p>\n      </div>\n      <div css={moleculeContainerStyle}>\n        <NextPrev defaultIndex={currentIndex} onChange={onChangeHandler}>\n          {molecules?.map((mol, index) => (\n            <div key={mol.key} className=\"slider\">\n              <div>\n                {mol.molfile && (\n                  <MolfileSvgRenderer\n                    id={`molSVG${index}`}\n                    width={120}\n                    molfile={mol.molfile}\n                  />\n                )}\n              </div>\n              <p>\n                <MF mf={mol.mf} /> - {mol.mw?.toFixed(2)}\n              </p>\n            </div>\n          ))}\n        </NextPrev>\n      </div>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport { useCallback, useState, useEffect, useMemo } from 'react';\n\nimport getAtom from '../../../data/utilities/getAtom';\nimport { useChartData } from '../../context/ChartContext';\nimport MoleculeSelection from '../../elements/MoleculeSelection';\n\nconst styles = css`\n  .molecule-container {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    .title {\n      padding: 0px 10px;\n      width: 100%;\n      text-align: center;\n    }\n\n    .molecule-selection-container {\n      width: 450px;\n      display: block;\n      margin: 0 auto;\n    }\n\n    .newSumText {\n      margin-top: 15px;\n      padding: 0px 10px;\n      width: 100%;\n\n      text-align: center;\n    }\n  }\n\n  .empty {\n    width: 100%;\n    padding: 20%;\n    text-align: center;\n  }\n`;\n\ninterface SelectMoleculeProps {\n  name: string;\n}\n\nexport default function SelectMolecule(props: SelectMoleculeProps) {\n  const [currentIndex, setCurrentIndex] = useState<number>();\n  const { setFieldValue, errors, values } = useFormikContext<{\n    molecule: { mf: string; key: string } | null;\n    sum: number;\n  }>();\n  const { molecules, activeTab } = useChartData();\n  const element = getAtom(activeTab);\n  const newSum = useMemo(() => {\n    return element &&\n      molecules &&\n      molecules.length > 0 &&\n      currentIndex !== undefined &&\n      molecules[currentIndex].atoms[element]\n      ? molecules[currentIndex].atoms[element]\n      : 0;\n  }, [currentIndex, element, molecules]);\n\n  const setValue = useCallback(\n    (index: number) => {\n      setCurrentIndex(index);\n      setFieldValue(props.name, molecules[index]);\n    },\n    [molecules, props.name, setFieldValue],\n  );\n\n  useEffect(() => {\n    if (molecules && molecules.length > 0) {\n      const index = values[props.name]\n        ? molecules.findIndex(\n            (molecule) => molecule.key === values[props.name].key,\n          )\n        : -1;\n      setValue(index !== -1 ? index : 0);\n    }\n  }, [molecules, props.name, setValue, values]);\n\n  const onChangeMoleculeSelectionHandler = useCallback(\n    (index) => {\n      setValue(index);\n    },\n    [setValue],\n  );\n\n  return (\n    <div css={styles}>\n      {element && molecules && molecules.length > 0 ? (\n        <div className=\"molecule-container\">\n          <p className=\"title\">Select a molecule as reference!</p>\n\n          <div className=\"molecule-selection-container\">\n            <MoleculeSelection\n              index={currentIndex}\n              molecules={molecules}\n              onChange={onChangeMoleculeSelectionHandler}\n            />\n            <p className=\"newSumText\">\n              New sum for {element} will be {newSum}!\n            </p>\n          </div>\n        </div>\n      ) : (\n        <p\n          className=\"empty\"\n          style={{ color: errors[props.name] ? 'red' : 'black' }}\n        >\n          You have to Select a spectrum and Add a molecule from the Structure\n          panel to select as a reference!\n        </p>\n      )}\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport * as Yup from 'yup';\n\nimport { SumOptions } from '../../../data/types/data1d/SumOptions';\nimport { usePreferences } from '../../context/PreferencesContext';\nimport CloseButton from '../../elements/CloseButton';\nimport Tab from '../../elements/Tab/Tab';\nimport Tabs from '../../elements/Tab/Tabs';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikInput from '../../elements/formik/FormikInput';\nimport { ModalStyles } from '../ModalStyle';\n\nimport SelectMolecule from './SelectMolecule';\n\nconst styles = css`\n  width: 450px;\n  height: 400px;\n  .header {\n    display: flex;\n    padding: 10px;\n    span {\n      font-size: 14px;\n      flex: 1;\n    }\n  }\n\n  .tab-content {\n    flex: 1;\n  }\n\n  .manual-container {\n    padding: 30px 5px;\n\n    .input {\n      width: 80% !important;\n      height: 36px;\n      margin: 0 auto;\n    }\n    .input Input {\n      padding: 5px;\n      text-align: center;\n    }\n  }\n\n  .footer-container {\n    button {\n      width: 20%;\n      color: white;\n      background-color: gray !important;\n    }\n    button:hover {\n      border: 1px solid gray;\n      color: gray;\n      background-color: white !important;\n    }\n  }\n`;\n\nenum SumSetOptions {\n  Auto = 'auto',\n  Manual = 'manual',\n}\n\ntype SaveInput =\n  | {\n      sum: number;\n      sumAuto: false;\n    }\n  | {\n      moleculeKey: string;\n      mf: string;\n      sumAuto: true;\n    };\n\ninterface ChangeSumModalProps {\n  onSave: (saveInput: SaveInput) => void;\n  onClose: () => void;\n  header: string;\n  sumOptions: SumOptions;\n}\n\nexport default function ChangeSumModal({\n  onSave,\n  onClose,\n  header,\n  sumOptions,\n}: ChangeSumModalProps) {\n  const {\n    current: {\n      display: { general, panels },\n    },\n  } = usePreferences();\n\n  const [setOption, setActiveOption] = useState(SumSetOptions.Auto);\n  const formRef = useRef<any>(null);\n\n  const handleKeyDown = useCallback((event) => {\n    if (event.key === 'Enter') {\n      formRef.current.submitForm();\n    }\n  }, []);\n\n  const onTabChangeHandler = useCallback((tab) => {\n    setActiveOption(tab.tabid);\n  }, []);\n\n  useEffect(() => {\n    if (\n      sumOptions?.sumAuto &&\n      !general?.hideSetSumFromMolecule &&\n      !panels?.structuresPanel?.hidden\n    ) {\n      setActiveOption(SumSetOptions.Auto);\n      const { mf, moleculeKey: key } = sumOptions;\n      formRef.current.setValues({\n        sum: null,\n        molecule: key && mf ? { mf, key } : null,\n      });\n    } else {\n      setActiveOption(SumSetOptions.Manual);\n      formRef.current.setValues({ sum: sumOptions?.sum || '', molecule: null });\n    }\n  }, [general?.hideSetSumFromMolecule, panels?.structuresPanel, sumOptions]);\n\n  const saveHandler = useCallback(\n    (values) => {\n      switch (setOption) {\n        case SumSetOptions.Auto: {\n          const {\n            molecule: { mf, key: moleculeKey },\n          } = values;\n\n          onSave({ sumAuto: true, mf, moleculeKey });\n          break;\n        }\n        case SumSetOptions.Manual: {\n          const { sum } = values;\n          onSave({ sum, sumAuto: false });\n          break;\n        }\n        default:\n          return;\n      }\n      onClose();\n    },\n    [onClose, onSave, setOption],\n  );\n\n  const validationSchema = useMemo(() => {\n    switch (setOption) {\n      case SumSetOptions.Auto: {\n        return Yup.object({\n          molecule: Yup.object().required(),\n        });\n      }\n      case SumSetOptions.Manual: {\n        return Yup.object({\n          sum: Yup.number().required(),\n        });\n      }\n      default:\n        return null;\n    }\n  }, [setOption]);\n\n  return (\n    // <div css={modalContainer}>\n    <div css={[ModalStyles, styles]}>\n      <div className=\"header handle\">\n        <span>{header}</span>\n\n        <CloseButton onClick={onClose} />\n      </div>\n      <div className=\"tab-content\">\n        <FormikForm\n          ref={formRef}\n          onSubmit={saveHandler}\n          initialValues={{ sum: null, molecule: null }}\n          validationSchema={validationSchema}\n        >\n          <Tabs activeTab={setOption} onClick={onTabChangeHandler}>\n            {!general?.hideSetSumFromMolecule &&\n              !panels?.structuresPanel?.hidden && (\n                <Tab tablabel=\"Auto\" tabid={SumSetOptions.Auto}>\n                  <SelectMolecule name=\"molecule\" />\n                </Tab>\n              )}\n\n            <Tab tablabel=\"Manual\" tabid={SumSetOptions.Manual}>\n              <div className=\"manual-container\">\n                <FormikInput\n                  name=\"sum\"\n                  type=\"number\"\n                  placeholder=\"Enter the new value\"\n                  onKeyDown={handleKeyDown}\n                />\n              </div>\n            </Tab>\n          </Tabs>\n        </FormikForm>\n      </div>\n      <div className=\"footer-container\">\n        <button\n          type=\"button\"\n          onClick={() => formRef.current.submitForm()}\n          className=\"btn\"\n        >\n          Set\n        </button>\n      </div>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { memo } from 'react';\nimport { FaCheck } from 'react-icons/fa';\n\nimport ToolTip from './ToolTip/ToolTip';\n\nconst styles = css`\n  background-color: transparent;\n  border: none;\n  height: 100%;\n  svg {\n    fill: green;\n    font-size: 16px;\n  }\n`;\n\ninterface SaveButtonProps {\n  popupTitle?: string;\n  popupPlacement?: string;\n  disabled?: boolean;\n  className?: string;\n  onClick?: () => void;\n}\n\nfunction SaveButton(props: SaveButtonProps) {\n  const {\n    className = '',\n    disabled = false,\n    popupPlacement = 'left',\n    popupTitle = 'Save',\n    onClick,\n  } = props;\n\n  return (\n    <div className={className}>\n      <ToolTip title={popupTitle} popupPlacement={popupPlacement}>\n        <button\n          css={styles}\n          type=\"button\"\n          onClick={onClick}\n          disabled={disabled}\n          className={className}\n        >\n          <FaCheck />\n        </button>\n      </ToolTip>\n    </div>\n  );\n}\n\nexport default memo(SaveButton);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { memo } from 'react';\n\nimport CloseButton from '../../elements/CloseButton';\nimport SaveButton from '../../elements/SaveButton';\n\nconst styles = css`\n  display: flex;\n  flex-direction: row-reverse;\n  border-bottom: 0.55px solid rgb(240, 240, 240);\n\n  button {\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n  }\n  button:disabled {\n    opacity: 0.6;\n  }\n`;\n\ninterface PreferencesHeaderProps {\n  onClose: () => void;\n  onSave: () => void;\n}\n\nfunction PreferencesHeader({ onClose, onSave }: PreferencesHeaderProps) {\n  return (\n    <div css={styles}>\n      <CloseButton onClick={onClose} popupTitle=\"close Preferences\" />\n      <SaveButton onClick={onSave} popupTitle=\"save Preferences\" />\n    </div>\n  );\n}\n\nexport default memo(PreferencesHeader);\n","import {\n  CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\n\nimport Input from './Input';\n\ninterface EditableColumnProps {\n  onSave?: (element: any) => void;\n  onEditStart?: (element: any) => void;\n  type?: 'number' | 'text';\n  editStatus?: boolean;\n  value: string | number;\n  style?: CSSProperties;\n}\n\n// TODO: remove this hacky ref usage.\nfunction EditableColumn(props: EditableColumnProps, ref: any) {\n  const {\n    onSave = () => null,\n    value,\n    type = 'text',\n    style,\n    onEditStart = () => null,\n    editStatus = false,\n  } = props;\n\n  const [enabled, enableEdit] = useState<boolean | undefined>();\n\n  useEffect(() => {\n    enableEdit(editStatus);\n  }, [editStatus]);\n\n  useImperativeHandle(ref, () => ({\n    startEdit: () => {\n      enableEdit(true);\n    },\n    closeEdit: () => {\n      enableEdit(false);\n    },\n  }));\n\n  const mouseClickCallback = useCallback((e: MouseEvent) => {\n    if (!(e.target as HTMLInputElement).classList.contains('editable-column')) {\n      enableEdit(false);\n      window.removeEventListener('mousedown', mouseClickCallback);\n    }\n  }, []);\n\n  // TODO: refactor this to not mix mouse and keyboard events.\n  const editModeHandler = useCallback(\n    (flag, event?: React.KeyboardEvent) => {\n      if (!flag && event) {\n        // when press Enter or Tab\n        if (['Enter', 'Tab'].includes(event.key)) {\n          onSave(event);\n        }\n        // close edit mode if press Enter, Tab or Escape\n        if (['Enter', 'Tab', 'Escape'].includes(event.key)) {\n          enableEdit(flag);\n          window.removeEventListener('mousedown', mouseClickCallback);\n        }\n      } else {\n        // start edit mode and add mouse listener to handle mouse click outside the input to finish the mode\n        window.addEventListener('mousedown', mouseClickCallback);\n        onEditStart(event);\n        enableEdit(flag);\n      }\n    },\n    [mouseClickCallback, onEditStart, onSave],\n  );\n\n  return (\n    <div\n      style={{ display: 'table', width: '100%', height: '100%', ...style }}\n      onDoubleClick={() => editModeHandler(true)}\n    >\n      {!enabled && (\n        <span style={{ display: 'table-cell', verticalAlign: 'middle' }}>\n          {value}\n        </span>\n      )}\n      {enabled && (\n        <div style={{ display: 'table-cell', verticalAlign: 'middle' }}>\n          <Input\n            enableAutoSelect\n            className=\"editable-column\"\n            value={value}\n            type={type}\n            onKeyDown={(e) => editModeHandler(false, e)}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default forwardRef(EditableColumn);\n","import { CSSProperties } from 'react';\n\nexport interface CustomColumn {\n  index: number;\n  id?: string;\n  Header?: (() => JSX.Element) | string;\n  sortType?: string;\n  Cell?: (rowData: { row: { original: any; index: number } }) => any;\n  accessor?: ((row?: any, index?: number) => any) | string;\n  enableRowSpan?: boolean;\n  style?: CSSProperties;\n  extraParams?: any;\n}\n\nexport default function addCustomColumn(array, options: CustomColumn) {\n  const {\n    index,\n    Header = () => null,\n    extraParams,\n    accessor = null,\n    Cell = null,\n    sortType = 'basic',\n    enableRowSpan = false,\n    style = {},\n    id,\n  } = options || {};\n\n  array.push({\n    index,\n    ...{ ...(id && { id }) },\n    ...{ ...(accessor ? { accessor } : {}) },\n    ...{ ...(Cell ? { Cell } : {}) },\n    Header,\n    sortType,\n    enableRowSpan,\n    style,\n    ...extraParams,\n  });\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { CSSProperties, ForwardedRef, forwardRef, useCallback } from 'react';\n\nconst arrowDownIcon = `url('data:image/svg+xml;utf8,<svg  xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"960px\" height=\"560px\" viewBox=\"0 0 960 560\" enable-background=\"new 0 0 960 560\" xml:space=\"preserve\"><g id=\"Rounded_Rectangle_33_copy_4_1_\"><path d=\"M480,344.181L268.869,131.889c-15.756-15.859-41.3-15.859-57.054,0c-15.754,15.857-15.754,41.57,0,57.431l237.632,238.937c8.395,8.451,19.562,12.254,30.553,11.698c10.993,0.556,22.159-3.247,30.555-11.698l237.631-238.937c15.756-15.86,15.756-41.571,0-57.431s-41.299-15.859-57.051,0L480,344.181z\"/></g></svg>')`;\n\nconst styles = {\n  select: (width: number | string | undefined) => css`\n    padding: 0px 5px;\n    border: 0.55px solid #cacaca;\n    font-size: 14px;\n    width: ${width ? Number(width) - 5 : 115}px;\n    margin: 0;\n    height: 100%;\n    background: ${arrowDownIcon} no-repeat right white;\n    -webkit-appearance: none;\n    background-position-x: calc(100% - 5px);\n    background-size: 15px 15px;\n    border-radius: 5px;\n    margin: 0px 5px;\n    align-self: center;\n    &:focus,\n    input:focus {\n      outline: none;\n    }\n\n    &:required:invalid {\n      color: #666;\n    }\n  `,\n};\n\nexport interface SelectEntry {\n  key: string | number;\n  value: string | number;\n  label: string | number;\n}\n\nexport interface SelectProps {\n  onChange?: (element: string) => void;\n  data: Array<SelectEntry>;\n  style?: CSSProperties;\n  defaultValue?: string | number;\n  name?: string;\n  className?: string;\n  placeholder?: string;\n}\n\nconst Select = forwardRef(function Select(\n  props: SelectProps,\n  ref: ForwardedRef<HTMLSelectElement>,\n) {\n  const {\n    data,\n    style = { width: 100 },\n    onChange = () => null,\n    defaultValue = '',\n    name = '',\n    className = '',\n    placeholder = '',\n  } = props;\n\n  const handleOnChanged = useCallback(\n    (e) => {\n      let value = e.target.value;\n      if (!isNaN(value)) {\n        value = Number(value);\n      }\n      onChange(value);\n    },\n    [onChange],\n  );\n\n  return (\n    <select\n      ref={ref}\n      css={styles.select(style?.width)}\n      name={name}\n      onChange={handleOnChanged}\n      defaultValue={defaultValue}\n      className={className}\n      style={style}\n      required\n    >\n      {placeholder && (\n        <option value=\"\" disabled>\n          {placeholder}\n        </option>\n      )}\n\n      {data.map((d) => (\n        <option key={`${d.key}`} value={d.value}>\n          {d.label}\n        </option>\n      ))}\n    </select>\n  );\n});\n\nexport default Select;\n","import lodashGet from 'lodash/get';\nimport { useCallback, useMemo, memo } from 'react';\nimport { FaRegTrashAlt } from 'react-icons/fa';\n\nimport { SignalKinds } from '../../../data/constants/SignalsKinds';\nimport { checkIntegralKind } from '../../../data/data1d/Spectrum1D';\nimport { Integral } from '../../../data/types/data1d';\nimport { useDispatch } from '../../context/DispatchContext';\nimport EditableColumn from '../../elements/EditableColumn';\nimport ReactTable from '../../elements/ReactTable/ReactTable';\nimport addCustomColumn, {\n  CustomColumn,\n} from '../../elements/ReactTable/utility/addCustomColumn';\nimport Select from '../../elements/Select';\nimport {\n  DELETE_INTEGRAL,\n  CHANGE_INTEGRAL_DATA,\n  CHANGE_INTEGRAL_RELATIVE,\n} from '../../reducer/types/Types';\nimport formatNumber from '../../utility/FormatNumber';\nimport { getValue } from '../../utility/LocalStorage';\nimport NoTableData from '../extra/placeholder/NoTableData';\nimport { integralDefaultValues } from '../extra/preferences/defaultValues';\n\nimport { IntegralPanelInnerProps } from './IntegralPanel';\n\nconst selectStyle = { marginLeft: 10, marginRight: 10, border: 'none' };\n\ninterface IntegralTableProps\n  extends Pick<IntegralPanelInnerProps, 'activeTab' | 'preferences'> {\n  data: Array<Integral>;\n}\n\nfunction IntegralTable({ activeTab, data, preferences }: IntegralTableProps) {\n  const dispatch = useDispatch();\n  const deleteIntegralHandler = useCallback(\n    (e, row) => {\n      e.preventDefault();\n      e.stopPropagation();\n      const params = row.original;\n      dispatch({\n        type: DELETE_INTEGRAL,\n        integralID: params.id,\n      });\n    },\n    [dispatch],\n  );\n  const changeIntegralDataHandler = useCallback(\n    (value, row) => {\n      const data = { ...row.original, kind: value };\n      dispatch({\n        type: CHANGE_INTEGRAL_DATA,\n        payload: { data },\n      });\n    },\n    [dispatch],\n  );\n  const initialColumns: CustomColumn[] = useMemo(\n    () => [\n      {\n        index: 1,\n        Header: '#',\n        Cell: ({ row }) => row.index + 1,\n        width: 10,\n      },\n\n      {\n        index: 2,\n        Header: 'From',\n        sortType: 'basic',\n        resizable: true,\n        accessor: (row) => row.from.toFixed(2),\n      },\n      {\n        index: 3,\n        Header: 'To',\n        sortType: 'basic',\n        resizable: true,\n        accessor: (row) => row.to.toFixed(2),\n      },\n      {\n        index: 6,\n        Header: 'Kind',\n        sortType: 'basic',\n        resizable: true,\n        accessor: (row) => row.kind,\n        Cell: ({ row }) => (\n          <Select\n            onChange={(value) => changeIntegralDataHandler(value, row)}\n            data={SignalKinds}\n            style={selectStyle}\n            defaultValue={row.original.kind}\n          />\n        ),\n      },\n      {\n        index: 7,\n        style: { width: '1%', maxWidth: '24px', minWidth: '24px' },\n        id: 'delete-button',\n        Cell: ({ row }) => (\n          <button\n            type=\"button\"\n            className=\"delete-button\"\n            onClick={(e) => deleteIntegralHandler(e, row)}\n          >\n            <FaRegTrashAlt />\n          </button>\n        ),\n      },\n    ],\n    [changeIntegralDataHandler, deleteIntegralHandler],\n  );\n\n  const saveRelativeHandler = useCallback(\n    (event, row) => {\n      const data = { value: event.target.value, id: row.id };\n      dispatch({\n        type: CHANGE_INTEGRAL_RELATIVE,\n        payload: { data },\n      });\n    },\n    [dispatch],\n  );\n\n  const integralsPreferences = useMemo(\n    () =>\n      getValue(\n        preferences.current,\n        `formatting.panels.integrals.[${activeTab}]`,\n        integralDefaultValues,\n      ),\n    [activeTab, preferences],\n  );\n\n  const COLUMNS: (CustomColumn & { showWhen: string })[] = useMemo(\n    () => [\n      {\n        showWhen: 'showAbsolute',\n        index: 4,\n        Header: 'Absolute',\n        accessor: (row) =>\n          formatNumber(\n            row.absolute,\n            lodashGet(\n              integralsPreferences,\n              'absoluteFormat',\n              integralDefaultValues.absoluteFormat,\n            ),\n          ),\n      },\n      {\n        showWhen: 'showRelative',\n        index: 5,\n        id: 'relative',\n        Header: () => {\n          const n = activeTab?.replace(/[0-9]/g, '');\n          return <span>{`Relative ${n}`}</span>;\n        },\n        accessor: (row) => {\n          return formatNumber(\n            row.integral,\n            lodashGet(\n              integralsPreferences,\n              'relativeFormat',\n              integralDefaultValues.relativeFormat,\n            ),\n          );\n        },\n        Cell: ({ row }) => {\n          const value = formatNumber(\n            row.original.integral,\n            lodashGet(\n              integralsPreferences,\n              'relativeFormat',\n              integralDefaultValues.relativeFormat,\n            ),\n          );\n          const flag = checkIntegralKind(row.original);\n          const integral = flag ? value : `[ ${value} ]`;\n\n          return (\n            <EditableColumn\n              value={integral}\n              onSave={(event) => saveRelativeHandler(event, row.original)}\n              type=\"number\"\n            />\n          );\n        },\n      },\n    ],\n    [activeTab, integralsPreferences, saveRelativeHandler],\n  );\n\n  const tableColumns = useMemo(() => {\n    let columns = [...initialColumns];\n    for (const col of COLUMNS) {\n      const { showWhen, ...colParams } = col;\n      if (integralsPreferences[showWhen]) {\n        addCustomColumn(columns, colParams);\n      }\n    }\n\n    return columns.sort((object1, object2) => object1.index - object2.index);\n  }, [COLUMNS, initialColumns, integralsPreferences]);\n\n  return data && data.length > 0 ? (\n    <ReactTable data={data} columns={tableColumns} />\n  ) : (\n    <NoTableData />\n  );\n}\n\nexport default memo(IntegralTable);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, memo, useState, useEffect } from 'react';\nimport { ChromePicker } from 'react-color';\n\nconst style = css`\n  display: flex;\n  margin: 5px 0px;\n\n.inputLabel{\n  flex: 2;\n  font-size: 11px;\n  font-weight: bold;\n  color: #232323;\n}\n\n.input {\n  width: '60%',\n  text-align: 'center',\n}\n\n.color{\n  width: 36px;\n  height: 14px;\n  border-radius: 2px;\n}\n\n.swatch{\n  padding: 5px;\n  background: #fff;\n  border-radius: 1px;\n  box-shadow: 0 0 0 1px rgba(0,0,0,.1);\n  display: inline-block;\n  cursor: pointer;\n}\n.color-popover {\n  position: absolute;\n  z-index: 2;\n}\n\n.cover {\n  position: fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n}\n  .chrome-picker {\n    border-radius: none !important;\n    width: 200px !important;\n    height: 60px !important;\n    display: flex;\n\n\n  }\n  .chrome-picker > div:first-of-type {\n    padding: 0px !important;\n\n  }\n  .chrome-picker > div:last-child >  div:first-of-type {\n    width: 120px;\n\n  }\n  .chrome-picker > div:last-child >  div:last-child {\n    display:none !important;\n  }\n`;\n\nexport interface ColorInputProps {\n  value?: string;\n  label?: string;\n  name: string;\n  onColorChange?: (element: any) => void;\n}\n\nfunction ColorInput(props: ColorInputProps) {\n  const {\n    label = 'Color: ',\n    onColorChange = () => null,\n    name,\n    value = '#000000',\n  } = props;\n\n  const [displayColorPicker, showColorPicker] = useState(false);\n  const [selectedColor, setColor] = useState(value);\n\n  useEffect(() => {\n    setColor(value);\n  }, [value]);\n\n  const handleClick = useCallback(() => {\n    showColorPicker(!displayColorPicker);\n  }, [displayColorPicker]);\n\n  const handleClose = useCallback(() => {\n    showColorPicker(false);\n  }, []);\n\n  const handleOnColorChanged = useCallback(\n    (colorEvent) => {\n      const hex = `${colorEvent.hex}${Math.round(\n        colorEvent.rgb.a * 255,\n      ).toString(16)}`;\n      setColor(hex);\n      onColorChange({ ...colorEvent, hex, name });\n    },\n    [name, onColorChange],\n  );\n  return (\n    <div css={style}>\n      <span className=\"inputLabel\">{label}</span>\n      <div style={{ flex: 4 }}>\n        <div className=\"swatch\" onClick={handleClick}>\n          <div className=\"color\" style={{ backgroundColor: selectedColor }} />\n          <input type=\"hidden\" value={selectedColor} name={name} />\n        </div>\n        {displayColorPicker ? (\n          <div className=\"color-popover\">\n            <div className=\"cover\" onClick={handleClose} />\n            <ChromePicker\n              color={{ hex: selectedColor }}\n              onChangeComplete={handleOnColorChanged}\n            />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(ColorInput);\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, memo } from 'react';\n\nimport ColorInput, { ColorInputProps } from '../ColorInput';\n\ninterface FormikColorPickerProps extends ColorInputProps {\n  name: string;\n}\n\nfunction FormikColorPicker(props: FormikColorPickerProps) {\n  const { onColorChange = () => null, name, ...colorPickerProps } = props;\n\n  const { values, setFieldValue } = useFormikContext();\n\n  const colorChangeHandler = useCallback(\n    (color) => {\n      onColorChange(color);\n      setFieldValue(name, color.hex);\n    },\n    [name, onColorChange, setFieldValue],\n  );\n\n  return (\n    <ColorInput\n      {...colorPickerProps}\n      name={name}\n      onColorChange={colorChangeHandler}\n      value={lodashGet(values, name)}\n    />\n  );\n}\n\nexport default memo(FormikColorPicker);\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { CSSProperties, memo, useCallback } from 'react';\n\nimport Input from '../Input';\n\nconst styles: Record<'row' | 'inputLabel' | 'input', CSSProperties> = {\n  row: {\n    display: 'flex',\n    margin: '5px 0px',\n    alignItems: 'center',\n  },\n  inputLabel: {\n    flex: 2,\n    fontSize: '11px',\n    fontWeight: 'bold',\n    color: '#232323',\n  },\n  input: {\n    width: '60%',\n    textAlign: 'center',\n  },\n};\n\ninterface FormikColumnFormatFieldProps {\n  label: string;\n  checkControllerName: string;\n  formatControllerName?: string;\n  disableFormat?: boolean;\n  hideFormat?: boolean;\n}\n\nfunction FormikColumnFormatField(props: FormikColumnFormatFieldProps) {\n  const {\n    label,\n    checkControllerName,\n    formatControllerName,\n    disableFormat = false,\n    hideFormat = false,\n  } = props;\n\n  const { values, handleChange, setFieldValue } = useFormikContext();\n\n  const changeHandler = useCallback(\n    (e) => {\n      handleChange(e);\n    },\n    [handleChange],\n  );\n\n  const checkChangeHandler = useCallback(\n    (e) => {\n      setFieldValue(e.target.name, e.target.checked);\n    },\n    [setFieldValue],\n  );\n\n  return (\n    <div style={styles.row}>\n      <span style={styles.inputLabel}>{label}</span>\n      <div\n        style={{\n          flex: 4,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n        }}\n      >\n        <input\n          type=\"checkbox\"\n          style={{ margin: '0px 5px' }}\n          name={checkControllerName}\n          onChange={checkChangeHandler}\n          checked={lodashGet(values, checkControllerName, false)}\n        />\n        {!hideFormat && formatControllerName && (\n          <Input\n            style={{ inputWrapper: styles.input }}\n            name={formatControllerName}\n            value={lodashGet(values, formatControllerName, '')}\n            onChange={changeHandler}\n            type=\"text\"\n            disabled={disableFormat}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(FormikColumnFormatField);\n","import {\n  CSSProperties,\n  ForwardedRef,\n  forwardRef,\n  useCallback,\n  useRef,\n} from 'react';\n\nconst styles: Record<\n  'container' | 'label' | 'inputContainer' | 'input',\n  CSSProperties\n> = {\n  container: {\n    display: 'flex',\n  },\n  label: {\n    lineHeight: 2,\n    userSelect: 'none',\n    flex: '2',\n  },\n  inputContainer: {\n    flex: '4',\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  input: {\n    height: '100%',\n    width: '100px',\n    borderRadius: '5px',\n    border: '0.55px solid #c7c7c7',\n    margin: '0px 5px 0px 5px',\n    textAlign: 'center',\n  },\n};\n\nexport interface NumberInputProps {\n  pattern?: string;\n  label?: string;\n  name?: string;\n  step?: any;\n  min?: any;\n  max?: any;\n  defaultValue?: number;\n  style?: {\n    container?: any;\n    label?: any;\n    inputContainer?: any;\n    input?: any;\n  };\n  onChange?: (element: any) => void;\n  onInput?: () => void;\n}\n\nconst NumberInput = forwardRef(\n  (\n    {\n      label,\n      name,\n      defaultValue = 0,\n      style = { label: {}, input: {}, container: {}, inputContainer: {} },\n      onChange = () => null,\n      onInput = () => null,\n      pattern = '^d*(.d{0,2})?$',\n      step = 'any',\n      min = 'any',\n      max = 'any',\n    }: NumberInputProps,\n    ref: ForwardedRef<HTMLInputElement>,\n  ) => {\n    const localRef = useRef<HTMLInputElement>(null);\n    const changeHander = useCallback(\n      (e) => {\n        if (e.target.checkValidity()) {\n          const value = Number(\n            e.target.value === '' ? defaultValue : e.target.value,\n          );\n          onChange({\n            ...e,\n            target: { ...e.target, name: e.target.name, value },\n          });\n        } else {\n          const _ref: any = ref ? ref : localRef;\n          _ref.current.value = Number(defaultValue);\n        }\n      },\n      [defaultValue, onChange, ref],\n    );\n    return (\n      <div style={{ ...styles.container, ...style.container }}>\n        <span style={{ ...styles.label, ...style.label }}>{label}</span>\n        <div style={{ ...styles.inputContainer, ...style.inputContainer }}>\n          <input\n            ref={ref ? ref : localRef}\n            name={name}\n            style={{ ...styles.input, ...style.input }}\n            type=\"number\"\n            pattern={pattern}\n            defaultValue={defaultValue}\n            step={step}\n            onChange={changeHander}\n            onInput={onInput}\n            min={min}\n            max={max}\n            key={defaultValue}\n          />\n        </div>\n      </div>\n    );\n  },\n);\n\nexport default NumberInput;\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback } from 'react';\n\nimport NumberInput, { NumberInputProps } from '../NumberInput';\n\ninterface FormikNumberInputProps extends NumberInputProps {\n  label: string;\n  name: string;\n}\n\nfunction FormikNumberInput(props: FormikNumberInputProps) {\n  const { label, name, ...resProps } = props;\n  const { values, handleChange } = useFormikContext();\n\n  const changeHandler = useCallback(\n    (e) => {\n      handleChange(e);\n    },\n    [handleChange],\n  );\n\n  return (\n    <NumberInput\n      label={label}\n      name={name}\n      defaultValue={lodashGet(values, name)}\n      onChange={changeHandler}\n      {...resProps}\n    />\n  );\n}\n\nexport default FormikNumberInput;\n","import { useMemo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nexport default function useNucleus() {\n  const { tabActiveSpectrum } = useChartData();\n  return useMemo<Array<string>>(() => {\n    if (tabActiveSpectrum && Object.keys(tabActiveSpectrum).length > 0) {\n      return Object.keys(tabActiveSpectrum);\n    }\n    return [];\n  }, [tabActiveSpectrum]);\n}\n","import {\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  CSSProperties,\n  memo,\n  forwardRef,\n} from 'react';\nimport { MF } from 'react-mf';\n\nimport { usePreferences } from '../../context/PreferencesContext';\nimport FormikColorInput from '../../elements/formik/FormikColorInput';\nimport FormikColumnFormatField from '../../elements/formik/FormikColumnFormatField';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikNumberInput from '../../elements/formik/FormikNumberInput';\nimport { useAlert } from '../../elements/popup/Alert';\nimport useNucleus from '../../hooks/useNucleus';\nimport { getValue as getValueByKeyPath } from '../../utility/LocalStorage';\nimport { integralDefaultValues } from '../extra/preferences/defaultValues';\n\nconst styles: Record<\n  | 'container'\n  | 'groupContainer'\n  | 'row'\n  | 'header'\n  | 'inputLabel'\n  | 'input'\n  | 'inputLabel',\n  CSSProperties\n> = {\n  container: {\n    padding: 10,\n    backgroundColor: '#f1f1f1',\n    height: '100%',\n    overflowY: 'auto',\n  },\n  groupContainer: {\n    padding: '5px',\n    borderRadius: '5px',\n    margin: '10px 0px',\n    backgroundColor: 'white',\n  },\n  row: {\n    display: 'flex',\n    margin: '5px 0px',\n  },\n  header: {\n    borderBottom: '1px solid #e8e8e8',\n    paddingBottom: '5px',\n    fontWeight: 'bold',\n    color: '#4a4a4a',\n  },\n  inputLabel: {\n    flex: 2,\n    fontSize: '11px',\n    fontWeight: 'bold',\n    color: '#232323',\n  },\n  input: {\n    width: '30%',\n    textAlign: 'center',\n  },\n};\n\nconst formatFields = [\n  {\n    id: 1,\n    label: 'Absolute :',\n    checkController: 'showAbsolute',\n    formatController: 'absoluteFormat',\n  },\n  {\n    id: 2,\n    label: 'Relative :',\n    checkController: 'showRelative',\n    formatController: 'relativeFormat',\n  },\n];\n\ninterface IntegralsPreferencesInnerProps {\n  nucleus: Array<string>;\n  preferences: any;\n  innerRef: any;\n}\n\nfunction IntegralsPreferencesInner({\n  nucleus,\n  preferences,\n  innerRef,\n}: IntegralsPreferencesInnerProps) {\n  const alert = useAlert();\n\n  const formRef = useRef<any>();\n\n  const updateValues = useCallback(() => {\n    if (nucleus) {\n      const { color, strokeWidth, ...restProps } = integralDefaultValues;\n\n      const integralPreferences = getValueByKeyPath(\n        preferences.current,\n        `formatting.panels.integrals`,\n      );\n\n      let defaultValues = nucleus.reduce((acc, nucleusLabel) => {\n        acc[nucleusLabel] = restProps;\n        return acc;\n      }, {});\n      defaultValues = Object.assign(defaultValues, { color, strokeWidth });\n\n      formRef.current.setValues(\n        integralPreferences ? integralPreferences : defaultValues,\n      );\n    }\n  }, [nucleus, preferences]);\n\n  useEffect(() => {\n    updateValues();\n  }, [updateValues]);\n\n  const saveHandler = useCallback(\n    (values) => {\n      preferences.dispatch({\n        type: 'SET_PANELS_PREFERENCES',\n        payload: { key: 'integrals', value: values },\n      });\n      alert.success('Integrals preferences saved successfully');\n    },\n    [alert, preferences],\n  );\n\n  useImperativeHandle(innerRef, () => ({\n    saveSetting: () => {\n      formRef.current.submitForm();\n    },\n  }));\n\n  return (\n    <div style={styles.container}>\n      <FormikForm onSubmit={saveHandler} ref={formRef}>\n        <div style={styles.groupContainer}>\n          <p style={styles.header}>General</p>\n          <FormikColorInput name=\"color\" />\n          <FormikNumberInput\n            name=\"strokeWidth\"\n            label=\"stroke width :\"\n            style={{\n              label: { fontSize: '11px', fontWeight: 'bold', color: '#232323' },\n              input: {\n                width: '60%',\n                textAlign: 'center',\n                borderRadius: '5px',\n              },\n            }}\n            min={1}\n            max={9}\n            pattern=\"[1-9]+\"\n          />\n        </div>\n\n        {nucleus?.map((nucleusLabel) => (\n          <div key={nucleusLabel} style={styles.groupContainer}>\n            <p style={styles.header}>\n              <MF mf={nucleusLabel} />\n            </p>\n            {formatFields.map((field) => (\n              <FormikColumnFormatField\n                key={field.id}\n                label={field.label}\n                checkControllerName={`${nucleusLabel}.${field.checkController}`}\n                formatControllerName={`${nucleusLabel}.${field.formatController}`}\n              />\n            ))}\n          </div>\n        ))}\n      </FormikForm>\n    </div>\n  );\n}\n\nconst MemoizedIntegralsPreferences = memo(IntegralsPreferencesInner);\n\n// TODO: remove this hacky use of ref.\nfunction IntegralsPreferences(props, ref) {\n  const preferences = usePreferences();\n  const nucleus = useNucleus();\n\n  return (\n    <MemoizedIntegralsPreferences\n      innerRef={ref}\n      {...{\n        nucleus,\n        preferences,\n      }}\n    />\n  );\n}\n\nexport default forwardRef(IntegralsPreferences);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { SvgNmrSum } from 'cheminfo-font';\nimport lodashGet from 'lodash/get';\nimport { useCallback, useMemo, useState, useRef, memo, Fragment } from 'react';\nimport { ImLink } from 'react-icons/im';\n\nimport { Datum1D, Info1D, Integrals } from '../../../data/types/data1d';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { usePreferences } from '../../context/PreferencesContext';\nimport ToggleButton from '../../elements/ToggleButton';\nimport ToolTip from '../../elements/ToolTip/ToolTip';\nimport { useModal } from '../../elements/popup/Modal';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport ChangeSumModal from '../../modal/changeSum/ChangeSumModal';\nimport {\n  DELETE_INTEGRAL,\n  CHANGE_INTEGRAL_SUM,\n  CHANGE_INTEGRALS_SUM_FLAG,\n} from '../../reducer/types/Types';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\nimport PreferencesHeader from '../header/PreferencesHeader';\n\nimport IntegralTable from './IntegralTable';\nimport IntegralsPreferences from './IntegralsPreferences';\n\nconst style = css`\n  .sum-button {\n    width: 22px;\n    height: 22px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .fix-integral-toggle-btn {\n    svg {\n      font-size: 12px !important;\n    }\n  }\n`;\n\nexport interface IntegralPanelInnerProps {\n  integrals: Integrals;\n  info: Info1D;\n  activeTab: string;\n  xDomain: Array<number>;\n  preferences: any;\n}\n\nfunction IntegralPanelInner({\n  integrals,\n  info,\n  activeTab,\n  xDomain,\n  preferences,\n}: IntegralPanelInnerProps) {\n  const [filterIsActive, setFilterIsActive] = useState(false);\n\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const [isFlipped, setFlipStatus] = useState(false);\n  const settingRef = useRef<any>();\n\n  const yesHandler = useCallback(() => {\n    dispatch({ type: DELETE_INTEGRAL, integralID: null });\n  }, [dispatch]);\n\n  const handleDeleteAll = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All records will be deleted, Are You sure?',\n      buttons: [{ text: 'Yes', handler: yesHandler }, { text: 'No' }],\n    });\n  }, [modal, yesHandler]);\n\n  const changeIntegralSumHandler = useCallback(\n    (value) => {\n      dispatch({ type: CHANGE_INTEGRAL_SUM, value });\n      modal.close();\n    },\n    [dispatch, modal],\n  );\n\n  const currentSum = useMemo(() => {\n    return lodashGet(integrals, 'options.sum', null);\n  }, [integrals]);\n\n  const showChangeIntegralSumModal = useCallback(() => {\n    modal.show(\n      <ChangeSumModal\n        onClose={() => modal.close()}\n        onSave={changeIntegralSumHandler}\n        header={\n          currentSum\n            ? `Set new Integrals Sum (Current: ${Number(currentSum).toFixed(\n                2,\n              )})`\n            : 'Set new Integrals Sum'\n        }\n        sumOptions={integrals?.options}\n      />,\n    );\n  }, [changeIntegralSumHandler, currentSum, integrals?.options, modal]);\n\n  const settingsPanelHandler = useCallback(() => {\n    setFlipStatus(!isFlipped);\n  }, [isFlipped]);\n\n  const saveSettingHandler = useCallback(() => {\n    settingRef.current.saveSetting();\n    setFlipStatus(false);\n  }, []);\n\n  const handleOnFilter = useCallback(() => {\n    setFilterIsActive(!filterIsActive);\n  }, [filterIsActive]);\n\n  const toggleConstantSumHandler = useCallback(\n    (flag) => {\n      dispatch({ type: CHANGE_INTEGRALS_SUM_FLAG, payload: flag });\n    },\n    [dispatch],\n  );\n\n  const filteredData = useMemo(() => {\n    function isInRange(from, to) {\n      const factor = 10000;\n      to = to * factor;\n      from = from * factor;\n      return (\n        (to >= xDomain[0] * factor && from <= xDomain[1] * factor) ||\n        (from <= xDomain[0] * factor && to >= xDomain[1] * factor)\n      );\n    }\n    if (info.dimension === 1 && integrals?.values) {\n      const _integrals = filterIsActive\n        ? integrals.values.filter((integral) =>\n            isInRange(integral.from, integral.to),\n          )\n        : integrals.values;\n\n      return _integrals.map((integral) => {\n        return {\n          ...integral,\n          isConstantlyHighlighted: isInRange(integral.from, integral.to),\n        };\n      });\n    }\n    return [];\n  }, [filterIsActive, info.dimension, integrals, xDomain]);\n\n  return (\n    <Fragment>\n      <div\n        css={[\n          tablePanelStyle,\n          style,\n          isFlipped &&\n            css`\n              th {\n                position: relative;\n              }\n            `,\n        ]}\n      >\n        {!isFlipped && (\n          <DefaultPanelHeader\n            counter={integrals?.values?.length}\n            onDelete={handleDeleteAll}\n            deleteToolTip=\"Delete All Integrals\"\n            onFilter={handleOnFilter}\n            filterToolTip={\n              filterIsActive\n                ? 'Show all integrals'\n                : 'Hide integrals out of view'\n            }\n            filterIsActive={filterIsActive}\n            counterFiltered={filteredData.length}\n            showSettingButton\n            onSettingClick={settingsPanelHandler}\n          >\n            <ToolTip\n              title={\n                currentSum\n                  ? `Change Integrals Sum (${Number(currentSum).toFixed(2)})`\n                  : 'Change Integrals Sum'\n              }\n              popupPlacement=\"right\"\n            >\n              <button\n                className=\"sum-button\"\n                type=\"button\"\n                onClick={showChangeIntegralSumModal}\n              >\n                <SvgNmrSum />\n              </button>\n            </ToolTip>\n            <ToggleButton\n              className=\"fix-integral-toggle-btn\"\n              popupTitle=\"fix integral values\"\n              popupPlacement=\"right\"\n              onClick={toggleConstantSumHandler}\n            >\n              <ImLink />\n            </ToggleButton>\n          </DefaultPanelHeader>\n        )}\n        {isFlipped && (\n          <PreferencesHeader\n            onSave={saveSettingHandler}\n            onClose={settingsPanelHandler}\n          />\n        )}\n        <div className=\"inner-container\">\n          {!isFlipped ? (\n            <IntegralTable\n              data={filteredData}\n              activeTab={activeTab}\n              preferences={preferences}\n            />\n          ) : (\n            <IntegralsPreferences ref={settingRef} />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nconst MemoizedIntegralPanel = memo(IntegralPanelInner);\n\nconst emptyData = { integrals: {}, info: {} };\n\nexport default function IntegralPanel() {\n  const { xDomain, activeTab } = useChartData();\n\n  const preferences = usePreferences();\n\n  const { integrals, info } = useSpectrum(emptyData) as Datum1D;\n\n  return (\n    <MemoizedIntegralPanel\n      {...{\n        integrals,\n        info,\n        preferences: preferences.current,\n        xDomain,\n        activeTab,\n      }}\n    />\n  );\n}\n","import React, { CSSProperties, ReactNode } from 'react';\n\ninterface LabelProps {\n  title: string;\n  children: ReactNode;\n  className?: string;\n  style?: {\n    label?: CSSProperties;\n    wrapper?: CSSProperties;\n  };\n}\n\nexport default function Label(props: LabelProps) {\n  const { title, className = '', children, style } = props;\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <span\n        className={className}\n        style={{\n          fontSize: '11px',\n          fontWeight: 'bold',\n          color: '#232323',\n          paddingRight: '10px',\n          width: 'max-content',\n          ...style?.label,\n        }}\n      >\n        {title}\n      </span>\n      <div style={style?.wrapper}>{children}</div>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\nimport Button from '../elements/Button';\nimport CloseButton from '../elements/CloseButton';\nimport Label from '../elements/Label';\nimport FormikForm from '../elements/formik/FormikForm';\nimport FormikInput from '../elements/formik/FormikInput';\nimport Events from '../utility/Events';\nimport { exportAsMatrix } from '../utility/Export';\n\nimport { ModalStyles } from './ModalStyle';\n\nconst INITIAL_VALUE = { from: -1, to: 1, nbPoints: 1024 };\n\ninterface ExportAsMatrixModalProps {\n  onClose?: (element?: string) => void;\n}\n\nfunction ExportAsMatrixModal({\n  onClose = () => null,\n}: ExportAsMatrixModalProps) {\n  const refForm = useRef<any>();\n  const { data } = useChartData();\n\n  const handleSave = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n\n  const submitHandler = useCallback(\n    (options) => {\n      exportAsMatrix(data, options, 'fileName');\n      onClose();\n    },\n    [data, onClose],\n  );\n\n  useEffect(() => {\n    function handler(event: any) {\n      const [from, to] = event.range;\n      refForm.current.setValues({ ...refForm.current.values, from, to });\n    }\n\n    Events.on('brushEnd', handler);\n\n    return () => {\n      Events.off('brushEnd', handler);\n    };\n  }, []);\n\n  return (\n    <div css={ModalStyles}>\n      <div className=\"header handle\">\n        <span>Export spectra as a Matrix</span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"inner-content\">\n        <FormikForm\n          ref={refForm}\n          initialValues={INITIAL_VALUE}\n          onSubmit={submitHandler}\n        >\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Range :</span>\n            <Label title=\"From : \">\n              <FormikInput name=\"from\" type=\"number\" />\n            </Label>\n            <Label title=\"To : \">\n              <FormikInput name=\"to\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\"row margin-10\">\n            <Label title=\"Number of Points :\" className=\"custom-label\">\n              <FormikInput name=\"nbPoints\" type=\"number\" />\n            </Label>\n          </div>\n        </FormikForm>\n      </div>\n      <div className=\"footer-container\">\n        <Button.Done onClick={handleSave}>Export Now</Button.Done>\n      </div>\n    </div>\n  );\n}\n\nexport default ExportAsMatrixModal;\n","import { FormikHelpers, FormikProps } from 'formik';\nimport { ForwardedRef, forwardRef } from 'react';\n\nimport { useChartData } from '../../context/ChartContext';\nimport Label from '../../elements/Label';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikInput from '../../elements/formik/FormikInput';\n\ninterface EquallySpacedFilterProps {\n  onSubmit: (values: any, helper: FormikHelpers<any>) => void;\n}\n\nfunction EquallySpacedFilter(\n  { onSubmit }: EquallySpacedFilterProps,\n  ref: ForwardedRef<FormikProps<any>>,\n) {\n  const { xDomain } = useChartData();\n  return (\n    <FormikForm\n      ref={ref}\n      initialValues={{\n        from: xDomain[0],\n        to: xDomain[1],\n        numberOfPoints: 1024,\n      }}\n      onSubmit={onSubmit}\n    >\n      <div className=\"row margin-10\">\n        <span className=\"custom-label\">Range :</span>\n        <Label title=\"From : \">\n          <FormikInput name=\"from\" type=\"number\" />\n        </Label>\n        <Label title=\"To : \">\n          <FormikInput name=\"to\" type=\"number\" />\n        </Label>\n      </div>\n      <div className=\"row margin-10\">\n        <Label className=\"custom-label\" title=\"Number of points : \">\n          <FormikInput name=\"numberOfPoints\" type=\"number\" />\n        </Label>\n      </div>\n    </FormikForm>\n  );\n}\n\nexport default forwardRef(EquallySpacedFilter);\n","import { FormikHelpers, FormikProps } from 'formik';\nimport { ForwardedRef, forwardRef } from 'react';\n\nimport { useChartData } from '../../context/ChartContext';\nimport Label from '../../elements/Label';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikInput from '../../elements/formik/FormikInput';\n\ninterface FromToFilterProps {\n  onSubmit: (values: any, helper: FormikHelpers<any>) => void;\n}\n\nfunction FromToFilter(\n  { onSubmit }: FromToFilterProps,\n  ref: ForwardedRef<FormikProps<any>>,\n) {\n  const { xDomain } = useChartData();\n  return (\n    <FormikForm\n      ref={ref}\n      initialValues={{ from: xDomain[0], to: xDomain[1] }}\n      onSubmit={onSubmit}\n    >\n      <div className=\"row margin-10\">\n        <span className=\"custom-label\">Range :</span>\n        <Label title=\"From :\">\n          <FormikInput name=\"from\" type=\"number\" />\n        </Label>\n        <Label title=\"To :\">\n          <FormikInput name=\"to\" type=\"number\" />\n        </Label>\n      </div>\n    </FormikForm>\n  );\n}\n\nexport default forwardRef(FromToFilter);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport * as Filters from '../../../data/Filters';\nimport { REFERENCES } from '../../../data/constants/References';\nimport { useDispatch } from '../../context/DispatchContext';\nimport ActionButtons from '../../elements/ActionButtons';\nimport CloseButton from '../../elements/CloseButton';\nimport Select from '../../elements/Select';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport { APPLY_MULTIPLE_SPECTRA_FILTER } from '../../reducer/types/Types';\nimport Events from '../../utility/Events';\nimport { ModalStyles } from '../ModalStyle';\n\nimport EquallySpacedFilter from './EquallySpacedFilter';\nimport FromToFilter from './FromToFilter';\n\nconst baseList: Array<{\n  key: string | number;\n  value: number | string;\n  label: string;\n}> = [\n  { key: 0, value: 0, label: 'Select Filter' },\n  {\n    key: Filters.fromTo.id,\n    value: Filters.fromTo.id,\n    label: Filters.fromTo.name,\n  },\n  {\n    key: Filters.equallySpaced.id,\n    value: Filters.equallySpaced.id,\n    label: Filters.equallySpaced.name,\n  },\n  {\n    key: Filters.standardDeviation.id,\n    value: Filters.standardDeviation.id,\n    label: Filters.standardDeviation.name,\n  },\n  {\n    key: Filters.centerMean.id,\n    value: Filters.centerMean.id,\n    label: Filters.centerMean.name,\n  },\n  {\n    key: Filters.pareto.id,\n    value: Filters.pareto.id,\n    label: Filters.pareto.name,\n  },\n];\n\nconst styles = css`\n  .row {\n    align-items: center;\n  }\n\n  .container {\n    flex: 1;\n  }\n\n  .infoText {\n    padding: 10px;\n    font-size: 12px;\n    text-align: left;\n    color: white;\n    background-color: #5f5f5f;\n    border-radius: 5px;\n  }\n`;\n\ninterface MultipleSpectraFiltersModalProps {\n  onClose?: () => void;\n  nucleus?: string;\n}\n\nfunction MultipleSpectraFiltersModal({\n  onClose = () => null,\n  nucleus = '',\n}: MultipleSpectraFiltersModalProps) {\n  const refForm = useRef<any>();\n\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState('');\n\n  const List = useMemo(() => {\n    const list = REFERENCES[nucleus]\n      ? Object.entries(REFERENCES[nucleus]).map(\n          (item) => ({\n            key: item[0],\n            value: item[0],\n            label: item[0],\n          }),\n          [],\n        )\n      : [];\n\n    return baseList.concat(list as any);\n  }, [nucleus]);\n\n  const handleSave = useCallback((e) => {\n    e.preventDefault();\n    if (refForm.current) {\n      refForm.current.submitForm();\n    }\n  }, []);\n\n  const submitHandler = useCallback(\n    (options) => {\n      if (options) {\n        dispatch({\n          type: APPLY_MULTIPLE_SPECTRA_FILTER,\n          payload: [{ name: filter, options }],\n        });\n\n        onClose();\n      }\n    },\n    [dispatch, filter, onClose],\n  );\n\n  useEffect(() => {\n    function handle(event: any) {\n      const [from, to] = event.range;\n      if (refForm.current) {\n        refForm.current.setValues({ ...refForm.current.values, from, to });\n      }\n    }\n\n    Events.on('brushEnd', handle);\n\n    return () => {\n      Events.off('brushEnd', handle);\n    };\n  }, []);\n\n  const filterChangeHandler = useCallback((id) => {\n    setFilter(id);\n  }, []);\n\n  const filterOptions = useMemo(() => {\n    switch (filter) {\n      case Filters.fromTo.id:\n        return <FromToFilter onSubmit={submitHandler} ref={refForm} />;\n      case Filters.equallySpaced.id:\n        return <EquallySpacedFilter onSubmit={submitHandler} ref={refForm} />;\n      default:\n        <FormikForm\n          ref={refForm}\n          initialValues={null}\n          onSubmit={submitHandler}\n        />;\n        break;\n    }\n  }, [filter, submitHandler]);\n\n  return (\n    <div css={[ModalStyles, styles]}>\n      <div className=\"header handle\">\n        <span>Apply filters</span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"inner-content container\">\n        <p className=\"infoText\">\n          This filter will use the exclusions zones defined in the first\n          spectrum.\n        </p>\n        <div className=\"row margin-10\">\n          <span className=\"custom-label\">Filter :</span>\n\n          <Select\n            data={List}\n            style={{ width: 275, height: 30, margin: 0 }}\n            onChange={filterChangeHandler}\n          />\n        </div>\n        {filterOptions}\n      </div>\n      <div className=\"footer-container\">\n        <ActionButtons\n          style={{ flexDirection: 'row-reverse', margin: 0 }}\n          onDone={handleSave}\n          doneLabel=\"Save\"\n          onCancel={onClose}\n          cancelLabel=\"Close\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MultipleSpectraFiltersModal;\n","/** @jsxImportSource @emotion/react */\nimport { SvgNmrAddFilter, SvgNmrExportAsMatrix } from 'cheminfo-font';\nimport { useCallback } from 'react';\n\nimport { useDispatch } from '../../context/DispatchContext';\nimport Button from '../../elements/ButtonToolTip';\nimport { positions, useModal } from '../../elements/popup/Modal';\nimport ExportAsMatrixModal from '../../modal/ExportAsMatrixModal';\nimport MultipleSpectraFiltersModal from '../../modal/MultipleSpectraFiltersModal';\nimport { RESET_SELECTED_TOOL } from '../../reducer/types/Types';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\n\nfunction MatrixGenerationPanel() {\n  const modal = useModal();\n  const dispatch = useDispatch();\n\n  const openFiltersModal = useCallback(() => {\n    dispatch({ type: RESET_SELECTED_TOOL });\n    modal.show(<MultipleSpectraFiltersModal />, {\n      isBackgroundBlur: false,\n      position: positions.TOP_CENTER,\n      width: 550,\n      height: 250,\n    });\n  }, [modal, dispatch]);\n\n  const openExportAsMatrixModal = useCallback(() => {\n    dispatch({ type: RESET_SELECTED_TOOL });\n    modal.show(<ExportAsMatrixModal />, {\n      isBackgroundBlur: false,\n      position: positions.TOP_CENTER,\n      width: 500,\n    });\n  }, [modal, dispatch]);\n\n  return (\n    <div css={tablePanelStyle}>\n      {\n        <DefaultPanelHeader\n          deleteToolTip=\"Delete All Peaks\"\n          showSettingButton\n          canDelete={false}\n        >\n          <Button popupTitle=\"Add Filter\" onClick={openFiltersModal}>\n            <SvgNmrAddFilter style={{ fontSize: '18px' }} />\n          </Button>\n          <Button\n            popupTitle=\"Export spectra as a Matrix\"\n            onClick={openExportAsMatrixModal}\n          >\n            <SvgNmrExportAsMatrix />\n          </Button>\n        </DefaultPanelHeader>\n      }\n\n      <div className=\"inner-container\" />\n    </div>\n  );\n}\n\nexport default MatrixGenerationPanel;\n","/** @jsxImportSource @emotion/react */\nimport { useState, useEffect, useCallback } from 'react';\nimport { StructureEditor } from 'react-ocl/full';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport ActionButtons from '../elements/ActionButtons';\nimport { SET_MOLECULE, ADD_MOLECULE } from '../reducer/types/Types';\n\nimport { ModalStyles } from './ModalStyle';\n\ninterface MoleculeStructureEditorModalProps {\n  onClose?: (element?: string) => void;\n  selectedMolecule?: {\n    key: any;\n    molfile: string;\n  };\n}\n\nfunction MoleculeStructureEditorModal(\n  props: MoleculeStructureEditorModalProps,\n) {\n  const { onClose = () => null, selectedMolecule } = props;\n\n  const [molfile, setMolfile] = useState<string | null>(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (selectedMolecule) {\n      setMolfile(selectedMolecule.molfile);\n    } else {\n      setMolfile(null);\n    }\n  }, [selectedMolecule]);\n\n  const cb = useCallback(\n    (newMolfile) => {\n      const molText =\n        /(?<s>M {2}V30 BEGIN BOND)(?<mol>.*?)(?<e>M {2}V30 END BOND)/gs.exec(\n          newMolfile,\n        )?.groups?.mol;\n\n      setMolfile(molText?.trim() ? newMolfile : null);\n    },\n    [setMolfile],\n  );\n\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  const handleSave = useCallback(() => {\n    if (selectedMolecule) {\n      dispatch({ type: SET_MOLECULE, molfile, key: selectedMolecule.key });\n      onClose('replace');\n    } else {\n      dispatch({ type: ADD_MOLECULE, molfile });\n      onClose('new');\n    }\n  }, [dispatch, selectedMolecule, molfile, onClose]);\n\n  return (\n    <div css={ModalStyles}>\n      <StructureEditor\n        initialMolfile={selectedMolecule?.molfile}\n        svgMenu\n        fragment={false}\n        onChange={cb}\n      />\n      <div className=\"footer-container\">\n        <ActionButtons\n          style={{ flexDirection: 'row-reverse', margin: 0 }}\n          onDone={handleSave}\n          doneLabel=\"Save\"\n          onCancel={handleClose}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MoleculeStructureEditorModal;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { ReactNode, useState, useCallback, useRef } from 'react';\n\nimport ToolTip from './ToolTip/ToolTip';\n\nconst menuStyles = css`\n  .menu {\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n    padding: 0px;\n    margin: 0px;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    z-index: 99999;\n    padding: 2px;\n    background-color: white;\n\n    button:hover {\n      background-color: #fafafa;\n    }\n  }\n\n  .menu-cover {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n\n  .menu-item {\n    background-color: transparent;\n    border: none;\n    border-bottom: 0.55px solid whitesmoke;\n    height: 35px;\n    outline: outline;\n    display: table-cell;\n    vertical-align: middle;\n    text-align: left;\n    padding: 0 10px;\n\n    svg {\n      display: inline-block;\n    }\n\n    :focus {\n      outline: none !important;\n    }\n    span {\n      font-size: 10px;\n      padding: 0px 10px;\n    }\n  }\n`;\n\ninterface MenuItemProps {\n  icon: ReactNode;\n  label: string;\n  onClick: () => void;\n}\n\nfunction MenuItem({ icon, label, onClick }: MenuItemProps) {\n  return (\n    <button type=\"button\" className=\"menu-item\" onClick={onClick}>\n      {icon}\n      <span>{label}</span>\n    </button>\n  );\n}\n\ninterface MenuListProps {\n  items: Array<MenuItemProps & { id: string }>;\n  onClick: (element: MenuItemProps & { id: string }) => void;\n  boxBounding: any;\n}\n\nfunction MenuList({ items, boxBounding, onClick }: MenuListProps) {\n  return (\n    <div\n      className=\"menu\"\n      style={{\n        transform: `translate(${boxBounding.width}px, -${boxBounding.height}px) `,\n      }}\n    >\n      {items?.map((item) => {\n        return (\n          <MenuItem key={item.id} {...item} onClick={() => onClick(item)} />\n        );\n      })}\n    </div>\n  );\n}\n\ninterface MenuButtonProps {\n  style?: any;\n  component: any;\n  toolTip: string;\n  className?: string;\n  items: Array<any>;\n  onClick: (element: any) => void;\n}\n\nexport default function MenuButton({\n  style,\n  component,\n  toolTip = '',\n  className,\n  items = [],\n  onClick = () => null,\n}: MenuButtonProps) {\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const [isShown, showMenu] = useState(false);\n\n  const closeMenuButton = useCallback(() => {\n    showMenu(false);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    showMenu((flag) => !flag);\n  }, []);\n  const clickHandler = useCallback(\n    (e) => {\n      showMenu(false);\n      onClick(e);\n    },\n    [onClick],\n  );\n\n  return (\n    <div style={{ height: 'auto' }} css={menuStyles}>\n      <button\n        ref={menuButtonRef}\n        type=\"button\"\n        css={style}\n        onClick={handleClick}\n        className={className}\n        style={{ boxSizing: 'border-box' }}\n      >\n        <ToolTip title={toolTip} popupPlacement=\"right\">\n          {component}\n        </ToolTip>\n      </button>\n      {isShown && (\n        <MenuList\n          items={items}\n          boxBounding={menuButtonRef.current?.getBoundingClientRect()}\n          onClick={clickHandler}\n        />\n      )}\n\n      {isShown && <div className=\"menu-cover\" onClick={closeMenuButton} />}\n    </div>\n  );\n}\n","export default function generateNumbersPowerOfX(\n  start: number,\n  end: number,\n  options?: { power?: number; format?: (input: number) => string | number },\n) {\n  const { power = 2, format = formatNumber } = options || {};\n  let values: Array<{ key: number; label: string | number; value: number }> =\n    [];\n  for (let i = start; i <= end; i++) {\n    const result = power ** i;\n    values.push({\n      key: result,\n      label: format(result),\n      value: result,\n    });\n  }\n  return values;\n}\n\nfunction formatNumber(number: number): string | number {\n  if (number >= 1024 * 1024) {\n    return `${number / (1024 * 1024)}M`;\n  } else if (number >= 1024) {\n    return `${number / 1024}K`;\n  } else {\n    return number;\n  }\n}\n","import { HTMLAttributes } from 'react';\n\ninterface IsotopesViewerProps extends HTMLAttributes<HTMLDivElement> {\n  value?: string;\n}\n\nfunction IsotopesViewer({ value = '', ...othersProps }: IsotopesViewerProps) {\n  return (\n    <div\n      {...othersProps}\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{\n        __html: value.replace(/(?<isotope>[0-9]+)/g, '<sup>$<isotope></sup>'),\n      }}\n    />\n  );\n}\n\nexport default IsotopesViewer;\n","import { useFormikContext } from 'formik';\nimport { CSSProperties, useMemo } from 'react';\n\nconst styles: Record<'container' | 'text', CSSProperties> = {\n  container: {\n    backgroundColor: '#fd000c',\n    borderRadius: '5px',\n    padding: '0.4rem',\n  },\n  text: {\n    color: 'white',\n    margin: '0.5px',\n    fontSize: '0.9em',\n    listStyle: 'inside',\n  },\n};\n\nexport interface FormikErrorsSummaryProps {\n  style?: Record<'container' | 'text', CSSProperties>;\n}\n\nconst getErrors = (errorObj: Record<string, any>): string[] => {\n  const result: string[] = [];\n  function errorsIterators(obj) {\n    Object.keys(obj).forEach((key) => {\n      if (typeof obj[key] === 'object') {\n        errorsIterators(obj[key]);\n      } else {\n        result.push(obj[key]);\n      }\n    });\n  }\n\n  errorsIterators(errorObj);\n  return result;\n};\n\nfunction FormikErrorsSummary({ style }: FormikErrorsSummaryProps) {\n  const { errors, isValid } = useFormikContext();\n\n  const errorList = useMemo(() => {\n    return getErrors(errors);\n  }, [errors]);\n\n  if (isValid) return <div />;\n\n  return (\n    <ul style={{ ...styles.container, ...style?.container }}>\n      {errorList.map((errorText, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <li key={index} style={{ ...styles.text, ...style?.text }}>\n            {errorText}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default FormikErrorsSummary;\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, useEffect } from 'react';\n\nimport Select, { SelectProps } from '../Select';\n\nconst FormikSelect = function FormikSelect(\n  props: SelectProps & { value?: string },\n) {\n  const { name = '', value, onChange = () => null, ...resProps } = props;\n\n  const { values, setFieldValue } = useFormikContext();\n  const changeHandler = useCallback(\n    (value) => {\n      onChange(value);\n      setFieldValue(name, value);\n    },\n    [name, onChange, setFieldValue],\n  );\n\n  useEffect(() => {\n    if (value) {\n      setFieldValue(name, value);\n    }\n  }, [name, setFieldValue, value]);\n\n  return (\n    <Select\n      name={name}\n      defaultValue={value ? value : lodashGet(values, name)}\n      onChange={changeHandler}\n      {...resProps}\n    />\n  );\n};\n\nexport default FormikSelect;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useRef, useState, useMemo } from 'react';\nimport * as Yup from 'yup';\n\nimport {\n  defaultPredictionOptions,\n  FREQUENCIES,\n} from '../../data/PredictionManager';\nimport generateNumbersPowerOfX from '../../data/utilities/generateNumbersPowerOfX';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport Button from '../elements/Button';\nimport CheckBox from '../elements/CheckBox';\nimport CloseButton from '../elements/CloseButton';\nimport IsotopesViewer from '../elements/IsotopesViewer';\nimport Label from '../elements/Label';\nimport FormikCheckBox from '../elements/formik/FormikCheckBox';\nimport FormikErrorsSummary from '../elements/formik/FormikErrorsSummary';\nimport FormikForm from '../elements/formik/FormikForm';\nimport FormikInput from '../elements/formik/FormikInput';\nimport FormikSelect from '../elements/formik/FormikSelect';\nimport { useAlert } from '../elements/popup/Alert';\nimport { PREDICT_SPECTRA, SET_LOADING_FLAG } from '../reducer/types/Types';\nimport { useStateWithLocalStorage } from '../utility/LocalStorage';\n\nimport { ModalStyles } from './ModalStyle';\n\nconst styles = css`\n  .row {\n    align-items: center;\n  }\n\n  .inner-content {\n    flex: 1;\n  }\n\n  .custom-label {\n    width: 160px;\n    font-weight: 500;\n  }\n\n  .nucleus-label {\n    padding: 0 10px;\n    color: black;\n    font-weight: 700;\n\n    &.disabled {\n      opacity: 0.5;\n      color: black;\n    }\n  }\n  .warning {\n    color: #c40000;\n    font-weight: bold;\n    font-size: 13px;\n    text-align: justify;\n    margin-top: 30px;\n  }\n\n  .warning-container {\n    margin-top: 5px;\n    display: flex;\n    input {\n      margin: 5px 5px 5px 0;\n    }\n  }\n\n  .middle-x {\n    padding: 0 10px;\n  }\n\n  .group-label {\n    width: 100%;\n    display: block;\n    border-bottom: 1px solid #efefef;\n    padding-bottom: 5px;\n    font-weight: 600;\n    color: #005d9e;\n  }\n`;\n\nconst NUMBER_OF_POINTS_1D = generateNumbersPowerOfX(12, 19);\nconst NUMBER_OF_POINTS_2D = generateNumbersPowerOfX(10, 10, {\n  format: (value) => value,\n});\n\nconst predictionFormValidation = Yup.object().shape({\n  name: Yup.string().required().label('Name'),\n  frequency: Yup.number().integer().required().label('Frequency'),\n  '1d': Yup.object({\n    '1H': Yup.object({\n      from: Yup.number().integer().required().label(\"1H ' From ' \"),\n      to: Yup.number().integer().required().label(\"1H ' To ' \"),\n    }),\n    '13C': Yup.object().shape({\n      from: Yup.number().integer().required().label(\"13C ' From ' \"),\n      to: Yup.number().integer().required().label(\"13C ' To ' \"),\n    }),\n    lineWidth: Yup.number().integer().min(1).required().label('Line Width'),\n    nbPoints: Yup.number().integer().required().label('1D Number Of Points'),\n  }),\n  '2d': Yup.object({\n    nbPoints: Yup.object({\n      x: Yup.number().integer().required().label('2D Number Of Points'),\n      y: Yup.number().integer().required().label('2D Number Of Points'),\n    }),\n  }),\n  spectra: Yup.object({\n    proton: Yup.boolean(),\n    carbon: Yup.boolean(),\n    cosy: Yup.boolean(),\n    hsqc: Yup.boolean(),\n    hmbc: Yup.boolean(),\n  }).test(\n    'check-options',\n    'You must check one of the options to start prediction',\n    (obj) => {\n      if (Object.values(obj).includes(true)) {\n        return true;\n      }\n      return false;\n    },\n  ),\n});\n\ninterface PredictSpectraModalProps {\n  onClose?: (element?: string) => void;\n  molfile: any;\n}\n\nfunction PredictSpectraModal({\n  onClose = () => null,\n  molfile,\n}: PredictSpectraModalProps) {\n  const refForm = useRef<any>();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const [isApproved, setApproved] = useState(false);\n  const [predictionPreferences, setPredictionPreferences] =\n    useStateWithLocalStorage('nmrium-prediction-preferences');\n\n  const {\n    toolOptions: {\n      data: { predictionIndex },\n    },\n  } = useChartData();\n\n  const handleSave = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n\n  const initValues = useMemo(() => {\n    const { isApproved: isAgree, ...options } = predictionPreferences;\n    setApproved(isAgree);\n    return Object.assign(defaultPredictionOptions, options, {\n      name: `Prediction ${predictionIndex + 1}`,\n    });\n  }, [predictionPreferences, predictionIndex]);\n\n  const submitHandler = useCallback(\n    (values) => {\n      void (async () => {\n        setPredictionPreferences({ ...values, isApproved });\n        dispatch({\n          type: SET_LOADING_FLAG,\n          isLoading: true,\n        });\n\n        const predictedSpectra = Object.entries(values.spectra)\n          .reduce<Array<string>>((acc, [key, value]) => {\n            if (value) {\n              acc.push(key);\n            }\n            return acc;\n          }, [])\n          .join(' , ');\n\n        const hideLoading = await alert.showLoading(\n          `Predict ${predictedSpectra} in progress`,\n        );\n\n        dispatch({\n          type: PREDICT_SPECTRA,\n          payload: { mol: molfile, options: values },\n        });\n\n        hideLoading();\n        onClose();\n      })();\n    },\n    [alert, dispatch, isApproved, molfile, onClose, setPredictionPreferences],\n  );\n\n  const approveCheckHandler = useCallback((e) => {\n    setApproved(e.target.checked);\n  }, []);\n\n  return (\n    <div css={[ModalStyles, styles]}>\n      <div className=\"header handle\">\n        <span>Prediction of NMR spectrum</span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"inner-content\">\n        <FormikForm\n          ref={refForm}\n          initialValues={initValues}\n          validationSchema={predictionFormValidation}\n          onSubmit={submitHandler}\n        >\n          <FormikErrorsSummary />\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Name :</span>\n            <FormikInput\n              name=\"name\"\n              style={{ input: { width: '200px', textAlign: 'left' } }}\n            />\n          </div>\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Spectrometer Frequency :</span>\n\n            <FormikSelect\n              data={FREQUENCIES}\n              style={{ width: 290, height: 30, margin: 0 }}\n              name=\"frequency\"\n            />\n          </div>\n\n          <span className=\"group-label\">1D Options </span>\n\n          <div className=\"row margin-10 padding-h-10\">\n            <IsotopesViewer value=\"1H\" className=\"custom-label\" />\n            <Label title=\"From\">\n              <FormikInput name=\"1d.1H.from\" type=\"number\" />\n            </Label>\n            <Label title=\"To\" style={{ label: { padding: '0 10px' } }}>\n              <FormikInput name=\"1d.1H.to\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\"row margin-10 padding-h-10\">\n            <IsotopesViewer value=\"13C\" className=\"custom-label\" />\n            <Label title=\"From\">\n              <FormikInput name=\"1d.13C.from\" type=\"number\" />\n            </Label>\n            <Label title=\"To\" style={{ label: { padding: '0 10px' } }}>\n              <FormikInput name=\"1d.13C.to\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\"row margin-10 padding-h-10\">\n            <span className=\"custom-label\">Line Width : </span>\n            <FormikInput\n              name=\"1d.lineWidth\"\n              type=\"number\"\n              style={{ input: { margin: 0 } }}\n            />\n            <span style={{ paddingLeft: '0.4rem' }}> Hz </span>\n          </div>\n          <div className=\"row margin-10 padding-h-10\">\n            <span className=\"custom-label\">Number of Points : </span>\n            <FormikSelect\n              data={NUMBER_OF_POINTS_1D}\n              name=\"1d.nbPoints\"\n              style={{ width: 290, height: 30, margin: 0 }}\n            />\n          </div>\n          <span className=\"group-label\">2D Options </span>\n\n          <div className=\"row margin-10 padding-h-10\">\n            <span className=\"custom-label\">Number of Points : </span>\n            <FormikSelect\n              data={NUMBER_OF_POINTS_2D}\n              name=\"2d.nbPoints.x\"\n              style={{ margin: 0, height: 30 }}\n            />\n            <span className=\"middle-x\"> X </span>\n            <FormikSelect\n              data={NUMBER_OF_POINTS_2D}\n              name=\"2d.nbPoints.y\"\n              style={{ margin: 0, height: 30 }}\n            />\n          </div>\n          <div className=\"row margin-10\">\n            <span className=\"group-label\">Spectra </span>\n          </div>\n          <div\n            className=\"row margin-10 padding-h-10\"\n            style={{ justifyContent: 'space-between' }}\n          >\n            <div className=\"row\">\n              <FormikCheckBox name=\"spectra.proton\" />\n              <IsotopesViewer value=\"1H\" className=\"nucleus-label\" />\n            </div>\n            <div className=\"row\">\n              <FormikCheckBox name=\"spectra.carbon\" />\n              <IsotopesViewer value=\"13C\" className=\"nucleus-label\" />\n            </div>\n            <div className=\"row\">\n              <FormikCheckBox name=\"spectra.cosy\" />\n              <IsotopesViewer value=\"COSY\" className=\"nucleus-label\" />\n            </div>\n            <div className=\"row\">\n              <FormikCheckBox name=\"spectra.hsqc\" />\n              <IsotopesViewer value=\"HSQC\" className=\"nucleus-label\" />\n            </div>\n            <div className=\"row\">\n              <FormikCheckBox name=\"spectra.hmbc\" />\n              <IsotopesViewer value=\"HMBC\" className=\"nucleus-label\" />\n            </div>\n          </div>\n        </FormikForm>\n        <p className=\"warning\">\n          In order to predict spectra we are calling an external service and the\n          chemical structure will leave your browser! You should never predict\n          spectra for confidential molecules.\n        </p>\n        <div className=\"warning-container\">\n          <CheckBox\n            onChange={approveCheckHandler}\n            checked={isApproved}\n            key={String(isApproved)}\n          />\n          <p>I confirm that the chemical structure is not confidential.</p>\n        </div>\n      </div>\n      <div className=\"footer-container\">\n        <Button.Done onClick={handleSave} disabled={!isApproved}>\n          Predict spectrum\n        </Button.Done>\n      </div>\n    </div>\n  );\n}\n\nexport default PredictSpectraModal;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { SvgNmrFt } from 'cheminfo-font';\nimport { useCallback } from 'react';\nimport {\n  FaCopy,\n  FaDownload,\n  FaFileExport,\n  FaFileImage,\n  FaPaste,\n  FaPlus,\n  FaRegTrashAlt,\n} from 'react-icons/fa';\n\nimport { useAssignmentData } from '../../assignment/AssignmentsContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { useGlobal } from '../../context/GlobalContext';\nimport ButtonToolTip from '../../elements/ButtonToolTip';\nimport MenuButton from '../../elements/MenuButton';\nimport ToolTip from '../../elements/ToolTip/ToolTip';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { positions, useModal } from '../../elements/popup/Modal';\nimport PredictSpectraModal from '../../modal/PredictSpectraModal';\nimport { ADD_MOLECULE, DELETE_MOLECULE } from '../../reducer/types/Types';\nimport {\n  copyPNGToClipboard,\n  copyTextToClipboard,\n  exportAsSVG,\n} from '../../utility/Export';\n\nconst toolbarStyle = css`\n  display: flex;\n  flex-direction: row;\n  border-bottom: 0.55px solid rgb(240, 240, 240);\n  padding: 0px 5px;\n\n  button svg {\n    fill: #4e4e4e;\n  }\n\n  button {\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n  }\n\n  p {\n    margin: 0;\n    text-align: right;\n    width: 100%;\n    line-height: 22px;\n    padding: 0px 10px;\n  }\n`;\n\nconst MOL_EXPORT_MENU = [\n  {\n    id: 'molfile',\n    icon: <FaCopy />,\n    label: 'Copy as molfile',\n  },\n  {\n    id: 'png',\n    icon: <FaFileImage />,\n    label: 'Copy as PNG',\n  },\n  {\n    id: 'svg',\n    icon: <FaDownload />,\n    label: 'Export as SVG',\n  },\n];\n\nexport interface MoleculeHeaderActionsOptions {\n  hidePast?: boolean;\n  hideAdd?: boolean;\n  hideExport?: boolean;\n  hideDelete?: boolean;\n  hidePredict?: boolean;\n}\ninterface MoleculePanelHeaderProps {\n  currentIndex: number;\n  molecules: Array<any>;\n  onMoleculeIndexChange: (index: number) => void;\n  onOpenMoleculeEditor: () => void;\n  actionsOptions?: MoleculeHeaderActionsOptions;\n}\n\nexport default function MoleculePanelHeader({\n  currentIndex,\n  molecules,\n  onMoleculeIndexChange = () => null,\n  onOpenMoleculeEditor = () => null,\n  actionsOptions = {},\n}: MoleculePanelHeaderProps) {\n  const { rootRef } = useGlobal();\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const assignmentData = useAssignmentData();\n\n  const saveAsSVGHandler = useCallback(() => {\n    if (!rootRef) return;\n    exportAsSVG(rootRef, `molSVG${currentIndex}`, 'molFile');\n  }, [rootRef, currentIndex]);\n\n  const saveAsPNGHandler = useCallback(() => {\n    if (!rootRef) return;\n    copyPNGToClipboard(rootRef, `molSVG${currentIndex}`);\n    alert.success('MOL copied as PNG to clipboard');\n  }, [rootRef, alert, currentIndex]);\n\n  const saveAsMolHandler = useCallback(() => {\n    if (molecules[currentIndex]) {\n      void copyTextToClipboard(molecules[currentIndex].molfile).then((flag) => {\n        if (flag) {\n          alert.success('MOLFile copied to clipboard');\n        } else {\n          alert.error('copied not completed');\n        }\n      });\n    }\n  }, [alert, currentIndex, molecules]);\n\n  const exportHandler = useCallback(\n    ({ id }) => {\n      switch (id) {\n        case 'molfile':\n          saveAsMolHandler();\n          break;\n        case 'png':\n          saveAsPNGHandler();\n          break;\n        case 'svg':\n          saveAsSVGHandler();\n          break;\n        default:\n          break;\n      }\n    },\n    [saveAsMolHandler, saveAsPNGHandler, saveAsSVGHandler],\n  );\n\n  const handlePaste = useCallback(() => {\n    void navigator.clipboard.readText().then((molfile) => {\n      dispatch({ type: ADD_MOLECULE, molfile });\n    });\n  }, [dispatch]);\n\n  const handleDelete = useCallback(() => {\n    if (molecules[currentIndex]?.key) {\n      onMoleculeIndexChange(0);\n      dispatch({\n        type: DELETE_MOLECULE,\n        payload: { key: molecules[currentIndex].key, assignmentData },\n      });\n    }\n  }, [\n    molecules,\n    currentIndex,\n    onMoleculeIndexChange,\n    dispatch,\n    assignmentData,\n  ]);\n\n  const openPredictSpectraModal = useCallback(() => {\n    modal.show(<PredictSpectraModal molfile={molecules[currentIndex]} />, {\n      position: positions.TOP_CENTER,\n      enableResizing: true,\n      width: 600,\n    });\n  }, [modal, molecules, currentIndex]);\n\n  return (\n    <div css={toolbarStyle}>\n      {!actionsOptions.hideExport && (\n        <MenuButton\n          component={<FaFileExport />}\n          toolTip=\"Export As\"\n          items={MOL_EXPORT_MENU}\n          onClick={exportHandler}\n        />\n      )}\n\n      {!actionsOptions.hidePast && (\n        <ToolTip title=\"Paste molfile\" popupPlacement=\"left\">\n          <button className=\"bar-button\" type=\"button\" onClick={handlePaste}>\n            <FaPaste />\n          </button>\n        </ToolTip>\n      )}\n      {!actionsOptions.hideAdd && (\n        <ToolTip title=\"Add Molecule\" popupPlacement=\"left\">\n          <button\n            className=\"bar-button\"\n            type=\"button\"\n            onClick={onOpenMoleculeEditor}\n            data-test-id=\"panel-structures-button-add\"\n          >\n            <FaPlus />\n          </button>\n        </ToolTip>\n      )}\n      {!actionsOptions.hideDelete && (\n        <ToolTip title=\"Delete Molecule\" popupPlacement=\"left\">\n          <button className=\"bar-button\" type=\"button\" onClick={handleDelete}>\n            <FaRegTrashAlt />\n          </button>\n        </ToolTip>\n      )}\n      {!actionsOptions.hidePredict && molecules && molecules.length > 0 && (\n        <ButtonToolTip\n          popupTitle=\"Predict Spectra\"\n          popupPlacement=\"left\"\n          onClick={openPredictSpectraModal}\n        >\n          <SvgNmrFt />\n        </ButtonToolTip>\n      )}\n      <p>\n        {molecules &&\n          molecules.length > 0 &&\n          `${+(currentIndex + 1)} / ${molecules.length}`}{' '}\n      </p>\n    </div>\n  );\n}\n","import { Range } from '../../../data/types/data1d';\nimport { Zone } from '../../../data/types/data2d';\nimport { AssignmentContext, Axis } from '../../assignment/AssignmentsContext';\n\ninterface Atom {\n  oclID: string;\n  atomLabel: string;\n  nbAtoms: number;\n  nbHydrogens: number;\n  hydrogenOCLIDs: string[];\n}\nexport interface AtomData {\n  oclIDs: string[];\n  nbAtoms: number;\n}\n\nfunction getElements(activeTab: string) {\n  const nuclei = activeTab.split(',');\n  return nuclei.map((nucleus) => nucleus.replace(/[0-9]/g, ''));\n}\n\nexport function extractFromAtom(\n  atom: Atom,\n  activeTab: string,\n  axis?: Axis | null,\n): AtomData {\n  const elements = getElements(activeTab);\n\n  if (elements.length > 0 && Object.keys(atom).length > 0) {\n    const dim = axis === 'x' ? 0 : axis === 'y' ? 1 : null;\n    switch (dim !== null && elements[dim]) {\n      case atom.atomLabel: {\n        // take always oclID if atom type is same as element of activeTab)\n        return { oclIDs: [atom.oclID], nbAtoms: atom.nbAtoms };\n      }\n      case 'H': {\n        // if we are in proton spectrum and use then the IDs of attached hydrogens of an atom\n        return {\n          oclIDs: atom.hydrogenOCLIDs,\n          nbAtoms: atom.nbAtoms * atom.nbHydrogens,\n        };\n      }\n      default:\n        return {\n          oclIDs: [atom.oclID].concat(atom.hydrogenOCLIDs),\n          nbAtoms: atom.nbAtoms + atom.nbAtoms * atom.nbHydrogens,\n        };\n    }\n  }\n\n  return { oclIDs: [], nbAtoms: 0 };\n}\n\nexport function findDatumAndSignalIndex(data: (Range | Zone)[], id: string) {\n  // if datum could be found then the id is on range/zone level\n  let datum = data.find((_datum) => _datum.id === id);\n  let signalIndex;\n  if (!datum) {\n    // figure out the datum via id\n    for (const record of data) {\n      signalIndex = record.signals.findIndex((signal) => signal.id === id);\n      if (signalIndex >= 0) {\n        datum = record;\n        break;\n      }\n    }\n  }\n\n  return { datum, signalIndex };\n}\n\nexport function getHighlightsOnHover(\n  assignments: AssignmentContext,\n  oclIDs,\n  data,\n) {\n  // set all IDs to highlight when hovering over an atom from assignment data\n  let highlights: string[] = [];\n  const assignmentsByKey = assignments.data.assignments;\n\n  for (const key in assignmentsByKey) {\n    const assignments = assignmentsByKey[key];\n\n    for (const axis in assignments) {\n      if (assignments[axis]?.some((oclKey) => oclIDs.includes(oclKey))) {\n        highlights = highlights.concat(assignments[axis]);\n        const { datum, signalIndex } = findDatumAndSignalIndex(data, key);\n\n        if (datum) {\n          highlights.push(datum.id);\n          if (signalIndex !== undefined) {\n            highlights.push(datum.signals[signalIndex].id);\n          }\n        }\n      }\n    }\n  }\n\n  return highlights;\n}\n\nexport function getCurrentDiaIDsToHighlight(assignmentData: AssignmentContext) {\n  const { highlighted, assignments } = assignmentData.data;\n  const assignment = highlighted ? assignments[highlighted.id] : null;\n  const axisHover = highlighted ? highlighted.axis : null;\n\n  if (axisHover && assignment && assignment[axisHover]) {\n    return assignment[axisHover];\n  } else {\n    return (assignment?.x || []).concat(assignment?.y || []);\n  }\n}\n\nexport function toggleDiaIDs(diaIDs: string[], atomInformation: AtomData) {\n  let _diaIDs = diaIDs ? diaIDs.slice() : [];\n  const { nbAtoms, oclIDs } = atomInformation;\n  let tempNbAtoms = nbAtoms;\n  oclIDs.forEach((_oclID) => {\n    if (_diaIDs.includes(_oclID)) {\n      tempNbAtoms *= -1;\n      _diaIDs = _diaIDs.filter((_id) => _id !== _oclID);\n    } else {\n      _diaIDs.push(_oclID);\n    }\n  });\n  return [_diaIDs, tempNbAtoms];\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { Range } from '../../../data/types/data1d';\nimport { Zone } from '../../../data/types/data2d';\nimport { ConcatenationString } from '../../../data/utilities/Concatenation';\nimport checkModifierKeyActivated from '../../../data/utilities/checkModifierKeyActivated';\nimport {\n  useAssignment,\n  useAssignmentData,\n} from '../../assignment/AssignmentsContext';\nimport { filterForIDsWithAssignment } from '../../assignment/utilities/filterForIDsWithAssignment';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { HighlightedSource, useHighlightData } from '../../highlight';\nimport { DISPLAYER_MODE } from '../../reducer/core/Constants';\nimport { SET_DIAID_RANGE, SET_DIAID_ZONE } from '../../reducer/types/Types';\n\nimport {\n  AtomData,\n  extractFromAtom,\n  findDatumAndSignalIndex,\n  getCurrentDiaIDsToHighlight,\n  getHighlightsOnHover,\n  toggleDiaIDs,\n} from './Utilities';\n\nexport default function useAtomAssignment({\n  displayerMode,\n  activeTab: nucleus,\n  zones,\n  ranges,\n}) {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const highlightData = useHighlightData();\n  const assignments = useAssignmentData();\n\n  const activeAssignment = useAssignment(\n    assignments.data.activated\n      ? assignments.data.activated.id\n      : ConcatenationString, // dummy value\n  );\n\n  const [onAtomHoverHighlights, setOnAtomHoverHighlights] = useState<any>([]);\n  const [onAtomHoverAction, setOnAtomHoverAction] = useState<\n    'show' | 'hide' | null\n  >(null);\n\n  useEffect(() => {\n    if (onAtomHoverAction) {\n      if (onAtomHoverAction === 'show') {\n        highlightData.dispatch({\n          type: 'SHOW',\n          payload: { convertedHighlights: onAtomHoverHighlights },\n        });\n      } else if (onAtomHoverAction === 'hide') {\n        highlightData.dispatch({\n          type: 'HIDE',\n          payload: { convertedHighlights: onAtomHoverHighlights },\n        });\n        setOnAtomHoverHighlights([]);\n      }\n      setOnAtomHoverAction(null);\n    }\n  }, [onAtomHoverAction, onAtomHoverHighlights, highlightData]);\n\n  const data = useMemo(() => {\n    if (zones || ranges) {\n      if (displayerMode === DISPLAYER_MODE.DM_1D && ranges && ranges.values) {\n        return ranges.values;\n      } else if (\n        displayerMode === DISPLAYER_MODE.DM_2D &&\n        zones &&\n        zones.values\n      ) {\n        return zones.values;\n      }\n    }\n    return [];\n  }, [displayerMode, ranges, zones]);\n\n  const assignedDiaIDs = useMemo(() => {\n    const assignedDiaID: { x: Array<any>; y: Array<any> } = { x: [], y: [] };\n    const assignment = assignments.data.assignments;\n    for (let id in assignment) {\n      if (assignment[id].x) {\n        assignedDiaID.x.push(...assignment[id].x);\n      }\n      if (assignment[id].y) {\n        assignedDiaID.y.push(...assignment[id].y);\n      }\n    }\n    // with its structure it's prepared for showing assigned IDs per axis\n    return assignedDiaID;\n  }, [assignments.data]);\n\n  // used for atom highlighting for now, until we would like to highlight atoms per axis separately\n  const assignedDiaIDsMerged = useMemo(\n    () => assignedDiaIDs.x.concat(assignedDiaIDs.y),\n    [assignedDiaIDs.x, assignedDiaIDs.y],\n  );\n\n  const currentDiaIDsToHighlight = useMemo(() => {\n    let highlights: string[] = [];\n    highlightData.highlight.highlighted.forEach((highlightID) => {\n      const temp = assignments.data.assignments[highlightID];\n      if (temp) {\n        const { datum } = findDatumAndSignalIndex(data, highlightID);\n        const type = highlightData.highlight.sourceData?.type;\n        if (\n          datum &&\n          (type === HighlightedSource.ZONE || type === HighlightedSource.RANGE)\n        ) {\n          // we are on range/zone level only, so add the belonging signal IDs to highlight too\n          highlights = highlights.concat(\n            datum.signals\n              .map((signal) =>\n                filterForIDsWithAssignment(assignments, [signal.id]).length > 0\n                  ? signal.diaIDs\n                  : [],\n              )\n              .flat(),\n          );\n        }\n      }\n    });\n    return getCurrentDiaIDsToHighlight(assignments).concat(highlights);\n  }, [\n    assignments,\n    data,\n    highlightData.highlight.highlighted,\n    highlightData.highlight.sourceData?.type,\n  ]);\n\n  const toggleAssignment = useCallback((diaID, atomInformation: AtomData) => {\n    // a previous version of the code prevented to assign many time the same atom\n    // see revision cc13abc18f77b6787b923e3c4edaef51750d9e90\n    return toggleDiaIDs(diaID, atomInformation);\n  }, []);\n\n  const handleOnClickAtom = useCallback(\n    (atom, event) => {\n      if (!checkModifierKeyActivated(event) && activeAssignment.activated) {\n        const { axis, id } = activeAssignment.activated;\n        if (id && axis) {\n          const atomInformation = extractFromAtom(atom, nucleus, axis);\n          if (atomInformation.nbAtoms > 0) {\n            // save assignment in assignment hook\n            const dimension =\n              displayerMode === DISPLAYER_MODE.DM_1D ? '1D' : '2D';\n            activeAssignment.toggle(atomInformation.oclIDs, dimension);\n            // console.log(activeAssignment);\n            // save assignment (diaIDs) in range/zone data\n            const { datum, signalIndex } = findDatumAndSignalIndex(\n              data,\n              activeAssignment.id,\n            );\n            if (datum) {\n              // determine the level of setting the diaIDs array (range vs. signal level) and save there\n              // let nbAtoms = 0;\n              // on range/zone level\n\n              if (displayerMode === DISPLAYER_MODE.DM_1D) {\n                const range = datum as Range;\n                let _diaIDs: string[] = [];\n                if (signalIndex === undefined) {\n                  _diaIDs = range?.diaIDs || [];\n                } else {\n                  _diaIDs = range?.signals[signalIndex]?.diaIDs || [];\n                }\n                const [_diaID, nbAtoms] = toggleAssignment(\n                  _diaIDs,\n                  atomInformation,\n                );\n                dispatch({\n                  type: SET_DIAID_RANGE,\n                  payload: {\n                    nbAtoms,\n                    rangeData: datum,\n                    diaIDs: _diaID,\n                    signalIndex,\n                  },\n                });\n              } else {\n                const zone = datum as Zone;\n                let _diaIDs: string[] = [];\n                if (signalIndex === undefined) {\n                  _diaIDs = zone[axis]?.diaIDs || [];\n                } else {\n                  _diaIDs = zone?.signals[signalIndex][axis]?.diaIDs || [];\n                }\n                const [_diaID, nbAtoms] = toggleAssignment(\n                  _diaIDs,\n                  atomInformation,\n                );\n                dispatch({\n                  type: SET_DIAID_ZONE,\n                  payload: {\n                    nbAtoms,\n                    zoneData: datum,\n                    diaIDs: _diaID,\n                    axis: axis,\n                    signalIndex,\n                  },\n                });\n              }\n            }\n            activeAssignment.setActive(axis);\n          } else {\n            alert.info(\n              'Not assigned! Different atom type or no attached hydrogens found!',\n            );\n          }\n        }\n      }\n    },\n    [\n      activeAssignment,\n      alert,\n      data,\n      dispatch,\n      displayerMode,\n      nucleus,\n      toggleAssignment,\n    ],\n  );\n\n  const handleOnAtomHover = useCallback(\n    (atom) => {\n      const { oclIDs } = extractFromAtom(atom, nucleus);\n\n      // on enter the atom\n      if (oclIDs.length > 0) {\n        // set all IDs to highlight when hovering over an atom from assignment data\n        const highlights = getHighlightsOnHover(assignments, oclIDs, data);\n        setOnAtomHoverHighlights(highlights);\n        setOnAtomHoverAction('show');\n      } else {\n        // on leave the atom\n        setOnAtomHoverAction('hide');\n      }\n      // }\n    },\n    [assignments, data, nucleus],\n  );\n\n  return {\n    handleOnAtomHover,\n    handleOnClickAtom,\n    currentDiaIDsToHighlight,\n    assignedDiaIDsMerged,\n  };\n}\n","/** @jsxImportSource @emotion/react */\nimport { css, SerializedStyles } from '@emotion/react';\nimport OCL from 'openchemlib/full';\nimport { useState, useCallback, useEffect, memo, ReactElement } from 'react';\nimport { ResponsiveChart } from 'react-d3-utils';\nimport { MF } from 'react-mf';\nimport OCLnmr from 'react-ocl-nmr';\n\nimport { Molecule } from '../../../data/molecules/Molecule';\nimport { Datum1D, Ranges } from '../../../data/types/data1d';\nimport { Datum2D, Zones } from '../../../data/types/data2d';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport NextPrev from '../../elements/NextPrev';\nimport { positions, useModal } from '../../elements/popup/Modal';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport MoleculeStructureEditorModal from '../../modal/MoleculeStructureEditorModal';\nimport { DISPLAYER_MODE } from '../../reducer/core/Constants';\nimport { SET_MOLECULE } from '../../reducer/types/Types';\n\nimport MoleculePanelHeader, {\n  MoleculeHeaderActionsOptions,\n} from './MoleculePanelHeader';\nimport useAtomAssignment from './useAtomAssignment';\n\nconst styles: Record<\n  'panel' | 'innerPanel' | 'molecule' | 'toolbar' | 'slider' | 'items',\n  SerializedStyles\n> = {\n  panel: css({\n    display: 'flex',\n    overflow: 'auto',\n    flexGrow: 1,\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column',\n  }),\n  innerPanel: css({\n    display: 'flex',\n    flex: '1',\n    flexDirection: 'column',\n    overflow: 'auto',\n  }),\n  molecule: css({\n    display: 'flex',\n    flex: '1',\n  }),\n  toolbar: css({\n    display: 'flex',\n    borderBottom: '0.55px solid rgb(240, 240, 240)',\n    padding: '0px 10px',\n    justifyContent: 'end',\n    height: 22,\n  }),\n  slider: css({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexGrow: 1,\n    minHeight: 0,\n  }),\n  items: css({\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '1 1 0%',\n    height: '100%',\n    minHeight: 0,\n  }),\n};\n\ninterface MoleculePanelInnerProps extends MoleculePanelProps {\n  zones: Zones;\n  ranges: Ranges;\n  molecules: Array<Molecule>;\n  activeTab: string;\n  displayerMode: DISPLAYER_MODE;\n}\n\nfunction MoleculePanelInner({\n  zones,\n  ranges,\n  molecules: moleculesProp,\n  activeTab,\n  displayerMode,\n  onMoleculeChange,\n  actionsOptions,\n  children,\n}: MoleculePanelInnerProps) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [molecules, setMolecules] = useState<any>([]);\n\n  const dispatch = useDispatch();\n  const modal = useModal();\n\n  const {\n    currentDiaIDsToHighlight,\n    handleOnAtomHover,\n    handleOnClickAtom,\n    assignedDiaIDsMerged,\n  } = useAtomAssignment({ zones, ranges, activeTab, displayerMode });\n\n  useEffect(() => {\n    if (moleculesProp) {\n      setMolecules((prevMolecules) => {\n        if (moleculesProp.length > prevMolecules.length) {\n          setCurrentIndex(molecules.length);\n        }\n        return moleculesProp;\n      });\n    }\n  }, [molecules.length, moleculesProp]);\n\n  useEffect(() => {\n    onMoleculeChange?.(molecules[currentIndex] || null);\n  }, [currentIndex, molecules, onMoleculeChange]);\n\n  const handleReplaceMolecule = useCallback(\n    (key, molfile) => {\n      dispatch({ type: SET_MOLECULE, molfile, key });\n    },\n    [dispatch],\n  );\n\n  const openMoleculeEditorHandler = useCallback(\n    (molecule?: Molecule) => {\n      modal.show(<MoleculeStructureEditorModal selectedMolecule={molecule} />, {\n        position: positions.TOP_CENTER,\n        width: 700,\n        height: 500,\n      });\n    },\n    [modal],\n  );\n\n  const moleculeIndexHandler = useCallback((index) => {\n    setCurrentIndex(index);\n  }, []);\n\n  return (\n    <div css={styles.panel}>\n      <MoleculePanelHeader\n        currentIndex={currentIndex}\n        molecules={molecules}\n        onOpenMoleculeEditor={() => openMoleculeEditorHandler()}\n        onMoleculeIndexChange={moleculeIndexHandler}\n        actionsOptions={actionsOptions}\n      />\n      <div css={styles.innerPanel}>\n        <div css={styles.molecule}>\n          <NextPrev\n            onChange={(slideIndex) => setCurrentIndex(slideIndex)}\n            defaultIndex={currentIndex}\n          >\n            {molecules && molecules.length > 0 ? (\n              molecules.map((mol: Molecule, index) => (\n                <div key={mol.key} css={styles.items}>\n                  <span css={styles.toolbar}>\n                    <MF mf={mol.mf} /> - {mol.mw?.toFixed(2)}\n                  </span>\n                  <div\n                    css={styles.slider}\n                    className=\"mol-svg-container\"\n                    onDoubleClick={() => openMoleculeEditorHandler(mol)}\n                    style={{\n                      backgroundColor:\n                        (index + 1) % 2 !== 0 ? '#fafafa' : 'white',\n                    }}\n                  >\n                    <ResponsiveChart>\n                      {({ height, width }) => {\n                        return (\n                          <OCLnmr\n                            OCL={OCL}\n                            id={`molSVG${index}`}\n                            width={width}\n                            height={height}\n                            molfile={mol.molfile || ''}\n                            setMolfile={(molfile) =>\n                              handleReplaceMolecule(mol.key, molfile)\n                            }\n                            setSelectedAtom={handleOnClickAtom}\n                            atomHighlightColor={\n                              currentDiaIDsToHighlight &&\n                              currentDiaIDsToHighlight.length > 0\n                                ? 'red'\n                                : '#FFD700'\n                            }\n                            atomHighlightOpacity={0.35}\n                            highlights={\n                              currentDiaIDsToHighlight &&\n                              currentDiaIDsToHighlight.length > 0\n                                ? currentDiaIDsToHighlight\n                                : assignedDiaIDsMerged\n                            }\n                            setHoverAtom={handleOnAtomHover}\n                          />\n                        );\n                      }}\n                    </ResponsiveChart>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div\n                css={styles.slider}\n                style={{ height: '100%' }}\n                onClick={() => openMoleculeEditorHandler()}\n              >\n                <span>Click to draw molecule</span>\n              </div>\n            )}\n          </NextPrev>\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nconst MemoizedMoleculePanel = memo(MoleculePanelInner);\nconst emptyData = { ranges: {}, zones: {} };\n\ninterface MoleculePanelProps {\n  onMoleculeChange?: (molecule: Molecule) => void;\n  children?: ReactElement;\n  actionsOptions?: MoleculeHeaderActionsOptions;\n}\n\nexport default function MoleculePanel({\n  onMoleculeChange,\n  children,\n  actionsOptions,\n}: MoleculePanelProps) {\n  const { molecules, displayerMode, activeTab } = useChartData();\n\n  const data = useSpectrum(emptyData);\n  const ranges: Ranges = (data as Datum1D)?.ranges || {};\n  const zones: Zones = (data as Datum2D)?.zones || {};\n\n  return (\n    <MemoizedMoleculePanel\n      {...{\n        molecules,\n        displayerMode,\n        activeTab,\n        ranges,\n        zones,\n        onMoleculeChange,\n        actionsOptions,\n      }}\n    >\n      {children}\n    </MemoizedMoleculePanel>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\n\nimport { REFERENCES } from '../../data/constants/References';\nimport { useDispatch } from '../context/DispatchContext';\nimport Button from '../elements/Button';\nimport CloseButton from '../elements/CloseButton';\nimport Label from '../elements/Label';\nimport Select from '../elements/Select';\nimport FormikForm from '../elements/formik/FormikForm';\nimport FormikInput from '../elements/formik/FormikInput';\nimport { ALIGN_SPECTRA } from '../reducer/types/Types';\nimport Events from '../utility/Events';\n\nimport { ModalStyles } from './ModalStyle';\n\nconst baseList = [{ key: 1, value: 'manual', label: 'Manual' }];\n\ninterface AlignSpectraModalProps {\n  onClose?: (element?: string) => void;\n  nucleus: any;\n}\n\nfunction AlignSpectraModal({\n  onClose = () => null,\n  nucleus,\n}: AlignSpectraModalProps) {\n  const refForm = useRef<any>();\n  const dispatch = useDispatch();\n  const List = useMemo(() => {\n    const list = REFERENCES[nucleus]\n      ? Object.entries(REFERENCES[nucleus]).map(\n          (item) => ({\n            key: item[0],\n            value: item[0],\n            label: item[0],\n          }),\n          [],\n        )\n      : [];\n\n    return baseList.concat(list as any);\n  }, [nucleus]);\n  const handleSave = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n\n  const submitHandler = useCallback(\n    (values) => {\n      dispatch({ type: ALIGN_SPECTRA, payload: values });\n      onClose();\n    },\n    [dispatch, onClose],\n  );\n\n  useEffect(() => {\n    function handler(event: any) {\n      const [from, to] = event.range;\n      refForm.current.setValues({ ...refForm.current.values, from, to });\n    }\n\n    Events.on('brushEnd', handler);\n\n    return () => {\n      Events.off('brushEnd', handler);\n    };\n  }, []);\n\n  const optionChangeHandler = useCallback(\n    (id) => {\n      const value = REFERENCES[nucleus][id];\n      const { delta = 0, ...resValues } = value || { delta: 0 };\n      refForm.current.setValues({\n        ...refForm.current.values,\n        targetX: delta,\n        ...resValues,\n      });\n    },\n    [nucleus],\n  );\n\n  return (\n    <div css={ModalStyles}>\n      <div className=\"header handle\">\n        <span>Spectra calibration</span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"inner-content\" style={{ flex: 1 }}>\n        <FormikForm\n          ref={refForm}\n          initialValues={{ from: -1, to: 1, nbPeaks: 1, targetX: 0 }}\n          onSubmit={submitHandler}\n        >\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Options :</span>\n\n            <Select\n              data={List}\n              style={{ width: 270, height: 30, marginBottom: '20px' }}\n              onChange={optionChangeHandler}\n            />\n          </div>\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Range :</span>\n            <Label title=\"From : \">\n              <FormikInput name=\"from\" type=\"number\" />\n            </Label>\n            <Label title=\"To : \">\n              <FormikInput name=\"to\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\" margin-10\">\n            <Label className=\"custom-label\" title=\"Number of Peaks : \">\n              <FormikInput name=\"nbPeaks\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\" margin-10\">\n            <Label className=\"custom-label\" title=\"Target PPM :\">\n              <FormikInput name=\"targetX\" type=\"number\" />\n            </Label>\n          </div>\n        </FormikForm>\n      </div>\n      <div className=\"footer-container\">\n        <Button.Done onClick={handleSave}>Done</Button.Done>\n      </div>\n    </div>\n  );\n}\n\nexport default AlignSpectraModal;\n","export default function calculate(code: string, args = null) {\n  try {\n    return new Function('args', `return ${code}`)(args);\n  } catch (e) {\n    return e;\n  }\n}\n","/** @jsxImportSource @emotion/react */\nimport { useFormikContext } from 'formik';\nimport { memo, useEffect, useState } from 'react';\n\nimport Eval from '../../utility/Evaluate';\n\nconst initCode = `function run(data) {\n\n  return JSON.stringify(data,undefined, 2);\n  \n}(args);\n`;\n\ninterface MultipleAnalysisCodeEditorProps {\n  data: any;\n}\n\nfunction MultipleAnalysisCodeEditor({ data }: MultipleAnalysisCodeEditorProps) {\n  const { values, setFieldValue } = useFormikContext<any>();\n  const [code, setCode] = useState(values.code ? values.code : initCode);\n  const [result, setResult] = useState('');\n\n  useEffect(() => {\n    const evalResult = Eval(code, data);\n    if (evalResult instanceof Error) {\n      setResult(evalResult.message);\n    } else {\n      setFieldValue('code', code);\n      setResult(evalResult);\n    }\n  }, [code, data, setFieldValue]);\n\n  return (\n    <div style={{ marginTop: '20px' }}>\n      <textarea\n        value={code}\n        onChange={(event) => setCode(event.target.value)}\n        style={{\n          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n          fontSize: 12,\n          padding: '1em',\n          width: '90%',\n          backgroundColor: '#fcfcfc',\n          marginBottom: '10px',\n          minHeight: '100px',\n          overflow: 'auto',\n          maxHeight: '200px',\n        }}\n      />\n      <p style={{ marginBottom: '5px' }}>Result:</p>\n\n      <textarea\n        value={result}\n        readOnly\n        style={{\n          border: '0.55px solid #f3f3f3',\n          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n          fontSize: 12,\n          padding: '1em',\n          width: '90%',\n          marginBottom: '10px',\n          minHeight: '100px',\n          overflow: 'auto',\n          maxHeight: '200px',\n        }}\n      />\n    </div>\n  );\n}\n\nexport default memo(MultipleAnalysisCodeEditor);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { FaPlus } from 'react-icons/fa';\nimport * as Yup from 'yup';\n\nimport { COLUMNS_TYPES } from '../../../data/data1d/MultipleAnalysis';\nimport { useDispatch } from '../../context/DispatchContext';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikInput from '../../elements/formik/FormikInput';\nimport { SET_ANALYZE_SPECTRA_COLUMNS } from '../../reducer/types/Types';\n\nimport MultipleAnalysisCodeEditor from './MultipleAnalysisCodeEditor';\n\nconst styles = css`\n  width: 100%;\n  thead {\n    border-bottom: 1px solid lightgray;\n    background-color: #fafafa;\n    font-size: 12px;\n  }\n\n  td,\n  th {\n    padding: 3px 5px;\n    text-align: center;\n  }\n\n  .operation-col {\n    width: 30px;\n  }\n\n  .input {\n    height: 25px !important;\n    width: 100% !important;\n    margin: 0 !important;\n  }\n\n  .input.disbale {\n    background-color: #e8e8e8;\n    border-radius: 5px;\n  }\n\n  .label,\n  .index {\n    width: 100px;\n  }\n\n  .counter {\n    width: 50px;\n  }\n\n  .add {\n    background-color: transparent;\n    border: 0;\n    outline: none;\n    svg {\n      font-szie: 14px;\n      fill: green;\n    }\n  }\n`;\n\n// TODO: remove this hacky use of ref.\nfunction MultipleSpectraAnalysisPreferences({ data, onAfterSave }, ref: any) {\n  const dispatch = useDispatch();\n  const refForm = useRef<any>();\n  const [columns, setColumns] = useState({});\n\n  useImperativeHandle(ref, () => ({\n    saveSetting() {\n      refForm.current.submitForm();\n    },\n  }));\n\n  useEffect(() => {\n    const result = Object.keys(data.columns).reduce((acc, key) => {\n      acc[key] = { ...data.columns[key], tempKey: key };\n      return acc;\n    }, {});\n    setColumns(result);\n    refForm.current.setValues({ columns: result, code: data.code });\n  }, [data]);\n\n  const columnsKeys = useMemo(() => {\n    return Object.keys(columns);\n  }, [columns]);\n\n  const preferncesSchema = useMemo(() => {\n    function columnSchema() {\n      return columnsKeys.reduce((acc, key) => {\n        acc[key] = Yup.object().shape({\n          tempKey: Yup.string()\n            .required()\n            .test('unique', 'must be unique column name', (colmnName) => {\n              const formData = refForm.current.values.columns;\n              return (\n                Object.keys(formData).reduce((acc, colKey) => {\n                  if (formData[colKey].tempKey === colmnName) {\n                    (acc as any[]).push(colmnName);\n                  }\n                  return acc;\n                }, []).length === 1\n              );\n            }),\n          ...(columns[key].type === COLUMNS_TYPES.FORMULA\n            ? { formula: Yup.string().required() }\n            : {}),\n          index: Yup.string().required(),\n        });\n        return acc;\n      }, {});\n    }\n\n    return Yup.object().shape({\n      columns: Yup.object().shape(columnSchema()),\n    });\n  }, [columns, columnsKeys, refForm]);\n\n  const submitHandler = useCallback(\n    (values) => {\n      onAfterSave?.(true);\n      const result = Object.entries(values.columns).reduce(\n        (acc, [key, value]) => {\n          acc[key] = { ...columns[key], ...(value as any) };\n          return acc;\n        },\n        {},\n      );\n      dispatch({\n        type: SET_ANALYZE_SPECTRA_COLUMNS,\n        payload: { code: values.code, columns: result },\n      });\n    },\n    [columns, dispatch, onAfterSave],\n  );\n\n  const addNewColumn = useCallback((index) => {\n    setColumns((prevData) => {\n      return {\n        ...prevData,\n        [`temp${index}`]: {\n          tempKey: '',\n          type: 'FORMULA',\n          valueKey: 'value',\n          formula: '',\n          index: index,\n        },\n      };\n    });\n  }, []);\n\n  return (\n    <FormikForm\n      ref={refForm}\n      initialValues={{ columns, code: null }}\n      validationSchema={preferncesSchema}\n      onSubmit={submitHandler}\n    >\n      {columnsKeys && (\n        <table css={styles}>\n          <thead>\n            <tr>\n              <th className=\"counter\">#</th>\n              <th className=\"label\">Label</th>\n              <th>value</th>\n              <th className=\"index\">index</th>\n            </tr>\n          </thead>\n          <tbody>\n            {columnsKeys.map((key, index) => {\n              return (\n                <tr key={key}>\n                  <td className=\"counter\">{index + 1}</td>\n                  <td className=\"label\">\n                    <FormikInput\n                      key={key}\n                      name={`columns.${key}.tempKey`}\n                      value={columns[key].tempKey}\n                    />\n                  </td>\n                  <td>\n                    {columns[key].type === COLUMNS_TYPES.FORMULA ? (\n                      <FormikInput\n                        name={`columns.${key}.formula`}\n                        value={columns[key].formula}\n                      />\n                    ) : (\n                      <div className=\"input disbale\" />\n                    )}\n                  </td>\n                  <td className=\"index\">\n                    <FormikInput\n                      name={`columns.${key}.index`}\n                      value={columns[key].index}\n                    />\n                  </td>\n                  <td className=\"operation-col\">\n                    {columnsKeys.length === index + 1 && (\n                      <button\n                        className=\"add\"\n                        type=\"button\"\n                        onClick={() => addNewColumn(index + 1)}\n                      >\n                        <FaPlus />\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n      <MultipleAnalysisCodeEditor data={data} />\n    </FormikForm>\n  );\n}\n\nexport default forwardRef(MultipleSpectraAnalysisPreferences);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useLayoutEffect, useRef } from 'react';\n\nimport { DropDownListProps } from './DropDownButton';\n\nconst styles = {\n  container: css`\n    background-color: white;\n    position: absolute;\n    height: auto;\n    z-index: 99999999999999;\n    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n    border-radius: 10px;\n    margin-bottom: 20px;\n    overflow: hidden;\n  `,\n  ul: css`\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n  `,\n  li: css`\n    text-align: center;\n    color: black;\n    border-bottom: 0.55px solid #f9f9f9;\n    min-width: 150px;\n    width: fit-content;\n    &:last-of-type {\n      border-bottom: none;\n    }\n\n    &:hover {\n      background-color: gray;\n      color: white;\n    }\n  `,\n  label: css`\n    padding: 5px 20px;\n    display: block;\n  `,\n};\n\nfunction DropDownList({\n  data = [],\n  onSelect,\n  renderItem = null,\n}: DropDownListProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  useLayoutEffect(() => {\n    if (ref.current) {\n      const containerRect = ref.current?.getBoundingClientRect();\n      if (containerRect.right > window.innerWidth) {\n        ref.current.style.right = `${\n          containerRect.right - window.innerWidth\n        }px`;\n      }\n    }\n  }, []);\n  return (\n    <div css={styles.container} ref={ref}>\n      <ul css={styles.ul}>\n        {data.map((item, index) => (\n          <li css={styles.li} key={item.key} onClick={() => onSelect(index)}>\n            {renderItem?.(item) || <span css={styles.label}>{item.label}</span>}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default DropDownList;\n","/** @jsxImportSource @emotion/react */\nimport { css, CSSObject } from '@emotion/react';\nimport { ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { FaEllipsisH } from 'react-icons/fa';\n\nimport DropDownList from './DropDownList';\n\nconst styles = {\n  container: css`\n    position: relative;\n    padding: 2px;\n    border-radius: 10px;\n    width: max-content;\n    display: inline-block;\n    border: 0.55px solid lightgray;\n    font-size: 10px;\n  `,\n  button: css`\n    width: 100%;\n  `,\n};\n\nexport interface DropDownListItem {\n  key: string;\n  label: string;\n  index?: number;\n}\n\nexport interface DropDownListProps {\n  data: Array<DropDownListItem>;\n  onSelect: (index: number) => void;\n  renderItem?: ((item: DropDownListItem) => ReactNode) | null;\n}\n\ninterface DropDownButtonProps extends Omit<DropDownListProps, 'onSelect'> {\n  selectedKey?: string;\n  onSelect?: (item: DropDownListItem) => void;\n  formatSelectedValue?: (Item: DropDownListItem) => string;\n  style?: CSSObject;\n}\n\nfunction DropDownButton(props: DropDownButtonProps) {\n  const {\n    data,\n    selectedKey,\n    onSelect,\n    formatSelectedValue = (item) => item.label,\n    renderItem = null,\n    style,\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [item, setItem] = useState<DropDownListItem | null>();\n\n  const drop = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (selectedKey) {\n      const item = data.find((i) => i.key === selectedKey) || null;\n      setItem(item);\n    }\n  }, [selectedKey, data]);\n\n  useEffect(() => {\n    function handleClick() {\n      setOpen(false);\n    }\n    window.addEventListener('click', handleClick);\n    return () => window.removeEventListener('click', handleClick);\n  }, []);\n\n  const selectHandler = useCallback(\n    (index) => {\n      setItem(data[index]);\n      onSelect?.(data[index]);\n    },\n    [data, onSelect],\n  );\n\n  return (\n    <div className=\"dropdown\" ref={drop} css={[styles.container, style]}>\n      <button\n        css={styles.button}\n        type=\"button\"\n        onClick={(event) => {\n          setOpen((open) => !open);\n          event.stopPropagation();\n        }}\n      >\n        {!item ? <FaEllipsisH /> : formatSelectedValue(item)}\n      </button>\n      {open && (\n        <DropDownList\n          data={data}\n          onSelect={selectHandler}\n          renderItem={renderItem}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default DropDownButton;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback } from 'react';\n\nimport {\n  COLUMNS_TYPES,\n  COLUMNS_VALUES_KEYS,\n} from '../../../data/data1d/MultipleAnalysis';\nimport { useDispatch } from '../../context/DispatchContext';\nimport DeleteButton from '../../elements/Tab/DeleteButton';\nimport DropDownButton from '../../elements/dropDownButton/DropDownButton';\nimport { DELETE_ANALYZE_SPECTRA_RANGE } from '../../reducer/types/Types';\n\nconst styles = (styles) => css`\n  position: relative;\n\n  .delete {\n    position: absolute;\n    right: 0px;\n    top: 0px;\n  }\n\n  .container {\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    margin: 0;\n  }\n\n  .dropDown-container {\n    justify-content: flex-start;\n    align-items: flex-start;\n  }\n\n  .label-container {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    min-height: 45px;\n  }\n\n  .label {\n    text-align: center;\n  }\n\n  ${styles}\n`;\n\nconst columnsFilters: Array<{ key: string; label: string }> = [\n  { key: COLUMNS_VALUES_KEYS.RELATIVE, label: 'Relative' },\n  { key: COLUMNS_VALUES_KEYS.ABSOLUTE, label: 'Absolute' },\n  { key: COLUMNS_VALUES_KEYS.MIN, label: 'Min Intensity' },\n  { key: COLUMNS_VALUES_KEYS.MAX, label: 'Max Intensity' },\n];\n\ninterface ColumnHeaderProps {\n  charLabel: string;\n  rangeLabel: string;\n  onColumnFilter: (element: any) => void;\n  data: {\n    type: string;\n    valueKey: string;\n  };\n}\n\nfunction ColumnHeader({\n  charLabel,\n  rangeLabel,\n  data,\n  onColumnFilter,\n}: ColumnHeaderProps) {\n  const dispatch = useDispatch();\n\n  const deleteHandler = useCallback(() => {\n    dispatch({ type: DELETE_ANALYZE_SPECTRA_RANGE, colKey: charLabel });\n  }, [charLabel, dispatch]);\n\n  return (\n    <div css={styles}>\n      <div className=\"container\">\n        {data.type === COLUMNS_TYPES.NORMAL && (\n          <div className=\"dropDown-container\">\n            <DropDownButton\n              data={columnsFilters}\n              formatSelectedValue={(item) => item.label.substring(0, 3)}\n              selectedKey={data.valueKey}\n              onSelect={onColumnFilter}\n            />\n          </div>\n        )}\n        <div className=\"label-container\">\n          <span className=\"label\"> {charLabel}</span>\n          <span className=\"label\">{rangeLabel}</span>\n        </div>\n      </div>\n      <DeleteButton onDelete={deleteHandler} />\n    </div>\n  );\n}\n\nexport default ColumnHeader;\n","import lodashGet from 'lodash/get';\nimport { useMemo, memo, useCallback, Fragment } from 'react';\n\nimport { useDispatch } from '../../context/DispatchContext';\nimport ReactTable from '../../elements/ReactTable/ReactTable';\nimport addCustomColumn, {\n  CustomColumn,\n} from '../../elements/ReactTable/utility/addCustomColumn';\nimport { FILTER_SPECTRA_COLUMN } from '../../reducer/types/Types';\nimport Eval from '../../utility/Evaluate';\nimport { useFormatNumberByNucleus } from '../../utility/FormatNumber';\nimport NoTableData from '../extra/placeholder/NoTableData';\n\nimport ColumnHeader from './ColumnHeader';\n\ninterface MultipleSpectraAnalysisTableProps {\n  data: any;\n  activeTab: string;\n}\n\nfunction MultipleSpectraAnalysisTable({\n  data,\n  activeTab,\n}: MultipleSpectraAnalysisTableProps) {\n  const format = useFormatNumberByNucleus(activeTab);\n\n  const codeEvaluation = useMemo(() => {\n    const code = lodashGet(data, 'code', '');\n    return Eval(code, data);\n  }, [data]);\n\n  const dispatch = useDispatch();\n\n  const columnFilterHandler = useCallback(\n    (columnKey, valueKey) => {\n      dispatch({\n        type: FILTER_SPECTRA_COLUMN,\n        payload: {\n          columnKey,\n          valueKey,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const tableColumns = useMemo(() => {\n    const columns: CustomColumn[] = [\n      {\n        Header: '#',\n        index: 0,\n        Cell: ({ row }) => row.index + 1,\n      },\n    ];\n\n    function cellHandler(row, columnKey, valueKey) {\n      const value = row.original[columnKey][valueKey];\n      const result =\n        value instanceof Error ? (\n          <span style={{ color: 'red' }}>{value.message}</span>\n        ) : (\n          format(value)\n        );\n      return result;\n    }\n\n    function headerHandler(columnData, columnKey) {\n      return (\n        <ColumnHeader\n          charLabel={columnKey}\n          data={columnData}\n          onColumnFilter={(item) => columnFilterHandler(columnKey, item.key)}\n          rangeLabel={\n            columnData.from && columnData.to\n              ? `${format(columnData.from)} - ${format(columnData.to)}`\n              : ''\n          }\n        />\n      );\n    }\n\n    if (data.columns) {\n      Object.keys(data.columns).forEach((columnKey) => {\n        const { valueKey, index: columnIndex } = data.columns[columnKey];\n        addCustomColumn(columns, {\n          index: columnIndex + 1,\n          Cell: ({ row }) => cellHandler(row, columnKey, valueKey),\n          Header: () => headerHandler(data.columns[columnKey], columnKey),\n          id: columnKey,\n        });\n      });\n    }\n    return columns.sort((object1, object2) => object1.index - object2.index);\n  }, [columnFilterHandler, data.columns, format]);\n\n  return data.values && data.values.length > 0 ? (\n    <Fragment>\n      <ReactTable data={data.values} columns={tableColumns} />\n      <div\n        style={{\n          width: '100%',\n          padding: '10px',\n        }}\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={{ __html: codeEvaluation }}\n      />\n    </Fragment>\n  ) : (\n    <NoTableData />\n  );\n}\n\nexport default memo(MultipleSpectraAnalysisTable);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { SvgNmrOverlay } from 'cheminfo-font';\nimport { useCallback, useState, useRef, memo, useMemo } from 'react';\nimport { FaFileExport } from 'react-icons/fa';\nimport { IoPulseOutline } from 'react-icons/io5';\n\nimport {\n  getDataAsString,\n  SpectraAnalysis,\n} from '../../../data/data1d/MultipleAnalysis';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport Button from '../../elements/ButtonToolTip';\nimport ToggleButton from '../../elements/ToggleButton';\nimport { positions, useAlert } from '../../elements/popup/Alert';\nimport { useModal } from '../../elements/popup/Modal';\nimport AlignSpectraModal from '../../modal/AlignSpectraModal';\nimport { RESET_SELECTED_TOOL } from '../../reducer/types/Types';\nimport Events from '../../utility/Events';\nimport { copyTextToClipboard } from '../../utility/Export';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\nimport PreferencesHeader from '../header/PreferencesHeader';\n\nimport MultipleSpectraAnalysisPreferences from './MultipleSpectraAnalysisPreferences';\nimport MultipleSpectraAnalysisTable from './MultipleSpectraAnalysisTable';\n\ninterface MultipleSpectraAnalysisPanelInnerProps {\n  activeTab: string;\n  spectraAnalysis: SpectraAnalysis;\n}\n\nfunction MultipleSpectraAnalysisPanelInner({\n  activeTab,\n  spectraAnalysis,\n}: MultipleSpectraAnalysisPanelInnerProps) {\n  const [isFlipped, setFlipStatus] = useState(false);\n  const settingRef = useRef<any>();\n  const alert = useAlert();\n  const modal = useModal();\n  const dispatch = useDispatch();\n\n  const data = useMemo<any>(() => {\n    const {\n      values,\n      options: { columns, code },\n    } = spectraAnalysis[activeTab] || {\n      values: {},\n      options: { columns: {}, code: null },\n    };\n    return { values: Object.values(values), columns, code };\n  }, [activeTab, spectraAnalysis]);\n\n  const settingsPanelHandler = useCallback(() => {\n    setFlipStatus(!isFlipped);\n  }, [isFlipped]);\n\n  const saveSettingHandler = useCallback(() => {\n    settingRef.current.saveSetting();\n  }, []);\n\n  const afterSaveHandler = useCallback(() => {\n    setFlipStatus(false);\n  }, []);\n\n  const showTrackerHandler = useCallback((flag) => {\n    Events.emit('showYSpectraTrackers', flag);\n  }, []);\n  const openAlignSpectra = useCallback(() => {\n    dispatch({ type: RESET_SELECTED_TOOL });\n    modal.show(<AlignSpectraModal nucleus={activeTab} />, {\n      isBackgroundBlur: false,\n      position: positions.TOP_CENTER,\n      width: 500,\n    });\n  }, [activeTab, modal, dispatch]);\n\n  const copyToClipboardHandler = useCallback(() => {\n    void (async () => {\n      const data = getDataAsString(spectraAnalysis, activeTab);\n      const success = await copyTextToClipboard(data);\n      if (success) {\n        alert.success('Data copied to clipboard');\n      } else {\n        alert.error('copy to clipboard failed');\n      }\n    })();\n  }, [activeTab, alert, spectraAnalysis]);\n\n  return (\n    <div\n      css={[\n        tablePanelStyle,\n        isFlipped &&\n          css`\n            .table-container th {\n              position: relative;\n            }\n          `,\n      ]}\n    >\n      {!isFlipped && (\n        <DefaultPanelHeader\n          deleteToolTip=\"Delete All Peaks\"\n          showSettingButton\n          canDelete={false}\n          onSettingClick={settingsPanelHandler}\n        >\n          <Button\n            popupTitle=\"Copy To Clipboard\"\n            // style={styles.button}\n            onClick={copyToClipboardHandler}\n          >\n            <FaFileExport />\n          </Button>\n          <Button\n            popupTitle=\"Spectra calibration\"\n            // style={styles.button}\n            onClick={openAlignSpectra}\n          >\n            <SvgNmrOverlay style={{ fontSize: '18px' }} />\n          </Button>\n          <ToggleButton\n            popupTitle=\"Y Spectra Tracker\"\n            popupPlacement=\"right\"\n            onClick={showTrackerHandler}\n          >\n            <IoPulseOutline />\n          </ToggleButton>\n        </DefaultPanelHeader>\n      )}\n      {isFlipped && (\n        <PreferencesHeader\n          onSave={saveSettingHandler}\n          onClose={settingsPanelHandler}\n        />\n      )}\n      <div className=\"inner-container\">\n        {!isFlipped ? (\n          <MultipleSpectraAnalysisTable data={data} activeTab={activeTab} />\n        ) : (\n          <MultipleSpectraAnalysisPreferences\n            data={data}\n            onAfterSave={afterSaveHandler}\n            ref={settingRef}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst MemoizedMultipleSpectraAnalysisPanel = memo(\n  MultipleSpectraAnalysisPanelInner,\n);\n\nexport default function MultipleSpectraAnalysisPanel() {\n  const { activeTab, spectraAnalysis, displayerKey } = useChartData();\n\n  if (!activeTab) {\n    return <div />;\n  }\n\n  return (\n    <MemoizedMultipleSpectraAnalysisPanel\n      {...{ activeTab, spectraAnalysis, displayerKey }}\n    />\n  );\n}\n","import {\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  CSSProperties,\n  memo,\n  forwardRef,\n} from 'react';\n\nimport { usePreferences } from '../../context/PreferencesContext';\nimport IsotopesViewer from '../../elements/IsotopesViewer';\nimport FormikColumnFormatField from '../../elements/formik/FormikColumnFormatField';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport { useAlert } from '../../elements/popup/Alert';\nimport useNucleus from '../../hooks/useNucleus';\nimport { getValue as getValueByKeyPath } from '../../utility/LocalStorage';\nimport { peaksDefaultValues } from '../extra/preferences/defaultValues';\n\nconst styles: Record<\n  'container' | 'groupContainer' | 'row' | 'header' | 'inputLabel' | 'input',\n  CSSProperties\n> = {\n  container: {\n    padding: 10,\n    backgroundColor: '#f1f1f1',\n    height: '100%',\n    overflowY: 'auto',\n  },\n  groupContainer: {\n    padding: '5px',\n    borderRadius: '5px',\n    margin: '10px 0px',\n    backgroundColor: 'white',\n  },\n  row: {\n    display: 'flex',\n    margin: '5px 0px',\n  },\n  header: {\n    borderBottom: '1px solid #e8e8e8',\n    paddingBottom: '5px',\n    fontWeight: 'bold',\n    color: '#4a4a4a',\n  },\n  inputLabel: {\n    flex: 2,\n    fontSize: '11px',\n    fontWeight: 'bold',\n    color: '#232323',\n  },\n  input: {\n    width: '30%',\n    textAlign: 'center',\n  },\n};\n\nconst formatFields: Array<{\n  id: number;\n  label: string;\n  checkController: string;\n  formatController: string;\n}> = [\n  {\n    id: 1,\n    label: 'Peak Number :',\n    checkController: 'showPeakNumber',\n    formatController: 'peakNumberFormat',\n  },\n  {\n    id: 2,\n    label: 'Peak Index : ',\n    checkController: 'showPeakIndex',\n    formatController: 'peakIndexFormat',\n  },\n  {\n    id: 3,\n    label: 'δ (ppm) :',\n    checkController: 'showDeltaPPM',\n    formatController: 'deltaPPMFormat',\n  },\n  {\n    id: 4,\n    label: 'δ (Hz) :',\n    checkController: 'showDeltaHz',\n    formatController: 'deltaHzFormat',\n  },\n  {\n    id: 5,\n    label: 'Peak Width',\n    checkController: 'showPeakWidth',\n    formatController: 'peakWidthFormat',\n  },\n  {\n    id: 6,\n    label: 'Intensity :',\n    checkController: 'showIntensity',\n    formatController: 'intensityFormat',\n  },\n];\ninterface PeaksPreferencesInnerProps {\n  nucleus: Array<string>;\n  preferences: any;\n  innerRef: any;\n}\n\nfunction PeaksPreferencesInner({\n  nucleus,\n  preferences,\n  innerRef,\n}: PeaksPreferencesInnerProps) {\n  const alert = useAlert();\n  const formRef = useRef<any>(null);\n\n  const updateValues = useCallback(() => {\n    if (nucleus) {\n      const defaultValues = nucleus.reduce((acc, nucleusLabel) => {\n        acc[nucleusLabel] = peaksDefaultValues;\n        return acc;\n      }, {});\n      const peaksPreferences = getValueByKeyPath(\n        preferences.current,\n        `formatting.panels.peaks`,\n      );\n      formRef.current.setValues(\n        peaksPreferences ? peaksPreferences : defaultValues,\n      );\n    }\n  }, [nucleus, preferences]);\n\n  useEffect(() => {\n    updateValues();\n  }, [updateValues]);\n\n  const saveHandler = useCallback(\n    (values) => {\n      preferences.dispatch({\n        type: 'SET_PANELS_PREFERENCES',\n        payload: { key: 'peaks', value: values },\n      });\n      alert.success('Peaks preferences saved successfully');\n    },\n    [alert, preferences],\n  );\n\n  useImperativeHandle(\n    innerRef,\n    () => ({\n      saveSetting: () => {\n        formRef.current.submitForm();\n      },\n    }),\n    [],\n  );\n\n  return (\n    <div style={styles.container}>\n      <FormikForm onSubmit={saveHandler} ref={formRef}>\n        {nucleus?.map((nucleusLabel) => (\n          <div key={nucleusLabel} style={styles.groupContainer}>\n            <IsotopesViewer style={styles.header} value={nucleusLabel} />\n            {formatFields.map((field) => (\n              <FormikColumnFormatField\n                key={field.id}\n                label={field.label}\n                checkControllerName={`${nucleusLabel}.${field.checkController}`}\n                formatControllerName={`${nucleusLabel}.${field.formatController}`}\n                hideFormat={field.formatController === 'deltaPPMFormat'}\n              />\n            ))}\n          </div>\n        ))}\n      </FormikForm>\n    </div>\n  );\n}\n\nconst MemoizedPeaksPreferences = memo(PeaksPreferencesInner);\n\n// TODO: remove this hacky use of ref.\nfunction PeaksPreferences(props, ref: any) {\n  const nucleus = useNucleus();\n  const preferences = usePreferences();\n  return (\n    <MemoizedPeaksPreferences innerRef={ref} {...{ nucleus, preferences }} />\n  );\n}\n\nexport default forwardRef(PeaksPreferences);\n","import { useCallback, useMemo, memo } from 'react';\nimport { FaRegTrashAlt } from 'react-icons/fa';\n\nimport { useDispatch } from '../../context/DispatchContext';\nimport EditableColumn from '../../elements/EditableColumn';\nimport ReactTable from '../../elements/ReactTable/ReactTable';\nimport addCustomColumn, {\n  CustomColumn,\n} from '../../elements/ReactTable/utility/addCustomColumn';\nimport {\n  DELETE_PEAK_NOTATION,\n  SHIFT_SPECTRUM,\n} from '../../reducer/types/Types';\nimport formatNumber, {\n  useFormatNumberByNucleus,\n} from '../../utility/FormatNumber';\nimport { getValue } from '../../utility/LocalStorage';\nimport NoTableData from '../extra/placeholder/NoTableData';\nimport { peaksDefaultValues } from '../extra/preferences/defaultValues';\n\ninterface PeaksTableProps {\n  activeTab: string;\n  preferences: any;\n  data: any;\n  info: {\n    nucleus: string;\n  };\n}\n\nfunction PeaksTable({ activeTab, preferences, data, info }: PeaksTableProps) {\n  const dispatch = useDispatch();\n  const format = useFormatNumberByNucleus(info.nucleus);\n\n  const deletePeakHandler = useCallback(\n    (e, row) => {\n      e.preventDefault();\n      e.stopPropagation();\n      const params = row.original;\n      dispatch({\n        type: DELETE_PEAK_NOTATION,\n        data: { id: params.id, xIndex: params.xIndex },\n      });\n    },\n    [dispatch],\n  );\n\n  const peaksPreferences = useMemo(\n    () =>\n      getValue(\n        preferences.current,\n        `formatting.panels.peaks.[${activeTab}]`,\n        peaksDefaultValues,\n      ),\n    [activeTab, preferences],\n  );\n\n  const saveDeltaPPMRefsHandler = useCallback(\n    (event, row) => {\n      const shiftValue = parseFloat(event.target.value) - parseFloat(row.value);\n      dispatch({ type: SHIFT_SPECTRUM, shiftValue });\n    },\n    [dispatch],\n  );\n  const COLUMNS: (CustomColumn & { showWhen: string })[] = useMemo(\n    () => [\n      {\n        showWhen: 'showPeakNumber',\n        index: 1,\n        Header: '#',\n        Cell: ({ row }) => row.index + 1,\n        style: { width: '1%', maxWidth: '40px', minWidth: '40px' },\n      },\n      {\n        showWhen: 'showPeakIndex',\n        index: 2,\n        Header: 'index',\n        accessor: (row) =>\n          formatNumber(row.xIndex, peaksPreferences.peakIndexFormat),\n      },\n      {\n        showWhen: 'showDeltaPPM',\n        index: 3,\n        Header: 'δ (ppm)',\n        accessor: (row) => format(row.value),\n        Cell: ({ row }) => (\n          <EditableColumn\n            value={format(row.original.value)}\n            onSave={(event) => saveDeltaPPMRefsHandler(event, row.original)}\n            type=\"number\"\n          />\n        ),\n      },\n      {\n        showWhen: 'showDeltaHz',\n        index: 4,\n        Header: 'δ (Hz)',\n        accessor: (row) =>\n          formatNumber(row.valueHz, peaksPreferences.deltaHzFormat),\n      },\n      {\n        showWhen: 'showIntensity',\n        index: 5,\n        Header: 'Intensity',\n        style: { maxWidth: '80px' },\n        accessor: (row) =>\n          formatNumber(row.intensity, peaksPreferences.intensityFormat),\n      },\n      {\n        showWhen: 'showPeakWidth',\n        index: 6,\n        Header: 'Peak Width',\n        accessor: (row) =>\n          formatNumber(row.peakWidth, peaksPreferences.peakWidthFormat),\n      },\n    ],\n    [format, peaksPreferences, saveDeltaPPMRefsHandler],\n  );\n\n  const initialColumns: CustomColumn[] = useMemo(\n    () => [\n      {\n        index: 20,\n        Header: '',\n        style: {\n          width: '1%',\n          maxWidth: '24px',\n          minWidth: '24px',\n        },\n        id: 'delete-button',\n        Cell: ({ row }) => (\n          <button\n            type=\"button\"\n            className=\"delete-button\"\n            onClick={(e) => deletePeakHandler(e, row)}\n          >\n            <FaRegTrashAlt />\n          </button>\n        ),\n      },\n    ],\n    [deletePeakHandler],\n  );\n\n  const tableColumns = useMemo(() => {\n    let columns = [...initialColumns];\n    for (const col of COLUMNS) {\n      const { showWhen, ...colParams } = col;\n      if (peaksPreferences[showWhen]) {\n        addCustomColumn(columns, colParams);\n      }\n    }\n\n    return columns.sort((object1, object2) => object1.index - object2.index);\n  }, [COLUMNS, initialColumns, peaksPreferences]);\n\n  return data && data.length > 0 ? (\n    <ReactTable\n      data={data}\n      columns={tableColumns}\n      approxItemHeight={20}\n      enableVirtualScroll\n    />\n  ) : (\n    <NoTableData />\n  );\n}\n\nexport default memo(PeaksTable);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useMemo, useState, useRef, memo } from 'react';\n\nimport { Datum1D, Info1D, Peaks } from '../../../data/types/data1d';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { usePreferences } from '../../context/PreferencesContext';\nimport { useModal } from '../../elements/popup/Modal';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport { DELETE_PEAK_NOTATION } from '../../reducer/types/Types';\nimport { useFormatNumberByNucleus } from '../../utility/FormatNumber';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\nimport PreferencesHeader from '../header/PreferencesHeader';\n\nimport PeaksPreferences from './PeaksPreferences';\nimport PeaksTable from './PeaksTable';\n\ninterface PeaksPanelInnerProps {\n  peaks: Peaks;\n  xDomain: number[];\n  activeTab: string;\n  preferences: any;\n  info: Info1D;\n}\n\nfunction PeaksPanelInner({\n  peaks,\n  info,\n  xDomain,\n  activeTab,\n  preferences,\n}: PeaksPanelInnerProps) {\n  const [filterIsActive, setFilterIsActive] = useState(false);\n  const [isFlipped, setFlipStatus] = useState(false);\n  const format = useFormatNumberByNucleus(info.nucleus);\n\n  const dispatch = useDispatch();\n  const modal = useModal();\n\n  const settingRef = useRef<any>();\n\n  const yesHandler = useCallback(() => {\n    dispatch({ type: DELETE_PEAK_NOTATION, data: null });\n  }, [dispatch]);\n\n  const handleDeleteAll = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All records will be deleted, Are You sure?',\n      buttons: [{ text: 'Yes', handler: yesHandler }, { text: 'No' }],\n    });\n  }, [modal, yesHandler]);\n\n  const settingsPanelHandler = useCallback(() => {\n    setFlipStatus(!isFlipped);\n  }, [isFlipped]);\n\n  const saveSettingHandler = useCallback(() => {\n    settingRef.current.saveSetting();\n    setFlipStatus(false);\n  }, []);\n\n  const handleOnFilter = useCallback(() => {\n    setFilterIsActive(!filterIsActive);\n  }, [filterIsActive]);\n\n  const filteredPeaks = useMemo(() => {\n    function isInRange(value) {\n      const factor = 100000;\n      return (\n        value * factor >= xDomain[0] * factor &&\n        value * factor <= xDomain[1] * factor\n      );\n    }\n    if (peaks?.values) {\n      const _peaks = filterIsActive\n        ? peaks.values.filter((peak) => isInRange(peak.x))\n        : peaks.values;\n\n      return _peaks\n        .map((peak) => {\n          const value = Number(format(peak.x));\n          return {\n            value: value,\n            valueHz: info?.originFrequency\n              ? Number(value) * info.originFrequency\n              : '',\n            id: peak.id,\n            intensity: peak.y,\n            peakWidth: peak.width ? peak.width : '',\n            isConstantlyHighlighted: isInRange(value),\n          };\n        })\n        .sort((prev, next) => prev.value - next.value);\n    }\n\n    return [];\n  }, [filterIsActive, format, info, peaks, xDomain]);\n\n  return (\n    <div\n      css={[\n        tablePanelStyle,\n        isFlipped &&\n          css`\n            .table-container {\n              table,\n              th {\n                position: relative !important;\n              }\n            }\n          `,\n      ]}\n    >\n      {!isFlipped && (\n        <DefaultPanelHeader\n          counter={peaks?.values?.length}\n          onDelete={handleDeleteAll}\n          deleteToolTip=\"Delete All Peaks\"\n          onFilter={handleOnFilter}\n          filterToolTip={\n            filterIsActive ? 'Show all peaks' : 'Hide peaks out of view'\n          }\n          filterIsActive={filterIsActive}\n          counterFiltered={filteredPeaks.length}\n          showSettingButton\n          onSettingClick={settingsPanelHandler}\n        />\n      )}\n      {isFlipped && (\n        <PreferencesHeader\n          onSave={saveSettingHandler}\n          onClose={settingsPanelHandler}\n        />\n      )}\n      <div className=\"inner-container\">\n        {!isFlipped ? (\n          <PeaksTable\n            data={filteredPeaks}\n            activeTab={activeTab}\n            preferences={preferences}\n            info={info}\n          />\n        ) : (\n          <PeaksPreferences ref={settingRef} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst MemoizedPeaksPanel = memo(PeaksPanelInner);\n\nconst emptyData = { peaks: null, info: {} };\n\nexport default function PeaksPanel() {\n  const { xDomain, activeTab } = useChartData();\n  const { peaks, info } = useSpectrum(emptyData) as Datum1D;\n  const preferences = usePreferences();\n\n  return (\n    <MemoizedPeaksPanel {...{ peaks, info, xDomain, activeTab, preferences }} />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FaCopy } from 'react-icons/fa';\n\nimport CloseButton from '../elements/CloseButton';\n\nconst styles = css`\n  overflow: auto;\n  width: 400px;\n  .innerContainer {\n    padding: 5px;\n    width: 100%;\n    height: 180px;\n    border: none;\n  }\n\n  .mainButtonsContainer {\n    padding: 5px 0px;\n    border-bottom: 0.55px solid #ebebeb;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  button {\n    background-color: transparent;\n    border: none;\n    padding: 0 5px;\n  }\n\n  button:disabled {\n    opacity: 0.6;\n  }\n`;\n\ninterface CopyClipboardModalProps {\n  text: string;\n  onClose: () => void;\n  onCopyClick: (text: string) => void;\n}\n\nfunction CopyClipboardModal({\n  text,\n  onClose,\n  onCopyClick,\n}: CopyClipboardModalProps) {\n  return (\n    <div css={styles}>\n      <div className=\"mainButtonsContainer handle\">\n        <button type=\"button\" onClick={() => onCopyClick(text)}>\n          <FaCopy />\n        </button>\n\n        <CloseButton onClick={onClose} />\n      </div>\n      <div\n        className=\"innerContainer\"\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={{ __html: text }}\n      />\n    </div>\n  );\n}\n\nexport default CopyClipboardModal;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { SvgNmrIntegrate, SvgNmrSum } from 'cheminfo-font';\nimport lodashGet from 'lodash/get';\nimport { rangesToACS } from 'nmr-processing';\nimport { useCallback } from 'react';\nimport { FaFileExport, FaUnlink, FaSitemap, FaChartBar } from 'react-icons/fa';\nimport { ImLink } from 'react-icons/im';\n\nimport { useAssignmentData } from '../../assignment/AssignmentsContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { usePreferences } from '../../context/PreferencesContext';\nimport Button from '../../elements/ButtonToolTip';\nimport ToggleButton from '../../elements/ToggleButton';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { useModal } from '../../elements/popup/Modal';\nimport CopyClipboardModal from '../../modal/CopyClipboardModal';\nimport ChangeSumModal from '../../modal/changeSum/ChangeSumModal';\nimport {\n  CHANGE_RANGES_SUM_FLAG,\n  CHANGE_RANGE_SUM,\n  DELETE_RANGE,\n  SHOW_J_GRAPH,\n  SHOW_MULTIPLICTY_TREES,\n  SHOW_RANGES_INTEGRALS,\n} from '../../reducer/types/Types';\nimport { copyHTMLToClipboard } from '../../utility/Export';\nimport { getNumberOfDecimals } from '../../utility/FormatNumber';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\n\nconst style = css`\n  .btn {\n    background-color: transparent;\n    border: none;\n  }\n\n  .icon svg {\n    font-size: 12px;\n  }\n\n  .preview-publication-icon svg {\n    font-size: 13px;\n  }\n\n  button {\n    margin-right: 2px;\n  }\n`;\n\nfunction RangesHeader({\n  ranges,\n  info,\n  onUnlink,\n  onFilterActivated,\n  onSettingClick,\n  isFilterActive,\n  filterCounter,\n  showMultiplicityTrees,\n  showJGraph,\n  showRangesIntegrals,\n}) {\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const alert = useAlert();\n  const preferences = usePreferences();\n  const assignmentData = useAssignmentData();\n\n  const currentSum = lodashGet(ranges, 'options.sum', null);\n\n  const changeRangesSumHandler = useCallback(\n    (value) => {\n      dispatch({ type: CHANGE_RANGE_SUM, value });\n      modal.close();\n    },\n    [dispatch, modal],\n  );\n\n  const showChangeRangesSumModal = useCallback(() => {\n    modal.show(\n      <ChangeSumModal\n        onClose={() => modal.close()}\n        onSave={changeRangesSumHandler}\n        header={\n          currentSum\n            ? `Set new Ranges Sum (Current: ${Number(currentSum).toFixed(2)})`\n            : 'Set new Ranges Sum'\n        }\n        sumOptions={ranges?.options}\n      />,\n    );\n  }, [changeRangesSumHandler, currentSum, modal, ranges?.options]);\n\n  const removeAssignments = useCallback(() => {\n    onUnlink();\n  }, [onUnlink]);\n\n  const handleOnRemoveAssignments = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All assignments will be removed. Are you sure?',\n      buttons: [{ text: 'Yes', handler: removeAssignments }, { text: 'No' }],\n    });\n  }, [removeAssignments, modal]);\n\n  const handleDeleteAll = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All ranges will be deleted. Are You sure?',\n      buttons: [\n        {\n          text: 'Yes',\n          handler: () => {\n            dispatch({\n              type: DELETE_RANGE,\n              payload: { data: { assignmentData } },\n            });\n          },\n        },\n        { text: 'No' },\n      ],\n    });\n  }, [assignmentData, dispatch, modal]);\n\n  const handleSetShowMultiplicityTrees = useCallback(() => {\n    dispatch({ type: SHOW_MULTIPLICTY_TREES });\n  }, [dispatch]);\n\n  const handleShowIntegrals = useCallback(() => {\n    dispatch({ type: SHOW_RANGES_INTEGRALS });\n  }, [dispatch]);\n\n  const handleShowJGraph = useCallback(() => {\n    dispatch({ type: SHOW_J_GRAPH });\n  }, [dispatch]);\n\n  const saveToClipboardHandler = useCallback(\n    (value) => {\n      void (async () => {\n        const success = await copyHTMLToClipboard(value);\n        if (success) {\n          alert.success('Data copied to clipboard');\n        } else {\n          alert.error('copy to clipboard failed');\n        }\n      })();\n    },\n    [alert],\n  );\n\n  const saveAsHTMLHandler = useCallback(() => {\n    const { originFrequency: observedFrequency, nucleus } = info;\n    const format = lodashGet(\n      preferences.current,\n      `formatting.nuclei[${nucleus.toLowerCase()}]`,\n      '0.0',\n    );\n    const nbDecimalDelta = getNumberOfDecimals(format.ppm);\n    const nbDecimalJ = getNumberOfDecimals(format.hz);\n\n    const result = rangesToACS(ranges.values, {\n      nucleus, // '19f'\n      nbDecimalDelta, // 2\n      nbDecimalJ, // 1\n      observedFrequency, //400\n    });\n    modal.show(\n      <CopyClipboardModal\n        text={result}\n        onCopyClick={saveToClipboardHandler}\n        onClose={() => modal.close()}\n      />,\n      {},\n    );\n  }, [info, modal, preferences, ranges.values, saveToClipboardHandler]);\n\n  const changeSumConstantFlagHandler = useCallback(\n    (flag) => {\n      dispatch({\n        type: CHANGE_RANGES_SUM_FLAG,\n        payload: flag,\n      });\n    },\n    [dispatch],\n  );\n\n  return (\n    <div css={style}>\n      <DefaultPanelHeader\n        counter={ranges?.values?.length}\n        onDelete={handleDeleteAll}\n        deleteToolTip=\"Delete All Ranges\"\n        onFilter={onFilterActivated}\n        filterToolTip={\n          isFilterActive ? 'Show all ranges' : 'Hide ranges out of view'\n        }\n        filterIsActive={isFilterActive}\n        counterFiltered={filterCounter}\n        showSettingButton\n        onSettingClick={onSettingClick}\n      >\n        <Button\n          popupTitle=\"Preview publication string\"\n          popupPlacement=\"right\"\n          onClick={saveAsHTMLHandler}\n          className=\"btn preview-publication-icon\"\n        >\n          <FaFileExport />\n        </Button>\n        <Button\n          popupTitle={\n            currentSum\n              ? `Change Ranges Sum (${Number(currentSum).toFixed(2)})`\n              : 'Change Ranges Sum'\n          }\n          popupPlacement=\"right\"\n          onClick={showChangeRangesSumModal}\n          className=\"btn icon\"\n        >\n          <SvgNmrSum />\n        </Button>\n        <Button\n          popupTitle=\"Remove all Assignments\"\n          popupPlacement=\"right\"\n          onClick={handleOnRemoveAssignments}\n          disabled={!ranges || !ranges.values || ranges.values.length === 0}\n          className=\"btn icon\"\n        >\n          <FaUnlink />\n        </Button>\n        <ToggleButton\n          popupTitle={\n            showMultiplicityTrees\n              ? 'Hide Multiplicity Trees in Spectrum'\n              : 'Show Multiplicity Trees in Spectrum'\n          }\n          popupPlacement=\"right\"\n          onClick={handleSetShowMultiplicityTrees}\n          disabled={!ranges || !ranges.values || ranges.values.length === 0}\n        >\n          <FaSitemap style={{ pointerEvents: 'none', fontSize: '12px' }} />\n        </ToggleButton>\n        <ToggleButton\n          popupTitle={showJGraph ? 'Hide J Graph' : 'Show J Graph'}\n          popupPlacement=\"right\"\n          onClick={handleShowJGraph}\n          disabled={!ranges || !ranges.values || ranges.values.length === 0}\n        >\n          <FaChartBar style={{ pointerEvents: 'none', fontSize: '12px' }} />\n        </ToggleButton>\n        <ToggleButton\n          popupTitle={showRangesIntegrals ? 'Hide integrals' : 'Show integrals'}\n          popupPlacement=\"right\"\n          onClick={handleShowIntegrals}\n          defaultValue={showRangesIntegrals}\n          disabled={!ranges || !ranges.values || ranges.values.length === 0}\n        >\n          <SvgNmrIntegrate\n            style={{ pointerEvents: 'none', fontSize: '12px' }}\n          />\n        </ToggleButton>\n\n        <ToggleButton\n          className=\"icon\"\n          popupTitle=\"fix integral values\"\n          popupPlacement=\"right\"\n          onClick={changeSumConstantFlagHandler}\n        >\n          <ImLink />\n        </ToggleButton>\n      </DefaultPanelHeader>\n    </div>\n  );\n}\n\nexport default RangesHeader;\n","import {\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  memo,\n  CSSProperties,\n  forwardRef,\n} from 'react';\n\nimport { usePreferences } from '../../context/PreferencesContext';\nimport IsotopesViewer from '../../elements/IsotopesViewer';\nimport Label from '../../elements/Label';\nimport FormikColumnFormatField from '../../elements/formik/FormikColumnFormatField';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikInput from '../../elements/formik/FormikInput';\nimport { useAlert } from '../../elements/popup/Alert';\nimport useNucleus from '../../hooks/useNucleus';\nimport { getValue as getValueByKeyPath } from '../../utility/LocalStorage';\nimport { getRangeDefaultValues } from '../extra/preferences/defaultValues';\n\nconst styles: Record<\n  | 'container'\n  | 'groupContainer'\n  | 'row'\n  | 'header'\n  | 'inputLabel'\n  | 'inputWrapper',\n  CSSProperties\n> = {\n  container: {\n    padding: 10,\n    backgroundColor: '#f1f1f1',\n    height: '100%',\n    overflowY: 'auto',\n  },\n  groupContainer: {\n    padding: '5px',\n    borderRadius: '5px',\n    margin: '10px 0px',\n    backgroundColor: 'white',\n  },\n  row: {\n    display: 'flex',\n    margin: '5px 0px',\n  },\n  header: {\n    borderBottom: '1px solid #e8e8e8',\n    paddingBottom: '5px',\n    fontWeight: 'bold',\n    color: '#4a4a4a',\n  },\n  inputLabel: {\n    flex: 2,\n  },\n\n  inputWrapper: {\n    width: '100px',\n    flex: '4',\n    borderRadius: '5px',\n  },\n};\n\nconst formatFields = [\n  {\n    id: 1,\n    label: 'From :',\n    checkController: 'showFrom',\n    formatController: 'fromFormat',\n  },\n  {\n    id: 2,\n    label: 'To :',\n    checkController: 'showTo',\n    formatController: 'toFormat',\n  },\n  {\n    id: 3,\n    label: 'Absolute :',\n    checkController: 'showAbsolute',\n    formatController: 'absoluteFormat',\n  },\n  {\n    id: 4,\n    label: 'Relative :',\n    checkController: 'showRelative',\n    formatController: 'relativeFormat',\n  },\n];\n\ninterface RangesPreferencesInnerProps {\n  nucleus: Array<string>;\n  preferences: any;\n  innerRef: any;\n}\n\nfunction RangesPreferencesInner({\n  nucleus,\n  preferences,\n  innerRef,\n}: RangesPreferencesInnerProps) {\n  const alert = useAlert();\n  const formRef = useRef<any>();\n\n  const updateValues = useCallback(() => {\n    if (nucleus) {\n      const defaultValues = nucleus.reduce((acc, nucleusLabel) => {\n        acc[nucleusLabel] = getRangeDefaultValues(nucleusLabel);\n        return acc;\n      }, {});\n      const rangesPreferences = getValueByKeyPath(\n        preferences.current,\n        `formatting.panels.ranges`,\n      );\n      formRef.current.setValues(\n        rangesPreferences ? rangesPreferences : defaultValues,\n      );\n    }\n  }, [nucleus, preferences]);\n\n  useEffect(() => {\n    updateValues();\n  }, [updateValues]);\n\n  const saveHandler = useCallback(\n    (values) => {\n      preferences.dispatch({\n        type: 'SET_PANELS_PREFERENCES',\n        payload: { key: 'ranges', value: values },\n      });\n      alert.success('ranges preferences saved successfully');\n    },\n    [alert, preferences],\n  );\n\n  useImperativeHandle(\n    innerRef,\n    () => ({\n      saveSetting: () => {\n        formRef.current.submitForm();\n      },\n    }),\n    [],\n  );\n\n  return (\n    <div style={styles.container}>\n      <FormikForm onSubmit={saveHandler} ref={formRef}>\n        {nucleus?.map((nucleusLabel) => (\n          <div key={nucleusLabel} style={styles.groupContainer}>\n            <IsotopesViewer style={styles.header} value={nucleusLabel} />\n            {formatFields.map((field) => (\n              <FormikColumnFormatField\n                key={field.id}\n                label={field.label}\n                checkControllerName={`${nucleusLabel}.${field.checkController}`}\n                formatControllerName={`${nucleusLabel}.${field.formatController}`}\n              />\n            ))}\n            <Label\n              title=\"J Graph tolerance (Hz) :\"\n              style={{ label: styles.inputLabel, wrapper: styles.inputWrapper }}\n            >\n              <FormikInput\n                name={`${nucleusLabel}.jGraphTolerance`}\n                type=\"number\"\n              />\n            </Label>\n          </div>\n        ))}\n      </FormikForm>\n    </div>\n  );\n}\n\nconst MemoizedRangesPreferences = memo(RangesPreferencesInner);\n\n// TODO: remove this hacky use of ref.\nfunction RangesPreferences(prop, ref: any) {\n  const nucleus = useNucleus();\n\n  const preferences = usePreferences();\n  return (\n    <MemoizedRangesPreferences\n      innerRef={ref}\n      {...{\n        preferences,\n        nucleus,\n      }}\n    />\n  );\n}\n\nexport default forwardRef(RangesPreferences);\n","import lodashGet from 'lodash/get';\nimport { useCallback, useMemo, useState } from 'react';\n\nexport enum SortType {\n  ASCENDING = 'asc',\n  DESCENDING = 'desc',\n  ORIGINAL = 'original',\n}\n\ninterface SortConfig {\n  key: string;\n  direction: SortType;\n}\n\nexport default function useTableSortBy(items, config = null) {\n  const [sortConfig, setSortConfig] = useState<SortConfig | null>(config);\n  const sortedItems = useMemo(() => {\n    const sortableItems = items.slice();\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (sortConfig.direction === SortType.ASCENDING) {\n          return (\n            lodashGet(a, sortConfig.key, 0) - lodashGet(b, sortConfig.key, 0)\n          );\n        } else if (sortConfig.direction === SortType.DESCENDING) {\n          return (\n            lodashGet(b, sortConfig.key, 0) - lodashGet(a, sortConfig.key, 0)\n          );\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const sortHandler = useCallback(\n    (event) => {\n      const key = event.currentTarget?.id;\n      let direction = SortType.ASCENDING;\n      if (key && sortConfig && sortConfig.key === key) {\n        switch (sortConfig.direction) {\n          case SortType.ASCENDING:\n            direction = SortType.DESCENDING;\n\n            break;\n          case SortType.DESCENDING:\n            direction = SortType.ORIGINAL;\n\n            break;\n          default:\n            direction = SortType.ASCENDING;\n\n            break;\n        }\n      }\n      setSortConfig({ key, direction });\n    },\n    [sortConfig],\n  );\n\n  const isSortedDesc = useCallback(\n    (columnName): { flag: boolean | null; content: string } => {\n      const defaultContent = { flag: null, content: ' ' };\n\n      if (!sortConfig || sortConfig.key !== columnName) {\n        return defaultContent;\n      }\n      switch (sortConfig.direction) {\n        case SortType.DESCENDING:\n          return { flag: true, content: ' ▼' };\n\n        case SortType.ASCENDING:\n          return { flag: false, content: ' ▲' };\n\n        default:\n          return defaultContent;\n      }\n    },\n    [sortConfig],\n  );\n\n  return { items: sortedItems, isSortedDesc, onSort: { onClick: sortHandler } };\n}\n","import lodashGet from 'lodash/get';\n\nimport FormatNumber from '../../../utility/FormatNumber';\n\nexport default class ColumnsHelper {\n  private preferences: any;\n  private defaultPreference: any;\n\n  public constructor(preferences, defaultPreference) {\n    this.preferences = preferences;\n    this.defaultPreference = defaultPreference;\n  }\n\n  public checkPreferences(preferencesToCheck, key) {\n    const val =\n      preferencesToCheck === undefined ||\n      Object.keys(preferencesToCheck).length === 0 ||\n      (preferencesToCheck && preferencesToCheck[key] === true)\n        ? true\n        : false;\n\n    return val;\n  }\n\n  public setCustomColumn(array, index, columnLabel, cellHandler) {\n    array.push({\n      orderIndex: index,\n      Header: columnLabel,\n      sortType: 'basic',\n      Cell: ({ row }) => cellHandler(row),\n    });\n  }\n\n  public addColumn(\n    columns: string,\n    flagKey: string,\n    formatKey: string,\n    columnKey: string,\n    columnLabel: string,\n    columnIndex: string,\n    options: {\n      formatPrefix?: string;\n      formatSuffix?: string;\n      showPrefixSuffixCallback?: (element: any) => boolean;\n    } = {},\n  ) {\n    const preferences = this.preferences || this.defaultPreference;\n\n    if (this.checkPreferences(preferences, flagKey)) {\n      this.setCustomColumn(columns, columnIndex, columnLabel, (row) => {\n        const format =\n          preferences &&\n          Object.prototype.hasOwnProperty.call(preferences, formatKey)\n            ? preferences[formatKey]\n            : this.defaultPreference[formatKey];\n\n        const {\n          formatPrefix = '',\n          formatSuffix = '',\n          showPrefixSuffixCallback = () => true,\n        } = options;\n\n        if (showPrefixSuffixCallback(row)) {\n          return FormatNumber(\n            row.original[columnKey],\n            format,\n            formatPrefix,\n            formatSuffix,\n          );\n        } else {\n          return FormatNumber(row.original[columnKey], format, '', '');\n        }\n      });\n    }\n  }\n}\n\nexport function isColumnVisible(preferences, key) {\n  return lodashGet(preferences, key, false);\n}\n","import { CSSProperties } from 'react';\n\nimport FormatNumber from '../../../utility/FormatNumber';\n\ninterface AbsoluteColumnProps {\n  value: any;\n  onHoverRange: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n  rowSpanTags: {\n    rowSpan: any;\n    style: CSSProperties;\n  };\n  format: string;\n}\n\nfunction AbsoluteColumn({\n  rowSpanTags,\n  value,\n  onHoverRange,\n  format,\n}: AbsoluteColumnProps) {\n  return (\n    <td {...rowSpanTags} {...onHoverRange}>\n      {FormatNumber(value, format)}\n    </td>\n  );\n}\n\nexport default AbsoluteColumn;\n","import { useFormikContext } from 'formik';\nimport { useEffect } from 'react';\n\ninterface FormikOnChangeProps {\n  onChange?: (any) => void;\n  enableValidation?: boolean;\n}\n\nconst FormikOnChange = (props: FormikOnChangeProps) => {\n  const { onChange = () => null, enableValidation = true } = props;\n  const { values, errors } = useFormikContext();\n\n  useEffect(() => {\n    if (enableValidation) {\n      if (Object.keys(errors).length === 0) {\n        onChange(values);\n      }\n    } else {\n      onChange(values);\n    }\n  }, [values, enableValidation, errors, onChange]);\n\n  return null;\n};\n\nexport default FormikOnChange;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport { forwardRef, useCallback, useMemo } from 'react';\nimport { FaPlus } from 'react-icons/fa';\nimport * as Yup from 'yup';\n\nimport { useChartData } from '../../../../context/ChartContext';\nimport Button from '../../../../elements/Button';\nimport FormikForm from '../../../../elements/formik/FormikForm';\nimport FormikInput from '../../../../elements/formik/FormikInput';\nimport { translateMultiplet } from '../../../../panels/extra/utilities/MultiplicityUtilities';\nimport { useFormatNumberByNucleus } from '../../../../utility/FormatNumber';\n\nconst styles = {\n  container: css`\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    padding: 0.4rem;\n  `,\n  inputInfo: css`\n    font-size: 10px;\n    color: black;\n    font-weight: bold;\n  `,\n  infoText: css`\n    padding: 10px;\n    font-size: 13px;\n  `,\n\n  signalContainer: css`\n    border: 0.55px solid #dedede;\n  `,\n  inputContainer: css`\n    display: flex;\n    justify-content: center;\n  `,\n  addSignalBtn: css`\n    margin-top: 15px;\n    margin-top: 20px;\n    width: 100%;\n    background-color: #fcfcfc;\n    border-top: 0.55px solid #dedede;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    padding: 0.4rem;\n    font-size: 12px;\n\n    & :disabled {\n      opacity: 0.6;\n    }\n  `,\n};\n\ninterface AddSignalFormTabProps {\n  onFocus: (element: any) => void;\n  onBlur?: () => void;\n  range: any;\n}\n\n// TODO: this seems to be a hacky use of ref.\nfunction AddSignalFormTab(\n  { onFocus, onBlur, range }: AddSignalFormTabProps,\n  ref: any,\n) {\n  const { values, setFieldValue } = useFormikContext<any>();\n  const { activeTab } = useChartData();\n  const format = useFormatNumberByNucleus(activeTab);\n\n  const saveHandler = useCallback(\n    (val) => {\n      const newSignal = {\n        multiplicity: 'm',\n        kind: 'signal',\n        delta: Number(val.newSignalDelta),\n        js: [{ multiplicity: translateMultiplet('m'), coupling: '' }],\n      };\n      const _signals = values.signals.slice().concat(newSignal);\n\n      setFieldValue('signals', _signals);\n      setFieldValue('activeTab', String(_signals.length - 1));\n    },\n    [setFieldValue, values.signals],\n  );\n\n  const validation = useMemo(() => {\n    return Yup.object().shape({\n      newSignalDelta: Yup.number()\n        .test(`test-range`, '', function testNewSignalDelta(value) {\n          const { path, createError } = this;\n          if (value && value > range.from && value < range.to) {\n            return true;\n          }\n\n          const errorMessage = ` ${\n            value ? value.toFixed(5) : 0\n          } ppm out of the range`;\n          return createError({ path, message: errorMessage });\n        })\n        .required(),\n    });\n  }, [range]);\n\n  const triggerSubmitHandler = useCallback(() => {\n    ref.current.submitForm();\n  }, [ref]);\n\n  return (\n    <div css={styles.container}>\n      <div>\n        <p css={styles.infoText}>\n          Edit or select a delta value of new signal (ppm):\n        </p>\n        <FormikForm\n          ref={ref}\n          validationSchema={validation}\n          initialValues={{\n            newSignalDelta: (range.from + range.to) / 2,\n          }}\n          onSubmit={saveHandler}\n        >\n          <div css={styles.inputContainer}>\n            <FormikInput\n              name=\"newSignalDelta\"\n              type=\"number\"\n              placeholder={`𝛅 (ppm)`}\n              onFocus={onFocus}\n              onBlur={onBlur}\n              style={{\n                input: {\n                  width: '250px',\n                  height: '30px',\n                },\n              }}\n              checkErrorAfterInputTouched={false}\n            />\n          </div>\n          <p css={styles.inputInfo}>\n            [ {`${format(range.from)} ppm - ${format(range.to)} ppm`} ]\n          </p>\n\n          <Button css={styles.addSignalBtn} onClick={triggerSubmitHandler}>\n            <FaPlus title=\"Add new signal\" />\n          </Button>\n        </FormikForm>\n      </div>\n    </div>\n  );\n}\n\nexport default forwardRef(AddSignalFormTab);\n","import { CSSProperties } from 'react';\n\nimport FormikInput from '../../../../elements/formik/FormikInput';\nimport { translateMultiplet } from '../../../../panels/extra/utilities/MultiplicityUtilities';\n\nconst style: Record<'input', CSSProperties> = {\n  input: {\n    width: '50px',\n    height: '26px',\n    borderWidth: 0,\n    margin: '0 5px',\n  },\n};\n\ninterface DeltaInputProps {\n  signal: any;\n  index: number;\n  onFocus: (element: any) => void;\n}\n\nfunction DeltaInput({ signal, index, onFocus }: DeltaInputProps) {\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <span>𝛅: </span>\n      <FormikInput\n        name={`signals.${index}.delta`}\n        type=\"number\"\n        placeholder={'J (Hz)'}\n        onFocus={onFocus}\n        style={style}\n        checkErrorAfterInputTouched={false}\n      />\n      <span>\n        {signal.js\n          .map((_coupling) => translateMultiplet(_coupling.multiplicity))\n          .join('')}\n      </span>\n    </div>\n  );\n}\n\nexport default DeltaInput;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { memo, useMemo, useCallback } from 'react';\nimport { FaPlus, FaRegTrashAlt } from 'react-icons/fa';\n\nimport { Multiplets } from '../../../../../data/constants/Multiplets';\nimport Button from '../../../../elements/Button';\nimport FormikInput from '../../../../elements/formik/FormikInput';\nimport FormikSelect from '../../../../elements/formik/FormikSelect';\nimport {\n  hasCouplingConstant,\n  translateMultiplet,\n} from '../../../../panels/extra/utilities/MultiplicityUtilities';\n\nconst CouplingsTableStyle = css`\n  border-spacing: 0;\n  border: 1px solid #dedede;\n  width: 100%;\n  height: 100%;\n  font-size: 12px;\n\n  th,\n  td {\n    text-align: center;\n    margin: 0;\n    padding: 0.3rem;\n    border-bottom: 1px solid #f5f5f5;\n\n    button {\n      background-color: transparent;\n      border: none;\n    }\n\n    .add-button {\n      color: blue;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .delete-button {\n      border-radius: 25%;\n      padding: 0;\n      padding-left: 0.3rem;\n      padding-right: 0.3rem;\n    }\n    .delete-button:hover {\n      .icon {\n        color: red;\n      }\n    }\n\n    input {\n      background-color: transparent;\n      border: 0.5px solid #dedede;\n      height: 100%;\n      width: 100%;\n      text-align: center;\n    }\n    .selectBox {\n      background-color: transparent;\n      border: 0.5px solid #dedede;\n      height: 100%;\n      width: 100% !important;\n      text-align: center;\n      margin: 0;\n    }\n  }\n\n  tr {\n    :last-child {\n      background-color: #fcfcfc;\n    }\n  }\n`;\n\ninterface CouplingsTableProps {\n  push: (element: { multiplicity?: string; coupling: string }) => void;\n  remove: (element: number) => void;\n  onFocus: (element: any) => void;\n  onBlur?: () => void;\n}\n\nfunction CouplingsTable({\n  push,\n  remove,\n  onFocus,\n  onBlur,\n}: CouplingsTableProps) {\n  const { values, setFieldValue } = useFormikContext<any>();\n\n  const multiplicityChangeHandler = useCallback(\n    (value, name) => {\n      if (!hasCouplingConstant(value)) {\n        setFieldValue(name, '');\n      }\n    },\n    [setFieldValue],\n  );\n\n  const multipletsList = useMemo(() => {\n    return Multiplets.map((multiplet) => ({\n      key: multiplet.value,\n      ...multiplet,\n      value: multiplet.label,\n    }));\n  }, []);\n\n  return (\n    <table css={CouplingsTableStyle}>\n      <tbody>\n        <tr>\n          <th>#</th>\n          <th>Multiplicity</th>\n          <th>J (Hz)</th>\n          <th>{''}</th>\n        </tr>\n        {lodashGet(values, `signals[${values.activeTab}].js`, []).map(\n          (_coupling, i) => (\n            <tr\n              // eslint-disable-next-line react/no-array-index-key\n              key={`editCouplings${values.activeTab}${i}`}\n            >\n              <td>{i + 1}</td>\n              <td>\n                <FormikSelect\n                  className=\"selectBox\"\n                  name={`signals.${values.activeTab}.js.${i}.multiplicity`}\n                  data={multipletsList}\n                  onChange={(value) =>\n                    multiplicityChangeHandler(\n                      value,\n                      `signals.${values.activeTab}.js.${i}.coupling`,\n                    )\n                  }\n                />\n              </td>\n              <td>\n                <FormikInput\n                  name={`signals.${values.activeTab}.js.${i}.coupling`}\n                  type=\"number\"\n                  placeholder={'J (Hz)'}\n                  disabled={!hasCouplingConstant(_coupling.multiplicity)}\n                  onFocus={onFocus}\n                  onBlur={onBlur}\n                  style={{\n                    input: {\n                      width: '100%',\n                      height: '26px',\n                    },\n                  }}\n                  checkErrorAfterInputTouched={false}\n                />\n              </td>\n              <td>\n                <Button\n                  className=\"delete-button\"\n                  onClick={() => {\n                    remove(i);\n                  }}\n                >\n                  <FaRegTrashAlt className=\"icon\" title=\"Delete coupling\" />\n                </Button>\n              </td>\n            </tr>\n          ),\n        )}\n        <tr />\n        <tr>\n          <td colSpan={4}>\n            <Button\n              className=\"add-button\"\n              onClick={() =>\n                push({\n                  multiplicity: translateMultiplet('m'),\n                  coupling: '',\n                })\n              }\n            >\n              <FaPlus title=\"Add new coupling\" />\n            </Button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default memo(CouplingsTable);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext, FieldArray } from 'formik';\nimport { memo } from 'react';\n\nimport CouplingsTable from './CouplingsTable';\n\nconst SignalFormTabStyle = css`\n  border-spacing: 0;\n  width: 100%;\n  font-size: 12px;\n  height: 100%;\n\n  margin: 0;\n  padding: 0.4rem;\n  text-align: center;\n`;\n\ninterface SignalFormTabProps {\n  onFocus: (element: any) => void;\n  onBlur?: () => void;\n}\n\nfunction SignalFormTab({ onFocus, onBlur }: SignalFormTabProps) {\n  const { values } = useFormikContext<{ activeTab: string }>();\n\n  return (\n    <div css={SignalFormTabStyle}>\n      <FieldArray\n        name={`signals.${values.activeTab}.js`}\n        render={({ push, remove }) => (\n          <div>\n            <CouplingsTable\n              push={push}\n              remove={remove}\n              onFocus={onFocus}\n              onBlur={onBlur}\n            />\n          </div>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default memo(SignalFormTab);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport { useCallback, useMemo, memo, useEffect, useState, useRef } from 'react';\n\nimport { useChartData } from '../../../../context/ChartContext';\nimport Tab from '../../../../elements/Tab/Tab';\nimport Tabs from '../../../../elements/Tab/Tabs';\nimport useSpectrum from '../../../../hooks/useSpectrum';\nimport Events from '../../../../utility/Events';\nimport { useFormatNumberByNucleus } from '../../../../utility/FormatNumber';\n\nimport AddSignalFormTab from './AddSignalFormTab';\nimport DeltaInput from './DeltaInput';\nimport SignalFormTab from './SignalFormTab';\n\nconst textStyles = css`\n  text-align: center;\n  width: 100%;\n\n  .errorText {\n    color: red;\n  }\n\n  .infoText {\n    padding: 10px;\n    margin: 10px 0;\n    font-size: 14px;\n    text-align: left;\n    color: white;\n    background-color: #5f5f5f;\n    border-radius: 5px;\n  }\n`;\n\nconst tabStylesAddition = css`\n  color: red;\n`;\nconst tabStyles = css`\n  display: inline-grid;\n  list-style: none;\n  padding: 0.5rem 1.5rem;\n`;\n\ninterface SignalsFormProps {\n  range: number;\n}\n\nfunction SignalsForm({ range }: SignalsFormProps) {\n  const newSignalFormRef = useRef<any>();\n  const [activeField, setActiveField] = useState<string | null>(null);\n\n  const {\n    values,\n    setFieldValue,\n    errors,\n  }: {\n    values: any;\n    setFieldValue: (\n      field: string,\n      value: any,\n      shouldValidate?: boolean | undefined,\n    ) => void;\n    errors: any;\n  } = useFormikContext<any>();\n\n  const { activeTab } = useChartData();\n  const { info }: { info: any } = useSpectrum({ info: {} });\n  const format = useFormatNumberByNucleus(activeTab);\n\n  useEffect(() => {\n    function handle(event) {\n      if (info?.originFrequency && activeField) {\n        if (values.activeTab === 'addSignalTab') {\n          newSignalFormRef.current.setValues({\n            [activeField]:\n              (event.range[1] - event.range[0]) / 2 + event.range[0],\n          });\n        } else if (activeField.includes('delta')) {\n          setFieldValue(\n            activeField,\n            (event.range[1] - event.range[0]) / 2 + event.range[0],\n          );\n        } else {\n          const value = Number(\n            format(\n              Math.abs(event.range[0] - event.range[1]) * info.originFrequency,\n            ),\n          );\n          setFieldValue(activeField, value);\n        }\n      }\n\n      setActiveField(null);\n    }\n\n    Events.on('brushEnd', handle);\n\n    return () => {\n      Events.off('brushEnd', handle);\n    };\n  }, [activeField, setFieldValue, values.activeTab, format, info]);\n\n  useEffect(() => {\n    function handle(event) {\n      if (activeField) {\n        if (values.activeTab === 'addSignalTab') {\n          newSignalFormRef.current.setValues({ [activeField]: event.xPPM });\n        } else if (activeField.includes('delta')) {\n          setFieldValue(activeField, event.xPPM);\n        }\n      }\n      setActiveField(null);\n    }\n\n    Events.on('mouseClick', handle);\n\n    return () => {\n      Events.off('mouseClick', handle);\n    };\n  }, [values.activeTab, activeField, setFieldValue]);\n\n  const handleOnFocus = useCallback(\n    (event) => {\n      setActiveField(event.target.name);\n    },\n    [setActiveField],\n  );\n\n  const tapClickHandler = useCallback(\n    ({ tabid }) => {\n      setFieldValue('activeTab', tabid);\n    },\n    [setFieldValue],\n  );\n\n  const handleDeleteSignal = useCallback(\n    ({ tabid }) => {\n      const _signals = values.signals.filter(\n        (_signal, i) => i !== Number(tabid),\n      );\n      setFieldValue('signals', _signals);\n    },\n    [setFieldValue, values.signals],\n  );\n\n  useEffect(() => {\n    setFieldValue(\n      'activeTab',\n      values.signals.length > 0\n        ? (values.signals.length - 1).toString()\n        : 'addSignalTab',\n    );\n  }, [setFieldValue, values.signals.length]);\n\n  const tabContainsErrors = useCallback(\n    (i) => {\n      return errors?.signals && errors?.signals[i] ? true : false;\n    },\n    [errors],\n  );\n\n  const signalFormTabs = useMemo(() => {\n    const signalTabs =\n      values.signals.length > 0\n        ? values.signals.map((signal, i) => (\n            <Tab\n              // eslint-disable-next-line react/no-array-index-key\n              key={`signalForm${i}`}\n              tabid={`${i}`}\n              tabstyles={tabContainsErrors(i) ? tabStylesAddition : tabStyles}\n              canDelete\n              render={() => (\n                <DeltaInput signal={signal} index={i} onFocus={handleOnFocus} />\n              )}\n            >\n              <SignalFormTab onFocus={handleOnFocus} />\n            </Tab>\n          ))\n        : [];\n\n    const addSignalTab = (\n      <Tab\n        tablabel=\"+\"\n        tabid=\"addSignalTab\"\n        canDelete={false}\n        key=\"addSignalTab\"\n        className=\"add-signal-tab\"\n      >\n        <AddSignalFormTab\n          onFocus={handleOnFocus}\n          range={range}\n          ref={newSignalFormRef}\n        />\n      </Tab>\n    );\n\n    return signalTabs.concat(addSignalTab);\n  }, [handleOnFocus, range, tabContainsErrors, values.signals]);\n\n  const editSignalInfoText = (\n    <p className=\"infoText\">\n      Focus on an input field and press Shift + Drag &#38; Drop to draw a\n      coupling constant in spectrum view.\n    </p>\n  );\n\n  const addSignalInfoText = (\n    <p className=\"infoText\">\n      Focus on the input field and press Shift + Left mouse click to select new\n      signal delta value in spectrum view.\n    </p>\n  );\n\n  return (\n    <div>\n      <div css={textStyles}>\n        {errors.signals &&\n        (errors.signals.noSignals || errors.signals.noCouplings) ? (\n          <div>\n            <p className=\"errorText\">\n              {errors.signals.noSignals ||\n                errors.signals.noCouplings[0].message}\n            </p>\n            {errors.signals.noSignals ? addSignalInfoText : null}\n          </div>\n        ) : values.activeTab === 'addSignalTab' ? (\n          addSignalInfoText\n        ) : (\n          editSignalInfoText\n        )}\n      </div>\n      <Tabs\n        activeTab={values.activeTab}\n        onClick={tapClickHandler}\n        onDelete={handleDeleteSignal}\n      >\n        {signalFormTabs}\n      </Tabs>\n    </div>\n  );\n}\n\nexport default memo(SignalsForm);\n","import { useMemo } from 'react';\nimport * as Yup from 'yup';\n\nimport { hasCouplingConstant } from '../../../../panels/extra/utilities/MultiplicityUtilities';\n\nconst useValidation = () =>\n  useMemo(() => {\n    return Yup.object().shape({\n      signals: Yup.array()\n        .of(\n          Yup.object().shape({\n            j: Yup.array()\n              .of(\n                Yup.object().shape({\n                  multiplicity: Yup.string().required(),\n                  coupling: Yup.mixed().test(\n                    'checkValue',\n                    '',\n                    function testCoupling(value) {\n                      const { path, createError } = this;\n                      const hasCoupling = hasCouplingConstant(\n                        this.parent.multiplicity,\n                      );\n                      if (\n                        (!hasCoupling && isNaN(value)) ||\n                        (hasCoupling && !isNaN(value))\n                      ) {\n                        return true;\n                      }\n\n                      return createError({\n                        path,\n                        message: `${path} is required`,\n                      });\n                    },\n                  ),\n                }),\n              )\n              .min(1, 'There must be at least one coupling in a signal'),\n          }),\n        )\n        .min(1, 'There must be at least one signal in a range!'),\n    });\n  }, []);\n\nexport default useValidation;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useMemo, useCallback, useEffect, useRef } from 'react';\nimport { FaSearchPlus } from 'react-icons/fa';\n\nimport generateID from '../../../data/utilities/generateID';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport Button from '../../elements/Button';\nimport CloseButton from '../../elements/CloseButton';\nimport SaveButton from '../../elements/SaveButton';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikOnChange from '../../elements/formik/FormikOnChange';\nimport {\n  hasCouplingConstant,\n  translateMultiplet,\n} from '../../panels/extra/utilities/MultiplicityUtilities';\nimport { CHANGE_TEMP_RANGE } from '../../reducer/types/Types';\nimport { useFormatNumberByNucleus } from '../../utility/FormatNumber';\n\nimport SignalsForm from './forms/components/SignalsForm';\nimport useRangeFormValidation from './forms/validation/EditRangeValidation';\n\nconst styles = css`\n  width: 600px;\n  height: 500px;\n  padding: 5px;\n  button:focus {\n    outline: none;\n  }\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    align-items: center;\n    span {\n      color: #464646;\n      font-size: 15px;\n      flex: 1;\n      border-left: 1px solid #ececec;\n      padding-left: 6px;\n    }\n\n    button {\n      background-color: transparent;\n      border: none;\n      padding: 5px;\n\n      svg {\n        height: 16px;\n      }\n    }\n  }\n  .container {\n    display: flex;\n    margin: 30px 5px;\n    input,\n    button {\n      padding: 5px;\n      border: 1px solid gray;\n      border-radius: 5px;\n      height: 36px;\n      margin: 2px;\n    }\n    input {\n      flex: 10;\n    }\n    button {\n      flex: 2;\n      color: white;\n      background-color: gray;\n    }\n  }\n`;\n\ninterface EditRangeModalProps {\n  onSaveEditRangeModal: (value: any) => Promise<void> | null | void;\n  onCloseEditRangeModal: () => void;\n  onZoomEditRangeModal: (value: any) => void;\n  range: any;\n  automaticZoom?: boolean;\n}\n\ninterface Coupling {\n  multiplicity: any;\n  coupling: string | number;\n}\n\nfunction EditRangeModal({\n  onSaveEditRangeModal = () => null,\n  onCloseEditRangeModal = () => null,\n  onZoomEditRangeModal = () => null,\n  range,\n  automaticZoom = true,\n}: EditRangeModalProps) {\n  const formRef = useRef<any>(null);\n  const { activeTab } = useChartData();\n  const dispatch = useDispatch();\n  const format = useFormatNumberByNucleus(activeTab);\n  const validation = useRangeFormValidation();\n\n  const handleOnZoom = useCallback(() => {\n    onZoomEditRangeModal(range);\n  }, [onZoomEditRangeModal, range]);\n\n  useEffect(() => {\n    if (automaticZoom) {\n      handleOnZoom();\n    }\n  }, [automaticZoom, handleOnZoom]);\n\n  const handleOnClose = useCallback(() => {\n    onCloseEditRangeModal();\n  }, [onCloseEditRangeModal]);\n\n  const getCouplings = useCallback(\n    (couplings) =>\n      couplings\n        .filter((coupling) => coupling.coupling !== '')\n        .map((coupling) => {\n          return {\n            ...coupling,\n            multiplicity: translateMultiplet(coupling.multiplicity),\n          };\n        }),\n    [],\n  );\n\n  const getSignals = useCallback(\n    (signals) => {\n      return signals.map((signal) => {\n        return {\n          id: generateID(),\n          ...signal,\n          multiplicity: signal.js\n            .map((_coupling) => translateMultiplet(_coupling.multiplicity))\n            .join(''),\n          js: getCouplings(signal.js),\n        };\n      });\n    },\n    [getCouplings],\n  );\n\n  const handleOnSave = useCallback(\n    (formValues) => {\n      void (async () => {\n        const _range = { ...range };\n        _range.signals = getSignals(formValues.signals);\n        await onSaveEditRangeModal(_range);\n        handleOnClose();\n      })();\n    },\n    [getSignals, handleOnClose, onSaveEditRangeModal, range],\n  );\n\n  const data = useMemo(() => {\n    const signals = range.signals.map((signal) => {\n      // counter within j array to access to right j values\n\n      let counterJ = 0;\n      const couplings: Array<Coupling> = [];\n      signal.multiplicity.split('').forEach((_multiplicity) => {\n        let coupling: Coupling = {\n          multiplicity: _multiplicity,\n          coupling: '',\n        };\n\n        if (hasCouplingConstant(_multiplicity)) {\n          coupling = { ...signal.js[counterJ] };\n          coupling.coupling = Number(format(coupling.coupling));\n          counterJ++;\n        }\n        coupling.multiplicity = translateMultiplet(coupling.multiplicity);\n        couplings.push(coupling);\n      });\n\n      return { ...signal, js: couplings };\n    });\n    return { activeTab: '0', signals };\n  }, [format, range]);\n\n  const changeHandler = useCallback(\n    (values) => {\n      const signals = getSignals(values.signals);\n      dispatch({\n        type: CHANGE_TEMP_RANGE,\n        payload: { tempRange: Object.assign({}, range, { signals }) },\n      });\n    },\n    [dispatch, getSignals, range],\n  );\n\n  return (\n    <div css={styles}>\n      <FormikForm\n        ref={formRef}\n        initialValues={data}\n        validationSchema={validation}\n        onSubmit={handleOnSave}\n      >\n        <div className=\"header handle\">\n          <Button onClick={handleOnZoom} className=\"zoom-button\">\n            <FaSearchPlus title=\"Set to default view on range in spectrum\" />\n          </Button>\n          <span>\n            {` Range and Signal edition: ${format(range.from)} ppm to ${format(\n              range.to,\n            )} ppm`}\n          </span>\n          <SaveButton\n            onClick={() => formRef.current.submitForm()}\n            popupTitle=\"Save and exit\"\n          />\n\n          <CloseButton onClick={handleOnClose} />\n        </div>\n        <SignalsForm range={range} />\n        <FormikOnChange onChange={changeHandler} />\n      </FormikForm>\n    </div>\n  );\n}\n\nexport default EditRangeModal;\n","import { useCallback, useMemo } from 'react';\n\nimport { useAssignmentData } from '../../../assignment/AssignmentsContext';\nimport { useDispatch } from '../../../context/DispatchContext';\nimport { useModal } from '../../../elements/popup/Modal';\nimport { positions, transitions } from '../../../elements/popup/options';\nimport EditRangeModal from '../../../modal/editRange/EditRangeModal';\nimport {\n  CHANGE_RANGE_SIGNAL_KIND,\n  DELETE_RANGE,\n  RESET_SELECTED_TOOL,\n  SAVE_EDITED_RANGE,\n  SET_SELECTED_TOOL,\n  SET_X_DOMAIN,\n} from '../../../reducer/types/Types';\nimport { options } from '../../../toolbar/ToolTypes';\n\nimport { RangeData } from './useMapRanges';\n\nexport default function useEditRangeModal(range: RangeData) {\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const assignmentData = useAssignmentData();\n\n  const zoomRange = useCallback(() => {\n    const margin = Math.abs(range.from - range.to);\n    dispatch({\n      type: SET_X_DOMAIN,\n      xDomain: [range.from - margin, range.to + margin],\n    });\n  }, [dispatch, range.from, range.to]);\n\n  const deleteRange = useCallback(() => {\n    dispatch({\n      type: DELETE_RANGE,\n      payload: {\n        data: { id: range.id, assignmentData },\n      },\n    });\n  }, [assignmentData, dispatch, range.id]);\n\n  const changeRangeSignalKind = useCallback(\n    (value) => {\n      dispatch({\n        type: CHANGE_RANGE_SIGNAL_KIND,\n        payload: {\n          data: { rowData: range, value },\n        },\n      });\n    },\n    [dispatch, range],\n  );\n\n  const saveEditRangeHandler = useCallback(\n    (editedRowData) => {\n      dispatch({\n        type: SAVE_EDITED_RANGE,\n        payload: {\n          editedRowData,\n          assignmentData,\n        },\n      });\n    },\n    [assignmentData, dispatch],\n  );\n\n  const closeEditRangeHandler = useCallback(() => {\n    dispatch({ type: RESET_SELECTED_TOOL });\n    modal.close();\n  }, [dispatch, modal]);\n\n  const editRange = useCallback(() => {\n    dispatch({\n      type: SET_SELECTED_TOOL,\n      payload: { selectedTool: options.editRange.id, tempRange: range },\n    });\n    modal.show(\n      <EditRangeModal\n        onCloseEditRangeModal={closeEditRangeHandler}\n        onSaveEditRangeModal={saveEditRangeHandler}\n        onZoomEditRangeModal={zoomRange}\n        range={range}\n      />,\n      {\n        position: positions.MIDDLE_RIGHT,\n        transition: transitions.SCALE,\n        isBackgroundBlur: false,\n      },\n    );\n  }, [\n    closeEditRangeHandler,\n    dispatch,\n    modal,\n    range,\n    saveEditRangeHandler,\n    zoomRange,\n  ]);\n\n  return useMemo(\n    () => ({\n      editRange,\n      deleteRange,\n      zoomRange,\n      changeRangeSignalKind,\n    }),\n    [changeRangeSignalKind, deleteRange, editRange, zoomRange],\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Fragment, CSSProperties } from 'react';\nimport { FaRegTrashAlt, FaSearchPlus, FaEdit } from 'react-icons/fa';\n\nimport { SignalKinds } from '../../../../data/constants/SignalsKinds';\nimport Select from '../../../elements/Select';\nimport useEditRangeModal from '../hooks/useEditRangeModal';\nimport { RangeData } from '../hooks/useMapRanges';\n\nconst styles = css`\n  width: 66px;\n  padding: 0 !important;\n  button {import useEditRangeModal from './../../../hooks/useEditRangeModal';\n\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n  }\n\n  button:disabled {\n    opacity: 0.6;\n  }\n`;\n\nconst selectBoxStyle: CSSProperties = {\n  marginLeft: 2,\n  marginRight: 2,\n  border: 'none',\n  height: '20px',\n};\n\ninterface ActionsColumnProps {\n  rowData: RangeData;\n  rowSpanTags: {\n    rowSpan: any;\n    style: CSSProperties;\n  };\n  onHoverSignal?: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n  onHoverRange?: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n}\n\nfunction ActionsColumn({\n  rowData,\n  onHoverSignal,\n  rowSpanTags,\n}: ActionsColumnProps) {\n  const { editRange, deleteRange, changeRangeSignalKind, zoomRange } =\n    useEditRangeModal(rowData);\n\n  return (\n    <Fragment>\n      <td {...onHoverSignal}>\n        <Select\n          onChange={changeRangeSignalKind}\n          data={SignalKinds}\n          defaultValue={rowData.tableMetaInfo.signal.kind}\n          style={selectBoxStyle}\n        />\n      </td>\n      <td {...rowSpanTags} css={styles}>\n        <button type=\"button\" className=\"delete-button\" onClick={deleteRange}>\n          <FaRegTrashAlt />\n        </button>\n        <button type=\"button\" className=\"zoom-button\" onClick={zoomRange}>\n          <FaSearchPlus title=\"Zoom to range in spectrum\" />\n        </button>\n        <button type=\"button\" className=\"edit-button\" onClick={editRange}>\n          <FaEdit color=\"blue\" />\n        </button>\n      </td>\n    </Fragment>\n  );\n}\n\nexport default ActionsColumn;\n","import lodashGet from 'lodash/get';\n\ninterface CouplingColumnProps {\n  rowData: {\n    id: number;\n    from: number;\n    to: number;\n    tableMetaInfo: any;\n  };\n  onHoverSignal?: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n}\n\nfunction CouplingColumn({ rowData, onHoverSignal }: CouplingColumnProps) {\n  const result = lodashGet(rowData, 'tableMetaInfo.signal.js');\n  return (\n    <td {...onHoverSignal}>\n      {result\n        ?.map((coupling) =>\n          !isNaN(coupling.coupling) ? coupling.coupling.toFixed(1) : '',\n        )\n        .join(',')}\n    </td>\n  );\n}\n\nexport default CouplingColumn;\n","import lodashGet from 'lodash/get';\nimport { CSSProperties, useMemo, useCallback, memo } from 'react';\nimport { FaMinusCircle } from 'react-icons/fa';\n\nimport { AssignmentsData } from '../../../assignment/AssignmentsContext';\nimport { HighlightedSource } from '../../../highlight';\n\nconst spanStyle: CSSProperties = {\n  color: 'red',\n  fontWeight: 'bold',\n};\n\ninterface RangAssignmentColumnProps {\n  rowData: any;\n  onHover: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n  assignment: AssignmentsData;\n  highlight: {\n    isActive: boolean;\n  };\n  onUnlinkVisibilityChange?: (element: any) => void;\n  unlinkVisibility: boolean;\n  onLink?: (a: any, b: any) => void;\n  onUnlink?: (element: any, b: boolean) => void;\n  rowSpanTags: any;\n  highlightData: any;\n}\n\nfunction RangeAssignmentsColumn({\n  rowData,\n  assignment,\n  highlight,\n  onUnlinkVisibilityChange,\n  unlinkVisibility,\n  onLink,\n  onUnlink,\n  rowSpanTags,\n  onHover,\n  highlightData,\n}: RangAssignmentColumnProps) {\n  const diaIDs = useMemo(() => {\n    return lodashGet(rowData, 'diaIDs', 0);\n  }, [rowData]);\n\n  const visibilityChangeHandler = useCallback(\n    (flag) => {\n      onUnlinkVisibilityChange?.(flag);\n    },\n    [onUnlinkVisibilityChange],\n  );\n\n  const spanCss: CSSProperties = useMemo(() => {\n    const flag =\n      assignment.isActive ||\n      assignment.isOver ||\n      (highlight.isActive &&\n        highlightData.highlight.sourceData?.type !== HighlightedSource.SIGNAL);\n    return flag\n      ? {\n          color: 'red',\n          fontWeight: 'bold',\n        }\n      : { color: 'black', fontWeight: 'normal' };\n  }, [\n    assignment.isActive,\n    assignment.isOver,\n    highlight.isActive,\n    highlightData.highlight.sourceData?.type,\n  ]);\n\n  return (\n    <td\n      {...rowSpanTags}\n      {...onHover}\n      {...{ onClick: (e) => onLink?.(e, assignment) }}\n    >\n      {rowData.nbAtoms !== undefined && rowData.nbAtoms > 0 ? (\n        rowData.diaIDs && rowData.diaIDs.length > 0 ? (\n          <div\n            onMouseEnter={() => visibilityChangeHandler(true)}\n            onMouseLeave={() => visibilityChangeHandler(false)}\n          >\n            {rowData.nbAtoms} {' ( '}\n            <span style={spanCss}>{diaIDs.length}</span>\n            {' ) '}\n            <sup>\n              <button\n                type=\"button\"\n                style={{\n                  visibility: unlinkVisibility ? 'visible' : 'hidden',\n                  padding: 0,\n                  margin: 0,\n                }}\n                onClick={(e) => onUnlink?.(e, true)}\n              >\n                <FaMinusCircle color=\"red\" />\n              </button>\n            </sup>\n          </div>\n        ) : assignment.isActive ? (\n          <div>\n            {`${rowData.nbAtoms} (`}\n            <span style={spanStyle}>0</span>\n            {')'}\n          </div>\n        ) : (\n          rowData.nbAtoms\n        )\n      ) : assignment.isActive ? (\n        <div>\n          {'0 ('}\n          <span style={spanStyle}>0</span>\n          {')'}\n        </div>\n      ) : (\n        ''\n      )}\n    </td>\n  );\n}\n\nexport default memo(RangeAssignmentsColumn);\n","import { CSSProperties, memo } from 'react';\n\nimport FormatNumber from '../../../utility/FormatNumber';\n\ninterface RangeColumnProps {\n  value: any;\n  rowSpanTags: {\n    rowSpan: any;\n    style: CSSProperties;\n  };\n  onHoverRange?: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n  format: string;\n}\n\nfunction RangeColumn({\n  value,\n  rowSpanTags,\n  onHoverRange,\n  format,\n}: RangeColumnProps) {\n  return (\n    <td {...rowSpanTags} {...onHoverRange}>\n      {FormatNumber(value, format)}\n    </td>\n  );\n}\n\nexport default memo(RangeColumn);\n","import { useCallback, useMemo } from 'react';\n\nimport { checkRangeKind } from '../../../../data/utilities/RangeUtilities';\nimport { useDispatch } from '../../../context/DispatchContext';\nimport EditableColumn from '../../../elements/EditableColumn';\nimport { CHANGE_RANGE_RELATIVE } from '../../../reducer/types/Types';\nimport FormatNumber from '../../../utility/FormatNumber';\n\nfunction RelativeColumn({ rowData, rowSpanTags, onHoverRange, format }) {\n  const dispatch = useDispatch();\n\n  const integralVal = useMemo(() => {\n    const flag = checkRangeKind(rowData);\n    const formattedValue = FormatNumber(rowData.integration, format);\n    return flag ? formattedValue : `[ ${formattedValue} ]`;\n  }, [format, rowData]);\n\n  const saveHandler = useCallback(\n    (event) => {\n      dispatch({\n        type: CHANGE_RANGE_RELATIVE,\n        payload: {\n          data: { value: event.target.value, id: rowData.id },\n        },\n      });\n    },\n    [dispatch, rowData.id],\n  );\n\n  return (\n    <td {...rowSpanTags} {...onHoverRange}>\n      <EditableColumn\n        value={integralVal}\n        onSave={saveHandler}\n        type=\"number\"\n        style={{ padding: '0.1rem 0.4rem' }}\n      />\n    </td>\n  );\n}\n\nexport default RelativeColumn;\n","import lodashGet from 'lodash/get';\nimport { CSSProperties, useMemo, useCallback, memo } from 'react';\nimport { FaMinusCircle } from 'react-icons/fa';\n\nimport { AssignmentsData } from '../../../assignment/AssignmentsContext';\n\ninterface SignalAssignmentsColumnProps {\n  rowData: any;\n  onHover: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n  assignment: AssignmentsData;\n  highlight: {\n    isActive: boolean;\n  };\n  onUnlinkVisibilityChange?: (element: any) => void;\n  unlinkVisibility: boolean;\n  onLink?: (a: any, b: any) => void;\n  onUnlink?: (element: any, b: boolean) => void;\n}\n\nfunction SignalAssignmentsColumn({\n  rowData,\n  onHover,\n  assignment,\n  highlight,\n  onUnlinkVisibilityChange,\n  unlinkVisibility,\n  onLink,\n  onUnlink,\n}: SignalAssignmentsColumnProps) {\n  const diaIDs = useMemo(() => {\n    return lodashGet(rowData, 'tableMetaInfo.signal.diaIDs', []);\n  }, [rowData]);\n\n  const tdCss: CSSProperties | undefined = useMemo(() => {\n    return assignment.isActive || highlight.isActive\n      ? {\n          color: 'red',\n          fontWeight: 'bold',\n        }\n      : undefined;\n  }, [assignment.isActive, highlight.isActive]);\n\n  const visibilityChangeHandler = useCallback(\n    (flag) => {\n      onUnlinkVisibilityChange?.(flag);\n    },\n    [onUnlinkVisibilityChange],\n  );\n  const assignHandler = useCallback(\n    (e) => {\n      onLink?.(e, assignment);\n    },\n    [assignment, onLink],\n  );\n\n  return (\n    <td {...onHover} onClick={assignHandler} style={tdCss}>\n      {diaIDs && diaIDs.length > 0 ? (\n        <div\n          onMouseEnter={() => visibilityChangeHandler(true)}\n          onMouseLeave={() => visibilityChangeHandler(false)}\n        >\n          {diaIDs.length}{' '}\n          <sup>\n            <button\n              type=\"button\"\n              style={{\n                visibility: unlinkVisibility ? 'visible' : 'hidden',\n                padding: 0,\n                margin: 0,\n              }}\n              onClick={(e) => onUnlink?.(e, false)}\n            >\n              <FaMinusCircle color=\"red\" />\n            </button>\n          </sup>\n        </div>\n      ) : assignment.isActive ? (\n        '0'\n      ) : (\n        ''\n      )}\n    </td>\n  );\n}\n\nexport default memo(SignalAssignmentsColumn);\n","import lodashGet from 'lodash/get';\n\nimport FormatNumber from '../../../utility/FormatNumber';\n\nexport default function useFormat(preferences) {\n  return (value, keysPath, prefix = '', suffix = '') => {\n    const format = lodashGet(preferences, keysPath, '0.000');\n    return FormatNumber(value, format, prefix, suffix);\n  };\n}\n","import { useCallback } from 'react';\n\nimport { useDispatch } from '../../../context/DispatchContext';\nimport EditableColumn from '../../../elements/EditableColumn';\nimport { CHANGE_RANGE_SIGNAL_VALUE } from '../../../reducer/types/Types';\nimport { checkMultiplicity } from '../../extra/utilities/MultiplicityUtilities';\n\nimport useFormat from './format';\n\ninterface SignalDeltaColumnProps {\n  rowData: any;\n  onHoverSignal: {\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n  };\n  preferences: string;\n}\n\nfunction SignalDeltaColumn({\n  rowData,\n  onHoverSignal,\n  preferences,\n}: SignalDeltaColumnProps) {\n  const dispatch = useDispatch();\n  const signal = rowData.tableMetaInfo.signal;\n  const format = useFormat(preferences);\n\n  const saveHandler = useCallback(\n    (event) => {\n      dispatch({\n        type: CHANGE_RANGE_SIGNAL_VALUE,\n        payload: {\n          value: event.target.value,\n          rangeID: rowData.id,\n          signalID: signal.id,\n        },\n      });\n    },\n    [dispatch, rowData.id, signal.id],\n  );\n\n  if (!signal) return <td>{''}</td>;\n\n  return (\n    <td {...onHoverSignal}>\n      {!checkMultiplicity(signal.multiplicity, ['m']) ? (\n        `${format(rowData.from, 'fromFormat')} - ${format(\n          rowData.to,\n          'toFormat',\n        )}`\n      ) : (\n        <EditableColumn\n          value={signal.delta.toFixed(3)}\n          onSave={saveHandler}\n          type=\"number\"\n          style={{ padding: '0.1rem 0.4rem' }}\n        />\n      )}\n    </td>\n  );\n}\n\nexport default SignalDeltaColumn;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport lodashGet from 'lodash/get';\nimport { useMemo, useCallback, useState } from 'react';\n\nimport {\n  AssignmentsData,\n  useAssignment,\n  useAssignmentData,\n} from '../../assignment/AssignmentsContext';\nimport { filterForIDsWithAssignment } from '../../assignment/utilities/filterForIDsWithAssignment';\nimport {\n  HighlightedSource,\n  useHighlight,\n  useHighlightData,\n} from '../../highlight';\nimport { isColumnVisible } from '../extra/preferences/ColumnsHelper';\n\nimport AbsoluteColumn from './TableColumns/AbsoluteColumn';\nimport ActionsColumn from './TableColumns/ActionsColumn';\nimport CouplingColumn from './TableColumns/CouplingColumn';\nimport RangeAssignmentsColumn from './TableColumns/RangeAssignmentsColumn';\nimport RangeColumn from './TableColumns/RangeColumn';\nimport RelativeColumn from './TableColumns/RelativeColumn';\nimport SignalAssignmentsColumn from './TableColumns/SignalAssignmentsColumn';\nimport SignalDeltaColumn from './TableColumns/SignalDeltaColumn';\nimport useFormat from './TableColumns/format';\n\nconst HighlightedRowStyle = css`\n  background-color: #ff6f0057;\n`;\n\nconst ConstantlyHighlightedRowStyle = css`\n  background-color: #f5f5dc;\n`;\n\ninterface RangesTableRowProps {\n  rowData: any;\n  onUnlink: (a: any, b?: any) => void;\n  onContextMenu: (element: any, data: any) => void;\n  preferences: string;\n}\n\nfunction RangesTableRow({\n  rowData,\n  onUnlink,\n  onContextMenu,\n  preferences,\n}: RangesTableRowProps) {\n  const assignmentData = useAssignmentData();\n  const assignmentRange = useAssignment(rowData.id);\n  const highlightRange = useHighlight(\n    [assignmentRange.id].concat(assignmentRange.assigned?.x || []).concat(\n      filterForIDsWithAssignment(\n        assignmentData,\n        rowData.signals.map((_signal) => _signal.id),\n      ),\n    ),\n    { type: HighlightedSource.RANGE },\n  );\n  const highlightRangeAssignmentsColumn = useHighlight(\n    assignmentRange.assigned?.x || [],\n    { type: HighlightedSource.RANGE },\n  );\n  const assignmentSignal = useAssignment(rowData.tableMetaInfo.id);\n  const highlightSignal = useHighlight(\n    [assignmentSignal.id].concat(assignmentSignal.assigned?.x || []),\n    { type: HighlightedSource.SIGNAL },\n  );\n  const highlightData = useHighlightData();\n  const [unlinkRangeButtonVisibility, showUnlinkRangeButton] = useState(false);\n  const [unlinkSignalButtonVisibility, showUnlinkSignalButton] =\n    useState(false);\n\n  const getFormat = useFormat(preferences);\n\n  const rowSpanTags: any = useMemo(() => {\n    return {\n      rowSpan: rowData.tableMetaInfo.rowSpan,\n      style: lodashGet(rowData.tableMetaInfo, 'hide', false)\n        ? { display: 'none' }\n        : undefined,\n    };\n  }, [rowData.tableMetaInfo]);\n\n  const unlinkHandler = useCallback(\n    (e, isOnRangeLevel) => {\n      // stop propagation here to prevent enabling/disabling the assignment mode at the same time\n      if (e) {\n        e.stopPropagation();\n      }\n\n      if (isOnRangeLevel !== undefined) {\n        if (isOnRangeLevel) {\n          onUnlink(rowData);\n          showUnlinkRangeButton(false);\n          assignmentRange.removeAll('x');\n        } else {\n          onUnlink(\n            rowData,\n            lodashGet(rowData, 'tableMetaInfo.signalIndex', undefined),\n          );\n          showUnlinkSignalButton(false);\n          assignmentSignal.removeAll('x');\n        }\n      } else {\n        showUnlinkRangeButton(false);\n        showUnlinkSignalButton(false);\n      }\n    },\n    [assignmentRange, assignmentSignal, onUnlink, rowData],\n  );\n\n  const linkHandler = useCallback((e, assignment: AssignmentsData) => {\n    e.stopPropagation();\n    assignment.setActive('x');\n  }, []);\n\n  const onHoverRange = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentRange.show('x');\n        highlightRange.show();\n      },\n      onMouseLeave: () => {\n        assignmentRange.hide();\n        highlightRange.hide();\n      },\n    };\n  }, [assignmentRange, highlightRange]);\n\n  const onHoverRangeAssignmentsColumn = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentRange.show('x');\n        highlightRangeAssignmentsColumn.show();\n      },\n      onMouseLeave: () => {\n        assignmentRange.hide();\n        highlightRangeAssignmentsColumn.hide();\n      },\n    };\n  }, [assignmentRange, highlightRangeAssignmentsColumn]);\n\n  const onHoverSignal = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentSignal.show('x');\n        highlightSignal.show();\n      },\n      onMouseLeave: () => {\n        assignmentSignal.hide();\n        highlightSignal.hide();\n      },\n    };\n  }, [assignmentSignal, highlightSignal]);\n\n  const trCss = useMemo(() => {\n    return highlightRange.isActive || assignmentRange.isActive\n      ? HighlightedRowStyle\n      : lodashGet(rowData, 'tableMetaInfo.isConstantlyHighlighted', false)\n      ? ConstantlyHighlightedRowStyle\n      : null;\n  }, [assignmentRange.isActive, highlightRange.isActive, rowData]);\n\n  return (\n    <tr onContextMenu={(e) => onContextMenu(e, rowData)} css={trCss}>\n      <td {...rowSpanTags} {...onHoverRange}>\n        {rowData.tableMetaInfo.rowIndex + 1}\n      </td>\n\n      {isColumnVisible(preferences, 'showFrom') && (\n        <RangeColumn\n          value={rowData.from}\n          rowSpanTags={rowSpanTags}\n          onHoverRange={onHoverRange}\n          format={getFormat('showFrom', undefined)}\n        />\n      )}\n      {isColumnVisible(preferences, 'showTo') && (\n        <RangeColumn\n          value={rowData.to}\n          rowSpanTags={rowSpanTags}\n          onHoverRange={onHoverRange}\n          format={getFormat('toFormat', undefined)}\n        />\n      )}\n\n      <SignalDeltaColumn\n        rowData={rowData}\n        onHoverSignal={onHoverSignal}\n        preferences={preferences}\n      />\n\n      {isColumnVisible(preferences, 'showRelative') && (\n        <RelativeColumn\n          rowData={rowData}\n          rowSpanTags={rowSpanTags}\n          onHoverRange={onHoverRange}\n          format={getFormat('relativeFormat', undefined)}\n        />\n      )}\n\n      {isColumnVisible(preferences, 'showAbsolute') && (\n        <AbsoluteColumn\n          value={rowData.absolute}\n          rowSpanTags={rowSpanTags}\n          onHoverRange={onHoverRange}\n          format={getFormat('absoluteFormat', undefined)}\n        />\n      )}\n\n      <td {...onHoverSignal}>\n        {lodashGet(rowData, 'tableMetaInfo.signal.multiplicity', '')}\n      </td>\n\n      <CouplingColumn rowData={rowData} onHoverSignal={onHoverSignal} />\n\n      <SignalAssignmentsColumn\n        rowData={rowData}\n        assignment={assignmentSignal}\n        highlight={highlightSignal}\n        onHover={onHoverSignal}\n        unlinkVisibility={unlinkSignalButtonVisibility}\n        onUnlinkVisibilityChange={(flag) => showUnlinkSignalButton(flag)}\n        onLink={linkHandler}\n        onUnlink={unlinkHandler}\n      />\n\n      <RangeAssignmentsColumn\n        rowData={rowData}\n        assignment={assignmentRange}\n        highlight={highlightRangeAssignmentsColumn}\n        onHover={onHoverRangeAssignmentsColumn}\n        unlinkVisibility={unlinkRangeButtonVisibility}\n        onUnlinkVisibilityChange={(flag) => showUnlinkRangeButton(flag)}\n        onLink={linkHandler}\n        onUnlink={unlinkHandler}\n        rowSpanTags={rowSpanTags}\n        highlightData={highlightData}\n      />\n\n      <ActionsColumn\n        rowData={rowData}\n        onHoverSignal={onHoverSignal}\n        onHoverRange={onHoverRange}\n        rowSpanTags={rowSpanTags}\n      />\n    </tr>\n  );\n}\n\nexport default RangesTableRow;\n","import { useMemo } from 'react';\n\nimport { Range } from '../../../../data/types/data1d';\nimport generateID from '../../../../data/utilities/generateID';\n\nexport interface RangeData extends Range {\n  rowKey: string;\n  tableMetaInfo: any;\n}\n\nfunction useMapRanges(data) {\n  return useMemo(() => {\n    const _rangesData: Array<RangeData> = [];\n    data.forEach((range, i) => {\n      if (range.signals.length === 1) {\n        _rangesData.push({\n          rowKey: generateID(),\n          ...range,\n          tableMetaInfo: {\n            ...range.tableMetaInfo,\n            signal: range.signals[0],\n            rowIndex: i,\n            signalIndex: 0,\n            id: range.signals[0].id,\n          },\n        });\n      } else if (range.signals.length > 1) {\n        range.signals.forEach((signal, j) => {\n          let hide = false;\n          let rowSpan = null;\n          if (j < range.signals.length - 1) {\n            if (j === 0) {\n              rowSpan = range.signals.length;\n            } else {\n              hide = true;\n            }\n          } else {\n            hide = true;\n          }\n\n          _rangesData.push({\n            rowKey: generateID(),\n            ...range,\n            tableMetaInfo: {\n              ...range.tableMetaInfo,\n              signal,\n              rowSpan,\n              hide,\n              rowIndex: i,\n              signalIndex: j,\n              id: signal.id,\n            },\n          });\n        });\n      }\n    });\n\n    return _rangesData;\n  }, [data]);\n}\n\nexport default useMapRanges;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport lodashGet from 'lodash/get';\nimport { Fragment, useCallback, useRef } from 'react';\nimport { FaLink } from 'react-icons/fa';\n\nimport checkModifierKeyActivated from '../../../data/utilities/checkModifierKeyActivated';\nimport ContextMenu from '../../elements/ContextMenu';\nimport useTableSortBy from '../../hooks/useTableSortBy';\n\nimport RangesTableRow from './RangesTableRow';\nimport useMapRanges from './hooks/useMapRanges';\n\nconst tableStyle = css`\n  border-spacing: 0;\n  border: 1px solid #dedede;\n  width: 100%;\n  font-size: 12px;\n  .react-contextmenu-wrapper {\n    display: contents;\n  }\n  tr {\n    :last-child {\n      td {\n        border-bottom: 0;\n      }\n    }\n  }\n  th {\n    position: sticky;\n    top: 0;\n    background-color: white;\n    z-index: 1;\n  }\n  th,\n  td {\n    white-space: nowrap;\n    text-align: center;\n    margin: 0;\n    padding: 0.1rem 0.4rem;\n    border-bottom: 1px solid #dedede;\n    border-right: 1px solid #dedede;\n\n    :last-child {\n      border-right: 0;\n    }\n    button {\n      background-color: transparent;\n      border: none;\n    }\n  }\n`;\n\nfunction RangesTable({ tableData, onUnlink, context, activeTab, preferences }) {\n  const element = activeTab?.replace(/[0-9]/g, '');\n  const contextRef = useRef<any>();\n  const { items: sortedData, isSortedDesc, onSort } = useTableSortBy(tableData);\n  const data = useMapRanges(sortedData);\n\n  const isVisible = (key) => {\n    return lodashGet(preferences, key, false);\n  };\n\n  const contextMenuHandler = useCallback(\n    (e, rowData) => {\n      if (!checkModifierKeyActivated(e)) {\n        e.preventDefault();\n        contextRef.current.handleContextMenu(e, rowData);\n      }\n    },\n    [contextRef],\n  );\n\n  return (\n    <Fragment>\n      <table css={tableStyle}>\n        <thead>\n          <tr>\n            <th>#</th>\n            {isVisible('showFrom') ? (\n              <th id=\"from\" {...onSort}>\n                From\n                {isSortedDesc('from').content}\n              </th>\n            ) : null}\n            {isVisible('showTo') ? (\n              <th id=\"to\" {...onSort}>\n                To {isSortedDesc('to').content}\n              </th>\n            ) : null}\n            <th>δ (ppm) </th>\n\n            {isVisible('showRelative') ? (\n              <th id=\"integration\" {...onSort}>\n                Rel. {element} {isSortedDesc('integration').content}\n              </th>\n            ) : null}\n            {isVisible('showAbsolute') ? <th>Absolute</th> : null}\n            <th>Mult.</th>\n            <th>J (Hz)</th>\n            <th>\n              <FaLink style={{ fontSize: 10 }} />\n            </th>\n            <th>Σ</th>\n            <th>Kind</th>\n            <th>{''}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data?.map((range) => {\n            return (\n              <RangesTableRow\n                key={range.rowKey}\n                rowData={range}\n                onUnlink={onUnlink}\n                onContextMenu={(e, rowData) => contextMenuHandler(e, rowData)}\n                preferences={preferences}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n      <ContextMenu ref={contextRef} context={context} />\n    </Fragment>\n  );\n}\n\nexport default RangesTable;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport lodashGet from 'lodash/get';\nimport { xGetFromToIndex } from 'ml-spectra-processing';\nimport { useCallback, useMemo, memo, useState, useRef } from 'react';\n\nimport { Molecule } from '../../../data/molecules/Molecule';\nimport { Data1D, Datum1D, Info1D, Ranges } from '../../../data/types/data1d';\nimport { useAssignmentData } from '../../assignment/AssignmentsContext';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { usePreferences } from '../../context/PreferencesContext';\nimport { useAlert } from '../../elements/popup/Alert';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport { UNLINK_RANGE } from '../../reducer/types/Types';\nimport { copyTextToClipboard } from '../../utility/Export';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport NoTableData from '../extra/placeholder/NoTableData';\nimport { getRangeDefaultValues } from '../extra/preferences/defaultValues';\nimport PreferencesHeader from '../header/PreferencesHeader';\n\nimport RangesHeader from './RangesHeader';\nimport RangesPreferences from './RangesPreferences';\nimport RangesTable from './RangesTable';\n\ninterface RangesTablePanelInnerProps {\n  ranges: Ranges;\n  data: Data1D;\n  info: Info1D;\n  xDomain: Array<number>;\n  activeTab: string;\n  molecules: Array<Molecule>;\n  showMultiplicityTrees: boolean;\n  showJGraph: boolean;\n  showRangesIntegrals: boolean;\n  preferences: any;\n}\n\nfunction RangesTablePanelInner({\n  ranges,\n  data,\n  info,\n  xDomain,\n  preferences,\n  activeTab,\n  molecules,\n  showMultiplicityTrees,\n  showJGraph,\n  showRangesIntegrals,\n}: RangesTablePanelInnerProps) {\n  const [isFilterActive, setFilterIsActive] = useState(false);\n  const assignmentData = useAssignmentData();\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const [isFlipped, setFlipStatus] = useState(false);\n\n  const settingRef = useRef<any>();\n\n  const rangesData = useMemo(() => {\n    const isInView = (from, to) => {\n      const factor = 10000;\n      to = to * factor;\n      from = from * factor;\n      return (\n        (to >= xDomain[0] * factor && from <= xDomain[1] * factor) ||\n        (from <= xDomain[0] * factor && to >= xDomain[1] * factor)\n      );\n    };\n\n    const getFilteredRanges = (ranges) => {\n      return ranges.filter((range) => isInView(range.from, range.to));\n    };\n\n    if (ranges.values) {\n      const _ranges = isFilterActive\n        ? getFilteredRanges(ranges.values)\n        : ranges.values;\n\n      return _ranges.map((range) => {\n        return {\n          ...range,\n          tableMetaInfo: {\n            isConstantlyHighlighted: isInView(range.from, range.to),\n          },\n        };\n      });\n    }\n    return [];\n  }, [isFilterActive, ranges.values, xDomain]);\n\n  const unlinkRangeHandler = useCallback(\n    (rangeData, signalIndex = -1) => {\n      dispatch({\n        type: UNLINK_RANGE,\n        payload: {\n          rangeData,\n          assignmentData,\n          signalIndex,\n        },\n      });\n    },\n    [assignmentData, dispatch],\n  );\n\n  const saveJSONToClipboardHandler = useCallback(\n    async (value) => {\n      if (data.x && data.re) {\n        const { x, re } = data;\n        const { from, to } = value;\n\n        const { fromIndex, toIndex } = xGetFromToIndex(x, {\n          from,\n          to,\n        });\n        const dataToClipboard = {\n          x: Array.from(x.slice(fromIndex, toIndex)),\n          y: Array.from(re.slice(fromIndex, toIndex)),\n          ...value,\n        };\n\n        const success = await copyTextToClipboard(\n          JSON.stringify(dataToClipboard, undefined, 2),\n        );\n\n        if (success) {\n          alert.show('Data copied to clipboard');\n        } else {\n          alert.error('copy to clipboard failed');\n        }\n      }\n    },\n    [data, alert],\n  );\n\n  const rangesPreferences = useMemo(() => {\n    const _preferences =\n      lodashGet(\n        preferences.current,\n        `formatting.panels.ranges.[${activeTab}]`,\n      ) || getRangeDefaultValues(activeTab);\n\n    return _preferences;\n  }, [activeTab, preferences]);\n\n  const contextMenu = useMemo(\n    () => [\n      {\n        label: 'Copy to clipboard',\n        onClick: saveJSONToClipboardHandler,\n      },\n    ],\n    [saveJSONToClipboardHandler],\n  );\n\n  const filterHandler = useCallback(() => {\n    setFilterIsActive(!isFilterActive);\n  }, [isFilterActive]);\n\n  const settingsPanelHandler = useCallback(() => {\n    setFlipStatus(!isFlipped);\n  }, [isFlipped]);\n\n  const saveSettingHandler = useCallback(() => {\n    settingRef.current.saveSetting();\n    setFlipStatus(false);\n  }, []);\n\n  return (\n    <>\n      <div\n        css={[\n          tablePanelStyle,\n          isFlipped &&\n            css`\n              th {\n                position: relative;\n              }\n            `,\n        ]}\n      >\n        {!isFlipped && (\n          <RangesHeader\n            {...{\n              ranges,\n              info,\n              activeTab,\n              molecules,\n              showRangesIntegrals,\n              showMultiplicityTrees,\n              showJGraph,\n              isFilterActive,\n            }}\n            onUnlink={unlinkRangeHandler}\n            onFilterActivated={filterHandler}\n            onSettingClick={settingsPanelHandler}\n            filterCounter={rangesData.length}\n          />\n        )}\n        {isFlipped && (\n          <PreferencesHeader\n            onSave={saveSettingHandler}\n            onClose={settingsPanelHandler}\n          />\n        )}\n        <div className=\"inner-container\">\n          {!isFlipped ? (\n            <div className=\"table-container\">\n              {rangesData && rangesData.length > 0 ? (\n                <RangesTable\n                  activeTab={activeTab}\n                  tableData={rangesData}\n                  onUnlink={unlinkRangeHandler}\n                  context={contextMenu}\n                  preferences={rangesPreferences}\n                />\n              ) : (\n                <NoTableData />\n              )}\n            </div>\n          ) : (\n            <RangesPreferences ref={settingRef} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst MemoizedRangesTablePanel = memo(RangesTablePanelInner);\n\nconst emptyData = { ranges: {}, data: {}, info: {} };\n\nexport default function RangesTablePanel() {\n  const {\n    displayerKey,\n    xDomain,\n    activeTab,\n    molecules,\n    toolOptions: {\n      selectedTool,\n      data: { showMultiplicityTrees, showRangesIntegrals, showJGraph },\n    },\n  } = useChartData();\n\n  const { ranges, data, info } = useSpectrum(emptyData) as Datum1D;\n  const preferences = usePreferences();\n\n  return (\n    <MemoizedRangesTablePanel\n      {...{\n        ranges,\n        data,\n        info,\n        showMultiplicityTrees,\n        showJGraph,\n        showRangesIntegrals,\n        selectedTool,\n        displayerKey,\n        preferences,\n        xDomain,\n        activeTab,\n        molecules,\n      }}\n    />\n  );\n}\n","import { SvgNmrSameTop, SvgNmrResetScale } from 'cheminfo-font';\nimport { memo, useCallback } from 'react';\nimport {\n  FaCreativeCommonsSamplingPlus,\n  FaEye,\n  FaEyeSlash,\n} from 'react-icons/fa';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport Button from '../../elements/ButtonToolTip';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { useModal } from '../../elements/popup/Modal';\nimport { ActiveSpectrum } from '../../reducer/Reducer';\nimport { DISPLAYER_MODE } from '../../reducer/core/Constants';\nimport {\n  ADD_MISSING_PROJECTION,\n  CHANGE_VISIBILITY,\n  DELETE_SPECTRA,\n  RESET_SPECTRA_SCALE,\n  SET_SPECTRA_SAME_TOP,\n} from '../../reducer/types/Types';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\nimport { SpectraAutomaticPickingButton } from '../header/SpectraAutomaticPickingButton';\n\ninterface SpectraPanelHeaderProps {\n  spectrums: Array<Datum1D | Datum2D>;\n}\n\ninterface SpectraPanelHeaderInnerProps extends SpectraPanelHeaderProps {\n  data: Array<Datum1D | Datum2D>;\n  activeTab: string;\n  activeSpectrum: ActiveSpectrum | null;\n  displayerMode: string;\n}\n\nfunction SpectraPanelHeaderInner({\n  data,\n  activeSpectrum,\n  activeTab,\n  displayerMode,\n  spectrums,\n}: SpectraPanelHeaderInnerProps) {\n  const modal = useModal();\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const handleDelete = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All records will be deleted, Are You sure?',\n      buttons: [\n        {\n          text: 'Yes',\n          handler: () => {\n            dispatch({ type: DELETE_SPECTRA });\n          },\n        },\n        { text: 'No' },\n      ],\n    });\n  }, [dispatch, modal]);\n\n  const showAllSpectrumsHandler = useCallback(() => {\n    const spectrumsPerTab = spectrums.map((datum) => {\n      return datum.id;\n    });\n    dispatch({ type: CHANGE_VISIBILITY, id: spectrumsPerTab });\n  }, [dispatch, spectrums]);\n\n  const hideAllSpectrumsHandler = useCallback(() => {\n    dispatch({ type: CHANGE_VISIBILITY, id: [] });\n  }, [dispatch]);\n\n  const addMissingProjectionHandler = useCallback(() => {\n    function getMissingProjection(SpectrumsData) {\n      let nucleus = activeTab.split(',');\n      nucleus = nucleus[0] === nucleus[1] ? [nucleus[0]] : nucleus;\n      const missingNucleus: Array<string> = [];\n      for (const n of nucleus) {\n        const hasSpectrums = SpectrumsData.some((d) => d.info.nucleus === n);\n        if (!hasSpectrums) {\n          missingNucleus.push(n);\n        }\n      }\n      return missingNucleus;\n    }\n    const missingNucleus = getMissingProjection(data);\n    if (missingNucleus.length > 0) {\n      dispatch({ type: ADD_MISSING_PROJECTION, nucleus: missingNucleus });\n    } else {\n      alert.error('Nothing to calculate');\n    }\n  }, [activeTab, alert, data, dispatch]);\n\n  const setSameTopHandler = useCallback(() => {\n    dispatch({ type: SET_SPECTRA_SAME_TOP });\n  }, [dispatch]);\n  const resetScaleHandler = useCallback(() => {\n    dispatch({ type: RESET_SPECTRA_SCALE });\n  }, [dispatch]);\n\n  return (\n    <DefaultPanelHeader\n      onDelete={handleDelete}\n      counter={spectrums?.length}\n      deleteToolTip=\"Delete all spectra\"\n    >\n      <Button popupTitle=\"Hide all spectra\" onClick={hideAllSpectrumsHandler}>\n        <FaEyeSlash />\n      </Button>\n      <Button popupTitle=\"Show all spectra\" onClick={showAllSpectrumsHandler}>\n        <FaEye />\n      </Button>\n      {activeSpectrum && activeTab && activeTab.split(',').length > 1 && (\n        <Button\n          popupTitle=\"Add missing projection\"\n          onClick={addMissingProjectionHandler}\n        >\n          <FaCreativeCommonsSamplingPlus />\n        </Button>\n      )}\n      {displayerMode === DISPLAYER_MODE.DM_1D && spectrums.length > 1 && (\n        <>\n          <Button popupTitle=\"Reset Scale\" onClick={resetScaleHandler}>\n            <SvgNmrResetScale />\n          </Button>\n          <Button popupTitle=\"Same Top\" onClick={setSameTopHandler}>\n            <SvgNmrSameTop />\n          </Button>\n        </>\n      )}\n      <SpectraAutomaticPickingButton />\n    </DefaultPanelHeader>\n  );\n}\n\nconst MemoizedSpectraPanelHeader = memo(SpectraPanelHeaderInner);\n\nexport default function SpectrumsTabs({ spectrums }: SpectraPanelHeaderProps) {\n  const { data, activeSpectrum, activeTab, displayerMode } = useChartData();\n  return (\n    <MemoizedSpectraPanelHeader\n      {...{\n        data,\n        activeSpectrum,\n        activeTab,\n        displayerMode,\n        spectrums,\n      }}\n    />\n  );\n}\n","import { CSSProperties, memo } from 'react';\n\ninterface ColorIndicatorNDProps {\n  activated: boolean;\n}\n\ninterface ColorIndicator1DProps extends ColorIndicatorNDProps {\n  color: string;\n}\n\ninterface ColorIndicator2DProps extends ColorIndicatorNDProps {\n  positiveColor: string;\n  negativeColor: string;\n}\n\nfunction ColorIndicator1D({ color, activated }: ColorIndicator1DProps) {\n  return (\n    <div\n      style={{\n        backgroundColor: color,\n        height: '12px',\n        width: '12px',\n        opacity: activated ? 1 : 0.1,\n        display: 'inline-block',\n      }}\n    />\n  );\n}\n\nfunction ColorIndicator2D({\n  positiveColor,\n  negativeColor,\n  activated,\n}: ColorIndicator2DProps) {\n  return (\n    <svg\n      width=\"12\"\n      height=\"12\"\n      viewBox=\"0 0 12 12\"\n      opacity={activated ? 1 : 0.1}\n    >\n      <g>\n        <path d=\"M0,0H12L0,12Z\" fill={positiveColor} strokeWidth=\"0\" />\n        <path d=\"M12,12H0L12,0Z\" fill={negativeColor} strokeWidth=\"0\" />\n      </g>\n    </svg>\n  );\n}\n\ntype ColorIndicatorProps = BaseColorIndicatorProps &\n  (\n    | {\n        dimension: 1;\n        color: Omit<ColorIndicator1DProps, 'activated'>;\n      }\n    | { dimension: 2; color: Omit<ColorIndicator2DProps, 'activated'> }\n  );\n\ninterface BaseColorIndicatorProps {\n  activated: boolean;\n  onClick: (e: any) => void;\n  style: CSSProperties;\n}\n\nfunction ColorIndicator(props: ColorIndicatorProps) {\n  const { style, onClick = () => null, activated } = props;\n\n  return (\n    <button style={style} type=\"button\" onClick={onClick}>\n      {props.dimension === 2 ? (\n        <ColorIndicator2D {...props.color} activated={activated} />\n      ) : (\n        <ColorIndicator1D activated={activated} {...props.color} />\n      )}\n    </button>\n  );\n}\n\nexport default memo(ColorIndicator);\n","import { SvgNmrPeaks } from 'cheminfo-font';\nimport { CSSProperties } from 'react';\n\ninterface DataProps {\n  id: string;\n  peaks: {\n    values: Array<any>;\n  };\n}\n\ninterface MarkersProps {\n  id: string;\n}\n\ninterface ShowHideMarkersButtonProps {\n  style: CSSProperties;\n  data: DataProps;\n  onChangeMarkersVisibility: (data: DataProps) => void;\n  markersVisible: Array<MarkersProps>;\n}\n\nexport default function ShowHideMarkersButton({\n  data,\n  onChangeMarkersVisibility,\n  markersVisible,\n  style,\n}: ShowHideMarkersButtonProps) {\n  const isMarkerVisible = (id) => {\n    return markersVisible.findIndex((v) => v.id === id) !== -1 ? true : false;\n  };\n\n  return (\n    <button\n      style={{\n        ...style,\n        opacity:\n          isMarkerVisible(data.id) && data.peaks && data.peaks.values.length > 0\n            ? 1\n            : 0.1,\n      }}\n      type=\"button\"\n      onClick={() => onChangeMarkersVisibility(data)}\n      disabled={data.peaks && data.peaks.values.length === 0}\n    >\n      <SvgNmrPeaks />\n    </button>\n  );\n}\n","import { CSSProperties } from 'react';\nimport { FaEye } from 'react-icons/fa';\n\ninterface DataProps {\n  id: string;\n  display: { color: string; positiveColor: string; negativeColor: string };\n  info: {\n    dimension: 1 | 2;\n  };\n}\n\ninterface ShowHideSpectrumButtonProps {\n  data: DataProps;\n  onChangeVisibility: (\n    data: DataProps,\n    is: 'isVisible' | 'isPositiveVisible' | 'isNegativeVisible',\n  ) => void;\n  style: CSSProperties;\n}\n\nexport default function ShowHideSpectrumButton({\n  data,\n  onChangeVisibility,\n  style,\n}: ShowHideSpectrumButtonProps) {\n  const isVisible = (id, key) => {\n    return data ? data.display[key] : true;\n  };\n  return (\n    <>\n      {data.info.dimension === 1 && (\n        <button\n          data-test-id=\"hide-show-spectrum-button\"\n          style={style}\n          type=\"button\"\n          onClick={() => onChangeVisibility(data, 'isVisible')}\n        >\n          <FaEye\n            style={{\n              ...(isVisible(data.id, 'isVisible')\n                ? {\n                    opacity: 1,\n                    strokeWidth: '1px',\n                    fill: data.display.color,\n                  }\n                : {\n                    opacity: 0.1,\n                    fill: data.display.color,\n                  }),\n            }}\n          />\n        </button>\n      )}\n      {data.info.dimension === 2 && (\n        <div style={{ minWidth: '40px' }}>\n          <button\n            style={{ ...style, width: '20px', minWidth: '20px' }}\n            type=\"button\"\n            onClick={() => onChangeVisibility(data, 'isPositiveVisible')}\n          >\n            <FaEye\n              style={{\n                ...(isVisible(data.id, 'isPositiveVisible')\n                  ? {\n                      opacity: 1,\n                      strokeWidth: '1px',\n                      fill: data.display.positiveColor,\n                    }\n                  : {\n                      opacity: 0.1,\n                      fill: data.display.positiveColor,\n                    }),\n              }}\n            />\n          </button>\n          <button\n            style={{ ...style, width: '20px', minWidth: '20px' }}\n            type=\"button\"\n            onClick={() => onChangeVisibility(data, 'isNegativeVisible')}\n          >\n            <FaEye\n              style={{\n                ...(isVisible(data.id, 'isNegativeVisible')\n                  ? {\n                      opacity: 1,\n                      strokeWidth: '1px',\n                      fill: data.display.negativeColor,\n                    }\n                  : {\n                      opacity: 0.1,\n                      fill: data.display.negativeColor,\n                    }),\n              }}\n            />\n          </button>\n        </div>\n      )}\n    </>\n  );\n}\n","import { SvgNmrFid, SvgNmrFt, SvgNmr2D } from 'cheminfo-font';\nimport { CSSProperties, memo } from 'react';\n\nimport ColorIndicator from './base/ColorIndicator';\nimport ShowHideMarkersButton from './base/ShowHideMarkersButton';\nimport ShowHideSpectrumButton from './base/ShowHideSpectrumButton';\n\nconst styles: Record<\n  'button' | 'row' | 'name' | 'info' | 'icon',\n  CSSProperties\n> = {\n  button: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    width: '26px',\n    minWidth: '26px',\n  },\n  row: {\n    display: 'flex',\n    alignContent: 'center',\n    height: '25px',\n    borderBottom: '0.55px solid #f1f1f1',\n  },\n  name: {\n    flex: 1,\n    height: '100%',\n    display: 'flex',\n  },\n  info: {\n    flex: '1 1 1px',\n    height: '100%',\n    display: 'block',\n    alignItems: 'center',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    lineHeight: '24px',\n  },\n  icon: {\n    display: 'flex',\n    margin: 'auto',\n    justifyContent: 'center',\n  },\n};\n\nfunction SpectrumListItem({\n  activeSpectrum,\n  markersVisible,\n  data,\n  onChangeVisibility,\n  onChangeMarkersVisibility,\n  onChangeActiveSpectrum,\n  onOpenSettingModal,\n  onContextMenu,\n}) {\n  const formatValueAsHTML = (value) => {\n    if (value) {\n      value = value.replace(/(?<value>[0-9]+)/g, '<sub>$<value></sub>');\n    }\n    return value;\n  };\n  const activated = activeSpectrum && activeSpectrum.id === data.id;\n  const { color, name, positiveColor, negativeColor } = data.display;\n  return (\n    <div\n      style={{\n        ...styles.row,\n        ...(activated\n          ? { backgroundColor: '#fafafa' }\n          : { opacity: activeSpectrum ? 0.2 : 1 }),\n      }}\n      onContextMenu={onContextMenu}\n    >\n      <ShowHideSpectrumButton\n        data={data}\n        onChangeVisibility={onChangeVisibility}\n        style={styles.button}\n      />\n\n      <div\n        data-test-id=\"activate-deactivate-spectrum-button\"\n        style={styles.name}\n        onClick={() => onChangeActiveSpectrum(data)}\n      >\n        <div style={{ ...styles.icon, width: '16px' }}>\n          {data.info.isFid ? (\n            <SvgNmrFid />\n          ) : data.info.dimension === 2 ? (\n            <SvgNmr2D />\n          ) : (\n            <SvgNmrFt />\n          )}\n        </div>\n        <span style={styles.info}>{name}</span>\n        <div\n          style={styles.info}\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{\n            __html: data.info && formatValueAsHTML(data.info.solvent),\n          }}\n        />\n        <span style={styles.info}>\n          <span\n            style={{\n              borderLeft: '0.55px solid #e5e5e5',\n              paddingRight: '5px',\n            }}\n          />\n          {data.info?.experiment}\n        </span>\n\n        {/* {data.info && data.info.solvent} */}\n        {/* </div> */}\n        <span style={styles.info}>{data.info?.pulse}</span>\n      </div>\n\n      <ShowHideMarkersButton\n        data={data}\n        style={{\n          ...styles.icon,\n          ...styles.button,\n        }}\n        onChangeMarkersVisibility={onChangeMarkersVisibility}\n        markersVisible={markersVisible}\n      />\n      <ColorIndicator\n        style={styles.button}\n        dimension={data.info.dimension}\n        color={{ positiveColor, color, negativeColor }}\n        activated={activated}\n        onClick={(event) => onOpenSettingModal(data, event)}\n      />\n    </div>\n  );\n}\n\nexport default memo(SpectrumListItem);\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, memo } from 'react';\nimport { SketchPicker } from 'react-color';\n\nimport { COLORS } from '../../../data/utilities/getColor';\n\ninterface FormikColorPickerProps {\n  name: string;\n  onColorChange?: (element: any) => void;\n}\n\nfunction FormikColorPicker(props: FormikColorPickerProps) {\n  const { onColorChange = () => null, name } = props;\n\n  const { values, setFieldValue } = useFormikContext();\n\n  const colorchangeHandler = useCallback(\n    (color) => {\n      onColorChange(color);\n      setFieldValue(\n        name,\n        `${color.hex}${Math.round(color.rgb.a * 255).toString(16)}`,\n      );\n    },\n    [name, onColorChange, setFieldValue],\n  );\n\n  return (\n    <SketchPicker\n      color={{ hex: lodashGet(values, name, '#000') }}\n      presetColors={COLORS}\n      onChangeComplete={(e) => colorchangeHandler(e)}\n    />\n  );\n}\n\nexport default memo(FormikColorPicker);\n","import {\n  Axis,\n  Heading,\n  Legend,\n  LineSeries,\n  Plot,\n  SeriesPoint,\n} from 'react-plot';\n\ninterface PlotData {\n  positive: SeriesPoint[];\n  negative: SeriesPoint[];\n}\ninterface PlotChartPros {\n  data: { sanPlot: PlotData; lines: PlotData };\n  sign: 'positive' | 'negative';\n  color: string;\n  yLogBase: number;\n  hideHeading?: boolean;\n}\n\nexport default function PlotChart({\n  data,\n  sign,\n  color,\n  yLogBase,\n  hideHeading = false,\n}: PlotChartPros) {\n  return (\n    <Plot width={180} height={220}>\n      {!hideHeading && <Heading title=\"Sanplot\" />}\n      <LineSeries\n        data={data.sanPlot?.[sign] || []}\n        xAxis=\"x\"\n        yAxis=\"y\"\n        label={sign}\n        lineStyle={{\n          stroke: color,\n          strokeWidth: 1.2,\n        }}\n        markerStyle={{\n          fill: color,\n          stroke: color,\n        }}\n      />\n      <LineSeries\n        data={data.lines?.[sign] || []}\n        xAxis=\"x\"\n        yAxis=\"y\"\n        label=\"noise level\"\n        lineStyle={{\n          stroke: 'blue',\n          strokeWidth: 0.8,\n          strokeDasharray: '3, 3',\n        }}\n        markerStyle={{\n          fill: color,\n          stroke: color,\n        }}\n      />\n      <Axis\n        id=\"x\"\n        label=\"Pt\"\n        position=\"bottom\"\n        tickLabelStyle={{ fontSize: '0.6rem' }}\n        labelStyle={{ fontSize: '0.6rem' }}\n      />\n      <Axis\n        id=\"y\"\n        label={`Intensity [Log${yLogBase}]`}\n        position=\"left\"\n        tickLabelStyle={{ fontSize: '0.6rem' }}\n        labelStyle={{ fontSize: '0.7rem' }}\n      />\n      <Legend position=\"embedded\" bottom={5} right={60} />\n    </Plot>\n  );\n}\n","import { xNoiseSanPlot, xyReduce } from 'ml-spectra-processing';\n\nimport { Data1D } from '../../../../../data/types/data1d';\nimport { Data2D } from '../../../../../data/types/data2d';\n\nexport function processSnapPlot<T extends '1D' | '2D'>(\n  dimension: T,\n  data: T extends '1D' ? Data1D : Data2D,\n  yLogBase: number,\n) {\n  const input =\n    dimension === '1D'\n      ? prepare1DData(data as Data1D)\n      : prepare2DData(data as Data2D);\n\n  const sanResult = xNoiseSanPlot(input);\n  const sanPlot: any = {};\n  const lines: any = {};\n  for (let plotKey in sanResult.sanplot) {\n    const { x, y } = xyReduce(sanResult.sanplot[plotKey]);\n    let result = new Array(x.length);\n    for (let i = 0; i < x.length; i++) {\n      result[i] = { x: x[i], y: y[i] };\n    }\n    sanPlot[plotKey] = result;\n    lines[plotKey] = getLine(sanResult[plotKey], result, { yLogBase });\n  }\n  return { sanPlot, lines };\n}\n\nfunction prepare1DData(data: Data1D) {\n  const length = data.re.length;\n  const jump = Math.floor(length / 307200) || 1;\n  const array = new Float64Array((length / jump) >> 0);\n  let index = 0;\n  for (let i = 0; i < array.length; i += jump) {\n    array[index++] = data.re[i];\n  }\n  return array;\n}\n\nfunction prepare2DData(data: Data2D) {\n  let cols = data.z[0].length;\n  let rows = data.z.length;\n  let jump = Math.floor((cols * rows) / 204800) || 1;\n  const array = new Float64Array(((cols * rows) / jump) >> 0);\n  let index = 0;\n  for (let i = 0; i < array.length; i += jump) {\n    array[index++] = data.z[(i / rows) >> 0][i % rows];\n  }\n  return array;\n}\n\nfunction getLine(value, data, options) {\n  const { log10, abs } = Math;\n  const { yLogBase } = options;\n  const first = data.length > 0 ? data[0].x : 0;\n  const last = data.length > 0 ? data[data.length - 1].x : 0;\n  const inLogScale = log10(abs(value)) / log10(yLogBase);\n  return [\n    { x: first, y: inLogScale },\n    { x: last, y: inLogScale },\n  ];\n}\n","import { memo, useMemo } from 'react';\n\nimport PlotChart from './PlotChart';\nimport { processSnapPlot } from './processSnapPlot';\n\nconst yLogBase = 2;\ninterface Spectrum1DHistogramProps {\n  color?: string;\n  data: any;\n}\n\nfunction Spectrum1DHistogram({\n  color = 'red',\n  data,\n}: Spectrum1DHistogramProps) {\n  const processedData = useMemo(() => {\n    return processSnapPlot('1D', data, yLogBase);\n  }, [data]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <div style={{ display: 'block' }}>\n        <PlotChart\n          data={processedData}\n          sign=\"positive\"\n          color={color}\n          yLogBase={yLogBase}\n        />\n      </div>\n      <div style={{ display: 'block', width: 180, height: 180 }}>\n        <PlotChart\n          data={processedData}\n          sign=\"negative\"\n          color={color}\n          yLogBase={yLogBase}\n          hideHeading\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default memo(Spectrum1DHistogram);\n","import { useCallback, useRef } from 'react';\n\nimport FormikColorPicker from '../../../../elements/formik/FormikColorPicker';\nimport FormikForm from '../../../../elements/formik/FormikForm';\n\nimport Spectrum1DHistogram from './Spectrum1DHistogram';\n\ninterface Spectrum1DSettingProps {\n  data: any;\n  onSubmit: (values: any, helpers: any) => void;\n}\n\nfunction Spectrum1DSetting({\n  data: SpectrumData,\n  onSubmit,\n}: Spectrum1DSettingProps) {\n  const refForm = useRef<any>(null);\n\n  const triggerSubmitHandler = useCallback(() => {\n    if (refForm.current) {\n      refForm.current.submitForm();\n    }\n  }, []);\n\n  return (\n    <FormikForm\n      ref={refForm}\n      initialValues={SpectrumData.display}\n      onSubmit={onSubmit}\n    >\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '1.25rem' }}>\n        <div style={{ display: 'block', position: 'relative' }}>\n          <FormikColorPicker\n            name=\"color\"\n            onColorChange={triggerSubmitHandler}\n          />\n        </div>\n        <Spectrum1DHistogram color=\"red\" data={SpectrumData.data} />\n      </div>\n    </FormikForm>\n  );\n}\n\nexport default Spectrum1DSetting;\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, memo } from 'react';\nimport ReactSlider from 'react-slider';\n\ninterface FormikSliderProps {\n  name: string;\n  onAfterChange?: (element: any) => void;\n}\n\nfunction FormikSlider(props: FormikSliderProps) {\n  const { onAfterChange = () => null, name, ...sliderProps } = props;\n\n  const { values, setFieldValue } = useFormikContext();\n\n  const changeHandler = useCallback(\n    (value) => {\n      onAfterChange(value);\n      setFieldValue(name, value);\n    },\n    [name, onAfterChange, setFieldValue],\n  );\n\n  return (\n    <ReactSlider\n      className=\"horizontal-slider\"\n      thumbClassName=\"thumb\"\n      trackClassName=\"track\"\n      defaultValue={lodashGet(values, name, [0, 100])}\n      onAfterChange={changeHandler}\n      renderThumb={(props, state) => (\n        <div {...props}>\n          <span>{state.valueNow}</span>\n        </div>\n      )}\n      pearling\n      minDistance={10}\n      {...sliderProps}\n    />\n  );\n}\n\nexport default memo(FormikSlider);\n","import { memo, useMemo } from 'react';\n\nimport PlotChart from './PlotChart';\nimport { processSnapPlot } from './processSnapPlot';\n\ninterface Spectrum2DHistogramProps {\n  color?: string;\n  data: any;\n}\n\nconst yLogBase = 2;\n\nfunction Spectrum2DHistogram({\n  color = 'red',\n  data,\n}: Spectrum2DHistogramProps) {\n  const processedData = useMemo(() => {\n    return processSnapPlot('2D', data, yLogBase);\n  }, [data]);\n\n  return (\n    <div>\n      <div style={{ textAlign: 'center', paddingBottom: 5, paddingTop: 5 }}>\n        San Plot\n      </div>\n\n      <div\n        style={{\n          borderTop: '1px solid #ededed',\n          marginTop: '10px',\n          paddingTop: '10px',\n          display: 'flex',\n          flexDirection: 'row',\n        }}\n      >\n        <PlotChart\n          data={processedData}\n          sign=\"positive\"\n          color={color}\n          yLogBase={yLogBase}\n        />\n        <PlotChart\n          data={processedData}\n          sign=\"negative\"\n          color={color}\n          yLogBase={yLogBase}\n          hideHeading\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default memo(Spectrum2DHistogram);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useRef } from 'react';\n\nimport FormikColorPicker from '../../../../elements/formik/FormikColorPicker';\nimport FormikForm from '../../../../elements/formik/FormikForm';\nimport FormikInput from '../../../../elements/formik/FormikInput';\nimport FormikSlider from '../../../../elements/formik/FormikSlider';\n\nimport Spectrum2DHistogram from './Spectrum2DHistogram';\n\ninterface Spectrum2DSettingProps {\n  data: any;\n  onSubmit: (values: any, helpers: any) => void;\n}\n\nfunction Spectrum2DSetting({\n  data: SpectrumData,\n  onSubmit,\n}: Spectrum2DSettingProps) {\n  const refForm = useRef<any>(null);\n\n  const style = css`\n    .positive {\n      display: inline-block;\n      .track-1 {\n        background-color: ${SpectrumData.display.positiveColor} !important;\n      }\n    }\n    .negative {\n      display: inline-block;\n\n      .track-1 {\n        background-color: ${SpectrumData.display.negativeColor} !important;\n      }\n    }\n  `;\n\n  const triggerSubmitHandler = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n\n  return (\n    <FormikForm\n      ref={refForm}\n      initialValues={SpectrumData.display}\n      onSubmit={onSubmit}\n    >\n      <div css={style}>\n        <div className=\"positive\">\n          <span style={{ padding: '0 10px' }}>Positive</span>\n          <FormikColorPicker\n            name=\"positiveColor\"\n            onColorChange={triggerSubmitHandler}\n          />\n          <div style={{ padding: '5px' }}>\n            <span className=\"label\">contour Levels [ min - max ]</span>\n            <FormikSlider\n              name=\"contourOptions.positive.contourLevels\"\n              onAfterChange={triggerSubmitHandler}\n            />\n            <span className=\"label\">number of Layers </span>\n            <FormikInput\n              name=\"contourOptions.positive.numberOfLayers\"\n              onChange={triggerSubmitHandler}\n              type=\"number\"\n            />\n          </div>\n        </div>\n        <div className=\"negative\">\n          <span style={{ padding: '0 10px' }}>Negative</span>\n          <FormikColorPicker\n            name=\"negativeColor\"\n            onColorChange={triggerSubmitHandler}\n          />\n          <div style={{ padding: '5px' }}>\n            <span className=\"label\">contour Levels [ min - max ]</span>\n            <FormikSlider\n              name=\"contourOptions.negative.contourLevels\"\n              onAfterChange={triggerSubmitHandler}\n            />\n            <span className=\"label\">number of Layers </span>\n            <FormikInput\n              name=\"contourOptions.negative.numberOfLayers\"\n              onChange={triggerSubmitHandler}\n              type=\"number\"\n            />\n          </div>\n        </div>\n        <Spectrum2DHistogram data={SpectrumData.data} />\n      </div>\n    </FormikForm>\n  );\n}\n\nexport default Spectrum2DSetting;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { memo, useCallback } from 'react';\n\nimport { useDispatch } from '../../../../context/DispatchContext';\nimport { CHANGE_SPECTRUM_SETTING } from '../../../../reducer/types/Types';\n\nimport Spectrum1DSetting from './Spectrum1DSetting';\nimport Spectrum2DSetting from './Spectrum2DSetting';\n\nconst style = css`\n  position: fixed;\n  z-index: 999999999;\n  width:100%;\n  height:100%;\n  left:0;\n  top:0;\n  .inner-conatiner{\n    position:absolute;\n    display: flex;\n    flex-direction: row-reverse;\n    border-radius: 4px;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px,\n      rgba(0, 0, 0, 0.15) 0px 8px 16px;\n      overflow: auto;\n      height: 350px;\n  }\n\n\n  .sketch-picker {\n    border-radius: none !important;\n    box-shadow: none !important;\n  }\n\n\n  .horizontal-slider {\n    width: 80%;\n    height: 15px;\n  }\n\n  .thumb {\n    height: 15px;\n    line-height: 15px;\n    width: 20px;\n    text-align: center;\n    color: black;\n    border-radius: 5px;\n    cursor: grab;\n    font-size: 10px;\n    background-image: -webkit-linear-gradient(top, #f4f1ee, #fff);\n    background-image: linear-gradient(top, #f4f1ee, #fff);\n  }\n\n  .track {\n    top: 0;\n    bottom: 0;\n    background: #eaeaea;\n    border-radius: 999px;\n    border-radius: 5px;\n  }\n\n  .track-1 {\n    background: red;\n  }\n   \n  .label{\n    font-size: 12px;\n    margin: 8px 0;\n    display: block;\n  }\n \n  }\n`;\n\ninterface SpectrumSettingProps {\n  position: { x: number; y: number } | null;\n  data: any;\n  onClose: () => void;\n}\n\nfunction SpectrumSetting({ position, data, onClose }: SpectrumSettingProps) {\n  const dispatch = useDispatch();\n  const { id, info } = data;\n\n  const submitHandler = useCallback(\n    (values) => {\n      dispatch({ type: CHANGE_SPECTRUM_SETTING, id, display: values });\n    },\n    [dispatch, id],\n  );\n\n  const clickHandler = useCallback(\n    (e) => {\n      if (e.target === e.currentTarget) {\n        onClose();\n      }\n    },\n    [onClose],\n  );\n\n  if (!position) return null;\n  const { x, y } = position;\n\n  return (\n    <div css={style} onClick={clickHandler}>\n      <div\n        className=\"inner-conatiner\"\n        style={{\n          left: info.dimension === 2 ? x - 460 : x - 240,\n          width: info.dimension === 2 ? 460 : 240,\n          padding: info.dimension === 2 ? '10px 0' : '',\n          top: y,\n        }}\n      >\n        {info.dimension === 2 ? (\n          <Spectrum2DSetting onSubmit={submitHandler} data={data} />\n        ) : (\n          <Spectrum1DSetting onSubmit={submitHandler} data={data} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction arePropsEqual() {\n  return true;\n}\n\nexport default memo(SpectrumSetting, arePropsEqual);\n","import { useCallback, useState, useMemo, useRef, useEffect, memo } from 'react';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport checkModifierKeyActivated from '../../../data/utilities/checkModifierKeyActivated';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport ContextMenu from '../../elements/ContextMenu';\nimport Tab from '../../elements/Tab/Tab';\nimport Tabs from '../../elements/Tab/Tabs';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { ActiveSpectrum } from '../../reducer/Reducer';\nimport {\n  CHANGE_PEAKS_MARKERS_VISIBILITY,\n  SET_ACTIVE_TAB,\n  CHANGE_VISIBILITY,\n  CHANGE_ACTIVE_SPECTRUM,\n  DELETE_SPECTRA,\n} from '../../reducer/types/Types';\nimport { copyTextToClipboard } from '../../utility/Export';\nimport GroupByInfoKey from '../../utility/GroupByInfoKey';\n\nimport SpectrumListItem from './SpectrumListItem';\nimport SpectrumSetting from './base/setting/SpectrumSetting';\n\ninterface TabChangeProps {\n  tab: string;\n  data: Array<Datum1D | Datum2D>;\n}\n\ninterface SpectrumsTabsProps {\n  onTabChange: (data: TabChangeProps) => void;\n}\ninterface SpectrumsTabsInnerProps extends SpectrumsTabsProps {\n  data: Array<Datum1D | Datum2D>;\n  activeTab: string;\n  activeSpectrum: ActiveSpectrum | null;\n}\n\nfunction SpectrumsTabsInner({\n  data,\n  activeSpectrum,\n  activeTab,\n  onTabChange,\n}: SpectrumsTabsInnerProps) {\n  const contextRef = useRef<any>();\n  const [markersVisible, setMarkersVisible] = useState<Array<{ id: string }>>(\n    [],\n  );\n  const [selectedSpectrumData, setSelectedSpectrum] = useState(null);\n  const [settingModalPosition, setSettingModalPosition] = useState<{\n    x: number;\n    y: number;\n  } | null>(null);\n  const [isSettingModalDisplayed, setIsSettingModalDisplayed] = useState(false);\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (data) {\n      const visibleMarkers = data.reduce((acc: any, datum) => {\n        if (\n          datum.info.dimension === 1 &&\n          (datum as Datum1D).display.isPeaksMarkersVisible === true\n        ) {\n          acc.push({ id: datum.id });\n        }\n        return acc;\n      }, []);\n\n      setMarkersVisible(visibleMarkers);\n    }\n  }, [data, dispatch]);\n\n  const spectrumsGroupByNucleus = useMemo(() => {\n    if (!data) return [];\n    const groupByNucleus = GroupByInfoKey('nucleus');\n    return groupByNucleus(data, true);\n  }, [data]);\n\n  useEffect(() => {\n    onTabChange({\n      tab: activeTab,\n      data: spectrumsGroupByNucleus[activeTab],\n    });\n  }, [activeTab, onTabChange, spectrumsGroupByNucleus]);\n\n  const handleChangeMarkersVisibility = useCallback(\n    (d) => {\n      const currentIndex = markersVisible.findIndex((v) => v.id === d.id);\n      const newChecked = [...markersVisible];\n      if (currentIndex === -1) {\n        newChecked.push({ id: d.id });\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n      dispatch({ type: CHANGE_PEAKS_MARKERS_VISIBILITY, data: newChecked });\n      setMarkersVisible(newChecked);\n    },\n    [dispatch, markersVisible],\n  );\n\n  const onTabChangeHandler = useCallback(\n    (tab) => {\n      onTabChange({\n        tab: tab.tabid,\n        data: spectrumsGroupByNucleus[tab.tabid],\n      });\n\n      dispatch({ type: SET_ACTIVE_TAB, tab: tab.tabid });\n    },\n    [dispatch, onTabChange, spectrumsGroupByNucleus],\n  );\n\n  const contextMenu = useMemo(\n    () => [\n      {\n        label: 'Copy to Clipboard',\n        onClick: (spectrumData) => {\n          void (async () => {\n            const { x, y, info } = spectrumData;\n            const success = await copyTextToClipboard(\n              JSON.stringify({ x, y, info }, undefined, 2),\n            );\n\n            if (success) {\n              alert.success('Data copied to clipboard');\n            } else {\n              alert.error('Copy to clipboard failed');\n            }\n          })();\n        },\n      },\n      {\n        label: 'Delete',\n        onClick: (spectrumData) => {\n          setTimeout(() => {\n            dispatch({ type: DELETE_SPECTRA, id: spectrumData.id });\n          }, 0);\n        },\n      },\n    ],\n    [alert, dispatch],\n  );\n\n  const contextMenuHandler = useCallback(\n    (e, rowData) => {\n      if (!checkModifierKeyActivated(e)) {\n        e.preventDefault();\n        contextRef.current.handleContextMenu(e, rowData);\n      }\n    },\n    [contextRef],\n  );\n\n  const openSettingHandler = useCallback((selectedSpectrum, event) => {\n    setSettingModalPosition({\n      x: event.nativeEvent.clientX,\n      y: event.nativeEvent.clientY,\n    });\n    setSelectedSpectrum(selectedSpectrum);\n    setIsSettingModalDisplayed(true);\n  }, []);\n\n  const handleChangeVisibility = useCallback(\n    (d, key) => {\n      dispatch({\n        type: CHANGE_VISIBILITY,\n        id: d.id,\n        key,\n        value: !d.display[key],\n      });\n    },\n    [dispatch],\n  );\n\n  const handleChangeActiveSpectrum = useCallback(\n    (d) => {\n      setTimeout(() => {\n        if (activeSpectrum && activeSpectrum.id === d.id) {\n          dispatch({ type: CHANGE_ACTIVE_SPECTRUM, data: null });\n        } else {\n          dispatch({ type: CHANGE_ACTIVE_SPECTRUM, data: { id: d.id } });\n        }\n      }, 0);\n    },\n    [activeSpectrum, dispatch],\n  );\n\n  const mouseLeaveHandler = useCallback(() => {\n    setIsSettingModalDisplayed(false);\n  }, []);\n\n  return (\n    <div style={{ height: 'calc(100% - 25px)' }}>\n      <Tabs activeTab={activeTab} onClick={onTabChangeHandler}>\n        {spectrumsGroupByNucleus &&\n          Object.keys(spectrumsGroupByNucleus).map((group) => (\n            <Tab tablabel={group} tabid={group} key={group}>\n              {spectrumsGroupByNucleus[group]?.map((d) => (\n                <SpectrumListItem\n                  key={d.id}\n                  activeSpectrum={activeSpectrum}\n                  markersVisible={markersVisible}\n                  data={d}\n                  onChangeVisibility={handleChangeVisibility}\n                  onChangeMarkersVisibility={handleChangeMarkersVisibility}\n                  onChangeActiveSpectrum={handleChangeActiveSpectrum}\n                  onOpenSettingModal={openSettingHandler}\n                  onContextMenu={(e) => contextMenuHandler(e, d)}\n                />\n              ))}\n            </Tab>\n          ))}\n      </Tabs>\n      <ContextMenu ref={contextRef} context={contextMenu} />\n\n      {isSettingModalDisplayed ? (\n        <SpectrumSetting\n          onClose={mouseLeaveHandler}\n          data={selectedSpectrumData}\n          position={settingModalPosition}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nconst MemoizedSpectra = memo(SpectrumsTabsInner);\n\nexport default function SpectrumsTabs({ onTabChange }: SpectrumsTabsProps) {\n  const { data, activeSpectrum, activeTab } = useChartData();\n\n  return (\n    <MemoizedSpectra {...{ data, activeSpectrum, activeTab, onTabChange }} />\n  );\n}\n","import { useCallback, memo, useState, CSSProperties } from 'react';\n\nimport SpectraPanelHeader from './SpectraPanelHeader';\nimport SpectrumsTabs from './SpectrumsTabs';\n\nconst styles: CSSProperties = {\n  overflow: 'hidden',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n};\n\nfunction SpectrumListPanel() {\n  const [spectrums, setSpectrums] = useState<Array<any>>([]);\n\n  const tabChangeHandler = useCallback((e) => {\n    setSpectrums(e.data ? e.data : []);\n  }, []);\n\n  return (\n    <div style={styles}>\n      <SpectraPanelHeader spectrums={spectrums} />\n      <SpectrumsTabs onTabChange={tabChangeHandler} />\n    </div>\n  );\n}\n\nexport default memo(SpectrumListPanel);\n","import { FromTo } from 'cheminfo-types';\n\nexport interface DefaultPathLengthsInterface {\n  [key: string]: FromTo;\n}\n\nconst DefaultPathLengths: DefaultPathLengthsInterface = {\n  hmbc: { from: 2, to: 3 },\n  cosy: { from: 3, to: 4 },\n  hsqc: { from: 1, to: 1 },\n  hmqc: { from: 1, to: 1 },\n  inadequate: { from: 1, to: 1 },\n};\n\nexport default DefaultPathLengths;\n","import { FromTo } from 'cheminfo-types';\n\nimport DefaultPathLengths from '../../../../data/constants/DefaultPathLengths';\n\nfunction isDefaultPathLength(\n  pathLength: FromTo,\n  experimentType: string,\n): boolean {\n  return (\n    DefaultPathLengths[experimentType] &&\n    pathLength.from === DefaultPathLengths[experimentType].from &&\n    pathLength.to === DefaultPathLengths[experimentType].to\n  );\n}\n\nexport default isDefaultPathLength;\n","import { FromTo } from 'cheminfo-types';\nimport lodashCloneDeep from 'lodash/cloneDeep';\nimport lodashGet from 'lodash/get';\nimport {\n  addLink,\n  buildCorrelation,\n  buildLink,\n  getLinkDelta,\n  getLinkDim,\n  removeLink,\n  Correlation,\n  Link,\n} from 'nmr-correlation';\n\nimport DefaultPathLengths from '../../../../data/constants/DefaultPathLengths';\nimport { Datum2D } from '../../../../data/types/data2d';\nimport {\n  findSignal2D,\n  findSpectrum,\n} from '../../../../data/utilities/FindUtilities';\nimport { Spectra } from '../../../NMRium';\nimport isDefaultPathLength from '../../../modal/editZone/validation/isDefaultPathLength';\nimport { ActiveSpectrum } from '../../../reducer/Reducer';\nimport { DISPLAYER_MODE } from '../../../reducer/core/Constants';\nimport { ErrorColors } from '../CorrelationTable/Constants';\n\nfunction getAtomType(nucleus: string): string {\n  return nucleus.split(/\\d+/)[1];\n}\n\nfunction getLabelColor(correlationData, correlation) {\n  const error = lodashGet(\n    correlationData,\n    `state.${correlation.atomType}.error`,\n    null,\n  );\n\n  if (error) {\n    for (let { key, color } of ErrorColors) {\n      if (\n        key !== 'incomplete' && // do not consider this for a single atom type\n        (key === 'notAttached' || key === 'ambiguousAttachment') &&\n        lodashGet(error, `${key}`, []).some(\n          (index) => correlationData.values[index].id === correlation.id,\n        )\n      ) {\n        return color;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction findSignalMatch1D(\n  spectrum: Datum2D,\n  link: Link,\n  factor: number,\n  xDomain0: number,\n  xDomain1: number,\n) {\n  if (spectrum && spectrum.info.dimension === 2) {\n    const signal = findSignal2D(spectrum, link.signal.id);\n    if (signal) {\n      const otherAxis = link.axis === 'x' ? 'y' : 'x';\n      const delta = signal[otherAxis]?.delta;\n      if (delta !== undefined) {\n        return delta * factor >= xDomain0 && delta * factor <= xDomain1;\n      }\n    }\n  }\n  return false;\n}\n\nfunction findSignalMatch2D(\n  spectrum: Datum2D,\n  link: Link,\n  factor: number,\n  xDomain0: number,\n  xDomain1: number,\n  yDomain0: number,\n  yDomain1: number,\n): boolean {\n  if (spectrum && spectrum.info.dimension === 2) {\n    const signal = findSignal2D(spectrum, link.signal.id);\n    if (signal?.x.delta && signal?.y.delta) {\n      return (\n        signal.x.delta * factor >= xDomain0 &&\n        signal.x.delta * factor <= xDomain1 &&\n        signal.y.delta * factor >= yDomain0 &&\n        signal.y.delta * factor <= yDomain1\n      );\n    }\n  }\n  return false;\n}\n\nfunction getAbbreviation(link: Link): string {\n  let abbreviation = 'X';\n  if (link.experimentType === 'hsqc' || link.experimentType === 'hmqc') {\n    abbreviation =\n      !link.signal || link.signal.sign === 0\n        ? 'S'\n        : `S${link.signal.sign === 1 ? '+' : '-'}`;\n  } else if (\n    link.experimentType === 'hmbc' ||\n    link.experimentType === 'cosy' ||\n    link.experimentType === 'tocsy'\n  ) {\n    abbreviation = 'M';\n  } else if (\n    link.experimentType === 'noesy' ||\n    link.experimentType === 'roesy'\n  ) {\n    abbreviation = 'NOE';\n  } else if (link.experimentType === 'inadequate') {\n    abbreviation = 'I';\n  } else if (link.experimentType === 'adequate') {\n    abbreviation = 'A';\n  }\n\n  const pathLength: FromTo | undefined = link.signal.j?.pathLength;\n  if (pathLength) {\n    const isDefaultCorrelation =\n      DefaultPathLengths[link.experimentType] &&\n      pathLength.from >= DefaultPathLengths[link.experimentType].from &&\n      pathLength.from <= DefaultPathLengths[link.experimentType].to &&\n      pathLength.to >= DefaultPathLengths[link.experimentType].from &&\n      pathLength.to <= DefaultPathLengths[link.experimentType].to;\n\n    return `${abbreviation}${isDefaultCorrelation ? '' : '*'}`;\n  }\n\n  return abbreviation;\n}\n\nfunction buildNewLink1D(link) {\n  return buildLink({\n    ...link,\n    edited: {\n      ...link.edited,\n      moved: true,\n    },\n  });\n}\n\nfunction buildNewLink2D(link: Link, axis: 'x' | 'y') {\n  const linkIDs = link.id.split('_');\n  return buildLink({\n    ...link,\n    id: linkIDs[axis === 'x' ? 0 : 1],\n    axis,\n    match: [],\n    edited: {\n      ...link.edited,\n      moved: true,\n    },\n  });\n}\n\nfunction cloneCorrelationAndEditLink(\n  correlation: Correlation,\n  link: Link,\n  axis: 'x' | 'y',\n  action: 'add' | 'remove' | 'unmove',\n): Correlation {\n  const linkDim = getLinkDim(link);\n  const _correlation = lodashCloneDeep(correlation);\n  const split = link.id.split('_');\n  if (action === 'add') {\n    addLink(\n      _correlation,\n      linkDim === 1 ? buildNewLink1D(link) : buildNewLink2D(link, axis),\n    );\n  } else if (action === 'remove' || action === 'unmove') {\n    removeLink(_correlation, axis === 'x' ? split[0] : split[1]);\n  }\n\n  return _correlation;\n}\n\nfunction getEditedCorrelations({\n  correlationDim1,\n  correlationDim2,\n  selectedCorrelationIdDim1,\n  selectedCorrelationIdDim2,\n  action,\n  link,\n  correlations,\n}: {\n  correlationDim1: Correlation;\n  correlationDim2: Correlation;\n  action: 'move' | 'remove' | 'unmove' | 'setPathLength';\n  selectedCorrelationIdDim1: string | undefined;\n  selectedCorrelationIdDim2: string | undefined;\n  link: Link;\n  correlations: Correlation[];\n}) {\n  const selectedCorrelationDim1 = correlations.find(\n    (correlation) => correlation.id === selectedCorrelationIdDim1,\n  );\n  const selectedCorrelationDim2 = correlations.find(\n    (correlation) => correlation.id === selectedCorrelationIdDim2,\n  );\n  const hasChangedDim1 = selectedCorrelationDim1?.id !== correlationDim1.id;\n  const hasChangedDim2 =\n    correlationDim2 && selectedCorrelationDim2?.id !== correlationDim2?.id;\n  const linkDim = getLinkDim(link);\n\n  const editedCorrelations: Correlation[] = [];\n  const buildCorrelationDataOptions: {\n    skipDataUpdate?: boolean;\n  } = {};\n\n  if (action === 'move') {\n    if (linkDim === 1) {\n      // modify current cell correlation\n      const _correlationDim1 = cloneCorrelationAndEditLink(\n        correlationDim1,\n        link,\n        'x',\n        'remove',\n      );\n      // modify selected correlation\n      let newCorrelationDim1: Correlation;\n      if (selectedCorrelationDim1) {\n        newCorrelationDim1 = cloneCorrelationAndEditLink(\n          hasChangedDim1 ? selectedCorrelationDim1 : _correlationDim1,\n          link,\n          'x',\n          'add',\n        );\n      } else {\n        newCorrelationDim1 = buildCorrelation({\n          atomType: correlationDim1.atomType,\n          link: [buildNewLink1D(link)],\n        });\n      }\n      editedCorrelations.push(_correlationDim1, newCorrelationDim1);\n      buildCorrelationDataOptions.skipDataUpdate = true;\n    } else if (linkDim === 2) {\n      // modify current cell correlations\n      const _correlationDim1 = cloneCorrelationAndEditLink(\n        correlationDim1,\n        link,\n        'x',\n        'remove',\n      );\n      editedCorrelations.push(_correlationDim1);\n      const _correlationDim2 = cloneCorrelationAndEditLink(\n        correlationDim2,\n        link,\n        'y',\n        'remove',\n      );\n      editedCorrelations.push(_correlationDim2);\n\n      // modify selected correlations\n      if (selectedCorrelationDim1 && selectedCorrelationDim2) {\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            hasChangedDim1 ? selectedCorrelationDim1 : _correlationDim1,\n            link,\n            'x',\n            'add',\n          ),\n        );\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            hasChangedDim2 ? selectedCorrelationDim2 : _correlationDim2,\n            link,\n            'y',\n            'add',\n          ),\n        );\n      } else if (\n        selectedCorrelationDim1 &&\n        selectedCorrelationIdDim2 === 'new'\n      ) {\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            hasChangedDim1 ? selectedCorrelationDim1 : _correlationDim1,\n            link,\n            'x',\n            'add',\n          ),\n        );\n        editedCorrelations.push(\n          buildCorrelation({\n            atomType: correlationDim2.atomType,\n            link: [buildNewLink2D(link, 'y')],\n          }),\n        );\n      } else if (\n        selectedCorrelationIdDim1 === 'new' &&\n        selectedCorrelationDim2\n      ) {\n        editedCorrelations.push(\n          buildCorrelation({\n            atomType: correlationDim1.atomType,\n            link: [buildNewLink2D(link, 'x')],\n          }),\n        );\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            hasChangedDim2 ? selectedCorrelationDim2 : _correlationDim2,\n            link,\n            'y',\n            'add',\n          ),\n        );\n      } else if (\n        selectedCorrelationIdDim1 === 'new' &&\n        selectedCorrelationIdDim2 === 'new'\n      ) {\n        editedCorrelations.push(\n          buildCorrelation({\n            atomType: correlationDim1.atomType,\n            link: [buildNewLink2D(link, 'x')],\n          }),\n        );\n        editedCorrelations.push(\n          buildCorrelation({\n            atomType: correlationDim2.atomType,\n            link: [buildNewLink2D(link, 'y')],\n          }),\n        );\n      }\n      buildCorrelationDataOptions.skipDataUpdate = true;\n    }\n  } else if (action === 'remove') {\n    const _correlationDim1 = cloneCorrelationAndEditLink(\n      correlationDim1,\n      link,\n      'x',\n      'remove',\n    );\n    editedCorrelations.push(_correlationDim1);\n    if (getLinkDim(link) === 2) {\n      const _correlationDim2 = cloneCorrelationAndEditLink(\n        correlationDim2,\n        link,\n        'y',\n        'remove',\n      );\n      editedCorrelations.push(_correlationDim2);\n    }\n  } else if (action === 'unmove') {\n    if (linkDim === 1) {\n      if (selectedCorrelationDim1) {\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            selectedCorrelationDim1,\n            link,\n            'x',\n            'unmove',\n          ),\n        );\n      }\n    } else if (linkDim === 2) {\n      if (selectedCorrelationDim1 && selectedCorrelationDim2) {\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            selectedCorrelationDim1,\n            link,\n            'x',\n            'unmove',\n          ),\n        );\n        editedCorrelations.push(\n          cloneCorrelationAndEditLink(\n            selectedCorrelationDim2,\n            link,\n            'y',\n            'unmove',\n          ),\n        );\n      }\n    }\n  } else if (action === 'setPathLength') {\n    editedCorrelations.push(\n      cloneCorrelationAndSetPathLength(correlationDim1, link, 'x'),\n    );\n    editedCorrelations.push(\n      cloneCorrelationAndSetPathLength(correlationDim2, link, 'y'),\n    );\n  }\n\n  return { editedCorrelations, buildCorrelationDataOptions };\n}\n\nfunction cloneCorrelationAndSetPathLength(\n  correlation: Correlation,\n  editedLink: Link,\n  axis: 'x' | 'y',\n): Correlation {\n  const _correlation = lodashCloneDeep(correlation);\n  const linkDim = getLinkDim(editedLink);\n  if (linkDim === 2) {\n    const editedLinkID = editedLink.id.split('_')[axis === 'x' ? 0 : 1];\n    const _link = _correlation.link.find((link) => link.id === editedLinkID);\n    if (_link) {\n      const newPathLength: FromTo = editedLink.signal.j?.pathLength;\n      // remove (previous) pathLength if it is same as default\n      if (isDefaultPathLength(newPathLength, _link.experimentType)) {\n        delete _link.signal.j?.pathLength;\n        if (_link.signal.j && Object.keys(_link.signal.j).length === 0) {\n          delete _link.signal.j;\n        }\n        delete _link.edited.pathLength;\n      } else {\n        if (!_link.signal.j) {\n          _link.signal.j = { pathLength: newPathLength };\n        } else {\n          _link.signal.j.pathLength = newPathLength;\n        }\n        _link.edited.pathLength = true;\n      }\n    }\n  }\n\n  return _correlation;\n}\n\nfunction convertValuesString(\n  valuesString: string,\n  key: 'protonsCount' | 'hybridization',\n): number[] {\n  valuesString = valuesString\n    .toLowerCase()\n    .replace(/\\s+/g, '')\n    .split(',')\n    .map((token) => (token === 'sp' ? 'sp1' : token))\n    .join(',');\n  valuesString = valuesString.replaceAll('sp', '');\n\n  let values: number[] = [];\n  const regex = /^(?:[0-9],{0,1})+$/g;\n  if (regex.test(valuesString)) {\n    // allow digits followed by optional comma only\n    values = valuesString\n      .split(',')\n      .filter((char) => char.length > 0)\n      .map((char) => Number(char));\n  }\n\n  // allow key specific values only\n  // protonsCount: [0, 1, 2, 3, ...], hybridization: [1, 2, 3]\n  values = values.filter(\n    (value) =>\n      value >= (key === 'protonsCount' ? 0 : 1) &&\n      (key === 'protonsCount' || value <= 3),\n  );\n\n  // unique values\n  return values.filter((index, i, a) => a.indexOf(index) === i);\n}\n\nfunction isInView(\n  spectraData: Spectra,\n  activeTab: string,\n  activeSpectrum: ActiveSpectrum | null,\n  xDomain: number[],\n  yDomain: number[],\n  displayerMode: string,\n  correlation: Correlation,\n): boolean {\n  if (correlation.pseudo === true) {\n    return false;\n  }\n\n  if (\n    activeSpectrum === null ||\n    !correlation.link.some((link) => link.experimentID === activeSpectrum.id)\n  ) {\n    return false;\n  }\n\n  const atomTypesInView = activeTab.split(',').map((tab) => getAtomType(tab));\n\n  const factor = 10000;\n  const xDomain0 = xDomain[0] * factor;\n  const xDomain1 = xDomain[1] * factor;\n  const yDomain0 = yDomain[0] * factor;\n  const yDomain1 = yDomain[1] * factor;\n\n  if (displayerMode === DISPLAYER_MODE.DM_1D) {\n    const firstLink1D = correlation.link.find((link) => getLinkDim(link) === 1);\n    if (!firstLink1D) {\n      return false;\n    }\n    let delta = getLinkDelta(firstLink1D);\n    if (delta === undefined) {\n      return false;\n    }\n    delta *= factor;\n    const spectrum = findSpectrum(spectraData, firstLink1D.experimentID, true);\n    if (\n      spectrum &&\n      atomTypesInView[0] === correlation.atomType &&\n      delta >= xDomain0 &&\n      delta <= xDomain1\n    ) {\n      return true;\n    }\n    // try to find a link which contains the belonging 2D signal in the spectra in view\n    if (\n      correlation.link.some((link) => {\n        const spectrum = findSpectrum(\n          spectraData,\n          link.experimentID,\n          true,\n        ) as Datum2D;\n        return findSignalMatch1D(spectrum, link, factor, xDomain0, xDomain1);\n      })\n    ) {\n      return true;\n    }\n  } else if (displayerMode === DISPLAYER_MODE.DM_2D) {\n    if (!atomTypesInView.includes(correlation.atomType)) {\n      return false;\n    }\n    const firstLink2D = correlation.link.find((link) => getLinkDim(link) === 2);\n    if (!firstLink2D) {\n      return false;\n    }\n    const spectrum = findSpectrum(\n      spectraData,\n      firstLink2D.experimentID,\n      true,\n    ) as Datum2D;\n    // correlation is represented by a 2D signal\n    if (\n      findSignalMatch2D(\n        spectrum,\n        firstLink2D,\n        factor,\n        xDomain0,\n        xDomain1,\n        yDomain0,\n        yDomain1,\n      )\n    ) {\n      return true;\n    } else {\n      // try to find a link which contains the belonging 2D signal in the spectra in view\n      if (\n        correlation.link.some((link) => {\n          const spectrum = findSpectrum(\n            spectraData,\n            link.experimentID,\n            true,\n          ) as Datum2D;\n          return findSignalMatch2D(\n            spectrum,\n            link,\n            factor,\n            xDomain0,\n            xDomain1,\n            yDomain0,\n            yDomain1,\n          );\n        })\n      ) {\n        return true;\n      }\n    }\n  }\n  // do not show correlation\n  return false;\n}\n\nexport {\n  buildNewLink1D,\n  buildNewLink2D,\n  cloneCorrelationAndEditLink,\n  convertValuesString,\n  findSignalMatch1D,\n  findSignalMatch2D,\n  getAbbreviation,\n  getAtomType,\n  getEditedCorrelations,\n  getLabelColor,\n  isInView,\n};\n","import { Correlation } from 'nmr-correlation';\nimport { useMemo } from 'react';\n\nimport { useChartData } from '../../../context/ChartContext';\n\nimport { isInView } from './Utilities';\n\ninterface InputProps {\n  correlation: Correlation;\n}\n\nfunction IsInView({ correlation }: InputProps) {\n  const {\n    data: spectraData,\n    xDomain,\n    yDomain,\n    displayerMode,\n    activeTab,\n    activeSpectrum,\n  } = useChartData();\n\n  return useMemo(\n    () =>\n      isInView(\n        spectraData,\n        activeTab,\n        activeSpectrum,\n        xDomain,\n        yDomain,\n        displayerMode,\n        correlation,\n      ),\n    [\n      activeSpectrum,\n      activeTab,\n      correlation,\n      displayerMode,\n      spectraData,\n      xDomain,\n      yDomain,\n    ],\n  );\n}\n\nexport default IsInView;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback } from 'react';\n\nconst styles = css`\n  margin-top: 10px;\n  padding: 5px;\n  text-align: center;\n\n  p {\n    font-size: 14px;\n  }\n\n  button:focus {\n    outline: none;\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 90px;\n\n    color: white;\n    background-color: gray;\n  }\n`;\n\ninterface EditLinkConfirmationProps {\n  description: string;\n  onConfirm: () => void;\n}\n\nfunction EditLinkConfirmation({\n  description,\n  onConfirm,\n}: EditLinkConfirmationProps) {\n  const handleOnConfirm = useCallback(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      onConfirm();\n    },\n    [onConfirm],\n  );\n\n  return (\n    <div css={styles}>\n      <p>{description}</p>\n      <button type=\"button\" onClick={handleOnConfirm}>\n        Confirm\n      </button>\n    </div>\n  );\n}\n\nexport default EditLinkConfirmation;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FromTo } from 'cheminfo-types';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport DefaultPathLengths from '../../../../../data/constants/DefaultPathLengths';\nimport { Signal2D } from '../../../../../data/types/data2d';\nimport Button from '../../../../elements/Button';\nimport Input from '../../../../elements/Input';\nimport Label from '../../../../elements/Label';\n\nconst editPathLengthsStyles = css`\n  width: 100%;\n  height: 100%;\n  margin-top: 10px;\n  text-align: center;\n\n  .input-container {\n    width: 100%;\n    margin-top: 5px;\n    text-align: center;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 60px;\n\n    color: white;\n    background-color: gray;\n  }\n\n  .warning {\n    margin-top: 5px;\n    color: red;\n  }\n`;\n\ninterface InputProps {\n  signal: Signal2D;\n  experimentType: string;\n  onEdit: (editedSignal: Signal2D) => void;\n}\n\nfunction EditPathLength({ signal, experimentType, onEdit }: InputProps) {\n  const [from, setFrom] = useState<number>(\n    signal.j?.pathLength !== undefined\n      ? (signal.j.pathLength as FromTo).from\n      : DefaultPathLengths[experimentType]?.from || 0,\n  );\n  const [to, setTo] = useState<number>(\n    signal.j?.pathLength !== undefined\n      ? (signal.j.pathLength as FromTo).to\n      : DefaultPathLengths[experimentType]?.to || 0,\n  );\n  const [isError, setIsError] = useState<boolean>(false);\n\n  const handleOnEdit = useCallback(() => {\n    const pathLength: FromTo = {\n      from,\n      to,\n    };\n    const editedSignal: Signal2D = {\n      ...signal,\n      j: {\n        ...signal.j,\n        pathLength,\n      },\n    };\n\n    onEdit(editedSignal);\n  }, [to, from, onEdit, signal]);\n\n  useEffect(() => {\n    setIsError(from <= 0 || from > to);\n  }, [to, from]);\n\n  return (\n    <div css={editPathLengthsStyles}>\n      <p>Setting of the minimum and maximum path length (J coupling).</p>\n      <div className=\"input-container\">\n        <Label\n          title=\"Min:\"\n          style={{\n            label: {\n              marginRight: '5px',\n              fontSize: '14px',\n              fontWeight: 'normal',\n            },\n          }}\n        >\n          <Input\n            type=\"number\"\n            value={from}\n            onChange={(e) => {\n              setFrom(Number(e.target.value));\n            }}\n            style={{ input: { color: isError ? 'red' : 'black' } }}\n          />\n        </Label>\n        <Label\n          title=\"Max:\"\n          style={{\n            label: {\n              marginRight: '5px',\n              fontSize: '14px',\n              fontWeight: 'normal',\n            },\n          }}\n        >\n          <Input\n            type=\"number\"\n            value={to}\n            onChange={(e) => {\n              setTo(Number(e.target.value));\n            }}\n          />\n        </Label>\n      </div>\n      {isError ? (\n        <p className=\"warning\">\n          Minimum must not be 0 or higher than the maximum value.{' '}\n        </p>\n      ) : (\n        <Button type=\"button\" onClick={handleOnEdit} disabled={isError}>\n          Set\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default EditPathLength;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { getCorrelationDelta, Correlation, Link } from 'nmr-correlation';\nimport { useCallback, useState } from 'react';\n\nimport Select from '../../../../elements/Select';\n\nconst moveLinkStyles = css`\n  width: 100%;\n  height: 100%;\n  margin-top: 10px;\n  text-align: center;\n\n  p {\n    font-size: 14px;\n  }\n\n  .selection-container {\n    margin-top: 10px;\n    width: 100%;\n    text-align: center;\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 60px;\n\n    color: white;\n    background-color: gray;\n  }\n`;\n\ninterface MoveLinkProps {\n  correlationDim1: Correlation;\n  correlationDim2: Correlation;\n  link: Link;\n  correlations: Correlation[];\n  onEdit: (\n    correlationIdDim1: string,\n    correlationIdDim2: string | undefined,\n  ) => void;\n}\n\nfunction MoveLink({\n  correlationDim1,\n  correlationDim2,\n  link,\n  correlations,\n  onEdit,\n}: MoveLinkProps) {\n  const [selectedCorrelationIdDim1, setSelectedCorrelationIdDim1] =\n    useState<string>(correlationDim1.id);\n  const [selectedCorrelationIdDim2, setSelectedCorrelationIdDim2] =\n    useState<string>(correlationDim2?.id || undefined);\n\n  function getCorrelationLabel(correlation: Correlation) {\n    const delta = getCorrelationDelta(correlation);\n    return `${delta ? delta.toFixed(2) : '?'}`;\n  }\n\n  const getSelection = useCallback(\n    (correlation: Correlation, dim: 0 | 1) => {\n      const selectionData = correlations.reduce((arr, _correlation) => {\n        if (\n          _correlation.pseudo === false &&\n          _correlation.atomType === link.atomType[dim]\n        ) {\n          arr.push({\n            key: _correlation.id,\n            value: _correlation.id,\n            label: `${_correlation.label.origin}: ${getCorrelationLabel(\n              _correlation,\n            )}`,\n          });\n        }\n        return arr;\n      }, []);\n      selectionData.push({\n        key: 'new',\n        value: 'new',\n        label: `new -> ${(\n          (dim === 0\n            ? getCorrelationDelta(correlationDim1)\n            : getCorrelationDelta(correlationDim2)) as number\n        ).toFixed(2)}`,\n      });\n\n      return (\n        <Select\n          onChange={(selection: string) => {\n            if (dim === 0) {\n              setSelectedCorrelationIdDim1(selection);\n            } else {\n              setSelectedCorrelationIdDim2(selection);\n            }\n          }}\n          data={selectionData}\n          defaultValue={correlation.id}\n          style={{\n            width: 110,\n            height: 25,\n            margin: 0,\n            border: '1px solid grey',\n          }}\n        />\n      );\n    },\n    [correlationDim1, correlationDim2, correlations, link.atomType],\n  );\n\n  return (\n    <div css={moveLinkStyles}>\n      <p>Move of signals on either one or both axes.</p>\n      <p>&quot;New&quot; means to separate into a new row or column.</p>\n      <div className=\"selection-container\">\n        {getSelection(correlationDim1, 0)}\n        {correlationDim2 && getSelection(correlationDim2, 1)}\n      </div>\n      <button\n        type=\"button\"\n        onClick={() =>\n          onEdit(selectedCorrelationIdDim1, selectedCorrelationIdDim2)\n        }\n      >\n        Move\n      </button>\n    </div>\n  );\n}\n\nexport default MoveLink;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { getLinkDim, Link } from 'nmr-correlation';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport CloseButton from '../../../../elements/CloseButton';\nimport Tab from '../../../../elements/Tab/Tab';\nimport Tabs, { PositionsEnum } from '../../../../elements/Tab/Tabs';\nimport { getEditedCorrelations } from '../../utilities/Utilities';\n\nimport EditLinkConfirmation from './Confirmation';\nimport EditPathLength from './EditPathLength';\nimport MoveLink from './MoveLink';\n\nconst modalContainer = css`\n  width: 490px;\n  height: 220px;\n  padding: 5px;\n\n  button:focus {\n    outline: none;\n  }\n\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    align-items: center;\n\n    button {\n      height: 36px;\n      margin: 2px;\n      background-color: transparent;\n      border: none;\n      svg {\n        height: 16px;\n      }\n    }\n\n    p {\n      font-weight: bold;\n\n      margin-bottom: 5px;\n      margin-right: 30px;\n      padding: 0px 10px;\n      width: 100%;\n\n      text-align: center;\n    }\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 20%;\n\n    color: white;\n    background-color: gray;\n  }\n\n  .tabs-container {\n    width: 100%;\n    flex: 1;\n    overflow: auto;\n    border: none;\n  }\n`;\n\nexport default function EditLinkModal({\n  correlationDim1,\n  correlationDim2,\n  link,\n  correlations,\n  onClose,\n  onEdit,\n}) {\n  const [activeTab, setActiveTab] = useState<string>('move');\n\n  const getLinkLabel = useCallback(() => {\n    const linkDim = getLinkDim(link);\n    if (linkDim === 1) {\n      return ` 1D (${link.signal.delta.toFixed(3)})`;\n    } else if (linkDim === 2) {\n      return `${link.signal.x ? `${link.signal.x.delta.toFixed(2)}` : '?'} (${\n        correlationDim1.label.origin\n      }), ${link.signal.y ? link.signal.y.delta.toFixed(2) : '?'} (${\n        correlationDim2.label.origin\n      })`;\n    }\n\n    return '';\n  }, [correlationDim1.label.origin, link, correlationDim2]);\n\n  const handleOnEdit = useCallback(\n    (\n      action: 'move' | 'remove' | 'unmove' | 'setPathLength',\n      selectedCorrelationIdDim1: string | undefined,\n      selectedCorrelationIdDim2: string | undefined,\n      editedLink?: Link,\n    ) => {\n      const { editedCorrelations, buildCorrelationDataOptions } =\n        getEditedCorrelations({\n          correlationDim1,\n          correlationDim2,\n          selectedCorrelationIdDim1,\n          selectedCorrelationIdDim2,\n          action,\n          link: editedLink || link,\n          correlations,\n        });\n      onEdit(\n        editedCorrelations,\n        action,\n        editedLink || link,\n        buildCorrelationDataOptions,\n      );\n\n      onClose?.();\n    },\n    [correlationDim1, correlationDim2, correlations, link, onClose, onEdit],\n  );\n\n  const tabsContainer = useMemo(\n    () => (\n      <div className=\"tabs-container\">\n        <Tabs\n          position={PositionsEnum.TOP}\n          activeTab={activeTab}\n          onClick={(tab) => setActiveTab(tab.tabid)}\n        >\n          <Tab tablabel=\"Move\" tabid={'move'}>\n            <MoveLink\n              correlationDim1={correlationDim1}\n              correlationDim2={correlationDim2}\n              link={link}\n              correlations={correlations}\n              onEdit={(correlationIdDim1, correlationIdDim2) =>\n                handleOnEdit('move', correlationIdDim1, correlationIdDim2)\n              }\n            />\n          </Tab>\n          <Tab tablabel=\"Unmove\" tabid=\"unmove\">\n            <EditLinkConfirmation\n              description=\"Movement of signal to its original place.\"\n              onConfirm={() =>\n                handleOnEdit('unmove', correlationDim1.id, correlationDim2.id)\n              }\n            />\n          </Tab>\n          <Tab tablabel=\"Remove\" tabid={'remove'}>\n            <EditLinkConfirmation\n              description=\"Deletion of signal.\"\n              onConfirm={() => handleOnEdit('remove', undefined, undefined)}\n            />\n          </Tab>\n          <Tab tablabel=\"J Coupling\" tabid={'setPathLength'}>\n            <EditPathLength\n              signal={link.signal}\n              experimentType={link.experimentType}\n              onEdit={(editedSignal) => {\n                const editedLink = { ...link, signal: editedSignal };\n                handleOnEdit(\n                  'setPathLength',\n                  correlationDim1,\n                  correlationDim2,\n                  editedLink,\n                );\n              }}\n            />\n          </Tab>\n        </Tabs>\n      </div>\n    ),\n    [\n      activeTab,\n      correlationDim1,\n      correlationDim2,\n      correlations,\n      handleOnEdit,\n      link,\n    ],\n  );\n\n  return (\n    <div css={modalContainer}>\n      <div className=\"header handle\">\n        <CloseButton onClick={onClose} />\n        <p className=\"header-info\">{`${link.experimentType.toUpperCase()} signal at ${getLinkLabel()}`}</p>\n      </div>\n      {tabsContainer}\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { getCorrelationDelta, getLinkDim } from 'nmr-correlation';\nimport { useCallback, useMemo, useRef } from 'react';\n\nimport { buildID } from '../../../../data/utilities/Concatenation';\nimport { findRangeOrZoneID } from '../../../../data/utilities/FindUtilities';\nimport ContextMenu from '../../../elements/ContextMenu';\nimport { positions, useModal } from '../../../elements/popup/Modal';\nimport { useHighlight } from '../../../highlight';\nimport IsInView from '../utilities/IsInView';\nimport { getLabelColor } from '../utilities/Utilities';\n\nimport EditLinkModal from './editLink/EditLinkModal';\n\nfunction AdditionalColumnHeader({\n  spectraData,\n  correlationsData,\n  correlation,\n  onEdit,\n}) {\n  const contextRef = useRef<any>();\n  const modal = useModal();\n\n  const highlightIDsAdditionalColumn = useMemo(() => {\n    if (correlation.pseudo === true) {\n      return [];\n    }\n    const ids: string[] = [];\n    correlation.link.forEach((link) => {\n      if (link.pseudo === false) {\n        ids.push(link.signal.id);\n        ids.push(buildID(link.signal.id, 'Crosshair_X'));\n        const _id = findRangeOrZoneID(\n          spectraData,\n          link.experimentID,\n          link.signal.id,\n          true,\n        );\n        if (_id) {\n          ids.push(_id);\n        }\n      }\n    });\n\n    return ids;\n  }, [correlation, spectraData]);\n  const highlightAdditionalColumn = useHighlight(highlightIDsAdditionalColumn);\n\n  const mouseEnterHandler = useCallback(\n    (event) => {\n      event.currentTarget.focus();\n      highlightAdditionalColumn.show();\n    },\n    [highlightAdditionalColumn],\n  );\n  const mouseLeaveHandler = useCallback(\n    (event) => {\n      event.currentTarget.blur();\n      highlightAdditionalColumn.hide();\n    },\n    [highlightAdditionalColumn],\n  );\n\n  const isInView = IsInView({ correlation });\n\n  const tableHeaderProps = useMemo(() => {\n    return {\n      style: {\n        ...{ color: getLabelColor(correlationsData, correlation) || undefined },\n        backgroundColor: highlightAdditionalColumn.isActive\n          ? '#ff6f0057'\n          : isInView\n          ? '#f5f5dc'\n          : 'inherit',\n      },\n      title:\n        correlation.pseudo === false &&\n        correlation.link\n          .reduce((arr, link) => {\n            if (\n              link.pseudo === false &&\n              !arr.includes(link.experimentType.toUpperCase())\n            ) {\n              arr.push(link.experimentType.toUpperCase());\n            }\n            return arr;\n          }, [])\n          .sort()\n          .join('/'),\n      onMouseEnter: mouseEnterHandler,\n      onMouseLeave: mouseLeaveHandler,\n    };\n  }, [\n    correlation,\n    correlationsData,\n    highlightAdditionalColumn.isActive,\n    isInView,\n    mouseEnterHandler,\n    mouseLeaveHandler,\n  ]);\n\n  const equivalenceTextStyle = useMemo(() => {\n    return correlation.edited.equivalence\n      ? { backgroundColor: '#F7F2E0' }\n      : {\n          color: Number.isInteger(correlation.equivalence)\n            ? correlation.equivalence === 1\n              ? '#bebebe'\n              : 'black'\n            : 'red',\n        };\n  }, [correlation]);\n\n  const contextMenu = useMemo(() => {\n    return correlation.pseudo === false\n      ? correlation.link\n          .filter((link) => getLinkDim(link) === 1 && link.pseudo === false)\n          .map((link) => {\n            return {\n              label: `edit 1D (${link.signal.delta.toFixed(3)}${\n                link.edited?.moved === true ? '[MOVED]' : ''\n              })`,\n              onClick: () => {\n                highlightAdditionalColumn.hide();\n                modal.show(\n                  <EditLinkModal\n                    onClose={() => modal.close()}\n                    onEdit={onEdit}\n                    link={link}\n                    correlationDim1={correlation}\n                    correlationDim2={undefined}\n                    correlations={correlationsData.values}\n                  />,\n                  { position: positions.MIDDLE_RIGHT, isBackgroundBlur: false },\n                );\n              },\n            };\n          })\n          .concat([\n            {\n              label: `delete all (${correlation.label.origin})`,\n              onClick: () => {\n                modal.showConfirmDialog({\n                  message: `All signals of ${correlation.label.origin} (${(\n                    getCorrelationDelta(correlation) as number\n                  ).toFixed(2)}) will be deleted. Are you sure?`,\n                  buttons: [\n                    {\n                      text: 'Yes',\n                      handler: () => {\n                        onEdit([correlation], 'removeAll');\n                      },\n                    },\n                    { text: 'No' },\n                  ],\n                });\n                highlightAdditionalColumn.hide();\n              },\n            },\n          ])\n      : [];\n  }, [\n    correlation,\n    correlationsData.values,\n    highlightAdditionalColumn,\n    modal,\n    onEdit,\n  ]);\n\n  const contextMenuHandler = useCallback(\n    (e) => {\n      e.preventDefault();\n      contextRef.current.handleContextMenu(e);\n    },\n    [contextRef],\n  );\n\n  const { title, ...thProps } = tableHeaderProps;\n\n  return (\n    <th {...thProps} title={title === false ? undefined : title}>\n      <div\n        style={{ display: 'block' }}\n        onContextMenu={(e) => {\n          if (contextMenu.length > 0) {\n            contextMenuHandler(e);\n          }\n        }}\n      >\n        <p>{correlation.label.origin}</p>\n        <p>\n          {getCorrelationDelta(correlation)\n            ? getCorrelationDelta(correlation)?.toFixed(2)\n            : ''}\n        </p>\n        <p style={equivalenceTextStyle}>\n          {Number.isInteger(correlation.equivalence)\n            ? correlation.equivalence\n            : correlation.equivalence.toFixed(2)}\n        </p>\n        <ContextMenu ref={contextRef} context={contextMenu} />\n      </div>\n    </th>\n  );\n}\n\nexport default AdditionalColumnHeader;\n","import { buildLink, Correlation, Link } from 'nmr-correlation';\nimport { useCallback, useMemo, useRef } from 'react';\n\nimport { buildID } from '../../../../data/utilities/Concatenation';\nimport { findRangeOrZoneID } from '../../../../data/utilities/FindUtilities';\nimport generateID from '../../../../data/utilities/generateID';\nimport ContextMenu from '../../../elements/ContextMenu';\nimport { positions, useModal } from '../../../elements/popup/Modal';\nimport { useHighlight } from '../../../highlight';\nimport IsInView from '../utilities/IsInView';\nimport {\n  cloneCorrelationAndEditLink,\n  getAbbreviation,\n} from '../utilities/Utilities';\n\nimport EditLinkModal from './editLink/EditLinkModal';\n\nfunction AdditionalColumnField({\n  rowCorrelation,\n  columnCorrelation,\n  commonLinks,\n  correlations,\n  spectraData,\n  onEdit,\n}) {\n  const contextRef = useRef<any>();\n  const modal = useModal();\n\n  const highlightIDsCommonLinks = useMemo(() => {\n    const ids: Array<any> = [];\n    commonLinks.forEach((link: Link) => {\n      if (link.pseudo === false) {\n        ids.push(link.signal.id);\n        ids.push(buildID(link.signal.id, 'Crosshair'));\n        const _id = findRangeOrZoneID(\n          spectraData,\n          link.experimentID,\n          link.signal.id,\n          true,\n        );\n        if (_id) {\n          ids.push(_id);\n        }\n      }\n    });\n\n    return ids;\n  }, [commonLinks, spectraData]);\n  const highlightCommonLinks = useHighlight(highlightIDsCommonLinks);\n\n  const mouseEnterHandler = useCallback(\n    (event) => {\n      event.currentTarget.focus();\n      highlightCommonLinks.show();\n    },\n    [highlightCommonLinks],\n  );\n  const mouseLeaveHandler = useCallback(\n    (event) => {\n      event.currentTarget.blur();\n      highlightCommonLinks.hide();\n    },\n    [highlightCommonLinks],\n  );\n\n  const contextMenuHandler = useCallback(\n    (e) => {\n      e.preventDefault();\n      contextRef.current.handleContextMenu(e);\n    },\n    [contextRef],\n  );\n\n  const handleEditPseudoHSQC = useCallback(\n    (action: 'add' | 'remove', link?: Link) => {\n      const pseudoLinkCountHSQC = rowCorrelation.link.filter(\n        (_link) =>\n          (_link.experimentType === 'hsqc' ||\n            _link.experimentType === 'hmqc') &&\n          _link.pseudo === true,\n      ).length;\n\n      let _correlationDim1: Correlation;\n      let _correlationDim2: Correlation;\n      if (action === 'add') {\n        const commonPseudoLink = buildLink({\n          experimentType: 'hsqc',\n          experimentID: generateID(),\n          atomType: [columnCorrelation.atomType, rowCorrelation.atomType],\n          id: generateID(),\n          pseudo: true,\n          signal: { id: generateID(), sign: 0 }, // pseudo signal\n        });\n        _correlationDim1 = cloneCorrelationAndEditLink(\n          columnCorrelation,\n          commonPseudoLink,\n          'x',\n          'add',\n        );\n        _correlationDim2 = cloneCorrelationAndEditLink(\n          rowCorrelation,\n          commonPseudoLink,\n          'y',\n          'add',\n        );\n        // increase number of attached protons if no value was specified manually before\n        if (!_correlationDim2.edited.protonsCount) {\n          _correlationDim2.protonsCount = [pseudoLinkCountHSQC + 1];\n        }\n      } else {\n        _correlationDim1 = cloneCorrelationAndEditLink(\n          columnCorrelation,\n          link,\n          'x',\n          'remove',\n        );\n        _correlationDim2 = cloneCorrelationAndEditLink(\n          rowCorrelation,\n          link,\n          'y',\n          'remove',\n        );\n        // decrease number of attached protons if no value was specified manually before\n        if (!_correlationDim2.edited.protonsCount) {\n          _correlationDim2.protonsCount =\n            pseudoLinkCountHSQC - 1 > 0 ? [pseudoLinkCountHSQC - 1] : [];\n        }\n      }\n\n      onEdit([_correlationDim1, _correlationDim2], action, link, {\n        skipDataUpdate: true,\n      });\n    },\n    [columnCorrelation, onEdit, rowCorrelation],\n  );\n\n  const contextMenu = useMemo(() => {\n    // allow the edition of correlations\n    const commonLinksMenu = commonLinks\n      .map((commonLink) => {\n        const commonLinkContextMenuLabel = `${getAbbreviation(commonLink)} (${\n          commonLink.signal.x ? commonLink.signal.x.delta.toFixed(2) : '?'\n        }, ${\n          commonLink.signal.y ? commonLink.signal.y.delta.toFixed(2) : '?'\n        })${commonLink.edited?.moved === true ? '[MOVED]' : ''}`;\n\n        return commonLink.pseudo === false\n          ? [\n              {\n                label: `edit ${commonLinkContextMenuLabel}`,\n                onClick: () => {\n                  highlightCommonLinks.hide();\n                  modal.show(\n                    <EditLinkModal\n                      onClose={() => modal.close()}\n                      onEdit={onEdit}\n                      link={commonLink}\n                      correlationDim1={columnCorrelation}\n                      correlationDim2={rowCorrelation}\n                      correlations={correlations}\n                    />,\n                    {\n                      position: positions.MIDDLE_RIGHT,\n                      isBackgroundBlur: false,\n                    },\n                  );\n                },\n              },\n            ]\n          : [];\n      })\n      .flat();\n    // allow addition or removal of a pseudo HSQC link between pseudo heavy atom and proton\n    const commonPseudoLinkHSQC = commonLinks.find(\n      (commonLink) =>\n        commonLink.pseudo === true && commonLink.experimentType === 'hsqc',\n    );\n    if (rowCorrelation.pseudo === true) {\n      if (commonPseudoLinkHSQC) {\n        commonLinksMenu.push({\n          label: 'remove pseudo HSQC',\n          onClick: () => handleEditPseudoHSQC('remove', commonPseudoLinkHSQC),\n        });\n      } else {\n        commonLinksMenu.push({\n          label: 'add pseudo HSQC',\n          onClick: () => handleEditPseudoHSQC('add'),\n        });\n      }\n    }\n\n    return commonLinksMenu;\n  }, [\n    columnCorrelation,\n    commonLinks,\n    correlations,\n    handleEditPseudoHSQC,\n    highlightCommonLinks,\n    modal,\n    onEdit,\n    rowCorrelation,\n  ]);\n\n  const contentLabel = useMemo(\n    () =>\n      commonLinks.map((commonLink, i) => (\n        <label key={commonLink.id}>\n          <label\n            style={{\n              color:\n                commonLink.pseudo === true || commonLink.edited?.moved === true\n                  ? 'blue'\n                  : 'black',\n            }}\n          >\n            {getAbbreviation(commonLink)}\n          </label>\n          {i < commonLinks.length - 1 && <label>/</label>}\n        </label>\n      )),\n    [commonLinks],\n  );\n\n  const title = useMemo(\n    () =>\n      commonLinks\n        .reduce((arr, link) => {\n          if (!arr.includes(link.experimentType.toUpperCase())) {\n            arr.push(link.experimentType.toUpperCase());\n          }\n          return arr;\n        }, [])\n        .join('/'),\n    [commonLinks],\n  );\n\n  const isInViewRow = IsInView({ correlation: rowCorrelation });\n  const isInViewColumn = IsInView({ correlation: columnCorrelation });\n\n  return (\n    <td\n      onContextMenu={(e) => {\n        if (contextMenu.length > 0) {\n          contextMenuHandler(e);\n        }\n      }}\n      style={{\n        backgroundColor: highlightCommonLinks.isActive\n          ? '#ff6f0057'\n          : isInViewColumn || isInViewRow\n          ? '#f5f5dc'\n          : 'inherit',\n      }}\n      title={title}\n      onMouseEnter={mouseEnterHandler}\n      onMouseLeave={mouseLeaveHandler}\n    >\n      {contentLabel}\n      <ContextMenu ref={contextRef} context={contextMenu} />\n    </td>\n  );\n}\n\nexport default AdditionalColumnField;\n","import {\n  buildLink,\n  getCorrelationDelta,\n  getLabel,\n  getLinkDim,\n  Link,\n} from 'nmr-correlation';\nimport { useCallback, useMemo, useRef } from 'react';\n\nimport { buildID } from '../../../../data/utilities/Concatenation';\nimport { findRangeOrZoneID } from '../../../../data/utilities/FindUtilities';\nimport ContextMenu from '../../../elements/ContextMenu';\nimport EditableColumn from '../../../elements/EditableColumn';\nimport { positions, useModal } from '../../../elements/popup/Modal';\nimport { useHighlight } from '../../../highlight';\nimport IsInView from '../utilities/IsInView';\nimport { convertValuesString } from '../utilities/Utilities';\n\nimport AdditionalColumnField from './AdditionalColumnField';\nimport EditLinkModal from './editLink/EditLinkModal';\n\nfunction CorrelationTableRow({\n  additionalColumnData,\n  correlations,\n  correlation,\n  styleRow,\n  styleLabel,\n  onSaveEditEquivalences,\n  onSaveEditNumericValues,\n  onEditCorrelationTableCellHandler,\n  spectraData,\n}) {\n  const contextRef = useRef<any>();\n  const modal = useModal();\n\n  const highlightIDsRow = useMemo(() => {\n    if (correlation.pseudo === true) {\n      return [];\n    }\n    const ids: string[] = [];\n\n    correlation.link.forEach((link) => {\n      if (link.pseudo === false) {\n        ids.push(link.signal.id);\n        ids.push(buildID(link.signal.id, 'Crosshair_Y'));\n        const _id = findRangeOrZoneID(\n          spectraData,\n          link.experimentID,\n          link.signal.id,\n          true,\n        );\n        if (_id) {\n          ids.push(_id);\n        }\n      }\n    });\n\n    return ids;\n  }, [correlation, spectraData]);\n  const highlightRow = useHighlight(highlightIDsRow);\n\n  const onSaveEquivalencesHandler = useCallback(\n    (e) => {\n      onSaveEditEquivalences(correlation, e.target.value);\n    },\n    [correlation, onSaveEditEquivalences],\n  );\n\n  const onSaveEditNumericValuesHandler = useCallback(\n    (e, key: 'protonsCount' | 'hybridization') => {\n      onSaveEditNumericValues({\n        correlation,\n        values: convertValuesString(e.target.value, key),\n        key,\n      });\n    },\n    [correlation, onSaveEditNumericValues],\n  );\n\n  const additionalColumnFields = useMemo(() => {\n    return additionalColumnData.map((_correlation) => {\n      const commonLinks: Link[] = [];\n      correlation.link.forEach((link) => {\n        _correlation.link.forEach((_link) => {\n          if (\n            link.axis !== _link.axis &&\n            link.experimentID === _link.experimentID &&\n            link.signal.id === _link.signal.id &&\n            !commonLinks.some(\n              (_commonLink) => _commonLink.signal.id === link.signal.id,\n            )\n          ) {\n            let experimentLabel = link.experimentType;\n            if (link.signal && link.signal.sign !== 0) {\n              experimentLabel += link.signal.sign === 1 ? ' (+)' : ' (-)';\n            }\n            commonLinks.push(\n              buildLink({\n                ...link,\n                experimentLabel,\n                axis: undefined,\n                id: `${_link.id}_${link.id}`,\n              }),\n            );\n          }\n        });\n      });\n\n      return (\n        <AdditionalColumnField\n          key={`addColData_${correlation.id}_${_correlation.id}`}\n          rowCorrelation={correlation}\n          columnCorrelation={_correlation}\n          commonLinks={commonLinks}\n          correlations={correlations}\n          spectraData={spectraData}\n          onEdit={onEditCorrelationTableCellHandler}\n        />\n      );\n    });\n  }, [\n    additionalColumnData,\n    correlation,\n    correlations,\n    onEditCorrelationTableCellHandler,\n    spectraData,\n  ]);\n\n  const equivalenceCellStyle = useMemo(() => {\n    return correlation.edited.equivalence\n      ? { color: 'blue' }\n      : {\n          color: correlation.equivalence === 1 ? '#bebebe' : 'black',\n        };\n  }, [correlation]);\n\n  const mouseEnterHandler = useCallback(\n    (event) => {\n      event.currentTarget.focus();\n      highlightRow.show();\n    },\n    [highlightRow],\n  );\n  const mouseLeaveHandler = useCallback(\n    (event) => {\n      event.currentTarget.blur();\n      highlightRow.hide();\n    },\n    [highlightRow],\n  );\n\n  const isInView = IsInView({ correlation });\n\n  const tableDataProps = useMemo(() => {\n    return {\n      style: {\n        ...styleRow,\n        backgroundColor: highlightRow.isActive\n          ? '#ff6f0057'\n          : isInView\n          ? '#f5f5dc'\n          : 'inherit',\n      },\n      title:\n        correlation.pseudo === false &&\n        correlation.link\n          .reduce((arr, link) => {\n            if (\n              link.pseudo === false &&\n              !arr.includes(link.experimentType.toUpperCase())\n            ) {\n              arr.push(link.experimentType.toUpperCase());\n            }\n            return arr;\n          }, [])\n          .sort()\n          .join('/'),\n      onMouseEnter: mouseEnterHandler,\n      onMouseLeave: mouseLeaveHandler,\n    };\n  }, [\n    correlation.link,\n    correlation.pseudo,\n    highlightRow.isActive,\n    isInView,\n    mouseEnterHandler,\n    mouseLeaveHandler,\n    styleRow,\n  ]);\n\n  const contextMenu = useMemo(() => {\n    return correlation.pseudo === false\n      ? correlation.link\n          .filter((link) => getLinkDim(link) === 1 && link.pseudo === false)\n          .map((link) => {\n            return {\n              label: `edit 1D (${link.signal.delta.toFixed(3)})${\n                link.edited?.moved === true ? '[MOVED]' : ''\n              }`,\n              onClick: () => {\n                highlightRow.hide();\n                modal.show(\n                  <EditLinkModal\n                    onClose={() => modal.close()}\n                    onEdit={onEditCorrelationTableCellHandler}\n                    link={link}\n                    correlationDim1={correlation}\n                    correlationDim2={undefined}\n                    correlations={correlations}\n                  />,\n                  {\n                    position: positions.MIDDLE_RIGHT,\n                    isBackgroundBlur: false,\n                  },\n                );\n              },\n            };\n          })\n          .concat([\n            {\n              label: `delete ${correlation.label.origin}`,\n              onClick: () => {\n                modal.showConfirmDialog({\n                  message: `All signals of ${correlation.label.origin} (${(\n                    getCorrelationDelta(correlation) as number\n                  ).toFixed(2)}) will be deleted. Are you sure?`,\n                  buttons: [\n                    {\n                      text: 'Yes',\n                      handler: () => {\n                        onEditCorrelationTableCellHandler(\n                          [correlation],\n                          'removeAll',\n                        );\n                      },\n                    },\n                    { text: 'No' },\n                  ],\n                });\n                highlightRow.hide();\n              },\n            },\n          ])\n      : [];\n  }, [\n    correlation,\n    highlightRow,\n    modal,\n    onEditCorrelationTableCellHandler,\n    correlations,\n  ]);\n\n  const contextMenuHandler = useCallback(\n    (e) => {\n      e.preventDefault();\n      contextRef.current.handleContextMenu(e);\n    },\n    [contextRef],\n  );\n\n  const { title, ...otherTableDataProps } = tableDataProps;\n  const t = !title ? '' : title;\n\n  return (\n    <tr style={styleRow}>\n      <td\n        title={t}\n        {...{\n          ...otherTableDataProps,\n          style: { ...tableDataProps.style, styleLabel },\n        }}\n        onContextMenu={(e) => {\n          if (contextMenu.length > 0) {\n            contextMenuHandler(e);\n          }\n        }}\n      >\n        {getLabel(correlations, correlation)}\n        <ContextMenu ref={contextRef} context={contextMenu} />\n      </td>\n      <td title={t} {...otherTableDataProps}>\n        {getCorrelationDelta(correlation)\n          ? getCorrelationDelta(correlation)?.toFixed(2)\n          : ''}\n      </td>\n      <td title={t} {...otherTableDataProps}>\n        {correlation.pseudo === false ? (\n          correlation.atomType !== 'H' ? (\n            <EditableColumn\n              type=\"number\"\n              value={correlation.equivalence}\n              style={equivalenceCellStyle}\n              onSave={onSaveEquivalencesHandler}\n            />\n          ) : (\n            <text style={equivalenceCellStyle}>{correlation.equivalence}</text>\n          )\n        ) : (\n          ''\n        )}\n      </td>\n      <td title={t} {...otherTableDataProps}>\n        {correlation.atomType !== 'H' ? (\n          <EditableColumn\n            type=\"text\"\n            value={correlation.protonsCount.join(',')}\n            style={correlation.edited.protonsCount ? { color: 'blue' } : {}}\n            onSave={(e) => onSaveEditNumericValuesHandler(e, 'protonsCount')}\n          />\n        ) : (\n          ''\n        )}\n      </td>\n      <td\n        title={t}\n        {...{\n          ...otherTableDataProps,\n          style: { ...tableDataProps.style, borderRight: '1px solid' },\n        }}\n      >\n        {correlation.atomType !== 'H' ? (\n          <EditableColumn\n            type=\"text\"\n            value={correlation.hybridization\n              .map((hybrid) => `sp${hybrid}`)\n              .join(',')}\n            style={correlation.edited.hybridization ? { color: 'blue' } : {}}\n            onSave={(e) => onSaveEditNumericValuesHandler(e, 'hybridization')}\n          />\n        ) : (\n          ''\n        )}\n      </td>\n      {additionalColumnFields}\n    </tr>\n  );\n}\n\nexport default CorrelationTableRow;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Correlation } from 'nmr-correlation';\nimport { useMemo } from 'react';\n\nimport { getLabelColor } from '../utilities/Utilities';\n\nimport AdditionalColumnHeader from './AdditionalColumnHeader';\nimport CorrelationTableRow from './CorrelationTableRow';\n\nconst tableStyle = css`\n  overflow: auto;\n  height: 100%;\n  display: block;\n  table {\n    border-spacing: 0;\n    border: 1px solid #dedede;\n    width: 100%;\n    font-size: 12px;\n    height: 100%;\n  }\n  tr {\n    :last-child {\n      td {\n        border-bottom: 0;\n      }\n    }\n  }\n  thead tr {\n    background-color: white !important;\n  }\n  th {\n    position: sticky;\n    background-color: white;\n    top: 0;\n  }\n\n  th,\n  td {\n    white-space: nowrap;\n    text-align: center;\n    margin: 0;\n    padding: 0.4rem;\n    border-bottom: 1px solid #dedede;\n    border-right: 1px solid #dedede;\n\n    :last-child {\n      border-right: 0;\n    }\n    button {\n      background-color: transparent;\n      border: none;\n    }\n  }\n`;\n\nfunction CorrelationTable({\n  correlationsData,\n  filteredCorrelationsData,\n  additionalColumnData,\n  editEquivalencesSaveHandler,\n  onSaveEditNumericValues,\n  onEditCorrelationTableCellHandler,\n  showProtonsAsRows,\n  spectraData,\n}) {\n  const rows = useMemo(() => {\n    if (!filteredCorrelationsData) {\n      return [];\n    }\n\n    return filteredCorrelationsData.values\n      .filter((correlation: Correlation) =>\n        showProtonsAsRows\n          ? correlation.atomType === 'H'\n          : correlation.atomType !== 'H',\n      )\n      .map((correlation: Correlation) => (\n        <CorrelationTableRow\n          additionalColumnData={additionalColumnData}\n          correlations={correlationsData.values}\n          correlation={correlation}\n          key={`correlation${correlation.atomType}${correlation.id}`}\n          styleRow={{ backgroundColor: 'mintcream' }}\n          styleLabel={\n            correlation.atomType === 'H'\n              ? {\n                  color: getLabelColor(correlationsData, correlation),\n                }\n              : {}\n          }\n          onSaveEditEquivalences={editEquivalencesSaveHandler}\n          onSaveEditNumericValues={onSaveEditNumericValues}\n          onEditCorrelationTableCellHandler={onEditCorrelationTableCellHandler}\n          spectraData={spectraData}\n        />\n      ));\n  }, [\n    filteredCorrelationsData,\n    showProtonsAsRows,\n    additionalColumnData,\n    correlationsData,\n    editEquivalencesSaveHandler,\n    onSaveEditNumericValues,\n    onEditCorrelationTableCellHandler,\n    spectraData,\n  ]);\n\n  const additionalColumnHeader = useMemo(\n    () =>\n      additionalColumnData.map((correlation: Correlation) => (\n        <AdditionalColumnHeader\n          key={`additionalCorrelationHeader_${correlation.id}`}\n          spectraData={spectraData}\n          correlationsData={correlationsData}\n          correlation={correlation}\n          onEdit={onEditCorrelationTableCellHandler}\n        />\n      )),\n    [\n      additionalColumnData,\n      correlationsData,\n      onEditCorrelationTableCellHandler,\n      spectraData,\n    ],\n  );\n\n  return (\n    <div css={tableStyle}>\n      <table>\n        <thead>\n          <tr>\n            <th>Atom</th>\n            <th>δ (ppm)</th>\n            <th>Equiv</th>\n            <th>#H</th>\n            <th style={{ borderRight: '1px solid' }}>Hybrid</th>\n            {additionalColumnHeader}\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default CorrelationTable;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { getAtomCounts } from 'nmr-correlation';\nimport { memo } from 'react';\n\nimport { ErrorColors, Errors } from './CorrelationTable/Constants';\n\nconst styles = css`\n  display: flex;\n  width: 100%;\n  font-size: 15px;\n  font-weight: 300;\n  white-space: nowrap;\n  span {\n    margin-left: 8px;\n  }\n`;\n\ninterface OverviewProps {\n  correlationsData?: {\n    options: {\n      mf: string;\n    };\n    state: any;\n  };\n}\n\nfunction Overview({ correlationsData }: OverviewProps) {\n  if (!correlationsData) {\n    return null;\n  }\n\n  const atoms = getAtomCounts(correlationsData.options.mf);\n\n  const elements =\n    Object.keys(atoms).length > 0 ? (\n      Object.keys(atoms).map((atomType, i) => {\n        const stateAtomType = correlationsData.state[atomType];\n        const error = stateAtomType ? stateAtomType.error : undefined;\n        const errorColorIndex = error\n          ? Errors.findIndex((_error) => error[_error] !== undefined)\n          : 'black';\n\n        return (\n          <span\n            // eslint-disable-next-line react/no-array-index-key\n            key={`molFormulaView_${i}`}\n            style={{\n              color: stateAtomType\n                ? stateAtomType.complete === true &&\n                  (!error || Object.keys(error).length === 0)\n                  ? 'green'\n                  : errorColorIndex >= 0\n                  ? ErrorColors[errorColorIndex].color\n                  : 'black'\n                : 'black',\n            }}\n          >\n            {`${atomType}: ${stateAtomType ? stateAtomType.current : '-'}/${\n              atoms[atomType]\n            }   `}\n          </span>\n        );\n      })\n    ) : (\n      <p style={{ fontStyle: 'italic', color: 'orange' }}>\n        Molecular formula is not set\n      </p>\n    );\n\n  return <div css={styles}>{elements}</div>;\n}\n\nexport default memo(Overview);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useState } from 'react';\n\nimport getAtomsFromMF from '../../data/utilities/getAtomsFromMF';\n\nconst inputStyle = css`\n  text-align: center;\n\n  input {\n    height: 100%;\n    width: 200px;\n    border-radius: 5px;\n    border: 0.55px solid #c7c7c7;\n    margin: 0px 5px 0px 5px;\n    text-align: center;\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 36px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 20%;\n\n    color: white;\n    background-color: gray;\n  }\n`;\n\ninterface MolecularFormulaInputProps {\n  onSave?: (element: string) => void;\n  previousMF: string;\n}\n\nfunction MolecularFormulaInput({\n  onSave = () => null,\n  previousMF,\n}: MolecularFormulaInputProps) {\n  const [mf, setMF] = useState('');\n  const [isValidMF, setIsValidMF] = useState(true);\n  const [hasChanged, setHasChanged] = useState(false);\n\n  const checkMF = useCallback((mf: string) => {\n    if (mf.trim().length === 0) {\n      return false;\n    }\n    try {\n      getAtomsFromMF(mf);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }, []);\n\n  const onChangeHandler = useCallback(\n    (e) => {\n      setHasChanged(true);\n      if (checkMF(e.target.value)) {\n        setIsValidMF(true);\n        setMF(e.target.value);\n      } else {\n        setIsValidMF(false);\n        setMF('');\n      }\n    },\n    [checkMF],\n  );\n\n  const onSaveHandler = useCallback(() => {\n    onSave(hasChanged ? mf.trim() : previousMF);\n  }, [hasChanged, mf, onSave, previousMF]);\n\n  return (\n    <div css={inputStyle}>\n      <input type=\"text\" onChange={onChangeHandler} defaultValue={previousMF} />\n      <button type=\"button\" onClick={onSaveHandler} disabled={!isValidMF}>\n        {isValidMF ? 'Set' : 'Invalid'}\n      </button>\n    </div>\n  );\n}\n\nexport default MolecularFormulaInput;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport CloseButton from '../../elements/CloseButton';\nimport MolecularFormulaInput from '../../elements/MolecularFormulaInput';\nimport MoleculeSelection from '../../elements/MoleculeSelection';\n\nconst modalContainer = css`\n  overflow: auto;\n  width: 400px;\n  height: 550px;\n  padding: 5px;\n  button:focus {\n    outline: none;\n  }\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    align-items: center;\n\n    button {\n      height: 36px;\n      margin: 2px;\n      background-color: transparent;\n      border: none;\n      svg {\n        height: 16px;\n      }\n    }\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 20%;\n\n    color: white;\n    background-color: gray;\n  }\n\n  .info {\n    margin-top: 0;\n    margin-bottom: 10px;\n    padding: 0px 10px;\n    width: 100%;\n\n    text-align: center;\n  }\n\n  .optional {\n    margin-top: 20px;\n    margin-bottom: 5px;\n    padding: 0px 10px;\n\n    text-align: center;\n    font-size: 18px;\n    font-weight: bold;\n  }\n  .optional2 {\n    margin-top: 5px;\n    margin-bottom: 25px;\n    padding: 0px 10px;\n    width: 100%;\n\n    text-align: center;\n  }\n`;\n\ninterface SetMolecularFormulaModalProps {\n  onClose: () => void;\n  onSave?: (element: any) => void;\n  molecules: any;\n  previousMF: any;\n}\n\nexport default function SetMolecularFormulaModal({\n  onClose,\n  onSave,\n  molecules,\n  previousMF,\n}: SetMolecularFormulaModalProps) {\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  useEffect(() => {\n    if (molecules && molecules.length > 0) {\n      setCurrentIndex(0);\n    }\n  }, [molecules]);\n\n  const onSaveHandlerMolecularFormulaInput = useCallback(\n    (mf) => {\n      onSave?.(mf);\n      onClose?.();\n    },\n    [onClose, onSave],\n  );\n\n  const onSaveHandlerMoleculeSelection = useCallback(() => {\n    onSave?.(molecules[currentIndex].mf);\n    onClose?.();\n  }, [currentIndex, molecules, onClose, onSave]);\n\n  const onChangeHandlerMoleculeSelection = useCallback((index) => {\n    setCurrentIndex(index);\n  }, []);\n\n  return (\n    <div css={modalContainer}>\n      <div className=\"header handle\">\n        <CloseButton onClick={onClose} />\n      </div>\n      <div>\n        <p className=\"info\">Please type in a molecular formula!</p>\n      </div>\n      <MolecularFormulaInput\n        onSave={onSaveHandlerMolecularFormulaInput}\n        previousMF={previousMF}\n      />\n      <div>\n        <p className=\"optional\">OR</p>\n        <p className=\"optional2\">Select a molecule as reference!</p>\n      </div>\n      <MoleculeSelection\n        molecules={molecules}\n        onChange={onChangeHandlerMoleculeSelection}\n      />\n      <button type=\"button\" onClick={onSaveHandlerMoleculeSelection}>\n        Set\n      </button>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport CloseButton from '../../elements/CloseButton';\n\nconst modalContainer = css`\n  width: 220px;\n  height: 270px;\n  padding: 5px;\n  text-align: center;\n\n  button:focus {\n    outline: none;\n  }\n\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    align-items: center;\n\n    span {\n      color: #464646;\n      font-size: 15px;\n      flex: 1;\n      user-select: none;\n    }\n\n    button {\n      height: 36px;\n      margin: 2px;\n      background-color: transparent;\n      border: none;\n      svg {\n        height: 16px;\n      }\n    }\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 20%;\n\n    color: white;\n    background-color: gray;\n  }\n\n  table {\n    margin-top: 10px;\n    width: 100%;\n\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n    }\n\n    input {\n      width: 100px;\n      text-align: center;\n      border-radius: 5px;\n      border: 0.55px solid #c7c7c7;\n    }\n  }\n`;\n\ninterface SetShiftToleranceModalProps {\n  onClose: () => void;\n  onSave?: (element: any) => void;\n  previousTolerance: any;\n}\n\nexport default function SetShiftToleranceModal({\n  onClose,\n  onSave,\n  previousTolerance,\n}: SetShiftToleranceModalProps) {\n  const [tolerance, setTolerance] = useState<any>();\n  const [isValid, setIsValid] = useState<{ [atomType: string]: boolean }>({});\n\n  useEffect(() => {\n    if (previousTolerance) {\n      setTolerance(previousTolerance);\n      const _isValid = {};\n      Object.keys(previousTolerance).forEach((atomType) => {\n        _isValid[atomType] = true;\n      });\n      setIsValid(_isValid);\n    } else {\n      setTolerance(undefined);\n    }\n  }, [previousTolerance]);\n\n  const onSaveHandler = useCallback(() => {\n    onSave?.(tolerance);\n    onClose?.();\n  }, [onClose, onSave, tolerance]);\n\n  const onChangeHandler = useCallback(\n    (e, atomType: string) => {\n      const value: string = e.target.value;\n      if (value.trim().length > 0) {\n        setTolerance({ ...tolerance, [atomType]: Number(value) });\n        setIsValid({ ...isValid, [atomType]: true });\n      } else {\n        setIsValid({ ...isValid, [atomType]: false });\n      }\n    },\n    [isValid, tolerance],\n  );\n\n  const rows = useMemo(() => {\n    return tolerance\n      ? Object.keys(tolerance).map((atomType) => {\n          return (\n            <tr key={`tolerance_${atomType}`}>\n              <td>{atomType}</td>\n              <td>\n                <input\n                  type=\"number\"\n                  onChange={(e) => onChangeHandler(e, atomType)}\n                  defaultValue={tolerance[atomType]}\n                  style={\n                    !isValid[atomType] ? { backgroundColor: 'orange' } : {}\n                  }\n                />\n              </td>\n            </tr>\n          );\n        })\n      : undefined;\n  }, [isValid, onChangeHandler, tolerance]);\n\n  return (\n    <div css={modalContainer}>\n      <div className=\"header handle\">\n        <span>Set Shift Tolerances</span>\n        <CloseButton onClick={onClose} />\n      </div>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Atom</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n      <button\n        type=\"button\"\n        onClick={onSaveHandler}\n        disabled={Object.keys(isValid).some((atomType) => !isValid[atomType])}\n      >\n        Set\n      </button>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  getLinkDelta,\n  getLinkDim,\n  Correlation,\n  Values as CorrelationValues,\n  Options as CorrelationOptions,\n  Link,\n} from 'nmr-correlation';\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport { FaFlask, FaSlidersH } from 'react-icons/fa';\n\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Datum2D } from '../../../data/types/data2d';\nimport {\n  findRange,\n  findSignal1D,\n  findSignal2D,\n  findSpectrum,\n  findZone,\n} from '../../../data/utilities/FindUtilities';\nimport { useAssignmentData } from '../../assignment/AssignmentsContext';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport Select from '../../elements/Select';\nimport ToolTip from '../../elements/ToolTip/ToolTip';\nimport { useModal } from '../../elements/popup/Modal';\nimport { DISPLAYER_MODE } from '../../reducer/core/Constants';\nimport {\n  DELETE_1D_SIGNAL,\n  DELETE_2D_SIGNAL,\n  DELETE_CORRELATION,\n  SET_2D_SIGNAL_PATH_LENGTH,\n  SET_CORRELATION,\n  SET_CORRELATIONS,\n  SET_CORRELATIONS_MF,\n  SET_CORRELATIONS_TOLERANCE,\n} from '../../reducer/types/Types';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\n\nimport CorrelationTable from './CorrelationTable/CorrelationTable';\nimport Overview from './Overview';\nimport SetMolecularFormulaModal from './SetMolecularFormulaModal';\nimport SetShiftToleranceModal from './SetShiftTolerancesModal';\nimport {\n  findSignalMatch1D,\n  findSignalMatch2D,\n  getAtomType,\n} from './utilities/Utilities';\n\nconst panelStyle = css`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  height: 100%;\n  width: 100%;\n\n  .extra-header-content {\n    display: flex;\n    width: 100%;\n\n    .overview-container {\n      width: 100%;\n      display: flex;\n      align-items: center;\n      margin-left: 10px;\n    }\n\n    .table-view-selection {\n      width: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: flex-end;\n      margin-right: 2px;\n\n      white-space: nowrap;\n\n      label {\n        font-size: 13px;\n      }\n    }\n  }\n`;\n\nfunction SummaryPanel() {\n  const {\n    molecules,\n    correlations: correlationsData,\n    data: spectraData,\n    xDomain,\n    yDomain,\n    displayerMode,\n    activeTab,\n  } = useChartData();\n\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const assignmentData = useAssignmentData();\n\n  const [additionalColumnData, setAdditionalColumnData] = useState([]);\n  const [\n    selectedAdditionalColumnsAtomType,\n    setSelectedAdditionalColumnsAtomType,\n  ] = useState<string>('H');\n  const [showProtonsAsRows, setShowProtonsAsRows] = useState(false);\n  const [filterIsActive, setFilterIsActive] = useState(false);\n\n  const filteredCorrelationsData = useMemo(() => {\n    const isInView = (correlation: Correlation): boolean => {\n      if (correlation.pseudo === true) {\n        return false;\n      }\n      const atomTypesInView = activeTab\n        .split(',')\n        .map((tab) => getAtomType(tab));\n\n      const factor = 10000;\n      const xDomain0 = xDomain[0] * factor;\n      const xDomain1 = xDomain[1] * factor;\n      const yDomain0 = yDomain[0] * factor;\n      const yDomain1 = yDomain[1] * factor;\n\n      if (displayerMode === DISPLAYER_MODE.DM_1D) {\n        const firstLink1D = correlation.link.find(\n          (link: Link) => getLinkDim(link) === 1,\n        );\n        if (!firstLink1D) {\n          return false;\n        }\n        let delta = getLinkDelta(firstLink1D);\n        if (delta === undefined) {\n          return false;\n        }\n        delta *= factor;\n        const spectrum = findSpectrum(\n          spectraData,\n          firstLink1D.experimentID,\n          true,\n        );\n        if (\n          spectrum &&\n          atomTypesInView[0] === correlation.atomType &&\n          delta >= xDomain0 &&\n          delta <= xDomain1\n        ) {\n          return true;\n        }\n        // try to find a link which contains the belonging 2D signal in the spectra in view\n        if (\n          correlation.link.some((link: Link) => {\n            const spectrum = findSpectrum(\n              spectraData,\n              link.experimentID,\n              true,\n            ) as Datum2D;\n            return findSignalMatch1D(\n              spectrum,\n              link,\n              factor,\n              xDomain0,\n              xDomain1,\n            );\n          })\n        ) {\n          return true;\n        }\n      } else if (displayerMode === DISPLAYER_MODE.DM_2D) {\n        if (!atomTypesInView.includes(correlation.atomType)) {\n          return false;\n        }\n        const firstLink2D = correlation.link.find(\n          (link: Link) => getLinkDim(link) === 2,\n        );\n        if (!firstLink2D) {\n          return false;\n        }\n        const spectrum = findSpectrum(\n          spectraData,\n          firstLink2D.experimentID,\n          true,\n        ) as Datum2D;\n        // correlation is represented by a 2D signal\n        if (\n          findSignalMatch2D(\n            spectrum,\n            firstLink2D,\n            factor,\n            xDomain0,\n            xDomain1,\n            yDomain0,\n            yDomain1,\n          )\n        ) {\n          return true;\n        } else {\n          // try to find a link which contains the belonging 2D signal in the spectra in view\n          if (\n            correlation.link.some((link) => {\n              const spectrum = findSpectrum(\n                spectraData,\n                link.experimentID,\n                true,\n              ) as Datum2D;\n              return findSignalMatch2D(\n                spectrum,\n                link,\n                factor,\n                xDomain0,\n                xDomain1,\n                yDomain0,\n                yDomain1,\n              );\n            })\n          ) {\n            return true;\n          }\n        }\n      }\n      // do not show correlation\n      return false;\n    };\n\n    if (correlationsData) {\n      const _values = filterIsActive\n        ? correlationsData.values.filter((correlation) => isInView(correlation))\n        : correlationsData.values;\n\n      return { ...correlationsData, values: _values };\n    }\n  }, [\n    activeTab,\n    correlationsData,\n    displayerMode,\n    filterIsActive,\n    spectraData,\n    xDomain,\n    yDomain,\n  ]);\n\n  const handleOnSetMolecularFormula = useCallback(\n    (mf) => {\n      dispatch({\n        type: SET_CORRELATIONS_MF,\n        payload: {\n          mf,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const handleOnSetShiftTolerance = useCallback(\n    (tolerance) => {\n      dispatch({\n        type: SET_CORRELATIONS_TOLERANCE,\n        payload: {\n          tolerance,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const showSetMolecularFormulaModal = useCallback(() => {\n    modal.show(\n      <SetMolecularFormulaModal\n        onClose={() => modal.close()}\n        onSave={handleOnSetMolecularFormula}\n        molecules={molecules}\n        previousMF={correlationsData.options.mf}\n      />,\n    );\n  }, [correlationsData, handleOnSetMolecularFormula, modal, molecules]);\n\n  const showSetShiftToleranceModal = useCallback(() => {\n    modal.show(\n      <SetShiftToleranceModal\n        onClose={() => modal.close()}\n        onSave={handleOnSetShiftTolerance}\n        previousTolerance={correlationsData.options.tolerance}\n      />,\n    );\n  }, [correlationsData, handleOnSetShiftTolerance, modal]);\n\n  const additionalColumnTypes = useMemo(() => {\n    const columnTypes = ['H', 'H-H'].concat(\n      correlationsData\n        ? correlationsData.values\n            .map((correlation) => correlation.atomType)\n            .filter(\n              (atomType, i, array) =>\n                atomType !== 'H' && array.indexOf(atomType) === i,\n            )\n        : [],\n    );\n\n    return columnTypes.map((columnType) => {\n      return {\n        key: columnType,\n        label: columnType,\n        value: columnType,\n      };\n    });\n  }, [correlationsData]);\n\n  useEffect(() => {\n    const _selectedAdditionalColumnsAtomType =\n      selectedAdditionalColumnsAtomType.split('-')[0];\n\n    setAdditionalColumnData(\n      filteredCorrelationsData\n        ? filteredCorrelationsData.values\n            .filter(\n              (correlation) =>\n                correlation.atomType === _selectedAdditionalColumnsAtomType,\n            )\n            .reverse()\n        : [],\n    );\n  }, [filteredCorrelationsData, selectedAdditionalColumnsAtomType]);\n\n  const editEquivalencesSaveHandler = useCallback(\n    (correlation: Correlation, value: number) => {\n      dispatch({\n        type: SET_CORRELATION,\n        payload: {\n          id: correlation.id,\n          correlation: {\n            ...correlation,\n            equivalence: value,\n            edited: { ...correlation.edited, equivalence: value !== 1 },\n          },\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const editNumericValuesSaveHandler = useCallback(\n    ({\n      correlation,\n      values,\n      key,\n    }: {\n      correlation: Correlation;\n      values: number[];\n      key: 'hybridization' | 'protonsCount';\n    }) => {\n      dispatch({\n        type: SET_CORRELATION,\n        payload: {\n          id: correlation.id,\n          correlation: {\n            ...correlation,\n            [key]: values,\n            edited: { ...correlation.edited, [key]: true },\n          },\n          options: {\n            skipDataUpdate: true,\n          },\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const setCorrelationsHandler = useCallback(\n    (correlations: CorrelationValues, options?: CorrelationOptions) => {\n      dispatch({\n        type: SET_CORRELATIONS,\n        payload: {\n          correlations,\n          options,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const deleteCorrelationHandler = useCallback(\n    (correlation: Correlation) => {\n      dispatch({\n        type: DELETE_CORRELATION,\n        payload: {\n          correlation,\n          assignmentData,\n        },\n      });\n    },\n    [assignmentData, dispatch],\n  );\n\n  const deleteSignalHandler = useCallback(\n    (link: Link) => {\n      // remove linking signal in spectrum\n      const linkDim = getLinkDim(link);\n      if (linkDim === 1) {\n        const spectrum = findSpectrum(\n          spectraData,\n          link.experimentID,\n          false,\n        ) as Datum1D;\n        const range = findRange(spectrum, link.signal.id);\n        const signal = findSignal1D(spectrum, link.signal.id);\n\n        dispatch({\n          type: DELETE_1D_SIGNAL,\n          payload: {\n            spectrum,\n            range,\n            signal,\n            assignmentData,\n          },\n        });\n      } else if (linkDim === 2) {\n        const spectrum = findSpectrum(\n          spectraData,\n          link.experimentID,\n          false,\n        ) as Datum2D;\n        const zone = findZone(spectrum, link.signal.id);\n        const signal = findSignal2D(spectrum, link.signal.id);\n\n        dispatch({\n          type: DELETE_2D_SIGNAL,\n          payload: {\n            spectrum,\n            zone,\n            signal,\n            assignmentData,\n          },\n        });\n      }\n    },\n    [assignmentData, dispatch, spectraData],\n  );\n\n  const changeSignalPathLengthHandler = useCallback(\n    (link: Link) => {\n      const linkDim = getLinkDim(link);\n      if (linkDim === 2) {\n        const spectrum = findSpectrum(\n          spectraData,\n          link.experimentID,\n          false,\n        ) as Datum2D;\n        const zone = findZone(spectrum, link.signal.id);\n        const signal = findSignal2D(spectrum, link.signal.id);\n\n        dispatch({\n          type: SET_2D_SIGNAL_PATH_LENGTH,\n          payload: {\n            spectrum,\n            zone,\n            signal,\n            pathLength: link.signal.j?.pathLength,\n          },\n        });\n      }\n    },\n    [dispatch, spectraData],\n  );\n\n  const editCorrelationTableCellHandler = useCallback(\n    (\n      editedCorrelations: Correlation[],\n      action: string,\n      link?: Link,\n      options?: CorrelationOptions,\n    ) => {\n      if (\n        action === 'add' ||\n        action === 'move' ||\n        action === 'remove' ||\n        action === 'unmove' ||\n        action === 'setPathLength'\n      ) {\n        if (link && link.pseudo === false) {\n          if (action === 'remove') {\n            deleteSignalHandler(link);\n          } else if (action === 'setPathLength') {\n            changeSignalPathLengthHandler(link);\n          }\n        }\n        setCorrelationsHandler(editedCorrelations, options);\n      } else if (action === 'removeAll') {\n        deleteCorrelationHandler(editedCorrelations[0]);\n      }\n    },\n    [\n      changeSignalPathLengthHandler,\n      deleteCorrelationHandler,\n      deleteSignalHandler,\n      setCorrelationsHandler,\n    ],\n  );\n\n  const handleOnFilter = useCallback(() => {\n    setFilterIsActive(!filterIsActive);\n  }, [filterIsActive]);\n\n  return (\n    <div css={panelStyle}>\n      <DefaultPanelHeader\n        canDelete={false}\n        counter={correlationsData ? correlationsData.values.length : 0}\n        onFilter={handleOnFilter}\n        filterToolTip={\n          filterIsActive\n            ? 'Show all correlations'\n            : 'Hide correlations out of view'\n        }\n        filterIsActive={filterIsActive}\n        counterFiltered={filteredCorrelationsData?.values.length}\n      >\n        <ToolTip\n          title={`Set molecular formula (${correlationsData.options.mf})`}\n          popupPlacement=\"right\"\n        >\n          <button type=\"button\" onClick={showSetMolecularFormulaModal}>\n            <FaFlask />\n          </button>\n        </ToolTip>\n        <ToolTip title={`Set shift tolerance`} popupPlacement=\"right\">\n          <button type=\"button\" onClick={showSetShiftToleranceModal}>\n            <FaSlidersH />\n          </button>\n        </ToolTip>\n        <div className=\"extra-header-content\">\n          <div className=\"overview-container\">\n            <Overview correlationsData={correlationsData} />\n          </div>\n          <div className=\"table-view-selection\">\n            <span>\n              <label>View:</label>\n              <Select\n                onChange={(selection) => {\n                  setSelectedAdditionalColumnsAtomType(selection);\n                  if (selection === 'H-H') {\n                    setShowProtonsAsRows(true);\n                  } else {\n                    setShowProtonsAsRows(false);\n                  }\n                }}\n                data={additionalColumnTypes}\n                defaultValue={selectedAdditionalColumnsAtomType}\n                style={{\n                  fontSize: '12px',\n                  width: '70px',\n                  height: '18px',\n                  border: '1px solid grey',\n                }}\n              />\n            </span>\n          </div>\n        </div>\n      </DefaultPanelHeader>\n      <CorrelationTable\n        correlationsData={correlationsData}\n        filteredCorrelationsData={filteredCorrelationsData}\n        additionalColumnData={additionalColumnData}\n        editEquivalencesSaveHandler={editEquivalencesSaveHandler}\n        onSaveEditNumericValues={editNumericValuesSaveHandler}\n        onEditCorrelationTableCellHandler={editCorrelationTableCellHandler}\n        showProtonsAsRows={showProtonsAsRows}\n        spectraData={spectraData}\n      />\n    </div>\n  );\n}\n\nexport default memo(SummaryPanel);\n","import {\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  memo,\n  CSSProperties,\n  forwardRef,\n} from 'react';\n\nimport { usePreferences } from '../../context/PreferencesContext';\nimport IsotopesViewer from '../../elements/IsotopesViewer';\nimport FormikColumnFormatField from '../../elements/formik/FormikColumnFormatField';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport { useAlert } from '../../elements/popup/Alert';\nimport useNucleus from '../../hooks/useNucleus';\nimport { getValue as getValueByKeyPath } from '../../utility/LocalStorage';\nimport { zoneDefaultValues } from '../extra/preferences/defaultValues';\n\nconst styles: Record<\n  'container' | 'groupContainer' | 'row' | 'header' | 'inputLabel' | 'input',\n  CSSProperties\n> = {\n  container: {\n    padding: 10,\n    backgroundColor: '#f1f1f1',\n    height: '100%',\n    overflowY: 'auto',\n  },\n  groupContainer: {\n    padding: '5px',\n    borderRadius: '5px',\n    margin: '10px 0px',\n    backgroundColor: 'white',\n  },\n  row: {\n    display: 'flex',\n    margin: '5px 0px',\n  },\n  header: {\n    borderBottom: '1px solid #e8e8e8',\n    paddingBottom: '5px',\n    fontWeight: 'bold',\n    color: '#4a4a4a',\n  },\n  inputLabel: {\n    flex: 2,\n    fontSize: '11px',\n    fontWeight: 'bold',\n    color: '#232323',\n  },\n  input: {\n    width: '30%',\n    textAlign: 'center',\n  },\n};\n\nconst formatFields: Array<{\n  id: number;\n  label: string;\n  checkController: string;\n  formatController: string;\n}> = [\n  {\n    id: 1,\n    label: 'From :',\n    checkController: 'showFrom',\n    formatController: 'fromFormat',\n  },\n  {\n    id: 2,\n    label: 'To :',\n    checkController: 'showTo',\n    formatController: 'toFormat',\n  },\n  {\n    id: 3,\n    label: 'Absolute :',\n    checkController: 'showAbsolute',\n    formatController: 'absoluteFormat',\n  },\n  {\n    id: 4,\n    label: 'Relative :',\n    checkController: 'showRelative',\n    formatController: 'relativeFormat',\n  },\n];\n\ninterface ZonesPreferencesInnerProps {\n  nucleus: Array<string>;\n  innerRef: any;\n}\n\nfunction ZonesPreferencesInner({\n  nucleus,\n  innerRef,\n}: ZonesPreferencesInnerProps) {\n  const alert = useAlert();\n  const preferences = usePreferences();\n  const formRef = useRef<any>();\n\n  const updateValues = useCallback(() => {\n    if (nucleus) {\n      const defaultValues = nucleus.reduce((acc, nucleusLabel) => {\n        acc[nucleusLabel] = zoneDefaultValues;\n        return acc;\n      }, {});\n      const zonesPreferences = getValueByKeyPath(\n        preferences.current,\n        `formatting.panels.zones`,\n      );\n      formRef.current.setValues(\n        zonesPreferences ? zonesPreferences : defaultValues,\n      );\n    }\n  }, [nucleus, preferences]);\n\n  useEffect(() => {\n    updateValues();\n  }, [updateValues]);\n\n  const saveHandler = useCallback(\n    (values) => {\n      preferences.dispatch({\n        type: 'SET_PANELS_PREFERENCES',\n        payload: { key: 'zones', value: values },\n      });\n      alert.success('zones preferences saved successfully');\n    },\n    [alert, preferences],\n  );\n\n  useImperativeHandle(\n    innerRef,\n    () => ({\n      saveSetting: () => {\n        formRef.current.submitForm();\n      },\n    }),\n    [],\n  );\n\n  return (\n    <div style={styles.container}>\n      <FormikForm onSubmit={saveHandler} ref={formRef}>\n        {nucleus?.map((nucleusLabel) => (\n          <div key={nucleusLabel} style={styles.groupContainer}>\n            <IsotopesViewer style={styles.header} value={nucleusLabel} />\n            {formatFields.map((field) => (\n              <FormikColumnFormatField\n                key={field.id}\n                label={field.label}\n                checkControllerName={`${nucleusLabel}.${field.checkController}`}\n                formatControllerName={`${nucleusLabel}.${field.formatController}`}\n              />\n            ))}\n          </div>\n        ))}\n      </FormikForm>\n    </div>\n  );\n}\n\nconst MemoizedZonesPreferences = memo(ZonesPreferencesInner);\n\n// TODO: remove this hacky use of ref.\nfunction ZonesPreferences(props, ref: any) {\n  const nucleus = useNucleus();\n  return <MemoizedZonesPreferences innerRef={ref} {...{ nucleus }} />;\n}\n\nexport default forwardRef(ZonesPreferences);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\n\nimport DefaultPathLengths from '../../../data/constants/DefaultPathLengths';\nimport FormikNumberInput from '../../elements/formik/FormikNumberInput';\n\nconst editPathLengthsStyles = css`\n  width: 100%;\n  height: 100%;\n  margin-top: 10px;\n  text-align: center;\n\n  .input-container {\n    width: 100%;\n    margin-top: 5px;\n    text-align: center;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n    }\n  }\n\n  button {\n    flex: 2;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 5px;\n    height: 30px;\n    margin: 0 auto;\n    margin-top: 15px;\n    display: block;\n    width: 60px;\n\n    color: white;\n    background-color: gray;\n  }\n\n  .warning {\n    margin-top: 5px;\n    color: red;\n  }\n`;\n\ninterface InputProps {\n  signalIndex: number;\n}\n\nfunction EditPathLengthFormik({ signalIndex }: InputProps) {\n  const {\n    errors,\n    values,\n  }: {\n    values: any;\n    setFieldValue: (\n      field: string,\n      value: any,\n      shouldValidate?: boolean | undefined,\n    ) => void;\n    errors: any;\n  } = useFormikContext();\n\n  return (\n    <div css={editPathLengthsStyles}>\n      <p>Setting of the minimum and maximum path length (J coupling).</p>\n      <div className=\"input-container\">\n        <FormikNumberInput\n          name={`signals[${signalIndex}].j.pathLength.from`}\n          defaultValue={\n            values.signals[signalIndex].j?.pathLength?.from ||\n            DefaultPathLengths[values.experimentType]?.from ||\n            1\n          }\n          label=\"Min: \"\n          style={{\n            input: {\n              color: errors.signals?.[signalIndex].j?.pathLength?.from\n                ? 'red'\n                : 'black',\n            },\n          }}\n          min={1}\n          max={\n            values.signals[signalIndex].j?.pathLength?.to ||\n            DefaultPathLengths[values.experimentType]?.to\n          }\n          pattern=\"[1-9]+\"\n        />\n        <FormikNumberInput\n          name={`signals[${signalIndex}].j.pathLength.to`}\n          defaultValue={\n            values.signals[signalIndex].j?.pathLength?.to ||\n            DefaultPathLengths[values.experimentType]?.to ||\n            1\n          }\n          label=\"Max: \"\n          style={{\n            input: {\n              color: errors.signals?.[signalIndex].j?.pathLength?.to\n                ? 'red'\n                : 'black',\n            },\n          }}\n          min={\n            values.signals[signalIndex].j?.pathLength?.from ||\n            DefaultPathLengths[values.experimentType]?.from ||\n            1\n          }\n          pattern=\"[1-9]+\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default EditPathLengthFormik;\n","import EditPathLengthFormik from './EditPathLengthFormik';\n\ninterface SignalFormTabProps {\n  signalIndex: number;\n}\n\nfunction SignalFormTab({ signalIndex }: SignalFormTabProps) {\n  return <EditPathLengthFormik signalIndex={signalIndex} />;\n}\n\nexport default SignalFormTab;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport { useCallback, useMemo } from 'react';\n\nimport Tab from '../../elements/Tab/Tab';\nimport Tabs from '../../elements/Tab/Tabs';\n\nimport SignalFormTab from './SignalFormTab';\n\nconst textStyles = css`\n  text-align: center;\n  width: 100%;\n\n  .errorText {\n    color: red;\n  }\n\n  .infoText {\n    padding: 10px;\n    margin: 10px 0;\n    font-size: 14px;\n    text-align: left;\n    color: white;\n    background-color: #5f5f5f;\n    border-radius: 5px;\n  }\n`;\n\nconst tabStylesAddition = css`\n  color: red;\n`;\nconst tabStyles = css`\n  display: inline-grid;\n  list-style: none;\n  padding: 0.5rem 1.5rem;\n`;\n\nfunction SignalsForm() {\n  const {\n    values,\n    setFieldValue,\n    errors,\n  }: {\n    values: any;\n    setFieldValue: (\n      field: string,\n      value: any,\n      shouldValidate?: boolean | undefined,\n    ) => void;\n    errors: any;\n  } = useFormikContext<any>();\n\n  const tabContainsErrors = useCallback(\n    (i) => {\n      return errors?.signals && errors?.signals[i] ? true : false;\n    },\n    [errors],\n  );\n\n  const signalFormTabs = useMemo(() => {\n    const signalTabs =\n      values.signals.length > 0\n        ? values.signals.map((signal, i) => (\n            <Tab\n              // eslint-disable-next-line react/no-array-index-key\n              key={`signalForm_zone${i}`}\n              tabid={`${i}`}\n              tabstyles={tabContainsErrors(i) ? tabStylesAddition : tabStyles}\n              render={() => (\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    fontSize: '11px',\n                  }}\n                >\n                  <span>\n                    𝛅<sub>{signal.x.nucleus}</sub>: {signal.x.delta.toFixed(2)}\n                  </span>\n                  <span>\n                    𝛅<sub>{signal.y.nucleus}</sub>: {signal.y.delta.toFixed(2)}\n                  </span>\n                </div>\n              )}\n            >\n              <SignalFormTab signalIndex={i} />\n            </Tab>\n          ))\n        : [];\n\n    return signalTabs;\n  }, [tabContainsErrors, values.signals]);\n\n  const tapClickHandler = useCallback(\n    ({ tabid }) => {\n      setFieldValue('activeTab', tabid);\n    },\n    [setFieldValue],\n  );\n\n  const handleDeleteSignal = useCallback(\n    ({ tabid }) => {\n      const _signals = values.signals.filter(\n        (_signal, i) => i !== Number(tabid),\n      );\n      setFieldValue('signals', _signals);\n    },\n    [setFieldValue, values.signals],\n  );\n\n  return (\n    <div>\n      <div css={textStyles} />\n      <Tabs\n        activeTab={values.activeTab}\n        onClick={tapClickHandler}\n        onDelete={handleDeleteSignal}\n      >\n        {signalFormTabs}\n      </Tabs>\n    </div>\n  );\n}\n\nexport default SignalsForm;\n","import { useMemo } from 'react';\nimport * as Yup from 'yup';\n\nconst useValidation = () =>\n  useMemo(() => {\n    return Yup.object().shape({\n      signals: Yup.array()\n        .of(\n          Yup.object().shape({\n            j: Yup.object().shape({\n              pathLength: Yup.object().shape({\n                from: Yup.number().required().positive().integer(),\n                to: Yup.number().required().positive().integer(),\n              }),\n            }),\n          }),\n        )\n        .min(1, 'There must be at least one signal in a zone!'),\n    });\n  }, []);\n\nexport default useValidation;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FromTo } from 'cheminfo-types';\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { FaSearchPlus } from 'react-icons/fa';\n\nimport DefaultPathLengths from '../../../data/constants/DefaultPathLengths';\nimport { Signal2D } from '../../../data/types/data2d';\nimport Button from '../../elements/Button';\nimport CloseButton from '../../elements/CloseButton';\nimport SaveButton from '../../elements/SaveButton';\nimport FormikForm from '../../elements/formik/FormikForm';\n\nimport SignalsForm from './SignalsForm';\nimport useRangeFormValidation from './validation/EditZoneValidation';\nimport isDefaultPathLength from './validation/isDefaultPathLength';\n\nconst styles = css`\n  width: 500px;\n  height: 250px;\n  padding: 5px;\n  button:focus {\n    outline: none;\n  }\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    align-items: center;\n    span {\n      color: #464646;\n      font-size: 15px;\n      flex: 1;\n      border-left: 1px solid #ececec;\n      padding-left: 6px;\n    }\n\n    button {\n      background-color: transparent;\n      border: none;\n      padding: 5px;\n\n      svg {\n        height: 16px;\n      }\n    }\n  }\n  .container {\n    display: flex;\n    margin: 30px 5px;\n  }\n`;\n\ninterface EditZoneModalProps {\n  onSaveEditZoneModal: (value: any) => Promise<void> | null | void;\n  onCloseEditZoneModal: () => void;\n  onZoomEditZoneModal: (value: any) => void;\n  rowData: any;\n}\n\nfunction EditZoneModal({\n  onSaveEditZoneModal = () => null,\n  onCloseEditZoneModal = () => null,\n  onZoomEditZoneModal = () => null,\n  rowData,\n}: EditZoneModalProps) {\n  const formRef = useRef<any>(null);\n  const validation = useRangeFormValidation();\n\n  const handleOnZoom = useCallback(() => {\n    onZoomEditZoneModal(rowData);\n  }, [onZoomEditZoneModal, rowData]);\n\n  useEffect(() => {\n    handleOnZoom();\n  }, [handleOnZoom]);\n\n  const handleOnClose = useCallback(() => {\n    onCloseEditZoneModal();\n  }, [onCloseEditZoneModal]);\n\n  const handleOnSave = useCallback(\n    (formValues) => {\n      void (async () => {\n        const _rowData = {\n          ...rowData,\n          signals: formValues.signals.map((signal: Signal2D) => {\n            if (\n              isDefaultPathLength(\n                signal.j?.pathLength as FromTo,\n                rowData.tableMetaInfo.experiment,\n              )\n            ) {\n              delete signal.j?.pathLength;\n              if (signal.j && Object.keys(signal.j).length === 0) {\n                delete signal.j;\n              }\n            }\n\n            return signal;\n          }),\n        };\n\n        await onSaveEditZoneModal(_rowData);\n        handleOnClose();\n      })();\n    },\n    [handleOnClose, onSaveEditZoneModal, rowData],\n  );\n\n  const data = useMemo(() => {\n    return {\n      activeTab: '0',\n      signals: rowData.signals.map((signal: Signal2D): Signal2D => {\n        return {\n          ...signal,\n          j: {\n            pathLength: {\n              from:\n                DefaultPathLengths[rowData.tableMetaInfo.experiment]?.from || 1,\n              to: DefaultPathLengths[rowData.tableMetaInfo.experiment]?.to || 1,\n            },\n            ...signal.j,\n          },\n        };\n      }),\n    };\n  }, [rowData.signals, rowData.tableMetaInfo.experiment]);\n\n  return (\n    <div css={styles}>\n      <FormikForm\n        ref={formRef}\n        initialValues={data}\n        validationSchema={validation}\n        onSubmit={handleOnSave}\n      >\n        <div className=\"header handle\">\n          <Button onClick={handleOnZoom} className=\"zoom-button\">\n            <FaSearchPlus title=\"Set to default view on range in spectrum\" />\n          </Button>\n          <span>{`Zone and Signal edition`}</span>\n          <SaveButton\n            onClick={() => formRef.current.submitForm()}\n            popupTitle=\"Save and exit\"\n          />\n          <CloseButton onClick={handleOnClose} />\n        </div>\n        <SignalsForm />\n      </FormikForm>\n    </div>\n  );\n}\n\nexport default EditZoneModal;\n","import { CSSProperties, Fragment, useCallback } from 'react';\nimport { FaEdit, FaRegTrashAlt, FaSearchPlus } from 'react-icons/fa';\n\nimport { SignalKinds } from '../../../../data/constants/SignalsKinds';\nimport { useAssignmentData } from '../../../assignment/AssignmentsContext';\nimport { useDispatch } from '../../../context/DispatchContext';\nimport Select from '../../../elements/Select';\nimport {\n  useModal,\n  positions,\n  transitions,\n} from '../../../elements/popup/Modal';\nimport EditZoneModal from '../../../modal/editZone/EditZoneModal';\nimport {\n  CHANGE_ZONE_SIGNAL_KIND,\n  DELETE_2D_ZONE,\n  SAVE_EDITED_ZONE,\n  SET_SELECTED_TOOL,\n  SET_X_DOMAIN,\n  SET_Y_DOMAIN,\n} from '../../../reducer/types/Types';\nimport { options } from '../../../toolbar/ToolTypes';\n\nconst selectBoxStyle: CSSProperties = {\n  marginLeft: 2,\n  marginRight: 2,\n  border: 'none',\n  height: '20px',\n};\n\nexport interface RowDataProps {\n  id: number;\n  tableMetaInfo: {\n    id: number;\n    signalIndex: number;\n    rowSpan: any;\n    signal: {\n      kind: any;\n    };\n    experiment: string;\n  };\n  x: {\n    from: number;\n    to: number;\n  };\n  y: {\n    from: number;\n    to: number;\n  };\n}\n\ninterface ActionsColumnProps {\n  rowData: RowDataProps;\n  rowSpanTags: any;\n}\n\nfunction ActionsColumn({ rowData, rowSpanTags }: ActionsColumnProps) {\n  const dispatch = useDispatch();\n  const assignmentData = useAssignmentData();\n  const modal = useModal();\n\n  const changeSignalKindHandler = useCallback(\n    (value) => {\n      dispatch({\n        type: CHANGE_ZONE_SIGNAL_KIND,\n        payload: {\n          rowData,\n          value,\n        },\n      });\n    },\n    [dispatch, rowData],\n  );\n\n  const deleteZoneHandler = useCallback(() => {\n    dispatch({\n      type: DELETE_2D_ZONE,\n      payload: {\n        id: rowData.id,\n        assignmentData,\n      },\n    });\n  }, [assignmentData, dispatch, rowData]);\n\n  const zoomZoneHandler = useCallback(() => {\n    const xMargin = Math.abs(rowData.x.from - rowData.x.to) * 10;\n    dispatch({\n      type: SET_X_DOMAIN,\n      xDomain:\n        rowData.x.from <= rowData.x.to\n          ? [rowData.x.from - xMargin, rowData.x.to + xMargin]\n          : [rowData.x.to - xMargin, rowData.x.from + xMargin],\n    });\n    const yMargin = Math.abs(rowData.y.from - rowData.y.to) * 10;\n    dispatch({\n      type: SET_Y_DOMAIN,\n      yDomain:\n        rowData.y.from <= rowData.y.to\n          ? [rowData.y.from - yMargin, rowData.y.to + yMargin]\n          : [rowData.y.to - yMargin, rowData.y.from + yMargin],\n    });\n  }, [dispatch, rowData.x.from, rowData.x.to, rowData.y.from, rowData.y.to]);\n\n  const saveEditZoneHandler = useCallback(\n    (editedRowData) => {\n      dispatch({\n        type: SAVE_EDITED_ZONE,\n        payload: {\n          editedRowData,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const openEditZoneHandler = useCallback(() => {\n    dispatch({\n      type: SET_SELECTED_TOOL,\n      payload: { selectedTool: options.editRange.id, tempRange: rowData },\n    });\n    modal.show(\n      <EditZoneModal\n        onCloseEditZoneModal={() => modal.close()}\n        onSaveEditZoneModal={saveEditZoneHandler}\n        onZoomEditZoneModal={() => zoomZoneHandler()}\n        rowData={rowData}\n      />,\n      {\n        position: positions.MIDDLE_RIGHT,\n        transition: transitions.SCALE,\n        isBackgroundBlur: false,\n      },\n    );\n  }, [dispatch, modal, rowData, saveEditZoneHandler, zoomZoneHandler]);\n\n  return (\n    <Fragment>\n      <td>\n        <Select\n          onChange={(value) => {\n            changeSignalKindHandler(value);\n          }}\n          data={SignalKinds}\n          defaultValue={rowData.tableMetaInfo.signal.kind}\n          style={selectBoxStyle}\n        />\n      </td>\n      <td {...rowSpanTags}>\n        <button\n          type=\"button\"\n          className=\"delete-button\"\n          onClick={deleteZoneHandler}\n        >\n          <FaRegTrashAlt />\n        </button>\n        <button type=\"button\" className=\"zoom-button\" onClick={zoomZoneHandler}>\n          <FaSearchPlus title=\"Zoom to zone in spectrum\" />\n        </button>\n        <button\n          type=\"button\"\n          className=\"edit-button\"\n          onClick={openEditZoneHandler}\n        >\n          <FaEdit color=\"blue\" />\n        </button>\n      </td>\n    </Fragment>\n  );\n}\n\nexport default ActionsColumn;\n","import lodashGet from 'lodash/get';\nimport { FaMinusCircle } from 'react-icons/fa';\n\nimport { AssignmentsData, Axis } from '../../../assignment/AssignmentsContext';\n\nimport { RowDataProps } from './ActionsColumn';\n\nexport interface SignalAssignmentsColumnProps {\n  rowData: RowDataProps;\n  assignment: AssignmentsData;\n  // assignment: {\n  //   isActive: any;\n  //   activeAxis: any;\n  // };\n  highlight: {\n    isActive: any;\n  };\n  onHover: () => void;\n  onClick: (event: any, assignment: AssignmentsData, axis: Axis) => void;\n  onUnlink: (event: any, flag: boolean, axis: Axis) => void;\n  showUnlinkButton: boolean;\n  axis: Axis;\n  setShowUnlinkButton: (element: boolean) => void;\n}\n\nfunction SignalAssignmentsColumn({\n  rowData,\n  assignment,\n  highlight,\n  onHover,\n  onClick,\n  onUnlink,\n  axis,\n  showUnlinkButton,\n  setShowUnlinkButton,\n}: SignalAssignmentsColumnProps) {\n  return (\n    <td\n      {...onHover}\n      {...{ onClick: (e) => onClick(e, assignment, axis) }}\n      style={\n        highlight.isActive ||\n        (assignment.isActive && assignment.activated?.axis === axis)\n          ? {\n              color: 'red',\n              fontWeight: 'bold',\n            }\n          : undefined\n      }\n    >\n      {lodashGet(rowData, `tableMetaInfo.signal.${axis}.diaIDs`, []).length >\n      0 ? (\n        <div\n          onMouseEnter={() => setShowUnlinkButton(true)}\n          onMouseLeave={() => setShowUnlinkButton(false)}\n        >\n          {rowData.tableMetaInfo.signal[axis].diaIDs.length}{' '}\n          <sup>\n            <button\n              type=\"button\"\n              style={{\n                visibility: showUnlinkButton ? 'visible' : 'hidden',\n                padding: 0,\n                margin: 0,\n              }}\n              onClick={(e) => onUnlink(e, false, axis)}\n            >\n              <FaMinusCircle color=\"red\" />\n            </button>\n          </sup>\n        </div>\n      ) : assignment.isActive && assignment.activated?.axis === axis ? (\n        '0'\n      ) : (\n        ''\n      )}\n    </td>\n  );\n}\n\nexport default SignalAssignmentsColumn;\n","import { Fragment } from 'react';\n\nimport { AssignmentsData, Axis } from '../../../assignment/AssignmentsContext';\n\nimport { RowDataProps } from './ActionsColumn';\nimport SignalAssignmentsColumn from './SignalAssignmentsColumn';\n\ninterface SignalAssignmentsColumnsProps {\n  rowData: RowDataProps;\n  onHoverSignalX: any;\n  onHoverSignalY: any;\n  showUnlinkButtonSignalX: boolean;\n  showUnlinkButtonSignalY: boolean;\n  setShowUnlinkButtonSignalX: (element: boolean) => void;\n  setShowUnlinkButtonSignalY: (element: boolean) => void;\n  onClick: (event: any, assignment: AssignmentsData, axis: Axis) => void;\n  onUnlink: (event: any, flag: boolean, axis: Axis) => void;\n  highlightSignalX: {\n    isActive: any;\n  };\n  highlightSignalY: {\n    isActive: any;\n  };\n  assignmentSignal: AssignmentsData;\n}\n\nfunction SignalAssignmentsColumns({\n  rowData,\n  assignmentSignal,\n  onHoverSignalX,\n  onHoverSignalY,\n  showUnlinkButtonSignalX,\n  showUnlinkButtonSignalY,\n  setShowUnlinkButtonSignalX,\n  setShowUnlinkButtonSignalY,\n  onClick,\n  onUnlink,\n  highlightSignalX,\n  highlightSignalY,\n}: SignalAssignmentsColumnsProps) {\n  return (\n    <Fragment>\n      <SignalAssignmentsColumn\n        rowData={rowData}\n        assignment={assignmentSignal}\n        highlight={highlightSignalX}\n        onHover={onHoverSignalX}\n        onClick={onClick}\n        onUnlink={onUnlink}\n        axis=\"x\"\n        showUnlinkButton={showUnlinkButtonSignalX}\n        setShowUnlinkButton={setShowUnlinkButtonSignalX}\n      />\n      <SignalAssignmentsColumn\n        rowData={rowData}\n        assignment={assignmentSignal}\n        highlight={highlightSignalY}\n        onHover={onHoverSignalY}\n        onClick={onClick}\n        onUnlink={onUnlink}\n        axis=\"y\"\n        showUnlinkButton={showUnlinkButtonSignalY}\n        setShowUnlinkButton={setShowUnlinkButtonSignalY}\n      />\n    </Fragment>\n  );\n}\n\nexport default SignalAssignmentsColumns;\n","import lodashGet from 'lodash/get';\nimport { Fragment, useCallback } from 'react';\n\nimport { useDispatch } from '../../../context/DispatchContext';\nimport EditableColumn from '../../../elements/EditableColumn';\nimport { CHANGE_ZONE_SIGNAL_VALUE } from '../../../reducer/types/Types';\n\nimport { RowDataProps } from './ActionsColumn';\n\ninterface SignalDeltaColumnProps {\n  rowData: RowDataProps;\n  onHoverSignalX: any;\n  onHoverSignalY: any;\n}\n\nfunction SignalDeltaColumn({\n  rowData,\n  onHoverSignalX,\n  onHoverSignalY,\n}: SignalDeltaColumnProps) {\n  const dispatch = useDispatch();\n\n  const signalDeltaX = lodashGet(rowData, 'tableMetaInfo.signal.x.delta', null);\n  const signalDeltaY = lodashGet(rowData, 'tableMetaInfo.signal.y.delta', null);\n  const id = lodashGet(rowData, 'tableMetaInfo.signal.id', undefined);\n\n  const saveXHandler = useCallback(\n    (event) => {\n      const value = event.target.value;\n      dispatch({\n        type: CHANGE_ZONE_SIGNAL_VALUE,\n        payload: {\n          zoneID: rowData.id,\n          signal: { id, x: value },\n        },\n      });\n    },\n    [dispatch, id, rowData.id],\n  );\n  const saveYHandler = useCallback(\n    (event) => {\n      const value = event.target.value;\n      dispatch({\n        type: CHANGE_ZONE_SIGNAL_VALUE,\n        payload: {\n          zoneID: rowData.id,\n          signal: { id, y: value },\n        },\n      });\n    },\n    [dispatch, id, rowData.id],\n  );\n\n  return (\n    <Fragment>\n      <td {...onHoverSignalX}>\n        {signalDeltaX !== null ? (\n          <EditableColumn\n            value={signalDeltaX.toFixed(2)}\n            onSave={saveXHandler}\n            type=\"number\"\n            style={{ padding: '0.1rem 0.4rem' }}\n          />\n        ) : (\n          ''\n        )}\n      </td>\n      <td {...onHoverSignalY}>\n        {signalDeltaY !== null ? (\n          <EditableColumn\n            value={signalDeltaY.toFixed(2)}\n            onSave={saveYHandler}\n            type=\"number\"\n            style={{ padding: '0.1rem 0.4rem' }}\n          />\n        ) : (\n          ''\n        )}\n      </td>\n    </Fragment>\n  );\n}\n\nexport default SignalDeltaColumn;\n","import lodashGet from 'lodash/get';\nimport { MouseEvent } from 'react';\nimport { FaMinusCircle } from 'react-icons/fa';\n\nimport { AssignmentsData, Axis } from '../../../assignment/AssignmentsContext';\n\nimport { RowDataProps } from './ActionsColumn';\n\nexport interface ZoneAssignmentColumnProps {\n  rowData: RowDataProps;\n  axis: any;\n  onHover: () => void;\n  onClick: (event: MouseEvent, assignment: AssignmentsData, axis: Axis) => void;\n  onUnlink: (event: MouseEvent, flag: boolean, axis: Axis) => void;\n  highlight: {\n    isActive: any;\n  };\n\n  assignment: AssignmentsData;\n  showUnlinkButton: boolean;\n  setShowUnlinkButton: (element: boolean) => void;\n  rowSpanTags: any;\n}\n\nfunction ZoneAssignmentColumn({\n  rowData,\n  assignment,\n  highlight,\n  onHover,\n  onClick,\n  onUnlink,\n  axis,\n  showUnlinkButton,\n  setShowUnlinkButton,\n  rowSpanTags,\n}: ZoneAssignmentColumnProps) {\n  return (\n    <td\n      {...rowSpanTags}\n      {...onHover}\n      {...{ onClick: (e) => onClick(e, assignment, axis) }}\n    >\n      {lodashGet(rowData, `${axis}.nbAtoms`, 0) > 0 ? (\n        lodashGet(rowData, `${axis}.diaIDs`, 0).length > 0 ? (\n          <div\n            onMouseEnter={() => setShowUnlinkButton(true)}\n            onMouseLeave={() => setShowUnlinkButton(false)}\n          >\n            {rowData[axis].nbAtoms} {`(`}\n            <span\n              style={\n                (assignment.isActive && assignment.activated?.axis === axis) ||\n                (assignment.isOver && assignment.highlighted?.axis === axis) ||\n                highlight.isActive\n                  ? {\n                      color: 'red',\n                      fontWeight: 'bold',\n                    }\n                  : { color: 'black', fontWeight: 'normal' }\n              }\n            >\n              {lodashGet(rowData, `${axis}.diaIDs`, []).length}\n            </span>\n            {`)`}{' '}\n            <sup>\n              <button\n                type=\"button\"\n                style={{\n                  visibility: showUnlinkButton ? 'visible' : 'hidden',\n                  padding: 0,\n                  margin: 0,\n                }}\n                onClick={(e) => onUnlink(e, true, axis)}\n              >\n                <FaMinusCircle color=\"red\" />\n              </button>\n            </sup>\n          </div>\n        ) : assignment.isActive && assignment.activated?.axis === axis ? (\n          <div>\n            {`${lodashGet(rowData, `${axis}.nbAtoms`, '')} (`}\n            <span\n              style={{\n                color: 'red',\n                fontWeight: 'bold',\n              }}\n            >\n              0\n            </span>\n            {')'}\n          </div>\n        ) : (\n          rowData[axis].nbAtoms\n        )\n      ) : assignment.isActive && assignment.activated?.axis === axis ? (\n        <div>\n          {'0 ('}\n          <span style={{ color: 'red', fontWeight: 'bold' }}>0</span>\n          {')'}\n        </div>\n      ) : (\n        ''\n      )}\n    </td>\n  );\n}\n\nexport default ZoneAssignmentColumn;\n","import { Fragment } from 'react';\n\nimport { AssignmentsData, Axis } from '../../../assignment/AssignmentsContext';\n\nimport { RowDataProps } from './ActionsColumn';\nimport ZoneAssignmentColumn from './ZoneAssignmentsColumn';\n\ninterface ZoneAssignmentsColumnsProps {\n  rowData: RowDataProps;\n  onHoverZoneX: any;\n  onHoverZoneY: any;\n  onClick: (event: any, assignment: AssignmentsData, axis: Axis) => void;\n  onUnlink: (event: any, flag: boolean, axis: Axis) => void;\n  rowSpanTags: any;\n  showUnlinkButtonZoneX: boolean;\n  showUnlinkButtonZoneY: boolean;\n  setShowUnlinkButtonZoneX: (element: boolean) => void;\n  setShowUnlinkButtonZoneY: (element: boolean) => void;\n  assignmentZone: AssignmentsData;\n  highlightZoneX: {\n    isActive: any;\n  };\n  highlightZoneY: {\n    isActive: any;\n  };\n}\n\nfunction ZoneAssignmentsColumns({\n  rowData,\n  assignmentZone,\n  onHoverZoneX,\n  onHoverZoneY,\n  showUnlinkButtonZoneX,\n  showUnlinkButtonZoneY,\n  setShowUnlinkButtonZoneX,\n  setShowUnlinkButtonZoneY,\n  rowSpanTags,\n  onClick,\n  onUnlink,\n  highlightZoneX,\n  highlightZoneY,\n}: ZoneAssignmentsColumnsProps) {\n  return (\n    <Fragment>\n      <ZoneAssignmentColumn\n        rowData={rowData}\n        assignment={assignmentZone}\n        highlight={highlightZoneX}\n        onHover={onHoverZoneX}\n        onClick={onClick}\n        onUnlink={onUnlink}\n        axis={'x'}\n        showUnlinkButton={showUnlinkButtonZoneX}\n        setShowUnlinkButton={setShowUnlinkButtonZoneX}\n        rowSpanTags={rowSpanTags}\n      />\n      <ZoneAssignmentColumn\n        rowData={rowData}\n        assignment={assignmentZone}\n        highlight={highlightZoneY}\n        onHover={onHoverZoneY}\n        onClick={onClick}\n        onUnlink={onUnlink}\n        axis={'y'}\n        showUnlinkButton={showUnlinkButtonZoneY}\n        setShowUnlinkButton={setShowUnlinkButtonZoneY}\n        rowSpanTags={rowSpanTags}\n      />\n    </Fragment>\n  );\n}\n\nexport default ZoneAssignmentsColumns;\n","/** @jsxImportSource @emotion/react */\n\nimport lodashGet from 'lodash/get';\nimport {\n  CSSProperties,\n  useMemo,\n  useCallback,\n  useState,\n  MouseEvent,\n} from 'react';\n\nimport { buildID } from '../../../data/utilities/Concatenation';\nimport {\n  Axis,\n  useAssignment,\n  AssignmentsData,\n} from '../../assignment/AssignmentsContext';\nimport { useHighlight } from '../../highlight';\n\nimport ActionsColumn, { RowDataProps } from './TableColumns/ActionsColumn';\nimport SignalAssignmentsColumns from './TableColumns/SignalAssignmentsColumns';\nimport SignalDeltaColumn from './TableColumns/SignalDeltaColumn';\nimport ZoneAssignmentsColumns from './TableColumns/ZoneAssignmentsColumns';\n\nconst HighlightedRowStyle: CSSProperties = { backgroundColor: '#ff6f0057' };\n\nconst ConstantlyHighlightedRowStyle = { backgroundColor: '#f5f5dc' };\n\ninterface ZonesTableRowProps {\n  rowData: RowDataProps;\n  onUnlink: (\n    rowData: RowDataProps,\n    isOnZoneLevel: boolean,\n    signalIndex: any,\n    axis: Axis,\n  ) => void;\n  onContextMenu: (a: any, rowData: RowDataProps) => void;\n  rowIndex: number;\n}\n\nfunction ZonesTableRow({\n  rowData,\n  onUnlink,\n  onContextMenu,\n  rowIndex,\n}: ZonesTableRowProps) {\n  const assignmentZone = useAssignment(rowData.id);\n  const highlightZone = useHighlight([assignmentZone.id]);\n  const highlightZoneX = useHighlight(\n    [buildID(assignmentZone.id, 'X')].concat(assignmentZone.assigned?.x || []),\n  );\n\n  const highlightZoneY = useHighlight(\n    [buildID(assignmentZone.id, 'Y')].concat(assignmentZone.assigned?.y || []),\n  );\n\n  const assignmentSignal = useAssignment(rowData.tableMetaInfo.id);\n  const highlightSignalX = useHighlight(\n    [buildID(assignmentSignal.id, 'X')].concat(\n      assignmentSignal.assigned?.x || [],\n      buildID(assignmentSignal.id, 'Crosshair'),\n    ),\n  );\n  const highlightSignalY = useHighlight(\n    [buildID(assignmentSignal.id, 'Y')].concat(\n      assignmentSignal.assigned?.y || [],\n      buildID(assignmentSignal.id, 'Crosshair'),\n    ),\n  );\n\n  const [showUnlinkButtonZoneX, setShowUnlinkButtonZoneX] = useState(false);\n  const [showUnlinkButtonZoneY, setShowUnlinkButtonZoneY] = useState(false);\n  const [showUnlinkButtonSignalX, setShowUnlinkButtonSignalX] = useState(false);\n  const [showUnlinkButtonSignalY, setShowUnlinkButtonSignalY] = useState(false);\n\n  const rowSpanTags = useMemo(() => {\n    return {\n      rowSpan: rowData.tableMetaInfo.rowSpan,\n      style:\n        lodashGet(rowData, 'tableMetaInfo.hide', false) === true\n          ? { display: 'none' }\n          : null,\n    };\n  }, [rowData]);\n\n  const unlinkHandler = useCallback(\n    (event: MouseEvent, isOnZoneLevel: boolean, axis: Axis) => {\n      // event handling here in case of unlink button clicked\n      if (event) {\n        event.stopPropagation();\n      }\n      onUnlink(rowData, isOnZoneLevel, rowData.tableMetaInfo.signalIndex, axis);\n      if (axis === 'x') {\n        if (isOnZoneLevel !== undefined) {\n          if (isOnZoneLevel) {\n            setShowUnlinkButtonZoneX(false);\n            assignmentZone.removeAll('x');\n          } else {\n            setShowUnlinkButtonSignalX(false);\n            assignmentSignal.removeAll('x');\n          }\n        } else {\n          setShowUnlinkButtonZoneX(false);\n          setShowUnlinkButtonSignalX(false);\n        }\n      } else if (axis === 'y') {\n        if (isOnZoneLevel !== undefined) {\n          if (isOnZoneLevel) {\n            setShowUnlinkButtonZoneY(false);\n            assignmentZone.removeAll('y');\n          } else {\n            setShowUnlinkButtonSignalY(false);\n            assignmentSignal.removeAll('y');\n          }\n        } else {\n          setShowUnlinkButtonZoneY(false);\n          setShowUnlinkButtonSignalY(false);\n        }\n      } else {\n        setShowUnlinkButtonZoneX(false);\n        assignmentZone.removeAll('x');\n        setShowUnlinkButtonSignalX(false);\n        assignmentSignal.removeAll('x');\n        setShowUnlinkButtonZoneY(false);\n        assignmentZone.removeAll('y');\n        setShowUnlinkButtonSignalY(false);\n        assignmentSignal.removeAll('y');\n      }\n    },\n    [assignmentSignal, assignmentZone, onUnlink, rowData],\n  );\n\n  const clickHandler = useCallback(\n    (event: MouseEvent, assignment: AssignmentsData, axis: Axis) => {\n      event.stopPropagation();\n      assignment.setActive(axis);\n    },\n    [],\n  );\n\n  const onHoverZoneX = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentZone.show('x');\n        highlightZoneX.show();\n      },\n      onMouseLeave: () => {\n        assignmentZone.hide();\n        highlightZoneX.hide();\n      },\n    };\n  }, [assignmentZone, highlightZoneX]);\n\n  const onHoverZoneY = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentZone.show('y');\n        highlightZoneY.show();\n      },\n      onMouseLeave: () => {\n        assignmentZone.hide();\n        highlightZoneY.hide();\n      },\n    };\n  }, [assignmentZone, highlightZoneY]);\n\n  const onHoverSignalX = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentSignal.show('x');\n        highlightSignalX.show();\n      },\n      onMouseLeave: () => {\n        assignmentSignal.hide();\n        highlightSignalX.hide();\n      },\n    };\n  }, [assignmentSignal, highlightSignalX]);\n\n  const onHoverSignalY = useMemo(() => {\n    return {\n      onMouseEnter: () => {\n        assignmentSignal.show('y');\n        highlightSignalY.show();\n      },\n      onMouseLeave: () => {\n        assignmentSignal.hide();\n        highlightSignalY.hide();\n      },\n    };\n  }, [assignmentSignal, highlightSignalY]);\n\n  return (\n    <tr\n      onContextMenu={(e) => onContextMenu(e, rowData)}\n      style={\n        highlightZone.isActive || assignmentZone.isActive\n          ? (HighlightedRowStyle as any)\n          : lodashGet(\n              rowData,\n              'tableMetaInfo.isConstantlyHighlighted',\n              false,\n            ) === true\n          ? ConstantlyHighlightedRowStyle\n          : null\n      }\n      {...highlightZone.onHover}\n    >\n      <td {...(rowSpanTags as any)}>{rowIndex + 1}</td>\n      <SignalDeltaColumn\n        rowData={rowData}\n        onHoverSignalX={onHoverSignalX}\n        onHoverSignalY={onHoverSignalY}\n      />\n      <SignalAssignmentsColumns\n        rowData={rowData}\n        assignmentSignal={assignmentSignal}\n        onHoverSignalX={onHoverSignalX}\n        onHoverSignalY={onHoverSignalY}\n        showUnlinkButtonSignalX={showUnlinkButtonSignalX}\n        showUnlinkButtonSignalY={showUnlinkButtonSignalY}\n        setShowUnlinkButtonSignalX={(show) => setShowUnlinkButtonSignalX(show)}\n        setShowUnlinkButtonSignalY={(show) => setShowUnlinkButtonSignalY(show)}\n        onClick={clickHandler}\n        onUnlink={unlinkHandler}\n        highlightSignalX={highlightSignalX}\n        highlightSignalY={highlightSignalY}\n      />\n      <ZoneAssignmentsColumns\n        rowData={rowData}\n        assignmentZone={assignmentZone}\n        onHoverZoneX={onHoverZoneX}\n        onHoverZoneY={onHoverZoneY}\n        showUnlinkButtonZoneX={showUnlinkButtonZoneX}\n        showUnlinkButtonZoneY={showUnlinkButtonZoneY}\n        setShowUnlinkButtonZoneX={(show) => setShowUnlinkButtonZoneX(show)}\n        setShowUnlinkButtonZoneY={(show) => setShowUnlinkButtonZoneY(show)}\n        rowSpanTags={rowSpanTags}\n        onClick={clickHandler}\n        onUnlink={unlinkHandler}\n        highlightZoneX={highlightZoneX}\n        highlightZoneY={highlightZoneY}\n      />\n      <ActionsColumn rowData={rowData} rowSpanTags={rowSpanTags} />\n    </tr>\n  );\n}\n\nexport default ZonesTableRow;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useMemo, useCallback, useRef, ReactNode } from 'react';\nimport { FaLink } from 'react-icons/fa';\n\nimport checkModifierKeyActivated from '../../../data/utilities/checkModifierKeyActivated';\nimport ContextMenu from '../../elements/ContextMenu';\nimport useTableSortBy from '../../hooks/useTableSortBy';\n\nimport ZonesTableRow from './ZonesTableRow';\n\nconst tableStyle = css`\n  border-spacing: 0;\n  border: 1px solid #dedede;\n  width: 100%;\n  font-size: 12px;\n  .react-contextmenu-wrapper {\n    display: contents;\n  }\n  tr {\n    :last-child {\n      td {\n        border-bottom: 0;\n      }\n    }\n  }\n  thead tr:nth-of-type(1) th {\n    top: 0;\n  }\n  thead tr:nth-of-type(2) th {\n    top: 21px;\n  }\n  th {\n    position: sticky;\n    background-color: white;\n    z-index: 2;\n  }\n  th,\n  td {\n    white-space: nowrap;\n    text-align: center;\n    margin: 0;\n    padding: 0.1rem 0.4rem;\n    border-bottom: 1px solid #dedede;\n    border-right: 1px solid #dedede;\n\n    :last-child {\n      border-right: 0;\n    }\n    button {\n      background-color: transparent;\n      border: none;\n      padding: 0 5px;\n    }\n  }\n`;\n\ninterface ZonesTableProps {\n  tableData: Array<{\n    signals: Array<any>;\n    tableMetaInfo: any;\n    rowIndex: number;\n    signalIndex: number;\n    id: number;\n  }>;\n  onUnlink: (\n    zoneData: any,\n    isOnZoneLevel: any,\n    signalIndex: any,\n    axis: any,\n  ) => void;\n  context?: any;\n  nuclei: string[];\n  experiment: string;\n}\n\nfunction ZonesTable({\n  tableData,\n  onUnlink,\n  context,\n  nuclei,\n  experiment,\n}: ZonesTableProps) {\n  const contextRef = useRef<any>(null);\n\n  const contextMenuHandler = useCallback(\n    (e, rowData) => {\n      if (!checkModifierKeyActivated(e)) {\n        e.preventDefault();\n        contextRef.current.handleContextMenu(e, rowData);\n      }\n    },\n    [contextRef],\n  );\n\n  const data = useMemo(() => {\n    const _data: Array<any> = [];\n    tableData.forEach((zone, i) => {\n      if (zone.signals.length === 1) {\n        _data.push({\n          ...zone,\n          tableMetaInfo: {\n            ...zone.tableMetaInfo,\n            signal: zone.signals[0],\n            rowIndex: i,\n            signalIndex: 0,\n            id: zone.signals[0].id,\n            experiment,\n            nuclei,\n          },\n        });\n      } else if (zone.signals.length > 1) {\n        zone.signals.forEach((signal, j) => {\n          let hide = false;\n          let rowSpan: number | null = null;\n          if (j < zone.signals.length - 1) {\n            if (j === 0) {\n              rowSpan = zone.signals.length;\n            } else {\n              hide = true;\n            }\n          } else {\n            hide = true;\n          }\n          _data.push({\n            ...zone,\n            tableMetaInfo: {\n              ...zone.tableMetaInfo,\n              signal,\n              rowSpan,\n              hide,\n              rowIndex: i,\n              signalIndex: j,\n              id: signal.id,\n              experiment,\n            },\n          });\n        });\n      }\n    });\n\n    return _data;\n  }, [experiment, nuclei, tableData]);\n\n  const { items: sortedData, isSortedDesc, onSort } = useTableSortBy(data);\n\n  const rows = useMemo(\n    () =>\n      sortedData.map((rowData, index) => (\n        <ZonesTableRow\n          rowIndex={index}\n          key={`${rowData.tableMetaInfo.id}`}\n          rowData={rowData}\n          onUnlink={onUnlink}\n          onContextMenu={(e, rowData) => contextMenuHandler(e, rowData)}\n        />\n      )),\n    [contextMenuHandler, sortedData, onUnlink],\n  );\n\n  return (\n    <div>\n      <table css={tableStyle}>\n        <thead>\n          <tr>\n            <th rowSpan={2}>#</th>\n            <th colSpan={2}>δ (ppm)</th>\n            <th colSpan={2}>\n              <FaLink />\n            </th>\n            <th colSpan={2}>Σ</th>\n            <th rowSpan={2}>Kind</th>\n            <th rowSpan={2}>{''}</th>\n          </tr>\n          <tr>\n            <th id=\"tableMetaInfo.signal.x.delta\" {...onSort}>\n              <SurroundedText text=\"F2\">\n                {nuclei[0]}{' '}\n                {isSortedDesc('tableMetaInfo.signal.x.delta').content}\n              </SurroundedText>\n            </th>\n            <th id=\"tableMetaInfo.signal.y.delta\" {...onSort}>\n              <SurroundedText text=\"F1\">\n                {nuclei[1]}{' '}\n                {isSortedDesc('tableMetaInfo.signal.y.delta').content}\n              </SurroundedText>\n            </th>\n            <th>\n              <SurroundedText text=\"F2\">{nuclei[0]}</SurroundedText>\n            </th>\n            <th>\n              <SurroundedText text=\"F1\">{nuclei[1]}</SurroundedText>\n            </th>\n            <th>\n              <SurroundedText text=\"F2\">{nuclei[0]}</SurroundedText>\n            </th>\n            <th>\n              <SurroundedText text=\"F1\">{nuclei[1]}</SurroundedText>\n            </th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n      <ContextMenu ref={contextRef} context={context} />\n    </div>\n  );\n}\n\nfunction SurroundedText(props: { text: 'F1' | 'F2'; children: ReactNode }) {\n  return (\n    <>\n      <div\n        style={{\n          position: 'absolute',\n          fontSize: 8,\n          color: '#3539E6',\n        }}\n      >\n        {props.text}\n      </div>\n      <div style={{ marginLeft: 5 }}>{props.children}</div>\n    </>\n  );\n}\n\nexport default ZonesTable;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState, useMemo, useCallback, useRef, memo } from 'react';\nimport { FaUnlink } from 'react-icons/fa';\n\nimport { Datum2D } from '../../../data/types/data2d';\nimport { useAssignmentData } from '../../assignment/AssignmentsContext';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport ToggleButton from '../../elements/ToggleButton';\nimport ToolTip from '../../elements/ToolTip/ToolTip';\nimport { useModal } from '../../elements/popup/Modal';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport { DELETE_2D_ZONE, UNLINK_ZONE } from '../../reducer/types/Types';\nimport Events from '../../utility/Events';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport NoTableData from '../extra/placeholder/NoTableData';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\nimport PreferencesHeader from '../header/PreferencesHeader';\n\nimport ZonesPreferences from './ZonesPreferences';\nimport ZonesTable from './ZonesTable';\n\nconst style = css`\n  .remove-assignments-btn {\n    border-radius: 5px;\n    margin-top: 3px;\n    margin-left: 2px;\n    border: none;\n    height: 16px;\n    width: 18px;\n    font-size: 12px;\n    padding: 0;\n    background-color: transparent;\n  }\n  .toggle {\n    width: 22px;\n    height: 22px;\n    margin-left: 2px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nfunction ZonesPanelInner({ zones, activeTab, xDomain, yDomain, experiment }) {\n  const [filterIsActive, setFilterIsActive] = useState(false);\n\n  const assignmentData = useAssignmentData();\n\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const [isFlipped, setFlipStatus] = useState(false);\n  const settingRef = useRef<any>();\n\n  const tableData = useMemo(() => {\n    const isInView = (xFrom, xTo, yFrom, yTo) => {\n      const factor = 10000;\n      xFrom = xFrom * factor;\n      xTo = xTo * factor;\n      yFrom = yFrom * factor;\n      yTo = yTo * factor;\n      return (\n        ((xTo >= xDomain[0] * factor && xFrom <= xDomain[1] * factor) ||\n          (xFrom <= xDomain[0] * factor && xTo >= xDomain[1] * factor)) &&\n        ((yTo >= yDomain[0] * factor && yFrom <= yDomain[1] * factor) ||\n          (yFrom <= yDomain[0] * factor && yTo >= yDomain[1] * factor))\n      );\n    };\n\n    const getFilteredZones = (zones) => {\n      return zones.filter((zone) => {\n        return isInView(zone.x.from, zone.x.to, zone.y.from, zone.y.to);\n      });\n    };\n    if (zones.values) {\n      const _zones = filterIsActive\n        ? getFilteredZones(zones.values)\n        : zones.values;\n\n      return _zones.map((zone) => {\n        return {\n          ...zone,\n          tableMetaInfo: {\n            isConstantlyHighlighted: isInView(\n              zone.x.from,\n              zone.x.to,\n              zone.y.from,\n              zone.y.to,\n            ),\n          },\n        };\n      });\n    }\n  }, [zones, filterIsActive, xDomain, yDomain]);\n\n  const handleOnFilter = useCallback(() => {\n    setFilterIsActive(!filterIsActive);\n  }, [filterIsActive]);\n\n  const unlinkZoneHandler = useCallback(\n    (\n      zoneData = null,\n      isOnZoneLevel = undefined,\n      signalIndex = -1,\n      axis = undefined,\n    ) => {\n      dispatch({\n        type: UNLINK_ZONE,\n        payload: {\n          zoneData,\n          assignmentData,\n          isOnZoneLevel,\n          signalIndex,\n          axis,\n        },\n      });\n    },\n    [assignmentData, dispatch],\n  );\n\n  const removeAssignments = useCallback(() => {\n    unlinkZoneHandler();\n  }, [unlinkZoneHandler]);\n\n  const handleOnRemoveAssignments = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All assignments will be removed. Are you sure?',\n      buttons: [{ text: 'Yes', handler: removeAssignments }, { text: 'No' }],\n    });\n  }, [removeAssignments, modal]);\n\n  const handleDeleteAll = useCallback(() => {\n    modal.showConfirmDialog({\n      message: 'All zones will be deleted. Are You sure?',\n      buttons: [\n        {\n          text: 'Yes',\n          handler: () => {\n            dispatch({ type: DELETE_2D_ZONE, payload: { assignmentData } });\n          },\n        },\n        { text: 'No' },\n      ],\n    });\n  }, [assignmentData, dispatch, modal]);\n\n  const settingsPanelHandler = useCallback(() => {\n    setFlipStatus(!isFlipped);\n  }, [isFlipped]);\n\n  const saveSettingHandler = useCallback(() => {\n    settingRef.current.saveSetting();\n    setFlipStatus(false);\n  }, []);\n\n  const visibilityHandler = useCallback((key) => {\n    Events.emit('onZonesVisibilityChange', { key });\n  }, []);\n\n  return (\n    <>\n      <div\n        css={[\n          tablePanelStyle,\n          style,\n          isFlipped &&\n            css`\n              th {\n                position: relative;\n              }\n            `,\n        ]}\n      >\n        {!isFlipped && (\n          <DefaultPanelHeader\n            counter={zones.values ? zones.values.length : 0}\n            onDelete={handleDeleteAll}\n            deleteToolTip=\"Delete All Zones\"\n            onFilter={handleOnFilter}\n            filterToolTip={\n              filterIsActive ? 'Show all zones' : 'Hide zones out of view'\n            }\n            filterIsActive={filterIsActive}\n            counterFiltered={tableData?.length}\n            showSettingButton\n            onSettingClick={settingsPanelHandler}\n          >\n            <ToolTip title={`Remove all Assignments`} popupPlacement=\"right\">\n              <button\n                className=\"remove-assignments-btn\"\n                type=\"button\"\n                onClick={handleOnRemoveAssignments}\n                disabled={!zones.values || zones.values.length === 0}\n              >\n                <FaUnlink />\n              </button>\n            </ToolTip>\n            <ToggleButton\n              popupTitle=\"show/hide zones\"\n              popupPlacement=\"right\"\n              defaultValue\n              onClick={() => visibilityHandler('zones')}\n            >\n              <span style={{ fontSize: '12px', pointerEvents: 'none' }}>z</span>\n            </ToggleButton>\n            <ToggleButton\n              popupTitle=\"show/hide signals\"\n              popupPlacement=\"right\"\n              defaultValue\n              onClick={() => visibilityHandler('signals')}\n            >\n              <span style={{ fontSize: '12px', pointerEvents: 'none' }}>s</span>\n            </ToggleButton>\n            <ToggleButton\n              popupTitle=\"show/hide peaks\"\n              popupPlacement=\"right\"\n              defaultValue\n              onClick={() => visibilityHandler('peaks')}\n            >\n              <span style={{ fontSize: '12px', pointerEvents: 'none' }}>p</span>\n            </ToggleButton>\n          </DefaultPanelHeader>\n        )}\n        {isFlipped && (\n          <PreferencesHeader\n            onSave={saveSettingHandler}\n            onClose={settingsPanelHandler}\n          />\n        )}\n        <div className=\"inner-container\">\n          {!isFlipped ? (\n            <div className=\"table-container\">\n              {tableData && tableData.length > 0 ? (\n                <ZonesTable\n                  tableData={tableData}\n                  onUnlink={unlinkZoneHandler}\n                  nuclei={\n                    activeTab && activeTab.split(',').length === 2\n                      ? activeTab.split(',')\n                      : ['?', '?']\n                  }\n                  experiment={experiment}\n                />\n              ) : (\n                <NoTableData />\n              )}\n            </div>\n          ) : (\n            <ZonesPreferences ref={settingRef} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst MemoizedZonesPanel = memo(ZonesPanelInner);\n\nconst emptyData = { zones: {}, info: {} };\n\nexport default function ZonesPanel() {\n  const { displayerKey, xDomain, yDomain, activeTab } = useChartData();\n  const { zones, info } = useSpectrum(emptyData) as Datum2D;\n\n  return (\n    <MemoizedZonesPanel\n      {...{\n        xDomain,\n        yDomain,\n        activeTab,\n        displayerKey,\n        zones,\n        experiment: info.experiment,\n      }}\n    />\n  );\n}\n","import {\n  protonImpurities,\n  carbonImpurities,\n  Jcoupling,\n  DatabaseNMREntry,\n} from 'nmr-processing';\nimport { filter } from 'smart-array-filter';\n\nimport generateID from '../utilities/generateID';\n\nexport interface DataBaseSignal {\n  assignment: string;\n  delta: number;\n}\n\nexport interface DataBaseRange {\n  from: number;\n  to: number;\n  signals: Array<DataBaseSignal>;\n}\n\nexport type DataBase = {\n  label: string;\n  url?: string;\n  value?: Array<DatabaseNMREntry>;\n}[];\n\nexport const databases: DataBase = [\n  {\n    label: 'Solvent database',\n    value: prepareDataBase([...protonImpurities, ...carbonImpurities]),\n  },\n];\n\nexport interface InitiateDatabaseResult {\n  data: DatabaseNMREntry[];\n  getSolvents: () => string[];\n  search: (keywords?: string | string[]) => DatabaseNMREntry[];\n}\n\nexport function initiateDatabase(\n  databases: DatabaseNMREntry[],\n  nucleus: string,\n): InitiateDatabaseResult {\n  const data = databases.filter((datum) => datum.nucleus === nucleus);\n\n  const getSolvents = () => prepareGetSolvents(data);\n  const search = (keywords: string | string[] = []) =>\n    filter(data, { keywords });\n\n  return { data, getSolvents, search };\n}\n\nfunction prepareGetSolvents(data) {\n  const result: string[] = [];\n  const map = new Map();\n  for (const item of data) {\n    if (!map.has(item.solvent)) {\n      map.set(item.solvent, true);\n      result.push(item.solvent);\n    }\n  }\n  return result;\n}\n\n// export function getDatabasesNames() {\n//   return databases.map((database, index) => {\n//     const { label } = database;\n//     return { id: index, name: label };\n//   });\n// }\n\nfunction prepareDataBase(array: Array<DatabaseNMREntry>) {\n  return array.map((item) => {\n    item.ranges = item.ranges.map((range) => ({\n      id: generateID(),\n      ...range,\n    }));\n    return item;\n  }, []);\n}\n\nexport type PrepareDataResult = Partial<\n  DataBaseRange | DataBaseSignal | Jcoupling\n>;\n\nexport function prepareData(\n  data: Array<DatabaseNMREntry>,\n): PrepareDataResult[] {\n  const result: PrepareDataResult[] = [];\n  let index = 0;\n  for (const item of data) {\n    let ids: string[] = [];\n    const { ranges = [], ...restItemKeys } = item;\n\n    for (const range of ranges) {\n      ids.push(range.id || generateID());\n      const { signals = [], ...restRangKeys } = range;\n      for (const signal of signals) {\n        const { js = [], ...restSignalKeys } = signal;\n        const jsResult = mapJs(js);\n\n        const data = {\n          ...restItemKeys,\n          ...restRangKeys,\n          ...restSignalKeys,\n          ...jsResult,\n          index,\n          id: ids,\n          ranges,\n        };\n        result.push(data);\n      }\n    }\n    index++;\n  }\n  return result;\n}\n\nfunction mapJs(js: Jcoupling[]) {\n  if (js && js.length > 0) {\n    const { coupling, multiplicity } = js.reduce<any>(\n      (acc, { coupling, multiplicity }) => {\n        acc.coupling.push(coupling.toFixed(1));\n        acc.multiplicity += multiplicity;\n        return acc;\n      },\n      { coupling: [], multiplicity: '' },\n    );\n    return { multiplicity, coupling: coupling.join(',') };\n  } else {\n    return { multiplicity: 's', coupling: '' };\n  }\n}\n","import {\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  CSSProperties,\n  forwardRef,\n} from 'react';\n\nimport { usePreferences } from '../../context/PreferencesContext';\nimport FormikColumnFormatField from '../../elements/formik/FormikColumnFormatField';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { getValue as getValueByKeyPath } from '../../utility/LocalStorage';\nimport { databaseDefaultValues } from '../extra/preferences/defaultValues';\n\nconst styles: Record<\n  | 'container'\n  | 'groupContainer'\n  | 'header'\n  | 'inputContainer'\n  | 'input'\n  | 'inputLabel',\n  CSSProperties\n> = {\n  container: {\n    padding: 10,\n    backgroundColor: '#f1f1f1',\n    height: '100%',\n    overflowY: 'auto',\n  },\n  groupContainer: {\n    padding: '5px',\n    borderRadius: '5px',\n    margin: '10px 0px',\n    backgroundColor: 'white',\n  },\n\n  header: {\n    borderBottom: '1px solid #e8e8e8',\n    paddingBottom: '5px',\n    fontWeight: 'bold',\n    color: '#4a4a4a',\n  },\n  inputContainer: {\n    flex: 4,\n    borderRadius: '5px',\n  },\n  inputLabel: {\n    flex: 2,\n    fontSize: '11px',\n    fontWeight: 'bold',\n    color: '#232323',\n  },\n  input: {\n    width: '100px',\n  },\n};\n\nfunction DatabasePreferences(props, ref) {\n  const preferences = usePreferences();\n  const alert = useAlert();\n\n  const formRef = useRef<any>();\n\n  const updateValues = useCallback(() => {\n    const databasePreferences = getValueByKeyPath(\n      preferences.current,\n      `formatting.panels.database`,\n    );\n\n    formRef.current.setValues(\n      databasePreferences ? databasePreferences : databaseDefaultValues,\n    );\n  }, [preferences]);\n\n  useEffect(() => {\n    updateValues();\n  }, [updateValues]);\n\n  const saveHandler = useCallback(\n    (values) => {\n      preferences.dispatch({\n        type: 'SET_PANELS_PREFERENCES',\n        payload: { key: 'database', value: values },\n      });\n      alert.success('database preferences saved successfully');\n    },\n    [alert, preferences],\n  );\n\n  useImperativeHandle(ref, () => ({\n    saveSetting: () => {\n      formRef.current.submitForm();\n    },\n  }));\n\n  return (\n    <div style={styles.container}>\n      <FormikForm onSubmit={saveHandler} ref={formRef}>\n        <div style={styles.groupContainer}>\n          <FormikColumnFormatField\n            label=\"structure\"\n            checkControllerName=\"showSmiles\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"Solvent\"\n            checkControllerName=\"showSolvent\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"Names\"\n            checkControllerName=\"showNames\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"Range\"\n            checkControllerName=\"showRange\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"δ (ppm)\"\n            checkControllerName=\"showDelta\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"Assignment\"\n            checkControllerName=\"showAssignment\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"J (Hz)\"\n            checkControllerName=\"showCoupling\"\n            hideFormat\n          />\n          <FormikColumnFormatField\n            label=\"Multiplicity\"\n            checkControllerName=\"showMultiplicity\"\n            hideFormat\n          />\n        </div>\n      </FormikForm>\n    </div>\n  );\n}\n\nexport default forwardRef(DatabasePreferences);\n","/** @jsxImportSource @emotion/react */\nimport { useMemo, memo, CSSProperties } from 'react';\nimport { ResponsiveChart } from 'react-d3-utils';\nimport { FaPlus } from 'react-icons/fa';\nimport { IdcodeSvgRenderer, SmilesSvgRenderer } from 'react-ocl/full';\n\nimport { usePreferences } from '../../context/PreferencesContext';\nimport ReactTable from '../../elements/ReactTable/ReactTable';\nimport addCustomColumn, {\n  CustomColumn,\n} from '../../elements/ReactTable/utility/addCustomColumn';\nimport { HighlightedSource } from '../../highlight';\nimport { getValue } from '../../utility/LocalStorage';\nimport { databaseDefaultValues } from '../extra/preferences/defaultValues';\n\ninterface DatabaseTableProps {\n  data: any;\n  onAdd: (row: any) => void;\n}\n\nconst overFlowStyle: CSSProperties = {\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n};\n\nconst COLUMNS: (CustomColumn & { showWhen: string })[] = [\n  {\n    showWhen: 'showNames',\n    index: 1,\n    Header: 'names',\n    accessor: (row) => (row.names ? row.names.join(',') : ''),\n    enableRowSpan: true,\n    style: {\n      width: '100px',\n      minWidth: '100px',\n      maxWidth: '100px',\n      ...overFlowStyle,\n    },\n  },\n  {\n    showWhen: 'showRange',\n    index: 2,\n    Header: 'From - To',\n    accessor: (row) => `${row.from.toFixed(2)} - ${row.to.toFixed(2)}`,\n    enableRowSpan: true,\n  },\n  {\n    showWhen: 'showDelta',\n    index: 3,\n    Header: 'δ (ppm)',\n    accessor: 'delta',\n  },\n  {\n    showWhen: 'showAssignment',\n    index: 4,\n    Header: 'Assignment',\n    accessor: 'assignment',\n  },\n  {\n    showWhen: 'showMultiplicity',\n    index: 5,\n    Header: 'Multi.',\n    accessor: 'multiplicity',\n  },\n  {\n    showWhen: 'showCoupling',\n    index: 6,\n    Header: 'J (Hz)',\n    accessor: 'coupling',\n    style: {\n      width: '60px',\n      minWidth: '60px',\n      ...overFlowStyle,\n    },\n  },\n  {\n    showWhen: 'showSolvent',\n    index: 7,\n    Header: 'Solvent',\n    accessor: 'solvent',\n    style: {\n      width: '80px',\n      minWidth: '80px',\n      ...overFlowStyle,\n    },\n  },\n  {\n    showWhen: 'showSmiles',\n    index: 8,\n    Header: 'structure',\n    accessor: 'index',\n    style: { height: 0 },\n    enableRowSpan: true,\n    Cell: ({ row }) => {\n      const { idCode, coordinates } = row.original?.ocl || {};\n      const smiles = row.original?.smiles;\n      return (\n        <ResponsiveChart>\n          {({ width, height }) => {\n            if (idCode && coordinates) {\n              return (\n                <IdcodeSvgRenderer\n                  height={height}\n                  width={width}\n                  idcode={idCode}\n                  coordinates={coordinates}\n                />\n              );\n            } else if (smiles) {\n              return (\n                <SmilesSvgRenderer\n                  height={height}\n                  width={width}\n                  smiles={smiles}\n                />\n              );\n            } else {\n              return null;\n            }\n          }}\n        </ResponsiveChart>\n      );\n    },\n  },\n];\n\nfunction DatabaseTable({ data, onAdd }: DatabaseTableProps) {\n  const preferences = usePreferences();\n\n  const initialColumns = useMemo(\n    () => [\n      {\n        index: 10,\n        Header: '',\n        width: '1%',\n        maxWidth: '24px',\n        minWidth: '24px',\n        id: 'add-button',\n        accessor: 'index',\n        enableRowSpan: true,\n        Cell: ({ row }) => (\n          <button\n            type=\"button\"\n            className=\"add-button\"\n            onClick={() => onAdd(row)}\n          >\n            <FaPlus />\n          </button>\n        ),\n      },\n    ],\n    [onAdd],\n  );\n\n  const tableColumns = useMemo(() => {\n    const databasePreferences = getValue(\n      preferences.current,\n      'formatting.panels.database',\n      databaseDefaultValues,\n    );\n\n    let columns = [...initialColumns];\n    for (const col of COLUMNS) {\n      const { showWhen, ...colParams } = col;\n      if (databasePreferences[showWhen]) {\n        addCustomColumn(columns, colParams);\n      }\n    }\n\n    return columns.sort((object1, object2) => object1.index - object2.index);\n  }, [initialColumns, preferences]);\n  return (\n    <ReactTable\n      data={data}\n      columns={tableColumns}\n      highlightedSource={HighlightedSource.DATABASE}\n      groupKey=\"index\"\n      approxItemHeight={30}\n      enableVirtualScroll\n    />\n  );\n}\n\nexport default memo(DatabaseTable);\n","import { useMemo } from 'react';\n\nimport { databases } from '../../../data/data1d/database';\nimport { usePreferences } from '../../context/PreferencesContext';\n\nexport function useDatabases() {\n  const { current } = usePreferences();\n\n  return useMemo(() => {\n    const data = current.databases || [];\n    return databases.concat(data.filter((datum) => datum.enabled));\n  }, [current.databases]);\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { DatabaseNMREntry } from 'nmr-processing';\nimport { useCallback, useState, useRef, memo, useEffect, useMemo } from 'react';\nimport { FaICursor } from 'react-icons/fa';\nimport { IoSearchOutline } from 'react-icons/io5';\n\nimport {\n  initiateDatabase,\n  InitiateDatabaseResult,\n  prepareData,\n} from '../../../data/data1d/database';\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport Input from '../../elements/Input';\nimport Select, { SelectEntry } from '../../elements/Select';\nimport ToggleButton from '../../elements/ToggleButton';\nimport { useAlert } from '../../elements/popup/Alert';\nimport useToolsFunctions from '../../hooks/useToolsFunctions';\nimport { RESURRECTING_SPECTRUM_FROM_RANGES } from '../../reducer/types/Types';\nimport { options } from '../../toolbar/ToolTypes';\nimport Events from '../../utility/Events';\nimport { useFormatNumberByNucleus } from '../../utility/FormatNumber';\nimport { tablePanelStyle } from '../extra/BasicPanelStyle';\nimport NoTableData from '../extra/placeholder/NoTableData';\nimport DefaultPanelHeader from '../header/DefaultPanelHeader';\nimport PreferencesHeader from '../header/PreferencesHeader';\n\nimport DatabasePreferences from './DatabasePreferences';\nimport DatabaseTable from './DatabaseTable';\nimport { useDatabases } from './useDatabases';\n\nconst style = css`\n  .header {\n    height: 30px;\n    padding: 2px 0px 2px 5px;\n  }\n  .input-container {\n    width: 100%;\n  }\n  .search-input {\n    width: 100% !important;\n    border-radius: 5px;\n    border: 0.55px solid gray;\n    padding: 0 5px;\n    outline: none;\n  }\n`;\n\nexport interface DatabaseInnerProps {\n  nucleus: string;\n  selectedTool: string;\n}\n\ninterface ResultEntry {\n  data: DatabaseNMREntry[];\n  databases: SelectEntry[];\n  solvents: SelectEntry[];\n}\n\nconst emptyKeywords = {\n  solvent: '',\n  searchKeywords: '',\n};\n\nfunction DatabasePanelInner({ nucleus, selectedTool }: DatabaseInnerProps) {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const { handleChangeOption } = useToolsFunctions();\n  const format = useFormatNumberByNucleus(nucleus);\n  const databases = useDatabases();\n  const [isFlipped, setFlipStatus] = useState(false);\n  const settingRef = useRef<any>();\n  const [keywords, setKeywords] = useState<{\n    solvent: string;\n    searchKeywords: string;\n  }>(emptyKeywords);\n  const databaseInstance = useRef<InitiateDatabaseResult | null>(null);\n  const [result, setResult] = useState<ResultEntry>({\n    data: [],\n    databases: [],\n    solvents: [],\n  });\n\n  const settingsPanelHandler = useCallback(() => {\n    setFlipStatus(!isFlipped);\n  }, [isFlipped]);\n\n  const saveSettingHandler = useCallback(() => {\n    settingRef.current.saveSetting();\n    setFlipStatus(false);\n  }, []);\n\n  const handleSearch = useCallback((input) => {\n    if (typeof input === 'string' || input === -1) {\n      const solvent = String(input);\n      setKeywords((prevState) => ({ ...prevState, solvent }));\n    } else {\n      setKeywords((prevState) => ({\n        ...prevState,\n        searchKeywords: input.target.value,\n      }));\n    }\n  }, []);\n\n  useEffect(() => {\n    const { solvent, searchKeywords } = keywords;\n    setTimeout(() => {\n      if (databaseInstance.current) {\n        if (!solvent && !searchKeywords) {\n          const data = databaseInstance.current.data;\n          const solvents = mapSolventsToSelect(\n            databaseInstance.current.getSolvents(),\n          );\n          setResult((prevResult) => ({ ...prevResult, data, solvents }));\n        } else {\n          const values = [...searchKeywords.split(' ')];\n          if (solvent !== '-1') {\n            values.unshift(`solvent:${solvent}`);\n          }\n\n          const data = databaseInstance.current.search(values.join(' '));\n          setResult((prevResult) => ({ ...prevResult, data }));\n        }\n      }\n    });\n  }, [keywords]);\n\n  useEffect(() => {\n    function handle(event) {\n      if (selectedTool === options.databaseRangesSelection.id) {\n        setKeywords((prevState) => {\n          const oldKeywords = prevState.searchKeywords\n            ? prevState.searchKeywords.split(' ')\n            : [];\n          const [from, to] = event.range;\n          const searchKeywords = [\n            ...oldKeywords,\n            `delta:${format(from)}..${format(to)}`,\n          ].join(' ');\n          return { ...prevState, searchKeywords };\n        });\n      }\n    }\n\n    Events.on('brushEnd', handle);\n\n    return () => {\n      Events.off('brushEnd', handle);\n    };\n  }, [format, selectedTool]);\n\n  const handleChangeDatabase = useCallback(\n    (databaseIndex) => {\n      void (async () => {\n        let _database: DatabaseNMREntry[] = [];\n        const { url, label, value } = databases[databaseIndex];\n        if (url) {\n          const hideLoading = await alert.showLoading(`load ${label} database`);\n\n          try {\n            _database = await fetch(url).then((response) => response.json());\n          } catch (e) {\n            alert.error(`Failed to load ${url}`);\n          } finally {\n            hideLoading();\n          }\n        } else {\n          _database = value as DatabaseNMREntry[];\n        }\n        databaseInstance.current = initiateDatabase(_database, nucleus);\n        setKeywords({ ...emptyKeywords });\n      })();\n    },\n    [alert, databases, nucleus],\n  );\n\n  const tableData = useMemo(() => {\n    return prepareData(result.data);\n  }, [result.data]);\n\n  const resurrectHandler = useCallback(\n    (row) => {\n      const { index } = row.original;\n      const { ranges, solvent, names = [] } = result.data[index];\n      dispatch({\n        type: RESURRECTING_SPECTRUM_FROM_RANGES,\n        payload: { ranges, info: { solvent, nucleus, name: names[0] } },\n      });\n    },\n    [dispatch, nucleus, result.data],\n  );\n\n  const clearHandler = useCallback(() => {\n    setKeywords((prevState) => ({ ...prevState, searchKeywords: '' }));\n  }, []);\n\n  const enableFilterHandler = useCallback(\n    (flag) => {\n      const tool = !flag ? options.zoom.id : options.databaseRangesSelection.id;\n      handleChangeOption(tool);\n    },\n    [handleChangeOption],\n  );\n\n  return (\n    <div\n      css={[\n        tablePanelStyle,\n        style,\n        isFlipped &&\n          css`\n            .table-container {\n              table,\n              th {\n                position: relative !important;\n              }\n            }\n          `,\n      ]}\n    >\n      {!isFlipped && (\n        <DefaultPanelHeader\n          showSettingButton\n          onSettingClick={settingsPanelHandler}\n          canDelete={false}\n          className=\"header\"\n        >\n          <ToggleButton\n            key={`${selectedTool}`}\n            defaultValue={selectedTool === options.databaseRangesSelection.id}\n            popupTitle=\"Filter by select ranges\"\n            popupPlacement=\"right\"\n            onClick={enableFilterHandler}\n          >\n            <FaICursor\n              style={{\n                pointerEvents: 'none',\n                fontSize: '12px',\n                transform: 'rotate(90deg)',\n              }}\n            />\n          </ToggleButton>\n          <Select\n            style={{ flex: 2 }}\n            data={mapDatabasesToSelect(databases)}\n            onChange={handleChangeDatabase}\n            placeholder=\"Select database\"\n          />\n          <Select\n            style={{ flex: 1 }}\n            data={result.solvents}\n            placeholder=\"Solvent\"\n            onChange={handleSearch}\n          />\n          <Input\n            value={keywords.searchKeywords}\n            renderIcon={() => <IoSearchOutline />}\n            style={{ inputWrapper: { flex: 3 } }}\n            className=\"search-input\"\n            type=\"text\"\n            debounceTime={250}\n            placeholder=\"Search for parameter...\"\n            onChange={handleSearch}\n            onClear={clearHandler}\n            canClear\n          />\n        </DefaultPanelHeader>\n      )}\n      {isFlipped && (\n        <PreferencesHeader\n          onSave={saveSettingHandler}\n          onClose={settingsPanelHandler}\n        />\n      )}\n      <div className=\"inner-container\">\n        {!isFlipped ? (\n          tableData && tableData.length > 0 ? (\n            <DatabaseTable data={tableData} onAdd={resurrectHandler} />\n          ) : (\n            <NoTableData\n              text={\n                databases && databases.length > 0\n                  ? 'Please select a database'\n                  : 'Please add databases URL in the general preferences'\n              }\n            />\n          )\n        ) : (\n          <DatabasePreferences ref={settingRef} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst MemoizedDatabasePanel = memo(DatabasePanelInner);\n\nexport default function PeaksPanel() {\n  const {\n    activeTab,\n    toolOptions: { selectedTool },\n  } = useChartData();\n  if (!activeTab) return <div />;\n  return (\n    <MemoizedDatabasePanel nucleus={activeTab} selectedTool={selectedTool} />\n  );\n}\n\nfunction mapSolventsToSelect(solvents: string[]) {\n  const result = solvents.map((key) => {\n    return {\n      key,\n      label: key,\n      value: key,\n    };\n  }, []);\n  result.unshift({ key: '-1', label: 'All', value: '-1' });\n  return result;\n}\n\nfunction mapDatabasesToSelect(databases) {\n  return databases.map(({ label }, index) => ({\n    key: index,\n    value: index,\n    label,\n  }));\n}\n","import { CSSProperties, memo, ReactNode } from 'react';\n\nconst styles: CSSProperties = {\n  width: '100%',\n  height: '100%',\n  padding: '0px',\n  display: 'flex',\n  flexDirection: 'column',\n};\n\ninterface TableProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  testID?: string;\n}\n\nfunction Table({ children, className, style, testID }: TableProps) {\n  return (\n    <div\n      className={className}\n      style={{ ...styles, ...style }}\n      data-test-id={testID}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default memo(Table);\n","import {\n  useMemo,\n  memo,\n  Children,\n  cloneElement,\n  ReactNode,\n  CSSProperties,\n} from 'react';\n\nconst styles: CSSProperties = {\n  width: '100%',\n  overflowY: 'auto',\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '5px 0px',\n  color: 'gray',\n};\n\ninterface TableBodyProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n}\n\nfunction TableBody({ children, className, style }: TableBodyProps) {\n  const mappedChildren = useMemo(() => {\n    return Children.map(children, (child: any) =>\n      cloneElement(child, {\n        style: { borderBottom: '0.55px solid #d8d8d8', ...child.props.style },\n      }),\n    );\n  }, [children]);\n\n  return (\n    <div className={className} style={{ ...styles, ...style }}>\n      {mappedChildren}\n    </div>\n  );\n}\n\nexport default memo(TableBody);\n","import { CSSProperties, memo, ReactNode } from 'react';\n\nconst styles = {\n  width: '100%',\n  display: 'flex',\n  alignItems: 'flex-start',\n};\n\nfunction getVAlign(align) {\n  if (align.toLowerCase() === 'top') {\n    return 'flex-start';\n  } else if (align.toLowerCase() === 'bottom') {\n    return 'flex-end';\n  }\n  return 'center';\n}\n\ninterface TableHeaderProps {\n  className?: string;\n  style?: CSSProperties;\n  children: ReactNode;\n  align?: CSSProperties['textAlign'];\n  vAlign?: 'center' | 'top' | 'bottom';\n  size?: number;\n  onClick?: () => void;\n}\n\nfunction TableHeader({\n  children,\n  className,\n  style,\n  align = 'center',\n  vAlign = 'center',\n  size = 1,\n  onClick = () => null,\n}: TableHeaderProps) {\n  return (\n    <div\n      className={className}\n      style={{\n        ...styles,\n        alignItems: getVAlign(vAlign),\n        textAlign: align,\n        flex: size,\n        ...style,\n      }}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default memo(TableHeader);\n","import { CSSProperties, memo, ReactNode } from 'react';\n\nconst styles: CSSProperties = {\n  width: '100%',\n  display: 'flex',\n  padding: '0px 5px',\n  color: '#424242',\n  backgroundColor: '#d8d8d8',\n  borderBottom: '0.55px solid #d8d8d8',\n  fontSize: 11,\n  fontWeight: 'bold',\n};\n\ninterface TableHeadProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n}\n\nfunction TableHead({ children, className, style }: TableHeadProps) {\n  return (\n    <div className={className} style={{ ...styles, ...style }}>\n      {children}\n    </div>\n  );\n}\n\nexport default memo(TableHead);\n","import { CSSProperties, memo, ReactNode } from 'react';\n\nconst styles = {\n  width: '100%',\n  display: 'flex',\n  padding: '5px 0px',\n};\n\ninterface TableHeaderProps {\n  children: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  onClick?: () => void;\n}\n\nfunction TableHeader({\n  children,\n  className,\n  style,\n  onClick = () => null,\n}: TableHeaderProps) {\n  return (\n    <div\n      className={className}\n      style={{ ...styles, ...style }}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default memo(TableHeader);\n","import { useMemo, useCallback, memo, useRef } from 'react';\nimport { FaRegTrashAlt } from 'react-icons/fa';\nimport { ObjectInspector } from 'react-inspector';\n\nimport { useChartData } from '../../context/ChartContext';\nimport { useDispatch } from '../../context/DispatchContext';\nimport CheckBox from '../../elements/CheckBox';\nimport TableCell from '../../elements/Table/TableCell';\nimport TableRow from '../../elements/Table/TableRow';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { useModal } from '../../elements/popup/Modal';\nimport useSpectraByActiveNucleus from '../../hooks/useSpectraPerNucleus';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport {\n  ENABLE_FILTER,\n  DELETE_FILTER,\n  SET_FILTER_SNAPSHOT,\n  DELETE_SPECTRA_FILTER,\n} from '../../reducer/types/Types';\n\nimport { FiltersProps } from './FilterPanel';\n\ninterface FiltersTableInnerProps {\n  filters: Array<FiltersProps>;\n  spectraCounter: number;\n  selectedTool: string | null;\n  activeFilterID: string | null;\n}\n\nfunction FiltersTableInner({\n  filters,\n  spectraCounter,\n  selectedTool,\n  activeFilterID,\n}: FiltersTableInnerProps) {\n  const dispatch = useDispatch();\n  const modal = useModal();\n  const alert = useAlert();\n  const selectedFilterRef = useRef<{ index: string | number | null }>({\n    index: null,\n  });\n\n  const handelFilterCheck = useCallback(\n    (id, checked) => {\n      void (async () => {\n        const hideLoading = await alert.showLoading(\n          `${checked ? 'Enable' : 'Disable'} filter in progress`,\n        );\n        setTimeout(() => {\n          dispatch({ type: ENABLE_FILTER, id, checked });\n          hideLoading();\n        }, 0);\n      })();\n    },\n    [alert, dispatch],\n  );\n  const handelDeleteFilter = useCallback(\n    ({ id, name }) => {\n      const buttons = [\n        {\n          text: 'Yes',\n          handler: async () => {\n            const hideLoading = await alert.showLoading(\n              'Delete filter process in progress',\n            );\n            dispatch({ type: DELETE_FILTER, payload: { id } });\n            hideLoading();\n          },\n        },\n        { text: 'No' },\n      ];\n\n      if (spectraCounter > 1) {\n        buttons.unshift({\n          text: 'Yes, for all spectra',\n          handler: async () => {\n            const hideLoading = await alert.showLoading(\n              'Delete all spectra filter process in progress',\n            );\n            dispatch({\n              type: DELETE_SPECTRA_FILTER,\n              payload: { filterType: name },\n            });\n            hideLoading();\n          },\n        });\n      }\n\n      modal.showConfirmDialog({\n        message: 'Are you sure you want to delete the spectrum?',\n        buttons,\n      });\n    },\n    [alert, dispatch, modal, spectraCounter],\n  );\n  const filterSnapShotHandler = useCallback(\n    (newID) => {\n      void (async () => {\n        const hideLoading = await alert.showLoading(\n          'Filter snapshot process in progress',\n        );\n        setTimeout(() => {\n          dispatch({ type: SET_FILTER_SNAPSHOT, id: newID });\n          hideLoading();\n        }, 0);\n      })();\n    },\n    [alert, dispatch],\n  );\n\n  const getStyle = useCallback(\n    (filter, index) => {\n      const { id, name } = filter;\n\n      if (activeFilterID && activeFilterID === id) {\n        selectedFilterRef.current.index = index;\n      } else if (!activeFilterID) {\n        selectedFilterRef.current.index = null;\n      }\n\n      const classes: string[] = ['filter-row'];\n      if (activeFilterID === id) {\n        classes.push('filter-active');\n      } else if (selectedTool === name) {\n        classes.push('filter-current');\n      } else if (\n        selectedFilterRef.current.index != null &&\n        index > selectedFilterRef.current.index\n      ) {\n        classes.push('filter-deactive');\n      }\n\n      return classes.join(' ');\n    },\n    [activeFilterID, selectedTool],\n  );\n\n  const filtersTableRow = useMemo(() => {\n    return filters?.map((d, index) => {\n      return (\n        <TableRow key={d.id} className={getStyle(d, index)}>\n          <TableCell\n            align=\"center\"\n            size={2}\n            onClick={() => filterSnapShotHandler(d.id)}\n          >\n            {d.label}\n          </TableCell>\n          <TableCell align=\"left\" size={3}>\n            <div onClick={(e) => e.stopPropagation()}>\n              <ObjectInspector data={d.error ? d.error : d.value} />\n            </div>\n          </TableCell>\n          <TableCell align=\"center\" vAlign=\"center\" size={1}>\n            <CheckBox\n              checked={d.flag}\n              onChange={(event) =>\n                handelFilterCheck(d.id, event.target.checked)\n              }\n            />\n            {d.isDeleteAllow && (\n              <button\n                className=\"btn\"\n                type=\"button\"\n                onClick={() => handelDeleteFilter(d)}\n              >\n                <FaRegTrashAlt />\n              </button>\n            )}\n          </TableCell>\n        </TableRow>\n      );\n    });\n  }, [\n    filterSnapShotHandler,\n    filters,\n    getStyle,\n    handelDeleteFilter,\n    handelFilterCheck,\n  ]);\n\n  return <>{filtersTableRow}</>;\n}\n\nconst emptyData = { filters: [] };\n\nconst MemoizedFiltersTable = memo(FiltersTableInner);\n\nexport default function FilterTable() {\n  const {\n    toolOptions: {\n      selectedTool,\n      data: { activeFilterID },\n    },\n  } = useChartData();\n  const { filters } = useSpectrum(emptyData);\n  const spectraCounter = useSpectraByActiveNucleus().length;\n\n  return (\n    <MemoizedFiltersTable\n      {...{ selectedTool, filters, spectraCounter, activeFilterID }}\n    />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useMemo, memo } from 'react';\n\nimport { Filter } from '../../../data/FiltersManager';\nimport Table from '../../elements/Table/Table';\nimport TableBody from '../../elements/Table/TableBody';\nimport TableCell from '../../elements/Table/TableCell';\nimport TableHead from '../../elements/Table/TableHead';\nimport TableRow from '../../elements/Table/TableRow';\nimport useSpectrum from '../../hooks/useSpectrum';\nimport NoTableData from '../extra/placeholder/NoTableData';\n\nimport FiltersTable from './FiltersTable';\n\nconst styles = css`\n  .btn {\n    background-color: transparent;\n    border: none;\n    height: 25;\n    width: 25;\n    padding: 5px;\n  }\n  .filter-row {\n    padding: 5px !important;\n  }\n  .filter-active {\n    background-color: #f7f7f7;\n    div,\n    span,\n    .btn {\n      color: black !important;\n    }\n\n    li {\n      background-color: transparent !important;\n    }\n  }\n  .filter-current {\n    background-color: #707070;\n    div,\n    span,\n    .btn {\n      color: white !important;\n    }\n\n    li {\n      background-color: transparent !important;\n    }\n  }\n\n  .filter-deactive {\n    opacity: 0.3;\n  }\n`;\n\nexport interface FiltersProps extends Filter {\n  error?: any;\n}\n\ninterface FiltersPanelInnerProps {\n  filters: Array<FiltersProps>;\n}\n\nfunction FilterPanelInner({ filters }: FiltersPanelInnerProps) {\n  const filtersTable = useMemo(() => {\n    return filters ? (\n      <Table testID=\"filters-table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\" size={1}>\n              Label\n            </TableCell>\n            <TableCell align=\"center\" size={2}>\n              Properties\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody css={styles}>\n          <FiltersTable />\n        </TableBody>\n      </Table>\n    ) : (\n      <NoTableData />\n    );\n  }, [filters]);\n\n  return filtersTable;\n}\n\nconst emptyData = { filters: [] };\n\nconst MemoizedFilterPanel = memo(FilterPanelInner);\n\nexport default function FilterPanel() {\n  const { filters } = useSpectrum(emptyData);\n\n  return <MemoizedFilterPanel filters={filters} />;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useRef } from 'react';\nimport * as Yup from 'yup';\n\nimport {\n  PredictionOptions as PredictionOptionsInterface,\n  defaultPredictionOptions,\n  FREQUENCIES,\n} from '../../../data/PredictionManager';\nimport Button from '../../elements/Button';\nimport IsotopesViewer from '../../elements/IsotopesViewer';\nimport Label from '../../elements/Label';\nimport FormikErrorsSummary from '../../elements/formik/FormikErrorsSummary';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport FormikInput from '../../elements/formik/FormikInput';\nimport FormikSelect from '../../elements/formik/FormikSelect';\n\nconst styles = css`\n  padding: 10px;\n  border-top: solid #f2f2f2 1px;\n\n  .row {\n    flex: row;\n    display: flex;\n    padding-bottom: 10px;\n  }\n\n  .inner-content {\n    flex: 1;\n  }\n\n  .custom-label {\n    width: 160px;\n  }\n\n  .footer-container {\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: flex-end;\n  }\n\n  .input {\n    font-size: 14px;\n    border-radius: 5px;\n    border: 1px solid #cccccc;\n    padding: 5px;\n    width: 100px;\n    margin-right: 10px;\n    height: initial !important;\n  }\n`;\n\nconst predictionFormValidation = Yup.object().shape({\n  frequency: Yup.number().integer().required().label('Frequency'),\n  '1d': Yup.object({\n    '1H': Yup.object({\n      from: Yup.number().integer().required().label(\"1H ' From ' \"),\n      to: Yup.number().integer().required().label(\"1H ' To ' \"),\n    }),\n    '13C': Yup.object().shape({\n      from: Yup.number().integer().required().label(\"13C ' From ' \"),\n      to: Yup.number().integer().required().label(\"13C ' To ' \"),\n    }),\n    lineWidth: Yup.number().integer().min(1).required().label('Line Width'),\n  }),\n});\n\ninterface PredictionOptionsProps {\n  onPredict?: (options?: PredictionOptionsInterface) => void;\n}\n\nfunction PredictionOptions({ onPredict = () => null }: PredictionOptionsProps) {\n  const refForm = useRef<any>();\n\n  const handleSave = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n\n  const submitHandler = useCallback(\n    (values) => {\n      void (async () => {\n        onPredict(values);\n      })();\n    },\n    [onPredict],\n  );\n\n  return (\n    <div css={styles}>\n      <div>\n        <FormikForm\n          ref={refForm}\n          initialValues={defaultPredictionOptions}\n          validationSchema={predictionFormValidation}\n          onSubmit={submitHandler}\n        >\n          <FormikErrorsSummary />\n          <div className=\"row margin-10\">\n            <span className=\"custom-label\">Frequency : </span>\n            <FormikSelect\n              data={FREQUENCIES}\n              style={{ width: 290, height: 30, margin: 0 }}\n              name=\"frequency\"\n            />\n          </div>\n\n          <div className=\"row\">\n            <IsotopesViewer value=\"1H\" className=\"custom-label\" />\n            <Label title=\"From\">\n              <FormikInput name=\"1d.1H.from\" type=\"number\" />\n            </Label>\n            <Label title=\"To\" style={{ label: { padding: '0 10px' } }}>\n              <FormikInput name=\"1d.1H.to\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\"row\">\n            <IsotopesViewer value=\"13C\" className=\"custom-label\" />\n            <Label title=\"From\">\n              <FormikInput name=\"1d.13C.from\" type=\"number\" />\n            </Label>\n            <Label title=\"To\" style={{ label: { padding: '0 10px' } }}>\n              <FormikInput name=\"1d.13C.to\" type=\"number\" />\n            </Label>\n          </div>\n          <div className=\"row margin-10 padding-h-10\">\n            <span className=\"custom-label\">Line Width : </span>\n            <FormikInput\n              name=\"1d.lineWidth\"\n              type=\"number\"\n              style={{ input: { margin: 0 } }}\n            />\n            <span style={{ paddingLeft: '0.4rem' }}> Hz </span>\n          </div>\n        </FormikForm>\n      </div>\n      <div>\n        <Button.Done onClick={handleSave}>Predict spectrum</Button.Done>\n      </div>\n    </div>\n  );\n}\n\nexport default PredictionOptions;\n","import { useState, useCallback } from 'react';\n\nimport { Molecule } from '../../../data/molecules/Molecule';\nimport { useDispatch } from '../../context/DispatchContext';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { PREDICT_SPECTRA, SET_LOADING_FLAG } from '../../reducer/types/Types';\nimport MoleculePanel from '../MoleculesPanel/MoleculePanel';\n\nimport PredictionPreferences from './PredictionOptions';\n\nexport default function PredictionPane() {\n  const [molecule, setMolecule] = useState<Molecule | null>();\n\n  const changeHandler = useCallback((molecule) => {\n    setMolecule(molecule);\n  }, []);\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const predictHandler = useCallback(\n    (values) => {\n      void (async () => {\n        if (molecule) {\n          dispatch({\n            type: SET_LOADING_FLAG,\n            isLoading: true,\n          });\n\n          const hideLoading = await alert.showLoading(\n            `Predict 1H, 13C, COSY, HSQC, and HMBC in progress`,\n          );\n\n          dispatch({\n            type: PREDICT_SPECTRA,\n            payload: { mol: molecule, options: values },\n          });\n\n          hideLoading();\n        } else {\n          alert.error('No Molecule selected');\n        }\n      })();\n    },\n    [alert, dispatch, molecule],\n  );\n\n  return (\n    <MoleculePanel\n      onMoleculeChange={changeHandler}\n      actionsOptions={{ hidePredict: true, hideDelete: true, hideExport: true }}\n    >\n      <PredictionPreferences onPredict={predictHandler} />\n    </MoleculePanel>\n  );\n}\n","import { Accordion } from 'analysis-ui-components';\nimport lodashGet from 'lodash/get';\nimport { useCallback, memo, ReactElement, CSSProperties } from 'react';\n\nimport { PanelPreferencesType } from '../../types/PanelPreferencesType';\nimport { useChartData } from '../context/ChartContext';\nimport { usePreferences } from '../context/PreferencesContext';\nimport useCheckExperimentalFeature from '../hooks/useCheckExperimentalFeature';\nimport { DISPLAYER_MODE } from '../reducer/core/Constants';\n\nimport AutomaticAssignment from './AutomaticAssignment/AutomaticAssignment';\nimport InformationPanel from './InformationPanel';\nimport IntegralPanel from './IntegralsPanel/IntegralPanel';\nimport MatrixGenerationPanel from './MatrixGenerationPanel/MatrixGenerationPanel';\nimport MoleculePanel from './MoleculesPanel/MoleculePanel';\nimport MultipleSpectraAnalysisPanel from './MultipleSpectraAnalysisPanel/MultipleSpectraAnalysisPanel';\nimport PeaksPanel from './PeaksPanel/PeaksPanel';\nimport RangesPanel from './RangesPanel/RangesPanel';\nimport SpectrumListPanel from './SpectrumsPanel/SpectrumListPanel';\nimport SummaryPanel from './SummaryPanel/SummaryPanel';\nimport ZonesPanel from './ZonesPanel/ZonesPanel';\nimport DatabasePanel from './databasePanel/DatabasePanel';\nimport FilterPanel from './filtersPanel/FilterPanel';\nimport PredictionPane from './predictionPanel/PredictionPanel';\n\ninterface AccordionItem {\n  title: string;\n  component: ReactElement;\n  style?: CSSProperties;\n  hidePreferenceKey: string;\n  mode: '1D' | '2D' | null;\n  isExperimental?: boolean;\n}\n\nconst accordionItems: AccordionItem[] = [\n  {\n    title: 'Spectra',\n    component: <SpectrumListPanel />,\n    hidePreferenceKey: 'spectraPanel',\n    mode: null,\n  },\n  {\n    title: 'Information',\n    component: <InformationPanel />,\n    style: { overflow: 'hidden' },\n    hidePreferenceKey: 'informationPanel',\n    mode: null,\n  },\n  {\n    title: 'Peaks',\n    component: <PeaksPanel />,\n    hidePreferenceKey: 'peaksPanel',\n    mode: null,\n  },\n  {\n    title: 'Filters',\n    component: <FilterPanel />,\n    hidePreferenceKey: 'filtersPanel',\n    mode: null,\n  },\n  {\n    title: 'Integrals',\n    component: <IntegralPanel />,\n    hidePreferenceKey: 'integralsPanel',\n    mode: null,\n  },\n  {\n    title: 'Ranges',\n    component: <RangesPanel />,\n    hidePreferenceKey: 'rangesPanel',\n    mode: DISPLAYER_MODE.DM_1D,\n  },\n  {\n    title: 'Multiple Spectra Analysis',\n    component: <MultipleSpectraAnalysisPanel />,\n    hidePreferenceKey: 'multipleSpectraAnalysisPanel',\n    mode: null,\n  },\n  {\n    title: 'Matrix Generation',\n    component: <MatrixGenerationPanel />,\n    hidePreferenceKey: '',\n    mode: null,\n    isExperimental: true,\n  },\n  {\n    title: 'Zones',\n    component: <ZonesPanel />,\n    hidePreferenceKey: 'zonesPanel',\n    mode: DISPLAYER_MODE.DM_2D,\n  },\n  {\n    title: 'Summary',\n    component: <SummaryPanel />,\n    hidePreferenceKey: 'summaryPanel',\n    mode: null,\n  },\n  {\n    title: 'Structures',\n    component: <MoleculePanel />,\n    hidePreferenceKey: 'structuresPanel',\n    mode: null,\n  },\n  {\n    title: 'Databases',\n    component: <DatabasePanel />,\n    hidePreferenceKey: 'databasePanel',\n    mode: null,\n  },\n  {\n    title: 'Automatic Assignment',\n    component: <AutomaticAssignment />,\n    hidePreferenceKey: '',\n    mode: null,\n    isExperimental: true,\n  },\n  {\n    title: 'Prediction',\n    component: <PredictionPane />,\n    hidePreferenceKey: 'predictionPanel',\n    mode: null,\n  },\n];\n\nexport const TOOLS_PANELS_ACCORDION: Record<string, string> = {\n  null: 'Spectra',\n  peakPicking: 'Peaks',\n  integral: 'Integrals',\n  rangesPicking: 'Ranges',\n  zone2D: 'Zones',\n  multipleSpectraAnalysis: 'Multiple Spectra Analysis',\n};\n\nfunction usePanelPreferences(): (item: AccordionItem) => PanelPreferencesType {\n  const preferences = usePreferences();\n\n  return useCallback(\n    (item: AccordionItem) => {\n      return lodashGet(\n        preferences.current,\n        `display.panels.${item.hidePreferenceKey}`,\n      );\n    },\n    [preferences],\n  );\n}\n\nfunction PanelsInner({ displayerMode: displayedMode }) {\n  const getPanelPreferences = usePanelPreferences();\n  const isExperimental = useCheckExperimentalFeature();\n  const check = useCallback(\n    (item) => {\n      const panelOptions = getPanelPreferences(item);\n      return (\n        (panelOptions?.hidden !== true &&\n          panelOptions?.display === true &&\n          item.isExperimental === undefined &&\n          (item.mode == null || item.mode === displayedMode)) ||\n        (item.isExperimental && isExperimental)\n      );\n    },\n    [displayedMode, getPanelPreferences, isExperimental],\n  );\n\n  const isOpened = useCallback(\n    (item: AccordionItem) => {\n      const panelOptions = getPanelPreferences(item);\n      return panelOptions?.hidden !== true && panelOptions?.open;\n    },\n    [getPanelPreferences],\n  );\n\n  return (\n    <div style={{ width: '100%', height: '100%', flex: '1 1 0%' }}>\n      <Accordion>\n        {accordionItems.map((item) => {\n          return (\n            check(item) && (\n              <Accordion.Item\n                key={item.title}\n                title={item.title}\n                defaultOpened={isOpened(item)}\n              >\n                {item.component}\n              </Accordion.Item>\n            )\n          );\n        })}\n      </Accordion>\n    </div>\n  );\n}\n\nconst MemoizedPanels = memo(PanelsInner);\n\nexport default function Panels() {\n  const {\n    displayerMode,\n    toolOptions: { selectedTool },\n  } = useChartData();\n\n  return <MemoizedPanels {...{ displayerMode, selectedTool }} />;\n}\n","import { useToggleAccordion } from 'analysis-ui-components';\nimport lodashDebounce from 'lodash/debounce';\nimport lodashMap from 'lodash/map';\nimport { useCallback, useRef, useState } from 'react';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport { useAlert } from '../elements/popup/Alert';\nimport { TOOLS_PANELS_ACCORDION } from '../panels/Panels';\nimport { ZoomType } from '../reducer/helper/Zoom1DManager';\nimport {\n  CHANGE_SPECTRUM_DISPLAY_VIEW_MODE,\n  FULL_ZOOM_OUT,\n  SET_SELECTED_TOOL,\n  SET_SPECTRUMS_VERTICAL_ALIGN,\n  TOGGLE_REAL_IMAGINARY_VISIBILITY,\n} from '../reducer/types/Types';\nimport { options } from '../toolbar/ToolTypes';\n\nexport default function useToolsFunctions() {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { open: openPanel } = useToggleAccordion();\n  const [isRealSpectrumShown, setIsRealSpectrumShown] = useState(false);\n\n  const debounceClickEventsRef = useRef<{ clicks: Array<any> }>({ clicks: [] });\n  const handleChangeOption = useCallback(\n    (selectedTool) => {\n      if (\n        [\n          options.peakPicking.id,\n          options.integral.id,\n          options.zone2D.id,\n          options.exclusionZones.id,\n        ].includes(selectedTool)\n      ) {\n        alert.show('Press Shift + Left Mouse button to select zone');\n      }\n\n      if (Object.keys(TOOLS_PANELS_ACCORDION).includes(selectedTool)) {\n        openPanel(TOOLS_PANELS_ACCORDION[selectedTool]);\n      }\n\n      dispatch({\n        type: SET_SELECTED_TOOL,\n        payload: { selectedTool },\n      });\n    },\n    [alert, dispatch, openPanel],\n  );\n\n  const handleFullZoomOut = useCallback(() => {\n    if (debounceClickEventsRef.current.clicks.length === 0) {\n      dispatch({\n        type: FULL_ZOOM_OUT,\n        zoomType: ZoomType.HORIZONTAL,\n      });\n    }\n    const callback = lodashDebounce(() => {\n      debounceClickEventsRef.current.clicks = [];\n    }, 500);\n    debounceClickEventsRef.current.clicks.push(callback);\n\n    callback();\n\n    if (debounceClickEventsRef.current.clicks.length > 1) {\n      lodashMap(debounceClickEventsRef.current.clicks, (debounce) =>\n        debounce.cancel(),\n      );\n      debounceClickEventsRef.current.clicks = [];\n      dispatch({\n        type: FULL_ZOOM_OUT,\n      });\n    }\n  }, [dispatch, debounceClickEventsRef]);\n\n  const changeDisplayViewModeHandler = useCallback(() => {\n    dispatch({\n      type: CHANGE_SPECTRUM_DISPLAY_VIEW_MODE,\n    });\n  }, [dispatch]);\n\n  const changeSpectrumViewHandler = useCallback(() => {\n    dispatch({\n      type: TOGGLE_REAL_IMAGINARY_VISIBILITY,\n      isRealSpectrumVisible: !isRealSpectrumShown,\n    });\n    setIsRealSpectrumShown(!isRealSpectrumShown);\n  }, [dispatch, isRealSpectrumShown]);\n\n  const alignSpectrumsVerticallyHandler = useCallback(() => {\n    dispatch({\n      type: SET_SPECTRUMS_VERTICAL_ALIGN,\n    });\n  }, [dispatch]);\n\n  return {\n    handleChangeOption,\n    handleFullZoomOut,\n    changeDisplayViewModeHandler,\n    changeSpectrumViewHandler,\n    alignSpectrumsVerticallyHandler,\n    isRealSpectrumShown,\n  };\n}\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport checkModifierKeyActivated from '../../data/utilities/checkModifierKeyActivated';\nimport { useAssignmentData } from '../assignment/AssignmentsContext';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport { useLoader } from '../context/LoaderContext';\nimport { useAlert } from '../elements/popup/Alert';\nimport { HighlightedSource, useHighlightData } from '../highlight/index';\nimport useExport from '../hooks/useExport';\nimport useToolsFunctions from '../hooks/useToolsFunctions';\nimport { DISPLAYER_MODE } from '../reducer/core/Constants';\nimport {\n  SET_KEY_PREFERENCES,\n  APPLY_KEY_PREFERENCES,\n  DELETE_INTEGRAL,\n  DELETE_PEAK_NOTATION,\n  DELETE_RANGE,\n  DELETE_2D_ZONE,\n  DELETE_EXCLUSION_ZONE,\n} from '../reducer/types/Types';\nimport { options } from '../toolbar/ToolTypes';\n\nfunction KeysListenerTracker() {\n  const {\n    keysPreferences,\n    displayerMode,\n    overDisplayer,\n    data,\n    activeSpectrum,\n  } = useChartData();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const openLoader = useLoader();\n\n  const {\n    handleChangeOption,\n    handleFullZoomOut,\n    alignSpectrumsVerticallyHandler,\n    changeDisplayViewModeHandler,\n  } = useToolsFunctions();\n\n  const { saveToClipboardHandler, saveAsJSONHandler, saveAsHandler } =\n    useExport();\n\n  const { highlight, remove } = useHighlightData();\n\n  const assignmentData = useAssignmentData();\n  const allow1DTool = useMemo(() => {\n    return displayerMode === DISPLAYER_MODE.DM_1D && data && data.length > 0;\n  }, [data, displayerMode]);\n\n  const deleteHandler = useCallback(\n    async (sourceData) => {\n      const {\n        type,\n        extra: { id },\n      } = sourceData;\n\n      switch (type) {\n        case HighlightedSource.INTEGRAL: {\n          dispatch({\n            type: DELETE_INTEGRAL,\n            integralID: id,\n          });\n          // remove keys from the highlighted list after delete\n          remove();\n\n          break;\n        }\n        case HighlightedSource.PEAK: {\n          dispatch({\n            type: DELETE_PEAK_NOTATION,\n            data: { id },\n          });\n          // remove keys from the highlighted list after delete\n          remove();\n\n          break;\n        }\n        case HighlightedSource.RANGE: {\n          dispatch({\n            type: DELETE_RANGE,\n            payload: {\n              data: {\n                id,\n                assignmentData,\n              },\n            },\n          });\n          // remove keys from the highlighted list after delete\n          remove();\n\n          break;\n        }\n        case HighlightedSource.ZONE: {\n          dispatch({\n            type: DELETE_2D_ZONE,\n            payload: {\n              id,\n              assignmentData,\n            },\n          });\n          // remove keys from the highlighted list after delete\n          remove();\n\n          break;\n        }\n        case HighlightedSource.EXCLUSION_ZONE: {\n          const hideLoading = await alert.showLoading(\n            `Exclusion filter in progress`,\n          );\n          dispatch({\n            type: DELETE_EXCLUSION_ZONE,\n            payload: {\n              id,\n              spectrumID: sourceData.extra.spectrumID,\n            },\n          });\n          hideLoading();\n          // remove keys from the highlighted list after delete\n          remove();\n\n          break;\n        }\n\n        default:\n          break;\n      }\n    },\n    [assignmentData, dispatch, remove, alert],\n  );\n\n  const keysPreferencesListenerHandler = useCallback(\n    (e, num) => {\n      if (data && data.length > 0 && num >= 1 && num <= 9) {\n        if (e.shiftKey) {\n          dispatch({\n            type: SET_KEY_PREFERENCES,\n            keyCode: num,\n          });\n          alert.show(`Configuration Reset, press '${num}' again to reload it.`);\n        } else {\n          if (!checkModifierKeyActivated(e)) {\n            if (keysPreferences?.[num]) {\n              dispatch({\n                type: APPLY_KEY_PREFERENCES,\n                keyCode: num,\n              });\n            } else {\n              dispatch({\n                type: SET_KEY_PREFERENCES,\n                keyCode: num,\n              });\n              alert.show(\n                `Configuration saved, press '${num}' again to reload it.`,\n              );\n            }\n          }\n        }\n      }\n    },\n    [alert, data, dispatch, keysPreferences],\n  );\n\n  const toolsListenerHandler = useCallback(\n    (e) => {\n      function check1DModeWithActiveSpectrum(\n        label: string,\n        checkSwitch = true,\n      ) {\n        if (displayerMode === DISPLAYER_MODE.DM_1D && !activeSpectrum) {\n          throw new Error(`Select a spectrum to proceed with ${label}`);\n        } else if (checkSwitch && displayerMode === DISPLAYER_MODE.DM_2D) {\n          throw new Error(\n            `Switch to 1D Mode and select a spectrum to proceed with ${label}`,\n          );\n        }\n      }\n      function check2DModeWithActiveSpectrum(\n        label: string,\n        checkSwitch = true,\n      ) {\n        if (displayerMode === DISPLAYER_MODE.DM_2D && !activeSpectrum) {\n          throw new Error(`Select a spectrum to proceed with ${label}`);\n        } else if (checkSwitch && displayerMode === DISPLAYER_MODE.DM_1D) {\n          throw new Error(\n            `Switch to 2D Mode and select a spectrum to proceed with ${label}`,\n          );\n        }\n      }\n\n      try {\n        if (!e.shiftKey && !e.metaKey) {\n          switch (e.key) {\n            case 'f':\n              handleFullZoomOut();\n              break;\n            case 'z':\n            case 'Escape':\n              handleChangeOption(options.zoom.id);\n              break;\n            case 'r': {\n              if (displayerMode === DISPLAYER_MODE.DM_2D) {\n                check2DModeWithActiveSpectrum(options.zone2D.label, false);\n                handleChangeOption(options.zone2D.id);\n              } else {\n                check1DModeWithActiveSpectrum(\n                  options.rangesPicking.label,\n                  false,\n                );\n                handleChangeOption(options.rangesPicking.id);\n              }\n              break;\n            }\n            case 'a': {\n              check1DModeWithActiveSpectrum(options.phaseCorrection.label);\n              handleChangeOption(options.phaseCorrection.id);\n\n              break;\n            }\n            case 'b': {\n              check1DModeWithActiveSpectrum(options.baseLineCorrection.label);\n              handleChangeOption(options.baseLineCorrection.id);\n\n              break;\n            }\n            case 'p': {\n              check1DModeWithActiveSpectrum(options.peakPicking.label);\n              handleChangeOption(options.peakPicking.id);\n\n              break;\n            }\n            case 'i': {\n              check1DModeWithActiveSpectrum(options.integral.label);\n              handleChangeOption(options.integral.id);\n\n              break;\n            }\n            case 'e': {\n              check1DModeWithActiveSpectrum(options.exclusionZones.label);\n              handleChangeOption(options.exclusionZones.id);\n\n              break;\n            }\n            default:\n          }\n        }\n\n        if (!e.shiftKey && !e.metaKey && !e.ctrlKey) {\n          switch (e.key) {\n            case 'c': {\n              if (allow1DTool) {\n                alignSpectrumsVerticallyHandler();\n              }\n              break;\n            }\n            case 's': {\n              if (allow1DTool) {\n                changeDisplayViewModeHandler();\n              }\n              break;\n            }\n            default:\n          }\n        }\n\n        if (!e.shiftKey && (e.metaKey || e.ctrlKey)) {\n          switch (e.key) {\n            case 'c':\n              void saveToClipboardHandler();\n              e.preventDefault();\n              break;\n            case 's':\n              void saveAsJSONHandler();\n              e.preventDefault();\n              break;\n            case 'o':\n              openLoader();\n              e.preventDefault();\n              break;\n            default:\n          }\n        }\n        if (e.shiftKey && (e.metaKey || e.ctrlKey)) {\n          switch (e.key) {\n            case 's':\n            case 'S':\n              void saveAsHandler();\n              e.preventDefault();\n              break;\n            default:\n          }\n        }\n      } catch (e: any) {\n        alert.error(e.message);\n      }\n    },\n    [\n      activeSpectrum,\n      alert,\n      alignSpectrumsVerticallyHandler,\n      allow1DTool,\n      changeDisplayViewModeHandler,\n      displayerMode,\n      handleChangeOption,\n      handleFullZoomOut,\n      openLoader,\n      saveAsHandler,\n      saveAsJSONHandler,\n      saveToClipboardHandler,\n    ],\n  );\n\n  function checkNotInputField(e: Event) {\n    const tags = ['input', 'textarea'];\n    const tagName = (e.composedPath()[0] as HTMLElement).tagName.toLowerCase();\n    if (!tags.includes(tagName)) return true;\n\n    return false;\n  }\n\n  const handleOnKeyDown = useCallback(\n    (e) => {\n      if (checkNotInputField(e) && overDisplayer) {\n        const num = Number(e.code.substr(e.code.length - 1)) || 0;\n        if (num > 0) {\n          keysPreferencesListenerHandler(e, num);\n        } else {\n          if (['Delete', 'Backspace'].includes(e.key) && highlight.sourceData) {\n            e.preventDefault();\n            void deleteHandler(highlight.sourceData);\n          } else {\n            toolsListenerHandler(e);\n          }\n        }\n      }\n    },\n    [\n      deleteHandler,\n      highlight,\n      keysPreferencesListenerHandler,\n      overDisplayer,\n      toolsListenerHandler,\n    ],\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleOnKeyDown);\n\n    return () => document.removeEventListener('keydown', handleOnKeyDown);\n  }, [handleOnKeyDown]);\n\n  return null;\n}\n\nexport default KeysListenerTracker;\n","import { SplitPane } from 'analysis-ui-components';\n\nimport { usePreferences } from './context/PreferencesContext';\n\nexport function SplitPaneWrapper({ children }) {\n  const { current } = usePreferences();\n  return (\n    <SplitPane\n      key={current?.display?.general?.hidePanelOnLoad ? 'true' : 'false'}\n      initialSeparation=\"590px\"\n      orientation=\"horizontal\"\n      sideSeparation=\"end\"\n      initialClosed={current?.display?.general?.hidePanelOnLoad || false}\n    >\n      {children}\n    </SplitPane>\n  );\n}\n","import { isSpectrum1D } from '../../../data/data1d/Spectrum1D';\nimport { Datum1D } from '../../../data/types/data1d';\nimport { Ranges } from '../../../data/types/data1d/Ranges';\nimport { Datum2D, Zones } from '../../../data/types/data2d';\nimport { assignmentState, AssignmentState, Axis } from '../AssignmentsContext';\n\nexport default function initAssignment(action) {\n  const newState = {\n    ...assignmentState,\n  };\n\n  const spectra = (action.payload.spectra || []) as (Datum1D | Datum2D)[];\n  for (const spectrum of spectra) {\n    if (isSpectrum1D(spectrum)) {\n      setRangesAssignments(newState, spectrum.ranges);\n    } else {\n      setZonesAssignments(newState, spectrum.zones);\n    }\n  }\n  return newState;\n}\n\nfunction setRangesAssignments(state: AssignmentState, ranges: Ranges) {\n  const diaIDRecords = ranges.values.reduce<{ id: string; diaIDs: string[] }[]>(\n    (acc, { id, diaIDs, signals }) => {\n      acc.push({ id, diaIDs: diaIDs || [] });\n      for (const signal of signals) {\n        acc.push({ id: signal.id, diaIDs: signal.diaIDs || [] });\n      }\n      return acc;\n    },\n    [],\n  );\n\n  for (const { id, diaIDs } of diaIDRecords) {\n    for (const diaID of diaIDs) {\n      setAssignment(state, id, 'x', diaID);\n    }\n  }\n}\nfunction setZonesAssignments(state: AssignmentState, zones: Zones) {\n  const diaIDRecords = zones.values.reduce<\n    { id: string; diaIDs: Record<Axis, string[]> }[]\n  >((acc, { id, x, y, signals }) => {\n    acc.push({ id, diaIDs: { x: x.diaIDs || [], y: y.diaIDs || [] } });\n    for (const signal of signals) {\n      acc.push({\n        id: signal.id,\n        diaIDs: { x: signal.x.diaIDs || [], y: signal.y.diaIDs || [] },\n      });\n    }\n    return acc;\n  }, []);\n\n  for (const { id, diaIDs } of diaIDRecords) {\n    (['x', 'y'] as Axis[]).forEach((axis) => {\n      for (const diaID of diaIDs[axis]) {\n        setAssignment(state, id, axis, diaID);\n      }\n    });\n  }\n}\n\nfunction setAssignment(state: AssignmentState, id, axis: Axis, diaID: string) {\n  if (\n    Array.isArray(state.assignments?.[id]?.[axis]) &&\n    !state.assignments[id][axis].includes(diaID)\n  ) {\n    state.assignments[id][axis].push(diaID);\n  } else {\n    state.assignments = {\n      ...state.assignments,\n      [id]: { ...state.assignments[id], [axis]: [diaID] },\n    };\n  }\n}\n","import { AssignmentState, Axis } from '../AssignmentsContext';\n\ninterface RemoveAction {\n  ids: string[];\n  atomID?: string;\n  axis: Axis;\n}\n\ninterface AssignmentRemoveOptions extends Omit<RemoveAction, 'ids'> {\n  id: string;\n}\n\nexport function removeAssignment(\n  state: AssignmentState,\n  options: AssignmentRemoveOptions,\n) {\n  const { id, atomID = '', axis } = options;\n\n  const atomIDs = state.assignments?.[id]?.[axis] || null;\n\n  if (atomIDs) {\n    if (atomID) {\n      atomIDs.filter((id) => id !== atomID);\n      state.assignments[id][axis] = atomIDs;\n    } else {\n      state.assignments[id][axis] = [];\n    }\n  }\n}\n\nexport default function removeAssignments(\n  state: AssignmentState,\n  action: RemoveAction,\n) {\n  const newState = {\n    ...state,\n  };\n  // signal id\n  const { ids, atomID = '', axis } = action;\n  for (const id of ids) {\n    removeAssignment(newState, { id, atomID, axis });\n  }\n  return newState;\n}\n","import { AssignmentState } from '../AssignmentsContext';\nimport { SetActiveAction } from '../AssignmentsReducer';\n\nexport default function setActiveAssignment(\n  state: AssignmentState,\n  action: SetActiveAction,\n) {\n  let { id, axis } = action.payload;\n  const isActive = state.activated?.id === id;\n\n  return {\n    ...state,\n    activated: !isActive ? { id, axis: axis || null } : null,\n  };\n}\n","import {\n  AssignmentDimension,\n  AssignmentState,\n  Axis,\n} from '../AssignmentsContext';\nimport { ToggleAction } from '../AssignmentsReducer';\n\nimport { removeAssignment } from './removeAssignment';\n\ninterface AddAction {\n  id: string;\n  atomID: string;\n  axis: Axis;\n  dimension: AssignmentDimension;\n}\n\nfunction addAssignment(state: AssignmentState, action: AddAction) {\n  const { id, atomID, axis, dimension } = action;\n\n  const assignment = state.assignments?.[id] || null;\n  const axisAssignments = assignment?.[axis] || null;\n\n  // avoid duplicates\n  if (axisAssignments) {\n    if (!axisAssignments.includes(id)) {\n      axisAssignments.push(atomID);\n    }\n  } else {\n    const otherAxis = axis === 'x' ? 'y' : 'x';\n    state.assignments = {\n      ...state.assignments,\n      [id]: {\n        ...state.assignments[id],\n        [axis]: [atomID],\n        ...(dimension === '2D' && {\n          [otherAxis]: assignment?.[otherAxis] ? assignment[otherAxis] : [],\n        }),\n      },\n    };\n  }\n}\n\nexport default function ToggleAssignments(\n  state: AssignmentState,\n  action: ToggleAction,\n) {\n  const newState = {\n    ...state,\n  };\n  const { id, atomIDs: atomsKeys, dimension } = action.payload;\n  const axis = state.activated?.axis;\n  if (axis) {\n    const atomIDs = state.assignments?.[id]?.[axis] || [];\n\n    for (const atomID of atomsKeys) {\n      if (!atomIDs.includes(id)) {\n        addAssignment(newState, { axis, id, atomID, dimension });\n      } else {\n        removeAssignment(newState, { atomID, axis, id });\n      }\n    }\n  }\n  return newState;\n}\n","import { Data1D } from '../../data/types/data1d';\nimport { Data2D } from '../../data/types/data2d';\nimport { ActionType } from '../reducer/types/Types';\n\nimport {\n  AssignmentDimension,\n  AssignmentState,\n  Axis,\n} from './AssignmentsContext';\nimport initAssignment from './actions/initAssignment';\nimport removeAssignments from './actions/removeAssignment';\nimport setActiveAssignment from './actions/setActiveAssignment';\nimport toggleAssignment from './actions/toggleAssignment';\n\nexport type InitiateAction = ActionType<\n  'INITIATE_ASSIGNMENTS',\n  { spectra: (Data1D | Data2D)[] }\n>;\nexport type ToggleAction = ActionType<\n  'TOGGLE',\n  { atomIDs: string[]; id: string; dimension: AssignmentDimension }\n>;\nexport type AddAction = ActionType<\n  'ADD',\n  { id: string; atomID: string; axis: Axis }\n>;\nexport type RemoveAction = ActionType<\n  'REMOVE',\n  { ids: string[]; atomID?: string; axis: Axis }\n>;\nexport type SetActiveAction = ActionType<\n  'SET_ACTIVE',\n  { id: string; axis: Axis }\n>;\nexport type ShowAction = ActionType<'SHOW', { id: string; axis?: Axis }>;\n\nexport type AssignmentsActions =\n  | InitiateAction\n  | ToggleAction\n  | AddAction\n  | RemoveAction\n  | SetActiveAction\n  | ShowAction\n  | ActionType<'HIDE'>;\n\nexport default function assignmentReducer(\n  state: AssignmentState,\n  action: AssignmentsActions,\n): AssignmentState {\n  switch (action.type) {\n    case 'INITIATE_ASSIGNMENTS': {\n      return initAssignment(action);\n    }\n    case 'REMOVE': {\n      const { axis, ids, atomID } = action.payload;\n      return removeAssignments(state, { axis, ids, atomID });\n    }\n    case 'TOGGLE': {\n      return toggleAssignment(state, action);\n    }\n    case 'SET_ACTIVE': {\n      return setActiveAssignment(state, action);\n    }\n    case 'SHOW': {\n      const { id, axis } = action.payload;\n      return {\n        ...state,\n        highlighted: {\n          id,\n          axis: axis || null,\n        },\n      };\n    }\n    case 'HIDE': {\n      return {\n        ...state,\n        highlighted: null,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { useReducer, useMemo, useEffect, Reducer } from 'react';\n\nimport {\n  AssignmentContext,\n  assignmentState,\n  AssignmentState,\n  assignmentContext,\n} from './AssignmentsContext';\nimport assignmentReducer, { AssignmentsActions } from './AssignmentsReducer';\n\nexport function AssignmentProvider(props) {\n  const { spectraData: spectra } = props;\n  const [data, dispatch] = useReducer<\n    Reducer<AssignmentState, AssignmentsActions>\n  >(assignmentReducer, assignmentState);\n\n  const state = useMemo<AssignmentContext>(() => ({ data, dispatch }), [data]);\n\n  useEffect(() => {\n    if (spectra) {\n      dispatch({\n        type: 'INITIATE_ASSIGNMENTS',\n        payload: { spectra },\n      });\n    }\n  }, [spectra]);\n\n  return (\n    <assignmentContext.Provider value={state}>\n      {props.children}\n    </assignmentContext.Provider>\n  );\n}\n","export const docsBaseUrl = 'https://docs.nmrium.org';\n\nexport const helpList: Record<string, { text: string; url: string }> = {\n  zoomIn: {\n    text: 'Zoom Tool',\n    url: `${docsBaseUrl}/help/zoom-and-scale`,\n  },\n  peakPicking: {\n    text: 'peak picking tool',\n    url: `${docsBaseUrl}/help/peaks`,\n  },\n  integralPicking: {\n    text: 'integral tool',\n    url: `${docsBaseUrl}/help/integrations`,\n  },\n  fullScreen: {\n    text: 'Full Screen mode',\n    url: `${docsBaseUrl}/help/general`,\n  },\n  loadSpectrum: {\n    text: 'load spectrums',\n    url: `${docsBaseUrl}/help/loading-a-spectrum`,\n  },\n};\n","export default { version: 'git-e283960c6bf176c48436234b05daf78a4001d588' };\n","interface LogoProps {\n  width?: number;\n  height?: number;\n}\n\nexport default function Logo({ width = 100, height = 100 }: LogoProps) {\n  return (\n    <svg\n      style={{ width: width, height: height }}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 752.34 221.73\"\n    >\n      <path\n        fill=\"#ea580c\"\n        fillRule=\"evenodd\"\n        d=\"M.64,31.7A31.67,31.67,0,0,1,54.72,9.29l0,0A31.66,31.66,0,0,1,64,31.7V190a13.39,13.39,0,0,0,26.77,0V54a31.7,31.7,0,0,1,31.7-31.7V40.58A13.38,13.38,0,0,0,109.13,54V190a31.71,31.71,0,0,1-63.41,0V31.7a13.29,13.29,0,0,0-3.88-9.46l0,0A13.41,13.41,0,0,0,19,31.7V164.82H.64Z\"\n      />\n      <path\n        fill=\"#2b143e\"\n        fillRule=\"evenodd\"\n        d=\"M154.21,54v68.17a13.34,13.34,0,0,0,3.89,9.47h0A13.39,13.39,0,0,0,181,122.14V99.32h-.06a31.63,31.63,0,0,1,9.29-22.38l0,0a31.65,31.65,0,0,1,44.8,0l0,0a31.58,31.58,0,0,1,9.3,22.39V118H226V99.32a13.3,13.3,0,0,0-3.89-9.46h0a13.44,13.44,0,0,0-18.93,0l0,0a13.3,13.3,0,0,0-3.83,8.19v24.09a31.7,31.7,0,0,1-54.11,22.42v0a31.66,31.66,0,0,1-9.3-22.4V54Z\"\n      />\n      <path\n        fill=\"#2b143e\"\n        fillRule=\"evenodd\"\n        d=\"M729.19,96.34c-8.65,0-14.26,3.17-17.67,8-3.41-5.12-8.78-8-16-8-8.16,0-13.52,3.17-16.32,7.31v-5.6H661V159h18.28V124.62c0-7.19,3.41-11.46,9.5-11.46,5.85,0,8.78,3.9,8.78,10V159h18.27V124.62c0-7.19,3.42-11.46,9.51-11.46,5.85,0,8.77,3.9,8.77,10V159h18.28V121.57C752.34,106.33,743.2,96.34,729.19,96.34Z\"\n      />\n      <path\n        fill=\"#2b143e\"\n        fillRule=\"evenodd\"\n        d=\"M629.26,98.05v33.26c0,8.66-4.63,12.56-11.33,12.56-5.85,0-10.6-3.54-10.6-11.09V98.05H589.05v37.41c0,16.45,10.48,25.22,22.79,25.22,8,0,14.13-2.92,17.42-7.43V159h18.28V98.05Z\"\n      />\n      <rect fill=\"#2b143e\" x=\"558.22\" y=\"98.05\" width=\"18.28\" height=\"60.93\" />\n      <path\n        fill=\"#2b143e\"\n        fillRule=\"evenodd\"\n        d=\"M567.36,92.68a11,11,0,1,0-11-11A11.08,11.08,0,0,0,567.36,92.68Z\"\n      />\n      <path\n        fill=\"#ea580c\"\n        fillRule=\"evenodd\"\n        d=\"M478.77,159H498V116.57L525.66,159H549.2l-22.3-34.75c5.45-2.13,8.12-4.14,11.48-8.86a31.07,31.07,0,0,0,6.07-18.26V94.62c0-10.61-3.45-15.93-9.28-21.78S520.75,63.09,510,63.09H478.71l.06,95.89Zm33.1-50.27h-6.46v-.06H498V82.19h10.87c4.67,0,9.44,1.38,11.94,3.81a12.84,12.84,0,0,1,3.81,9.2C524.58,102.52,518.92,108.71,511.87,108.71Z\"\n      />\n      <polygon\n        fill=\"#ea580c\"\n        fillRule=\"evenodd\"\n        points=\"372.91 60.8 372.91 158.98 392.16 158.98 392.16 119.23 419.91 157.41 447.61 119.23 447.61 158.98 466.87 158.98 466.87 60.8 419.91 125.22 372.91 60.8\"\n      />\n      <polygon\n        fill=\"#ea580c\"\n        fillRule=\"evenodd\"\n        points=\"283.89 61.04 283.89 159.1 303.14 159.1 303.14 105.85 361.01 160.93 361.01 62.83 341.67 62.83 341.67 116.08 283.89 61.04\"\n      />\n    </svg>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nimport versionInfo from '../../versionInfo';\nimport CloseButton from '../elements/CloseButton';\nimport Logo from '../elements/Logo';\n\nconst styles = css`\n  display: flex;\n  flex-direction: column;\n  user-select:\n  button:focus {\n    outline: none;\n  }\n  .header {\n    height: 34px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    padding: 5px;\n\n    span {\n      color: #464646;\n      font-size: 15px;\n      flex: 1;\n      user-select: none;\n\n    }\n\n    button {\n      background-color: transparent;\n      border: none;\n      svg {\n        height: 16px;\n      }\n    }\n  }\n  .container {\n    width: 100%;\n    height: 100%;\n    padding: 20px;\n  }\n\n  .center-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  ul {\n    list-style-type: disc;\n    margin-left:20px;\n    }\n  span,li{\n    user-select: text;\n  }\n  span.title {\n    font-weight: bold;\n    color: #ea580c;\n  }\n  span.content {\n    color: #2b143e;\n    font-size: 14px;\n    text-align: left;\n  }\n\n  img {\n    width: 100px;\n  }\n\n  a {\n    color: #969696;\n  }\n\n  a:hover,\n  a:focus {\n    color: #00bcd4;\n  }\n\n  .separator {\n    border-bottom: 1px solid gray;\n    width: 15px;\n    height: 1px;\n    margin: 10px 0px;\n  }\n`;\n\ninterface AboutUsModalProps {\n  onClose?: () => null;\n}\n\nfunction AboutUsModal({ onClose = () => null }: AboutUsModalProps) {\n  return (\n    <div css={styles}>\n      <div className=\"header handle\">\n        <span>About NMRium</span>\n\n        <CloseButton onClick={onClose} />\n      </div>\n      <div className=\"container\">\n        <div className=\"center-container\">\n          <Logo width={160} height={50} />\n          Version <VersionInfo />\n          <span className=\"separator\" />\n          <a href=\"https://git.nmrium.org\" target=\"_blank\" rel=\"noreferrer\">\n            GitHub ( https://git.nmrium.org )\n          </a>\n        </div>\n        <div className=\"center-container\">\n          <span className=\"separator\" />\n        </div>\n\n        <span className=\"content\">\n          This project is developed by Zakodium Sàrl (Switzerland), the\n          University of Cologne (Germany), Johannes Gutenberg University Mainz\n          (Germany) and Universidad del Valle (Colombia).\n        </span>\n        <div className=\"center-container\">\n          <span className=\"separator\" />\n          <span className=\"title\">Funding is provided by</span>\n          <span className=\"separator\" />\n        </div>\n\n        <div className=\"content\">\n          <ul>\n            <li>\n              IDNMR grant, which part of the Scientific Library Services and\n              Information Systems (LIS) initiative of the DFG.\n            </li>\n            <li>Zakodium Sàrl (Switzerland).</li>\n            <li>Universidad del Valle (Cali, Colombia).</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutUsModal;\n\nfunction VersionInfo() {\n  const { version } = versionInfo;\n  if (version === 'HEAD') {\n    return <>HEAD</>;\n  } else if (version.startsWith('git-')) {\n    return (\n      <a\n        href={`https://github.com/cheminfo/nmrium/tree/${version.slice(4)}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        git-{version.slice(4, 14)}\n      </a>\n    );\n  } else {\n    return (\n      <a\n        href={`https://github.com/cheminfo/nmrium/tree/${version}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {version}\n      </a>\n    );\n  }\n}\n","import Label from '../../elements/Label';\nimport FormikInput from '../../elements/formik/FormikInput';\n\nfunction ControllersTabContent() {\n  return (\n    <>\n      <p className=\"section-header\">Spectra</p>\n      <Label\n        title=\"Transparency of Dimmed Spectra [ 0 - 1 ]\"\n        // style={{ label: styles.inputLabel, wrapper: styles.inputWrapper }}\n      >\n        <FormikInput\n          name=\"controllers.dimmedSpectraTransparency\"\n          checkValue={(value) => value >= 0 && value <= 1}\n          type=\"number\"\n        />\n      </Label>\n    </>\n  );\n}\n\nexport default ControllersTabContent;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, useMemo } from 'react';\nimport { FaPlus, FaTimes } from 'react-icons/fa';\n\nimport { NMRiumWorkspace } from '../../NMRium';\nimport Button from '../../elements/Button';\nimport FormikCheckBox from '../../elements/formik/FormikCheckBox';\nimport FormikInput from '../../elements/formik/FormikInput';\nimport Workspaces from '../../workspaces';\n\nconst style = {\n  addButton: css`\n    background-color: transparent;\n    border: 0;\n    outline: none;\n    margin-left: 5px;\n    svg {\n      font-size: 14px;\n      fill: green;\n    }\n  `,\n  table: {\n    width: '100%',\n  },\n  th: {\n    fontSize: '12px',\n  },\n  input: {\n    input: { width: '100%' },\n  },\n  labelCol: {\n    width: '30%',\n  },\n  serialCol: {\n    width: '5%',\n  },\n};\n\ninterface DatabasesTabContentProps {\n  currentWorkspace: NMRiumWorkspace;\n}\n\nfunction DatabasesTabContent({ currentWorkspace }: DatabasesTabContentProps) {\n  const { values, setFieldValue } = useFormikContext();\n\n  const databases = useMemo(() => lodashGet(values, 'databases', []), [values]);\n\n  const deleteHandler = useCallback(\n    (index: number) => {\n      const _database = databases.slice();\n      _database.splice(index, 1);\n      setFieldValue('databases', _database);\n    },\n    [databases, setFieldValue],\n  );\n  const addNewDatabaseHandler = useCallback(() => {\n    const newDatabase = {\n      label: '',\n      url: '',\n      enabled: true,\n    };\n    setFieldValue('databases', [...databases, newDatabase]);\n  }, [databases, setFieldValue]);\n  const resetDatabaseHandler = useCallback(() => {\n    const database =\n      Workspaces?.[currentWorkspace]?.databases || Workspaces.default.databases;\n\n    setFieldValue('databases', database);\n  }, [currentWorkspace, setFieldValue]);\n\n  return (\n    <>\n      <div className=\"section-header\" style={{ display: 'flex' }}>\n        <p style={{ flex: 1 }}>Databases</p>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Button.Danger\n            fill=\"clear\"\n            size=\"xSmall\"\n            onClick={resetDatabaseHandler}\n            style={{ margin: '0 5px' }}\n          >\n            Reset Databases\n          </Button.Danger>\n          <Button.Done\n            fill=\"outline\"\n            size=\"xSmall\"\n            onClick={addNewDatabaseHandler}\n          >\n            Add Database\n          </Button.Done>\n        </div>\n      </div>\n      <div>\n        <table style={style.table}>\n          <thead>\n            <tr>\n              <th style={style.th}>#</th>\n              <th style={style.th}>Label </th>\n              <th style={style.th}>URL</th>\n              <th style={style.th}>Enabled</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            {databases?.map((item, index) => {\n              const num = index + 1;\n              return (\n                // eslint-disable-next-line react/no-array-index-key\n                <tr key={`${index}`} style={{ height: '33px' }}>\n                  <td style={style.serialCol}>\n                    <span>{num}</span>{' '}\n                  </td>\n                  <td style={style.labelCol}>\n                    <FormikInput\n                      style={style.input}\n                      name={`databases.${index}.label`}\n                      checkErrorAfterInputTouched={false}\n                    />\n                  </td>\n                  <td>\n                    <FormikInput\n                      style={style.input}\n                      name={`databases.${index}.url`}\n                      checkErrorAfterInputTouched={false}\n                    />\n                  </td>\n                  <td>\n                    <FormikCheckBox\n                      style={{\n                        container: {\n                          display: 'block',\n                          margin: '0 auto',\n                          width: 'fit-content',\n                        },\n                      }}\n                      className=\"checkbox-element\"\n                      name={`databases.${index}.enabled`}\n                    />\n                  </td>\n                  <td>\n                    <div\n                      style={{\n                        display: 'flex',\n                        height: '100%',\n                      }}\n                    >\n                      <Button.Danger\n                        style={{ fontSize: '14px' }}\n                        fill=\"clear\"\n                        onClick={() => deleteHandler(index)}\n                      >\n                        <FaTimes />\n                      </Button.Danger>\n\n                      {databases.length === index + 1 && (\n                        <Button.Done\n                          fill=\"clear\"\n                          style={{ fontSize: '14px' }}\n                          onClick={addNewDatabaseHandler}\n                        >\n                          <FaPlus />\n                        </Button.Done>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default DatabasesTabContent;\n","import lodashGet from 'lodash/get';\nimport { useMemo } from 'react';\n\nimport { NMRiumPreferences } from '../../NMRium';\nimport ReactTable from '../../elements/ReactTable/ReactTable';\nimport { CustomColumn } from '../../elements/ReactTable/utility/addCustomColumn';\nimport FormikCheckBox from '../../elements/formik/FormikCheckBox';\n\ninterface ListItem {\n  label: string;\n  name: string;\n  hideOpenOption?: boolean;\n}\nconst LIST: ListItem[] = [\n  {\n    label: 'Spectra selection panel',\n    name: 'panels.spectraPanel',\n  },\n  {\n    label: 'Spectra information Panel',\n    name: 'panels.informationPanel',\n  },\n  {\n    label: 'Peaks and peak picking',\n    name: 'panels.peaksPanel',\n  },\n  {\n    label: 'Integration and integrals',\n    name: 'panels.integralsPanel',\n  },\n  {\n    label: '1D ranges peak picking',\n    name: 'panels.rangesPanel',\n  },\n  {\n    label: 'Chemical structure panel',\n    name: 'panels.structuresPanel',\n  },\n  {\n    label: 'Filters Panel',\n    name: 'panels.filtersPanel',\n  },\n  {\n    label: '2D zones peak picking',\n    name: 'panels.zonesPanel',\n  },\n  {\n    label: 'Assignment summary Panel',\n    name: 'panels.summaryPanel',\n  },\n  {\n    label: 'Multiple Spectra Analysis Panel',\n    name: 'panels.multipleSpectraAnalysisPanel',\n  },\n  {\n    label: 'Databases Panel',\n    name: 'panels.databasePanel',\n  },\n  {\n    label: 'Prediction Panel',\n    name: 'panels.predictionPanel',\n  },\n  {\n    label: 'Experimental Features',\n    name: 'general.experimentalFeatures',\n    hideOpenOption: true,\n  },\n];\n\ninterface DisplayTabContentProps {\n  preferences: NMRiumPreferences;\n}\n\nfunction CheckBoxCell(props) {\n  return (\n    <FormikCheckBox\n      style={{\n        container: { display: 'block', margin: '0 auto', width: 'fit-content' },\n      }}\n      key={props.name}\n      className=\"checkbox-element\"\n      name={props.name}\n    />\n  );\n}\n\nfunction DisplayTabContent({ preferences }: DisplayTabContentProps) {\n  const COLUMNS: CustomColumn[] = useMemo(\n    () => [\n      {\n        index: 1,\n        Header: '#',\n        Cell: ({ row }) => row.index + 1,\n      },\n      {\n        index: 1,\n        Header: 'Feature',\n        accessor: 'label',\n        style: { width: '60%' },\n      },\n      {\n        index: 2,\n        Header: 'Active',\n        Cell: ({ row }) => (\n          <CheckBoxCell name={`display.${row.original.name}.display`} />\n        ),\n      },\n      {\n        index: 3,\n        Header: 'Open on load',\n        Cell: ({ row }) =>\n          !row.original.hideOpenOption ? (\n            <CheckBoxCell name={`display.${row.original.name}.open`} />\n          ) : (\n            <div />\n          ),\n      },\n    ],\n    [],\n  );\n\n  const data = useMemo(() => {\n    return LIST.filter(\n      (item) => lodashGet(preferences, `${item.name}.hidden`) !== true,\n    );\n  }, [preferences]);\n\n  return (\n    <div style={{ width: '100%', overflow: 'hidden' }}>\n      <ReactTable columns={COLUMNS} data={data} />\n    </div>\n  );\n}\n\nexport default DisplayTabContent;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { Fragment, useCallback, useMemo } from 'react';\nimport { FaPlus, FaTimes } from 'react-icons/fa';\n\nimport generateID from '../../../data/utilities/generateID';\nimport Button from '../../elements/Button';\nimport FormikInput from '../../elements/formik/FormikInput';\n\nconst styles = css`\n  .counter-col {\n    width: 30px;\n  }\n  .nucleus-label-col {\n    display: flex;\n    justify-content: center;\n    width: 80px;\n  }\n\n  .input {\n    width: 100% !important;\n    margin: 0px !important;\n  }\n\n  .nucleus-format-input-col {\n    text-align: center;\n    width: 100px;\n  }\n\n  th {\n    font-size: 11px;\n    font-weight: 600;\n  }\n  .operation-container {\n    display: flex;\n  }\n  .add {\n    background-color: transparent;\n    border: 0;\n    outline: none;\n    svg {\n      font-szie: 14px;\n      fill: green;\n    }\n  }\n`;\n\nfunction FormattingTabContent() {\n  const { values, setFieldValue } = useFormikContext();\n  const nuclei = useMemo(\n    () => lodashGet(values, 'formatting.nuclei', {}),\n    [values],\n  );\n\n  const deleteHandler = useCallback(\n    (key: string) => {\n      let _nuclei = {};\n      for (const nucleus in nuclei) {\n        if (nucleus !== key) {\n          _nuclei[nucleus] = nuclei[nucleus];\n        }\n      }\n      setFieldValue('formatting.nuclei', _nuclei);\n    },\n    [nuclei, setFieldValue],\n  );\n\n  const addNewNucleusFormatHandler = useCallback(() => {\n    const newFormat = {\n      name: '',\n      ppm: '0.00',\n      hz: '0.00',\n    };\n    const key = generateID();\n    const newNuclei = { ...nuclei, [key]: newFormat };\n    setFieldValue('formatting.nuclei', newNuclei);\n  }, [nuclei, setFieldValue]);\n\n  const nucleiList = Object.keys(nuclei);\n\n  return (\n    <Fragment>\n      <p className=\"section-header\">Nuclei Formatting</p>\n      <div css={styles}>\n        <table>\n          <thead>\n            <tr>\n              <th className=\"counter-col\">#</th>\n              <th className=\"nucleus-label-col\">Nucleus </th>\n              <th className=\"nucleus-format-input-col\">δ (ppm)</th>\n              <th className=\"nucleus-format-input-col\">Coupling (Hz)</th>\n              <th className=\"nucleus-format-input-col\" />\n            </tr>\n          </thead>\n          <tbody>\n            {nucleiList?.map((key, index) => {\n              const num = index + 1;\n              return (\n                <tr key={`${key}`}>\n                  <td className=\"counter-col\">\n                    <span>{num} - </span>{' '}\n                  </td>\n                  <td className=\"nucleus-label-col\">\n                    <FormikInput\n                      name={`formatting.nuclei.${key}.name`}\n                      className=\"input\"\n                      checkErrorAfterInputTouched={false}\n                    />\n                  </td>\n                  <td className=\"nucleus-format-input-col\">\n                    <FormikInput\n                      name={`formatting.nuclei.${key}.ppm`}\n                      className=\"input\"\n                    />\n                  </td>\n                  <td className=\"nucleus-format-input-col\">\n                    <FormikInput\n                      name={`formatting.nuclei.${key}.hz`}\n                      className=\"input\"\n                    />\n                  </td>\n                  <td className=\"operation-container\">\n                    <Button.Danger\n                      style={{ fontSize: '14px' }}\n                      fill=\"clear\"\n                      onClick={() => deleteHandler(key)}\n                    >\n                      <FaTimes />\n                    </Button.Danger>\n                    {nucleiList.length === index + 1 && (\n                      <Button.Done\n                        fill=\"clear\"\n                        style={{ fontSize: '14px' }}\n                        onClick={addNewNucleusFormatHandler}\n                      >\n                        <FaPlus />\n                      </Button.Done>\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default FormattingTabContent;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useState } from 'react';\n\nimport workspaces from '../../workspaces';\n\nconst styles = css`\n  .container {\n    display: flex;\n    span {\n      padding: 5px !important;\n    }\n    span {\n      flex: 1;\n      text-align: left !important;\n    }\n  }\n\n  .new-container {\n    background-color: #f6f6f6;\n    display: flex;\n    padding: 0.3em;\n\n    input {\n      padding: 0.5em;\n      color: black;\n      outline: none;\n      background-color: transparent !important;\n    }\n  }\n\n  .delete-button:hover {\n    color: white;\n  }\n\n  .save-button:hover {\n    color: green;\n  }\n  .delete-button,\n  .save-button {\n    padding: 5px;\n  }\n`;\n\nconst WorkspaceItem = ({ item, onSave, onDelete }) => {\n  const [name, setName] = useState<string>('');\n  const addWorkspaceHandler = useCallback(\n    (e) => {\n      e.stopPropagation();\n      setName('');\n      onSave(name);\n    },\n    [name, onSave],\n  );\n\n  const deleteWorkspaceHandler = useCallback(\n    (e) => {\n      e.stopPropagation();\n      onDelete(item.key);\n    },\n    [item.key, onDelete],\n  );\n\n  const onTextChange = useCallback((e) => {\n    setName(e.target.value);\n  }, []);\n\n  return (\n    <div css={styles}>\n      {item.key === 'new' ? (\n        <div className=\"new-container\">\n          <input\n            value={name}\n            placeholder=\"Custom workspace\"\n            onClick={(e) => e.stopPropagation()}\n            onChange={onTextChange}\n          />\n          <button\n            type=\"button\"\n            className=\"save-button\"\n            onClick={addWorkspaceHandler}\n            disabled={!name}\n          >\n            save\n          </button>\n        </div>\n      ) : (\n        <div className=\"container\">\n          <span>{item.label}</span>\n          {!workspaces[item.key] && (\n            <button\n              type=\"button\"\n              className=\"delete-button\"\n              onClick={deleteWorkspaceHandler}\n            >\n              Delete\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WorkspaceItem;\n","import * as Yup from 'yup';\n\nimport { Workspace } from '../../workspaces/Workspace';\n\nconst formattingElementValidation = (obj: Workspace) =>\n  Object.keys(obj.formatting.nuclei).reduce((validate, key) => {\n    validate[key] = Yup.object().shape({\n      name: Yup.string().trim().required('Nucleus is a required field'),\n      ppm: Yup.string().trim().required('PPM format is a required field'),\n      hz: Yup.string().trim().required('Hz format  is a required field'),\n    });\n    return validate;\n  }, {});\n\nconst formattingValidation = (obj: Workspace) =>\n  Yup.object().shape<any>({\n    nuclei: Yup.object()\n      .shape(formattingElementValidation(obj))\n      .test(\n        'Unique',\n        'Nuclei need te be unique',\n        function check(nuclei: Record<string, any>) {\n          let nucleusFrequencies: Record<\n            string,\n            { value: number; fields: string[] }\n          > = {};\n          for (const key of Object.keys(nuclei)) {\n            const _key = nuclei[key].name?.toLowerCase() || '';\n            if (_key) {\n              if (nucleusFrequencies[_key]) {\n                ++nucleusFrequencies[_key].value;\n                nucleusFrequencies[_key].fields.push(key);\n              } else {\n                nucleusFrequencies[_key] = { value: 1, fields: [key] };\n              }\n            }\n          }\n\n          const errors = Object.keys(nucleusFrequencies).reduce<\n            Yup.ValidationError[]\n          >((errorList, key) => {\n            const { value, fields } = nucleusFrequencies[key];\n            if (value > 1) {\n              for (let field of fields) {\n                errorList.push(\n                  new Yup.ValidationError(\n                    `${key} nucleus must te be unique`,\n                    nuclei[key].name,\n                    `${this.path}.${field}.name`,\n                  ),\n                );\n              }\n            }\n            return errorList;\n          }, []);\n\n          return new Yup.ValidationError(errors);\n        },\n      ),\n  });\n\nconst databasesValidation = Yup.array().of(\n  Yup.object().shape({\n    label: Yup.string().trim().required('Label is a required field'),\n    url: Yup.string().trim().url().required('URL is a required field'),\n  }),\n);\n\nexport const validation = Yup.lazy((obj: Workspace) =>\n  Yup.object().shape({\n    formatting: formattingValidation(obj),\n    databases: databasesValidation,\n  }),\n);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\n\nimport {\n  usePreferences,\n  useWorkspacesList,\n} from '../../context/PreferencesContext';\nimport ActionButtons from '../../elements/ActionButtons';\nimport CloseButton from '../../elements/CloseButton';\nimport Tab from '../../elements/Tab/Tab';\nimport Tabs, { PositionsEnum } from '../../elements/Tab/Tabs';\nimport DropDownButton, {\n  DropDownListItem,\n} from '../../elements/dropDownButton/DropDownButton';\nimport FormikForm from '../../elements/formik/FormikForm';\nimport { useAlert } from '../../elements/popup/Alert';\nimport { ModalStyles } from '../ModalStyle';\n\nimport ControllersTabContent from './ControllersTabContent';\nimport DatabasesTabContent from './DatabasesTabContent';\nimport DisplayTabContent from './DisplayTabContent';\nimport FormattingTabContent from './FormattingTabContent';\nimport WorkspaceItem from './WorkspaceItem';\nimport { validation } from './settingsValidation';\n\nconst styles = css`\n  .main-content {\n    width: 100%;\n    flex: 1;\n    overflow: auto;\n    border: none;\n  }\n\n  .tab-content {\n    width: 100%;\n  }\n\n  .section-header {\n    font-size: 13px;\n    color: #2ca8ff;\n    margin-bottom: 10px;\n    border-bottom: 0.55px solid #f9f9f9;\n    padding: 6px 2px;\n  }\n\n  .label {\n    font-size: 12px;\n    font-weight: bold;\n    margin-right: 10px;\n  }\n\n  .input {\n    font-size: 14px;\n    border-radius: 5px;\n    border: 1px solid #cccccc;\n    padding: 5px;\n    width: 100px;\n    margin-right: 10px;\n    height: initial !important;\n  }\n\n  .close-bt {\n    border: none;\n    color: red;\n    background-color: transparent;\n    outline: none;\n    position: absolute;\n    right: 10px;\n    top: 2px;\n    width: 30px;\n    height: 30px;\n  }\n\n  .checkbox-label {\n    min-width: 300px;\n    display: inline-block;\n  }\n\n  .help-checkbox-element {\n    .checkbox-label {\n      width: 260px;\n    }\n  }\n\n  .workspace-container {\n    display: flex;\n    background-color: #f4f4f4;\n    align-items: center;\n    cursor: default;\n    padding: 0.5em;\n    .dropdown {\n      padding: 0.4em 1em;\n    }\n    & .label {\n      font-size: 0.8em;\n    }\n  }\n`;\n\ninterface GeneralSettingsProps {\n  onClose?: () => void;\n}\n\nfunction GeneralSettings({ onClose }: GeneralSettingsProps) {\n  const [activeTab, setActiveTab] = useState('controllers');\n  const { dispatch, ...preferences } = usePreferences();\n  const alert = useAlert();\n  const refForm = useRef<any>();\n  const workspaces = useWorkspacesList();\n\n  const workspacesList = useMemo(() => {\n    return workspaces.concat([\n      {\n        key: 'new',\n        label: 'Custom workspace',\n      },\n    ]);\n  }, [workspaces]);\n\n  const handleSave = useCallback(() => {\n    refForm.current.submitForm();\n  }, []);\n  const handleReset = useCallback(() => {\n    dispatch({ type: 'RESET_PREFERENCES' });\n    alert.success('Settings saved successfully');\n    onClose?.();\n  }, [alert, dispatch, onClose]);\n\n  const submitHandler = useCallback(\n    (values) => {\n      dispatch({ type: 'SET_PREFERENCES', payload: values });\n      alert.success('Settings saved successfully');\n\n      onClose?.();\n    },\n    [alert, dispatch, onClose],\n  );\n\n  const tabChangeHandler = useCallback((tab) => {\n    setActiveTab(tab.tabid);\n  }, []);\n\n  const addWorkSpaceHandler = useCallback(\n    (name) => {\n      dispatch({\n        type: 'ADD_WORKSPACE',\n        payload: {\n          workspace: name,\n          data: refForm.current.values,\n        },\n      });\n    },\n    [dispatch],\n  );\n  const deleteWorkSpaceHandler = useCallback(\n    (key) => {\n      dispatch({\n        type: 'REMOVE_WORKSPACE',\n        payload: {\n          workspace: key,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const ChangeWorkspaceHandler = useCallback(\n    (option: DropDownListItem) => {\n      dispatch({\n        type: 'SET_WORKSPACE',\n        payload: {\n          workspace: option.key,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const renderItem = useCallback(\n    (item) => {\n      return (\n        <WorkspaceItem\n          item={item}\n          onSave={addWorkSpaceHandler}\n          onDelete={deleteWorkSpaceHandler}\n        />\n      );\n    },\n    [addWorkSpaceHandler, deleteWorkSpaceHandler],\n  );\n\n  return (\n    <div css={[ModalStyles, styles]}>\n      <div className=\"header handle\">\n        <span>General Settings</span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"workspace-container\">\n        <span className=\"label\">Workspace : </span>\n\n        <DropDownButton\n          data={workspacesList}\n          renderItem={renderItem}\n          selectedKey={preferences?.workspace.current}\n          onSelect={ChangeWorkspaceHandler}\n        />\n      </div>\n      <div className=\"main-content\">\n        <FormikForm\n          key={JSON.stringify(preferences.current)}\n          ref={refForm}\n          initialValues={preferences.current}\n          validationSchema={validation}\n          onSubmit={submitHandler}\n        >\n          <Tabs\n            position={PositionsEnum.LEFT}\n            activeTab={activeTab}\n            onClick={tabChangeHandler}\n          >\n            <Tab tablabel=\"Controllers\" tabid=\"controllers\">\n              <div className=\"inner-content\">\n                <ControllersTabContent />\n              </div>\n            </Tab>\n\n            <Tab tablabel=\"Formatting\" tabid=\"formatting\">\n              <div className=\"inner-content\">\n                <FormattingTabContent />\n              </div>\n            </Tab>\n\n            <Tab tablabel=\"Display\" tabid=\"display\">\n              <div className=\"inner-content\">\n                <DisplayTabContent preferences={preferences.current.display} />\n              </div>\n            </Tab>\n\n            <Tab tablabel=\"Databases\" tabid=\"databases\">\n              <div className=\"inner-content\">\n                <DatabasesTabContent\n                  currentWorkspace={preferences.workspace.current}\n                />\n              </div>\n            </Tab>\n          </Tabs>\n        </FormikForm>\n      </div>\n      <div className=\"footer-container\">\n        <ActionButtons\n          style={{ flexDirection: 'row-reverse', margin: 0 }}\n          onDone={handleSave}\n          doneLabel=\"Save\"\n          onCancel={handleReset}\n          cancelLabel=\"Reset\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default GeneralSettings;\n","import { CSSProperties, useCallback, useRef } from 'react';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport Button from '../elements/Button';\nimport CheckBox from '../elements/CheckBox';\nimport NumberInput from '../elements/NumberInput';\nimport { AUTO_PEAK_PICKING } from '../reducer/types/Types';\n\nconst styles: Record<\n  'container' | 'input' | 'inputContainer' | 'label',\n  CSSProperties\n> = {\n  container: {\n    height: '100%',\n    display: 'flex',\n    fontSize: '12px',\n    alignItems: 'center',\n  },\n  input: {\n    width: '50px',\n  },\n  inputContainer: {\n    flex: '2',\n  },\n  label: {\n    flex: '5',\n  },\n};\n\nfunction AutoPeakPickingOptionPanel() {\n  const dispatch = useDispatch();\n  const minMaxRatioRef = useRef<any>();\n  const maxNumberOfPeaksRef = useRef<any>();\n  const noiseFactor = useRef<any>();\n  const lookNegativeRef = useRef<any>();\n\n  const handleApplyFilter = useCallback(() => {\n    dispatch({\n      type: AUTO_PEAK_PICKING,\n      options: {\n        maxNumberOfPeaks: maxNumberOfPeaksRef.current.value,\n        minMaxRatio: minMaxRatioRef.current.value,\n        noiseFactor: noiseFactor.current.value,\n        lookNegative: lookNegativeRef.current.checked,\n      },\n    });\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <NumberInput\n        ref={maxNumberOfPeaksRef}\n        label=\"Max Number Of Peaks:\"\n        name=\"maxNumberOfPeaks\"\n        style={{\n          input: styles.input,\n          inputContainer: styles.inputContainer,\n          label: styles.label,\n        }}\n        defaultValue={50}\n      />\n      <NumberInput\n        ref={noiseFactor}\n        label=\"Noise factor\"\n        name=\"noiseFactor\"\n        style={{\n          input: styles.input,\n          inputContainer: styles.inputContainer,\n          label: styles.label,\n        }}\n        defaultValue={3}\n      />\n      <NumberInput\n        ref={minMaxRatioRef}\n        label=\"Min Max Ratio:\"\n        name=\"minMaxRatio\"\n        style={{\n          input: styles.input,\n          inputContainer: styles.inputContainer,\n          label: styles.label,\n        }}\n        defaultValue={0.1}\n        step=\"0.01\"\n      />\n\n      <div style={{ justifyItems: 'baseline', marginRight: '3px' }}>\n        <label\n          style={{ marginRight: '2px', lineHeight: 2, userSelect: 'none' }}\n          htmlFor=\"lookNegative\"\n        >\n          Detect Negative:\n        </label>\n        <CheckBox name=\"lookNegative\" ref={lookNegativeRef} />\n      </div>\n      <Button.Done onClick={handleApplyFilter} style={{ margin: '0 10px' }}>\n        Apply\n      </Button.Done>\n    </div>\n  );\n}\n\nexport default AutoPeakPickingOptionPanel;\n","import { useCallback, useRef, useState, CSSProperties, useMemo } from 'react';\nimport * as Yup from 'yup';\n\nimport { baselineAlgorithms } from '../../data/data1d/filter1d/baselineCorrection';\nimport { useDispatch } from '../context/DispatchContext';\nimport ActionButtons from '../elements/ActionButtons';\nimport Label from '../elements/Label';\nimport Select from '../elements/Select';\nimport FormikForm from '../elements/formik/FormikForm';\nimport FormikInput from '../elements/formik/FormikInput';\nimport {\n  RESET_SELECTED_TOOL,\n  APPLY_BASE_LINE_CORRECTION_FILTER,\n} from '../reducer/types/Types';\n\nconst styles: Record<'container' | 'label', CSSProperties> = {\n  container: {\n    padding: '5px',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  label: {\n    lineHeight: 2,\n    userSelect: 'none',\n  },\n};\n\nfunction BaseLineCorrectionPanel() {\n  const dispatch = useDispatch();\n  const formRef = useRef<any>();\n  const algorithmRef = useRef<any>();\n\n  const [algorithm, setAlgorithm] = useState('polynomial');\n\n  const handleApplyFilter = useCallback(\n    (values) => {\n      let options = {};\n      switch (algorithm) {\n        case 'airpls':\n          options = {\n            algorithm: algorithmRef.current.value,\n            ...values,\n          };\n          break;\n        case 'polynomial':\n          options = {\n            algorithm: algorithmRef.current.value,\n            ...values,\n          };\n          break;\n        default:\n          break;\n      }\n      dispatch({\n        type: APPLY_BASE_LINE_CORRECTION_FILTER,\n        options,\n      });\n    },\n    [algorithm, dispatch],\n  );\n\n  const handleCancelFilter = useCallback(() => {\n    dispatch({\n      type: RESET_SELECTED_TOOL,\n    });\n  }, [dispatch]);\n\n  const getAlgorithmsList = useCallback(() => {\n    return Object.keys(baselineAlgorithms).map((val) => {\n      return { key: val, label: baselineAlgorithms[val], value: val };\n    });\n  }, []);\n\n  const changeAlgorithmHandler = useCallback((val) => {\n    setAlgorithm(val);\n  }, []);\n\n  const formData = useMemo(() => {\n    switch (algorithm) {\n      case 'airpls': {\n        const validation = Yup.object().shape({\n          maxIterations: Yup.number().integer().min(1).required(),\n          tolerance: Yup.number().moreThan(0).required(),\n        });\n        return {\n          validation,\n          initialValue: { maxIterations: 100, tolerance: 0.001 },\n        };\n      }\n      case 'autoPolynomial':\n      case 'polynomial': {\n        const validation = Yup.object().shape({\n          degree: Yup.number().integer().min(1).max(6).required(),\n        });\n\n        return { validation, initialValue: { degree: 3 } };\n      }\n      default:\n        return { validation: {}, initialValue: {} };\n    }\n  }, [algorithm]);\n\n  return (\n    <div style={styles.container}>\n      <span style={styles.label}>Algorithm: </span>\n      <Select\n        ref={algorithmRef}\n        data={getAlgorithmsList()}\n        style={{ marginLeft: 10, marginRight: 10 }}\n        onChange={changeAlgorithmHandler}\n        defaultValue=\"polynomial\"\n      />\n\n      <FormikForm\n        ref={formRef}\n        onSubmit={handleApplyFilter}\n        key={JSON.stringify(formData.initialValue)}\n        initialValues={formData.initialValue}\n        validationSchema={formData.validation}\n      >\n        {algorithm && algorithm === 'airpls' && (\n          <div style={{ display: 'flex' }}>\n            <Label title=\"maxIterations:\">\n              <FormikInput type=\"number\" name=\"maxIterations\" />\n            </Label>\n            <Label title=\"tolerance:\" style={{ label: { padding: '0 5px' } }}>\n              <FormikInput type=\"number\" name=\"tolerance\" />\n            </Label>\n          </div>\n        )}\n\n        {algorithm && ['autoPolynomial', 'polynomial'].includes(algorithm) && (\n          <Label title=\"degree [ 1 - 6 ]:\">\n            <FormikInput\n              type=\"number\"\n              name=\"degree\"\n              min={1}\n              max={6}\n              style={{ inputWrapper: { height: '100%' } }}\n            />\n          </Label>\n        )}\n      </FormikForm>\n\n      <ActionButtons\n        onDone={() => formRef.current.submitForm()}\n        onCancel={handleCancelFilter}\n      />\n    </div>\n  );\n}\n\nexport default BaseLineCorrectionPanel;\n","import {\n  CSSProperties,\n  forwardRef,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n} from 'react';\n\nconst styles: Record<'container' | 'label', CSSProperties> = {\n  container: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0.55px solid #c7c7c7',\n    borderRadius: '5px',\n    userSelect: 'none',\n    backgroundColor: '#18ce0f14',\n    fontSize: '10px',\n    color: '#00801d',\n    margin: '0px 5px',\n    cursor: 'ew-resize',\n  },\n  label: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    maxWidth: '100%',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n  },\n};\n\ninterface InputRangeProps {\n  name: string;\n  value?: number;\n  onChange: (element: any) => void;\n  label?: string;\n  style?: CSSProperties;\n  className?: string;\n}\n\n// TODO: remove this hacky ref usage.\nfunction InputRange(props: InputRangeProps, ref: any) {\n  const { name, value = 0, onChange, label, style, className } = props;\n  const previousPosition = useRef(0);\n  const valueRef = useRef(value);\n\n  useImperativeHandle(ref, () => ({\n    setValue: (value) => {\n      valueRef.current = value;\n    },\n  }));\n\n  const mouseDownCallback = useCallback(\n    (event) => {\n      function mouseMoveCallback(event) {\n        let diff = event.clientX - previousPosition.current;\n        previousPosition.current = event.clientX;\n        if (event.buttons === 1) {\n          const step = diff / (event.shiftKey ? 10 : 1);\n          valueRef.current = valueRef.current + step;\n          onChange({\n            value: valueRef.current,\n            name,\n          });\n        }\n      }\n\n      function mouseUpCallback() {\n        window.removeEventListener('mousemove', mouseMoveCallback);\n        window.removeEventListener('mouseup', mouseUpCallback);\n      }\n\n      previousPosition.current = event.clientX;\n      window.addEventListener('mousemove', mouseMoveCallback);\n      window.addEventListener('mouseup', mouseUpCallback);\n    },\n    [name, onChange],\n  );\n\n  return (\n    <div\n      style={{ ...styles.container, ...style }}\n      className={className}\n      onMouseDown={mouseDownCallback}\n    >\n      <span style={styles.label}>{label}</span>\n    </div>\n  );\n}\n\nexport default forwardRef(InputRange);\n","import {\n  useMemo,\n  CSSProperties,\n  memo,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport * as Filters from '../../data/Filters';\nimport { Filter } from '../../data/FiltersManager';\nimport { Data1D, Datum1D } from '../../data/types/data1d';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport ActionButtons from '../elements/ActionButtons';\nimport Input from '../elements/Input';\nimport InputRange from '../elements/InputRange';\nimport Label from '../elements/Label';\nimport Select from '../elements/Select';\nimport useSpectrum from '../hooks/useSpectrum';\nimport {\n  APPLY_MANUAL_PHASE_CORRECTION_FILTER,\n  APPLY_AUTO_PHASE_CORRECTION_FILTER,\n  CALCULATE_MANUAL_PHASE_CORRECTION_FILTER,\n  RESET_SELECTED_TOOL,\n  APPLY_ABSOLUTE_FILTER,\n} from '../reducer/types/Types';\n\nconst styles: Record<'container' | 'input' | 'select', CSSProperties> = {\n  container: {\n    padding: '5px',\n    height: '100%',\n    display: 'flex',\n  },\n  input: {\n    width: '100px',\n  },\n  select: {\n    marginLeft: '5px',\n    marginRight: '10px',\n    border: 'none',\n    height: '20px',\n  },\n};\n\nconst phaseCorrectionTypes = {\n  manual: 'manual',\n  automatic: 'automatic',\n  absolute: 'absolute',\n};\n\nconst algorithms = [\n  {\n    key: phaseCorrectionTypes.manual,\n    label: 'Manual',\n    value: phaseCorrectionTypes.manual,\n  },\n  {\n    key: phaseCorrectionTypes.automatic,\n    label: 'Automatic',\n    value: phaseCorrectionTypes.automatic,\n  },\n  {\n    key: phaseCorrectionTypes.absolute,\n    label: 'Absolute',\n    value: phaseCorrectionTypes.absolute,\n  },\n];\n\ninterface ManualPhaseCorrectionPanelInnerProps {\n  data: Data1D;\n  pivot: { index: number };\n  filter: Filter | null;\n}\n\nfunction ManualPhaseCorrectionPanelInner({\n  data,\n  pivot,\n  filter,\n}: ManualPhaseCorrectionPanelInnerProps) {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState({ ph0: 0, ph1: 0 });\n  const valueRef = useRef({ ph0: 0, ph1: 0 });\n\n  const ph0Ref = useRef<any>();\n  const ph1Ref = useRef<any>();\n\n  const [phaseCorrectionType, setPhaseCorrectionType] = useState(\n    phaseCorrectionTypes.manual,\n  );\n\n  useEffect(() => {\n    if (filter) {\n      valueRef.current = filter.value;\n      setValue(filter.value);\n      ph0Ref.current.setValue(filter.value.ph0);\n      ph1Ref.current.setValue(filter.value.ph1);\n    } else {\n      ph0Ref.current.setValue(valueRef.current.ph0);\n      ph1Ref.current.setValue(valueRef.current.ph1);\n    }\n  }, [filter]);\n\n  const handleApplyFilter = useCallback(() => {\n    switch (phaseCorrectionType) {\n      case phaseCorrectionTypes.automatic: {\n        dispatch({\n          type: APPLY_AUTO_PHASE_CORRECTION_FILTER,\n        });\n        break;\n      }\n\n      case phaseCorrectionTypes.manual: {\n        dispatch({\n          type: APPLY_MANUAL_PHASE_CORRECTION_FILTER,\n          value,\n        });\n        break;\n      }\n      case phaseCorrectionTypes.absolute: {\n        dispatch({\n          type: APPLY_ABSOLUTE_FILTER,\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }, [dispatch, phaseCorrectionType, value]);\n\n  const calcPhaseCorrectionHandler = useCallback(\n    (newValues, filedName) => {\n      if (filedName === 'ph1' && data.re) {\n        const diff0 = newValues.ph0 - valueRef.current.ph0;\n        const diff1 = newValues.ph1 - valueRef.current.ph1;\n        newValues.ph0 += diff0 - (diff1 * pivot?.index) / data.re.length;\n      }\n\n      dispatch({\n        type: CALCULATE_MANUAL_PHASE_CORRECTION_FILTER,\n        value: newValues,\n      });\n    },\n    [data.re, dispatch, pivot?.index],\n  );\n\n  const handleInput = useCallback(\n    (e) => {\n      const { name, value } = e.target;\n      if (e.target) {\n        const newValue = { ...valueRef.current, [name]: value };\n        if (String(value).trim() !== '-') {\n          calcPhaseCorrectionHandler(newValue, name);\n        }\n        valueRef.current = newValue;\n        setValue(valueRef.current);\n      }\n    },\n    [calcPhaseCorrectionHandler],\n  );\n\n  const handleRangeChange = useCallback(\n    (e) => {\n      const newValue = { ...valueRef.current, [e.name]: e.value };\n      calcPhaseCorrectionHandler(newValue, e.name);\n      valueRef.current = newValue;\n      setValue(valueRef.current);\n    },\n    [calcPhaseCorrectionHandler],\n  );\n\n  const handleCancelFilter = useCallback(() => {\n    dispatch({\n      type: RESET_SELECTED_TOOL,\n    });\n  }, [dispatch]);\n\n  const onChangeHandler = useCallback((val) => {\n    setPhaseCorrectionType(val);\n  }, []);\n\n  return (\n    <div style={styles.container}>\n      <Select\n        onChange={onChangeHandler}\n        data={algorithms}\n        defaultValue={phaseCorrectionTypes.manual}\n        style={styles.select}\n      />\n\n      {phaseCorrectionType === phaseCorrectionTypes.manual && (\n        <>\n          <Label title=\"PH0 :\" style={{ wrapper: { marginRight: '5px' } }}>\n            <Input\n              name=\"ph0\"\n              style={{ input: styles.input }}\n              onChange={handleInput}\n              value={value.ph0}\n              type=\"number\"\n              debounceTime={250}\n            />\n          </Label>\n          <Label title=\"PH1 :\">\n            <Input\n              name=\"ph1\"\n              style={{ input: styles.input }}\n              onChange={handleInput}\n              value={value.ph1}\n              type=\"number\"\n              debounceTime={250}\n            />\n          </Label>\n          <InputRange\n            ref={ph0Ref}\n            name=\"ph0\"\n            label=\"Change Ph0 By mouse click and drag\"\n            style={{ width: '20%' }}\n            onChange={handleRangeChange}\n          />\n          <InputRange\n            ref={ph1Ref}\n            name=\"ph1\"\n            label=\"Change Ph1 By mouse click and drag\"\n            style={{ width: '20%' }}\n            onChange={handleRangeChange}\n          />\n        </>\n      )}\n\n      <ActionButtons onDone={handleApplyFilter} onCancel={handleCancelFilter} />\n    </div>\n  );\n}\n\nconst MemoizedManualPhaseCorrectionPanel = memo(\n  ManualPhaseCorrectionPanelInner,\n);\n\nconst emptyData = { datum: {}, filter: null };\nexport default function ManualPhaseCorrectionPanel() {\n  const {\n    toolOptions: {\n      data: { pivot },\n    },\n  } = useChartData();\n\n  const { data, filters } = useSpectrum(emptyData) as Datum1D;\n\n  const filter = useMemo(() => {\n    return (\n      filters.find((filter) => filter.name === Filters.phaseCorrection.id) ||\n      null\n    );\n  }, [filters]);\n\n  return <MemoizedManualPhaseCorrectionPanel {...{ data, filter, pivot }} />;\n}\n","import { CSSProperties, useCallback, useRef } from 'react';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport Button from '../elements/Button';\nimport CheckBox from '../elements/CheckBox';\nimport NumberInput from '../elements/NumberInput';\nimport { AUTO_RANGES_DETECTION } from '../reducer/types/Types';\n\nconst styles: Record<\n  'container' | 'input' | 'inputContainer' | 'label' | 'hint',\n  CSSProperties\n> = {\n  container: {\n    padding: '5px',\n    height: '100%',\n    display: 'flex',\n    fontSize: '12px',\n    alignItems: 'baseline',\n  },\n  input: {\n    height: '100%',\n    width: '50px',\n    borderRadius: '5px',\n    border: '0.55px solid #c7c7c7',\n    margin: '0px 5px 0px 5px',\n    textAlign: 'center',\n  },\n  inputContainer: {\n    flex: 2,\n  },\n  label: {\n    flex: 5,\n  },\n\n  hint: {\n    lineHeight: 2,\n    userSelect: 'none',\n    fontSize: '11px',\n  },\n};\n\nfunction RangesPickingOptionPanel() {\n  const dispatch = useDispatch();\n  const lookNegativeRef = useRef<any>();\n  const minMaxRatioRef = useRef<any>();\n\n  const handleApplyFilter = useCallback(() => {\n    dispatch({\n      type: AUTO_RANGES_DETECTION,\n      options: {\n        peakPicking: {\n          minMaxRatio: Number(minMaxRatioRef.current.value) || 0.05,\n          lookNegative: lookNegativeRef.current.checked,\n        },\n      },\n    });\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <div style={{ justifyItems: 'baseline', margin: '0 10px' }}>\n        <label\n          style={{ marginRight: '2px', lineHeight: 2, userSelect: 'none' }}\n          htmlFor=\"lookNegative\"\n        >\n          Detect negative:\n        </label>\n        <CheckBox name=\"lookNegative\" ref={lookNegativeRef} />\n      </div>\n      <NumberInput\n        ref={minMaxRatioRef}\n        label=\"Min Max Ratio:\"\n        name=\"minMaxRatio\"\n        style={{\n          input: styles.input,\n          inputContainer: styles.inputContainer,\n          label: styles.label,\n        }}\n        defaultValue={0.05}\n        step=\"0.01\"\n      />\n\n      <Button.Done onClick={handleApplyFilter} style={{ margin: '0 10px' }}>\n        Auto ranges picking\n      </Button.Done>\n      <span style={styles.hint}>\n        Manual selection using SHIFT + select zone or click on Auto peak picking\n      </span>\n    </div>\n  );\n}\n\nexport default RangesPickingOptionPanel;\n","import { CSSProperties, useCallback, useRef, useState } from 'react';\n\nimport { Data1D } from '../../data/types/data1d';\nimport generateNumbersPowerOfX from '../../data/utilities/generateNumbersPowerOfX';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport ActionButtons from '../elements/ActionButtons';\nimport Select from '../elements/Select';\nimport {\n  APPLY_ZERO_FILLING_FILTER,\n  RESET_SELECTED_TOOL,\n} from '../reducer/types/Types';\n\nconst styles: Record<'container' | 'input' | 'label', CSSProperties> = {\n  container: {\n    padding: '5px',\n    height: '100%',\n    display: 'flex',\n  },\n\n  input: {\n    height: '100%',\n    width: '80px',\n    borderRadius: '5px',\n    border: '0.55px solid #c7c7c7',\n    margin: '0px 5px 0px 5px',\n    textAlign: 'center',\n  },\n\n  label: {\n    lineHeight: 2,\n    userSelect: 'none',\n  },\n};\n\nconst Sizes = generateNumbersPowerOfX(8, 21);\n\nfunction ZeroFillingOptionsPanel() {\n  const dispatch = useDispatch();\n  const { data, activeSpectrum } = useChartData();\n  const sizeTextInputRef = useRef<any>();\n  const [lineBroadeningValue, setLineBroadeningValue] = useState(1);\n\n  const handleApplyFilter = useCallback(() => {\n    dispatch({\n      type: APPLY_ZERO_FILLING_FILTER,\n      value: {\n        zeroFillingSize: Number(sizeTextInputRef.current.value),\n        lineBroadeningValue: lineBroadeningValue,\n      },\n    });\n  }, [dispatch, lineBroadeningValue]);\n\n  const getDefaultValue = useCallback(() => {\n    if (data && activeSpectrum?.id) {\n      return (\n        2 **\n        Math.round(\n          Math.log2((data[activeSpectrum.index].data as Data1D).x.length),\n        )\n      );\n    }\n    return '';\n  }, [activeSpectrum, data]);\n\n  const handleInput = useCallback(\n    (e) => {\n      if (e.target) {\n        const _value = e.target.validity.valid\n          ? Number(e.target.value)\n          : lineBroadeningValue;\n        setLineBroadeningValue(_value);\n      }\n    },\n    [lineBroadeningValue],\n  );\n\n  const handleCancelFilter = useCallback(() => {\n    dispatch({\n      type: RESET_SELECTED_TOOL,\n    });\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <span style={styles.label}>Size: </span>\n      <Select\n        ref={sizeTextInputRef}\n        data={Sizes}\n        style={{ marginLeft: 10, marginRight: 10 }}\n        defaultValue={getDefaultValue()}\n      />\n      <span style={styles.label}>Line Broadening: </span>\n      <input\n        name=\"line-broadening\"\n        style={styles.input}\n        type=\"number\"\n        defaultValue={lineBroadeningValue}\n        onInput={handleInput}\n        pattern=\"^\\d*(\\.\\d{0,2})?$\"\n        step=\"any\"\n      />\n      <ActionButtons onDone={handleApplyFilter} onCancel={handleCancelFilter} />\n    </div>\n  );\n}\n\nexport default ZeroFillingOptionsPanel;\n","import { CSSProperties, useCallback, useRef } from 'react';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport Button from '../elements/Button';\nimport NumberInput from '../elements/NumberInput';\nimport {\n  AUTO_ZONES_DETECTION,\n  CHANGE_ZONES_NOISE_FACTOR,\n} from '../reducer/types/Types';\n\nconst styles: Record<\n  'container' | 'input' | 'inputContainer' | 'label',\n  CSSProperties\n> = {\n  container: {\n    padding: '5px',\n    height: '100%',\n    display: 'flex',\n    fontSize: '12px',\n  },\n  input: {\n    width: '50px',\n  },\n  inputContainer: {\n    flex: '2',\n  },\n  label: {\n    flex: '5',\n  },\n};\n\nfunction Zones2DOptionPanel() {\n  const dispatch = useDispatch();\n  const thresholdFactor = useRef<any>();\n\n  const handleApplyFilter = useCallback(() => {\n    dispatch({\n      type: AUTO_ZONES_DETECTION,\n      options: {\n        thresholdFactor: thresholdFactor.current.value,\n      },\n    });\n  }, [dispatch]);\n\n  const handleInput = useCallback(\n    (e) => {\n      if (e.target) {\n        dispatch({ type: CHANGE_ZONES_NOISE_FACTOR, payload: e.target.value });\n      }\n    },\n    [dispatch],\n  );\n\n  return (\n    <div style={styles.container}>\n      <NumberInput\n        ref={thresholdFactor}\n        label=\"NoiseFactor\"\n        name=\"noiseFactor\"\n        style={{\n          input: styles.input,\n          inputContainer: styles.inputContainer,\n          label: styles.label,\n        }}\n        defaultValue={1}\n        onChange={handleInput}\n      />\n      <Button.Done onClick={handleApplyFilter} style={{ margin: '0 10px' }}>\n        Auto Zones Picking\n      </Button.Done>\n    </div>\n  );\n}\n\nexport default Zones2DOptionPanel;\n","import { Header, Toolbar } from 'analysis-ui-components';\nimport { SvgLogoNmrium } from 'cheminfo-font';\nimport { useMemo, useCallback, memo } from 'react';\nimport {\n  FaRegWindowMaximize,\n  FaWrench,\n  FaQuestionCircle,\n} from 'react-icons/fa';\n\nimport { docsBaseUrl } from '../../constants';\nimport { useChartData } from '../context/ChartContext';\nimport {\n  usePreferences,\n  useWorkspacesList,\n} from '../context/PreferencesContext';\nimport DropDownButton, {\n  DropDownListItem,\n} from '../elements/dropDownButton/DropDownButton';\nimport { useModal, positions } from '../elements/popup/Modal';\nimport AboutUsModal from '../modal/AboutUsModal';\nimport GeneralSettings from '../modal/setting/GeneralSettings';\nimport { options } from '../toolbar/ToolTypes';\n\nimport AutoPeakPickingOptionPanel from './AutoPeakPickingOptionPanel';\nimport BaseLineCorrectionPanel from './BaseLineCorrectionPanel';\nimport ManualPhaseCorrectionPanel from './ManualPhaseCorrectionPanel';\nimport RangesPickingOptionPanel from './RangesPickingOptionPanel';\nimport ZeroFillingOptionsPanel from './ZeroFillingOptionsPanel';\nimport Zones2DOptionPanel from './Zones2DOptionPanel';\n\ninterface HeaderInnerProps {\n  onMaximize?: () => void;\n  isFullscreen: boolean;\n  selectedOptionPanel: string | null;\n}\n\nfunction HeaderInner(props: HeaderInnerProps) {\n  const { isFullscreen, onMaximize = () => null, selectedOptionPanel } = props;\n\n  const modal = useModal();\n  const {\n    current: {\n      display: { general },\n    },\n    workspace,\n    dispatch,\n  } = usePreferences();\n\n  const workspacesList = useWorkspacesList();\n  const hideGeneralSettings =\n    general?.hideGeneralSettings && workspace.base ? true : false;\n\n  const selectedPanel = useMemo(() => {\n    switch (selectedOptionPanel) {\n      case options.zeroFilling.id:\n        return <ZeroFillingOptionsPanel />;\n      case options.phaseCorrection.id:\n        return <ManualPhaseCorrectionPanel />;\n      case options.peakPicking.id:\n        return <AutoPeakPickingOptionPanel />;\n      case options.rangesPicking.id:\n        return <RangesPickingOptionPanel />;\n      case options.baseLineCorrection.id:\n        return <BaseLineCorrectionPanel />;\n      case options.zone2D.id:\n        return <Zones2DOptionPanel />;\n      default:\n        break;\n    }\n  }, [selectedOptionPanel]);\n\n  const openGeneralSettingsHandler = useCallback(() => {\n    modal.show(<GeneralSettings />, {\n      position: positions.TOP_CENTER,\n      enableResizing: true,\n      width: 600,\n      height: 400,\n    });\n  }, [modal]);\n\n  const openAboutUs = useCallback(() => {\n    modal.show(<AboutUsModal />, {\n      isBackgroundBlur: false,\n      position: positions.MIDDLE,\n      width: 500,\n      height: 480,\n    });\n  }, [modal]);\n\n  const changeWorkspaceHandler = useCallback(\n    (option: DropDownListItem) => {\n      dispatch({\n        type: 'SET_WORKSPACE',\n        payload: {\n          workspace: option.key,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  return (\n    <Header>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n        }}\n      >\n        <div>\n          <Toolbar orientation=\"horizontal\">\n            <Toolbar.Item\n              onClick={openAboutUs}\n              titleOrientation=\"horizontal\"\n              id=\"logo\"\n              title=\"About NMRium\"\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <SvgLogoNmrium />\n              </div>\n            </Toolbar.Item>\n          </Toolbar>\n        </div>\n        <div className=\"toolOptionsPanel\">{selectedPanel}</div>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n        }}\n      >\n        {!hideGeneralSettings && (\n          <DropDownButton\n            data={workspacesList}\n            selectedKey={workspace.current}\n            onSelect={changeWorkspaceHandler}\n          />\n        )}\n        <div>\n          <Toolbar orientation=\"horizontal\">\n            <Toolbar.Item\n              id=\"user-manual\"\n              title=\"User manual\"\n              onClick={() => window.open(docsBaseUrl, '_blank')}\n            >\n              <FaQuestionCircle />\n            </Toolbar.Item>\n            {!hideGeneralSettings && (\n              <Toolbar.Item\n                id=\"general-settings\"\n                onClick={openGeneralSettingsHandler}\n                title=\"General settings\"\n              >\n                <FaWrench />\n              </Toolbar.Item>\n            )}\n\n            {!isFullscreen && (\n              <Toolbar.Item\n                id=\"full-screen\"\n                onClick={onMaximize}\n                title=\"Full Screen\"\n                className=\"windowButton\"\n              >\n                <FaRegWindowMaximize />\n              </Toolbar.Item>\n            )}\n          </Toolbar>\n        </div>\n      </div>\n    </Header>\n  );\n}\n\nconst MemoizedHeader = memo(HeaderInner);\n\nexport default function HeaderWrapper({ isFullscreen, onMaximize }) {\n  const {\n    toolOptions: { selectedOptionPanel },\n  } = useChartData();\n  return (\n    <MemoizedHeader\n      {...{\n        selectedOptionPanel,\n        isFullscreen,\n        onMaximize,\n      }}\n    />\n  );\n}\n","export const FILES_TYPES = {\n  MOL: 'mol',\n  NMRIUM: 'nmrium',\n  JSON: 'json',\n  DX: 'dx',\n  JDX: 'jdx',\n  JDF: 'jdf',\n  ZIP: 'zip',\n  NMREDATA: 'nmredata',\n};\nexport const FILES_SIGNATURES = {\n  ZIP: '504b0304',\n};\n\nfunction getFileSignature(fileArrayBuffer) {\n  return new Uint8Array(fileArrayBuffer)\n    .slice(0, 4)\n    .reduce((acc, byte) => (acc += byte.toString(16).padStart(2, '0')), '');\n}\n\nasync function loadFile(file, options = { asBuffer: false }) {\n  const response = await fetch(file);\n  checkStatus(response);\n  const data = options.asBuffer ? response.arrayBuffer() : response.text();\n  return data;\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nfunction getFileExtension(name) {\n  return name.replace(/^.*\\./, '').toLowerCase();\n}\n\nfunction getFileName(name) {\n  return name.substr(0, name.lastIndexOf('.'));\n}\n\nfunction extractFileMetaFromPath(path) {\n  const meta = path.replace(/^.*[\\\\/]/, '').split('.');\n\n  return { name: meta[0].toLowerCase(), extension: meta[1].toLowerCase() };\n}\n/**\n *\n * @param {Array<File>} acceptedFiles\n * @param {object} options\n * @param {boolean} options.asBuffer\n * @returns\n */\nfunction loadFiles<T = unknown>(\n  acceptedFiles,\n  options: { asBuffer?: boolean } = {},\n) {\n  return Promise.all(\n    ([] as Array<T>).map.call(acceptedFiles, (file: any) => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onabort = (e) => reject(e);\n        reader.onerror = (e) => reject(e);\n        reader.onload = () => {\n          if (reader.result) {\n            const binary = reader.result;\n            const name = getFileName(file.name);\n            const extension = getFileExtension(file.name);\n            resolve({ binary, name, extension });\n          }\n        };\n        if (options.asBuffer) {\n          reader.readAsArrayBuffer(file);\n        } else {\n          reader.readAsBinaryString(file);\n        }\n      });\n    }),\n  ) as Promise<Array<T>>;\n}\n\nasync function loadFilesFromZip(files, options: { asBuffer?: boolean } = {}) {\n  const result: Array<{ binary: any; name: string; extension: string }> = [];\n  for (const file of files) {\n    try {\n      const binary = await file.async(options.asBuffer ? 'uint8array' : 'text');\n      const name = getFileName(file.name);\n      const extension = getFileExtension(file.name);\n      result.push({ binary, name, extension });\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(e);\n    }\n  }\n  return result;\n}\n\nexport {\n  loadFiles,\n  loadFilesFromZip,\n  loadFile,\n  getFileExtension,\n  getFileName,\n  extractFileMetaFromPath,\n  getFileSignature,\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Zip from 'jszip';\nimport { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FaUpload } from 'react-icons/fa';\n\nimport { File } from '../../data/types/common/File';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport { LoaderProvider } from '../context/LoaderContext';\nimport { useAlert } from '../elements/popup/Alert';\nimport {\n  LOAD_MOL_FILE,\n  LOAD_JSON_FILE,\n  LOAD_JCAMP_FILE,\n  SET_LOADING_FLAG,\n  LOAD_ZIP_FILE,\n  LOAD_JDF_FILE,\n  LOAD_NMREDATA_FILE,\n} from '../reducer/types/Types';\nimport {\n  FILES_TYPES,\n  FILES_SIGNATURES,\n  getFileExtension,\n  getFileSignature,\n  loadFiles,\n  loadFilesFromZip,\n} from '../utility/FileUtility';\n\nconst style = css`\n  height: 100%;\n  background-color: #b5b5b599;\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-flow: column;\n  z-index: 99999;\n\n  p {\n    color: white;\n    background-color: rgb(104, 104, 104);\n    padding: 1.5%;\n    border-radius: 30px;\n    margin: 0px;\n  }\n\n  svg {\n    stroke-width: 0;\n    font-size: 3rem !important;\n    fill: white;\n  }\n`;\n\nconst containerStyle = css`\n  border: 0.55px #e6e6e6 solid;\n  display: flex;\n  flex: 1;\n  flex-direction: 'column';\n  height: 100%;\n`;\n\nfunction DropZone(props) {\n  const { width, height } = useChartData();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const loadSubFilesFromZip = useCallback(\n    async (extractedfiles, uniqueFileExtensions) => {\n      for (let extension of uniqueFileExtensions) {\n        const selectedFilesByExtensions = extractedfiles.filter(\n          (file) => getFileExtension(file.name) === extension,\n        );\n\n        switch (extension) {\n          case FILES_TYPES.MOL: {\n            const files = await loadFilesFromZip(selectedFilesByExtensions);\n            dispatch({ type: LOAD_MOL_FILE, files });\n            break;\n          }\n          case FILES_TYPES.NMRIUM:\n          case FILES_TYPES.JSON: {\n            const files = await loadFilesFromZip(selectedFilesByExtensions, {\n              asBuffer: true,\n            });\n            if (selectedFilesByExtensions.length === 1) {\n              const decoder = new TextDecoder('utf8');\n              files[0].binary = decoder.decode(files[0].binary);\n\n              dispatch({ type: LOAD_JSON_FILE, files });\n            } else {\n              throw new Error('You can add only one json file');\n            }\n\n            break;\n          }\n          case FILES_TYPES.JDX:\n          case FILES_TYPES.DX: {\n            const files = await loadFilesFromZip(selectedFilesByExtensions, {\n              asBuffer: true,\n            });\n            dispatch({ type: LOAD_JCAMP_FILE, files });\n\n            break;\n          }\n          case FILES_TYPES.JDF: {\n            const files = await loadFilesFromZip(selectedFilesByExtensions, {\n              asBuffer: true,\n            });\n            dispatch({ type: LOAD_JDF_FILE, files });\n            break;\n          }\n          default:\n            break;\n        }\n      }\n    },\n    [dispatch],\n  );\n\n  const loadFilesHandler = useCallback(\n    async (files) => {\n      const uniqueFileExtensions = [\n        ...new Set(files.map((file) => getFileExtension(file.name))),\n      ];\n\n      for (let extension of uniqueFileExtensions) {\n        const selectedFilesByExtensions = files.filter(\n          (file) => getFileExtension(file.name) === extension,\n        );\n        try {\n          switch (extension) {\n            case FILES_TYPES.MOL: {\n              const files = await loadFiles(selectedFilesByExtensions);\n              dispatch({ type: LOAD_MOL_FILE, files });\n\n              break;\n            }\n            case FILES_TYPES.NMRIUM:\n            case FILES_TYPES.JSON:\n              if (selectedFilesByExtensions.length === 1) {\n                const files = await loadFiles<{ binary: any }>(\n                  selectedFilesByExtensions,\n                  {\n                    asBuffer: true,\n                  },\n                );\n                // InputFileFormat\n                const fileSignature = getFileSignature(files[0].binary);\n                if (fileSignature === FILES_SIGNATURES.ZIP) {\n                  const unzipResult = await Zip.loadAsync(files[0].binary);\n                  await loadSubFilesFromZip(Object.values(unzipResult.files), [\n                    FILES_TYPES.NMRIUM,\n                  ]);\n                } else {\n                  const decoder = new TextDecoder('utf8');\n                  files[0].binary = decoder.decode(files[0].binary);\n                  dispatch({ type: LOAD_JSON_FILE, files });\n                }\n              } else {\n                throw new Error('You can add only one json file');\n              }\n\n              break;\n            case FILES_TYPES.JDX:\n            case FILES_TYPES.DX: {\n              const files = await loadFiles(selectedFilesByExtensions, {\n                asBuffer: true,\n              });\n              dispatch({ type: LOAD_JCAMP_FILE, files });\n\n              break;\n            }\n            case FILES_TYPES.JDF: {\n              const files = await loadFiles(selectedFilesByExtensions, {\n                asBuffer: true,\n              });\n              dispatch({ type: LOAD_JDF_FILE, files });\n\n              break;\n            }\n            case FILES_TYPES.ZIP: {\n              const files: File[] = await loadFiles(selectedFilesByExtensions, {\n                asBuffer: true,\n              });\n              for (const zipFile of files) {\n                const unzipResult = await Zip.loadAsync(zipFile.binary);\n\n                const uniqueFileExtensions = [\n                  ...new Set(\n                    Object.values(unzipResult.files).map((file) =>\n                      getFileExtension(file.name),\n                    ),\n                  ),\n                ];\n                const isNotZip = uniqueFileExtensions.some(\n                  (ex) =>\n                    FILES_TYPES[ex.toUpperCase()] && ex !== FILES_TYPES.ZIP,\n                );\n                if (isNotZip) {\n                  const hasBruker = Object.keys(unzipResult.files).some(\n                    (path) => {\n                      return ['2rr', 'fid', '1r'].some((brukerFile) =>\n                        path.endsWith(brukerFile),\n                      );\n                    },\n                  );\n                  if (hasBruker) dispatch({ type: LOAD_ZIP_FILE, files });\n                  await loadSubFilesFromZip(\n                    Object.values(unzipResult.files),\n                    uniqueFileExtensions,\n                  );\n                } else {\n                  dispatch({ type: LOAD_ZIP_FILE, files });\n                }\n              }\n\n              break;\n            }\n            case FILES_TYPES.NMREDATA:\n              void loadFiles(selectedFilesByExtensions, {\n                asBuffer: true,\n              }).then(async (files) => {\n                for (const zipFile of files) {\n                  dispatch({\n                    type: LOAD_NMREDATA_FILE,\n                    file: zipFile,\n                  });\n                }\n              });\n              break;\n            default:\n              throw new Error(\n                'The file extension must be zip, dx, jdx, json, mol, nmredata or nmrium.',\n              );\n          }\n        } catch (e: any) {\n          dispatch({ type: SET_LOADING_FLAG, isLoading: false });\n          alert.error(e.message);\n        }\n      }\n    },\n    [alert, dispatch, loadSubFilesFromZip],\n  );\n\n  const onDrop = useCallback(\n    (droppedFiles) => {\n      dispatch({ type: SET_LOADING_FLAG, isLoading: true });\n      void loadFilesHandler(droppedFiles);\n    },\n    [dispatch, loadFilesHandler],\n  );\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    open: openImportDialog,\n  } = useDropzone({\n    onDrop,\n    noClick: true,\n    noKeyboard: true,\n  });\n\n  const open = useCallback(() => {\n    openImportDialog();\n  }, [openImportDialog]);\n\n  return (\n    <LoaderProvider value={open}>\n      <div {...getRootProps()} role=\"none\" css={containerStyle}>\n        <input data-test-id=\"dropzone-input\" {...getInputProps()} />\n        {isDragActive && (\n          <div\n            css={style}\n            style={{\n              width: `${width}px`,\n              height: `${height}px`,\n              marginTop: '30px',\n              marginLeft: '30px',\n            }}\n          >\n            <FaUpload />\n            <p>Drop your files here</p>\n          </div>\n        )}\n        {props.children}\n      </div>\n    </LoaderProvider>\n  );\n}\n\nexport default DropZone;\n","import * as types from './types/Types';\n\nconst ignoreActions = [\n  types.APPLY_KEY_PREFERENCES,\n  types.BRUSH_END,\n  types.RESET_DOMAIN,\n  types.RESET_SELECTED_TOOL,\n  types.SET_KEY_PREFERENCES,\n  types.SET_LOADING_FLAG,\n  types.SET_ORIGINAL_DOMAIN,\n  types.SET_SELECTED_FILTER,\n  types.SET_SELECTED_OPTIONS_PANEL,\n  types.SET_SELECTED_TOOL,\n  types.SET_SPECTRUMS_VERTICAL_ALIGN,\n  types.SET_VERTICAL_INDICATOR_X_POSITION,\n  types.SET_WIDTH,\n  types.SET_DIMENSIONS,\n  types.SET_X_DOMAIN,\n  types.SET_Y_DOMAIN,\n  types.SET_ZOOM,\n  types.TOGGLE_REAL_IMAGINARY_VISIBILITY,\n  types.CALCULATE_MANUAL_PHASE_CORRECTION_FILTER,\n  types.CHANGE_SPECTRUM_DISPLAY_VIEW_MODE,\n  types.FULL_ZOOM_OUT,\n  types.SAVE_AS_SVG,\n  types.SAVE_DATA_AS_JSON,\n  types.SET_ACTIVE_TAB,\n  types.CHANGE_VISIBILITY,\n  types.CHANGE_PEAKS_MARKERS_VISIBILITY,\n  types.CHANGE_ACTIVE_SPECTRUM,\n  types.CHANGE_SPECTRUM_COLOR,\n  types.SET_MOUSE_OVER_DISPLAYER,\n];\n\nfunction checkActionType(type: string): boolean {\n  if (!ignoreActions.includes(type)) return true;\n  return false;\n}\n\nexport default checkActionType;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Toolbar } from 'analysis-ui-components';\nimport {\n  ReactNode,\n  useState,\n  useCallback,\n  useRef,\n  useLayoutEffect,\n} from 'react';\n\nconst menuStyles = css`\n  .menu {\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n    padding: 0px;\n    margin: 0px;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    z-index: 99999;\n    padding: 2px;\n    background-color: white;\n\n    button:hover {\n      background-color: #fafafa;\n    }\n  }\n\n  .menu-cover {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n\n  .menu-item {\n    background-color: transparent;\n    border: none;\n    border-bottom: 0.55px solid whitesmoke;\n    height: 35px;\n    outline: outline;\n    display: table-cell;\n    vertical-align: middle;\n    text-align: left;\n    padding: 0 10px;\n\n    svg {\n      display: inline-block;\n    }\n\n    :focus {\n      outline: none !important;\n    }\n    span {\n      font-size: 10px;\n      padding: 0px 10px;\n    }\n  }\n`;\n\ninterface MenuItemProps {\n  icon: ReactNode;\n  label: string;\n  onClick: () => void;\n}\n\nfunction MenuItem({ icon, label, onClick }: MenuItemProps) {\n  return (\n    <button type=\"button\" className=\"menu-item\" onClick={onClick}>\n      {icon}\n      <span>{label}</span>\n    </button>\n  );\n}\n\ninterface MenuListProps {\n  items: Array<MenuItemProps & { id: string }>;\n  onClick: (element: MenuItemProps & { id: string }) => void;\n  boxBounding: any;\n}\n\nfunction MenuList({ items, boxBounding, onClick }: MenuListProps) {\n  const listRef = useRef<any>();\n  const [translate, setTranslate] = useState({\n    x: boxBounding.width,\n    y: boxBounding.height,\n  });\n\n  useLayoutEffect(() => {\n    const boxSize = listRef.current.getBoundingClientRect();\n    setTranslate((oldTransform) => {\n      let y = boxBounding.height;\n      if (boxSize.bottom > window.innerHeight) {\n        y = boxBounding.height * 2 + (boxSize.bottom - window.innerHeight);\n      }\n      return {\n        ...oldTransform,\n        y,\n      };\n    });\n  }, [boxBounding.height]);\n\n  return (\n    <div\n      ref={listRef}\n      className=\"menu\"\n      style={{\n        transform: `translate(${translate.x}px, -${translate.y}px) `,\n      }}\n    >\n      {items?.map((item) => {\n        return (\n          <MenuItem key={item.id} {...item} onClick={() => onClick(item)} />\n        );\n      })}\n    </div>\n  );\n}\n\ninterface MenuButtonProps {\n  component: any;\n  toolTip: string;\n  items: Array<any>;\n  onClick: (element: any) => void;\n}\n\nexport default function ToolbarMenu({\n  component,\n  toolTip = '',\n  items = [],\n  onClick = () => null,\n}: MenuButtonProps) {\n  const menuButtonRef = useRef<HTMLDivElement>(null);\n  const [isShown, showMenu] = useState(false);\n\n  const closeMenuButton = useCallback(() => {\n    showMenu(false);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    showMenu((flag) => !flag);\n  }, []);\n\n  const clickHandler = useCallback(\n    (e) => {\n      showMenu(false);\n      onClick(e);\n    },\n    [onClick],\n  );\n\n  const boxBounding = useCallback(() => {\n    return menuButtonRef.current?.getBoundingClientRect();\n  }, []);\n\n  return (\n    <div style={{ height: 'auto' }} css={menuStyles}>\n      <div ref={menuButtonRef}>\n        <Toolbar.Item\n          id={`menu-${toolTip}`}\n          title={toolTip}\n          active={isShown}\n          onClick={handleClick}\n        >\n          {component}\n        </Toolbar.Item>\n      </div>\n      {isShown && (\n        <MenuList\n          items={items}\n          boxBounding={boxBounding()}\n          onClick={clickHandler}\n        />\n      )}\n\n      {isShown && <div className=\"menu-cover\" onClick={closeMenuButton} />}\n    </div>\n  );\n}\n","import { useMemo } from 'react';\n\nimport { Info1D as Datum1DInfo, Data1D } from '../../data/types/data1d';\nimport { Info2D as Datum2DInfo, Data2D } from '../../data/types/data2d';\nimport { useChartData } from '../context/ChartContext';\nimport nucleusToString from '../utility/nucleusToString';\n\ninterface SpectrumWithStatisticsProps {\n  info: Datum1DInfo | Datum2DInfo;\n  datum: Data1D | Data2D;\n  ftCounter: number;\n  fidCounter: number;\n}\n\nconst emptyData = { info: {}, datum: {}, ftCounter: 0, fidCounter: 0 };\n\nexport default function useDatumWithSpectraStatistics(): SpectrumWithStatisticsProps {\n  const { data, activeSpectrum, activeTab } = useChartData();\n\n  return useMemo(() => {\n    if (data) {\n      let info: any = {};\n      let datum: any = {};\n      let ftCounter = 0;\n      let fidCounter = 0;\n\n      for (const dataInfo of data) {\n        const { isFid, isFt, nucleus } = dataInfo.info;\n\n        if (activeTab === nucleusToString(nucleus)) {\n          if (isFid) {\n            fidCounter++;\n          }\n          if (isFt) {\n            ftCounter++;\n          }\n          if (activeSpectrum && dataInfo.id === activeSpectrum.id) {\n            info = dataInfo.info;\n            datum = dataInfo.data;\n          }\n        }\n      }\n\n      return {\n        info,\n        datum,\n        ftCounter,\n        fidCounter,\n      };\n    }\n    return emptyData;\n  }, [activeSpectrum, data, activeTab]);\n}\n","import { useFormikContext } from 'formik';\nimport lodashGet from 'lodash/get';\nimport { useCallback, useEffect, useMemo, CSSProperties } from 'react';\n\ninterface FormikTextareaProps\n  extends Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, 'style'> {\n  name: string;\n  style?: CSSProperties;\n  value?: string;\n  className?: string;\n}\n\nfunction FormikTextarea(props: FormikTextareaProps) {\n  const {\n    name,\n    style = {},\n    onChange = () => null,\n    className = '',\n    value,\n    placeholder = '',\n    ...resProps\n  } = props;\n\n  const { values, handleChange, setFieldValue, errors } = useFormikContext();\n\n  const changeHandler = useCallback(\n    (e) => {\n      onChange(e);\n      handleChange(e);\n    },\n    [handleChange, onChange],\n  );\n\n  useEffect(() => {\n    if (value) {\n      setFieldValue(name, value);\n    }\n  }, [name, setFieldValue, value]);\n\n  const isInvalid = useMemo(() => {\n    return lodashGet(errors, name);\n  }, [errors, name]);\n\n  return (\n    <textarea\n      {...{ name, className, placeholder }}\n      value={value ? value : lodashGet(values, name)}\n      onChange={changeHandler}\n      style={{\n        ...style,\n        ...(isInvalid && {\n          borderColor: 'red',\n          borderWidth: '1px',\n          outline: 'none',\n        }),\n      }}\n      {...resProps}\n    />\n  );\n}\n\nexport default FormikTextarea;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useRef } from 'react';\nimport * as yup from 'yup';\n\nimport { useDispatch } from '../context/DispatchContext';\nimport Button from '../elements/Button';\nimport CloseButton from '../elements/CloseButton';\nimport FormikForm from '../elements/formik/FormikForm';\nimport FormikTextarea from '../elements/formik/FormikTextarea';\nimport { useAlert } from '../elements/popup/Alert';\nimport { GENERATE_SPECTRUM_FROM_PUBLICATION_STRING } from '../reducer/types/Types';\n\nimport { ModalStyles } from './ModalStyle';\n\nconst styles = css`\n  width: 600px;\n  height: 300px;\n\n  .inner-content {\n    flex: 1;\n    border: none;\n    overflow: hidden;\n    padding: 0px;\n  }\n\n  .text-area {\n    width: 100%;\n    height: 100%;\n    outline: none;\n    resize: none;\n    padding: 0 0 0 15px;\n  }\n`;\n\nconst validationSchema = yup.object({\n  publicationText: yup.string().required(),\n});\n\ninterface ImportPublicationStringModalProps {\n  onClose: () => void;\n}\n\nfunction ImportPublicationStringModal({\n  onClose,\n}: ImportPublicationStringModalProps) {\n  const formRef = useRef<any>();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const publicationStringHandler = useCallback(\n    (values) => {\n      void (async () => {\n        const hideLoading = await alert.showLoading(\n          'Generate spectrum from publication string in progress',\n        );\n        setTimeout(() => {\n          dispatch({\n            type: GENERATE_SPECTRUM_FROM_PUBLICATION_STRING,\n            payload: values,\n          });\n          hideLoading();\n        });\n        onClose();\n      })();\n    },\n    [alert, dispatch, onClose],\n  );\n\n  return (\n    <div css={[ModalStyles, styles]}>\n      <div className=\"header handle\">\n        <span>Import from publication string</span>\n        <CloseButton onClick={onClose} className=\"close-bt\" />\n      </div>\n      <div className=\"inner-content\">\n        <FormikForm\n          ref={formRef}\n          initialValues={{\n            publicationText:\n              '1H NMR (CDCl3, 400MHz) δ 10.58 (b, 1H), 7.40 (d, 1H, J = 8.0 Hz), 6.19 (d, 1H, J = 7.6 Hz), 4.88 (s, 1H), 2.17 (s, 3H), 1.02 (s, 9H), 1.01 (s, 9H), 0.89 (s, 9H)',\n          }}\n          validationSchema={validationSchema}\n          onSubmit={publicationStringHandler}\n        >\n          <FormikTextarea\n            name=\"publicationText\"\n            className=\"text-area\"\n            placeholder=\"Enter publication string\"\n          />\n        </FormikForm>\n      </div>\n      <div className=\"footer-container\">\n        <Button.Done onClick={() => formRef.current.submitForm()}>\n          Import\n        </Button.Done>\n      </div>\n    </div>\n  );\n}\n\nexport default ImportPublicationStringModal;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useRef, useCallback } from 'react';\n\nimport Button from '../elements/Button';\nimport CloseButton from '../elements/CloseButton';\nimport { loadFile, extractFileMetaFromPath } from '../utility/FileUtility';\n\nconst styles = css`\n  display: flex;\n  flex-direction: column;\n  width: 450px;\n  padding: 5px;\n  button:focus {\n    outline: none;\n  }\n  .header {\n    height: 24px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    span {\n      color: #464646;\n      font-size: 15px;\n      flex: 1;\n    }\n\n    button {\n      background-color: transparent;\n      border: none;\n      svg {\n        height: 16px;\n      }\n    }\n  }\n  .container {\n    display: flex;\n    margin: 30px 5px;\n    align-items: center;\n    height: 36px;\n\n    input {\n      padding: 5px;\n      border: 1px solid gray;\n      border-radius: 5px;\n      margin: 2px;\n    }\n    input {\n      flex: 10;\n    }\n    button {\n      flex: 2;\n      height: 100%;\n    }\n  }\n`;\nconst allowedExtensions = ['dx', 'jdx'];\n\ninterface LoadJCAMPModalProps {\n  onLoadClick: (element: any) => void;\n  startLoading: () => void;\n  onClose: (element?: string) => void;\n}\n\nexport default function LoadJCAMPModal({\n  onLoadClick,\n  onClose,\n  startLoading,\n}: LoadJCAMPModalProps) {\n  const pathReft = useRef<any>();\n\n  const loadJCAMPHandler = useCallback(() => {\n    const path = pathReft.current.value;\n    const { name, extension } = extractFileMetaFromPath(path);\n    if (allowedExtensions.includes(extension)) {\n      startLoading?.();\n      void loadFile(path, { asBuffer: true }).then((data) => {\n        const file = {\n          binary: data,\n          name,\n          extension,\n          jcampURL: path,\n        };\n        onLoadClick(file);\n      });\n    } else {\n      onLoadClick(null);\n    }\n  }, [onLoadClick, startLoading]);\n  return (\n    <div css={styles}>\n      <div className=\"header handle\">\n        <span>Load JCAMP Dialog</span>\n\n        <CloseButton onClick={onClose} />\n      </div>\n      <div className=\"container\">\n        <input\n          ref={pathReft}\n          type=\"text\"\n          placeholder=\"Enter URL to JCAMP-DX file\"\n        />\n        <Button.Done onClick={loadJCAMPHandler}>Load</Button.Done>\n      </div>\n    </div>\n  );\n}\n","import { Toolbar } from 'analysis-ui-components';\nimport {\n  SvgNmrRealImag,\n  SvgNmrOverlay3,\n  SvgNmrOverlay3Aligned,\n  SvgNmrAlignBottom,\n  SvgNmrAlignCenter,\n} from 'cheminfo-font';\nimport { Fragment, useCallback, memo, useMemo } from 'react';\nimport {\n  FaDownload,\n  FaFileDownload,\n  FaFileImage,\n  FaCopy,\n  FaFileExport,\n  FaFile,\n  FaFileImport,\n} from 'react-icons/fa';\n\nimport { Info1D } from '../../data/types/data1d';\nimport { Info2D } from '../../data/types/data2d';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport { useLoader } from '../context/LoaderContext';\nimport ToolbarMenu from '../elements/ToolbarMenu';\nimport { useAlert } from '../elements/popup/Alert';\nimport { useModal } from '../elements/popup/Modal';\nimport useCheckExperimentalFeature from '../hooks/useCheckExperimentalFeature';\nimport { useCheckToolsVisibility } from '../hooks/useCheckToolsVisibility';\nimport useDatumWithSpectraStatistics from '../hooks/useDatumWithSpectraStatistics';\nimport useExport from '../hooks/useExport';\nimport useToolsFunctions from '../hooks/useToolsFunctions';\nimport ImportPublicationStringModal from '../modal/ImportPublicationStringModal';\nimport LoadJCAMPModal from '../modal/LoadJCAMPModal';\nimport { ActiveSpectrum, VerticalAlignment } from '../reducer/Reducer';\nimport { DISPLAYER_MODE } from '../reducer/core/Constants';\nimport { LOAD_JCAMP_FILE, SET_LOADING_FLAG } from '../reducer/types/Types';\n\nconst IMPORT_MENU = [\n  {\n    id: 'importFile',\n    icon: <FaFile />,\n    label: 'Import from file system (Press Ctrl + O)',\n  },\n  {\n    id: 'importJDX',\n    icon: <FaFile />,\n    label: 'Add JCAMP-DX from URL',\n  },\n  {\n    id: 'importPublicationString',\n    icon: <FaFile />,\n    label: 'Import from publication string',\n  },\n];\n\nconst EXPORT_MENU = [\n  {\n    id: 'svg',\n    icon: <FaDownload />,\n    label: 'Export as SVG',\n  },\n  {\n    id: 'png',\n    icon: <FaFileImage />,\n    label: 'Export as PNG',\n  },\n  {\n    id: 'json',\n    icon: <FaFileDownload />,\n    label: 'Save data ( Press Ctrl + S )',\n  },\n  {\n    id: 'advance_save',\n    icon: <FaFileDownload />,\n    label: 'Save data as  ( Press Ctrl + Shift + S )',\n  },\n  {\n    id: 'nmre',\n    icon: <FaFileDownload />,\n    label: 'Save NMRE data',\n  },\n  {\n    id: 'copy',\n    icon: <FaCopy />,\n    label: 'Copy image to Clipboard ( Press Ctrl + C )',\n  },\n];\n\ninterface BasicToolBarInnerProps {\n  activeSpectrum: ActiveSpectrum | null;\n  fidCounter: number;\n  ftCounter: number;\n  displayerMode: DISPLAYER_MODE;\n  info: Info1D | Info2D;\n  verticalAlign: {\n    align: VerticalAlignment;\n  };\n}\n\nfunction BasicToolBarInner({\n  info,\n  verticalAlign,\n  displayerMode,\n  ftCounter,\n  fidCounter,\n  activeSpectrum,\n}: BasicToolBarInnerProps) {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const modal = useModal();\n  const openLoader = useLoader();\n\n  const isExperimentalFeature = useCheckExperimentalFeature();\n  const isButtonVisible = useCheckToolsVisibility();\n\n  const importMenu = useMemo(() => {\n    return isExperimentalFeature\n      ? IMPORT_MENU\n      : IMPORT_MENU.filter((item) => item.id !== 'importPublicationString');\n  }, [isExperimentalFeature]);\n\n  const {\n    isRealSpectrumShown,\n    changeSpectrumViewHandler,\n    changeDisplayViewModeHandler,\n    alignSpectrumsVerticallyHandler,\n  } = useToolsFunctions();\n\n  const {\n    saveAsSVGHandler,\n    saveAsPNGHandler,\n    saveAsJSONHandler,\n    saveAsNMREHandler,\n    saveToClipboardHandler,\n    saveAsHandler,\n  } = useExport();\n\n  const LoadJacmpHandler = useCallback(\n    (file) => {\n      if (file) {\n        dispatch({ type: LOAD_JCAMP_FILE, files: [file] });\n        modal.close();\n      } else {\n        alert.error('you file must be one of those extensions [ .jdx, dx ] ');\n      }\n    },\n    [alert, dispatch, modal],\n  );\n\n  const startLoadingHandler = useCallback(() => {\n    modal.close();\n    dispatch({ type: SET_LOADING_FLAG, isLoading: true });\n  }, [dispatch, modal]);\n\n  const importJCAMPFile = useCallback(() => {\n    modal.show(\n      <LoadJCAMPModal\n        onLoadClick={LoadJacmpHandler}\n        onClose={() => modal.close()}\n        startLoading={startLoadingHandler}\n      />,\n      {},\n    );\n  }, [LoadJacmpHandler, modal, startLoadingHandler]);\n\n  const openImportPublicationStringModal = useCallback(() => {\n    modal.show(\n      <ImportPublicationStringModal onClose={() => modal.close()} />,\n      {},\n    );\n  }, [modal]);\n\n  const importHandler = useCallback(\n    ({ id }) => {\n      switch (id) {\n        case 'importFile':\n          openLoader();\n          break;\n        case 'importJDX':\n          importJCAMPFile();\n          break;\n        case 'importPublicationString':\n          openImportPublicationStringModal();\n          break;\n        default:\n          return;\n      }\n    },\n    [openLoader, importJCAMPFile, openImportPublicationStringModal],\n  );\n\n  const exportHandler = useCallback(\n    ({ id }) => {\n      switch (id) {\n        case 'svg':\n          void saveAsSVGHandler();\n          break;\n        case 'png':\n          void saveAsPNGHandler();\n          break;\n        case 'json':\n          void saveAsJSONHandler();\n          break;\n        case 'advance_save':\n          void saveAsHandler();\n          break;\n        case 'nmre':\n          void saveAsNMREHandler();\n          break;\n        case 'copy':\n          void saveToClipboardHandler();\n          break;\n\n        default:\n          break;\n      }\n    },\n    [\n      saveAsSVGHandler,\n      saveAsPNGHandler,\n      saveAsJSONHandler,\n      saveAsHandler,\n      saveAsNMREHandler,\n      saveToClipboardHandler,\n    ],\n  );\n\n  return (\n    <Fragment>\n      {isButtonVisible('import') && (\n        <ToolbarMenu\n          component={<FaFileImport />}\n          toolTip=\"Import\"\n          onClick={(element) => {\n            importHandler(element);\n            return null;\n          }}\n          items={importMenu}\n        />\n      )}\n      {isButtonVisible('exportAs') && (\n        <ToolbarMenu\n          component={<FaFileExport />}\n          toolTip=\"Export As\"\n          onClick={(element) => {\n            exportHandler(element);\n            return null;\n          }}\n          items={EXPORT_MENU}\n        />\n      )}\n\n      {displayerMode === DISPLAYER_MODE.DM_1D &&\n        isButtonVisible('spectraStackAlignments') &&\n        ftCounter > 1 &&\n        (info?.isFt || !activeSpectrum) && (\n          <Toolbar.Item\n            id=\"spectra-alignment\"\n            className=\"cheminfo\"\n            title=\"Spectra alignment ( Press s )\"\n            onClick={changeDisplayViewModeHandler}\n          >\n            {verticalAlign.align === 'stack' ? (\n              <SvgNmrOverlay3Aligned />\n            ) : (\n              <SvgNmrOverlay3 />\n            )}\n          </Toolbar.Item>\n        )}\n      {displayerMode === DISPLAYER_MODE.DM_1D &&\n        isButtonVisible('realImaginary') &&\n        info.isComplex && (\n          <Toolbar.Item\n            id=\"display\"\n            title={isRealSpectrumShown ? 'Display Real ' : 'Display Imaginary'}\n            onClick={changeSpectrumViewHandler}\n            className=\"cheminfo\"\n          >\n            <SvgNmrRealImag />\n          </Toolbar.Item>\n        )}\n      {displayerMode === DISPLAYER_MODE.DM_1D &&\n        isButtonVisible('spectraCenterAlignments') &&\n        (ftCounter > 0 || fidCounter > 0) && (\n          <Toolbar.Item\n            id=\"baseline-position\"\n            title={\n              verticalAlign.align === 'bottom'\n                ? 'Baseline  Center ( Press c )'\n                : 'Baseline  Bottom ( Press c )'\n            }\n            onClick={alignSpectrumsVerticallyHandler}\n            className=\"cheminfo\"\n          >\n            <div style={{ fontSize: 24 }}>\n              {verticalAlign.align === 'bottom' ? (\n                <SvgNmrAlignCenter />\n              ) : (\n                <SvgNmrAlignBottom />\n              )}\n            </div>\n          </Toolbar.Item>\n        )}\n    </Fragment>\n  );\n}\n\nconst MemoizedBasicToolBar = memo(BasicToolBarInner);\n\nexport default function BasicToolBar() {\n  const { activeSpectrum, verticalAlign, displayerMode, activeTab } =\n    useChartData();\n\n  const { info, fidCounter, ftCounter } = useDatumWithSpectraStatistics();\n  return (\n    <MemoizedBasicToolBar\n      {...{\n        info,\n        fidCounter,\n        ftCounter,\n        activeSpectrum,\n        verticalAlign,\n        displayerMode,\n        activeTab,\n      }}\n    />\n  );\n}\n","import { Toolbar } from 'analysis-ui-components';\nimport {\n  useCallback,\n  useState,\n  useEffect,\n  ReactElement,\n  JSXElementConstructor,\n} from 'react';\n\ninterface ToggleButtonProps {\n  isActive?: boolean;\n  value?: any;\n  onChange?: (value: any) => null;\n  children: ReactElement<any, string | JSXElementConstructor<any>>;\n  isVisible?: boolean;\n}\n\nexport default function ToggleButton(\n  props: ToggleButtonProps & { title: string; id: string },\n) {\n  const {\n    children,\n    value = null,\n    isActive = false,\n    onChange = () => null,\n    isVisible = true,\n    id,\n    title,\n  } = props;\n\n  const [active, setActive] = useState(props.isActive);\n\n  const toggleButton = useCallback(() => {\n    const _isActive = !active;\n    setActive(_isActive);\n\n    if (_isActive) {\n      onChange(value);\n    } else {\n      onChange(null);\n    }\n  }, [active, onChange, value]);\n\n  useEffect(() => {\n    setActive(isActive);\n  }, [isActive]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <Toolbar.Item onClick={toggleButton} title={title} id={id} active={active}>\n      {children}\n    </Toolbar.Item>\n  );\n}\n","import {\n  useCallback,\n  useState,\n  useMemo,\n  useEffect,\n  Children,\n  cloneElement,\n  ReactNode,\n} from 'react';\n\nimport ToggleButton from './ToggleButton';\n\ninterface ToggleButtonGroupProps {\n  children: ReactNode;\n  value: string;\n  onChange?: (value: any) => void;\n}\n\nexport default function ToggleButtonGroup({\n  children,\n  value,\n  onChange = () => null,\n}: ToggleButtonGroupProps) {\n  const [toggleButtons, setToggleButtons] = useState<any>([]);\n  const handleOnChange = useCallback(\n    (val) => {\n      const _toggles: Array<any> = [...toggleButtons];\n      const toggles = _toggles.map((toggle) => {\n        return {\n          value: toggle.value,\n          isActive: toggle.value === val ? true : false,\n        };\n      });\n\n      setToggleButtons(toggles);\n      onChange(val);\n    },\n    [onChange, toggleButtons],\n  );\n\n  const mappedChildren = useMemo(() => {\n    let index = 0;\n    return Children.map(children, (child: any) => {\n      if (child) {\n        if (child.type === ToggleButton) {\n          const _child = cloneElement(child, {\n            onChange: handleOnChange,\n            isActive: toggleButtons[index]?.isActive,\n            index,\n          });\n          index++;\n          return _child;\n        } else {\n          return cloneElement(child);\n        }\n      }\n    });\n  }, [children, handleOnChange, toggleButtons]);\n\n  useEffect(() => {\n    const val = Children.map(children, (child: any) => {\n      if (child && child.type === ToggleButton) {\n        return {\n          value: child.props.value,\n          isActive: child.props.value === value ? true : false,\n        };\n      }\n    });\n    setToggleButtons(val);\n  }, [children, value]);\n\n  return <>{mappedChildren}</>;\n}\n","import { Toolbar } from 'analysis-ui-components';\nimport {\n  SvgNmrBaselineCorrection,\n  SvgNmrFourierTransform,\n  SvgNmrIntegrate,\n  SvgNmrMultipleAnalysis,\n  SvgNmrPeakPicking,\n  SvgNmrPhaseCorrection,\n  SvgNmrRangePicking,\n  SvgNmrZeroFilling,\n} from 'cheminfo-font';\nimport { useState, useEffect, useCallback, memo } from 'react';\nimport { FaSearchPlus, FaExpand, FaDiceFour } from 'react-icons/fa';\n\nimport * as Filters from '../../data/Filters';\nimport { Info1D, Data1D } from '../../data/types/data1d';\nimport { Info2D, Data2D } from '../../data/types/data2d';\nimport { useChartData } from '../context/ChartContext';\nimport { useDispatch } from '../context/DispatchContext';\nimport ToggleButton from '../elements/toggle/ToggleButton';\nimport ToggleButtonGroup from '../elements/toggle/ToggleButtonGroup';\nimport { useCheckToolsVisibility } from '../hooks/useCheckToolsVisibility';\nimport useDatumWithSpectraStatistics from '../hooks/useDatumWithSpectraStatistics';\nimport useToolsFunctions from '../hooks/useToolsFunctions';\nimport { ActiveSpectrum } from '../reducer/Reducer';\nimport { DISPLAYER_MODE } from '../reducer/core/Constants';\nimport { APPLY_FFT_FILTER, SET_SELECTED_FILTER } from '../reducer/types/Types';\n\nimport { options } from './ToolTypes';\n\ninterface FunctionToolBarInnerProps {\n  defaultValue: string;\n  activeSpectrum: ActiveSpectrum | null;\n  ftCounter: number;\n  displayerMode: DISPLAYER_MODE;\n  info: Info1D | Info2D;\n  datum: Data1D | Data2D;\n  mode: string;\n}\n\nfunction FunctionToolBarInner({\n  defaultValue,\n  activeSpectrum,\n  info,\n  datum,\n  displayerMode,\n  ftCounter,\n  mode,\n}: FunctionToolBarInnerProps) {\n  const [option, setOption] = useState<string>('');\n  const isButtonVisible = useCheckToolsVisibility();\n\n  const dispatch = useDispatch();\n\n  const { handleChangeOption, handleFullZoomOut } = useToolsFunctions();\n\n  const handleChange = useCallback(\n    (selectedOption) => {\n      setOption(selectedOption);\n      handleChangeOption(selectedOption);\n    },\n    [handleChangeOption],\n  );\n\n  useEffect(() => {\n    setOption(defaultValue);\n  }, [defaultValue]);\n\n  const handleOnFFTFilter = useCallback(() => {\n    dispatch({\n      type: APPLY_FFT_FILTER,\n      value: '',\n    });\n    dispatch({ type: SET_SELECTED_FILTER, selectedFilter: null });\n  }, [dispatch]);\n\n  return (\n    <>\n      <ToggleButtonGroup value={option} onChange={handleChange}>\n        {isButtonVisible('zoomTool') && (\n          <ToggleButton\n            key={options.zoom.id}\n            value={options.zoom.id}\n            id=\"zoomIn\"\n            title={`${options.zoom.label} ( Press z )`}\n          >\n            <div style={{ fontSize: 14 }}>\n              <FaSearchPlus />\n            </div>\n          </ToggleButton>\n        )}\n\n        {isButtonVisible('zoomOutTool') && (\n          <Toolbar.Item\n            id=\"zoom-out\"\n            onClick={handleFullZoomOut}\n            title=\"Horizontal zoom out ( Press f ), Horizontal and Vertical zoom out, double click ( Press ff )\"\n          >\n            <div style={{ fontSize: 14 }}>\n              <FaExpand />\n            </div>\n          </Toolbar.Item>\n        )}\n\n        {displayerMode === DISPLAYER_MODE.DM_1D && isButtonVisible('peakTool') && (\n          <ToggleButton\n            key={options.peakPicking.id}\n            value={options.peakPicking.id}\n            title={`${options.peakPicking.label} ( Press p )`}\n            isVisible={activeSpectrum && !info?.isFid ? true : false}\n            id=\"peakPicking\"\n          >\n            <SvgNmrPeakPicking />\n          </ToggleButton>\n        )}\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('integralTool') && (\n            <ToggleButton\n              key={options.integral.id}\n              value={options.integral.id}\n              isVisible={activeSpectrum && !info?.isFid ? true : false}\n              id=\"integralPicking\"\n              title={`${options.integral.label} ( Press i )`}\n            >\n              <SvgNmrIntegrate />\n            </ToggleButton>\n          )}\n        {displayerMode === DISPLAYER_MODE.DM_2D &&\n          isButtonVisible('zonePickingTool') && (\n            <ToggleButton\n              key={options.zone2D.id}\n              value={options.zone2D.id}\n              id=\"zone2d\"\n              isVisible={activeSpectrum && !info?.isFid ? true : false}\n              title={`${options.zone2D.label} ( Press r )`}\n            >\n              <FaDiceFour />\n            </ToggleButton>\n          )}\n        {displayerMode === DISPLAYER_MODE.DM_2D &&\n          isButtonVisible('slicingTool') && (\n            <ToggleButton\n              key={options.slicingTool.id}\n              value={options.slicingTool.id}\n              isVisible={activeSpectrum && !info?.isFid ? true : false}\n              id=\"slic\"\n              title={`${options.slicingTool.label}`}\n            >\n              <p>Slic</p>\n            </ToggleButton>\n          )}\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('autoRangesTool') && (\n            <ToggleButton\n              key={options.rangesPicking.id}\n              value={options.rangesPicking.id}\n              isVisible={activeSpectrum && !info?.isFid ? true : false}\n              title={`${options.rangesPicking.label} ( Press r )`}\n              id=\"ranges-pick\"\n            >\n              <SvgNmrRangePicking />\n            </ToggleButton>\n          )}\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('multipleSpectraAnalysisTool') &&\n          ftCounter > 1 &&\n          mode === 'RTL' && (\n            <ToggleButton\n              key={options.multipleSpectraAnalysis.id}\n              value={options.multipleSpectraAnalysis.id}\n              id=\"multipleSpectraAnalysis\"\n              title={options.multipleSpectraAnalysis.label}\n            >\n              <SvgNmrMultipleAnalysis />\n            </ToggleButton>\n          )}\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('zeroFillingTool') && (\n            <ToggleButton\n              key={options.zeroFilling.id}\n              value={options.zeroFilling.id}\n              isVisible={Filters.zeroFilling.isApplicable({ info })}\n              id=\"zeroFilling\"\n              title={options.zeroFilling.label}\n            >\n              <SvgNmrZeroFilling />\n            </ToggleButton>\n          )}\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('phaseCorrectionTool') && (\n            <ToggleButton\n              key={options.phaseCorrection.id}\n              value={options.phaseCorrection.id}\n              id=\"phaseCorrection\"\n              title={`${options.phaseCorrection.label} ( Press a )`}\n              isVisible={\n                activeSpectrum &&\n                info &&\n                Filters.phaseCorrection.isApplicable({ info }) &&\n                (datum as Data1D).im\n                  ? true\n                  : false\n              }\n            >\n              <SvgNmrPhaseCorrection />\n            </ToggleButton>\n          )}\n\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('baseLineCorrectionTool') && (\n            <ToggleButton\n              key={options.baseLineCorrection.id}\n              value={options.baseLineCorrection.id}\n              id=\"baseLineCorrection\"\n              title={`${options.baseLineCorrection.label} ( Press b )`}\n              isVisible={\n                activeSpectrum &&\n                info &&\n                Filters.baselineCorrection.isApplicable({ info })\n                  ? true\n                  : false\n              }\n            >\n              <SvgNmrBaselineCorrection />\n            </ToggleButton>\n          )}\n\n        {displayerMode === DISPLAYER_MODE.DM_1D &&\n          isButtonVisible('exclusionZonesTool') &&\n          !info?.isFid &&\n          ftCounter > 0 && (\n            <ToggleButton\n              key={options.exclusionZones.id}\n              value={options.exclusionZones.id}\n              title={`${options.exclusionZones.label} ( Press e )`}\n              id=\"exclusionZones\"\n            >\n              <div style={{ fontSize: 18 }}>\n                <SvgNmrMultipleAnalysis />\n              </div>\n            </ToggleButton>\n          )}\n      </ToggleButtonGroup>\n\n      {displayerMode === DISPLAYER_MODE.DM_1D &&\n        isButtonVisible('FFTTool') &&\n        info &&\n        Filters.fft.isApplicable({ info }) && (\n          <Toolbar.Item\n            id=\"fft-filter\"\n            className=\"cheminfo\"\n            title=\"FFT Filter\"\n            onClick={handleOnFFTFilter}\n          >\n            <SvgNmrFourierTransform />\n          </Toolbar.Item>\n        )}\n    </>\n  );\n}\n\nconst MemoizedFunctionToolBar = memo(FunctionToolBarInner);\n\nexport default function FunctionToolBar({\n  defaultValue = options.zoom.id,\n}: {\n  defaultValue?: string;\n}) {\n  const { activeSpectrum, displayerMode, activeTab, mode } = useChartData();\n\n  const data = useDatumWithSpectraStatistics();\n\n  return (\n    <MemoizedFunctionToolBar\n      {...{\n        ...data,\n        activeSpectrum,\n        displayerMode,\n        activeTab,\n        defaultValue,\n        mode,\n      }}\n    />\n  );\n}\n","import { Toolbar } from 'analysis-ui-components';\nimport { memo } from 'react';\n\nimport { useChartData } from '../context/ChartContext';\n\nimport BasicToolBar from './BasicToolBar';\nimport FunctionToolBar from './FunctionToolBar';\n\ninterface ToolBarInnerProps {\n  selectedTool: string;\n}\n\nfunction ToolBarInner({ selectedTool }: ToolBarInnerProps) {\n  return (\n    <div style={{ fontSize: 18 }}>\n      <Toolbar orientation=\"vertical\">\n        <FunctionToolBar defaultValue={selectedTool} />\n        {/* <HistoryToolBar /> */}\n        <BasicToolBar />\n      </Toolbar>\n    </div>\n  );\n}\n\nconst MemoizedToolBar = memo(ToolBarInner);\n\nexport default function ToolBar() {\n  const {\n    toolOptions: { selectedTool },\n  } = useChartData();\n\n  return <MemoizedToolBar {...{ selectedTool }} />;\n}\n","/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport { RootLayout } from 'analysis-ui-components';\nimport { CorrelationData } from 'nmr-correlation';\nimport {\n  useEffect,\n  useCallback,\n  useReducer,\n  useMemo,\n  useRef,\n  memo,\n  Reducer,\n  ReactElement,\n  ReactNode,\n} from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { useToggle, useFullscreen } from 'react-use';\n\nimport { Datum1D } from '../data/types/data1d';\nimport { Datum2D } from '../data/types/data2d';\nimport checkModifierKeyActivated from '../data/utilities/checkModifierKeyActivated';\nimport { PanelPreferencesType } from '../types/PanelPreferencesType';\n\nimport Viewer1D from './1d/Viewer1D';\nimport Viewer2D from './2d/Viewer2D';\nimport ErrorOverlay from './ErrorOverlay';\nimport KeysListenerTracker from './EventsTrackers/KeysListenerTracker';\nimport { SplitPaneWrapper } from './SplitPaneWrapper';\nimport { AssignmentProvider } from './assignment';\nimport { ChartDataProvider } from './context/ChartContext';\nimport { DispatchProvider } from './context/DispatchContext';\nimport { GlobalProvider } from './context/GlobalContext';\nimport { PreferencesProvider } from './context/PreferencesContext';\nimport { AlertProvider } from './elements/popup/Alert';\nimport { ModalProvider } from './elements/popup/Modal';\nimport Header from './header/Header';\nimport { HighlightProvider } from './highlight';\nimport DropZone from './loader/DropZone';\nimport { defaultGetSpinner, SpinnerProvider } from './loader/SpinnerContext';\nimport Panels from './panels/Panels';\nimport checkActionType from './reducer/IgnoreActions';\nimport {\n  spectrumReducer,\n  initialState,\n  dispatchMiddleware,\n  initState,\n  State,\n} from './reducer/Reducer';\nimport { DISPLAYER_MODE } from './reducer/core/Constants';\nimport preferencesReducer, {\n  preferencesInitialState,\n  PreferencesState,\n  initPreferencesState,\n} from './reducer/preferencesReducer';\nimport {\n  INITIATE,\n  SET_LOADING_FLAG,\n  SET_MOUSE_OVER_DISPLAYER,\n} from './reducer/types/Types';\nimport ToolBar from './toolbar/ToolBar';\n\nconst viewerContainerStyle = css`\n  border: 0.55px #e6e6e6 solid;\n  display: flex;\n  flex: 1;\n  flex-direction: 'column';\n  height: 100%;\n  margin-left: -1px;\n`;\n\nconst containerStyles = css`\n  background-color: white;\n  width: 100%;\n  display: block;\n  height: 100%;\n  font-size: 14px;\n\n  div:focus {\n    outline: none !important;\n  }\n\n  button {\n    cursor: pointer;\n    &:disabled {\n      cursor: default;\n    }\n  }\n\n  button:active,\n  button:hover,\n  button:focus,\n  [type='button']:focus,\n  button {\n    outline: none !important;\n  }\n  * {\n    -webkit-user-drag: none;\n    -moz-user-drag: none;\n    -o-user-drag: none;\n    user-drag: none;\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n\n  .SplitPane {\n    height: 100%;\n  }\n`;\n\nexport type NMRiumWorkspace =\n  | 'exercise'\n  | 'process1D'\n  | 'default'\n  | 'prediction'\n  | 'embedded';\n\nexport interface NMRiumProps {\n  data?: NMRiumData;\n  onDataChange?: (data: State) => void;\n  workspace?: NMRiumWorkspace;\n  preferences?: NMRiumPreferences;\n  emptyText?: ReactNode;\n  /**\n   * Returns a custom spinner that will be rendered while loading data.\n   */\n  getSpinner?: () => ReactElement;\n}\n\nexport type NMRiumPreferences = Partial<{\n  general: Partial<{\n    disableMultipletAnalysis: boolean;\n    hideSetSumFromMolecule: boolean;\n    hideGeneralSettings: boolean;\n    experimentalFeatures: PanelPreferencesType;\n    hidePanelOnLoad: boolean;\n  }>;\n  panels: Partial<{\n    spectraPanel: PanelPreferencesType;\n    informationPanel: PanelPreferencesType;\n    peaksPanel: PanelPreferencesType;\n    integralsPanel: PanelPreferencesType;\n    rangesPanel: PanelPreferencesType;\n    structuresPanel: PanelPreferencesType;\n    filtersPanel: PanelPreferencesType;\n    zonesPanel: PanelPreferencesType;\n    summaryPanel: PanelPreferencesType;\n    multipleSpectraAnalysisPanel: PanelPreferencesType;\n    databasePanel: PanelPreferencesType;\n    predictionPanel: PanelPreferencesType;\n  }>;\n  toolBarButtons: Partial<{\n    zoomTool: boolean;\n    zoomOutTool: boolean;\n    import: boolean;\n    exportAs: boolean;\n    spectraStackAlignments: boolean;\n    spectraCenterAlignments: boolean;\n    realImaginary: boolean;\n    peakTool: boolean;\n    integralTool: boolean;\n    zonePickingTool: boolean;\n    slicingTool: boolean;\n    autoRangesTool: boolean;\n    zeroFillingTool: boolean;\n    phaseCorrectionTool: boolean;\n    baseLineCorrectionTool: boolean;\n    FFTTool: boolean;\n    multipleSpectraAnalysisTool: boolean;\n    exclusionZonesTool: boolean;\n  }>;\n}>;\n\nexport type Molecules = Array<{ molfile: string }>;\nexport type Spectra = Array<Datum1D | Datum2D>;\n\ntype DeepPartial<T> = {\n  [P in keyof T]?: DeepPartial<T[P]>;\n};\n\nexport interface NMRiumData {\n  molecules?: Molecules;\n  spectra: DeepPartial<Spectra>;\n  correlations?: CorrelationData;\n}\n\nconst defaultPreferences = {};\nconst defaultData: NMRiumData = {\n  spectra: [],\n};\n\nfunction NMRium(props: NMRiumProps) {\n  return (\n    <RootLayout style={{ width: '100%' }}>\n      <ErrorBoundary FallbackComponent={ErrorOverlay}>\n        <InnerNMRium {...props} />\n      </ErrorBoundary>\n    </RootLayout>\n  );\n}\n\nfunction InnerNMRium({\n  data: dataProp = defaultData,\n  workspace,\n  preferences = defaultPreferences,\n  getSpinner = defaultGetSpinner,\n  onDataChange,\n  emptyText,\n}: NMRiumProps) {\n  const rootRef = useRef<HTMLDivElement>(null);\n  const elementsWrapperRef = useRef<HTMLDivElement>(null);\n  const [show, toggle] = useToggle(false);\n\n  const isFullscreen = useFullscreen(rootRef, show, {\n    onClose: () => {\n      toggle(false);\n    },\n  });\n\n  const [state, dispatch] = useReducer<Reducer<State, any>, State>(\n    spectrumReducer,\n    initialState,\n    initState,\n  );\n\n  const [preferencesState, dispatchPreferences] = useReducer<\n    Reducer<PreferencesState, any>,\n    PreferencesState\n  >(preferencesReducer, preferencesInitialState, initPreferencesState);\n\n  const { displayerMode, data: spectraData } = state;\n\n  useEffect(() => {\n    if (checkActionType(state.actionType)) {\n      onDataChange?.(state);\n    }\n  }, [onDataChange, state]);\n\n  const dispatchMiddleWare = useMemo(() => {\n    return dispatchMiddleware(dispatch);\n  }, []);\n\n  useEffect(() => {\n    rootRef.current?.focus();\n  }, [isFullscreen]);\n\n  useEffect(() => {\n    dispatchPreferences({\n      type: 'INIT_PREFERENCES',\n      payload: {\n        display: preferences,\n        workspace,\n        dispatch: dispatchPreferences,\n      },\n    });\n  }, [preferences, workspace]);\n\n  useEffect(() => {\n    dispatchMiddleWare({ type: SET_LOADING_FLAG, isLoading: true });\n    if (dataProp) {\n      dispatchMiddleWare({ type: INITIATE, payload: dataProp });\n    }\n  }, [dataProp, dispatchMiddleWare]);\n\n  const preventContextMenuHandler = useCallback((e) => {\n    if (!checkModifierKeyActivated(e)) {\n      e.preventDefault();\n    }\n  }, []);\n\n  const mainDivRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    const div = mainDivRef.current;\n    if (!div) {\n      return;\n    }\n    function mouseEnterHandler() {\n      dispatchMiddleWare({ type: SET_MOUSE_OVER_DISPLAYER, payload: true });\n    }\n    function mouseLeaveHandler() {\n      dispatchMiddleWare({ type: SET_MOUSE_OVER_DISPLAYER, payload: false });\n    }\n    div.addEventListener('mouseenter', mouseEnterHandler);\n    div.addEventListener('mouseleave', mouseLeaveHandler);\n    return () => {\n      div.removeEventListener('mouseenter', mouseEnterHandler);\n      div.removeEventListener('mouseleave', mouseLeaveHandler);\n    };\n  }, [dispatchMiddleWare]);\n\n  return (\n    <GlobalProvider\n      value={{\n        rootRef: rootRef.current,\n        elementsWrapperRef: elementsWrapperRef.current,\n      }}\n    >\n      <PreferencesProvider value={preferencesState}>\n        <div ref={mainDivRef} style={{ height: '100%', position: 'relative' }}>\n          <AlertProvider wrapperRef={elementsWrapperRef.current}>\n            <DispatchProvider value={dispatchMiddleWare}>\n              <ChartDataProvider value={state}>\n                <ModalProvider wrapperRef={elementsWrapperRef.current}>\n                  <HighlightProvider>\n                    <AssignmentProvider spectraData={spectraData}>\n                      <SpinnerProvider value={getSpinner}>\n                        <div\n                          className=\"nmrium-container\"\n                          ref={rootRef}\n                          css={containerStyles}\n                          onContextMenu={preventContextMenuHandler}\n                          style={{ height: '100%', width: '100%' }}\n                        >\n                          <DropZone>\n                            <div\n                              style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                backgroundColor: 'white',\n                                width: '100%',\n                              }}\n                            >\n                              <Header\n                                isFullscreen={isFullscreen}\n                                onMaximize={toggle}\n                              />\n\n                              <div\n                                style={{\n                                  display: 'flex',\n                                  flexDirection: 'row',\n                                  height: '100%',\n                                }}\n                              >\n                                <ToolBar />\n                                <SplitPaneWrapper>\n                                  <div css={viewerContainerStyle}>\n                                    <KeysListenerTracker />\n                                    <div\n                                      data-test-id=\"viewer\"\n                                      style={{\n                                        width: '100%',\n                                        height: '100%',\n                                      }}\n                                    >\n                                      {displayerMode ===\n                                      DISPLAYER_MODE.DM_1D ? (\n                                        <Viewer1D emptyText={emptyText} />\n                                      ) : (\n                                        <Viewer2D emptyText={emptyText} />\n                                      )}\n                                    </div>\n                                  </div>\n                                  <Panels />\n                                </SplitPaneWrapper>\n\n                                <div\n                                  ref={elementsWrapperRef}\n                                  key={String(isFullscreen)}\n                                  id=\"main-wrapper\"\n                                  style={{\n                                    position: 'absolute',\n                                    pointerEvents: 'none',\n                                    zIndex: 0,\n                                    left: 0,\n                                    right: 0,\n                                    top: 0,\n                                    bottom: 0,\n                                  }}\n                                />\n                              </div>\n                            </div>\n                          </DropZone>\n                        </div>\n                      </SpinnerProvider>\n                    </AssignmentProvider>\n                  </HighlightProvider>\n                </ModalProvider>\n              </ChartDataProvider>\n            </DispatchProvider>\n          </AlertProvider>\n        </div>\n      </PreferencesProvider>\n    </GlobalProvider>\n  );\n}\nexport default memo(NMRium);\n","import { DropZone } from 'analysis-ui-components';\nimport debounce from 'lodash/debounce';\nimport { useState, useEffect, useCallback } from 'react';\nimport { ObjectInspector } from 'react-inspector';\n\nimport NMRium from '../../component/NMRium';\nimport { loadFiles } from '../../component/utility/FileUtility';\n\nfunction searchDeep(obj, searchKey) {\n  let result: any = [];\n  function objectHelper(obj) {\n    Object.keys(obj).forEach((key) => {\n      if (searchKey === key) {\n        result.push({ [key]: obj[key] });\n      }\n      if (Array.isArray(obj[key])) {\n        obj[key].forEach((object) => {\n          objectHelper(object);\n        });\n      } else if (typeof obj[key] === 'object' && obj[key] !== null) {\n        objectHelper(obj[key]);\n      }\n    });\n  }\n\n  objectHelper(obj);\n  return result;\n}\n\nfunction Inspector(data: any) {\n  const [filteredData, seData] = useState<any>();\n  const [key, setKey] = useState<string>('');\n  useEffect(() => {\n    const result = searchDeep(data, key);\n    seData(key ? result : data);\n  }, [data, key]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleSearch = useCallback(\n    debounce((e) => {\n      const key = e.target.value;\n      setKey(key);\n    }, 500),\n    [data],\n  );\n\n  return (\n    <div\n      style={{ display: 'flex', flexDirection: 'column', paddingTop: '10px' }}\n    >\n      <input\n        style={{ border: '1px solid gray', padding: '5px' }}\n        type=\"text\"\n        placeholder=\"Search for key...\"\n        onChange={handleSearch}\n      />\n      <ObjectInspector data={filteredData} />;\n    </div>\n  );\n}\n\nexport default function Test() {\n  const [data, setData] = useState<any>();\n  const [callBackData, setCallBackData] = useState<any>({});\n\n  const dropFileHandler = useCallback((dropfiles) => {\n    void (async () => {\n      try {\n        const files = await loadFiles<{ binary: any }>(dropfiles, {\n          asBuffer: true,\n        });\n\n        const decoder = new TextDecoder('utf8');\n        const data = JSON.parse(decoder.decode(files[0].binary));\n        setData(data);\n      } catch (e) {\n        // eslint-disable-next-line no-alert\n        alert('Invalid JSON file');\n      }\n    })();\n  }, []);\n  const dataChangeHandler = useCallback((data) => {\n    setCallBackData(data);\n  }, []);\n\n  return (\n    <div style={{ display: 'flex', height: '100vh', padding: '20px' }}>\n      <div style={{ flex: 9 }}>\n        <NMRium data={data} onDataChange={dataChangeHandler} />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '10px',\n          flex: 3,\n        }}\n      >\n        <div style={{ flex: 3 }}>\n          <DropZone onDrop={dropFileHandler} color=\"gray\" />\n        </div>\n        <div style={{ flex: 9 }}>\n          <Inspector data={callBackData} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { lazy, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Test from '../views/Test';\n\nconst TestHighlight = lazy(() => import('./TestHighlight'));\n\nexport default function TestRoutes() {\n  return (\n    <Suspense fallback={null}>\n      <Switch>\n        <Route path=\"/test/highlight\" component={TestHighlight} />\n        <Route path=\"/\" component={Test} />\n        <Route render={() => <div>Page not found</div>} />\n      </Switch>\n    </Suspense>\n  );\n}\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Main from './demo/layouts/Main';\nimport TestRoutes from './demo/test/TestRoutes';\n\n// Reset styles so they do not affect development of the React component.\nimport 'modern-normalize/modern-normalize.css';\nimport './demo/preflight.css';\n\nimport './demo/index.css';\n\nconst rootElement = document.getElementById('root');\nif (!rootElement) {\n  throw new Error('#root element not found');\n}\n\nconst root = createRoot(rootElement);\nroot.render(\n  <HashRouter>\n    <Switch>\n      <Route path=\"/test\" component={TestRoutes} />\n      <Route path=\"/\" render={(props) => <Main {...props} />} />\n    </Switch>\n  </HashRouter>,\n);\n"],"file":"assets/index.5624898c.js"}